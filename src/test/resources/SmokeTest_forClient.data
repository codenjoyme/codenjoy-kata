1: 1:BoardData {
1: 1:  'description': [
1: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
1: 1:    'Please write js method.',
1: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
1: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
1: 1:  ],
1: 1:  'expectedAnswer': 'world',
1: 1:  'history': [],
1: 1:  'info': ['❌f(hello) = ??? != world'],
1: 1:  'level': 0,
1: 1:  'nextQuestion': 'hello',
1: 1:  'questions': ['hello']
1: 1:}
1: 1:Scores: 0
1: 1:Answer: message('['world']')
1: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
2: 1:BoardData {
2: 1:  'description': [
2: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
2: 1:    'Please write js method.',
2: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
2: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
2: 1:  ],
2: 1:  'expectedAnswer': 'hello',
2: 1:  'history': [{
2: 1:    'answer': 'world',
2: 1:    'question': 'hello',
2: 1:    'valid': true
2: 1:  }],
2: 1:  'info': [
2: 1:    '✅f(hello) = world',
2: 1:    '❌f(world) = ??? != hello'
2: 1:  ],
2: 1:  'level': 0,
2: 1:  'nextQuestion': 'world',
2: 1:  'questions': [
2: 1:    'hello',
2: 1:    'world'
2: 1:  ]
2: 1:}
2: 1:Scores: 1
2: 1:Answer: message('['world', 'hello']')
2: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
3: 1:BoardData {
3: 1:  'description': [
3: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
3: 1:    'Please write js method.',
3: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
3: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
3: 1:  ],
3: 1:  'expectedAnswer': 'qwe',
3: 1:  'history': [
3: 1:    {
3: 1:      'answer': 'world',
3: 1:      'question': 'hello',
3: 1:      'valid': true
3: 1:    },
3: 1:    {
3: 1:      'answer': 'hello',
3: 1:      'question': 'world',
3: 1:      'valid': true
3: 1:    }
3: 1:  ],
3: 1:  'info': [
3: 1:    '✅f(hello) = world',
3: 1:    '✅f(world) = hello',
3: 1:    '❌f(qwe) = ??? != qwe'
3: 1:  ],
3: 1:  'level': 0,
3: 1:  'nextQuestion': 'qwe',
3: 1:  'questions': [
3: 1:    'hello',
3: 1:    'world',
3: 1:    'qwe'
3: 1:  ]
3: 1:}
3: 1:Scores: 2
3: 1:Answer: message('['world', 'hello', 'qwe']')
3: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
4: 1:BoardData {
4: 1:  'description': [
4: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
4: 1:    'Please write js method.',
4: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
4: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
4: 1:  ],
4: 1:  'expectedAnswer': 'asd',
4: 1:  'history': [
4: 1:    {
4: 1:      'answer': 'world',
4: 1:      'question': 'hello',
4: 1:      'valid': true
4: 1:    },
4: 1:    {
4: 1:      'answer': 'hello',
4: 1:      'question': 'world',
4: 1:      'valid': true
4: 1:    },
4: 1:    {
4: 1:      'answer': 'qwe',
4: 1:      'question': 'qwe',
4: 1:      'valid': true
4: 1:    }
4: 1:  ],
4: 1:  'info': [
4: 1:    '✅f(hello) = world',
4: 1:    '✅f(world) = hello',
4: 1:    '✅f(qwe) = qwe',
4: 1:    '❌f(asd) = ??? != asd'
4: 1:  ],
4: 1:  'level': 0,
4: 1:  'nextQuestion': 'asd',
4: 1:  'questions': [
4: 1:    'hello',
4: 1:    'world',
4: 1:    'qwe',
4: 1:    'asd'
4: 1:  ]
4: 1:}
4: 1:Scores: 3
4: 1:Answer: message('['world', 'hello', 'qwe', 'asd']')
4: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
5: 1:BoardData {
5: 1:  'description': [
5: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
5: 1:    'Please write js method.',
5: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
5: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
5: 1:  ],
5: 1:  'expectedAnswer': 'zxc',
5: 1:  'history': [
5: 1:    {
5: 1:      'answer': 'world',
5: 1:      'question': 'hello',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'hello',
5: 1:      'question': 'world',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'qwe',
5: 1:      'question': 'qwe',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'asd',
5: 1:      'question': 'asd',
5: 1:      'valid': true
5: 1:    }
5: 1:  ],
5: 1:  'info': [
5: 1:    '✅f(hello) = world',
5: 1:    '✅f(world) = hello',
5: 1:    '✅f(qwe) = qwe',
5: 1:    '✅f(asd) = asd',
5: 1:    '❌f(zxc) = ??? != zxc'
5: 1:  ],
5: 1:  'level': 0,
5: 1:  'nextQuestion': 'zxc',
5: 1:  'questions': [
5: 1:    'hello',
5: 1:    'world',
5: 1:    'qwe',
5: 1:    'asd',
5: 1:    'zxc'
5: 1:  ]
5: 1:}
5: 1:Scores: 4
5: 1:Answer: message('['world', 'hello', 'qwe', 'asd', 'zxc']')
5: 1:Fire Event: PassTest{complexity=0, testCount=5}
5: 1:Fire Event: NextAlgorithm{complexity=0, time=0}
------------------------------------------
6: 1:BoardData {
6: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
6: 1:  'history': [
6: 1:    {
6: 1:      'answer': 'world',
6: 1:      'question': 'hello',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'hello',
6: 1:      'question': 'world',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'qwe',
6: 1:      'question': 'qwe',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'asd',
6: 1:      'question': 'asd',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'zxc',
6: 1:      'question': 'zxc',
6: 1:      'valid': true
6: 1:    }
6: 1:  ],
6: 1:  'info': [
6: 1:    '✅f(hello) = world',
6: 1:    '✅f(world) = hello',
6: 1:    '✅f(qwe) = qwe',
6: 1:    '✅f(asd) = asd',
6: 1:    '✅f(zxc) = zxc'
6: 1:  ],
6: 1:  'level': 0,
6: 1:  'questions': []
6: 1:}
6: 1:Scores: 5
6: 1:Answer: message('StartNextLevel')
6: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
7: 1:BoardData {
7: 1:  'description': [
7: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
7: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
7: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
7: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
7: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
7: 1:    'Please write optimized code without any duplication.',
7: 1:    'For divider 11 - the word must be 'Duzz'.',
7: 1:    'For divider 13 - the word must be 'Cazz'.'
7: 1:  ],
7: 1:  'expectedAnswer': '1',
7: 1:  'history': [],
7: 1:  'info': ['❌f(1) = ??? != 1'],
7: 1:  'level': 1,
7: 1:  'nextQuestion': '1',
7: 1:  'questions': ['1']
7: 1:}
7: 1:Scores: 5
7: 1:Answer: message('['1']')
7: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
8: 1:BoardData {
8: 1:  'description': [
8: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
8: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
8: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
8: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
8: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
8: 1:    'Please write optimized code without any duplication.',
8: 1:    'For divider 11 - the word must be 'Duzz'.',
8: 1:    'For divider 13 - the word must be 'Cazz'.'
8: 1:  ],
8: 1:  'expectedAnswer': '2',
8: 1:  'history': [{
8: 1:    'answer': '1',
8: 1:    'question': '1',
8: 1:    'valid': true
8: 1:  }],
8: 1:  'info': [
8: 1:    '✅f(1) = 1',
8: 1:    '❌f(2) = ??? != 2'
8: 1:  ],
8: 1:  'level': 1,
8: 1:  'nextQuestion': '2',
8: 1:  'questions': [
8: 1:    '1',
8: 1:    '2'
8: 1:  ]
8: 1:}
8: 1:Scores: 6
8: 1:Answer: message('['1', '2']')
8: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
9: 1:BoardData {
9: 1:  'description': [
9: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
9: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
9: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
9: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
9: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
9: 1:    'Please write optimized code without any duplication.',
9: 1:    'For divider 11 - the word must be 'Duzz'.',
9: 1:    'For divider 13 - the word must be 'Cazz'.'
9: 1:  ],
9: 1:  'expectedAnswer': 'Fizz',
9: 1:  'history': [
9: 1:    {
9: 1:      'answer': '1',
9: 1:      'question': '1',
9: 1:      'valid': true
9: 1:    },
9: 1:    {
9: 1:      'answer': '2',
9: 1:      'question': '2',
9: 1:      'valid': true
9: 1:    }
9: 1:  ],
9: 1:  'info': [
9: 1:    '✅f(1) = 1',
9: 1:    '✅f(2) = 2',
9: 1:    '❌f(3) = ??? != Fizz'
9: 1:  ],
9: 1:  'level': 1,
9: 1:  'nextQuestion': '3',
9: 1:  'questions': [
9: 1:    '1',
9: 1:    '2',
9: 1:    '3'
9: 1:  ]
9: 1:}
9: 1:Scores: 7
9: 1:Answer: message('['1', '2', 'Fizz']')
9: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
10: 1:BoardData {
10: 1:  'description': [
10: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
10: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
10: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
10: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
10: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
10: 1:    'Please write optimized code without any duplication.',
10: 1:    'For divider 11 - the word must be 'Duzz'.',
10: 1:    'For divider 13 - the word must be 'Cazz'.'
10: 1:  ],
10: 1:  'expectedAnswer': '4',
10: 1:  'history': [
10: 1:    {
10: 1:      'answer': '1',
10: 1:      'question': '1',
10: 1:      'valid': true
10: 1:    },
10: 1:    {
10: 1:      'answer': '2',
10: 1:      'question': '2',
10: 1:      'valid': true
10: 1:    },
10: 1:    {
10: 1:      'answer': 'Fizz',
10: 1:      'question': '3',
10: 1:      'valid': true
10: 1:    }
10: 1:  ],
10: 1:  'info': [
10: 1:    '✅f(1) = 1',
10: 1:    '✅f(2) = 2',
10: 1:    '✅f(3) = Fizz',
10: 1:    '❌f(4) = ??? != 4'
10: 1:  ],
10: 1:  'level': 1,
10: 1:  'nextQuestion': '4',
10: 1:  'questions': [
10: 1:    '1',
10: 1:    '2',
10: 1:    '3',
10: 1:    '4'
10: 1:  ]
10: 1:}
10: 1:Scores: 8
10: 1:Answer: message('['1', '2', 'Fizz', '4']')
10: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
11: 1:BoardData {
11: 1:  'description': [
11: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
11: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
11: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
11: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
11: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
11: 1:    'Please write optimized code without any duplication.',
11: 1:    'For divider 11 - the word must be 'Duzz'.',
11: 1:    'For divider 13 - the word must be 'Cazz'.'
11: 1:  ],
11: 1:  'expectedAnswer': 'Buzz',
11: 1:  'history': [
11: 1:    {
11: 1:      'answer': '1',
11: 1:      'question': '1',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': '2',
11: 1:      'question': '2',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': 'Fizz',
11: 1:      'question': '3',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': '4',
11: 1:      'question': '4',
11: 1:      'valid': true
11: 1:    }
11: 1:  ],
11: 1:  'info': [
11: 1:    '✅f(1) = 1',
11: 1:    '✅f(2) = 2',
11: 1:    '✅f(3) = Fizz',
11: 1:    '✅f(4) = 4',
11: 1:    '❌f(5) = ??? != Buzz'
11: 1:  ],
11: 1:  'level': 1,
11: 1:  'nextQuestion': '5',
11: 1:  'questions': [
11: 1:    '1',
11: 1:    '2',
11: 1:    '3',
11: 1:    '4',
11: 1:    '5'
11: 1:  ]
11: 1:}
11: 1:Scores: 9
11: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz']')
11: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
12: 1:BoardData {
12: 1:  'description': [
12: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
12: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
12: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
12: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
12: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
12: 1:    'Please write optimized code without any duplication.',
12: 1:    'For divider 11 - the word must be 'Duzz'.',
12: 1:    'For divider 13 - the word must be 'Cazz'.'
12: 1:  ],
12: 1:  'expectedAnswer': 'Fizz',
12: 1:  'history': [
12: 1:    {
12: 1:      'answer': '1',
12: 1:      'question': '1',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': '2',
12: 1:      'question': '2',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': 'Fizz',
12: 1:      'question': '3',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': '4',
12: 1:      'question': '4',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': 'Buzz',
12: 1:      'question': '5',
12: 1:      'valid': true
12: 1:    }
12: 1:  ],
12: 1:  'info': [
12: 1:    '✅f(1) = 1',
12: 1:    '✅f(2) = 2',
12: 1:    '✅f(3) = Fizz',
12: 1:    '✅f(4) = 4',
12: 1:    '✅f(5) = Buzz',
12: 1:    '❌f(6) = ??? != Fizz'
12: 1:  ],
12: 1:  'level': 1,
12: 1:  'nextQuestion': '6',
12: 1:  'questions': [
12: 1:    '1',
12: 1:    '2',
12: 1:    '3',
12: 1:    '4',
12: 1:    '5',
12: 1:    '6'
12: 1:  ]
12: 1:}
12: 1:Scores: 10
12: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz']')
12: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
13: 1:BoardData {
13: 1:  'description': [
13: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
13: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
13: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
13: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
13: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
13: 1:    'Please write optimized code without any duplication.',
13: 1:    'For divider 11 - the word must be 'Duzz'.',
13: 1:    'For divider 13 - the word must be 'Cazz'.'
13: 1:  ],
13: 1:  'expectedAnswer': 'Muzz',
13: 1:  'history': [
13: 1:    {
13: 1:      'answer': '1',
13: 1:      'question': '1',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': '2',
13: 1:      'question': '2',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Fizz',
13: 1:      'question': '3',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': '4',
13: 1:      'question': '4',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Buzz',
13: 1:      'question': '5',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Fizz',
13: 1:      'question': '6',
13: 1:      'valid': true
13: 1:    }
13: 1:  ],
13: 1:  'info': [
13: 1:    '✅f(1) = 1',
13: 1:    '✅f(2) = 2',
13: 1:    '✅f(3) = Fizz',
13: 1:    '✅f(4) = 4',
13: 1:    '✅f(5) = Buzz',
13: 1:    '✅f(6) = Fizz',
13: 1:    '❌f(7) = ??? != Muzz'
13: 1:  ],
13: 1:  'level': 1,
13: 1:  'nextQuestion': '7',
13: 1:  'questions': [
13: 1:    '1',
13: 1:    '2',
13: 1:    '3',
13: 1:    '4',
13: 1:    '5',
13: 1:    '6',
13: 1:    '7'
13: 1:  ]
13: 1:}
13: 1:Scores: 11
13: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz']')
13: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
14: 1:BoardData {
14: 1:  'description': [
14: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
14: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
14: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
14: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
14: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
14: 1:    'Please write optimized code without any duplication.',
14: 1:    'For divider 11 - the word must be 'Duzz'.',
14: 1:    'For divider 13 - the word must be 'Cazz'.'
14: 1:  ],
14: 1:  'expectedAnswer': '8',
14: 1:  'history': [
14: 1:    {
14: 1:      'answer': '1',
14: 1:      'question': '1',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': '2',
14: 1:      'question': '2',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Fizz',
14: 1:      'question': '3',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': '4',
14: 1:      'question': '4',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Buzz',
14: 1:      'question': '5',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Fizz',
14: 1:      'question': '6',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Muzz',
14: 1:      'question': '7',
14: 1:      'valid': true
14: 1:    }
14: 1:  ],
14: 1:  'info': [
14: 1:    '✅f(1) = 1',
14: 1:    '✅f(2) = 2',
14: 1:    '✅f(3) = Fizz',
14: 1:    '✅f(4) = 4',
14: 1:    '✅f(5) = Buzz',
14: 1:    '✅f(6) = Fizz',
14: 1:    '✅f(7) = Muzz',
14: 1:    '❌f(8) = ??? != 8'
14: 1:  ],
14: 1:  'level': 1,
14: 1:  'nextQuestion': '8',
14: 1:  'questions': [
14: 1:    '1',
14: 1:    '2',
14: 1:    '3',
14: 1:    '4',
14: 1:    '5',
14: 1:    '6',
14: 1:    '7',
14: 1:    '8'
14: 1:  ]
14: 1:}
14: 1:Scores: 12
14: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8']')
14: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
15: 1:BoardData {
15: 1:  'description': [
15: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
15: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
15: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
15: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
15: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
15: 1:    'Please write optimized code without any duplication.',
15: 1:    'For divider 11 - the word must be 'Duzz'.',
15: 1:    'For divider 13 - the word must be 'Cazz'.'
15: 1:  ],
15: 1:  'expectedAnswer': 'Fizz',
15: 1:  'history': [
15: 1:    {
15: 1:      'answer': '1',
15: 1:      'question': '1',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '2',
15: 1:      'question': '2',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Fizz',
15: 1:      'question': '3',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '4',
15: 1:      'question': '4',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Buzz',
15: 1:      'question': '5',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Fizz',
15: 1:      'question': '6',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Muzz',
15: 1:      'question': '7',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '8',
15: 1:      'question': '8',
15: 1:      'valid': true
15: 1:    }
15: 1:  ],
15: 1:  'info': [
15: 1:    '✅f(1) = 1',
15: 1:    '✅f(2) = 2',
15: 1:    '✅f(3) = Fizz',
15: 1:    '✅f(4) = 4',
15: 1:    '✅f(5) = Buzz',
15: 1:    '✅f(6) = Fizz',
15: 1:    '✅f(7) = Muzz',
15: 1:    '✅f(8) = 8',
15: 1:    '❌f(9) = ??? != Fizz'
15: 1:  ],
15: 1:  'level': 1,
15: 1:  'nextQuestion': '9',
15: 1:  'questions': [
15: 1:    '1',
15: 1:    '2',
15: 1:    '3',
15: 1:    '4',
15: 1:    '5',
15: 1:    '6',
15: 1:    '7',
15: 1:    '8',
15: 1:    '9'
15: 1:  ]
15: 1:}
15: 1:Scores: 13
15: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz']')
15: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
16: 1:BoardData {
16: 1:  'description': [
16: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
16: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
16: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
16: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
16: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
16: 1:    'Please write optimized code without any duplication.',
16: 1:    'For divider 11 - the word must be 'Duzz'.',
16: 1:    'For divider 13 - the word must be 'Cazz'.'
16: 1:  ],
16: 1:  'expectedAnswer': 'Buzz',
16: 1:  'history': [
16: 1:    {
16: 1:      'answer': '1',
16: 1:      'question': '1',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '2',
16: 1:      'question': '2',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '3',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '4',
16: 1:      'question': '4',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Buzz',
16: 1:      'question': '5',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '6',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Muzz',
16: 1:      'question': '7',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '8',
16: 1:      'question': '8',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '9',
16: 1:      'valid': true
16: 1:    }
16: 1:  ],
16: 1:  'info': [
16: 1:    '✅f(1) = 1',
16: 1:    '✅f(2) = 2',
16: 1:    '✅f(3) = Fizz',
16: 1:    '✅f(4) = 4',
16: 1:    '✅f(5) = Buzz',
16: 1:    '✅f(6) = Fizz',
16: 1:    '✅f(7) = Muzz',
16: 1:    '✅f(8) = 8',
16: 1:    '✅f(9) = Fizz',
16: 1:    '❌f(10) = ??? != Buzz'
16: 1:  ],
16: 1:  'level': 1,
16: 1:  'nextQuestion': '10',
16: 1:  'questions': [
16: 1:    '1',
16: 1:    '2',
16: 1:    '3',
16: 1:    '4',
16: 1:    '5',
16: 1:    '6',
16: 1:    '7',
16: 1:    '8',
16: 1:    '9',
16: 1:    '10'
16: 1:  ]
16: 1:}
16: 1:Scores: 14
16: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz']')
16: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
17: 1:BoardData {
17: 1:  'description': [
17: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
17: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
17: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
17: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
17: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
17: 1:    'Please write optimized code without any duplication.',
17: 1:    'For divider 11 - the word must be 'Duzz'.',
17: 1:    'For divider 13 - the word must be 'Cazz'.'
17: 1:  ],
17: 1:  'expectedAnswer': 'Duzz',
17: 1:  'history': [
17: 1:    {
17: 1:      'answer': '1',
17: 1:      'question': '1',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '2',
17: 1:      'question': '2',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '3',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '4',
17: 1:      'question': '4',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Buzz',
17: 1:      'question': '5',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '6',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Muzz',
17: 1:      'question': '7',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '8',
17: 1:      'question': '8',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '9',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Buzz',
17: 1:      'question': '10',
17: 1:      'valid': true
17: 1:    }
17: 1:  ],
17: 1:  'info': [
17: 1:    '✅f(1) = 1',
17: 1:    '✅f(2) = 2',
17: 1:    '✅f(3) = Fizz',
17: 1:    '✅f(4) = 4',
17: 1:    '✅f(5) = Buzz',
17: 1:    '✅f(6) = Fizz',
17: 1:    '✅f(7) = Muzz',
17: 1:    '✅f(8) = 8',
17: 1:    '✅f(9) = Fizz',
17: 1:    '✅f(10) = Buzz',
17: 1:    '❌f(11) = ??? != Duzz'
17: 1:  ],
17: 1:  'level': 1,
17: 1:  'nextQuestion': '11',
17: 1:  'questions': [
17: 1:    '1',
17: 1:    '2',
17: 1:    '3',
17: 1:    '4',
17: 1:    '5',
17: 1:    '6',
17: 1:    '7',
17: 1:    '8',
17: 1:    '9',
17: 1:    '10',
17: 1:    '11'
17: 1:  ]
17: 1:}
17: 1:Scores: 15
17: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz']')
17: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
18: 1:BoardData {
18: 1:  'description': [
18: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
18: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
18: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
18: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
18: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
18: 1:    'Please write optimized code without any duplication.',
18: 1:    'For divider 11 - the word must be 'Duzz'.',
18: 1:    'For divider 13 - the word must be 'Cazz'.'
18: 1:  ],
18: 1:  'expectedAnswer': 'Fizz',
18: 1:  'history': [
18: 1:    {
18: 1:      'answer': '1',
18: 1:      'question': '1',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '2',
18: 1:      'question': '2',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '3',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '4',
18: 1:      'question': '4',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Buzz',
18: 1:      'question': '5',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '6',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Muzz',
18: 1:      'question': '7',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '8',
18: 1:      'question': '8',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '9',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Buzz',
18: 1:      'question': '10',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Duzz',
18: 1:      'question': '11',
18: 1:      'valid': true
18: 1:    }
18: 1:  ],
18: 1:  'info': [
18: 1:    '✅f(1) = 1',
18: 1:    '✅f(2) = 2',
18: 1:    '✅f(3) = Fizz',
18: 1:    '✅f(4) = 4',
18: 1:    '✅f(5) = Buzz',
18: 1:    '✅f(6) = Fizz',
18: 1:    '✅f(7) = Muzz',
18: 1:    '✅f(8) = 8',
18: 1:    '✅f(9) = Fizz',
18: 1:    '✅f(10) = Buzz',
18: 1:    '✅f(11) = Duzz',
18: 1:    '❌f(12) = ??? != Fizz'
18: 1:  ],
18: 1:  'level': 1,
18: 1:  'nextQuestion': '12',
18: 1:  'questions': [
18: 1:    '1',
18: 1:    '2',
18: 1:    '3',
18: 1:    '4',
18: 1:    '5',
18: 1:    '6',
18: 1:    '7',
18: 1:    '8',
18: 1:    '9',
18: 1:    '10',
18: 1:    '11',
18: 1:    '12'
18: 1:  ]
18: 1:}
18: 1:Scores: 16
18: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz']')
18: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
19: 1:BoardData {
19: 1:  'description': [
19: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
19: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
19: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
19: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
19: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
19: 1:    'Please write optimized code without any duplication.',
19: 1:    'For divider 11 - the word must be 'Duzz'.',
19: 1:    'For divider 13 - the word must be 'Cazz'.'
19: 1:  ],
19: 1:  'expectedAnswer': 'Cazz',
19: 1:  'history': [
19: 1:    {
19: 1:      'answer': '1',
19: 1:      'question': '1',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '2',
19: 1:      'question': '2',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '3',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '4',
19: 1:      'question': '4',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Buzz',
19: 1:      'question': '5',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '6',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Muzz',
19: 1:      'question': '7',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '8',
19: 1:      'question': '8',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '9',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Buzz',
19: 1:      'question': '10',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Duzz',
19: 1:      'question': '11',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '12',
19: 1:      'valid': true
19: 1:    }
19: 1:  ],
19: 1:  'info': [
19: 1:    '✅f(1) = 1',
19: 1:    '✅f(2) = 2',
19: 1:    '✅f(3) = Fizz',
19: 1:    '✅f(4) = 4',
19: 1:    '✅f(5) = Buzz',
19: 1:    '✅f(6) = Fizz',
19: 1:    '✅f(7) = Muzz',
19: 1:    '✅f(8) = 8',
19: 1:    '✅f(9) = Fizz',
19: 1:    '✅f(10) = Buzz',
19: 1:    '✅f(11) = Duzz',
19: 1:    '✅f(12) = Fizz',
19: 1:    '❌f(13) = ??? != Cazz'
19: 1:  ],
19: 1:  'level': 1,
19: 1:  'nextQuestion': '13',
19: 1:  'questions': [
19: 1:    '1',
19: 1:    '2',
19: 1:    '3',
19: 1:    '4',
19: 1:    '5',
19: 1:    '6',
19: 1:    '7',
19: 1:    '8',
19: 1:    '9',
19: 1:    '10',
19: 1:    '11',
19: 1:    '12',
19: 1:    '13'
19: 1:  ]
19: 1:}
19: 1:Scores: 17
19: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz']')
19: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
20: 1:BoardData {
20: 1:  'description': [
20: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
20: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
20: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
20: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
20: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
20: 1:    'Please write optimized code without any duplication.',
20: 1:    'For divider 11 - the word must be 'Duzz'.',
20: 1:    'For divider 13 - the word must be 'Cazz'.'
20: 1:  ],
20: 1:  'expectedAnswer': 'Muzz',
20: 1:  'history': [
20: 1:    {
20: 1:      'answer': '1',
20: 1:      'question': '1',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '2',
20: 1:      'question': '2',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '3',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '4',
20: 1:      'question': '4',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Buzz',
20: 1:      'question': '5',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '6',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Muzz',
20: 1:      'question': '7',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '8',
20: 1:      'question': '8',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '9',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Buzz',
20: 1:      'question': '10',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Duzz',
20: 1:      'question': '11',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '12',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Cazz',
20: 1:      'question': '13',
20: 1:      'valid': true
20: 1:    }
20: 1:  ],
20: 1:  'info': [
20: 1:    '✅f(1) = 1',
20: 1:    '✅f(2) = 2',
20: 1:    '✅f(3) = Fizz',
20: 1:    '✅f(4) = 4',
20: 1:    '✅f(5) = Buzz',
20: 1:    '✅f(6) = Fizz',
20: 1:    '✅f(7) = Muzz',
20: 1:    '✅f(8) = 8',
20: 1:    '✅f(9) = Fizz',
20: 1:    '✅f(10) = Buzz',
20: 1:    '✅f(11) = Duzz',
20: 1:    '✅f(12) = Fizz',
20: 1:    '✅f(13) = Cazz',
20: 1:    '❌f(14) = ??? != Muzz'
20: 1:  ],
20: 1:  'level': 1,
20: 1:  'nextQuestion': '14',
20: 1:  'questions': [
20: 1:    '1',
20: 1:    '2',
20: 1:    '3',
20: 1:    '4',
20: 1:    '5',
20: 1:    '6',
20: 1:    '7',
20: 1:    '8',
20: 1:    '9',
20: 1:    '10',
20: 1:    '11',
20: 1:    '12',
20: 1:    '13',
20: 1:    '14'
20: 1:  ]
20: 1:}
20: 1:Scores: 18
20: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz']')
20: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
21: 1:BoardData {
21: 1:  'description': [
21: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
21: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
21: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
21: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
21: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
21: 1:    'Please write optimized code without any duplication.',
21: 1:    'For divider 11 - the word must be 'Duzz'.',
21: 1:    'For divider 13 - the word must be 'Cazz'.'
21: 1:  ],
21: 1:  'expectedAnswer': 'FizzBuzz',
21: 1:  'history': [
21: 1:    {
21: 1:      'answer': '1',
21: 1:      'question': '1',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '2',
21: 1:      'question': '2',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '3',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '4',
21: 1:      'question': '4',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Buzz',
21: 1:      'question': '5',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '6',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Muzz',
21: 1:      'question': '7',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '8',
21: 1:      'question': '8',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '9',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Buzz',
21: 1:      'question': '10',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Duzz',
21: 1:      'question': '11',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '12',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Cazz',
21: 1:      'question': '13',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Muzz',
21: 1:      'question': '14',
21: 1:      'valid': true
21: 1:    }
21: 1:  ],
21: 1:  'info': [
21: 1:    '✅f(1) = 1',
21: 1:    '✅f(2) = 2',
21: 1:    '✅f(3) = Fizz',
21: 1:    '✅f(4) = 4',
21: 1:    '✅f(5) = Buzz',
21: 1:    '✅f(6) = Fizz',
21: 1:    '✅f(7) = Muzz',
21: 1:    '✅f(8) = 8',
21: 1:    '✅f(9) = Fizz',
21: 1:    '✅f(10) = Buzz',
21: 1:    '✅f(11) = Duzz',
21: 1:    '✅f(12) = Fizz',
21: 1:    '✅f(13) = Cazz',
21: 1:    '✅f(14) = Muzz',
21: 1:    '❌f(15) = ??? != FizzBuzz'
21: 1:  ],
21: 1:  'level': 1,
21: 1:  'nextQuestion': '15',
21: 1:  'questions': [
21: 1:    '1',
21: 1:    '2',
21: 1:    '3',
21: 1:    '4',
21: 1:    '5',
21: 1:    '6',
21: 1:    '7',
21: 1:    '8',
21: 1:    '9',
21: 1:    '10',
21: 1:    '11',
21: 1:    '12',
21: 1:    '13',
21: 1:    '14',
21: 1:    '15'
21: 1:  ]
21: 1:}
21: 1:Scores: 19
21: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz']')
21: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
22: 1:BoardData {
22: 1:  'description': [
22: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
22: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
22: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
22: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
22: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
22: 1:    'Please write optimized code without any duplication.',
22: 1:    'For divider 11 - the word must be 'Duzz'.',
22: 1:    'For divider 13 - the word must be 'Cazz'.'
22: 1:  ],
22: 1:  'expectedAnswer': '16',
22: 1:  'history': [
22: 1:    {
22: 1:      'answer': '1',
22: 1:      'question': '1',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '2',
22: 1:      'question': '2',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '3',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '4',
22: 1:      'question': '4',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Buzz',
22: 1:      'question': '5',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '6',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Muzz',
22: 1:      'question': '7',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '8',
22: 1:      'question': '8',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '9',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Buzz',
22: 1:      'question': '10',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Duzz',
22: 1:      'question': '11',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '12',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Cazz',
22: 1:      'question': '13',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Muzz',
22: 1:      'question': '14',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'FizzBuzz',
22: 1:      'question': '15',
22: 1:      'valid': true
22: 1:    }
22: 1:  ],
22: 1:  'info': [
22: 1:    '✅f(1) = 1',
22: 1:    '✅f(2) = 2',
22: 1:    '✅f(3) = Fizz',
22: 1:    '✅f(4) = 4',
22: 1:    '✅f(5) = Buzz',
22: 1:    '✅f(6) = Fizz',
22: 1:    '✅f(7) = Muzz',
22: 1:    '✅f(8) = 8',
22: 1:    '✅f(9) = Fizz',
22: 1:    '✅f(10) = Buzz',
22: 1:    '✅f(11) = Duzz',
22: 1:    '✅f(12) = Fizz',
22: 1:    '✅f(13) = Cazz',
22: 1:    '✅f(14) = Muzz',
22: 1:    '✅f(15) = FizzBuzz',
22: 1:    '❌f(16) = ??? != 16'
22: 1:  ],
22: 1:  'level': 1,
22: 1:  'nextQuestion': '16',
22: 1:  'questions': [
22: 1:    '1',
22: 1:    '2',
22: 1:    '3',
22: 1:    '4',
22: 1:    '5',
22: 1:    '6',
22: 1:    '7',
22: 1:    '8',
22: 1:    '9',
22: 1:    '10',
22: 1:    '11',
22: 1:    '12',
22: 1:    '13',
22: 1:    '14',
22: 1:    '15',
22: 1:    '16'
22: 1:  ]
22: 1:}
22: 1:Scores: 20
22: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16']')
22: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
23: 1:BoardData {
23: 1:  'description': [
23: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
23: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
23: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
23: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
23: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
23: 1:    'Please write optimized code without any duplication.',
23: 1:    'For divider 11 - the word must be 'Duzz'.',
23: 1:    'For divider 13 - the word must be 'Cazz'.'
23: 1:  ],
23: 1:  'expectedAnswer': '17',
23: 1:  'history': [
23: 1:    {
23: 1:      'answer': '1',
23: 1:      'question': '1',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '2',
23: 1:      'question': '2',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '3',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '4',
23: 1:      'question': '4',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Buzz',
23: 1:      'question': '5',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '6',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Muzz',
23: 1:      'question': '7',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '8',
23: 1:      'question': '8',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '9',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Buzz',
23: 1:      'question': '10',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Duzz',
23: 1:      'question': '11',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '12',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Cazz',
23: 1:      'question': '13',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Muzz',
23: 1:      'question': '14',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'FizzBuzz',
23: 1:      'question': '15',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '16',
23: 1:      'question': '16',
23: 1:      'valid': true
23: 1:    }
23: 1:  ],
23: 1:  'info': [
23: 1:    '✅f(1) = 1',
23: 1:    '✅f(2) = 2',
23: 1:    '✅f(3) = Fizz',
23: 1:    '✅f(4) = 4',
23: 1:    '✅f(5) = Buzz',
23: 1:    '✅f(6) = Fizz',
23: 1:    '✅f(7) = Muzz',
23: 1:    '✅f(8) = 8',
23: 1:    '✅f(9) = Fizz',
23: 1:    '✅f(10) = Buzz',
23: 1:    '✅f(11) = Duzz',
23: 1:    '✅f(12) = Fizz',
23: 1:    '✅f(13) = Cazz',
23: 1:    '✅f(14) = Muzz',
23: 1:    '✅f(15) = FizzBuzz',
23: 1:    '✅f(16) = 16',
23: 1:    '❌f(17) = ??? != 17'
23: 1:  ],
23: 1:  'level': 1,
23: 1:  'nextQuestion': '17',
23: 1:  'questions': [
23: 1:    '1',
23: 1:    '2',
23: 1:    '3',
23: 1:    '4',
23: 1:    '5',
23: 1:    '6',
23: 1:    '7',
23: 1:    '8',
23: 1:    '9',
23: 1:    '10',
23: 1:    '11',
23: 1:    '12',
23: 1:    '13',
23: 1:    '14',
23: 1:    '15',
23: 1:    '16',
23: 1:    '17'
23: 1:  ]
23: 1:}
23: 1:Scores: 21
23: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17']')
23: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
24: 1:BoardData {
24: 1:  'description': [
24: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
24: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
24: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
24: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
24: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
24: 1:    'Please write optimized code without any duplication.',
24: 1:    'For divider 11 - the word must be 'Duzz'.',
24: 1:    'For divider 13 - the word must be 'Cazz'.'
24: 1:  ],
24: 1:  'expectedAnswer': 'FizzMuzz',
24: 1:  'history': [
24: 1:    {
24: 1:      'answer': '1',
24: 1:      'question': '1',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '2',
24: 1:      'question': '2',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '3',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '4',
24: 1:      'question': '4',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Buzz',
24: 1:      'question': '5',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '6',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Muzz',
24: 1:      'question': '7',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '8',
24: 1:      'question': '8',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '9',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Buzz',
24: 1:      'question': '10',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Duzz',
24: 1:      'question': '11',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '12',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Cazz',
24: 1:      'question': '13',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Muzz',
24: 1:      'question': '14',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'FizzBuzz',
24: 1:      'question': '15',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '16',
24: 1:      'question': '16',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '17',
24: 1:      'question': '17',
24: 1:      'valid': true
24: 1:    }
24: 1:  ],
24: 1:  'info': [
24: 1:    '✅f(1) = 1',
24: 1:    '✅f(2) = 2',
24: 1:    '✅f(3) = Fizz',
24: 1:    '✅f(4) = 4',
24: 1:    '✅f(5) = Buzz',
24: 1:    '✅f(6) = Fizz',
24: 1:    '✅f(7) = Muzz',
24: 1:    '✅f(8) = 8',
24: 1:    '✅f(9) = Fizz',
24: 1:    '✅f(10) = Buzz',
24: 1:    '✅f(11) = Duzz',
24: 1:    '✅f(12) = Fizz',
24: 1:    '✅f(13) = Cazz',
24: 1:    '✅f(14) = Muzz',
24: 1:    '✅f(15) = FizzBuzz',
24: 1:    '✅f(16) = 16',
24: 1:    '✅f(17) = 17',
24: 1:    '❌f(21) = ??? != FizzMuzz'
24: 1:  ],
24: 1:  'level': 1,
24: 1:  'nextQuestion': '21',
24: 1:  'questions': [
24: 1:    '1',
24: 1:    '2',
24: 1:    '3',
24: 1:    '4',
24: 1:    '5',
24: 1:    '6',
24: 1:    '7',
24: 1:    '8',
24: 1:    '9',
24: 1:    '10',
24: 1:    '11',
24: 1:    '12',
24: 1:    '13',
24: 1:    '14',
24: 1:    '15',
24: 1:    '16',
24: 1:    '17',
24: 1:    '21'
24: 1:  ]
24: 1:}
24: 1:Scores: 22
24: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz']')
24: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
25: 1:BoardData {
25: 1:  'description': [
25: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
25: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
25: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
25: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
25: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
25: 1:    'Please write optimized code without any duplication.',
25: 1:    'For divider 11 - the word must be 'Duzz'.',
25: 1:    'For divider 13 - the word must be 'Cazz'.'
25: 1:  ],
25: 1:  'expectedAnswer': 'FizzDuzz',
25: 1:  'history': [
25: 1:    {
25: 1:      'answer': '1',
25: 1:      'question': '1',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '2',
25: 1:      'question': '2',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '3',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '4',
25: 1:      'question': '4',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Buzz',
25: 1:      'question': '5',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '6',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Muzz',
25: 1:      'question': '7',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '8',
25: 1:      'question': '8',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '9',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Buzz',
25: 1:      'question': '10',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Duzz',
25: 1:      'question': '11',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '12',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Cazz',
25: 1:      'question': '13',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Muzz',
25: 1:      'question': '14',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'FizzBuzz',
25: 1:      'question': '15',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '16',
25: 1:      'question': '16',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '17',
25: 1:      'question': '17',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'FizzMuzz',
25: 1:      'question': '21',
25: 1:      'valid': true
25: 1:    }
25: 1:  ],
25: 1:  'info': [
25: 1:    '✅f(1) = 1',
25: 1:    '✅f(2) = 2',
25: 1:    '✅f(3) = Fizz',
25: 1:    '✅f(4) = 4',
25: 1:    '✅f(5) = Buzz',
25: 1:    '✅f(6) = Fizz',
25: 1:    '✅f(7) = Muzz',
25: 1:    '✅f(8) = 8',
25: 1:    '✅f(9) = Fizz',
25: 1:    '✅f(10) = Buzz',
25: 1:    '✅f(11) = Duzz',
25: 1:    '✅f(12) = Fizz',
25: 1:    '✅f(13) = Cazz',
25: 1:    '✅f(14) = Muzz',
25: 1:    '✅f(15) = FizzBuzz',
25: 1:    '✅f(16) = 16',
25: 1:    '✅f(17) = 17',
25: 1:    '✅f(21) = FizzMuzz',
25: 1:    '❌f(33) = ??? != FizzDuzz'
25: 1:  ],
25: 1:  'level': 1,
25: 1:  'nextQuestion': '33',
25: 1:  'questions': [
25: 1:    '1',
25: 1:    '2',
25: 1:    '3',
25: 1:    '4',
25: 1:    '5',
25: 1:    '6',
25: 1:    '7',
25: 1:    '8',
25: 1:    '9',
25: 1:    '10',
25: 1:    '11',
25: 1:    '12',
25: 1:    '13',
25: 1:    '14',
25: 1:    '15',
25: 1:    '16',
25: 1:    '17',
25: 1:    '21',
25: 1:    '33'
25: 1:  ]
25: 1:}
25: 1:Scores: 23
25: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz']')
25: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
26: 1:BoardData {
26: 1:  'description': [
26: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
26: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
26: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
26: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
26: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
26: 1:    'Please write optimized code without any duplication.',
26: 1:    'For divider 11 - the word must be 'Duzz'.',
26: 1:    'For divider 13 - the word must be 'Cazz'.'
26: 1:  ],
26: 1:  'expectedAnswer': 'BuzzMuzz',
26: 1:  'history': [
26: 1:    {
26: 1:      'answer': '1',
26: 1:      'question': '1',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '2',
26: 1:      'question': '2',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '3',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '4',
26: 1:      'question': '4',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Buzz',
26: 1:      'question': '5',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '6',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Muzz',
26: 1:      'question': '7',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '8',
26: 1:      'question': '8',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '9',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Buzz',
26: 1:      'question': '10',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Duzz',
26: 1:      'question': '11',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '12',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Cazz',
26: 1:      'question': '13',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Muzz',
26: 1:      'question': '14',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'FizzBuzz',
26: 1:      'question': '15',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '16',
26: 1:      'question': '16',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '17',
26: 1:      'question': '17',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'FizzMuzz',
26: 1:      'question': '21',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'FizzDuzz',
26: 1:      'question': '33',
26: 1:      'valid': true
26: 1:    }
26: 1:  ],
26: 1:  'info': [
26: 1:    '✅f(1) = 1',
26: 1:    '✅f(2) = 2',
26: 1:    '✅f(3) = Fizz',
26: 1:    '✅f(4) = 4',
26: 1:    '✅f(5) = Buzz',
26: 1:    '✅f(6) = Fizz',
26: 1:    '✅f(7) = Muzz',
26: 1:    '✅f(8) = 8',
26: 1:    '✅f(9) = Fizz',
26: 1:    '✅f(10) = Buzz',
26: 1:    '✅f(11) = Duzz',
26: 1:    '✅f(12) = Fizz',
26: 1:    '✅f(13) = Cazz',
26: 1:    '✅f(14) = Muzz',
26: 1:    '✅f(15) = FizzBuzz',
26: 1:    '✅f(16) = 16',
26: 1:    '✅f(17) = 17',
26: 1:    '✅f(21) = FizzMuzz',
26: 1:    '✅f(33) = FizzDuzz',
26: 1:    '❌f(35) = ??? != BuzzMuzz'
26: 1:  ],
26: 1:  'level': 1,
26: 1:  'nextQuestion': '35',
26: 1:  'questions': [
26: 1:    '1',
26: 1:    '2',
26: 1:    '3',
26: 1:    '4',
26: 1:    '5',
26: 1:    '6',
26: 1:    '7',
26: 1:    '8',
26: 1:    '9',
26: 1:    '10',
26: 1:    '11',
26: 1:    '12',
26: 1:    '13',
26: 1:    '14',
26: 1:    '15',
26: 1:    '16',
26: 1:    '17',
26: 1:    '21',
26: 1:    '33',
26: 1:    '35'
26: 1:  ]
26: 1:}
26: 1:Scores: 24
26: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz']')
26: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
27: 1:BoardData {
27: 1:  'description': [
27: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
27: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
27: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
27: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
27: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
27: 1:    'Please write optimized code without any duplication.',
27: 1:    'For divider 11 - the word must be 'Duzz'.',
27: 1:    'For divider 13 - the word must be 'Cazz'.'
27: 1:  ],
27: 1:  'expectedAnswer': 'FizzCazz',
27: 1:  'history': [
27: 1:    {
27: 1:      'answer': '1',
27: 1:      'question': '1',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '2',
27: 1:      'question': '2',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '3',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '4',
27: 1:      'question': '4',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Buzz',
27: 1:      'question': '5',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '6',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Muzz',
27: 1:      'question': '7',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '8',
27: 1:      'question': '8',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '9',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Buzz',
27: 1:      'question': '10',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Duzz',
27: 1:      'question': '11',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '12',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Cazz',
27: 1:      'question': '13',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Muzz',
27: 1:      'question': '14',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'FizzBuzz',
27: 1:      'question': '15',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '16',
27: 1:      'question': '16',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '17',
27: 1:      'question': '17',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'FizzMuzz',
27: 1:      'question': '21',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'FizzDuzz',
27: 1:      'question': '33',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'BuzzMuzz',
27: 1:      'question': '35',
27: 1:      'valid': true
27: 1:    }
27: 1:  ],
27: 1:  'info': [
27: 1:    '✅f(1) = 1',
27: 1:    '✅f(2) = 2',
27: 1:    '✅f(3) = Fizz',
27: 1:    '✅f(4) = 4',
27: 1:    '✅f(5) = Buzz',
27: 1:    '✅f(6) = Fizz',
27: 1:    '✅f(7) = Muzz',
27: 1:    '✅f(8) = 8',
27: 1:    '✅f(9) = Fizz',
27: 1:    '✅f(10) = Buzz',
27: 1:    '✅f(11) = Duzz',
27: 1:    '✅f(12) = Fizz',
27: 1:    '✅f(13) = Cazz',
27: 1:    '✅f(14) = Muzz',
27: 1:    '✅f(15) = FizzBuzz',
27: 1:    '✅f(16) = 16',
27: 1:    '✅f(17) = 17',
27: 1:    '✅f(21) = FizzMuzz',
27: 1:    '✅f(33) = FizzDuzz',
27: 1:    '✅f(35) = BuzzMuzz',
27: 1:    '❌f(39) = ??? != FizzCazz'
27: 1:  ],
27: 1:  'level': 1,
27: 1:  'nextQuestion': '39',
27: 1:  'questions': [
27: 1:    '1',
27: 1:    '2',
27: 1:    '3',
27: 1:    '4',
27: 1:    '5',
27: 1:    '6',
27: 1:    '7',
27: 1:    '8',
27: 1:    '9',
27: 1:    '10',
27: 1:    '11',
27: 1:    '12',
27: 1:    '13',
27: 1:    '14',
27: 1:    '15',
27: 1:    '16',
27: 1:    '17',
27: 1:    '21',
27: 1:    '33',
27: 1:    '35',
27: 1:    '39'
27: 1:  ]
27: 1:}
27: 1:Scores: 25
27: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz']')
27: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
28: 1:BoardData {
28: 1:  'description': [
28: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
28: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
28: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
28: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
28: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
28: 1:    'Please write optimized code without any duplication.',
28: 1:    'For divider 11 - the word must be 'Duzz'.',
28: 1:    'For divider 13 - the word must be 'Cazz'.'
28: 1:  ],
28: 1:  'expectedAnswer': 'Muzz',
28: 1:  'history': [
28: 1:    {
28: 1:      'answer': '1',
28: 1:      'question': '1',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '2',
28: 1:      'question': '2',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '3',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '4',
28: 1:      'question': '4',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Buzz',
28: 1:      'question': '5',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '6',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Muzz',
28: 1:      'question': '7',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '8',
28: 1:      'question': '8',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '9',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Buzz',
28: 1:      'question': '10',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Duzz',
28: 1:      'question': '11',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '12',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Cazz',
28: 1:      'question': '13',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Muzz',
28: 1:      'question': '14',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzBuzz',
28: 1:      'question': '15',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '16',
28: 1:      'question': '16',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '17',
28: 1:      'question': '17',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzMuzz',
28: 1:      'question': '21',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzDuzz',
28: 1:      'question': '33',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'BuzzMuzz',
28: 1:      'question': '35',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzCazz',
28: 1:      'question': '39',
28: 1:      'valid': true
28: 1:    }
28: 1:  ],
28: 1:  'info': [
28: 1:    '✅f(1) = 1',
28: 1:    '✅f(2) = 2',
28: 1:    '✅f(3) = Fizz',
28: 1:    '✅f(4) = 4',
28: 1:    '✅f(5) = Buzz',
28: 1:    '✅f(6) = Fizz',
28: 1:    '✅f(7) = Muzz',
28: 1:    '✅f(8) = 8',
28: 1:    '✅f(9) = Fizz',
28: 1:    '✅f(10) = Buzz',
28: 1:    '✅f(11) = Duzz',
28: 1:    '✅f(12) = Fizz',
28: 1:    '✅f(13) = Cazz',
28: 1:    '✅f(14) = Muzz',
28: 1:    '✅f(15) = FizzBuzz',
28: 1:    '✅f(16) = 16',
28: 1:    '✅f(17) = 17',
28: 1:    '✅f(21) = FizzMuzz',
28: 1:    '✅f(33) = FizzDuzz',
28: 1:    '✅f(35) = BuzzMuzz',
28: 1:    '✅f(39) = FizzCazz',
28: 1:    '❌f(49) = ??? != Muzz'
28: 1:  ],
28: 1:  'level': 1,
28: 1:  'nextQuestion': '49',
28: 1:  'questions': [
28: 1:    '1',
28: 1:    '2',
28: 1:    '3',
28: 1:    '4',
28: 1:    '5',
28: 1:    '6',
28: 1:    '7',
28: 1:    '8',
28: 1:    '9',
28: 1:    '10',
28: 1:    '11',
28: 1:    '12',
28: 1:    '13',
28: 1:    '14',
28: 1:    '15',
28: 1:    '16',
28: 1:    '17',
28: 1:    '21',
28: 1:    '33',
28: 1:    '35',
28: 1:    '39',
28: 1:    '49'
28: 1:  ]
28: 1:}
28: 1:Scores: 26
28: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz']')
28: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
29: 1:BoardData {
29: 1:  'description': [
29: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
29: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
29: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
29: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
29: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
29: 1:    'Please write optimized code without any duplication.',
29: 1:    'For divider 11 - the word must be 'Duzz'.',
29: 1:    'For divider 13 - the word must be 'Cazz'.'
29: 1:  ],
29: 1:  'expectedAnswer': 'BuzzDuzz',
29: 1:  'history': [
29: 1:    {
29: 1:      'answer': '1',
29: 1:      'question': '1',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '2',
29: 1:      'question': '2',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '3',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '4',
29: 1:      'question': '4',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Buzz',
29: 1:      'question': '5',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '6',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Muzz',
29: 1:      'question': '7',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '8',
29: 1:      'question': '8',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '9',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Buzz',
29: 1:      'question': '10',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Duzz',
29: 1:      'question': '11',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '12',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Cazz',
29: 1:      'question': '13',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Muzz',
29: 1:      'question': '14',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzBuzz',
29: 1:      'question': '15',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '16',
29: 1:      'question': '16',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '17',
29: 1:      'question': '17',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzMuzz',
29: 1:      'question': '21',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzDuzz',
29: 1:      'question': '33',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'BuzzMuzz',
29: 1:      'question': '35',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzCazz',
29: 1:      'question': '39',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Muzz',
29: 1:      'question': '49',
29: 1:      'valid': true
29: 1:    }
29: 1:  ],
29: 1:  'info': [
29: 1:    '✅f(1) = 1',
29: 1:    '✅f(2) = 2',
29: 1:    '✅f(3) = Fizz',
29: 1:    '✅f(4) = 4',
29: 1:    '✅f(5) = Buzz',
29: 1:    '✅f(6) = Fizz',
29: 1:    '✅f(7) = Muzz',
29: 1:    '✅f(8) = 8',
29: 1:    '✅f(9) = Fizz',
29: 1:    '✅f(10) = Buzz',
29: 1:    '✅f(11) = Duzz',
29: 1:    '✅f(12) = Fizz',
29: 1:    '✅f(13) = Cazz',
29: 1:    '✅f(14) = Muzz',
29: 1:    '✅f(15) = FizzBuzz',
29: 1:    '✅f(16) = 16',
29: 1:    '✅f(17) = 17',
29: 1:    '✅f(21) = FizzMuzz',
29: 1:    '✅f(33) = FizzDuzz',
29: 1:    '✅f(35) = BuzzMuzz',
29: 1:    '✅f(39) = FizzCazz',
29: 1:    '✅f(49) = Muzz',
29: 1:    '❌f(55) = ??? != BuzzDuzz'
29: 1:  ],
29: 1:  'level': 1,
29: 1:  'nextQuestion': '55',
29: 1:  'questions': [
29: 1:    '1',
29: 1:    '2',
29: 1:    '3',
29: 1:    '4',
29: 1:    '5',
29: 1:    '6',
29: 1:    '7',
29: 1:    '8',
29: 1:    '9',
29: 1:    '10',
29: 1:    '11',
29: 1:    '12',
29: 1:    '13',
29: 1:    '14',
29: 1:    '15',
29: 1:    '16',
29: 1:    '17',
29: 1:    '21',
29: 1:    '33',
29: 1:    '35',
29: 1:    '39',
29: 1:    '49',
29: 1:    '55'
29: 1:  ]
29: 1:}
29: 1:Scores: 27
29: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz']')
29: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
30: 1:BoardData {
30: 1:  'description': [
30: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
30: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
30: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
30: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
30: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
30: 1:    'Please write optimized code without any duplication.',
30: 1:    'For divider 11 - the word must be 'Duzz'.',
30: 1:    'For divider 13 - the word must be 'Cazz'.'
30: 1:  ],
30: 1:  'expectedAnswer': 'BuzzCazz',
30: 1:  'history': [
30: 1:    {
30: 1:      'answer': '1',
30: 1:      'question': '1',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '2',
30: 1:      'question': '2',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '3',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '4',
30: 1:      'question': '4',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Buzz',
30: 1:      'question': '5',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '6',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Muzz',
30: 1:      'question': '7',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '8',
30: 1:      'question': '8',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '9',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Buzz',
30: 1:      'question': '10',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Duzz',
30: 1:      'question': '11',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '12',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Cazz',
30: 1:      'question': '13',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Muzz',
30: 1:      'question': '14',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzBuzz',
30: 1:      'question': '15',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '16',
30: 1:      'question': '16',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '17',
30: 1:      'question': '17',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzMuzz',
30: 1:      'question': '21',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzDuzz',
30: 1:      'question': '33',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'BuzzMuzz',
30: 1:      'question': '35',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzCazz',
30: 1:      'question': '39',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Muzz',
30: 1:      'question': '49',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'BuzzDuzz',
30: 1:      'question': '55',
30: 1:      'valid': true
30: 1:    }
30: 1:  ],
30: 1:  'info': [
30: 1:    '✅f(1) = 1',
30: 1:    '✅f(2) = 2',
30: 1:    '✅f(3) = Fizz',
30: 1:    '✅f(4) = 4',
30: 1:    '✅f(5) = Buzz',
30: 1:    '✅f(6) = Fizz',
30: 1:    '✅f(7) = Muzz',
30: 1:    '✅f(8) = 8',
30: 1:    '✅f(9) = Fizz',
30: 1:    '✅f(10) = Buzz',
30: 1:    '✅f(11) = Duzz',
30: 1:    '✅f(12) = Fizz',
30: 1:    '✅f(13) = Cazz',
30: 1:    '✅f(14) = Muzz',
30: 1:    '✅f(15) = FizzBuzz',
30: 1:    '✅f(16) = 16',
30: 1:    '✅f(17) = 17',
30: 1:    '✅f(21) = FizzMuzz',
30: 1:    '✅f(33) = FizzDuzz',
30: 1:    '✅f(35) = BuzzMuzz',
30: 1:    '✅f(39) = FizzCazz',
30: 1:    '✅f(49) = Muzz',
30: 1:    '✅f(55) = BuzzDuzz',
30: 1:    '❌f(65) = ??? != BuzzCazz'
30: 1:  ],
30: 1:  'level': 1,
30: 1:  'nextQuestion': '65',
30: 1:  'questions': [
30: 1:    '1',
30: 1:    '2',
30: 1:    '3',
30: 1:    '4',
30: 1:    '5',
30: 1:    '6',
30: 1:    '7',
30: 1:    '8',
30: 1:    '9',
30: 1:    '10',
30: 1:    '11',
30: 1:    '12',
30: 1:    '13',
30: 1:    '14',
30: 1:    '15',
30: 1:    '16',
30: 1:    '17',
30: 1:    '21',
30: 1:    '33',
30: 1:    '35',
30: 1:    '39',
30: 1:    '49',
30: 1:    '55',
30: 1:    '65'
30: 1:  ]
30: 1:}
30: 1:Scores: 28
30: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz']')
30: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
31: 1:BoardData {
31: 1:  'description': [
31: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
31: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
31: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
31: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
31: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
31: 1:    'Please write optimized code without any duplication.',
31: 1:    'For divider 11 - the word must be 'Duzz'.',
31: 1:    'For divider 13 - the word must be 'Cazz'.'
31: 1:  ],
31: 1:  'expectedAnswer': 'MuzzDuzz',
31: 1:  'history': [
31: 1:    {
31: 1:      'answer': '1',
31: 1:      'question': '1',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '2',
31: 1:      'question': '2',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '3',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '4',
31: 1:      'question': '4',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Buzz',
31: 1:      'question': '5',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '6',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Muzz',
31: 1:      'question': '7',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '8',
31: 1:      'question': '8',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '9',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Buzz',
31: 1:      'question': '10',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Duzz',
31: 1:      'question': '11',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '12',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Cazz',
31: 1:      'question': '13',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Muzz',
31: 1:      'question': '14',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzBuzz',
31: 1:      'question': '15',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '16',
31: 1:      'question': '16',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '17',
31: 1:      'question': '17',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzMuzz',
31: 1:      'question': '21',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzDuzz',
31: 1:      'question': '33',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'BuzzMuzz',
31: 1:      'question': '35',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzCazz',
31: 1:      'question': '39',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Muzz',
31: 1:      'question': '49',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'BuzzDuzz',
31: 1:      'question': '55',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'BuzzCazz',
31: 1:      'question': '65',
31: 1:      'valid': true
31: 1:    }
31: 1:  ],
31: 1:  'info': [
31: 1:    '✅f(1) = 1',
31: 1:    '✅f(2) = 2',
31: 1:    '✅f(3) = Fizz',
31: 1:    '✅f(4) = 4',
31: 1:    '✅f(5) = Buzz',
31: 1:    '✅f(6) = Fizz',
31: 1:    '✅f(7) = Muzz',
31: 1:    '✅f(8) = 8',
31: 1:    '✅f(9) = Fizz',
31: 1:    '✅f(10) = Buzz',
31: 1:    '✅f(11) = Duzz',
31: 1:    '✅f(12) = Fizz',
31: 1:    '✅f(13) = Cazz',
31: 1:    '✅f(14) = Muzz',
31: 1:    '✅f(15) = FizzBuzz',
31: 1:    '✅f(16) = 16',
31: 1:    '✅f(17) = 17',
31: 1:    '✅f(21) = FizzMuzz',
31: 1:    '✅f(33) = FizzDuzz',
31: 1:    '✅f(35) = BuzzMuzz',
31: 1:    '✅f(39) = FizzCazz',
31: 1:    '✅f(49) = Muzz',
31: 1:    '✅f(55) = BuzzDuzz',
31: 1:    '✅f(65) = BuzzCazz',
31: 1:    '❌f(77) = ??? != MuzzDuzz'
31: 1:  ],
31: 1:  'level': 1,
31: 1:  'nextQuestion': '77',
31: 1:  'questions': [
31: 1:    '1',
31: 1:    '2',
31: 1:    '3',
31: 1:    '4',
31: 1:    '5',
31: 1:    '6',
31: 1:    '7',
31: 1:    '8',
31: 1:    '9',
31: 1:    '10',
31: 1:    '11',
31: 1:    '12',
31: 1:    '13',
31: 1:    '14',
31: 1:    '15',
31: 1:    '16',
31: 1:    '17',
31: 1:    '21',
31: 1:    '33',
31: 1:    '35',
31: 1:    '39',
31: 1:    '49',
31: 1:    '55',
31: 1:    '65',
31: 1:    '77'
31: 1:  ]
31: 1:}
31: 1:Scores: 29
31: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz']')
31: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
32: 1:BoardData {
32: 1:  'description': [
32: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
32: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
32: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
32: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
32: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
32: 1:    'Please write optimized code without any duplication.',
32: 1:    'For divider 11 - the word must be 'Duzz'.',
32: 1:    'For divider 13 - the word must be 'Cazz'.'
32: 1:  ],
32: 1:  'expectedAnswer': 'MuzzCazz',
32: 1:  'history': [
32: 1:    {
32: 1:      'answer': '1',
32: 1:      'question': '1',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '2',
32: 1:      'question': '2',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '3',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '4',
32: 1:      'question': '4',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Buzz',
32: 1:      'question': '5',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '6',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Muzz',
32: 1:      'question': '7',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '8',
32: 1:      'question': '8',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '9',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Buzz',
32: 1:      'question': '10',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Duzz',
32: 1:      'question': '11',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '12',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Cazz',
32: 1:      'question': '13',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Muzz',
32: 1:      'question': '14',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzBuzz',
32: 1:      'question': '15',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '16',
32: 1:      'question': '16',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '17',
32: 1:      'question': '17',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzMuzz',
32: 1:      'question': '21',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzDuzz',
32: 1:      'question': '33',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'BuzzMuzz',
32: 1:      'question': '35',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzCazz',
32: 1:      'question': '39',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Muzz',
32: 1:      'question': '49',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'BuzzDuzz',
32: 1:      'question': '55',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'BuzzCazz',
32: 1:      'question': '65',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'MuzzDuzz',
32: 1:      'question': '77',
32: 1:      'valid': true
32: 1:    }
32: 1:  ],
32: 1:  'info': [
32: 1:    '✅f(1) = 1',
32: 1:    '✅f(2) = 2',
32: 1:    '✅f(3) = Fizz',
32: 1:    '✅f(4) = 4',
32: 1:    '✅f(5) = Buzz',
32: 1:    '✅f(6) = Fizz',
32: 1:    '✅f(7) = Muzz',
32: 1:    '✅f(8) = 8',
32: 1:    '✅f(9) = Fizz',
32: 1:    '✅f(10) = Buzz',
32: 1:    '✅f(11) = Duzz',
32: 1:    '✅f(12) = Fizz',
32: 1:    '✅f(13) = Cazz',
32: 1:    '✅f(14) = Muzz',
32: 1:    '✅f(15) = FizzBuzz',
32: 1:    '✅f(16) = 16',
32: 1:    '✅f(17) = 17',
32: 1:    '✅f(21) = FizzMuzz',
32: 1:    '✅f(33) = FizzDuzz',
32: 1:    '✅f(35) = BuzzMuzz',
32: 1:    '✅f(39) = FizzCazz',
32: 1:    '✅f(49) = Muzz',
32: 1:    '✅f(55) = BuzzDuzz',
32: 1:    '✅f(65) = BuzzCazz',
32: 1:    '✅f(77) = MuzzDuzz',
32: 1:    '❌f(91) = ??? != MuzzCazz'
32: 1:  ],
32: 1:  'level': 1,
32: 1:  'nextQuestion': '91',
32: 1:  'questions': [
32: 1:    '1',
32: 1:    '2',
32: 1:    '3',
32: 1:    '4',
32: 1:    '5',
32: 1:    '6',
32: 1:    '7',
32: 1:    '8',
32: 1:    '9',
32: 1:    '10',
32: 1:    '11',
32: 1:    '12',
32: 1:    '13',
32: 1:    '14',
32: 1:    '15',
32: 1:    '16',
32: 1:    '17',
32: 1:    '21',
32: 1:    '33',
32: 1:    '35',
32: 1:    '39',
32: 1:    '49',
32: 1:    '55',
32: 1:    '65',
32: 1:    '77',
32: 1:    '91'
32: 1:  ]
32: 1:}
32: 1:Scores: 30
32: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz']')
32: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
33: 1:BoardData {
33: 1:  'description': [
33: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
33: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
33: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
33: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
33: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
33: 1:    'Please write optimized code without any duplication.',
33: 1:    'For divider 11 - the word must be 'Duzz'.',
33: 1:    'For divider 13 - the word must be 'Cazz'.'
33: 1:  ],
33: 1:  'expectedAnswer': 'FizzBuzzMuzz',
33: 1:  'history': [
33: 1:    {
33: 1:      'answer': '1',
33: 1:      'question': '1',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '2',
33: 1:      'question': '2',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Fizz',
33: 1:      'question': '3',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '4',
33: 1:      'question': '4',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Buzz',
33: 1:      'question': '5',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Fizz',
33: 1:      'question': '6',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Muzz',
33: 1:      'question': '7',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '8',
33: 1:      'question': '8',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Fizz',
33: 1:      'question': '9',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Buzz',
33: 1:      'question': '10',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Duzz',
33: 1:      'question': '11',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Fizz',
33: 1:      'question': '12',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Cazz',
33: 1:      'question': '13',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Muzz',
33: 1:      'question': '14',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'FizzBuzz',
33: 1:      'question': '15',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '16',
33: 1:      'question': '16',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '17',
33: 1:      'question': '17',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'FizzMuzz',
33: 1:      'question': '21',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'FizzDuzz',
33: 1:      'question': '33',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'BuzzMuzz',
33: 1:      'question': '35',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'FizzCazz',
33: 1:      'question': '39',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Muzz',
33: 1:      'question': '49',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'BuzzDuzz',
33: 1:      'question': '55',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'BuzzCazz',
33: 1:      'question': '65',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'MuzzDuzz',
33: 1:      'question': '77',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'MuzzCazz',
33: 1:      'question': '91',
33: 1:      'valid': true
33: 1:    }
33: 1:  ],
33: 1:  'info': [
33: 1:    '✅f(1) = 1',
33: 1:    '✅f(2) = 2',
33: 1:    '✅f(3) = Fizz',
33: 1:    '✅f(4) = 4',
33: 1:    '✅f(5) = Buzz',
33: 1:    '✅f(6) = Fizz',
33: 1:    '✅f(7) = Muzz',
33: 1:    '✅f(8) = 8',
33: 1:    '✅f(9) = Fizz',
33: 1:    '✅f(10) = Buzz',
33: 1:    '✅f(11) = Duzz',
33: 1:    '✅f(12) = Fizz',
33: 1:    '✅f(13) = Cazz',
33: 1:    '✅f(14) = Muzz',
33: 1:    '✅f(15) = FizzBuzz',
33: 1:    '✅f(16) = 16',
33: 1:    '✅f(17) = 17',
33: 1:    '✅f(21) = FizzMuzz',
33: 1:    '✅f(33) = FizzDuzz',
33: 1:    '✅f(35) = BuzzMuzz',
33: 1:    '✅f(39) = FizzCazz',
33: 1:    '✅f(49) = Muzz',
33: 1:    '✅f(55) = BuzzDuzz',
33: 1:    '✅f(65) = BuzzCazz',
33: 1:    '✅f(77) = MuzzDuzz',
33: 1:    '✅f(91) = MuzzCazz',
33: 1:    '❌f(105) = ??? != FizzBuzzMuzz'
33: 1:  ],
33: 1:  'level': 1,
33: 1:  'nextQuestion': '105',
33: 1:  'questions': [
33: 1:    '1',
33: 1:    '2',
33: 1:    '3',
33: 1:    '4',
33: 1:    '5',
33: 1:    '6',
33: 1:    '7',
33: 1:    '8',
33: 1:    '9',
33: 1:    '10',
33: 1:    '11',
33: 1:    '12',
33: 1:    '13',
33: 1:    '14',
33: 1:    '15',
33: 1:    '16',
33: 1:    '17',
33: 1:    '21',
33: 1:    '33',
33: 1:    '35',
33: 1:    '39',
33: 1:    '49',
33: 1:    '55',
33: 1:    '65',
33: 1:    '77',
33: 1:    '91',
33: 1:    '105'
33: 1:  ]
33: 1:}
33: 1:Scores: 31
33: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz']')
33: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
34: 1:BoardData {
34: 1:  'description': [
34: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
34: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
34: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
34: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
34: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
34: 1:    'Please write optimized code without any duplication.',
34: 1:    'For divider 11 - the word must be 'Duzz'.',
34: 1:    'For divider 13 - the word must be 'Cazz'.'
34: 1:  ],
34: 1:  'expectedAnswer': 'FizzBuzzDuzz',
34: 1:  'history': [
34: 1:    {
34: 1:      'answer': '1',
34: 1:      'question': '1',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '2',
34: 1:      'question': '2',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Fizz',
34: 1:      'question': '3',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '4',
34: 1:      'question': '4',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Buzz',
34: 1:      'question': '5',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Fizz',
34: 1:      'question': '6',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Muzz',
34: 1:      'question': '7',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '8',
34: 1:      'question': '8',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Fizz',
34: 1:      'question': '9',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Buzz',
34: 1:      'question': '10',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Duzz',
34: 1:      'question': '11',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Fizz',
34: 1:      'question': '12',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Cazz',
34: 1:      'question': '13',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Muzz',
34: 1:      'question': '14',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzBuzz',
34: 1:      'question': '15',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '16',
34: 1:      'question': '16',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '17',
34: 1:      'question': '17',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzMuzz',
34: 1:      'question': '21',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzDuzz',
34: 1:      'question': '33',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'BuzzMuzz',
34: 1:      'question': '35',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzCazz',
34: 1:      'question': '39',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Muzz',
34: 1:      'question': '49',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'BuzzDuzz',
34: 1:      'question': '55',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'BuzzCazz',
34: 1:      'question': '65',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'MuzzDuzz',
34: 1:      'question': '77',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'MuzzCazz',
34: 1:      'question': '91',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzBuzzMuzz',
34: 1:      'question': '105',
34: 1:      'valid': true
34: 1:    }
34: 1:  ],
34: 1:  'info': [
34: 1:    '✅f(1) = 1',
34: 1:    '✅f(2) = 2',
34: 1:    '✅f(3) = Fizz',
34: 1:    '✅f(4) = 4',
34: 1:    '✅f(5) = Buzz',
34: 1:    '✅f(6) = Fizz',
34: 1:    '✅f(7) = Muzz',
34: 1:    '✅f(8) = 8',
34: 1:    '✅f(9) = Fizz',
34: 1:    '✅f(10) = Buzz',
34: 1:    '✅f(11) = Duzz',
34: 1:    '✅f(12) = Fizz',
34: 1:    '✅f(13) = Cazz',
34: 1:    '✅f(14) = Muzz',
34: 1:    '✅f(15) = FizzBuzz',
34: 1:    '✅f(16) = 16',
34: 1:    '✅f(17) = 17',
34: 1:    '✅f(21) = FizzMuzz',
34: 1:    '✅f(33) = FizzDuzz',
34: 1:    '✅f(35) = BuzzMuzz',
34: 1:    '✅f(39) = FizzCazz',
34: 1:    '✅f(49) = Muzz',
34: 1:    '✅f(55) = BuzzDuzz',
34: 1:    '✅f(65) = BuzzCazz',
34: 1:    '✅f(77) = MuzzDuzz',
34: 1:    '✅f(91) = MuzzCazz',
34: 1:    '✅f(105) = FizzBuzzMuzz',
34: 1:    '❌f(165) = ??? != FizzBuzzDuzz'
34: 1:  ],
34: 1:  'level': 1,
34: 1:  'nextQuestion': '165',
34: 1:  'questions': [
34: 1:    '1',
34: 1:    '2',
34: 1:    '3',
34: 1:    '4',
34: 1:    '5',
34: 1:    '6',
34: 1:    '7',
34: 1:    '8',
34: 1:    '9',
34: 1:    '10',
34: 1:    '11',
34: 1:    '12',
34: 1:    '13',
34: 1:    '14',
34: 1:    '15',
34: 1:    '16',
34: 1:    '17',
34: 1:    '21',
34: 1:    '33',
34: 1:    '35',
34: 1:    '39',
34: 1:    '49',
34: 1:    '55',
34: 1:    '65',
34: 1:    '77',
34: 1:    '91',
34: 1:    '105',
34: 1:    '165'
34: 1:  ]
34: 1:}
34: 1:Scores: 32
34: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz']')
34: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
35: 1:BoardData {
35: 1:  'description': [
35: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
35: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
35: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
35: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
35: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
35: 1:    'Please write optimized code without any duplication.',
35: 1:    'For divider 11 - the word must be 'Duzz'.',
35: 1:    'For divider 13 - the word must be 'Cazz'.'
35: 1:  ],
35: 1:  'expectedAnswer': 'FizzBuzzCazz',
35: 1:  'history': [
35: 1:    {
35: 1:      'answer': '1',
35: 1:      'question': '1',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '2',
35: 1:      'question': '2',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Fizz',
35: 1:      'question': '3',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '4',
35: 1:      'question': '4',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Buzz',
35: 1:      'question': '5',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Fizz',
35: 1:      'question': '6',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Muzz',
35: 1:      'question': '7',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '8',
35: 1:      'question': '8',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Fizz',
35: 1:      'question': '9',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Buzz',
35: 1:      'question': '10',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Duzz',
35: 1:      'question': '11',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Fizz',
35: 1:      'question': '12',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Cazz',
35: 1:      'question': '13',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Muzz',
35: 1:      'question': '14',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzBuzz',
35: 1:      'question': '15',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '16',
35: 1:      'question': '16',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '17',
35: 1:      'question': '17',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzMuzz',
35: 1:      'question': '21',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzDuzz',
35: 1:      'question': '33',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'BuzzMuzz',
35: 1:      'question': '35',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzCazz',
35: 1:      'question': '39',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Muzz',
35: 1:      'question': '49',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'BuzzDuzz',
35: 1:      'question': '55',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'BuzzCazz',
35: 1:      'question': '65',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'MuzzDuzz',
35: 1:      'question': '77',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'MuzzCazz',
35: 1:      'question': '91',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzBuzzMuzz',
35: 1:      'question': '105',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzBuzzDuzz',
35: 1:      'question': '165',
35: 1:      'valid': true
35: 1:    }
35: 1:  ],
35: 1:  'info': [
35: 1:    '✅f(1) = 1',
35: 1:    '✅f(2) = 2',
35: 1:    '✅f(3) = Fizz',
35: 1:    '✅f(4) = 4',
35: 1:    '✅f(5) = Buzz',
35: 1:    '✅f(6) = Fizz',
35: 1:    '✅f(7) = Muzz',
35: 1:    '✅f(8) = 8',
35: 1:    '✅f(9) = Fizz',
35: 1:    '✅f(10) = Buzz',
35: 1:    '✅f(11) = Duzz',
35: 1:    '✅f(12) = Fizz',
35: 1:    '✅f(13) = Cazz',
35: 1:    '✅f(14) = Muzz',
35: 1:    '✅f(15) = FizzBuzz',
35: 1:    '✅f(16) = 16',
35: 1:    '✅f(17) = 17',
35: 1:    '✅f(21) = FizzMuzz',
35: 1:    '✅f(33) = FizzDuzz',
35: 1:    '✅f(35) = BuzzMuzz',
35: 1:    '✅f(39) = FizzCazz',
35: 1:    '✅f(49) = Muzz',
35: 1:    '✅f(55) = BuzzDuzz',
35: 1:    '✅f(65) = BuzzCazz',
35: 1:    '✅f(77) = MuzzDuzz',
35: 1:    '✅f(91) = MuzzCazz',
35: 1:    '✅f(105) = FizzBuzzMuzz',
35: 1:    '✅f(165) = FizzBuzzDuzz',
35: 1:    '❌f(195) = ??? != FizzBuzzCazz'
35: 1:  ],
35: 1:  'level': 1,
35: 1:  'nextQuestion': '195',
35: 1:  'questions': [
35: 1:    '1',
35: 1:    '2',
35: 1:    '3',
35: 1:    '4',
35: 1:    '5',
35: 1:    '6',
35: 1:    '7',
35: 1:    '8',
35: 1:    '9',
35: 1:    '10',
35: 1:    '11',
35: 1:    '12',
35: 1:    '13',
35: 1:    '14',
35: 1:    '15',
35: 1:    '16',
35: 1:    '17',
35: 1:    '21',
35: 1:    '33',
35: 1:    '35',
35: 1:    '39',
35: 1:    '49',
35: 1:    '55',
35: 1:    '65',
35: 1:    '77',
35: 1:    '91',
35: 1:    '105',
35: 1:    '165',
35: 1:    '195'
35: 1:  ]
35: 1:}
35: 1:Scores: 33
35: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz']')
35: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
36: 1:BoardData {
36: 1:  'description': [
36: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
36: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
36: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
36: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
36: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
36: 1:    'Please write optimized code without any duplication.',
36: 1:    'For divider 11 - the word must be 'Duzz'.',
36: 1:    'For divider 13 - the word must be 'Cazz'.'
36: 1:  ],
36: 1:  'expectedAnswer': 'FizzMuzzDuzz',
36: 1:  'history': [
36: 1:    {
36: 1:      'answer': '1',
36: 1:      'question': '1',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '2',
36: 1:      'question': '2',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Fizz',
36: 1:      'question': '3',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '4',
36: 1:      'question': '4',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Buzz',
36: 1:      'question': '5',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Fizz',
36: 1:      'question': '6',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Muzz',
36: 1:      'question': '7',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '8',
36: 1:      'question': '8',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Fizz',
36: 1:      'question': '9',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Buzz',
36: 1:      'question': '10',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Duzz',
36: 1:      'question': '11',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Fizz',
36: 1:      'question': '12',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Cazz',
36: 1:      'question': '13',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Muzz',
36: 1:      'question': '14',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzBuzz',
36: 1:      'question': '15',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '16',
36: 1:      'question': '16',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '17',
36: 1:      'question': '17',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzMuzz',
36: 1:      'question': '21',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzDuzz',
36: 1:      'question': '33',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'BuzzMuzz',
36: 1:      'question': '35',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzCazz',
36: 1:      'question': '39',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Muzz',
36: 1:      'question': '49',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'BuzzDuzz',
36: 1:      'question': '55',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'BuzzCazz',
36: 1:      'question': '65',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'MuzzDuzz',
36: 1:      'question': '77',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'MuzzCazz',
36: 1:      'question': '91',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzBuzzMuzz',
36: 1:      'question': '105',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzBuzzDuzz',
36: 1:      'question': '165',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzBuzzCazz',
36: 1:      'question': '195',
36: 1:      'valid': true
36: 1:    }
36: 1:  ],
36: 1:  'info': [
36: 1:    '✅f(1) = 1',
36: 1:    '✅f(2) = 2',
36: 1:    '✅f(3) = Fizz',
36: 1:    '✅f(4) = 4',
36: 1:    '✅f(5) = Buzz',
36: 1:    '✅f(6) = Fizz',
36: 1:    '✅f(7) = Muzz',
36: 1:    '✅f(8) = 8',
36: 1:    '✅f(9) = Fizz',
36: 1:    '✅f(10) = Buzz',
36: 1:    '✅f(11) = Duzz',
36: 1:    '✅f(12) = Fizz',
36: 1:    '✅f(13) = Cazz',
36: 1:    '✅f(14) = Muzz',
36: 1:    '✅f(15) = FizzBuzz',
36: 1:    '✅f(16) = 16',
36: 1:    '✅f(17) = 17',
36: 1:    '✅f(21) = FizzMuzz',
36: 1:    '✅f(33) = FizzDuzz',
36: 1:    '✅f(35) = BuzzMuzz',
36: 1:    '✅f(39) = FizzCazz',
36: 1:    '✅f(49) = Muzz',
36: 1:    '✅f(55) = BuzzDuzz',
36: 1:    '✅f(65) = BuzzCazz',
36: 1:    '✅f(77) = MuzzDuzz',
36: 1:    '✅f(91) = MuzzCazz',
36: 1:    '✅f(105) = FizzBuzzMuzz',
36: 1:    '✅f(165) = FizzBuzzDuzz',
36: 1:    '✅f(195) = FizzBuzzCazz',
36: 1:    '❌f(231) = ??? != FizzMuzzDuzz'
36: 1:  ],
36: 1:  'level': 1,
36: 1:  'nextQuestion': '231',
36: 1:  'questions': [
36: 1:    '1',
36: 1:    '2',
36: 1:    '3',
36: 1:    '4',
36: 1:    '5',
36: 1:    '6',
36: 1:    '7',
36: 1:    '8',
36: 1:    '9',
36: 1:    '10',
36: 1:    '11',
36: 1:    '12',
36: 1:    '13',
36: 1:    '14',
36: 1:    '15',
36: 1:    '16',
36: 1:    '17',
36: 1:    '21',
36: 1:    '33',
36: 1:    '35',
36: 1:    '39',
36: 1:    '49',
36: 1:    '55',
36: 1:    '65',
36: 1:    '77',
36: 1:    '91',
36: 1:    '105',
36: 1:    '165',
36: 1:    '195',
36: 1:    '231'
36: 1:  ]
36: 1:}
36: 1:Scores: 34
36: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz']')
36: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
37: 1:BoardData {
37: 1:  'description': [
37: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
37: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
37: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
37: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
37: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
37: 1:    'Please write optimized code without any duplication.',
37: 1:    'For divider 11 - the word must be 'Duzz'.',
37: 1:    'For divider 13 - the word must be 'Cazz'.'
37: 1:  ],
37: 1:  'expectedAnswer': 'FizzMuzzCazz',
37: 1:  'history': [
37: 1:    {
37: 1:      'answer': '1',
37: 1:      'question': '1',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '2',
37: 1:      'question': '2',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Fizz',
37: 1:      'question': '3',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '4',
37: 1:      'question': '4',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Buzz',
37: 1:      'question': '5',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Fizz',
37: 1:      'question': '6',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Muzz',
37: 1:      'question': '7',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '8',
37: 1:      'question': '8',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Fizz',
37: 1:      'question': '9',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Buzz',
37: 1:      'question': '10',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Duzz',
37: 1:      'question': '11',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Fizz',
37: 1:      'question': '12',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Cazz',
37: 1:      'question': '13',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Muzz',
37: 1:      'question': '14',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzBuzz',
37: 1:      'question': '15',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '16',
37: 1:      'question': '16',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '17',
37: 1:      'question': '17',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzMuzz',
37: 1:      'question': '21',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzDuzz',
37: 1:      'question': '33',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'BuzzMuzz',
37: 1:      'question': '35',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzCazz',
37: 1:      'question': '39',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Muzz',
37: 1:      'question': '49',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'BuzzDuzz',
37: 1:      'question': '55',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'BuzzCazz',
37: 1:      'question': '65',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'MuzzDuzz',
37: 1:      'question': '77',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'MuzzCazz',
37: 1:      'question': '91',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzBuzzMuzz',
37: 1:      'question': '105',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzBuzzDuzz',
37: 1:      'question': '165',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzBuzzCazz',
37: 1:      'question': '195',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzMuzzDuzz',
37: 1:      'question': '231',
37: 1:      'valid': true
37: 1:    }
37: 1:  ],
37: 1:  'info': [
37: 1:    '✅f(1) = 1',
37: 1:    '✅f(2) = 2',
37: 1:    '✅f(3) = Fizz',
37: 1:    '✅f(4) = 4',
37: 1:    '✅f(5) = Buzz',
37: 1:    '✅f(6) = Fizz',
37: 1:    '✅f(7) = Muzz',
37: 1:    '✅f(8) = 8',
37: 1:    '✅f(9) = Fizz',
37: 1:    '✅f(10) = Buzz',
37: 1:    '✅f(11) = Duzz',
37: 1:    '✅f(12) = Fizz',
37: 1:    '✅f(13) = Cazz',
37: 1:    '✅f(14) = Muzz',
37: 1:    '✅f(15) = FizzBuzz',
37: 1:    '✅f(16) = 16',
37: 1:    '✅f(17) = 17',
37: 1:    '✅f(21) = FizzMuzz',
37: 1:    '✅f(33) = FizzDuzz',
37: 1:    '✅f(35) = BuzzMuzz',
37: 1:    '✅f(39) = FizzCazz',
37: 1:    '✅f(49) = Muzz',
37: 1:    '✅f(55) = BuzzDuzz',
37: 1:    '✅f(65) = BuzzCazz',
37: 1:    '✅f(77) = MuzzDuzz',
37: 1:    '✅f(91) = MuzzCazz',
37: 1:    '✅f(105) = FizzBuzzMuzz',
37: 1:    '✅f(165) = FizzBuzzDuzz',
37: 1:    '✅f(195) = FizzBuzzCazz',
37: 1:    '✅f(231) = FizzMuzzDuzz',
37: 1:    '❌f(273) = ??? != FizzMuzzCazz'
37: 1:  ],
37: 1:  'level': 1,
37: 1:  'nextQuestion': '273',
37: 1:  'questions': [
37: 1:    '1',
37: 1:    '2',
37: 1:    '3',
37: 1:    '4',
37: 1:    '5',
37: 1:    '6',
37: 1:    '7',
37: 1:    '8',
37: 1:    '9',
37: 1:    '10',
37: 1:    '11',
37: 1:    '12',
37: 1:    '13',
37: 1:    '14',
37: 1:    '15',
37: 1:    '16',
37: 1:    '17',
37: 1:    '21',
37: 1:    '33',
37: 1:    '35',
37: 1:    '39',
37: 1:    '49',
37: 1:    '55',
37: 1:    '65',
37: 1:    '77',
37: 1:    '91',
37: 1:    '105',
37: 1:    '165',
37: 1:    '195',
37: 1:    '231',
37: 1:    '273'
37: 1:  ]
37: 1:}
37: 1:Scores: 35
37: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz']')
37: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
38: 1:BoardData {
38: 1:  'description': [
38: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
38: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
38: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
38: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
38: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
38: 1:    'Please write optimized code without any duplication.',
38: 1:    'For divider 11 - the word must be 'Duzz'.',
38: 1:    'For divider 13 - the word must be 'Cazz'.'
38: 1:  ],
38: 1:  'expectedAnswer': 'BuzzMuzzDuzz',
38: 1:  'history': [
38: 1:    {
38: 1:      'answer': '1',
38: 1:      'question': '1',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '2',
38: 1:      'question': '2',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Fizz',
38: 1:      'question': '3',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '4',
38: 1:      'question': '4',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Buzz',
38: 1:      'question': '5',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Fizz',
38: 1:      'question': '6',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Muzz',
38: 1:      'question': '7',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '8',
38: 1:      'question': '8',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Fizz',
38: 1:      'question': '9',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Buzz',
38: 1:      'question': '10',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Duzz',
38: 1:      'question': '11',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Fizz',
38: 1:      'question': '12',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Cazz',
38: 1:      'question': '13',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Muzz',
38: 1:      'question': '14',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzBuzz',
38: 1:      'question': '15',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '16',
38: 1:      'question': '16',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '17',
38: 1:      'question': '17',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzMuzz',
38: 1:      'question': '21',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzDuzz',
38: 1:      'question': '33',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'BuzzMuzz',
38: 1:      'question': '35',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzCazz',
38: 1:      'question': '39',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Muzz',
38: 1:      'question': '49',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'BuzzDuzz',
38: 1:      'question': '55',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'BuzzCazz',
38: 1:      'question': '65',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'MuzzDuzz',
38: 1:      'question': '77',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'MuzzCazz',
38: 1:      'question': '91',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzBuzzMuzz',
38: 1:      'question': '105',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzBuzzDuzz',
38: 1:      'question': '165',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzBuzzCazz',
38: 1:      'question': '195',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzMuzzDuzz',
38: 1:      'question': '231',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzMuzzCazz',
38: 1:      'question': '273',
38: 1:      'valid': true
38: 1:    }
38: 1:  ],
38: 1:  'info': [
38: 1:    '✅f(1) = 1',
38: 1:    '✅f(2) = 2',
38: 1:    '✅f(3) = Fizz',
38: 1:    '✅f(4) = 4',
38: 1:    '✅f(5) = Buzz',
38: 1:    '✅f(6) = Fizz',
38: 1:    '✅f(7) = Muzz',
38: 1:    '✅f(8) = 8',
38: 1:    '✅f(9) = Fizz',
38: 1:    '✅f(10) = Buzz',
38: 1:    '✅f(11) = Duzz',
38: 1:    '✅f(12) = Fizz',
38: 1:    '✅f(13) = Cazz',
38: 1:    '✅f(14) = Muzz',
38: 1:    '✅f(15) = FizzBuzz',
38: 1:    '✅f(16) = 16',
38: 1:    '✅f(17) = 17',
38: 1:    '✅f(21) = FizzMuzz',
38: 1:    '✅f(33) = FizzDuzz',
38: 1:    '✅f(35) = BuzzMuzz',
38: 1:    '✅f(39) = FizzCazz',
38: 1:    '✅f(49) = Muzz',
38: 1:    '✅f(55) = BuzzDuzz',
38: 1:    '✅f(65) = BuzzCazz',
38: 1:    '✅f(77) = MuzzDuzz',
38: 1:    '✅f(91) = MuzzCazz',
38: 1:    '✅f(105) = FizzBuzzMuzz',
38: 1:    '✅f(165) = FizzBuzzDuzz',
38: 1:    '✅f(195) = FizzBuzzCazz',
38: 1:    '✅f(231) = FizzMuzzDuzz',
38: 1:    '✅f(273) = FizzMuzzCazz',
38: 1:    '❌f(385) = ??? != BuzzMuzzDuzz'
38: 1:  ],
38: 1:  'level': 1,
38: 1:  'nextQuestion': '385',
38: 1:  'questions': [
38: 1:    '1',
38: 1:    '2',
38: 1:    '3',
38: 1:    '4',
38: 1:    '5',
38: 1:    '6',
38: 1:    '7',
38: 1:    '8',
38: 1:    '9',
38: 1:    '10',
38: 1:    '11',
38: 1:    '12',
38: 1:    '13',
38: 1:    '14',
38: 1:    '15',
38: 1:    '16',
38: 1:    '17',
38: 1:    '21',
38: 1:    '33',
38: 1:    '35',
38: 1:    '39',
38: 1:    '49',
38: 1:    '55',
38: 1:    '65',
38: 1:    '77',
38: 1:    '91',
38: 1:    '105',
38: 1:    '165',
38: 1:    '195',
38: 1:    '231',
38: 1:    '273',
38: 1:    '385'
38: 1:  ]
38: 1:}
38: 1:Scores: 36
38: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz']')
38: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
39: 1:BoardData {
39: 1:  'description': [
39: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
39: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
39: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
39: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
39: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
39: 1:    'Please write optimized code without any duplication.',
39: 1:    'For divider 11 - the word must be 'Duzz'.',
39: 1:    'For divider 13 - the word must be 'Cazz'.'
39: 1:  ],
39: 1:  'expectedAnswer': 'BuzzMuzzCazz',
39: 1:  'history': [
39: 1:    {
39: 1:      'answer': '1',
39: 1:      'question': '1',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '2',
39: 1:      'question': '2',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Fizz',
39: 1:      'question': '3',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '4',
39: 1:      'question': '4',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Buzz',
39: 1:      'question': '5',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Fizz',
39: 1:      'question': '6',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Muzz',
39: 1:      'question': '7',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '8',
39: 1:      'question': '8',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Fizz',
39: 1:      'question': '9',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Buzz',
39: 1:      'question': '10',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Duzz',
39: 1:      'question': '11',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Fizz',
39: 1:      'question': '12',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Cazz',
39: 1:      'question': '13',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Muzz',
39: 1:      'question': '14',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzBuzz',
39: 1:      'question': '15',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '16',
39: 1:      'question': '16',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '17',
39: 1:      'question': '17',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzMuzz',
39: 1:      'question': '21',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzDuzz',
39: 1:      'question': '33',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'BuzzMuzz',
39: 1:      'question': '35',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzCazz',
39: 1:      'question': '39',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Muzz',
39: 1:      'question': '49',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'BuzzDuzz',
39: 1:      'question': '55',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'BuzzCazz',
39: 1:      'question': '65',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'MuzzDuzz',
39: 1:      'question': '77',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'MuzzCazz',
39: 1:      'question': '91',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzBuzzMuzz',
39: 1:      'question': '105',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzBuzzDuzz',
39: 1:      'question': '165',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzBuzzCazz',
39: 1:      'question': '195',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzMuzzDuzz',
39: 1:      'question': '231',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzMuzzCazz',
39: 1:      'question': '273',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'BuzzMuzzDuzz',
39: 1:      'question': '385',
39: 1:      'valid': true
39: 1:    }
39: 1:  ],
39: 1:  'info': [
39: 1:    '✅f(1) = 1',
39: 1:    '✅f(2) = 2',
39: 1:    '✅f(3) = Fizz',
39: 1:    '✅f(4) = 4',
39: 1:    '✅f(5) = Buzz',
39: 1:    '✅f(6) = Fizz',
39: 1:    '✅f(7) = Muzz',
39: 1:    '✅f(8) = 8',
39: 1:    '✅f(9) = Fizz',
39: 1:    '✅f(10) = Buzz',
39: 1:    '✅f(11) = Duzz',
39: 1:    '✅f(12) = Fizz',
39: 1:    '✅f(13) = Cazz',
39: 1:    '✅f(14) = Muzz',
39: 1:    '✅f(15) = FizzBuzz',
39: 1:    '✅f(16) = 16',
39: 1:    '✅f(17) = 17',
39: 1:    '✅f(21) = FizzMuzz',
39: 1:    '✅f(33) = FizzDuzz',
39: 1:    '✅f(35) = BuzzMuzz',
39: 1:    '✅f(39) = FizzCazz',
39: 1:    '✅f(49) = Muzz',
39: 1:    '✅f(55) = BuzzDuzz',
39: 1:    '✅f(65) = BuzzCazz',
39: 1:    '✅f(77) = MuzzDuzz',
39: 1:    '✅f(91) = MuzzCazz',
39: 1:    '✅f(105) = FizzBuzzMuzz',
39: 1:    '✅f(165) = FizzBuzzDuzz',
39: 1:    '✅f(195) = FizzBuzzCazz',
39: 1:    '✅f(231) = FizzMuzzDuzz',
39: 1:    '✅f(273) = FizzMuzzCazz',
39: 1:    '✅f(385) = BuzzMuzzDuzz',
39: 1:    '❌f(455) = ??? != BuzzMuzzCazz'
39: 1:  ],
39: 1:  'level': 1,
39: 1:  'nextQuestion': '455',
39: 1:  'questions': [
39: 1:    '1',
39: 1:    '2',
39: 1:    '3',
39: 1:    '4',
39: 1:    '5',
39: 1:    '6',
39: 1:    '7',
39: 1:    '8',
39: 1:    '9',
39: 1:    '10',
39: 1:    '11',
39: 1:    '12',
39: 1:    '13',
39: 1:    '14',
39: 1:    '15',
39: 1:    '16',
39: 1:    '17',
39: 1:    '21',
39: 1:    '33',
39: 1:    '35',
39: 1:    '39',
39: 1:    '49',
39: 1:    '55',
39: 1:    '65',
39: 1:    '77',
39: 1:    '91',
39: 1:    '105',
39: 1:    '165',
39: 1:    '195',
39: 1:    '231',
39: 1:    '273',
39: 1:    '385',
39: 1:    '455'
39: 1:  ]
39: 1:}
39: 1:Scores: 37
39: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz']')
39: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
40: 1:BoardData {
40: 1:  'description': [
40: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
40: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
40: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
40: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
40: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
40: 1:    'Please write optimized code without any duplication.',
40: 1:    'For divider 11 - the word must be 'Duzz'.',
40: 1:    'For divider 13 - the word must be 'Cazz'.'
40: 1:  ],
40: 1:  'expectedAnswer': 'BuzzDuzzCazz',
40: 1:  'history': [
40: 1:    {
40: 1:      'answer': '1',
40: 1:      'question': '1',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '2',
40: 1:      'question': '2',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Fizz',
40: 1:      'question': '3',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '4',
40: 1:      'question': '4',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Buzz',
40: 1:      'question': '5',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Fizz',
40: 1:      'question': '6',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Muzz',
40: 1:      'question': '7',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '8',
40: 1:      'question': '8',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Fizz',
40: 1:      'question': '9',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Buzz',
40: 1:      'question': '10',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Duzz',
40: 1:      'question': '11',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Fizz',
40: 1:      'question': '12',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Cazz',
40: 1:      'question': '13',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Muzz',
40: 1:      'question': '14',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzBuzz',
40: 1:      'question': '15',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '16',
40: 1:      'question': '16',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '17',
40: 1:      'question': '17',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzMuzz',
40: 1:      'question': '21',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzDuzz',
40: 1:      'question': '33',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzMuzz',
40: 1:      'question': '35',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzCazz',
40: 1:      'question': '39',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Muzz',
40: 1:      'question': '49',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzDuzz',
40: 1:      'question': '55',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzCazz',
40: 1:      'question': '65',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'MuzzDuzz',
40: 1:      'question': '77',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'MuzzCazz',
40: 1:      'question': '91',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzBuzzMuzz',
40: 1:      'question': '105',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzBuzzDuzz',
40: 1:      'question': '165',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzBuzzCazz',
40: 1:      'question': '195',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzMuzzDuzz',
40: 1:      'question': '231',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzMuzzCazz',
40: 1:      'question': '273',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzMuzzDuzz',
40: 1:      'question': '385',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzMuzzCazz',
40: 1:      'question': '455',
40: 1:      'valid': true
40: 1:    }
40: 1:  ],
40: 1:  'info': [
40: 1:    '✅f(1) = 1',
40: 1:    '✅f(2) = 2',
40: 1:    '✅f(3) = Fizz',
40: 1:    '✅f(4) = 4',
40: 1:    '✅f(5) = Buzz',
40: 1:    '✅f(6) = Fizz',
40: 1:    '✅f(7) = Muzz',
40: 1:    '✅f(8) = 8',
40: 1:    '✅f(9) = Fizz',
40: 1:    '✅f(10) = Buzz',
40: 1:    '✅f(11) = Duzz',
40: 1:    '✅f(12) = Fizz',
40: 1:    '✅f(13) = Cazz',
40: 1:    '✅f(14) = Muzz',
40: 1:    '✅f(15) = FizzBuzz',
40: 1:    '✅f(16) = 16',
40: 1:    '✅f(17) = 17',
40: 1:    '✅f(21) = FizzMuzz',
40: 1:    '✅f(33) = FizzDuzz',
40: 1:    '✅f(35) = BuzzMuzz',
40: 1:    '✅f(39) = FizzCazz',
40: 1:    '✅f(49) = Muzz',
40: 1:    '✅f(55) = BuzzDuzz',
40: 1:    '✅f(65) = BuzzCazz',
40: 1:    '✅f(77) = MuzzDuzz',
40: 1:    '✅f(91) = MuzzCazz',
40: 1:    '✅f(105) = FizzBuzzMuzz',
40: 1:    '✅f(165) = FizzBuzzDuzz',
40: 1:    '✅f(195) = FizzBuzzCazz',
40: 1:    '✅f(231) = FizzMuzzDuzz',
40: 1:    '✅f(273) = FizzMuzzCazz',
40: 1:    '✅f(385) = BuzzMuzzDuzz',
40: 1:    '✅f(455) = BuzzMuzzCazz',
40: 1:    '❌f(715) = ??? != BuzzDuzzCazz'
40: 1:  ],
40: 1:  'level': 1,
40: 1:  'nextQuestion': '715',
40: 1:  'questions': [
40: 1:    '1',
40: 1:    '2',
40: 1:    '3',
40: 1:    '4',
40: 1:    '5',
40: 1:    '6',
40: 1:    '7',
40: 1:    '8',
40: 1:    '9',
40: 1:    '10',
40: 1:    '11',
40: 1:    '12',
40: 1:    '13',
40: 1:    '14',
40: 1:    '15',
40: 1:    '16',
40: 1:    '17',
40: 1:    '21',
40: 1:    '33',
40: 1:    '35',
40: 1:    '39',
40: 1:    '49',
40: 1:    '55',
40: 1:    '65',
40: 1:    '77',
40: 1:    '91',
40: 1:    '105',
40: 1:    '165',
40: 1:    '195',
40: 1:    '231',
40: 1:    '273',
40: 1:    '385',
40: 1:    '455',
40: 1:    '715'
40: 1:  ]
40: 1:}
40: 1:Scores: 38
40: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz']')
40: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
41: 1:BoardData {
41: 1:  'description': [
41: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
41: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
41: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
41: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
41: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
41: 1:    'Please write optimized code without any duplication.',
41: 1:    'For divider 11 - the word must be 'Duzz'.',
41: 1:    'For divider 13 - the word must be 'Cazz'.'
41: 1:  ],
41: 1:  'expectedAnswer': 'MuzzDuzzCazz',
41: 1:  'history': [
41: 1:    {
41: 1:      'answer': '1',
41: 1:      'question': '1',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '2',
41: 1:      'question': '2',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Fizz',
41: 1:      'question': '3',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '4',
41: 1:      'question': '4',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Buzz',
41: 1:      'question': '5',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Fizz',
41: 1:      'question': '6',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Muzz',
41: 1:      'question': '7',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '8',
41: 1:      'question': '8',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Fizz',
41: 1:      'question': '9',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Buzz',
41: 1:      'question': '10',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Duzz',
41: 1:      'question': '11',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Fizz',
41: 1:      'question': '12',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Cazz',
41: 1:      'question': '13',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Muzz',
41: 1:      'question': '14',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzBuzz',
41: 1:      'question': '15',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '16',
41: 1:      'question': '16',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '17',
41: 1:      'question': '17',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzMuzz',
41: 1:      'question': '21',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzDuzz',
41: 1:      'question': '33',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzMuzz',
41: 1:      'question': '35',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzCazz',
41: 1:      'question': '39',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Muzz',
41: 1:      'question': '49',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzDuzz',
41: 1:      'question': '55',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzCazz',
41: 1:      'question': '65',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'MuzzDuzz',
41: 1:      'question': '77',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'MuzzCazz',
41: 1:      'question': '91',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzBuzzMuzz',
41: 1:      'question': '105',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzBuzzDuzz',
41: 1:      'question': '165',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzBuzzCazz',
41: 1:      'question': '195',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzMuzzDuzz',
41: 1:      'question': '231',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzMuzzCazz',
41: 1:      'question': '273',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzMuzzDuzz',
41: 1:      'question': '385',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzMuzzCazz',
41: 1:      'question': '455',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzDuzzCazz',
41: 1:      'question': '715',
41: 1:      'valid': true
41: 1:    }
41: 1:  ],
41: 1:  'info': [
41: 1:    '✅f(1) = 1',
41: 1:    '✅f(2) = 2',
41: 1:    '✅f(3) = Fizz',
41: 1:    '✅f(4) = 4',
41: 1:    '✅f(5) = Buzz',
41: 1:    '✅f(6) = Fizz',
41: 1:    '✅f(7) = Muzz',
41: 1:    '✅f(8) = 8',
41: 1:    '✅f(9) = Fizz',
41: 1:    '✅f(10) = Buzz',
41: 1:    '✅f(11) = Duzz',
41: 1:    '✅f(12) = Fizz',
41: 1:    '✅f(13) = Cazz',
41: 1:    '✅f(14) = Muzz',
41: 1:    '✅f(15) = FizzBuzz',
41: 1:    '✅f(16) = 16',
41: 1:    '✅f(17) = 17',
41: 1:    '✅f(21) = FizzMuzz',
41: 1:    '✅f(33) = FizzDuzz',
41: 1:    '✅f(35) = BuzzMuzz',
41: 1:    '✅f(39) = FizzCazz',
41: 1:    '✅f(49) = Muzz',
41: 1:    '✅f(55) = BuzzDuzz',
41: 1:    '✅f(65) = BuzzCazz',
41: 1:    '✅f(77) = MuzzDuzz',
41: 1:    '✅f(91) = MuzzCazz',
41: 1:    '✅f(105) = FizzBuzzMuzz',
41: 1:    '✅f(165) = FizzBuzzDuzz',
41: 1:    '✅f(195) = FizzBuzzCazz',
41: 1:    '✅f(231) = FizzMuzzDuzz',
41: 1:    '✅f(273) = FizzMuzzCazz',
41: 1:    '✅f(385) = BuzzMuzzDuzz',
41: 1:    '✅f(455) = BuzzMuzzCazz',
41: 1:    '✅f(715) = BuzzDuzzCazz',
41: 1:    '❌f(1001) = ??? != MuzzDuzzCazz'
41: 1:  ],
41: 1:  'level': 1,
41: 1:  'nextQuestion': '1001',
41: 1:  'questions': [
41: 1:    '1',
41: 1:    '2',
41: 1:    '3',
41: 1:    '4',
41: 1:    '5',
41: 1:    '6',
41: 1:    '7',
41: 1:    '8',
41: 1:    '9',
41: 1:    '10',
41: 1:    '11',
41: 1:    '12',
41: 1:    '13',
41: 1:    '14',
41: 1:    '15',
41: 1:    '16',
41: 1:    '17',
41: 1:    '21',
41: 1:    '33',
41: 1:    '35',
41: 1:    '39',
41: 1:    '49',
41: 1:    '55',
41: 1:    '65',
41: 1:    '77',
41: 1:    '91',
41: 1:    '105',
41: 1:    '165',
41: 1:    '195',
41: 1:    '231',
41: 1:    '273',
41: 1:    '385',
41: 1:    '455',
41: 1:    '715',
41: 1:    '1001'
41: 1:  ]
41: 1:}
41: 1:Scores: 39
41: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz']')
41: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
42: 1:BoardData {
42: 1:  'description': [
42: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
42: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
42: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
42: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
42: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
42: 1:    'Please write optimized code without any duplication.',
42: 1:    'For divider 11 - the word must be 'Duzz'.',
42: 1:    'For divider 13 - the word must be 'Cazz'.'
42: 1:  ],
42: 1:  'expectedAnswer': 'FizzBuzzMuzzDuzz',
42: 1:  'history': [
42: 1:    {
42: 1:      'answer': '1',
42: 1:      'question': '1',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '2',
42: 1:      'question': '2',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Fizz',
42: 1:      'question': '3',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '4',
42: 1:      'question': '4',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Buzz',
42: 1:      'question': '5',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Fizz',
42: 1:      'question': '6',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Muzz',
42: 1:      'question': '7',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '8',
42: 1:      'question': '8',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Fizz',
42: 1:      'question': '9',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Buzz',
42: 1:      'question': '10',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Duzz',
42: 1:      'question': '11',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Fizz',
42: 1:      'question': '12',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Cazz',
42: 1:      'question': '13',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Muzz',
42: 1:      'question': '14',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzBuzz',
42: 1:      'question': '15',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '16',
42: 1:      'question': '16',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '17',
42: 1:      'question': '17',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzMuzz',
42: 1:      'question': '21',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzDuzz',
42: 1:      'question': '33',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzMuzz',
42: 1:      'question': '35',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzCazz',
42: 1:      'question': '39',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Muzz',
42: 1:      'question': '49',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzDuzz',
42: 1:      'question': '55',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzCazz',
42: 1:      'question': '65',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'MuzzDuzz',
42: 1:      'question': '77',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'MuzzCazz',
42: 1:      'question': '91',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzBuzzMuzz',
42: 1:      'question': '105',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzBuzzDuzz',
42: 1:      'question': '165',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzBuzzCazz',
42: 1:      'question': '195',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzMuzzDuzz',
42: 1:      'question': '231',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzMuzzCazz',
42: 1:      'question': '273',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzMuzzDuzz',
42: 1:      'question': '385',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzMuzzCazz',
42: 1:      'question': '455',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzDuzzCazz',
42: 1:      'question': '715',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'MuzzDuzzCazz',
42: 1:      'question': '1001',
42: 1:      'valid': true
42: 1:    }
42: 1:  ],
42: 1:  'info': [
42: 1:    '✅f(1) = 1',
42: 1:    '✅f(2) = 2',
42: 1:    '✅f(3) = Fizz',
42: 1:    '✅f(4) = 4',
42: 1:    '✅f(5) = Buzz',
42: 1:    '✅f(6) = Fizz',
42: 1:    '✅f(7) = Muzz',
42: 1:    '✅f(8) = 8',
42: 1:    '✅f(9) = Fizz',
42: 1:    '✅f(10) = Buzz',
42: 1:    '✅f(11) = Duzz',
42: 1:    '✅f(12) = Fizz',
42: 1:    '✅f(13) = Cazz',
42: 1:    '✅f(14) = Muzz',
42: 1:    '✅f(15) = FizzBuzz',
42: 1:    '✅f(16) = 16',
42: 1:    '✅f(17) = 17',
42: 1:    '✅f(21) = FizzMuzz',
42: 1:    '✅f(33) = FizzDuzz',
42: 1:    '✅f(35) = BuzzMuzz',
42: 1:    '✅f(39) = FizzCazz',
42: 1:    '✅f(49) = Muzz',
42: 1:    '✅f(55) = BuzzDuzz',
42: 1:    '✅f(65) = BuzzCazz',
42: 1:    '✅f(77) = MuzzDuzz',
42: 1:    '✅f(91) = MuzzCazz',
42: 1:    '✅f(105) = FizzBuzzMuzz',
42: 1:    '✅f(165) = FizzBuzzDuzz',
42: 1:    '✅f(195) = FizzBuzzCazz',
42: 1:    '✅f(231) = FizzMuzzDuzz',
42: 1:    '✅f(273) = FizzMuzzCazz',
42: 1:    '✅f(385) = BuzzMuzzDuzz',
42: 1:    '✅f(455) = BuzzMuzzCazz',
42: 1:    '✅f(715) = BuzzDuzzCazz',
42: 1:    '✅f(1001) = MuzzDuzzCazz',
42: 1:    '❌f(1155) = ??? != FizzBuzzMuzzDuzz'
42: 1:  ],
42: 1:  'level': 1,
42: 1:  'nextQuestion': '1155',
42: 1:  'questions': [
42: 1:    '1',
42: 1:    '2',
42: 1:    '3',
42: 1:    '4',
42: 1:    '5',
42: 1:    '6',
42: 1:    '7',
42: 1:    '8',
42: 1:    '9',
42: 1:    '10',
42: 1:    '11',
42: 1:    '12',
42: 1:    '13',
42: 1:    '14',
42: 1:    '15',
42: 1:    '16',
42: 1:    '17',
42: 1:    '21',
42: 1:    '33',
42: 1:    '35',
42: 1:    '39',
42: 1:    '49',
42: 1:    '55',
42: 1:    '65',
42: 1:    '77',
42: 1:    '91',
42: 1:    '105',
42: 1:    '165',
42: 1:    '195',
42: 1:    '231',
42: 1:    '273',
42: 1:    '385',
42: 1:    '455',
42: 1:    '715',
42: 1:    '1001',
42: 1:    '1155'
42: 1:  ]
42: 1:}
42: 1:Scores: 40
42: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz']')
42: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
43: 1:BoardData {
43: 1:  'description': [
43: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
43: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
43: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
43: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
43: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
43: 1:    'Please write optimized code without any duplication.',
43: 1:    'For divider 11 - the word must be 'Duzz'.',
43: 1:    'For divider 13 - the word must be 'Cazz'.'
43: 1:  ],
43: 1:  'expectedAnswer': 'FizzBuzzMuzzCazz',
43: 1:  'history': [
43: 1:    {
43: 1:      'answer': '1',
43: 1:      'question': '1',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '2',
43: 1:      'question': '2',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Fizz',
43: 1:      'question': '3',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '4',
43: 1:      'question': '4',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Buzz',
43: 1:      'question': '5',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Fizz',
43: 1:      'question': '6',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Muzz',
43: 1:      'question': '7',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '8',
43: 1:      'question': '8',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Fizz',
43: 1:      'question': '9',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Buzz',
43: 1:      'question': '10',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Duzz',
43: 1:      'question': '11',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Fizz',
43: 1:      'question': '12',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Cazz',
43: 1:      'question': '13',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Muzz',
43: 1:      'question': '14',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzz',
43: 1:      'question': '15',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '16',
43: 1:      'question': '16',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '17',
43: 1:      'question': '17',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzMuzz',
43: 1:      'question': '21',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzDuzz',
43: 1:      'question': '33',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzMuzz',
43: 1:      'question': '35',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzCazz',
43: 1:      'question': '39',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Muzz',
43: 1:      'question': '49',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzDuzz',
43: 1:      'question': '55',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzCazz',
43: 1:      'question': '65',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'MuzzDuzz',
43: 1:      'question': '77',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'MuzzCazz',
43: 1:      'question': '91',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzzMuzz',
43: 1:      'question': '105',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzzDuzz',
43: 1:      'question': '165',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzzCazz',
43: 1:      'question': '195',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzMuzzDuzz',
43: 1:      'question': '231',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzMuzzCazz',
43: 1:      'question': '273',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzMuzzDuzz',
43: 1:      'question': '385',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzMuzzCazz',
43: 1:      'question': '455',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzDuzzCazz',
43: 1:      'question': '715',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'MuzzDuzzCazz',
43: 1:      'question': '1001',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzzMuzzDuzz',
43: 1:      'question': '1155',
43: 1:      'valid': true
43: 1:    }
43: 1:  ],
43: 1:  'info': [
43: 1:    '✅f(1) = 1',
43: 1:    '✅f(2) = 2',
43: 1:    '✅f(3) = Fizz',
43: 1:    '✅f(4) = 4',
43: 1:    '✅f(5) = Buzz',
43: 1:    '✅f(6) = Fizz',
43: 1:    '✅f(7) = Muzz',
43: 1:    '✅f(8) = 8',
43: 1:    '✅f(9) = Fizz',
43: 1:    '✅f(10) = Buzz',
43: 1:    '✅f(11) = Duzz',
43: 1:    '✅f(12) = Fizz',
43: 1:    '✅f(13) = Cazz',
43: 1:    '✅f(14) = Muzz',
43: 1:    '✅f(15) = FizzBuzz',
43: 1:    '✅f(16) = 16',
43: 1:    '✅f(17) = 17',
43: 1:    '✅f(21) = FizzMuzz',
43: 1:    '✅f(33) = FizzDuzz',
43: 1:    '✅f(35) = BuzzMuzz',
43: 1:    '✅f(39) = FizzCazz',
43: 1:    '✅f(49) = Muzz',
43: 1:    '✅f(55) = BuzzDuzz',
43: 1:    '✅f(65) = BuzzCazz',
43: 1:    '✅f(77) = MuzzDuzz',
43: 1:    '✅f(91) = MuzzCazz',
43: 1:    '✅f(105) = FizzBuzzMuzz',
43: 1:    '✅f(165) = FizzBuzzDuzz',
43: 1:    '✅f(195) = FizzBuzzCazz',
43: 1:    '✅f(231) = FizzMuzzDuzz',
43: 1:    '✅f(273) = FizzMuzzCazz',
43: 1:    '✅f(385) = BuzzMuzzDuzz',
43: 1:    '✅f(455) = BuzzMuzzCazz',
43: 1:    '✅f(715) = BuzzDuzzCazz',
43: 1:    '✅f(1001) = MuzzDuzzCazz',
43: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
43: 1:    '❌f(1365) = ??? != FizzBuzzMuzzCazz'
43: 1:  ],
43: 1:  'level': 1,
43: 1:  'nextQuestion': '1365',
43: 1:  'questions': [
43: 1:    '1',
43: 1:    '2',
43: 1:    '3',
43: 1:    '4',
43: 1:    '5',
43: 1:    '6',
43: 1:    '7',
43: 1:    '8',
43: 1:    '9',
43: 1:    '10',
43: 1:    '11',
43: 1:    '12',
43: 1:    '13',
43: 1:    '14',
43: 1:    '15',
43: 1:    '16',
43: 1:    '17',
43: 1:    '21',
43: 1:    '33',
43: 1:    '35',
43: 1:    '39',
43: 1:    '49',
43: 1:    '55',
43: 1:    '65',
43: 1:    '77',
43: 1:    '91',
43: 1:    '105',
43: 1:    '165',
43: 1:    '195',
43: 1:    '231',
43: 1:    '273',
43: 1:    '385',
43: 1:    '455',
43: 1:    '715',
43: 1:    '1001',
43: 1:    '1155',
43: 1:    '1365'
43: 1:  ]
43: 1:}
43: 1:Scores: 41
43: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz']')
43: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
44: 1:BoardData {
44: 1:  'description': [
44: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
44: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
44: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
44: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
44: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
44: 1:    'Please write optimized code without any duplication.',
44: 1:    'For divider 11 - the word must be 'Duzz'.',
44: 1:    'For divider 13 - the word must be 'Cazz'.'
44: 1:  ],
44: 1:  'expectedAnswer': 'FizzBuzzDuzzCazz',
44: 1:  'history': [
44: 1:    {
44: 1:      'answer': '1',
44: 1:      'question': '1',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '2',
44: 1:      'question': '2',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Fizz',
44: 1:      'question': '3',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '4',
44: 1:      'question': '4',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Buzz',
44: 1:      'question': '5',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Fizz',
44: 1:      'question': '6',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Muzz',
44: 1:      'question': '7',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '8',
44: 1:      'question': '8',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Fizz',
44: 1:      'question': '9',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Buzz',
44: 1:      'question': '10',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Duzz',
44: 1:      'question': '11',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Fizz',
44: 1:      'question': '12',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Cazz',
44: 1:      'question': '13',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Muzz',
44: 1:      'question': '14',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzz',
44: 1:      'question': '15',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '16',
44: 1:      'question': '16',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '17',
44: 1:      'question': '17',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzMuzz',
44: 1:      'question': '21',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzDuzz',
44: 1:      'question': '33',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzMuzz',
44: 1:      'question': '35',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzCazz',
44: 1:      'question': '39',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Muzz',
44: 1:      'question': '49',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzDuzz',
44: 1:      'question': '55',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzCazz',
44: 1:      'question': '65',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'MuzzDuzz',
44: 1:      'question': '77',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'MuzzCazz',
44: 1:      'question': '91',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzMuzz',
44: 1:      'question': '105',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzDuzz',
44: 1:      'question': '165',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzCazz',
44: 1:      'question': '195',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzMuzzDuzz',
44: 1:      'question': '231',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzMuzzCazz',
44: 1:      'question': '273',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzMuzzDuzz',
44: 1:      'question': '385',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzMuzzCazz',
44: 1:      'question': '455',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzDuzzCazz',
44: 1:      'question': '715',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'MuzzDuzzCazz',
44: 1:      'question': '1001',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzMuzzDuzz',
44: 1:      'question': '1155',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzMuzzCazz',
44: 1:      'question': '1365',
44: 1:      'valid': true
44: 1:    }
44: 1:  ],
44: 1:  'info': [
44: 1:    '✅f(1) = 1',
44: 1:    '✅f(2) = 2',
44: 1:    '✅f(3) = Fizz',
44: 1:    '✅f(4) = 4',
44: 1:    '✅f(5) = Buzz',
44: 1:    '✅f(6) = Fizz',
44: 1:    '✅f(7) = Muzz',
44: 1:    '✅f(8) = 8',
44: 1:    '✅f(9) = Fizz',
44: 1:    '✅f(10) = Buzz',
44: 1:    '✅f(11) = Duzz',
44: 1:    '✅f(12) = Fizz',
44: 1:    '✅f(13) = Cazz',
44: 1:    '✅f(14) = Muzz',
44: 1:    '✅f(15) = FizzBuzz',
44: 1:    '✅f(16) = 16',
44: 1:    '✅f(17) = 17',
44: 1:    '✅f(21) = FizzMuzz',
44: 1:    '✅f(33) = FizzDuzz',
44: 1:    '✅f(35) = BuzzMuzz',
44: 1:    '✅f(39) = FizzCazz',
44: 1:    '✅f(49) = Muzz',
44: 1:    '✅f(55) = BuzzDuzz',
44: 1:    '✅f(65) = BuzzCazz',
44: 1:    '✅f(77) = MuzzDuzz',
44: 1:    '✅f(91) = MuzzCazz',
44: 1:    '✅f(105) = FizzBuzzMuzz',
44: 1:    '✅f(165) = FizzBuzzDuzz',
44: 1:    '✅f(195) = FizzBuzzCazz',
44: 1:    '✅f(231) = FizzMuzzDuzz',
44: 1:    '✅f(273) = FizzMuzzCazz',
44: 1:    '✅f(385) = BuzzMuzzDuzz',
44: 1:    '✅f(455) = BuzzMuzzCazz',
44: 1:    '✅f(715) = BuzzDuzzCazz',
44: 1:    '✅f(1001) = MuzzDuzzCazz',
44: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
44: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
44: 1:    '❌f(2145) = ??? != FizzBuzzDuzzCazz'
44: 1:  ],
44: 1:  'level': 1,
44: 1:  'nextQuestion': '2145',
44: 1:  'questions': [
44: 1:    '1',
44: 1:    '2',
44: 1:    '3',
44: 1:    '4',
44: 1:    '5',
44: 1:    '6',
44: 1:    '7',
44: 1:    '8',
44: 1:    '9',
44: 1:    '10',
44: 1:    '11',
44: 1:    '12',
44: 1:    '13',
44: 1:    '14',
44: 1:    '15',
44: 1:    '16',
44: 1:    '17',
44: 1:    '21',
44: 1:    '33',
44: 1:    '35',
44: 1:    '39',
44: 1:    '49',
44: 1:    '55',
44: 1:    '65',
44: 1:    '77',
44: 1:    '91',
44: 1:    '105',
44: 1:    '165',
44: 1:    '195',
44: 1:    '231',
44: 1:    '273',
44: 1:    '385',
44: 1:    '455',
44: 1:    '715',
44: 1:    '1001',
44: 1:    '1155',
44: 1:    '1365',
44: 1:    '2145'
44: 1:  ]
44: 1:}
44: 1:Scores: 42
44: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz', 'FizzBuzzDuzzCazz']')
44: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
45: 1:BoardData {
45: 1:  'description': [
45: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
45: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
45: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
45: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
45: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
45: 1:    'Please write optimized code without any duplication.',
45: 1:    'For divider 11 - the word must be 'Duzz'.',
45: 1:    'For divider 13 - the word must be 'Cazz'.'
45: 1:  ],
45: 1:  'expectedAnswer': 'FizzMuzzDuzzCazz',
45: 1:  'history': [
45: 1:    {
45: 1:      'answer': '1',
45: 1:      'question': '1',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '2',
45: 1:      'question': '2',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Fizz',
45: 1:      'question': '3',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '4',
45: 1:      'question': '4',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Buzz',
45: 1:      'question': '5',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Fizz',
45: 1:      'question': '6',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Muzz',
45: 1:      'question': '7',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '8',
45: 1:      'question': '8',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Fizz',
45: 1:      'question': '9',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Buzz',
45: 1:      'question': '10',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Duzz',
45: 1:      'question': '11',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Fizz',
45: 1:      'question': '12',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Cazz',
45: 1:      'question': '13',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Muzz',
45: 1:      'question': '14',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzz',
45: 1:      'question': '15',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '16',
45: 1:      'question': '16',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '17',
45: 1:      'question': '17',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzMuzz',
45: 1:      'question': '21',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzDuzz',
45: 1:      'question': '33',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzMuzz',
45: 1:      'question': '35',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzCazz',
45: 1:      'question': '39',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Muzz',
45: 1:      'question': '49',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzDuzz',
45: 1:      'question': '55',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzCazz',
45: 1:      'question': '65',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'MuzzDuzz',
45: 1:      'question': '77',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'MuzzCazz',
45: 1:      'question': '91',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzMuzz',
45: 1:      'question': '105',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzDuzz',
45: 1:      'question': '165',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzCazz',
45: 1:      'question': '195',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzMuzzDuzz',
45: 1:      'question': '231',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzMuzzCazz',
45: 1:      'question': '273',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzMuzzDuzz',
45: 1:      'question': '385',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzMuzzCazz',
45: 1:      'question': '455',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzDuzzCazz',
45: 1:      'question': '715',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'MuzzDuzzCazz',
45: 1:      'question': '1001',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzMuzzDuzz',
45: 1:      'question': '1155',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzMuzzCazz',
45: 1:      'question': '1365',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzDuzzCazz',
45: 1:      'question': '2145',
45: 1:      'valid': true
45: 1:    }
45: 1:  ],
45: 1:  'info': [
45: 1:    '✅f(1) = 1',
45: 1:    '✅f(2) = 2',
45: 1:    '✅f(3) = Fizz',
45: 1:    '✅f(4) = 4',
45: 1:    '✅f(5) = Buzz',
45: 1:    '✅f(6) = Fizz',
45: 1:    '✅f(7) = Muzz',
45: 1:    '✅f(8) = 8',
45: 1:    '✅f(9) = Fizz',
45: 1:    '✅f(10) = Buzz',
45: 1:    '✅f(11) = Duzz',
45: 1:    '✅f(12) = Fizz',
45: 1:    '✅f(13) = Cazz',
45: 1:    '✅f(14) = Muzz',
45: 1:    '✅f(15) = FizzBuzz',
45: 1:    '✅f(16) = 16',
45: 1:    '✅f(17) = 17',
45: 1:    '✅f(21) = FizzMuzz',
45: 1:    '✅f(33) = FizzDuzz',
45: 1:    '✅f(35) = BuzzMuzz',
45: 1:    '✅f(39) = FizzCazz',
45: 1:    '✅f(49) = Muzz',
45: 1:    '✅f(55) = BuzzDuzz',
45: 1:    '✅f(65) = BuzzCazz',
45: 1:    '✅f(77) = MuzzDuzz',
45: 1:    '✅f(91) = MuzzCazz',
45: 1:    '✅f(105) = FizzBuzzMuzz',
45: 1:    '✅f(165) = FizzBuzzDuzz',
45: 1:    '✅f(195) = FizzBuzzCazz',
45: 1:    '✅f(231) = FizzMuzzDuzz',
45: 1:    '✅f(273) = FizzMuzzCazz',
45: 1:    '✅f(385) = BuzzMuzzDuzz',
45: 1:    '✅f(455) = BuzzMuzzCazz',
45: 1:    '✅f(715) = BuzzDuzzCazz',
45: 1:    '✅f(1001) = MuzzDuzzCazz',
45: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
45: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
45: 1:    '✅f(2145) = FizzBuzzDuzzCazz',
45: 1:    '❌f(3003) = ??? != FizzMuzzDuzzCazz'
45: 1:  ],
45: 1:  'level': 1,
45: 1:  'nextQuestion': '3003',
45: 1:  'questions': [
45: 1:    '1',
45: 1:    '2',
45: 1:    '3',
45: 1:    '4',
45: 1:    '5',
45: 1:    '6',
45: 1:    '7',
45: 1:    '8',
45: 1:    '9',
45: 1:    '10',
45: 1:    '11',
45: 1:    '12',
45: 1:    '13',
45: 1:    '14',
45: 1:    '15',
45: 1:    '16',
45: 1:    '17',
45: 1:    '21',
45: 1:    '33',
45: 1:    '35',
45: 1:    '39',
45: 1:    '49',
45: 1:    '55',
45: 1:    '65',
45: 1:    '77',
45: 1:    '91',
45: 1:    '105',
45: 1:    '165',
45: 1:    '195',
45: 1:    '231',
45: 1:    '273',
45: 1:    '385',
45: 1:    '455',
45: 1:    '715',
45: 1:    '1001',
45: 1:    '1155',
45: 1:    '1365',
45: 1:    '2145',
45: 1:    '3003'
45: 1:  ]
45: 1:}
45: 1:Scores: 43
45: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz', 'FizzBuzzDuzzCazz', 'FizzMuzzDuzzCazz']')
45: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
46: 1:BoardData {
46: 1:  'description': [
46: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
46: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
46: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
46: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
46: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
46: 1:    'Please write optimized code without any duplication.',
46: 1:    'For divider 11 - the word must be 'Duzz'.',
46: 1:    'For divider 13 - the word must be 'Cazz'.'
46: 1:  ],
46: 1:  'expectedAnswer': 'BuzzMuzzDuzzCazz',
46: 1:  'history': [
46: 1:    {
46: 1:      'answer': '1',
46: 1:      'question': '1',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '2',
46: 1:      'question': '2',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Fizz',
46: 1:      'question': '3',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '4',
46: 1:      'question': '4',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Buzz',
46: 1:      'question': '5',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Fizz',
46: 1:      'question': '6',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Muzz',
46: 1:      'question': '7',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '8',
46: 1:      'question': '8',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Fizz',
46: 1:      'question': '9',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Buzz',
46: 1:      'question': '10',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Duzz',
46: 1:      'question': '11',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Fizz',
46: 1:      'question': '12',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Cazz',
46: 1:      'question': '13',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Muzz',
46: 1:      'question': '14',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzz',
46: 1:      'question': '15',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '16',
46: 1:      'question': '16',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '17',
46: 1:      'question': '17',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzMuzz',
46: 1:      'question': '21',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzDuzz',
46: 1:      'question': '33',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzMuzz',
46: 1:      'question': '35',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzCazz',
46: 1:      'question': '39',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Muzz',
46: 1:      'question': '49',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzDuzz',
46: 1:      'question': '55',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzCazz',
46: 1:      'question': '65',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'MuzzDuzz',
46: 1:      'question': '77',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'MuzzCazz',
46: 1:      'question': '91',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzMuzz',
46: 1:      'question': '105',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzDuzz',
46: 1:      'question': '165',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzCazz',
46: 1:      'question': '195',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzMuzzDuzz',
46: 1:      'question': '231',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzMuzzCazz',
46: 1:      'question': '273',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzMuzzDuzz',
46: 1:      'question': '385',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzMuzzCazz',
46: 1:      'question': '455',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzDuzzCazz',
46: 1:      'question': '715',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'MuzzDuzzCazz',
46: 1:      'question': '1001',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzMuzzDuzz',
46: 1:      'question': '1155',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzMuzzCazz',
46: 1:      'question': '1365',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzDuzzCazz',
46: 1:      'question': '2145',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzMuzzDuzzCazz',
46: 1:      'question': '3003',
46: 1:      'valid': true
46: 1:    }
46: 1:  ],
46: 1:  'info': [
46: 1:    '✅f(1) = 1',
46: 1:    '✅f(2) = 2',
46: 1:    '✅f(3) = Fizz',
46: 1:    '✅f(4) = 4',
46: 1:    '✅f(5) = Buzz',
46: 1:    '✅f(6) = Fizz',
46: 1:    '✅f(7) = Muzz',
46: 1:    '✅f(8) = 8',
46: 1:    '✅f(9) = Fizz',
46: 1:    '✅f(10) = Buzz',
46: 1:    '✅f(11) = Duzz',
46: 1:    '✅f(12) = Fizz',
46: 1:    '✅f(13) = Cazz',
46: 1:    '✅f(14) = Muzz',
46: 1:    '✅f(15) = FizzBuzz',
46: 1:    '✅f(16) = 16',
46: 1:    '✅f(17) = 17',
46: 1:    '✅f(21) = FizzMuzz',
46: 1:    '✅f(33) = FizzDuzz',
46: 1:    '✅f(35) = BuzzMuzz',
46: 1:    '✅f(39) = FizzCazz',
46: 1:    '✅f(49) = Muzz',
46: 1:    '✅f(55) = BuzzDuzz',
46: 1:    '✅f(65) = BuzzCazz',
46: 1:    '✅f(77) = MuzzDuzz',
46: 1:    '✅f(91) = MuzzCazz',
46: 1:    '✅f(105) = FizzBuzzMuzz',
46: 1:    '✅f(165) = FizzBuzzDuzz',
46: 1:    '✅f(195) = FizzBuzzCazz',
46: 1:    '✅f(231) = FizzMuzzDuzz',
46: 1:    '✅f(273) = FizzMuzzCazz',
46: 1:    '✅f(385) = BuzzMuzzDuzz',
46: 1:    '✅f(455) = BuzzMuzzCazz',
46: 1:    '✅f(715) = BuzzDuzzCazz',
46: 1:    '✅f(1001) = MuzzDuzzCazz',
46: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
46: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
46: 1:    '✅f(2145) = FizzBuzzDuzzCazz',
46: 1:    '✅f(3003) = FizzMuzzDuzzCazz',
46: 1:    '❌f(5005) = ??? != BuzzMuzzDuzzCazz'
46: 1:  ],
46: 1:  'level': 1,
46: 1:  'nextQuestion': '5005',
46: 1:  'questions': [
46: 1:    '1',
46: 1:    '2',
46: 1:    '3',
46: 1:    '4',
46: 1:    '5',
46: 1:    '6',
46: 1:    '7',
46: 1:    '8',
46: 1:    '9',
46: 1:    '10',
46: 1:    '11',
46: 1:    '12',
46: 1:    '13',
46: 1:    '14',
46: 1:    '15',
46: 1:    '16',
46: 1:    '17',
46: 1:    '21',
46: 1:    '33',
46: 1:    '35',
46: 1:    '39',
46: 1:    '49',
46: 1:    '55',
46: 1:    '65',
46: 1:    '77',
46: 1:    '91',
46: 1:    '105',
46: 1:    '165',
46: 1:    '195',
46: 1:    '231',
46: 1:    '273',
46: 1:    '385',
46: 1:    '455',
46: 1:    '715',
46: 1:    '1001',
46: 1:    '1155',
46: 1:    '1365',
46: 1:    '2145',
46: 1:    '3003',
46: 1:    '5005'
46: 1:  ]
46: 1:}
46: 1:Scores: 44
46: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz', 'FizzBuzzDuzzCazz', 'FizzMuzzDuzzCazz', 'BuzzMuzzDuzzCazz']')
46: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
47: 1:BoardData {
47: 1:  'description': [
47: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
47: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
47: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
47: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
47: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
47: 1:    'Please write optimized code without any duplication.',
47: 1:    'For divider 11 - the word must be 'Duzz'.',
47: 1:    'For divider 13 - the word must be 'Cazz'.'
47: 1:  ],
47: 1:  'expectedAnswer': 'FizzBuzzMuzzDuzzCazz',
47: 1:  'history': [
47: 1:    {
47: 1:      'answer': '1',
47: 1:      'question': '1',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '2',
47: 1:      'question': '2',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Fizz',
47: 1:      'question': '3',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '4',
47: 1:      'question': '4',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Buzz',
47: 1:      'question': '5',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Fizz',
47: 1:      'question': '6',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Muzz',
47: 1:      'question': '7',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '8',
47: 1:      'question': '8',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Fizz',
47: 1:      'question': '9',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Buzz',
47: 1:      'question': '10',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Duzz',
47: 1:      'question': '11',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Fizz',
47: 1:      'question': '12',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Cazz',
47: 1:      'question': '13',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Muzz',
47: 1:      'question': '14',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzz',
47: 1:      'question': '15',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '16',
47: 1:      'question': '16',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '17',
47: 1:      'question': '17',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzMuzz',
47: 1:      'question': '21',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzDuzz',
47: 1:      'question': '33',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzMuzz',
47: 1:      'question': '35',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzCazz',
47: 1:      'question': '39',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Muzz',
47: 1:      'question': '49',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzDuzz',
47: 1:      'question': '55',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzCazz',
47: 1:      'question': '65',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'MuzzDuzz',
47: 1:      'question': '77',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'MuzzCazz',
47: 1:      'question': '91',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzMuzz',
47: 1:      'question': '105',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzDuzz',
47: 1:      'question': '165',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzCazz',
47: 1:      'question': '195',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzMuzzDuzz',
47: 1:      'question': '231',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzMuzzCazz',
47: 1:      'question': '273',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzMuzzDuzz',
47: 1:      'question': '385',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzMuzzCazz',
47: 1:      'question': '455',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzDuzzCazz',
47: 1:      'question': '715',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'MuzzDuzzCazz',
47: 1:      'question': '1001',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzMuzzDuzz',
47: 1:      'question': '1155',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzMuzzCazz',
47: 1:      'question': '1365',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzDuzzCazz',
47: 1:      'question': '2145',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzMuzzDuzzCazz',
47: 1:      'question': '3003',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzMuzzDuzzCazz',
47: 1:      'question': '5005',
47: 1:      'valid': true
47: 1:    }
47: 1:  ],
47: 1:  'info': [
47: 1:    '✅f(1) = 1',
47: 1:    '✅f(2) = 2',
47: 1:    '✅f(3) = Fizz',
47: 1:    '✅f(4) = 4',
47: 1:    '✅f(5) = Buzz',
47: 1:    '✅f(6) = Fizz',
47: 1:    '✅f(7) = Muzz',
47: 1:    '✅f(8) = 8',
47: 1:    '✅f(9) = Fizz',
47: 1:    '✅f(10) = Buzz',
47: 1:    '✅f(11) = Duzz',
47: 1:    '✅f(12) = Fizz',
47: 1:    '✅f(13) = Cazz',
47: 1:    '✅f(14) = Muzz',
47: 1:    '✅f(15) = FizzBuzz',
47: 1:    '✅f(16) = 16',
47: 1:    '✅f(17) = 17',
47: 1:    '✅f(21) = FizzMuzz',
47: 1:    '✅f(33) = FizzDuzz',
47: 1:    '✅f(35) = BuzzMuzz',
47: 1:    '✅f(39) = FizzCazz',
47: 1:    '✅f(49) = Muzz',
47: 1:    '✅f(55) = BuzzDuzz',
47: 1:    '✅f(65) = BuzzCazz',
47: 1:    '✅f(77) = MuzzDuzz',
47: 1:    '✅f(91) = MuzzCazz',
47: 1:    '✅f(105) = FizzBuzzMuzz',
47: 1:    '✅f(165) = FizzBuzzDuzz',
47: 1:    '✅f(195) = FizzBuzzCazz',
47: 1:    '✅f(231) = FizzMuzzDuzz',
47: 1:    '✅f(273) = FizzMuzzCazz',
47: 1:    '✅f(385) = BuzzMuzzDuzz',
47: 1:    '✅f(455) = BuzzMuzzCazz',
47: 1:    '✅f(715) = BuzzDuzzCazz',
47: 1:    '✅f(1001) = MuzzDuzzCazz',
47: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
47: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
47: 1:    '✅f(2145) = FizzBuzzDuzzCazz',
47: 1:    '✅f(3003) = FizzMuzzDuzzCazz',
47: 1:    '✅f(5005) = BuzzMuzzDuzzCazz',
47: 1:    '❌f(15015) = ??? != FizzBuzzMuzzDuzzCazz'
47: 1:  ],
47: 1:  'level': 1,
47: 1:  'nextQuestion': '15015',
47: 1:  'questions': [
47: 1:    '1',
47: 1:    '2',
47: 1:    '3',
47: 1:    '4',
47: 1:    '5',
47: 1:    '6',
47: 1:    '7',
47: 1:    '8',
47: 1:    '9',
47: 1:    '10',
47: 1:    '11',
47: 1:    '12',
47: 1:    '13',
47: 1:    '14',
47: 1:    '15',
47: 1:    '16',
47: 1:    '17',
47: 1:    '21',
47: 1:    '33',
47: 1:    '35',
47: 1:    '39',
47: 1:    '49',
47: 1:    '55',
47: 1:    '65',
47: 1:    '77',
47: 1:    '91',
47: 1:    '105',
47: 1:    '165',
47: 1:    '195',
47: 1:    '231',
47: 1:    '273',
47: 1:    '385',
47: 1:    '455',
47: 1:    '715',
47: 1:    '1001',
47: 1:    '1155',
47: 1:    '1365',
47: 1:    '2145',
47: 1:    '3003',
47: 1:    '5005',
47: 1:    '15015'
47: 1:  ]
47: 1:}
47: 1:Scores: 45
47: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz', 'FizzBuzzDuzzCazz', 'FizzMuzzDuzzCazz', 'BuzzMuzzDuzzCazz', 'FizzBuzzMuzzDuzzCazz']')
47: 1:Fire Event: PassTest{complexity=5, testCount=41}
47: 1:Fire Event: NextAlgorithm{complexity=5, time=0}
------------------------------------------
48: 1:BoardData {
48: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
48: 1:  'history': [
48: 1:    {
48: 1:      'answer': '1',
48: 1:      'question': '1',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '2',
48: 1:      'question': '2',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Fizz',
48: 1:      'question': '3',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '4',
48: 1:      'question': '4',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Buzz',
48: 1:      'question': '5',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Fizz',
48: 1:      'question': '6',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Muzz',
48: 1:      'question': '7',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '8',
48: 1:      'question': '8',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Fizz',
48: 1:      'question': '9',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Buzz',
48: 1:      'question': '10',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Duzz',
48: 1:      'question': '11',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Fizz',
48: 1:      'question': '12',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Cazz',
48: 1:      'question': '13',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Muzz',
48: 1:      'question': '14',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzz',
48: 1:      'question': '15',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '16',
48: 1:      'question': '16',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '17',
48: 1:      'question': '17',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzMuzz',
48: 1:      'question': '21',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzDuzz',
48: 1:      'question': '33',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzMuzz',
48: 1:      'question': '35',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzCazz',
48: 1:      'question': '39',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Muzz',
48: 1:      'question': '49',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzDuzz',
48: 1:      'question': '55',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzCazz',
48: 1:      'question': '65',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'MuzzDuzz',
48: 1:      'question': '77',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'MuzzCazz',
48: 1:      'question': '91',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzMuzz',
48: 1:      'question': '105',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzDuzz',
48: 1:      'question': '165',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzCazz',
48: 1:      'question': '195',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzMuzzDuzz',
48: 1:      'question': '231',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzMuzzCazz',
48: 1:      'question': '273',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzMuzzDuzz',
48: 1:      'question': '385',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzMuzzCazz',
48: 1:      'question': '455',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzDuzzCazz',
48: 1:      'question': '715',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'MuzzDuzzCazz',
48: 1:      'question': '1001',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzMuzzDuzz',
48: 1:      'question': '1155',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzMuzzCazz',
48: 1:      'question': '1365',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzDuzzCazz',
48: 1:      'question': '2145',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzMuzzDuzzCazz',
48: 1:      'question': '3003',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzMuzzDuzzCazz',
48: 1:      'question': '5005',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzMuzzDuzzCazz',
48: 1:      'question': '15015',
48: 1:      'valid': true
48: 1:    }
48: 1:  ],
48: 1:  'info': [
48: 1:    '✅f(1) = 1',
48: 1:    '✅f(2) = 2',
48: 1:    '✅f(3) = Fizz',
48: 1:    '✅f(4) = 4',
48: 1:    '✅f(5) = Buzz',
48: 1:    '✅f(6) = Fizz',
48: 1:    '✅f(7) = Muzz',
48: 1:    '✅f(8) = 8',
48: 1:    '✅f(9) = Fizz',
48: 1:    '✅f(10) = Buzz',
48: 1:    '✅f(11) = Duzz',
48: 1:    '✅f(12) = Fizz',
48: 1:    '✅f(13) = Cazz',
48: 1:    '✅f(14) = Muzz',
48: 1:    '✅f(15) = FizzBuzz',
48: 1:    '✅f(16) = 16',
48: 1:    '✅f(17) = 17',
48: 1:    '✅f(21) = FizzMuzz',
48: 1:    '✅f(33) = FizzDuzz',
48: 1:    '✅f(35) = BuzzMuzz',
48: 1:    '✅f(39) = FizzCazz',
48: 1:    '✅f(49) = Muzz',
48: 1:    '✅f(55) = BuzzDuzz',
48: 1:    '✅f(65) = BuzzCazz',
48: 1:    '✅f(77) = MuzzDuzz',
48: 1:    '✅f(91) = MuzzCazz',
48: 1:    '✅f(105) = FizzBuzzMuzz',
48: 1:    '✅f(165) = FizzBuzzDuzz',
48: 1:    '✅f(195) = FizzBuzzCazz',
48: 1:    '✅f(231) = FizzMuzzDuzz',
48: 1:    '✅f(273) = FizzMuzzCazz',
48: 1:    '✅f(385) = BuzzMuzzDuzz',
48: 1:    '✅f(455) = BuzzMuzzCazz',
48: 1:    '✅f(715) = BuzzDuzzCazz',
48: 1:    '✅f(1001) = MuzzDuzzCazz',
48: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
48: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
48: 1:    '✅f(2145) = FizzBuzzDuzzCazz',
48: 1:    '✅f(3003) = FizzMuzzDuzzCazz',
48: 1:    '✅f(5005) = BuzzMuzzDuzzCazz',
48: 1:    '✅f(15015) = FizzBuzzMuzzDuzzCazz'
48: 1:  ],
48: 1:  'level': 1,
48: 1:  'questions': []
48: 1:}
48: 1:Scores: 720
48: 1:Answer: message('StartNextLevel')
48: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
49: 1:BoardData {
49: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
49: 1:  'expectedAnswer': '0',
49: 1:  'history': [],
49: 1:  'info': ['❌f(1) = ??? != 0'],
49: 1:  'level': 2,
49: 1:  'nextQuestion': '1',
49: 1:  'questions': ['1']
49: 1:}
49: 1:Scores: 720
49: 1:Answer: message('['0']')
49: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
50: 1:BoardData {
50: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
50: 1:  'expectedAnswer': '4',
50: 1:  'history': [{
50: 1:    'answer': '0',
50: 1:    'question': '1',
50: 1:    'valid': true
50: 1:  }],
50: 1:  'info': [
50: 1:    '✅f(1) = 0',
50: 1:    '❌f(2) = ??? != 4'
50: 1:  ],
50: 1:  'level': 2,
50: 1:  'nextQuestion': '2',
50: 1:  'questions': [
50: 1:    '1',
50: 1:    '2'
50: 1:  ]
50: 1:}
50: 1:Scores: 724
50: 1:Answer: message('['0', '4']')
50: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
51: 1:BoardData {
51: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
51: 1:  'expectedAnswer': '22',
51: 1:  'history': [
51: 1:    {
51: 1:      'answer': '0',
51: 1:      'question': '1',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '4',
51: 1:      'question': '2',
51: 1:      'valid': true
51: 1:    }
51: 1:  ],
51: 1:  'info': [
51: 1:    '✅f(1) = 0',
51: 1:    '✅f(2) = 4',
51: 1:    '❌f(3) = ??? != 22'
51: 1:  ],
51: 1:  'level': 2,
51: 1:  'nextQuestion': '3',
51: 1:  'questions': [
51: 1:    '1',
51: 1:    '2',
51: 1:    '3'
51: 1:  ]
51: 1:}
51: 1:Scores: 728
51: 1:Answer: message('['0', '4', '22']')
51: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
52: 1:BoardData {
52: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
52: 1:  'expectedAnswer': '70',
52: 1:  'history': [
52: 1:    {
52: 1:      'answer': '0',
52: 1:      'question': '1',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '4',
52: 1:      'question': '2',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '22',
52: 1:      'question': '3',
52: 1:      'valid': true
52: 1:    }
52: 1:  ],
52: 1:  'info': [
52: 1:    '✅f(1) = 0',
52: 1:    '✅f(2) = 4',
52: 1:    '✅f(3) = 22',
52: 1:    '❌f(4) = ??? != 70'
52: 1:  ],
52: 1:  'level': 2,
52: 1:  'nextQuestion': '4',
52: 1:  'questions': [
52: 1:    '1',
52: 1:    '2',
52: 1:    '3',
52: 1:    '4'
52: 1:  ]
52: 1:}
52: 1:Scores: 732
52: 1:Answer: message('['0', '4', '22', '70']')
52: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
53: 1:BoardData {
53: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
53: 1:  'expectedAnswer': '170',
53: 1:  'history': [
53: 1:    {
53: 1:      'answer': '0',
53: 1:      'question': '1',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '4',
53: 1:      'question': '2',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '22',
53: 1:      'question': '3',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '70',
53: 1:      'question': '4',
53: 1:      'valid': true
53: 1:    }
53: 1:  ],
53: 1:  'info': [
53: 1:    '✅f(1) = 0',
53: 1:    '✅f(2) = 4',
53: 1:    '✅f(3) = 22',
53: 1:    '✅f(4) = 70',
53: 1:    '❌f(5) = ??? != 170'
53: 1:  ],
53: 1:  'level': 2,
53: 1:  'nextQuestion': '5',
53: 1:  'questions': [
53: 1:    '1',
53: 1:    '2',
53: 1:    '3',
53: 1:    '4',
53: 1:    '5'
53: 1:  ]
53: 1:}
53: 1:Scores: 736
53: 1:Answer: message('['0', '4', '22', '70', '170']')
53: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
54: 1:BoardData {
54: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
54: 1:  'expectedAnswer': '350',
54: 1:  'history': [
54: 1:    {
54: 1:      'answer': '0',
54: 1:      'question': '1',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '4',
54: 1:      'question': '2',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '22',
54: 1:      'question': '3',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '70',
54: 1:      'question': '4',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '170',
54: 1:      'question': '5',
54: 1:      'valid': true
54: 1:    }
54: 1:  ],
54: 1:  'info': [
54: 1:    '✅f(1) = 0',
54: 1:    '✅f(2) = 4',
54: 1:    '✅f(3) = 22',
54: 1:    '✅f(4) = 70',
54: 1:    '✅f(5) = 170',
54: 1:    '❌f(6) = ??? != 350'
54: 1:  ],
54: 1:  'level': 2,
54: 1:  'nextQuestion': '6',
54: 1:  'questions': [
54: 1:    '1',
54: 1:    '2',
54: 1:    '3',
54: 1:    '4',
54: 1:    '5',
54: 1:    '6'
54: 1:  ]
54: 1:}
54: 1:Scores: 740
54: 1:Answer: message('['0', '4', '22', '70', '170', '350']')
54: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
55: 1:BoardData {
55: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
55: 1:  'expectedAnswer': '644',
55: 1:  'history': [
55: 1:    {
55: 1:      'answer': '0',
55: 1:      'question': '1',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '4',
55: 1:      'question': '2',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '22',
55: 1:      'question': '3',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '70',
55: 1:      'question': '4',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '170',
55: 1:      'question': '5',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '350',
55: 1:      'question': '6',
55: 1:      'valid': true
55: 1:    }
55: 1:  ],
55: 1:  'info': [
55: 1:    '✅f(1) = 0',
55: 1:    '✅f(2) = 4',
55: 1:    '✅f(3) = 22',
55: 1:    '✅f(4) = 70',
55: 1:    '✅f(5) = 170',
55: 1:    '✅f(6) = 350',
55: 1:    '❌f(7) = ??? != 644'
55: 1:  ],
55: 1:  'level': 2,
55: 1:  'nextQuestion': '7',
55: 1:  'questions': [
55: 1:    '1',
55: 1:    '2',
55: 1:    '3',
55: 1:    '4',
55: 1:    '5',
55: 1:    '6',
55: 1:    '7'
55: 1:  ]
55: 1:}
55: 1:Scores: 744
55: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644']')
55: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
56: 1:BoardData {
56: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
56: 1:  'expectedAnswer': '1092',
56: 1:  'history': [
56: 1:    {
56: 1:      'answer': '0',
56: 1:      'question': '1',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '4',
56: 1:      'question': '2',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '22',
56: 1:      'question': '3',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '70',
56: 1:      'question': '4',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '170',
56: 1:      'question': '5',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '350',
56: 1:      'question': '6',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '644',
56: 1:      'question': '7',
56: 1:      'valid': true
56: 1:    }
56: 1:  ],
56: 1:  'info': [
56: 1:    '✅f(1) = 0',
56: 1:    '✅f(2) = 4',
56: 1:    '✅f(3) = 22',
56: 1:    '✅f(4) = 70',
56: 1:    '✅f(5) = 170',
56: 1:    '✅f(6) = 350',
56: 1:    '✅f(7) = 644',
56: 1:    '❌f(8) = ??? != 1092'
56: 1:  ],
56: 1:  'level': 2,
56: 1:  'nextQuestion': '8',
56: 1:  'questions': [
56: 1:    '1',
56: 1:    '2',
56: 1:    '3',
56: 1:    '4',
56: 1:    '5',
56: 1:    '6',
56: 1:    '7',
56: 1:    '8'
56: 1:  ]
56: 1:}
56: 1:Scores: 748
56: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092']')
56: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
57: 1:BoardData {
57: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
57: 1:  'expectedAnswer': '1740',
57: 1:  'history': [
57: 1:    {
57: 1:      'answer': '0',
57: 1:      'question': '1',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '4',
57: 1:      'question': '2',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '22',
57: 1:      'question': '3',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '70',
57: 1:      'question': '4',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '170',
57: 1:      'question': '5',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '350',
57: 1:      'question': '6',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '644',
57: 1:      'question': '7',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '1092',
57: 1:      'question': '8',
57: 1:      'valid': true
57: 1:    }
57: 1:  ],
57: 1:  'info': [
57: 1:    '✅f(1) = 0',
57: 1:    '✅f(2) = 4',
57: 1:    '✅f(3) = 22',
57: 1:    '✅f(4) = 70',
57: 1:    '✅f(5) = 170',
57: 1:    '✅f(6) = 350',
57: 1:    '✅f(7) = 644',
57: 1:    '✅f(8) = 1092',
57: 1:    '❌f(9) = ??? != 1740'
57: 1:  ],
57: 1:  'level': 2,
57: 1:  'nextQuestion': '9',
57: 1:  'questions': [
57: 1:    '1',
57: 1:    '2',
57: 1:    '3',
57: 1:    '4',
57: 1:    '5',
57: 1:    '6',
57: 1:    '7',
57: 1:    '8',
57: 1:    '9'
57: 1:  ]
57: 1:}
57: 1:Scores: 752
57: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740']')
57: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
58: 1:BoardData {
58: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
58: 1:  'expectedAnswer': '2640',
58: 1:  'history': [
58: 1:    {
58: 1:      'answer': '0',
58: 1:      'question': '1',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '4',
58: 1:      'question': '2',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '22',
58: 1:      'question': '3',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '70',
58: 1:      'question': '4',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '170',
58: 1:      'question': '5',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '350',
58: 1:      'question': '6',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '644',
58: 1:      'question': '7',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '1092',
58: 1:      'question': '8',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '1740',
58: 1:      'question': '9',
58: 1:      'valid': true
58: 1:    }
58: 1:  ],
58: 1:  'info': [
58: 1:    '✅f(1) = 0',
58: 1:    '✅f(2) = 4',
58: 1:    '✅f(3) = 22',
58: 1:    '✅f(4) = 70',
58: 1:    '✅f(5) = 170',
58: 1:    '✅f(6) = 350',
58: 1:    '✅f(7) = 644',
58: 1:    '✅f(8) = 1092',
58: 1:    '✅f(9) = 1740',
58: 1:    '❌f(10) = ??? != 2640'
58: 1:  ],
58: 1:  'level': 2,
58: 1:  'nextQuestion': '10',
58: 1:  'questions': [
58: 1:    '1',
58: 1:    '2',
58: 1:    '3',
58: 1:    '4',
58: 1:    '5',
58: 1:    '6',
58: 1:    '7',
58: 1:    '8',
58: 1:    '9',
58: 1:    '10'
58: 1:  ]
58: 1:}
58: 1:Scores: 756
58: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640']')
58: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
59: 1:BoardData {
59: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
59: 1:  'expectedAnswer': '3850',
59: 1:  'history': [
59: 1:    {
59: 1:      'answer': '0',
59: 1:      'question': '1',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '4',
59: 1:      'question': '2',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '22',
59: 1:      'question': '3',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '70',
59: 1:      'question': '4',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '170',
59: 1:      'question': '5',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '350',
59: 1:      'question': '6',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '644',
59: 1:      'question': '7',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '1092',
59: 1:      'question': '8',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '1740',
59: 1:      'question': '9',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '2640',
59: 1:      'question': '10',
59: 1:      'valid': true
59: 1:    }
59: 1:  ],
59: 1:  'info': [
59: 1:    '✅f(1) = 0',
59: 1:    '✅f(2) = 4',
59: 1:    '✅f(3) = 22',
59: 1:    '✅f(4) = 70',
59: 1:    '✅f(5) = 170',
59: 1:    '✅f(6) = 350',
59: 1:    '✅f(7) = 644',
59: 1:    '✅f(8) = 1092',
59: 1:    '✅f(9) = 1740',
59: 1:    '✅f(10) = 2640',
59: 1:    '❌f(11) = ??? != 3850'
59: 1:  ],
59: 1:  'level': 2,
59: 1:  'nextQuestion': '11',
59: 1:  'questions': [
59: 1:    '1',
59: 1:    '2',
59: 1:    '3',
59: 1:    '4',
59: 1:    '5',
59: 1:    '6',
59: 1:    '7',
59: 1:    '8',
59: 1:    '9',
59: 1:    '10',
59: 1:    '11'
59: 1:  ]
59: 1:}
59: 1:Scores: 760
59: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850']')
59: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
60: 1:BoardData {
60: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
60: 1:  'expectedAnswer': '5434',
60: 1:  'history': [
60: 1:    {
60: 1:      'answer': '0',
60: 1:      'question': '1',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '4',
60: 1:      'question': '2',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '22',
60: 1:      'question': '3',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '70',
60: 1:      'question': '4',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '170',
60: 1:      'question': '5',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '350',
60: 1:      'question': '6',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '644',
60: 1:      'question': '7',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '1092',
60: 1:      'question': '8',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '1740',
60: 1:      'question': '9',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '2640',
60: 1:      'question': '10',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '3850',
60: 1:      'question': '11',
60: 1:      'valid': true
60: 1:    }
60: 1:  ],
60: 1:  'info': [
60: 1:    '✅f(1) = 0',
60: 1:    '✅f(2) = 4',
60: 1:    '✅f(3) = 22',
60: 1:    '✅f(4) = 70',
60: 1:    '✅f(5) = 170',
60: 1:    '✅f(6) = 350',
60: 1:    '✅f(7) = 644',
60: 1:    '✅f(8) = 1092',
60: 1:    '✅f(9) = 1740',
60: 1:    '✅f(10) = 2640',
60: 1:    '✅f(11) = 3850',
60: 1:    '❌f(12) = ??? != 5434'
60: 1:  ],
60: 1:  'level': 2,
60: 1:  'nextQuestion': '12',
60: 1:  'questions': [
60: 1:    '1',
60: 1:    '2',
60: 1:    '3',
60: 1:    '4',
60: 1:    '5',
60: 1:    '6',
60: 1:    '7',
60: 1:    '8',
60: 1:    '9',
60: 1:    '10',
60: 1:    '11',
60: 1:    '12'
60: 1:  ]
60: 1:}
60: 1:Scores: 764
60: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434']')
60: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
61: 1:BoardData {
61: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
61: 1:  'expectedAnswer': '7462',
61: 1:  'history': [
61: 1:    {
61: 1:      'answer': '0',
61: 1:      'question': '1',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '4',
61: 1:      'question': '2',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '22',
61: 1:      'question': '3',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '70',
61: 1:      'question': '4',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '170',
61: 1:      'question': '5',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '350',
61: 1:      'question': '6',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '644',
61: 1:      'question': '7',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '1092',
61: 1:      'question': '8',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '1740',
61: 1:      'question': '9',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '2640',
61: 1:      'question': '10',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '3850',
61: 1:      'question': '11',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '5434',
61: 1:      'question': '12',
61: 1:      'valid': true
61: 1:    }
61: 1:  ],
61: 1:  'info': [
61: 1:    '✅f(1) = 0',
61: 1:    '✅f(2) = 4',
61: 1:    '✅f(3) = 22',
61: 1:    '✅f(4) = 70',
61: 1:    '✅f(5) = 170',
61: 1:    '✅f(6) = 350',
61: 1:    '✅f(7) = 644',
61: 1:    '✅f(8) = 1092',
61: 1:    '✅f(9) = 1740',
61: 1:    '✅f(10) = 2640',
61: 1:    '✅f(11) = 3850',
61: 1:    '✅f(12) = 5434',
61: 1:    '❌f(13) = ??? != 7462'
61: 1:  ],
61: 1:  'level': 2,
61: 1:  'nextQuestion': '13',
61: 1:  'questions': [
61: 1:    '1',
61: 1:    '2',
61: 1:    '3',
61: 1:    '4',
61: 1:    '5',
61: 1:    '6',
61: 1:    '7',
61: 1:    '8',
61: 1:    '9',
61: 1:    '10',
61: 1:    '11',
61: 1:    '12',
61: 1:    '13'
61: 1:  ]
61: 1:}
61: 1:Scores: 768
61: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462']')
61: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
62: 1:BoardData {
62: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
62: 1:  'expectedAnswer': '10010',
62: 1:  'history': [
62: 1:    {
62: 1:      'answer': '0',
62: 1:      'question': '1',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '4',
62: 1:      'question': '2',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '22',
62: 1:      'question': '3',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '70',
62: 1:      'question': '4',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '170',
62: 1:      'question': '5',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '350',
62: 1:      'question': '6',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '644',
62: 1:      'question': '7',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '1092',
62: 1:      'question': '8',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '1740',
62: 1:      'question': '9',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '2640',
62: 1:      'question': '10',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '3850',
62: 1:      'question': '11',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '5434',
62: 1:      'question': '12',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '7462',
62: 1:      'question': '13',
62: 1:      'valid': true
62: 1:    }
62: 1:  ],
62: 1:  'info': [
62: 1:    '✅f(1) = 0',
62: 1:    '✅f(2) = 4',
62: 1:    '✅f(3) = 22',
62: 1:    '✅f(4) = 70',
62: 1:    '✅f(5) = 170',
62: 1:    '✅f(6) = 350',
62: 1:    '✅f(7) = 644',
62: 1:    '✅f(8) = 1092',
62: 1:    '✅f(9) = 1740',
62: 1:    '✅f(10) = 2640',
62: 1:    '✅f(11) = 3850',
62: 1:    '✅f(12) = 5434',
62: 1:    '✅f(13) = 7462',
62: 1:    '❌f(14) = ??? != 10010'
62: 1:  ],
62: 1:  'level': 2,
62: 1:  'nextQuestion': '14',
62: 1:  'questions': [
62: 1:    '1',
62: 1:    '2',
62: 1:    '3',
62: 1:    '4',
62: 1:    '5',
62: 1:    '6',
62: 1:    '7',
62: 1:    '8',
62: 1:    '9',
62: 1:    '10',
62: 1:    '11',
62: 1:    '12',
62: 1:    '13',
62: 1:    '14'
62: 1:  ]
62: 1:}
62: 1:Scores: 772
62: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010']')
62: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
63: 1:BoardData {
63: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
63: 1:  'expectedAnswer': '13160',
63: 1:  'history': [
63: 1:    {
63: 1:      'answer': '0',
63: 1:      'question': '1',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '4',
63: 1:      'question': '2',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '22',
63: 1:      'question': '3',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '70',
63: 1:      'question': '4',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '170',
63: 1:      'question': '5',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '350',
63: 1:      'question': '6',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '644',
63: 1:      'question': '7',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '1092',
63: 1:      'question': '8',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '1740',
63: 1:      'question': '9',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '2640',
63: 1:      'question': '10',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '3850',
63: 1:      'question': '11',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '5434',
63: 1:      'question': '12',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '7462',
63: 1:      'question': '13',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '10010',
63: 1:      'question': '14',
63: 1:      'valid': true
63: 1:    }
63: 1:  ],
63: 1:  'info': [
63: 1:    '✅f(1) = 0',
63: 1:    '✅f(2) = 4',
63: 1:    '✅f(3) = 22',
63: 1:    '✅f(4) = 70',
63: 1:    '✅f(5) = 170',
63: 1:    '✅f(6) = 350',
63: 1:    '✅f(7) = 644',
63: 1:    '✅f(8) = 1092',
63: 1:    '✅f(9) = 1740',
63: 1:    '✅f(10) = 2640',
63: 1:    '✅f(11) = 3850',
63: 1:    '✅f(12) = 5434',
63: 1:    '✅f(13) = 7462',
63: 1:    '✅f(14) = 10010',
63: 1:    '❌f(15) = ??? != 13160'
63: 1:  ],
63: 1:  'level': 2,
63: 1:  'nextQuestion': '15',
63: 1:  'questions': [
63: 1:    '1',
63: 1:    '2',
63: 1:    '3',
63: 1:    '4',
63: 1:    '5',
63: 1:    '6',
63: 1:    '7',
63: 1:    '8',
63: 1:    '9',
63: 1:    '10',
63: 1:    '11',
63: 1:    '12',
63: 1:    '13',
63: 1:    '14',
63: 1:    '15'
63: 1:  ]
63: 1:}
63: 1:Scores: 776
63: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160']')
63: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
64: 1:BoardData {
64: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
64: 1:  'expectedAnswer': '17000',
64: 1:  'history': [
64: 1:    {
64: 1:      'answer': '0',
64: 1:      'question': '1',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '4',
64: 1:      'question': '2',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '22',
64: 1:      'question': '3',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '70',
64: 1:      'question': '4',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '170',
64: 1:      'question': '5',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '350',
64: 1:      'question': '6',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '644',
64: 1:      'question': '7',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '1092',
64: 1:      'question': '8',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '1740',
64: 1:      'question': '9',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '2640',
64: 1:      'question': '10',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '3850',
64: 1:      'question': '11',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '5434',
64: 1:      'question': '12',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '7462',
64: 1:      'question': '13',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '10010',
64: 1:      'question': '14',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '13160',
64: 1:      'question': '15',
64: 1:      'valid': true
64: 1:    }
64: 1:  ],
64: 1:  'info': [
64: 1:    '✅f(1) = 0',
64: 1:    '✅f(2) = 4',
64: 1:    '✅f(3) = 22',
64: 1:    '✅f(4) = 70',
64: 1:    '✅f(5) = 170',
64: 1:    '✅f(6) = 350',
64: 1:    '✅f(7) = 644',
64: 1:    '✅f(8) = 1092',
64: 1:    '✅f(9) = 1740',
64: 1:    '✅f(10) = 2640',
64: 1:    '✅f(11) = 3850',
64: 1:    '✅f(12) = 5434',
64: 1:    '✅f(13) = 7462',
64: 1:    '✅f(14) = 10010',
64: 1:    '✅f(15) = 13160',
64: 1:    '❌f(16) = ??? != 17000'
64: 1:  ],
64: 1:  'level': 2,
64: 1:  'nextQuestion': '16',
64: 1:  'questions': [
64: 1:    '1',
64: 1:    '2',
64: 1:    '3',
64: 1:    '4',
64: 1:    '5',
64: 1:    '6',
64: 1:    '7',
64: 1:    '8',
64: 1:    '9',
64: 1:    '10',
64: 1:    '11',
64: 1:    '12',
64: 1:    '13',
64: 1:    '14',
64: 1:    '15',
64: 1:    '16'
64: 1:  ]
64: 1:}
64: 1:Scores: 780
64: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000']')
64: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
65: 1:BoardData {
65: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
65: 1:  'expectedAnswer': '21624',
65: 1:  'history': [
65: 1:    {
65: 1:      'answer': '0',
65: 1:      'question': '1',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '4',
65: 1:      'question': '2',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '22',
65: 1:      'question': '3',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '70',
65: 1:      'question': '4',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '170',
65: 1:      'question': '5',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '350',
65: 1:      'question': '6',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '644',
65: 1:      'question': '7',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '1092',
65: 1:      'question': '8',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '1740',
65: 1:      'question': '9',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '2640',
65: 1:      'question': '10',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '3850',
65: 1:      'question': '11',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '5434',
65: 1:      'question': '12',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '7462',
65: 1:      'question': '13',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '10010',
65: 1:      'question': '14',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '13160',
65: 1:      'question': '15',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '17000',
65: 1:      'question': '16',
65: 1:      'valid': true
65: 1:    }
65: 1:  ],
65: 1:  'info': [
65: 1:    '✅f(1) = 0',
65: 1:    '✅f(2) = 4',
65: 1:    '✅f(3) = 22',
65: 1:    '✅f(4) = 70',
65: 1:    '✅f(5) = 170',
65: 1:    '✅f(6) = 350',
65: 1:    '✅f(7) = 644',
65: 1:    '✅f(8) = 1092',
65: 1:    '✅f(9) = 1740',
65: 1:    '✅f(10) = 2640',
65: 1:    '✅f(11) = 3850',
65: 1:    '✅f(12) = 5434',
65: 1:    '✅f(13) = 7462',
65: 1:    '✅f(14) = 10010',
65: 1:    '✅f(15) = 13160',
65: 1:    '✅f(16) = 17000',
65: 1:    '❌f(17) = ??? != 21624'
65: 1:  ],
65: 1:  'level': 2,
65: 1:  'nextQuestion': '17',
65: 1:  'questions': [
65: 1:    '1',
65: 1:    '2',
65: 1:    '3',
65: 1:    '4',
65: 1:    '5',
65: 1:    '6',
65: 1:    '7',
65: 1:    '8',
65: 1:    '9',
65: 1:    '10',
65: 1:    '11',
65: 1:    '12',
65: 1:    '13',
65: 1:    '14',
65: 1:    '15',
65: 1:    '16',
65: 1:    '17'
65: 1:  ]
65: 1:}
65: 1:Scores: 784
65: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624']')
65: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
66: 1:BoardData {
66: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
66: 1:  'expectedAnswer': '27132',
66: 1:  'history': [
66: 1:    {
66: 1:      'answer': '0',
66: 1:      'question': '1',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '4',
66: 1:      'question': '2',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '22',
66: 1:      'question': '3',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '70',
66: 1:      'question': '4',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '170',
66: 1:      'question': '5',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '350',
66: 1:      'question': '6',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '644',
66: 1:      'question': '7',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '1092',
66: 1:      'question': '8',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '1740',
66: 1:      'question': '9',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '2640',
66: 1:      'question': '10',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '3850',
66: 1:      'question': '11',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '5434',
66: 1:      'question': '12',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '7462',
66: 1:      'question': '13',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '10010',
66: 1:      'question': '14',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '13160',
66: 1:      'question': '15',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '17000',
66: 1:      'question': '16',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '21624',
66: 1:      'question': '17',
66: 1:      'valid': true
66: 1:    }
66: 1:  ],
66: 1:  'info': [
66: 1:    '✅f(1) = 0',
66: 1:    '✅f(2) = 4',
66: 1:    '✅f(3) = 22',
66: 1:    '✅f(4) = 70',
66: 1:    '✅f(5) = 170',
66: 1:    '✅f(6) = 350',
66: 1:    '✅f(7) = 644',
66: 1:    '✅f(8) = 1092',
66: 1:    '✅f(9) = 1740',
66: 1:    '✅f(10) = 2640',
66: 1:    '✅f(11) = 3850',
66: 1:    '✅f(12) = 5434',
66: 1:    '✅f(13) = 7462',
66: 1:    '✅f(14) = 10010',
66: 1:    '✅f(15) = 13160',
66: 1:    '✅f(16) = 17000',
66: 1:    '✅f(17) = 21624',
66: 1:    '❌f(18) = ??? != 27132'
66: 1:  ],
66: 1:  'level': 2,
66: 1:  'nextQuestion': '18',
66: 1:  'questions': [
66: 1:    '1',
66: 1:    '2',
66: 1:    '3',
66: 1:    '4',
66: 1:    '5',
66: 1:    '6',
66: 1:    '7',
66: 1:    '8',
66: 1:    '9',
66: 1:    '10',
66: 1:    '11',
66: 1:    '12',
66: 1:    '13',
66: 1:    '14',
66: 1:    '15',
66: 1:    '16',
66: 1:    '17',
66: 1:    '18'
66: 1:  ]
66: 1:}
66: 1:Scores: 788
66: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132']')
66: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
67: 1:BoardData {
67: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
67: 1:  'expectedAnswer': '33630',
67: 1:  'history': [
67: 1:    {
67: 1:      'answer': '0',
67: 1:      'question': '1',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '4',
67: 1:      'question': '2',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '22',
67: 1:      'question': '3',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '70',
67: 1:      'question': '4',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '170',
67: 1:      'question': '5',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '350',
67: 1:      'question': '6',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '644',
67: 1:      'question': '7',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '1092',
67: 1:      'question': '8',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '1740',
67: 1:      'question': '9',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '2640',
67: 1:      'question': '10',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '3850',
67: 1:      'question': '11',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '5434',
67: 1:      'question': '12',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '7462',
67: 1:      'question': '13',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '10010',
67: 1:      'question': '14',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '13160',
67: 1:      'question': '15',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '17000',
67: 1:      'question': '16',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '21624',
67: 1:      'question': '17',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '27132',
67: 1:      'question': '18',
67: 1:      'valid': true
67: 1:    }
67: 1:  ],
67: 1:  'info': [
67: 1:    '✅f(1) = 0',
67: 1:    '✅f(2) = 4',
67: 1:    '✅f(3) = 22',
67: 1:    '✅f(4) = 70',
67: 1:    '✅f(5) = 170',
67: 1:    '✅f(6) = 350',
67: 1:    '✅f(7) = 644',
67: 1:    '✅f(8) = 1092',
67: 1:    '✅f(9) = 1740',
67: 1:    '✅f(10) = 2640',
67: 1:    '✅f(11) = 3850',
67: 1:    '✅f(12) = 5434',
67: 1:    '✅f(13) = 7462',
67: 1:    '✅f(14) = 10010',
67: 1:    '✅f(15) = 13160',
67: 1:    '✅f(16) = 17000',
67: 1:    '✅f(17) = 21624',
67: 1:    '✅f(18) = 27132',
67: 1:    '❌f(19) = ??? != 33630'
67: 1:  ],
67: 1:  'level': 2,
67: 1:  'nextQuestion': '19',
67: 1:  'questions': [
67: 1:    '1',
67: 1:    '2',
67: 1:    '3',
67: 1:    '4',
67: 1:    '5',
67: 1:    '6',
67: 1:    '7',
67: 1:    '8',
67: 1:    '9',
67: 1:    '10',
67: 1:    '11',
67: 1:    '12',
67: 1:    '13',
67: 1:    '14',
67: 1:    '15',
67: 1:    '16',
67: 1:    '17',
67: 1:    '18',
67: 1:    '19'
67: 1:  ]
67: 1:}
67: 1:Scores: 792
67: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630']')
67: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
68: 1:BoardData {
68: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
68: 1:  'expectedAnswer': '41230',
68: 1:  'history': [
68: 1:    {
68: 1:      'answer': '0',
68: 1:      'question': '1',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '4',
68: 1:      'question': '2',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '22',
68: 1:      'question': '3',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '70',
68: 1:      'question': '4',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '170',
68: 1:      'question': '5',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '350',
68: 1:      'question': '6',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '644',
68: 1:      'question': '7',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '1092',
68: 1:      'question': '8',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '1740',
68: 1:      'question': '9',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '2640',
68: 1:      'question': '10',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '3850',
68: 1:      'question': '11',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '5434',
68: 1:      'question': '12',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '7462',
68: 1:      'question': '13',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '10010',
68: 1:      'question': '14',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '13160',
68: 1:      'question': '15',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '17000',
68: 1:      'question': '16',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '21624',
68: 1:      'question': '17',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '27132',
68: 1:      'question': '18',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '33630',
68: 1:      'question': '19',
68: 1:      'valid': true
68: 1:    }
68: 1:  ],
68: 1:  'info': [
68: 1:    '✅f(1) = 0',
68: 1:    '✅f(2) = 4',
68: 1:    '✅f(3) = 22',
68: 1:    '✅f(4) = 70',
68: 1:    '✅f(5) = 170',
68: 1:    '✅f(6) = 350',
68: 1:    '✅f(7) = 644',
68: 1:    '✅f(8) = 1092',
68: 1:    '✅f(9) = 1740',
68: 1:    '✅f(10) = 2640',
68: 1:    '✅f(11) = 3850',
68: 1:    '✅f(12) = 5434',
68: 1:    '✅f(13) = 7462',
68: 1:    '✅f(14) = 10010',
68: 1:    '✅f(15) = 13160',
68: 1:    '✅f(16) = 17000',
68: 1:    '✅f(17) = 21624',
68: 1:    '✅f(18) = 27132',
68: 1:    '✅f(19) = 33630',
68: 1:    '❌f(20) = ??? != 41230'
68: 1:  ],
68: 1:  'level': 2,
68: 1:  'nextQuestion': '20',
68: 1:  'questions': [
68: 1:    '1',
68: 1:    '2',
68: 1:    '3',
68: 1:    '4',
68: 1:    '5',
68: 1:    '6',
68: 1:    '7',
68: 1:    '8',
68: 1:    '9',
68: 1:    '10',
68: 1:    '11',
68: 1:    '12',
68: 1:    '13',
68: 1:    '14',
68: 1:    '15',
68: 1:    '16',
68: 1:    '17',
68: 1:    '18',
68: 1:    '19',
68: 1:    '20'
68: 1:  ]
68: 1:}
68: 1:Scores: 796
68: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230']')
68: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
69: 1:BoardData {
69: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
69: 1:  'expectedAnswer': '50050',
69: 1:  'history': [
69: 1:    {
69: 1:      'answer': '0',
69: 1:      'question': '1',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '4',
69: 1:      'question': '2',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '22',
69: 1:      'question': '3',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '70',
69: 1:      'question': '4',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '170',
69: 1:      'question': '5',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '350',
69: 1:      'question': '6',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '644',
69: 1:      'question': '7',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '1092',
69: 1:      'question': '8',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '1740',
69: 1:      'question': '9',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '2640',
69: 1:      'question': '10',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '3850',
69: 1:      'question': '11',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '5434',
69: 1:      'question': '12',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '7462',
69: 1:      'question': '13',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '10010',
69: 1:      'question': '14',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '13160',
69: 1:      'question': '15',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '17000',
69: 1:      'question': '16',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '21624',
69: 1:      'question': '17',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '27132',
69: 1:      'question': '18',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '33630',
69: 1:      'question': '19',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '41230',
69: 1:      'question': '20',
69: 1:      'valid': true
69: 1:    }
69: 1:  ],
69: 1:  'info': [
69: 1:    '✅f(1) = 0',
69: 1:    '✅f(2) = 4',
69: 1:    '✅f(3) = 22',
69: 1:    '✅f(4) = 70',
69: 1:    '✅f(5) = 170',
69: 1:    '✅f(6) = 350',
69: 1:    '✅f(7) = 644',
69: 1:    '✅f(8) = 1092',
69: 1:    '✅f(9) = 1740',
69: 1:    '✅f(10) = 2640',
69: 1:    '✅f(11) = 3850',
69: 1:    '✅f(12) = 5434',
69: 1:    '✅f(13) = 7462',
69: 1:    '✅f(14) = 10010',
69: 1:    '✅f(15) = 13160',
69: 1:    '✅f(16) = 17000',
69: 1:    '✅f(17) = 21624',
69: 1:    '✅f(18) = 27132',
69: 1:    '✅f(19) = 33630',
69: 1:    '✅f(20) = 41230',
69: 1:    '❌f(21) = ??? != 50050'
69: 1:  ],
69: 1:  'level': 2,
69: 1:  'nextQuestion': '21',
69: 1:  'questions': [
69: 1:    '1',
69: 1:    '2',
69: 1:    '3',
69: 1:    '4',
69: 1:    '5',
69: 1:    '6',
69: 1:    '7',
69: 1:    '8',
69: 1:    '9',
69: 1:    '10',
69: 1:    '11',
69: 1:    '12',
69: 1:    '13',
69: 1:    '14',
69: 1:    '15',
69: 1:    '16',
69: 1:    '17',
69: 1:    '18',
69: 1:    '19',
69: 1:    '20',
69: 1:    '21'
69: 1:  ]
69: 1:}
69: 1:Scores: 800
69: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050']')
69: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
70: 1:BoardData {
70: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
70: 1:  'expectedAnswer': '60214',
70: 1:  'history': [
70: 1:    {
70: 1:      'answer': '0',
70: 1:      'question': '1',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '4',
70: 1:      'question': '2',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '22',
70: 1:      'question': '3',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '70',
70: 1:      'question': '4',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '170',
70: 1:      'question': '5',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '350',
70: 1:      'question': '6',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '644',
70: 1:      'question': '7',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '1092',
70: 1:      'question': '8',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '1740',
70: 1:      'question': '9',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '2640',
70: 1:      'question': '10',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '3850',
70: 1:      'question': '11',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '5434',
70: 1:      'question': '12',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '7462',
70: 1:      'question': '13',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '10010',
70: 1:      'question': '14',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '13160',
70: 1:      'question': '15',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '17000',
70: 1:      'question': '16',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '21624',
70: 1:      'question': '17',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '27132',
70: 1:      'question': '18',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '33630',
70: 1:      'question': '19',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '41230',
70: 1:      'question': '20',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '50050',
70: 1:      'question': '21',
70: 1:      'valid': true
70: 1:    }
70: 1:  ],
70: 1:  'info': [
70: 1:    '✅f(1) = 0',
70: 1:    '✅f(2) = 4',
70: 1:    '✅f(3) = 22',
70: 1:    '✅f(4) = 70',
70: 1:    '✅f(5) = 170',
70: 1:    '✅f(6) = 350',
70: 1:    '✅f(7) = 644',
70: 1:    '✅f(8) = 1092',
70: 1:    '✅f(9) = 1740',
70: 1:    '✅f(10) = 2640',
70: 1:    '✅f(11) = 3850',
70: 1:    '✅f(12) = 5434',
70: 1:    '✅f(13) = 7462',
70: 1:    '✅f(14) = 10010',
70: 1:    '✅f(15) = 13160',
70: 1:    '✅f(16) = 17000',
70: 1:    '✅f(17) = 21624',
70: 1:    '✅f(18) = 27132',
70: 1:    '✅f(19) = 33630',
70: 1:    '✅f(20) = 41230',
70: 1:    '✅f(21) = 50050',
70: 1:    '❌f(22) = ??? != 60214'
70: 1:  ],
70: 1:  'level': 2,
70: 1:  'nextQuestion': '22',
70: 1:  'questions': [
70: 1:    '1',
70: 1:    '2',
70: 1:    '3',
70: 1:    '4',
70: 1:    '5',
70: 1:    '6',
70: 1:    '7',
70: 1:    '8',
70: 1:    '9',
70: 1:    '10',
70: 1:    '11',
70: 1:    '12',
70: 1:    '13',
70: 1:    '14',
70: 1:    '15',
70: 1:    '16',
70: 1:    '17',
70: 1:    '18',
70: 1:    '19',
70: 1:    '20',
70: 1:    '21',
70: 1:    '22'
70: 1:  ]
70: 1:}
70: 1:Scores: 804
70: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214']')
70: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
71: 1:BoardData {
71: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
71: 1:  'expectedAnswer': '71852',
71: 1:  'history': [
71: 1:    {
71: 1:      'answer': '0',
71: 1:      'question': '1',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '4',
71: 1:      'question': '2',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '22',
71: 1:      'question': '3',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '70',
71: 1:      'question': '4',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '170',
71: 1:      'question': '5',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '350',
71: 1:      'question': '6',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '644',
71: 1:      'question': '7',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '1092',
71: 1:      'question': '8',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '1740',
71: 1:      'question': '9',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '2640',
71: 1:      'question': '10',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '3850',
71: 1:      'question': '11',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '5434',
71: 1:      'question': '12',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '7462',
71: 1:      'question': '13',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '10010',
71: 1:      'question': '14',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '13160',
71: 1:      'question': '15',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '17000',
71: 1:      'question': '16',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '21624',
71: 1:      'question': '17',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '27132',
71: 1:      'question': '18',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '33630',
71: 1:      'question': '19',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '41230',
71: 1:      'question': '20',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '50050',
71: 1:      'question': '21',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '60214',
71: 1:      'question': '22',
71: 1:      'valid': true
71: 1:    }
71: 1:  ],
71: 1:  'info': [
71: 1:    '✅f(1) = 0',
71: 1:    '✅f(2) = 4',
71: 1:    '✅f(3) = 22',
71: 1:    '✅f(4) = 70',
71: 1:    '✅f(5) = 170',
71: 1:    '✅f(6) = 350',
71: 1:    '✅f(7) = 644',
71: 1:    '✅f(8) = 1092',
71: 1:    '✅f(9) = 1740',
71: 1:    '✅f(10) = 2640',
71: 1:    '✅f(11) = 3850',
71: 1:    '✅f(12) = 5434',
71: 1:    '✅f(13) = 7462',
71: 1:    '✅f(14) = 10010',
71: 1:    '✅f(15) = 13160',
71: 1:    '✅f(16) = 17000',
71: 1:    '✅f(17) = 21624',
71: 1:    '✅f(18) = 27132',
71: 1:    '✅f(19) = 33630',
71: 1:    '✅f(20) = 41230',
71: 1:    '✅f(21) = 50050',
71: 1:    '✅f(22) = 60214',
71: 1:    '❌f(23) = ??? != 71852'
71: 1:  ],
71: 1:  'level': 2,
71: 1:  'nextQuestion': '23',
71: 1:  'questions': [
71: 1:    '1',
71: 1:    '2',
71: 1:    '3',
71: 1:    '4',
71: 1:    '5',
71: 1:    '6',
71: 1:    '7',
71: 1:    '8',
71: 1:    '9',
71: 1:    '10',
71: 1:    '11',
71: 1:    '12',
71: 1:    '13',
71: 1:    '14',
71: 1:    '15',
71: 1:    '16',
71: 1:    '17',
71: 1:    '18',
71: 1:    '19',
71: 1:    '20',
71: 1:    '21',
71: 1:    '22',
71: 1:    '23'
71: 1:  ]
71: 1:}
71: 1:Scores: 808
71: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852']')
71: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
72: 1:BoardData {
72: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
72: 1:  'expectedAnswer': '85100',
72: 1:  'history': [
72: 1:    {
72: 1:      'answer': '0',
72: 1:      'question': '1',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '4',
72: 1:      'question': '2',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '22',
72: 1:      'question': '3',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '70',
72: 1:      'question': '4',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '170',
72: 1:      'question': '5',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '350',
72: 1:      'question': '6',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '644',
72: 1:      'question': '7',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '1092',
72: 1:      'question': '8',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '1740',
72: 1:      'question': '9',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '2640',
72: 1:      'question': '10',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '3850',
72: 1:      'question': '11',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '5434',
72: 1:      'question': '12',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '7462',
72: 1:      'question': '13',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '10010',
72: 1:      'question': '14',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '13160',
72: 1:      'question': '15',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '17000',
72: 1:      'question': '16',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '21624',
72: 1:      'question': '17',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '27132',
72: 1:      'question': '18',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '33630',
72: 1:      'question': '19',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '41230',
72: 1:      'question': '20',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '50050',
72: 1:      'question': '21',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '60214',
72: 1:      'question': '22',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '71852',
72: 1:      'question': '23',
72: 1:      'valid': true
72: 1:    }
72: 1:  ],
72: 1:  'info': [
72: 1:    '✅f(1) = 0',
72: 1:    '✅f(2) = 4',
72: 1:    '✅f(3) = 22',
72: 1:    '✅f(4) = 70',
72: 1:    '✅f(5) = 170',
72: 1:    '✅f(6) = 350',
72: 1:    '✅f(7) = 644',
72: 1:    '✅f(8) = 1092',
72: 1:    '✅f(9) = 1740',
72: 1:    '✅f(10) = 2640',
72: 1:    '✅f(11) = 3850',
72: 1:    '✅f(12) = 5434',
72: 1:    '✅f(13) = 7462',
72: 1:    '✅f(14) = 10010',
72: 1:    '✅f(15) = 13160',
72: 1:    '✅f(16) = 17000',
72: 1:    '✅f(17) = 21624',
72: 1:    '✅f(18) = 27132',
72: 1:    '✅f(19) = 33630',
72: 1:    '✅f(20) = 41230',
72: 1:    '✅f(21) = 50050',
72: 1:    '✅f(22) = 60214',
72: 1:    '✅f(23) = 71852',
72: 1:    '❌f(24) = ??? != 85100'
72: 1:  ],
72: 1:  'level': 2,
72: 1:  'nextQuestion': '24',
72: 1:  'questions': [
72: 1:    '1',
72: 1:    '2',
72: 1:    '3',
72: 1:    '4',
72: 1:    '5',
72: 1:    '6',
72: 1:    '7',
72: 1:    '8',
72: 1:    '9',
72: 1:    '10',
72: 1:    '11',
72: 1:    '12',
72: 1:    '13',
72: 1:    '14',
72: 1:    '15',
72: 1:    '16',
72: 1:    '17',
72: 1:    '18',
72: 1:    '19',
72: 1:    '20',
72: 1:    '21',
72: 1:    '22',
72: 1:    '23',
72: 1:    '24'
72: 1:  ]
72: 1:}
72: 1:Scores: 812
72: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852', '85100']')
72: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
73: 1:BoardData {
73: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
73: 1:  'expectedAnswer': '100100',
73: 1:  'history': [
73: 1:    {
73: 1:      'answer': '0',
73: 1:      'question': '1',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '4',
73: 1:      'question': '2',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '22',
73: 1:      'question': '3',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '70',
73: 1:      'question': '4',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '170',
73: 1:      'question': '5',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '350',
73: 1:      'question': '6',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '644',
73: 1:      'question': '7',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '1092',
73: 1:      'question': '8',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '1740',
73: 1:      'question': '9',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '2640',
73: 1:      'question': '10',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '3850',
73: 1:      'question': '11',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '5434',
73: 1:      'question': '12',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '7462',
73: 1:      'question': '13',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '10010',
73: 1:      'question': '14',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '13160',
73: 1:      'question': '15',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '17000',
73: 1:      'question': '16',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '21624',
73: 1:      'question': '17',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '27132',
73: 1:      'question': '18',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '33630',
73: 1:      'question': '19',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '41230',
73: 1:      'question': '20',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '50050',
73: 1:      'question': '21',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '60214',
73: 1:      'question': '22',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '71852',
73: 1:      'question': '23',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '85100',
73: 1:      'question': '24',
73: 1:      'valid': true
73: 1:    }
73: 1:  ],
73: 1:  'info': [
73: 1:    '✅f(1) = 0',
73: 1:    '✅f(2) = 4',
73: 1:    '✅f(3) = 22',
73: 1:    '✅f(4) = 70',
73: 1:    '✅f(5) = 170',
73: 1:    '✅f(6) = 350',
73: 1:    '✅f(7) = 644',
73: 1:    '✅f(8) = 1092',
73: 1:    '✅f(9) = 1740',
73: 1:    '✅f(10) = 2640',
73: 1:    '✅f(11) = 3850',
73: 1:    '✅f(12) = 5434',
73: 1:    '✅f(13) = 7462',
73: 1:    '✅f(14) = 10010',
73: 1:    '✅f(15) = 13160',
73: 1:    '✅f(16) = 17000',
73: 1:    '✅f(17) = 21624',
73: 1:    '✅f(18) = 27132',
73: 1:    '✅f(19) = 33630',
73: 1:    '✅f(20) = 41230',
73: 1:    '✅f(21) = 50050',
73: 1:    '✅f(22) = 60214',
73: 1:    '✅f(23) = 71852',
73: 1:    '✅f(24) = 85100',
73: 1:    '❌f(25) = ??? != 100100'
73: 1:  ],
73: 1:  'level': 2,
73: 1:  'nextQuestion': '25',
73: 1:  'questions': [
73: 1:    '1',
73: 1:    '2',
73: 1:    '3',
73: 1:    '4',
73: 1:    '5',
73: 1:    '6',
73: 1:    '7',
73: 1:    '8',
73: 1:    '9',
73: 1:    '10',
73: 1:    '11',
73: 1:    '12',
73: 1:    '13',
73: 1:    '14',
73: 1:    '15',
73: 1:    '16',
73: 1:    '17',
73: 1:    '18',
73: 1:    '19',
73: 1:    '20',
73: 1:    '21',
73: 1:    '22',
73: 1:    '23',
73: 1:    '24',
73: 1:    '25'
73: 1:  ]
73: 1:}
73: 1:Scores: 816
73: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852', '85100', '100100']')
73: 1:Fire Event: PassTest{complexity=10, testCount=25}
73: 1:Fire Event: NextAlgorithm{complexity=10, time=0}
------------------------------------------
74: 1:BoardData {
74: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
74: 1:  'history': [
74: 1:    {
74: 1:      'answer': '0',
74: 1:      'question': '1',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '4',
74: 1:      'question': '2',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '22',
74: 1:      'question': '3',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '70',
74: 1:      'question': '4',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '170',
74: 1:      'question': '5',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '350',
74: 1:      'question': '6',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '644',
74: 1:      'question': '7',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '1092',
74: 1:      'question': '8',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '1740',
74: 1:      'question': '9',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '2640',
74: 1:      'question': '10',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '3850',
74: 1:      'question': '11',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '5434',
74: 1:      'question': '12',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '7462',
74: 1:      'question': '13',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '10010',
74: 1:      'question': '14',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '13160',
74: 1:      'question': '15',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '17000',
74: 1:      'question': '16',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '21624',
74: 1:      'question': '17',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '27132',
74: 1:      'question': '18',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '33630',
74: 1:      'question': '19',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '41230',
74: 1:      'question': '20',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '50050',
74: 1:      'question': '21',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '60214',
74: 1:      'question': '22',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '71852',
74: 1:      'question': '23',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '85100',
74: 1:      'question': '24',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '100100',
74: 1:      'question': '25',
74: 1:      'valid': true
74: 1:    }
74: 1:  ],
74: 1:  'info': [
74: 1:    '✅f(1) = 0',
74: 1:    '✅f(2) = 4',
74: 1:    '✅f(3) = 22',
74: 1:    '✅f(4) = 70',
74: 1:    '✅f(5) = 170',
74: 1:    '✅f(6) = 350',
74: 1:    '✅f(7) = 644',
74: 1:    '✅f(8) = 1092',
74: 1:    '✅f(9) = 1740',
74: 1:    '✅f(10) = 2640',
74: 1:    '✅f(11) = 3850',
74: 1:    '✅f(12) = 5434',
74: 1:    '✅f(13) = 7462',
74: 1:    '✅f(14) = 10010',
74: 1:    '✅f(15) = 13160',
74: 1:    '✅f(16) = 17000',
74: 1:    '✅f(17) = 21624',
74: 1:    '✅f(18) = 27132',
74: 1:    '✅f(19) = 33630',
74: 1:    '✅f(20) = 41230',
74: 1:    '✅f(21) = 50050',
74: 1:    '✅f(22) = 60214',
74: 1:    '✅f(23) = 71852',
74: 1:    '✅f(24) = 85100',
74: 1:    '✅f(25) = 100100'
74: 1:  ],
74: 1:  'level': 2,
74: 1:  'questions': []
74: 1:}
74: 1:Scores: 2169
74: 1:Answer: message('StartNextLevel')
74: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
75: 1:BoardData {
75: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
75: 1:  'expectedAnswer': '1',
75: 1:  'history': [],
75: 1:  'info': ['❌f(0) = ??? != 1'],
75: 1:  'level': 3,
75: 1:  'nextQuestion': '0',
75: 1:  'questions': ['0']
75: 1:}
75: 1:Scores: 2169
75: 1:Answer: message('['1']')
75: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
76: 1:BoardData {
76: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
76: 1:  'expectedAnswer': '0',
76: 1:  'history': [{
76: 1:    'answer': '1',
76: 1:    'question': '0',
76: 1:    'valid': true
76: 1:  }],
76: 1:  'info': [
76: 1:    '✅f(0) = 1',
76: 1:    '❌f(1) = ??? != 0'
76: 1:  ],
76: 1:  'level': 3,
76: 1:  'nextQuestion': '1',
76: 1:  'questions': [
76: 1:    '0',
76: 1:    '1'
76: 1:  ]
76: 1:}
76: 1:Scores: 2173
76: 1:Answer: message('['1', '0']')
76: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
77: 1:BoardData {
77: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
77: 1:  'expectedAnswer': '3',
77: 1:  'history': [
77: 1:    {
77: 1:      'answer': '1',
77: 1:      'question': '0',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '0',
77: 1:      'question': '1',
77: 1:      'valid': true
77: 1:    }
77: 1:  ],
77: 1:  'info': [
77: 1:    '✅f(0) = 1',
77: 1:    '✅f(1) = 0',
77: 1:    '❌f(2) = ??? != 3'
77: 1:  ],
77: 1:  'level': 3,
77: 1:  'nextQuestion': '2',
77: 1:  'questions': [
77: 1:    '0',
77: 1:    '1',
77: 1:    '2'
77: 1:  ]
77: 1:}
77: 1:Scores: 2177
77: 1:Answer: message('['1', '0', '3']')
77: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
78: 1:BoardData {
78: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
78: 1:  'expectedAnswer': '2',
78: 1:  'history': [
78: 1:    {
78: 1:      'answer': '1',
78: 1:      'question': '0',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '0',
78: 1:      'question': '1',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '3',
78: 1:      'question': '2',
78: 1:      'valid': true
78: 1:    }
78: 1:  ],
78: 1:  'info': [
78: 1:    '✅f(0) = 1',
78: 1:    '✅f(1) = 0',
78: 1:    '✅f(2) = 3',
78: 1:    '❌f(3) = ??? != 2'
78: 1:  ],
78: 1:  'level': 3,
78: 1:  'nextQuestion': '3',
78: 1:  'questions': [
78: 1:    '0',
78: 1:    '1',
78: 1:    '2',
78: 1:    '3'
78: 1:  ]
78: 1:}
78: 1:Scores: 2181
78: 1:Answer: message('['1', '0', '3', '2']')
78: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
79: 1:BoardData {
79: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
79: 1:  'expectedAnswer': '4',
79: 1:  'history': [
79: 1:    {
79: 1:      'answer': '1',
79: 1:      'question': '0',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '0',
79: 1:      'question': '1',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '3',
79: 1:      'question': '2',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '2',
79: 1:      'question': '3',
79: 1:      'valid': true
79: 1:    }
79: 1:  ],
79: 1:  'info': [
79: 1:    '✅f(0) = 1',
79: 1:    '✅f(1) = 0',
79: 1:    '✅f(2) = 3',
79: 1:    '✅f(3) = 2',
79: 1:    '❌f(5) = ??? != 4'
79: 1:  ],
79: 1:  'level': 3,
79: 1:  'nextQuestion': '5',
79: 1:  'questions': [
79: 1:    '0',
79: 1:    '1',
79: 1:    '2',
79: 1:    '3',
79: 1:    '5'
79: 1:  ]
79: 1:}
79: 1:Scores: 2185
79: 1:Answer: message('['1', '0', '3', '2', '4']')
79: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
80: 1:BoardData {
80: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
80: 1:  'expectedAnswer': '6',
80: 1:  'history': [
80: 1:    {
80: 1:      'answer': '1',
80: 1:      'question': '0',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '0',
80: 1:      'question': '1',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '3',
80: 1:      'question': '2',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '2',
80: 1:      'question': '3',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '4',
80: 1:      'question': '5',
80: 1:      'valid': true
80: 1:    }
80: 1:  ],
80: 1:  'info': [
80: 1:    '✅f(0) = 1',
80: 1:    '✅f(1) = 0',
80: 1:    '✅f(2) = 3',
80: 1:    '✅f(3) = 2',
80: 1:    '✅f(5) = 4',
80: 1:    '❌f(7) = ??? != 6'
80: 1:  ],
80: 1:  'level': 3,
80: 1:  'nextQuestion': '7',
80: 1:  'questions': [
80: 1:    '0',
80: 1:    '1',
80: 1:    '2',
80: 1:    '3',
80: 1:    '5',
80: 1:    '7'
80: 1:  ]
80: 1:}
80: 1:Scores: 2189
80: 1:Answer: message('['1', '0', '3', '2', '4', '6']')
80: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
81: 1:BoardData {
81: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
81: 1:  'expectedAnswer': '8',
81: 1:  'history': [
81: 1:    {
81: 1:      'answer': '1',
81: 1:      'question': '0',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '0',
81: 1:      'question': '1',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '3',
81: 1:      'question': '2',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '2',
81: 1:      'question': '3',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '4',
81: 1:      'question': '5',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '6',
81: 1:      'question': '7',
81: 1:      'valid': true
81: 1:    }
81: 1:  ],
81: 1:  'info': [
81: 1:    '✅f(0) = 1',
81: 1:    '✅f(1) = 0',
81: 1:    '✅f(2) = 3',
81: 1:    '✅f(3) = 2',
81: 1:    '✅f(5) = 4',
81: 1:    '✅f(7) = 6',
81: 1:    '❌f(9) = ??? != 8'
81: 1:  ],
81: 1:  'level': 3,
81: 1:  'nextQuestion': '9',
81: 1:  'questions': [
81: 1:    '0',
81: 1:    '1',
81: 1:    '2',
81: 1:    '3',
81: 1:    '5',
81: 1:    '7',
81: 1:    '9'
81: 1:  ]
81: 1:}
81: 1:Scores: 2193
81: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8']')
81: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
82: 1:BoardData {
82: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
82: 1:  'expectedAnswer': '10',
82: 1:  'history': [
82: 1:    {
82: 1:      'answer': '1',
82: 1:      'question': '0',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '0',
82: 1:      'question': '1',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '3',
82: 1:      'question': '2',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '2',
82: 1:      'question': '3',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '4',
82: 1:      'question': '5',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '6',
82: 1:      'question': '7',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '8',
82: 1:      'question': '9',
82: 1:      'valid': true
82: 1:    }
82: 1:  ],
82: 1:  'info': [
82: 1:    '✅f(0) = 1',
82: 1:    '✅f(1) = 0',
82: 1:    '✅f(2) = 3',
82: 1:    '✅f(3) = 2',
82: 1:    '✅f(5) = 4',
82: 1:    '✅f(7) = 6',
82: 1:    '✅f(9) = 8',
82: 1:    '❌f(11) = ??? != 10'
82: 1:  ],
82: 1:  'level': 3,
82: 1:  'nextQuestion': '11',
82: 1:  'questions': [
82: 1:    '0',
82: 1:    '1',
82: 1:    '2',
82: 1:    '3',
82: 1:    '5',
82: 1:    '7',
82: 1:    '9',
82: 1:    '11'
82: 1:  ]
82: 1:}
82: 1:Scores: 2197
82: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10']')
82: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
83: 1:BoardData {
83: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
83: 1:  'expectedAnswer': '15',
83: 1:  'history': [
83: 1:    {
83: 1:      'answer': '1',
83: 1:      'question': '0',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '0',
83: 1:      'question': '1',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '3',
83: 1:      'question': '2',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '2',
83: 1:      'question': '3',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '4',
83: 1:      'question': '5',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '6',
83: 1:      'question': '7',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '8',
83: 1:      'question': '9',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '10',
83: 1:      'question': '11',
83: 1:      'valid': true
83: 1:    }
83: 1:  ],
83: 1:  'info': [
83: 1:    '✅f(0) = 1',
83: 1:    '✅f(1) = 0',
83: 1:    '✅f(2) = 3',
83: 1:    '✅f(3) = 2',
83: 1:    '✅f(5) = 4',
83: 1:    '✅f(7) = 6',
83: 1:    '✅f(9) = 8',
83: 1:    '✅f(11) = 10',
83: 1:    '❌f(14) = ??? != 15'
83: 1:  ],
83: 1:  'level': 3,
83: 1:  'nextQuestion': '14',
83: 1:  'questions': [
83: 1:    '0',
83: 1:    '1',
83: 1:    '2',
83: 1:    '3',
83: 1:    '5',
83: 1:    '7',
83: 1:    '9',
83: 1:    '11',
83: 1:    '14'
83: 1:  ]
83: 1:}
83: 1:Scores: 2201
83: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15']')
83: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
84: 1:BoardData {
84: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
84: 1:  'expectedAnswer': '16',
84: 1:  'history': [
84: 1:    {
84: 1:      'answer': '1',
84: 1:      'question': '0',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '0',
84: 1:      'question': '1',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '3',
84: 1:      'question': '2',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '2',
84: 1:      'question': '3',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '4',
84: 1:      'question': '5',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '6',
84: 1:      'question': '7',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '8',
84: 1:      'question': '9',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '10',
84: 1:      'question': '11',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '15',
84: 1:      'question': '14',
84: 1:      'valid': true
84: 1:    }
84: 1:  ],
84: 1:  'info': [
84: 1:    '✅f(0) = 1',
84: 1:    '✅f(1) = 0',
84: 1:    '✅f(2) = 3',
84: 1:    '✅f(3) = 2',
84: 1:    '✅f(5) = 4',
84: 1:    '✅f(7) = 6',
84: 1:    '✅f(9) = 8',
84: 1:    '✅f(11) = 10',
84: 1:    '✅f(14) = 15',
84: 1:    '❌f(17) = ??? != 16'
84: 1:  ],
84: 1:  'level': 3,
84: 1:  'nextQuestion': '17',
84: 1:  'questions': [
84: 1:    '0',
84: 1:    '1',
84: 1:    '2',
84: 1:    '3',
84: 1:    '5',
84: 1:    '7',
84: 1:    '9',
84: 1:    '11',
84: 1:    '14',
84: 1:    '17'
84: 1:  ]
84: 1:}
84: 1:Scores: 2205
84: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16']')
84: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
85: 1:BoardData {
85: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
85: 1:  'expectedAnswer': '21',
85: 1:  'history': [
85: 1:    {
85: 1:      'answer': '1',
85: 1:      'question': '0',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '0',
85: 1:      'question': '1',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '3',
85: 1:      'question': '2',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '2',
85: 1:      'question': '3',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '4',
85: 1:      'question': '5',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '6',
85: 1:      'question': '7',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '8',
85: 1:      'question': '9',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '10',
85: 1:      'question': '11',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '15',
85: 1:      'question': '14',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '16',
85: 1:      'question': '17',
85: 1:      'valid': true
85: 1:    }
85: 1:  ],
85: 1:  'info': [
85: 1:    '✅f(0) = 1',
85: 1:    '✅f(1) = 0',
85: 1:    '✅f(2) = 3',
85: 1:    '✅f(3) = 2',
85: 1:    '✅f(5) = 4',
85: 1:    '✅f(7) = 6',
85: 1:    '✅f(9) = 8',
85: 1:    '✅f(11) = 10',
85: 1:    '✅f(14) = 15',
85: 1:    '✅f(17) = 16',
85: 1:    '❌f(20) = ??? != 21'
85: 1:  ],
85: 1:  'level': 3,
85: 1:  'nextQuestion': '20',
85: 1:  'questions': [
85: 1:    '0',
85: 1:    '1',
85: 1:    '2',
85: 1:    '3',
85: 1:    '5',
85: 1:    '7',
85: 1:    '9',
85: 1:    '11',
85: 1:    '14',
85: 1:    '17',
85: 1:    '20'
85: 1:  ]
85: 1:}
85: 1:Scores: 2209
85: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21']')
85: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
86: 1:BoardData {
86: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
86: 1:  'expectedAnswer': '22',
86: 1:  'history': [
86: 1:    {
86: 1:      'answer': '1',
86: 1:      'question': '0',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '0',
86: 1:      'question': '1',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '3',
86: 1:      'question': '2',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '2',
86: 1:      'question': '3',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '4',
86: 1:      'question': '5',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '6',
86: 1:      'question': '7',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '8',
86: 1:      'question': '9',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '10',
86: 1:      'question': '11',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '15',
86: 1:      'question': '14',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '16',
86: 1:      'question': '17',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '21',
86: 1:      'question': '20',
86: 1:      'valid': true
86: 1:    }
86: 1:  ],
86: 1:  'info': [
86: 1:    '✅f(0) = 1',
86: 1:    '✅f(1) = 0',
86: 1:    '✅f(2) = 3',
86: 1:    '✅f(3) = 2',
86: 1:    '✅f(5) = 4',
86: 1:    '✅f(7) = 6',
86: 1:    '✅f(9) = 8',
86: 1:    '✅f(11) = 10',
86: 1:    '✅f(14) = 15',
86: 1:    '✅f(17) = 16',
86: 1:    '✅f(20) = 21',
86: 1:    '❌f(23) = ??? != 22'
86: 1:  ],
86: 1:  'level': 3,
86: 1:  'nextQuestion': '23',
86: 1:  'questions': [
86: 1:    '0',
86: 1:    '1',
86: 1:    '2',
86: 1:    '3',
86: 1:    '5',
86: 1:    '7',
86: 1:    '9',
86: 1:    '11',
86: 1:    '14',
86: 1:    '17',
86: 1:    '20',
86: 1:    '23'
86: 1:  ]
86: 1:}
86: 1:Scores: 2213
86: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22']')
86: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
87: 1:BoardData {
87: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
87: 1:  'expectedAnswer': '27',
87: 1:  'history': [
87: 1:    {
87: 1:      'answer': '1',
87: 1:      'question': '0',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '0',
87: 1:      'question': '1',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '3',
87: 1:      'question': '2',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '2',
87: 1:      'question': '3',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '4',
87: 1:      'question': '5',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '6',
87: 1:      'question': '7',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '8',
87: 1:      'question': '9',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '10',
87: 1:      'question': '11',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '15',
87: 1:      'question': '14',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '16',
87: 1:      'question': '17',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '21',
87: 1:      'question': '20',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '22',
87: 1:      'question': '23',
87: 1:      'valid': true
87: 1:    }
87: 1:  ],
87: 1:  'info': [
87: 1:    '✅f(0) = 1',
87: 1:    '✅f(1) = 0',
87: 1:    '✅f(2) = 3',
87: 1:    '✅f(3) = 2',
87: 1:    '✅f(5) = 4',
87: 1:    '✅f(7) = 6',
87: 1:    '✅f(9) = 8',
87: 1:    '✅f(11) = 10',
87: 1:    '✅f(14) = 15',
87: 1:    '✅f(17) = 16',
87: 1:    '✅f(20) = 21',
87: 1:    '✅f(23) = 22',
87: 1:    '❌f(26) = ??? != 27'
87: 1:  ],
87: 1:  'level': 3,
87: 1:  'nextQuestion': '26',
87: 1:  'questions': [
87: 1:    '0',
87: 1:    '1',
87: 1:    '2',
87: 1:    '3',
87: 1:    '5',
87: 1:    '7',
87: 1:    '9',
87: 1:    '11',
87: 1:    '14',
87: 1:    '17',
87: 1:    '20',
87: 1:    '23',
87: 1:    '26'
87: 1:  ]
87: 1:}
87: 1:Scores: 2217
87: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27']')
87: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
88: 1:BoardData {
88: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
88: 1:  'expectedAnswer': '28',
88: 1:  'history': [
88: 1:    {
88: 1:      'answer': '1',
88: 1:      'question': '0',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '0',
88: 1:      'question': '1',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '3',
88: 1:      'question': '2',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '2',
88: 1:      'question': '3',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '4',
88: 1:      'question': '5',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '6',
88: 1:      'question': '7',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '8',
88: 1:      'question': '9',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '10',
88: 1:      'question': '11',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '15',
88: 1:      'question': '14',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '16',
88: 1:      'question': '17',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '21',
88: 1:      'question': '20',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '22',
88: 1:      'question': '23',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '27',
88: 1:      'question': '26',
88: 1:      'valid': true
88: 1:    }
88: 1:  ],
88: 1:  'info': [
88: 1:    '✅f(0) = 1',
88: 1:    '✅f(1) = 0',
88: 1:    '✅f(2) = 3',
88: 1:    '✅f(3) = 2',
88: 1:    '✅f(5) = 4',
88: 1:    '✅f(7) = 6',
88: 1:    '✅f(9) = 8',
88: 1:    '✅f(11) = 10',
88: 1:    '✅f(14) = 15',
88: 1:    '✅f(17) = 16',
88: 1:    '✅f(20) = 21',
88: 1:    '✅f(23) = 22',
88: 1:    '✅f(26) = 27',
88: 1:    '❌f(29) = ??? != 28'
88: 1:  ],
88: 1:  'level': 3,
88: 1:  'nextQuestion': '29',
88: 1:  'questions': [
88: 1:    '0',
88: 1:    '1',
88: 1:    '2',
88: 1:    '3',
88: 1:    '5',
88: 1:    '7',
88: 1:    '9',
88: 1:    '11',
88: 1:    '14',
88: 1:    '17',
88: 1:    '20',
88: 1:    '23',
88: 1:    '26',
88: 1:    '29'
88: 1:  ]
88: 1:}
88: 1:Scores: 2221
88: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28']')
88: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
89: 1:BoardData {
89: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
89: 1:  'expectedAnswer': '32',
89: 1:  'history': [
89: 1:    {
89: 1:      'answer': '1',
89: 1:      'question': '0',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '0',
89: 1:      'question': '1',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '3',
89: 1:      'question': '2',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '2',
89: 1:      'question': '3',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '4',
89: 1:      'question': '5',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '6',
89: 1:      'question': '7',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '8',
89: 1:      'question': '9',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '10',
89: 1:      'question': '11',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '15',
89: 1:      'question': '14',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '16',
89: 1:      'question': '17',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '21',
89: 1:      'question': '20',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '22',
89: 1:      'question': '23',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '27',
89: 1:      'question': '26',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '28',
89: 1:      'question': '29',
89: 1:      'valid': true
89: 1:    }
89: 1:  ],
89: 1:  'info': [
89: 1:    '✅f(0) = 1',
89: 1:    '✅f(1) = 0',
89: 1:    '✅f(2) = 3',
89: 1:    '✅f(3) = 2',
89: 1:    '✅f(5) = 4',
89: 1:    '✅f(7) = 6',
89: 1:    '✅f(9) = 8',
89: 1:    '✅f(11) = 10',
89: 1:    '✅f(14) = 15',
89: 1:    '✅f(17) = 16',
89: 1:    '✅f(20) = 21',
89: 1:    '✅f(23) = 22',
89: 1:    '✅f(26) = 27',
89: 1:    '✅f(29) = 28',
89: 1:    '❌f(33) = ??? != 32'
89: 1:  ],
89: 1:  'level': 3,
89: 1:  'nextQuestion': '33',
89: 1:  'questions': [
89: 1:    '0',
89: 1:    '1',
89: 1:    '2',
89: 1:    '3',
89: 1:    '5',
89: 1:    '7',
89: 1:    '9',
89: 1:    '11',
89: 1:    '14',
89: 1:    '17',
89: 1:    '20',
89: 1:    '23',
89: 1:    '26',
89: 1:    '29',
89: 1:    '33'
89: 1:  ]
89: 1:}
89: 1:Scores: 2225
89: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32']')
89: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
90: 1:BoardData {
90: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
90: 1:  'expectedAnswer': '36',
90: 1:  'history': [
90: 1:    {
90: 1:      'answer': '1',
90: 1:      'question': '0',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '0',
90: 1:      'question': '1',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '3',
90: 1:      'question': '2',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '2',
90: 1:      'question': '3',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '4',
90: 1:      'question': '5',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '6',
90: 1:      'question': '7',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '8',
90: 1:      'question': '9',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '10',
90: 1:      'question': '11',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '15',
90: 1:      'question': '14',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '16',
90: 1:      'question': '17',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '21',
90: 1:      'question': '20',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '22',
90: 1:      'question': '23',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '27',
90: 1:      'question': '26',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '28',
90: 1:      'question': '29',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '32',
90: 1:      'question': '33',
90: 1:      'valid': true
90: 1:    }
90: 1:  ],
90: 1:  'info': [
90: 1:    '✅f(0) = 1',
90: 1:    '✅f(1) = 0',
90: 1:    '✅f(2) = 3',
90: 1:    '✅f(3) = 2',
90: 1:    '✅f(5) = 4',
90: 1:    '✅f(7) = 6',
90: 1:    '✅f(9) = 8',
90: 1:    '✅f(11) = 10',
90: 1:    '✅f(14) = 15',
90: 1:    '✅f(17) = 16',
90: 1:    '✅f(20) = 21',
90: 1:    '✅f(23) = 22',
90: 1:    '✅f(26) = 27',
90: 1:    '✅f(29) = 28',
90: 1:    '✅f(33) = 32',
90: 1:    '❌f(37) = ??? != 36'
90: 1:  ],
90: 1:  'level': 3,
90: 1:  'nextQuestion': '37',
90: 1:  'questions': [
90: 1:    '0',
90: 1:    '1',
90: 1:    '2',
90: 1:    '3',
90: 1:    '5',
90: 1:    '7',
90: 1:    '9',
90: 1:    '11',
90: 1:    '14',
90: 1:    '17',
90: 1:    '20',
90: 1:    '23',
90: 1:    '26',
90: 1:    '29',
90: 1:    '33',
90: 1:    '37'
90: 1:  ]
90: 1:}
90: 1:Scores: 2229
90: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36']')
90: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
91: 1:BoardData {
91: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
91: 1:  'expectedAnswer': '40',
91: 1:  'history': [
91: 1:    {
91: 1:      'answer': '1',
91: 1:      'question': '0',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '0',
91: 1:      'question': '1',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '3',
91: 1:      'question': '2',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '2',
91: 1:      'question': '3',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '4',
91: 1:      'question': '5',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '6',
91: 1:      'question': '7',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '8',
91: 1:      'question': '9',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '10',
91: 1:      'question': '11',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '15',
91: 1:      'question': '14',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '16',
91: 1:      'question': '17',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '21',
91: 1:      'question': '20',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '22',
91: 1:      'question': '23',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '27',
91: 1:      'question': '26',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '28',
91: 1:      'question': '29',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '32',
91: 1:      'question': '33',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '36',
91: 1:      'question': '37',
91: 1:      'valid': true
91: 1:    }
91: 1:  ],
91: 1:  'info': [
91: 1:    '✅f(0) = 1',
91: 1:    '✅f(1) = 0',
91: 1:    '✅f(2) = 3',
91: 1:    '✅f(3) = 2',
91: 1:    '✅f(5) = 4',
91: 1:    '✅f(7) = 6',
91: 1:    '✅f(9) = 8',
91: 1:    '✅f(11) = 10',
91: 1:    '✅f(14) = 15',
91: 1:    '✅f(17) = 16',
91: 1:    '✅f(20) = 21',
91: 1:    '✅f(23) = 22',
91: 1:    '✅f(26) = 27',
91: 1:    '✅f(29) = 28',
91: 1:    '✅f(33) = 32',
91: 1:    '✅f(37) = 36',
91: 1:    '❌f(41) = ??? != 40'
91: 1:  ],
91: 1:  'level': 3,
91: 1:  'nextQuestion': '41',
91: 1:  'questions': [
91: 1:    '0',
91: 1:    '1',
91: 1:    '2',
91: 1:    '3',
91: 1:    '5',
91: 1:    '7',
91: 1:    '9',
91: 1:    '11',
91: 1:    '14',
91: 1:    '17',
91: 1:    '20',
91: 1:    '23',
91: 1:    '26',
91: 1:    '29',
91: 1:    '33',
91: 1:    '37',
91: 1:    '41'
91: 1:  ]
91: 1:}
91: 1:Scores: 2233
91: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40']')
91: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
92: 1:BoardData {
92: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
92: 1:  'expectedAnswer': '44',
92: 1:  'history': [
92: 1:    {
92: 1:      'answer': '1',
92: 1:      'question': '0',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '0',
92: 1:      'question': '1',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '3',
92: 1:      'question': '2',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '2',
92: 1:      'question': '3',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '4',
92: 1:      'question': '5',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '6',
92: 1:      'question': '7',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '8',
92: 1:      'question': '9',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '10',
92: 1:      'question': '11',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '15',
92: 1:      'question': '14',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '16',
92: 1:      'question': '17',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '21',
92: 1:      'question': '20',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '22',
92: 1:      'question': '23',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '27',
92: 1:      'question': '26',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '28',
92: 1:      'question': '29',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '32',
92: 1:      'question': '33',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '36',
92: 1:      'question': '37',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '40',
92: 1:      'question': '41',
92: 1:      'valid': true
92: 1:    }
92: 1:  ],
92: 1:  'info': [
92: 1:    '✅f(0) = 1',
92: 1:    '✅f(1) = 0',
92: 1:    '✅f(2) = 3',
92: 1:    '✅f(3) = 2',
92: 1:    '✅f(5) = 4',
92: 1:    '✅f(7) = 6',
92: 1:    '✅f(9) = 8',
92: 1:    '✅f(11) = 10',
92: 1:    '✅f(14) = 15',
92: 1:    '✅f(17) = 16',
92: 1:    '✅f(20) = 21',
92: 1:    '✅f(23) = 22',
92: 1:    '✅f(26) = 27',
92: 1:    '✅f(29) = 28',
92: 1:    '✅f(33) = 32',
92: 1:    '✅f(37) = 36',
92: 1:    '✅f(41) = 40',
92: 1:    '❌f(45) = ??? != 44'
92: 1:  ],
92: 1:  'level': 3,
92: 1:  'nextQuestion': '45',
92: 1:  'questions': [
92: 1:    '0',
92: 1:    '1',
92: 1:    '2',
92: 1:    '3',
92: 1:    '5',
92: 1:    '7',
92: 1:    '9',
92: 1:    '11',
92: 1:    '14',
92: 1:    '17',
92: 1:    '20',
92: 1:    '23',
92: 1:    '26',
92: 1:    '29',
92: 1:    '33',
92: 1:    '37',
92: 1:    '41',
92: 1:    '45'
92: 1:  ]
92: 1:}
92: 1:Scores: 2237
92: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44']')
92: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
93: 1:BoardData {
93: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
93: 1:  'expectedAnswer': '51',
93: 1:  'history': [
93: 1:    {
93: 1:      'answer': '1',
93: 1:      'question': '0',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '0',
93: 1:      'question': '1',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '3',
93: 1:      'question': '2',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '2',
93: 1:      'question': '3',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '4',
93: 1:      'question': '5',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '6',
93: 1:      'question': '7',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '8',
93: 1:      'question': '9',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '10',
93: 1:      'question': '11',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '15',
93: 1:      'question': '14',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '16',
93: 1:      'question': '17',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '21',
93: 1:      'question': '20',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '22',
93: 1:      'question': '23',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '27',
93: 1:      'question': '26',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '28',
93: 1:      'question': '29',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '32',
93: 1:      'question': '33',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '36',
93: 1:      'question': '37',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '40',
93: 1:      'question': '41',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '44',
93: 1:      'question': '45',
93: 1:      'valid': true
93: 1:    }
93: 1:  ],
93: 1:  'info': [
93: 1:    '✅f(0) = 1',
93: 1:    '✅f(1) = 0',
93: 1:    '✅f(2) = 3',
93: 1:    '✅f(3) = 2',
93: 1:    '✅f(5) = 4',
93: 1:    '✅f(7) = 6',
93: 1:    '✅f(9) = 8',
93: 1:    '✅f(11) = 10',
93: 1:    '✅f(14) = 15',
93: 1:    '✅f(17) = 16',
93: 1:    '✅f(20) = 21',
93: 1:    '✅f(23) = 22',
93: 1:    '✅f(26) = 27',
93: 1:    '✅f(29) = 28',
93: 1:    '✅f(33) = 32',
93: 1:    '✅f(37) = 36',
93: 1:    '✅f(41) = 40',
93: 1:    '✅f(45) = 44',
93: 1:    '❌f(50) = ??? != 51'
93: 1:  ],
93: 1:  'level': 3,
93: 1:  'nextQuestion': '50',
93: 1:  'questions': [
93: 1:    '0',
93: 1:    '1',
93: 1:    '2',
93: 1:    '3',
93: 1:    '5',
93: 1:    '7',
93: 1:    '9',
93: 1:    '11',
93: 1:    '14',
93: 1:    '17',
93: 1:    '20',
93: 1:    '23',
93: 1:    '26',
93: 1:    '29',
93: 1:    '33',
93: 1:    '37',
93: 1:    '41',
93: 1:    '45',
93: 1:    '50'
93: 1:  ]
93: 1:}
93: 1:Scores: 2241
93: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51']')
93: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
94: 1:BoardData {
94: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
94: 1:  'expectedAnswer': '54',
94: 1:  'history': [
94: 1:    {
94: 1:      'answer': '1',
94: 1:      'question': '0',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '0',
94: 1:      'question': '1',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '3',
94: 1:      'question': '2',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '2',
94: 1:      'question': '3',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '4',
94: 1:      'question': '5',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '6',
94: 1:      'question': '7',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '8',
94: 1:      'question': '9',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '10',
94: 1:      'question': '11',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '15',
94: 1:      'question': '14',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '16',
94: 1:      'question': '17',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '21',
94: 1:      'question': '20',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '22',
94: 1:      'question': '23',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '27',
94: 1:      'question': '26',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '28',
94: 1:      'question': '29',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '32',
94: 1:      'question': '33',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '36',
94: 1:      'question': '37',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '40',
94: 1:      'question': '41',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '44',
94: 1:      'question': '45',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '51',
94: 1:      'question': '50',
94: 1:      'valid': true
94: 1:    }
94: 1:  ],
94: 1:  'info': [
94: 1:    '✅f(0) = 1',
94: 1:    '✅f(1) = 0',
94: 1:    '✅f(2) = 3',
94: 1:    '✅f(3) = 2',
94: 1:    '✅f(5) = 4',
94: 1:    '✅f(7) = 6',
94: 1:    '✅f(9) = 8',
94: 1:    '✅f(11) = 10',
94: 1:    '✅f(14) = 15',
94: 1:    '✅f(17) = 16',
94: 1:    '✅f(20) = 21',
94: 1:    '✅f(23) = 22',
94: 1:    '✅f(26) = 27',
94: 1:    '✅f(29) = 28',
94: 1:    '✅f(33) = 32',
94: 1:    '✅f(37) = 36',
94: 1:    '✅f(41) = 40',
94: 1:    '✅f(45) = 44',
94: 1:    '✅f(50) = 51',
94: 1:    '❌f(55) = ??? != 54'
94: 1:  ],
94: 1:  'level': 3,
94: 1:  'nextQuestion': '55',
94: 1:  'questions': [
94: 1:    '0',
94: 1:    '1',
94: 1:    '2',
94: 1:    '3',
94: 1:    '5',
94: 1:    '7',
94: 1:    '9',
94: 1:    '11',
94: 1:    '14',
94: 1:    '17',
94: 1:    '20',
94: 1:    '23',
94: 1:    '26',
94: 1:    '29',
94: 1:    '33',
94: 1:    '37',
94: 1:    '41',
94: 1:    '45',
94: 1:    '50',
94: 1:    '55'
94: 1:  ]
94: 1:}
94: 1:Scores: 2245
94: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54']')
94: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
95: 1:BoardData {
95: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
95: 1:  'expectedAnswer': '61',
95: 1:  'history': [
95: 1:    {
95: 1:      'answer': '1',
95: 1:      'question': '0',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '0',
95: 1:      'question': '1',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '3',
95: 1:      'question': '2',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '2',
95: 1:      'question': '3',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '4',
95: 1:      'question': '5',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '6',
95: 1:      'question': '7',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '8',
95: 1:      'question': '9',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '10',
95: 1:      'question': '11',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '15',
95: 1:      'question': '14',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '16',
95: 1:      'question': '17',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '21',
95: 1:      'question': '20',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '22',
95: 1:      'question': '23',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '27',
95: 1:      'question': '26',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '28',
95: 1:      'question': '29',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '32',
95: 1:      'question': '33',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '36',
95: 1:      'question': '37',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '40',
95: 1:      'question': '41',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '44',
95: 1:      'question': '45',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '51',
95: 1:      'question': '50',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '54',
95: 1:      'question': '55',
95: 1:      'valid': true
95: 1:    }
95: 1:  ],
95: 1:  'info': [
95: 1:    '✅f(0) = 1',
95: 1:    '✅f(1) = 0',
95: 1:    '✅f(2) = 3',
95: 1:    '✅f(3) = 2',
95: 1:    '✅f(5) = 4',
95: 1:    '✅f(7) = 6',
95: 1:    '✅f(9) = 8',
95: 1:    '✅f(11) = 10',
95: 1:    '✅f(14) = 15',
95: 1:    '✅f(17) = 16',
95: 1:    '✅f(20) = 21',
95: 1:    '✅f(23) = 22',
95: 1:    '✅f(26) = 27',
95: 1:    '✅f(29) = 28',
95: 1:    '✅f(33) = 32',
95: 1:    '✅f(37) = 36',
95: 1:    '✅f(41) = 40',
95: 1:    '✅f(45) = 44',
95: 1:    '✅f(50) = 51',
95: 1:    '✅f(55) = 54',
95: 1:    '❌f(60) = ??? != 61'
95: 1:  ],
95: 1:  'level': 3,
95: 1:  'nextQuestion': '60',
95: 1:  'questions': [
95: 1:    '0',
95: 1:    '1',
95: 1:    '2',
95: 1:    '3',
95: 1:    '5',
95: 1:    '7',
95: 1:    '9',
95: 1:    '11',
95: 1:    '14',
95: 1:    '17',
95: 1:    '20',
95: 1:    '23',
95: 1:    '26',
95: 1:    '29',
95: 1:    '33',
95: 1:    '37',
95: 1:    '41',
95: 1:    '45',
95: 1:    '50',
95: 1:    '55',
95: 1:    '60'
95: 1:  ]
95: 1:}
95: 1:Scores: 2249
95: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61']')
95: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
96: 1:BoardData {
96: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
96: 1:  'expectedAnswer': '64',
96: 1:  'history': [
96: 1:    {
96: 1:      'answer': '1',
96: 1:      'question': '0',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '0',
96: 1:      'question': '1',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '3',
96: 1:      'question': '2',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '2',
96: 1:      'question': '3',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '4',
96: 1:      'question': '5',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '6',
96: 1:      'question': '7',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '8',
96: 1:      'question': '9',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '10',
96: 1:      'question': '11',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '15',
96: 1:      'question': '14',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '16',
96: 1:      'question': '17',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '21',
96: 1:      'question': '20',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '22',
96: 1:      'question': '23',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '27',
96: 1:      'question': '26',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '28',
96: 1:      'question': '29',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '32',
96: 1:      'question': '33',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '36',
96: 1:      'question': '37',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '40',
96: 1:      'question': '41',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '44',
96: 1:      'question': '45',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '51',
96: 1:      'question': '50',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '54',
96: 1:      'question': '55',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '61',
96: 1:      'question': '60',
96: 1:      'valid': true
96: 1:    }
96: 1:  ],
96: 1:  'info': [
96: 1:    '✅f(0) = 1',
96: 1:    '✅f(1) = 0',
96: 1:    '✅f(2) = 3',
96: 1:    '✅f(3) = 2',
96: 1:    '✅f(5) = 4',
96: 1:    '✅f(7) = 6',
96: 1:    '✅f(9) = 8',
96: 1:    '✅f(11) = 10',
96: 1:    '✅f(14) = 15',
96: 1:    '✅f(17) = 16',
96: 1:    '✅f(20) = 21',
96: 1:    '✅f(23) = 22',
96: 1:    '✅f(26) = 27',
96: 1:    '✅f(29) = 28',
96: 1:    '✅f(33) = 32',
96: 1:    '✅f(37) = 36',
96: 1:    '✅f(41) = 40',
96: 1:    '✅f(45) = 44',
96: 1:    '✅f(50) = 51',
96: 1:    '✅f(55) = 54',
96: 1:    '✅f(60) = 61',
96: 1:    '❌f(65) = ??? != 64'
96: 1:  ],
96: 1:  'level': 3,
96: 1:  'nextQuestion': '65',
96: 1:  'questions': [
96: 1:    '0',
96: 1:    '1',
96: 1:    '2',
96: 1:    '3',
96: 1:    '5',
96: 1:    '7',
96: 1:    '9',
96: 1:    '11',
96: 1:    '14',
96: 1:    '17',
96: 1:    '20',
96: 1:    '23',
96: 1:    '26',
96: 1:    '29',
96: 1:    '33',
96: 1:    '37',
96: 1:    '41',
96: 1:    '45',
96: 1:    '50',
96: 1:    '55',
96: 1:    '60',
96: 1:    '65'
96: 1:  ]
96: 1:}
96: 1:Scores: 2253
96: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64']')
96: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
97: 1:BoardData {
97: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
97: 1:  'expectedAnswer': '71',
97: 1:  'history': [
97: 1:    {
97: 1:      'answer': '1',
97: 1:      'question': '0',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '0',
97: 1:      'question': '1',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '3',
97: 1:      'question': '2',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '2',
97: 1:      'question': '3',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '4',
97: 1:      'question': '5',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '6',
97: 1:      'question': '7',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '8',
97: 1:      'question': '9',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '10',
97: 1:      'question': '11',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '15',
97: 1:      'question': '14',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '16',
97: 1:      'question': '17',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '21',
97: 1:      'question': '20',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '22',
97: 1:      'question': '23',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '27',
97: 1:      'question': '26',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '28',
97: 1:      'question': '29',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '32',
97: 1:      'question': '33',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '36',
97: 1:      'question': '37',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '40',
97: 1:      'question': '41',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '44',
97: 1:      'question': '45',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '51',
97: 1:      'question': '50',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '54',
97: 1:      'question': '55',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '61',
97: 1:      'question': '60',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '64',
97: 1:      'question': '65',
97: 1:      'valid': true
97: 1:    }
97: 1:  ],
97: 1:  'info': [
97: 1:    '✅f(0) = 1',
97: 1:    '✅f(1) = 0',
97: 1:    '✅f(2) = 3',
97: 1:    '✅f(3) = 2',
97: 1:    '✅f(5) = 4',
97: 1:    '✅f(7) = 6',
97: 1:    '✅f(9) = 8',
97: 1:    '✅f(11) = 10',
97: 1:    '✅f(14) = 15',
97: 1:    '✅f(17) = 16',
97: 1:    '✅f(20) = 21',
97: 1:    '✅f(23) = 22',
97: 1:    '✅f(26) = 27',
97: 1:    '✅f(29) = 28',
97: 1:    '✅f(33) = 32',
97: 1:    '✅f(37) = 36',
97: 1:    '✅f(41) = 40',
97: 1:    '✅f(45) = 44',
97: 1:    '✅f(50) = 51',
97: 1:    '✅f(55) = 54',
97: 1:    '✅f(60) = 61',
97: 1:    '✅f(65) = 64',
97: 1:    '❌f(70) = ??? != 71'
97: 1:  ],
97: 1:  'level': 3,
97: 1:  'nextQuestion': '70',
97: 1:  'questions': [
97: 1:    '0',
97: 1:    '1',
97: 1:    '2',
97: 1:    '3',
97: 1:    '5',
97: 1:    '7',
97: 1:    '9',
97: 1:    '11',
97: 1:    '14',
97: 1:    '17',
97: 1:    '20',
97: 1:    '23',
97: 1:    '26',
97: 1:    '29',
97: 1:    '33',
97: 1:    '37',
97: 1:    '41',
97: 1:    '45',
97: 1:    '50',
97: 1:    '55',
97: 1:    '60',
97: 1:    '65',
97: 1:    '70'
97: 1:  ]
97: 1:}
97: 1:Scores: 2257
97: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71']')
97: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
98: 1:BoardData {
98: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
98: 1:  'expectedAnswer': '74',
98: 1:  'history': [
98: 1:    {
98: 1:      'answer': '1',
98: 1:      'question': '0',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '0',
98: 1:      'question': '1',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '3',
98: 1:      'question': '2',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '2',
98: 1:      'question': '3',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '4',
98: 1:      'question': '5',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '6',
98: 1:      'question': '7',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '8',
98: 1:      'question': '9',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '10',
98: 1:      'question': '11',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '15',
98: 1:      'question': '14',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '16',
98: 1:      'question': '17',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '21',
98: 1:      'question': '20',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '22',
98: 1:      'question': '23',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '27',
98: 1:      'question': '26',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '28',
98: 1:      'question': '29',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '32',
98: 1:      'question': '33',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '36',
98: 1:      'question': '37',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '40',
98: 1:      'question': '41',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '44',
98: 1:      'question': '45',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '51',
98: 1:      'question': '50',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '54',
98: 1:      'question': '55',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '61',
98: 1:      'question': '60',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '64',
98: 1:      'question': '65',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '71',
98: 1:      'question': '70',
98: 1:      'valid': true
98: 1:    }
98: 1:  ],
98: 1:  'info': [
98: 1:    '✅f(0) = 1',
98: 1:    '✅f(1) = 0',
98: 1:    '✅f(2) = 3',
98: 1:    '✅f(3) = 2',
98: 1:    '✅f(5) = 4',
98: 1:    '✅f(7) = 6',
98: 1:    '✅f(9) = 8',
98: 1:    '✅f(11) = 10',
98: 1:    '✅f(14) = 15',
98: 1:    '✅f(17) = 16',
98: 1:    '✅f(20) = 21',
98: 1:    '✅f(23) = 22',
98: 1:    '✅f(26) = 27',
98: 1:    '✅f(29) = 28',
98: 1:    '✅f(33) = 32',
98: 1:    '✅f(37) = 36',
98: 1:    '✅f(41) = 40',
98: 1:    '✅f(45) = 44',
98: 1:    '✅f(50) = 51',
98: 1:    '✅f(55) = 54',
98: 1:    '✅f(60) = 61',
98: 1:    '✅f(65) = 64',
98: 1:    '✅f(70) = 71',
98: 1:    '❌f(75) = ??? != 74'
98: 1:  ],
98: 1:  'level': 3,
98: 1:  'nextQuestion': '75',
98: 1:  'questions': [
98: 1:    '0',
98: 1:    '1',
98: 1:    '2',
98: 1:    '3',
98: 1:    '5',
98: 1:    '7',
98: 1:    '9',
98: 1:    '11',
98: 1:    '14',
98: 1:    '17',
98: 1:    '20',
98: 1:    '23',
98: 1:    '26',
98: 1:    '29',
98: 1:    '33',
98: 1:    '37',
98: 1:    '41',
98: 1:    '45',
98: 1:    '50',
98: 1:    '55',
98: 1:    '60',
98: 1:    '65',
98: 1:    '70',
98: 1:    '75'
98: 1:  ]
98: 1:}
98: 1:Scores: 2261
98: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74']')
98: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
99: 1:BoardData {
99: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
99: 1:  'expectedAnswer': '80',
99: 1:  'history': [
99: 1:    {
99: 1:      'answer': '1',
99: 1:      'question': '0',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '0',
99: 1:      'question': '1',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '3',
99: 1:      'question': '2',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '2',
99: 1:      'question': '3',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '4',
99: 1:      'question': '5',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '6',
99: 1:      'question': '7',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '8',
99: 1:      'question': '9',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '10',
99: 1:      'question': '11',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '15',
99: 1:      'question': '14',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '16',
99: 1:      'question': '17',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '21',
99: 1:      'question': '20',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '22',
99: 1:      'question': '23',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '27',
99: 1:      'question': '26',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '28',
99: 1:      'question': '29',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '32',
99: 1:      'question': '33',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '36',
99: 1:      'question': '37',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '40',
99: 1:      'question': '41',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '44',
99: 1:      'question': '45',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '51',
99: 1:      'question': '50',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '54',
99: 1:      'question': '55',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '61',
99: 1:      'question': '60',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '64',
99: 1:      'question': '65',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '71',
99: 1:      'question': '70',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '74',
99: 1:      'question': '75',
99: 1:      'valid': true
99: 1:    }
99: 1:  ],
99: 1:  'info': [
99: 1:    '✅f(0) = 1',
99: 1:    '✅f(1) = 0',
99: 1:    '✅f(2) = 3',
99: 1:    '✅f(3) = 2',
99: 1:    '✅f(5) = 4',
99: 1:    '✅f(7) = 6',
99: 1:    '✅f(9) = 8',
99: 1:    '✅f(11) = 10',
99: 1:    '✅f(14) = 15',
99: 1:    '✅f(17) = 16',
99: 1:    '✅f(20) = 21',
99: 1:    '✅f(23) = 22',
99: 1:    '✅f(26) = 27',
99: 1:    '✅f(29) = 28',
99: 1:    '✅f(33) = 32',
99: 1:    '✅f(37) = 36',
99: 1:    '✅f(41) = 40',
99: 1:    '✅f(45) = 44',
99: 1:    '✅f(50) = 51',
99: 1:    '✅f(55) = 54',
99: 1:    '✅f(60) = 61',
99: 1:    '✅f(65) = 64',
99: 1:    '✅f(70) = 71',
99: 1:    '✅f(75) = 74',
99: 1:    '❌f(81) = ??? != 80'
99: 1:  ],
99: 1:  'level': 3,
99: 1:  'nextQuestion': '81',
99: 1:  'questions': [
99: 1:    '0',
99: 1:    '1',
99: 1:    '2',
99: 1:    '3',
99: 1:    '5',
99: 1:    '7',
99: 1:    '9',
99: 1:    '11',
99: 1:    '14',
99: 1:    '17',
99: 1:    '20',
99: 1:    '23',
99: 1:    '26',
99: 1:    '29',
99: 1:    '33',
99: 1:    '37',
99: 1:    '41',
99: 1:    '45',
99: 1:    '50',
99: 1:    '55',
99: 1:    '60',
99: 1:    '65',
99: 1:    '70',
99: 1:    '75',
99: 1:    '81'
99: 1:  ]
99: 1:}
99: 1:Scores: 2265
99: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74', '80']')
99: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
100: 1:BoardData {
100: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
100: 1:  'expectedAnswer': '86',
100: 1:  'history': [
100: 1:    {
100: 1:      'answer': '1',
100: 1:      'question': '0',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '0',
100: 1:      'question': '1',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '3',
100: 1:      'question': '2',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '2',
100: 1:      'question': '3',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '4',
100: 1:      'question': '5',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '6',
100: 1:      'question': '7',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '8',
100: 1:      'question': '9',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '10',
100: 1:      'question': '11',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '15',
100: 1:      'question': '14',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '16',
100: 1:      'question': '17',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '21',
100: 1:      'question': '20',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '22',
100: 1:      'question': '23',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '27',
100: 1:      'question': '26',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '28',
100: 1:      'question': '29',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '32',
100: 1:      'question': '33',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '36',
100: 1:      'question': '37',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '40',
100: 1:      'question': '41',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '44',
100: 1:      'question': '45',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '51',
100: 1:      'question': '50',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '54',
100: 1:      'question': '55',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '61',
100: 1:      'question': '60',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '64',
100: 1:      'question': '65',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '71',
100: 1:      'question': '70',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '74',
100: 1:      'question': '75',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '80',
100: 1:      'question': '81',
100: 1:      'valid': true
100: 1:    }
100: 1:  ],
100: 1:  'info': [
100: 1:    '✅f(0) = 1',
100: 1:    '✅f(1) = 0',
100: 1:    '✅f(2) = 3',
100: 1:    '✅f(3) = 2',
100: 1:    '✅f(5) = 4',
100: 1:    '✅f(7) = 6',
100: 1:    '✅f(9) = 8',
100: 1:    '✅f(11) = 10',
100: 1:    '✅f(14) = 15',
100: 1:    '✅f(17) = 16',
100: 1:    '✅f(20) = 21',
100: 1:    '✅f(23) = 22',
100: 1:    '✅f(26) = 27',
100: 1:    '✅f(29) = 28',
100: 1:    '✅f(33) = 32',
100: 1:    '✅f(37) = 36',
100: 1:    '✅f(41) = 40',
100: 1:    '✅f(45) = 44',
100: 1:    '✅f(50) = 51',
100: 1:    '✅f(55) = 54',
100: 1:    '✅f(60) = 61',
100: 1:    '✅f(65) = 64',
100: 1:    '✅f(70) = 71',
100: 1:    '✅f(75) = 74',
100: 1:    '✅f(81) = 80',
100: 1:    '❌f(87) = ??? != 86'
100: 1:  ],
100: 1:  'level': 3,
100: 1:  'nextQuestion': '87',
100: 1:  'questions': [
100: 1:    '0',
100: 1:    '1',
100: 1:    '2',
100: 1:    '3',
100: 1:    '5',
100: 1:    '7',
100: 1:    '9',
100: 1:    '11',
100: 1:    '14',
100: 1:    '17',
100: 1:    '20',
100: 1:    '23',
100: 1:    '26',
100: 1:    '29',
100: 1:    '33',
100: 1:    '37',
100: 1:    '41',
100: 1:    '45',
100: 1:    '50',
100: 1:    '55',
100: 1:    '60',
100: 1:    '65',
100: 1:    '70',
100: 1:    '75',
100: 1:    '81',
100: 1:    '87'
100: 1:  ]
100: 1:}
100: 1:Scores: 2269
100: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74', '80', '86']')
100: 1:Fire Event: PassTest{complexity=11, testCount=26}
100: 1:Fire Event: NextAlgorithm{complexity=11, time=0}
------------------------------------------
101: 1:BoardData {
101: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
101: 1:  'history': [
101: 1:    {
101: 1:      'answer': '1',
101: 1:      'question': '0',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '0',
101: 1:      'question': '1',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '3',
101: 1:      'question': '2',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '2',
101: 1:      'question': '3',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '4',
101: 1:      'question': '5',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '6',
101: 1:      'question': '7',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '8',
101: 1:      'question': '9',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '10',
101: 1:      'question': '11',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '15',
101: 1:      'question': '14',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '16',
101: 1:      'question': '17',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '21',
101: 1:      'question': '20',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '22',
101: 1:      'question': '23',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '27',
101: 1:      'question': '26',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '28',
101: 1:      'question': '29',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '32',
101: 1:      'question': '33',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '36',
101: 1:      'question': '37',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '40',
101: 1:      'question': '41',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '44',
101: 1:      'question': '45',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '51',
101: 1:      'question': '50',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '54',
101: 1:      'question': '55',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '61',
101: 1:      'question': '60',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '64',
101: 1:      'question': '65',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '71',
101: 1:      'question': '70',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '74',
101: 1:      'question': '75',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '80',
101: 1:      'question': '81',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '86',
101: 1:      'question': '87',
101: 1:      'valid': true
101: 1:    }
101: 1:  ],
101: 1:  'info': [
101: 1:    '✅f(0) = 1',
101: 1:    '✅f(1) = 0',
101: 1:    '✅f(2) = 3',
101: 1:    '✅f(3) = 2',
101: 1:    '✅f(5) = 4',
101: 1:    '✅f(7) = 6',
101: 1:    '✅f(9) = 8',
101: 1:    '✅f(11) = 10',
101: 1:    '✅f(14) = 15',
101: 1:    '✅f(17) = 16',
101: 1:    '✅f(20) = 21',
101: 1:    '✅f(23) = 22',
101: 1:    '✅f(26) = 27',
101: 1:    '✅f(29) = 28',
101: 1:    '✅f(33) = 32',
101: 1:    '✅f(37) = 36',
101: 1:    '✅f(41) = 40',
101: 1:    '✅f(45) = 44',
101: 1:    '✅f(50) = 51',
101: 1:    '✅f(55) = 54',
101: 1:    '✅f(60) = 61',
101: 1:    '✅f(65) = 64',
101: 1:    '✅f(70) = 71',
101: 1:    '✅f(75) = 74',
101: 1:    '✅f(81) = 80',
101: 1:    '✅f(87) = 86'
101: 1:  ],
101: 1:  'level': 3,
101: 1:  'questions': []
101: 1:}
101: 1:Scores: 3757
101: 1:Answer: message('StartNextLevel')
101: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
102: 1:BoardData {
102: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
102: 1:  'expectedAnswer': 'cab',
102: 1:  'history': [],
102: 1:  'info': ['❌f(abc) = ??? != cab'],
102: 1:  'level': 4,
102: 1:  'nextQuestion': 'abc',
102: 1:  'questions': ['abc']
102: 1:}
102: 1:Scores: 3757
102: 1:Answer: message('['cab']')
102: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
103: 1:BoardData {
103: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
103: 1:  'expectedAnswer': 'dca',
103: 1:  'history': [{
103: 1:    'answer': 'cab',
103: 1:    'question': 'abc',
103: 1:    'valid': true
103: 1:  }],
103: 1:  'info': [
103: 1:    '✅f(abc) = cab',
103: 1:    '❌f(cad) = ??? != dca'
103: 1:  ],
103: 1:  'level': 4,
103: 1:  'nextQuestion': 'cad',
103: 1:  'questions': [
103: 1:    'abc',
103: 1:    'cad'
103: 1:  ]
103: 1:}
103: 1:Scores: 3762
103: 1:Answer: message('['cab', 'dca']')
103: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
104: 1:BoardData {
104: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
104: 1:  'expectedAnswer': 'das',
104: 1:  'history': [
104: 1:    {
104: 1:      'answer': 'cab',
104: 1:      'question': 'abc',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'dca',
104: 1:      'question': 'cad',
104: 1:      'valid': true
104: 1:    }
104: 1:  ],
104: 1:  'info': [
104: 1:    '✅f(abc) = cab',
104: 1:    '✅f(cad) = dca',
104: 1:    '❌f(asd) = ??? != das'
104: 1:  ],
104: 1:  'level': 4,
104: 1:  'nextQuestion': 'asd',
104: 1:  'questions': [
104: 1:    'abc',
104: 1:    'cad',
104: 1:    'asd'
104: 1:  ]
104: 1:}
104: 1:Scores: 3767
104: 1:Answer: message('['cab', 'dca', 'das']')
104: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
105: 1:BoardData {
105: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
105: 1:  'expectedAnswer': 'zxy',
105: 1:  'history': [
105: 1:    {
105: 1:      'answer': 'cab',
105: 1:      'question': 'abc',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'dca',
105: 1:      'question': 'cad',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'das',
105: 1:      'question': 'asd',
105: 1:      'valid': true
105: 1:    }
105: 1:  ],
105: 1:  'info': [
105: 1:    '✅f(abc) = cab',
105: 1:    '✅f(cad) = dca',
105: 1:    '✅f(asd) = das',
105: 1:    '❌f(xyz) = ??? != zxy'
105: 1:  ],
105: 1:  'level': 4,
105: 1:  'nextQuestion': 'xyz',
105: 1:  'questions': [
105: 1:    'abc',
105: 1:    'cad',
105: 1:    'asd',
105: 1:    'xyz'
105: 1:  ]
105: 1:}
105: 1:Scores: 3772
105: 1:Answer: message('['cab', 'dca', 'das', 'zxy']')
105: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
106: 1:BoardData {
106: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
106: 1:  'expectedAnswer': 'aaa',
106: 1:  'history': [
106: 1:    {
106: 1:      'answer': 'cab',
106: 1:      'question': 'abc',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'dca',
106: 1:      'question': 'cad',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'das',
106: 1:      'question': 'asd',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'zxy',
106: 1:      'question': 'xyz',
106: 1:      'valid': true
106: 1:    }
106: 1:  ],
106: 1:  'info': [
106: 1:    '✅f(abc) = cab',
106: 1:    '✅f(cad) = dca',
106: 1:    '✅f(asd) = das',
106: 1:    '✅f(xyz) = zxy',
106: 1:    '❌f(aaa) = ??? != aaa'
106: 1:  ],
106: 1:  'level': 4,
106: 1:  'nextQuestion': 'aaa',
106: 1:  'questions': [
106: 1:    'abc',
106: 1:    'cad',
106: 1:    'asd',
106: 1:    'xyz',
106: 1:    'aaa'
106: 1:  ]
106: 1:}
106: 1:Scores: 3777
106: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa']')
106: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
107: 1:BoardData {
107: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
107: 1:  'expectedAnswer': '312',
107: 1:  'history': [
107: 1:    {
107: 1:      'answer': 'cab',
107: 1:      'question': 'abc',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'dca',
107: 1:      'question': 'cad',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'das',
107: 1:      'question': 'asd',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'zxy',
107: 1:      'question': 'xyz',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'aaa',
107: 1:      'question': 'aaa',
107: 1:      'valid': true
107: 1:    }
107: 1:  ],
107: 1:  'info': [
107: 1:    '✅f(abc) = cab',
107: 1:    '✅f(cad) = dca',
107: 1:    '✅f(asd) = das',
107: 1:    '✅f(xyz) = zxy',
107: 1:    '✅f(aaa) = aaa',
107: 1:    '❌f(123) = ??? != 312'
107: 1:  ],
107: 1:  'level': 4,
107: 1:  'nextQuestion': '123',
107: 1:  'questions': [
107: 1:    'abc',
107: 1:    'cad',
107: 1:    'asd',
107: 1:    'xyz',
107: 1:    'aaa',
107: 1:    '123'
107: 1:  ]
107: 1:}
107: 1:Scores: 3782
107: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312']')
107: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
108: 1:BoardData {
108: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
108: 1:  'expectedAnswer': 'fdE',
108: 1:  'history': [
108: 1:    {
108: 1:      'answer': 'cab',
108: 1:      'question': 'abc',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': 'dca',
108: 1:      'question': 'cad',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': 'das',
108: 1:      'question': 'asd',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': 'zxy',
108: 1:      'question': 'xyz',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': 'aaa',
108: 1:      'question': 'aaa',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': '312',
108: 1:      'question': '123',
108: 1:      'valid': true
108: 1:    }
108: 1:  ],
108: 1:  'info': [
108: 1:    '✅f(abc) = cab',
108: 1:    '✅f(cad) = dca',
108: 1:    '✅f(asd) = das',
108: 1:    '✅f(xyz) = zxy',
108: 1:    '✅f(aaa) = aaa',
108: 1:    '✅f(123) = 312',
108: 1:    '❌f(dEf) = ??? != fdE'
108: 1:  ],
108: 1:  'level': 4,
108: 1:  'nextQuestion': 'dEf',
108: 1:  'questions': [
108: 1:    'abc',
108: 1:    'cad',
108: 1:    'asd',
108: 1:    'xyz',
108: 1:    'aaa',
108: 1:    '123',
108: 1:    'dEf'
108: 1:  ]
108: 1:}
108: 1:Scores: 3787
108: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE']')
108: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
109: 1:BoardData {
109: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
109: 1:  'expectedAnswer': 'czx',
109: 1:  'history': [
109: 1:    {
109: 1:      'answer': 'cab',
109: 1:      'question': 'abc',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': 'dca',
109: 1:      'question': 'cad',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': 'das',
109: 1:      'question': 'asd',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': 'zxy',
109: 1:      'question': 'xyz',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': 'aaa',
109: 1:      'question': 'aaa',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': '312',
109: 1:      'question': '123',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': 'fdE',
109: 1:      'question': 'dEf',
109: 1:      'valid': true
109: 1:    }
109: 1:  ],
109: 1:  'info': [
109: 1:    '✅f(abc) = cab',
109: 1:    '✅f(cad) = dca',
109: 1:    '✅f(asd) = das',
109: 1:    '✅f(xyz) = zxy',
109: 1:    '✅f(aaa) = aaa',
109: 1:    '✅f(123) = 312',
109: 1:    '✅f(dEf) = fdE',
109: 1:    '❌f(zxc) = ??? != czx'
109: 1:  ],
109: 1:  'level': 4,
109: 1:  'nextQuestion': 'zxc',
109: 1:  'questions': [
109: 1:    'abc',
109: 1:    'cad',
109: 1:    'asd',
109: 1:    'xyz',
109: 1:    'aaa',
109: 1:    '123',
109: 1:    'dEf',
109: 1:    'zxc'
109: 1:  ]
109: 1:}
109: 1:Scores: 3792
109: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx']')
109: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
110: 1:BoardData {
110: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
110: 1:  'expectedAnswer': 'eqw',
110: 1:  'history': [
110: 1:    {
110: 1:      'answer': 'cab',
110: 1:      'question': 'abc',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': 'dca',
110: 1:      'question': 'cad',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': 'das',
110: 1:      'question': 'asd',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': 'zxy',
110: 1:      'question': 'xyz',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': 'aaa',
110: 1:      'question': 'aaa',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '312',
110: 1:      'question': '123',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': 'fdE',
110: 1:      'question': 'dEf',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': 'czx',
110: 1:      'question': 'zxc',
110: 1:      'valid': true
110: 1:    }
110: 1:  ],
110: 1:  'info': [
110: 1:    '✅f(abc) = cab',
110: 1:    '✅f(cad) = dca',
110: 1:    '✅f(asd) = das',
110: 1:    '✅f(xyz) = zxy',
110: 1:    '✅f(aaa) = aaa',
110: 1:    '✅f(123) = 312',
110: 1:    '✅f(dEf) = fdE',
110: 1:    '✅f(zxc) = czx',
110: 1:    '❌f(qwe) = ??? != eqw'
110: 1:  ],
110: 1:  'level': 4,
110: 1:  'nextQuestion': 'qwe',
110: 1:  'questions': [
110: 1:    'abc',
110: 1:    'cad',
110: 1:    'asd',
110: 1:    'xyz',
110: 1:    'aaa',
110: 1:    '123',
110: 1:    'dEf',
110: 1:    'zxc',
110: 1:    'qwe'
110: 1:  ]
110: 1:}
110: 1:Scores: 3797
110: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw']')
110: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
111: 1:BoardData {
111: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
111: 1:  'expectedAnswer': 'yrt',
111: 1:  'history': [
111: 1:    {
111: 1:      'answer': 'cab',
111: 1:      'question': 'abc',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': 'dca',
111: 1:      'question': 'cad',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': 'das',
111: 1:      'question': 'asd',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': 'zxy',
111: 1:      'question': 'xyz',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': 'aaa',
111: 1:      'question': 'aaa',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '312',
111: 1:      'question': '123',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': 'fdE',
111: 1:      'question': 'dEf',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': 'czx',
111: 1:      'question': 'zxc',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': 'eqw',
111: 1:      'question': 'qwe',
111: 1:      'valid': true
111: 1:    }
111: 1:  ],
111: 1:  'info': [
111: 1:    '✅f(abc) = cab',
111: 1:    '✅f(cad) = dca',
111: 1:    '✅f(asd) = das',
111: 1:    '✅f(xyz) = zxy',
111: 1:    '✅f(aaa) = aaa',
111: 1:    '✅f(123) = 312',
111: 1:    '✅f(dEf) = fdE',
111: 1:    '✅f(zxc) = czx',
111: 1:    '✅f(qwe) = eqw',
111: 1:    '❌f(rty) = ??? != yrt'
111: 1:  ],
111: 1:  'level': 4,
111: 1:  'nextQuestion': 'rty',
111: 1:  'questions': [
111: 1:    'abc',
111: 1:    'cad',
111: 1:    'asd',
111: 1:    'xyz',
111: 1:    'aaa',
111: 1:    '123',
111: 1:    'dEf',
111: 1:    'zxc',
111: 1:    'qwe',
111: 1:    'rty'
111: 1:  ]
111: 1:}
111: 1:Scores: 3802
111: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt']')
111: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
112: 1:BoardData {
112: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
112: 1:  'expectedAnswer': 'bmn',
112: 1:  'history': [
112: 1:    {
112: 1:      'answer': 'cab',
112: 1:      'question': 'abc',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': 'dca',
112: 1:      'question': 'cad',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': 'das',
112: 1:      'question': 'asd',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': 'zxy',
112: 1:      'question': 'xyz',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': 'aaa',
112: 1:      'question': 'aaa',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '312',
112: 1:      'question': '123',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': 'fdE',
112: 1:      'question': 'dEf',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': 'czx',
112: 1:      'question': 'zxc',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': 'eqw',
112: 1:      'question': 'qwe',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': 'yrt',
112: 1:      'question': 'rty',
112: 1:      'valid': true
112: 1:    }
112: 1:  ],
112: 1:  'info': [
112: 1:    '✅f(abc) = cab',
112: 1:    '✅f(cad) = dca',
112: 1:    '✅f(asd) = das',
112: 1:    '✅f(xyz) = zxy',
112: 1:    '✅f(aaa) = aaa',
112: 1:    '✅f(123) = 312',
112: 1:    '✅f(dEf) = fdE',
112: 1:    '✅f(zxc) = czx',
112: 1:    '✅f(qwe) = eqw',
112: 1:    '✅f(rty) = yrt',
112: 1:    '❌f(mnb) = ??? != bmn'
112: 1:  ],
112: 1:  'level': 4,
112: 1:  'nextQuestion': 'mnb',
112: 1:  'questions': [
112: 1:    'abc',
112: 1:    'cad',
112: 1:    'asd',
112: 1:    'xyz',
112: 1:    'aaa',
112: 1:    '123',
112: 1:    'dEf',
112: 1:    'zxc',
112: 1:    'qwe',
112: 1:    'rty',
112: 1:    'mnb'
112: 1:  ]
112: 1:}
112: 1:Scores: 3807
112: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn']')
112: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
113: 1:BoardData {
113: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
113: 1:  'expectedAnswer': 'nvb',
113: 1:  'history': [
113: 1:    {
113: 1:      'answer': 'cab',
113: 1:      'question': 'abc',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'dca',
113: 1:      'question': 'cad',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'das',
113: 1:      'question': 'asd',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'zxy',
113: 1:      'question': 'xyz',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'aaa',
113: 1:      'question': 'aaa',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '312',
113: 1:      'question': '123',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'fdE',
113: 1:      'question': 'dEf',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'czx',
113: 1:      'question': 'zxc',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'eqw',
113: 1:      'question': 'qwe',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'yrt',
113: 1:      'question': 'rty',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': 'bmn',
113: 1:      'question': 'mnb',
113: 1:      'valid': true
113: 1:    }
113: 1:  ],
113: 1:  'info': [
113: 1:    '✅f(abc) = cab',
113: 1:    '✅f(cad) = dca',
113: 1:    '✅f(asd) = das',
113: 1:    '✅f(xyz) = zxy',
113: 1:    '✅f(aaa) = aaa',
113: 1:    '✅f(123) = 312',
113: 1:    '✅f(dEf) = fdE',
113: 1:    '✅f(zxc) = czx',
113: 1:    '✅f(qwe) = eqw',
113: 1:    '✅f(rty) = yrt',
113: 1:    '✅f(mnb) = bmn',
113: 1:    '❌f(vbn) = ??? != nvb'
113: 1:  ],
113: 1:  'level': 4,
113: 1:  'nextQuestion': 'vbn',
113: 1:  'questions': [
113: 1:    'abc',
113: 1:    'cad',
113: 1:    'asd',
113: 1:    'xyz',
113: 1:    'aaa',
113: 1:    '123',
113: 1:    'dEf',
113: 1:    'zxc',
113: 1:    'qwe',
113: 1:    'rty',
113: 1:    'mnb',
113: 1:    'vbn'
113: 1:  ]
113: 1:}
113: 1:Scores: 3812
113: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb']')
113: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
114: 1:BoardData {
114: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
114: 1:  'expectedAnswer': 'hfg',
114: 1:  'history': [
114: 1:    {
114: 1:      'answer': 'cab',
114: 1:      'question': 'abc',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'dca',
114: 1:      'question': 'cad',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'das',
114: 1:      'question': 'asd',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'zxy',
114: 1:      'question': 'xyz',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'aaa',
114: 1:      'question': 'aaa',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '312',
114: 1:      'question': '123',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'fdE',
114: 1:      'question': 'dEf',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'czx',
114: 1:      'question': 'zxc',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'eqw',
114: 1:      'question': 'qwe',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'yrt',
114: 1:      'question': 'rty',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'bmn',
114: 1:      'question': 'mnb',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': 'nvb',
114: 1:      'question': 'vbn',
114: 1:      'valid': true
114: 1:    }
114: 1:  ],
114: 1:  'info': [
114: 1:    '✅f(abc) = cab',
114: 1:    '✅f(cad) = dca',
114: 1:    '✅f(asd) = das',
114: 1:    '✅f(xyz) = zxy',
114: 1:    '✅f(aaa) = aaa',
114: 1:    '✅f(123) = 312',
114: 1:    '✅f(dEf) = fdE',
114: 1:    '✅f(zxc) = czx',
114: 1:    '✅f(qwe) = eqw',
114: 1:    '✅f(rty) = yrt',
114: 1:    '✅f(mnb) = bmn',
114: 1:    '✅f(vbn) = nvb',
114: 1:    '❌f(fgh) = ??? != hfg'
114: 1:  ],
114: 1:  'level': 4,
114: 1:  'nextQuestion': 'fgh',
114: 1:  'questions': [
114: 1:    'abc',
114: 1:    'cad',
114: 1:    'asd',
114: 1:    'xyz',
114: 1:    'aaa',
114: 1:    '123',
114: 1:    'dEf',
114: 1:    'zxc',
114: 1:    'qwe',
114: 1:    'rty',
114: 1:    'mnb',
114: 1:    'vbn',
114: 1:    'fgh'
114: 1:  ]
114: 1:}
114: 1:Scores: 3817
114: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg']')
114: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
115: 1:BoardData {
115: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
115: 1:  'expectedAnswer': 'kij',
115: 1:  'history': [
115: 1:    {
115: 1:      'answer': 'cab',
115: 1:      'question': 'abc',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'dca',
115: 1:      'question': 'cad',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'das',
115: 1:      'question': 'asd',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'zxy',
115: 1:      'question': 'xyz',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'aaa',
115: 1:      'question': 'aaa',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '312',
115: 1:      'question': '123',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'fdE',
115: 1:      'question': 'dEf',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'czx',
115: 1:      'question': 'zxc',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'eqw',
115: 1:      'question': 'qwe',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'yrt',
115: 1:      'question': 'rty',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'bmn',
115: 1:      'question': 'mnb',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'nvb',
115: 1:      'question': 'vbn',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': 'hfg',
115: 1:      'question': 'fgh',
115: 1:      'valid': true
115: 1:    }
115: 1:  ],
115: 1:  'info': [
115: 1:    '✅f(abc) = cab',
115: 1:    '✅f(cad) = dca',
115: 1:    '✅f(asd) = das',
115: 1:    '✅f(xyz) = zxy',
115: 1:    '✅f(aaa) = aaa',
115: 1:    '✅f(123) = 312',
115: 1:    '✅f(dEf) = fdE',
115: 1:    '✅f(zxc) = czx',
115: 1:    '✅f(qwe) = eqw',
115: 1:    '✅f(rty) = yrt',
115: 1:    '✅f(mnb) = bmn',
115: 1:    '✅f(vbn) = nvb',
115: 1:    '✅f(fgh) = hfg',
115: 1:    '❌f(ijk) = ??? != kij'
115: 1:  ],
115: 1:  'level': 4,
115: 1:  'nextQuestion': 'ijk',
115: 1:  'questions': [
115: 1:    'abc',
115: 1:    'cad',
115: 1:    'asd',
115: 1:    'xyz',
115: 1:    'aaa',
115: 1:    '123',
115: 1:    'dEf',
115: 1:    'zxc',
115: 1:    'qwe',
115: 1:    'rty',
115: 1:    'mnb',
115: 1:    'vbn',
115: 1:    'fgh',
115: 1:    'ijk'
115: 1:  ]
115: 1:}
115: 1:Scores: 3822
115: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij']')
115: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
116: 1:BoardData {
116: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
116: 1:  'expectedAnswer': 'nlm',
116: 1:  'history': [
116: 1:    {
116: 1:      'answer': 'cab',
116: 1:      'question': 'abc',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'dca',
116: 1:      'question': 'cad',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'das',
116: 1:      'question': 'asd',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'zxy',
116: 1:      'question': 'xyz',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'aaa',
116: 1:      'question': 'aaa',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '312',
116: 1:      'question': '123',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'fdE',
116: 1:      'question': 'dEf',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'czx',
116: 1:      'question': 'zxc',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'eqw',
116: 1:      'question': 'qwe',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'yrt',
116: 1:      'question': 'rty',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'bmn',
116: 1:      'question': 'mnb',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'nvb',
116: 1:      'question': 'vbn',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'hfg',
116: 1:      'question': 'fgh',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': 'kij',
116: 1:      'question': 'ijk',
116: 1:      'valid': true
116: 1:    }
116: 1:  ],
116: 1:  'info': [
116: 1:    '✅f(abc) = cab',
116: 1:    '✅f(cad) = dca',
116: 1:    '✅f(asd) = das',
116: 1:    '✅f(xyz) = zxy',
116: 1:    '✅f(aaa) = aaa',
116: 1:    '✅f(123) = 312',
116: 1:    '✅f(dEf) = fdE',
116: 1:    '✅f(zxc) = czx',
116: 1:    '✅f(qwe) = eqw',
116: 1:    '✅f(rty) = yrt',
116: 1:    '✅f(mnb) = bmn',
116: 1:    '✅f(vbn) = nvb',
116: 1:    '✅f(fgh) = hfg',
116: 1:    '✅f(ijk) = kij',
116: 1:    '❌f(lmn) = ??? != nlm'
116: 1:  ],
116: 1:  'level': 4,
116: 1:  'nextQuestion': 'lmn',
116: 1:  'questions': [
116: 1:    'abc',
116: 1:    'cad',
116: 1:    'asd',
116: 1:    'xyz',
116: 1:    'aaa',
116: 1:    '123',
116: 1:    'dEf',
116: 1:    'zxc',
116: 1:    'qwe',
116: 1:    'rty',
116: 1:    'mnb',
116: 1:    'vbn',
116: 1:    'fgh',
116: 1:    'ijk',
116: 1:    'lmn'
116: 1:  ]
116: 1:}
116: 1:Scores: 3827
116: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm']')
116: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
117: 1:BoardData {
117: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
117: 1:  'expectedAnswer': 'rpq',
117: 1:  'history': [
117: 1:    {
117: 1:      'answer': 'cab',
117: 1:      'question': 'abc',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'dca',
117: 1:      'question': 'cad',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'das',
117: 1:      'question': 'asd',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'zxy',
117: 1:      'question': 'xyz',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'aaa',
117: 1:      'question': 'aaa',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '312',
117: 1:      'question': '123',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'fdE',
117: 1:      'question': 'dEf',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'czx',
117: 1:      'question': 'zxc',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'eqw',
117: 1:      'question': 'qwe',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'yrt',
117: 1:      'question': 'rty',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'bmn',
117: 1:      'question': 'mnb',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'nvb',
117: 1:      'question': 'vbn',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'hfg',
117: 1:      'question': 'fgh',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'kij',
117: 1:      'question': 'ijk',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': 'nlm',
117: 1:      'question': 'lmn',
117: 1:      'valid': true
117: 1:    }
117: 1:  ],
117: 1:  'info': [
117: 1:    '✅f(abc) = cab',
117: 1:    '✅f(cad) = dca',
117: 1:    '✅f(asd) = das',
117: 1:    '✅f(xyz) = zxy',
117: 1:    '✅f(aaa) = aaa',
117: 1:    '✅f(123) = 312',
117: 1:    '✅f(dEf) = fdE',
117: 1:    '✅f(zxc) = czx',
117: 1:    '✅f(qwe) = eqw',
117: 1:    '✅f(rty) = yrt',
117: 1:    '✅f(mnb) = bmn',
117: 1:    '✅f(vbn) = nvb',
117: 1:    '✅f(fgh) = hfg',
117: 1:    '✅f(ijk) = kij',
117: 1:    '✅f(lmn) = nlm',
117: 1:    '❌f(pqr) = ??? != rpq'
117: 1:  ],
117: 1:  'level': 4,
117: 1:  'nextQuestion': 'pqr',
117: 1:  'questions': [
117: 1:    'abc',
117: 1:    'cad',
117: 1:    'asd',
117: 1:    'xyz',
117: 1:    'aaa',
117: 1:    '123',
117: 1:    'dEf',
117: 1:    'zxc',
117: 1:    'qwe',
117: 1:    'rty',
117: 1:    'mnb',
117: 1:    'vbn',
117: 1:    'fgh',
117: 1:    'ijk',
117: 1:    'lmn',
117: 1:    'pqr'
117: 1:  ]
117: 1:}
117: 1:Scores: 3832
117: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq']')
117: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
118: 1:BoardData {
118: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
118: 1:  'expectedAnswer': 'ust',
118: 1:  'history': [
118: 1:    {
118: 1:      'answer': 'cab',
118: 1:      'question': 'abc',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'dca',
118: 1:      'question': 'cad',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'das',
118: 1:      'question': 'asd',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'zxy',
118: 1:      'question': 'xyz',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'aaa',
118: 1:      'question': 'aaa',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '312',
118: 1:      'question': '123',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'fdE',
118: 1:      'question': 'dEf',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'czx',
118: 1:      'question': 'zxc',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'eqw',
118: 1:      'question': 'qwe',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'yrt',
118: 1:      'question': 'rty',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'bmn',
118: 1:      'question': 'mnb',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'nvb',
118: 1:      'question': 'vbn',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'hfg',
118: 1:      'question': 'fgh',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'kij',
118: 1:      'question': 'ijk',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'nlm',
118: 1:      'question': 'lmn',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': 'rpq',
118: 1:      'question': 'pqr',
118: 1:      'valid': true
118: 1:    }
118: 1:  ],
118: 1:  'info': [
118: 1:    '✅f(abc) = cab',
118: 1:    '✅f(cad) = dca',
118: 1:    '✅f(asd) = das',
118: 1:    '✅f(xyz) = zxy',
118: 1:    '✅f(aaa) = aaa',
118: 1:    '✅f(123) = 312',
118: 1:    '✅f(dEf) = fdE',
118: 1:    '✅f(zxc) = czx',
118: 1:    '✅f(qwe) = eqw',
118: 1:    '✅f(rty) = yrt',
118: 1:    '✅f(mnb) = bmn',
118: 1:    '✅f(vbn) = nvb',
118: 1:    '✅f(fgh) = hfg',
118: 1:    '✅f(ijk) = kij',
118: 1:    '✅f(lmn) = nlm',
118: 1:    '✅f(pqr) = rpq',
118: 1:    '❌f(stu) = ??? != ust'
118: 1:  ],
118: 1:  'level': 4,
118: 1:  'nextQuestion': 'stu',
118: 1:  'questions': [
118: 1:    'abc',
118: 1:    'cad',
118: 1:    'asd',
118: 1:    'xyz',
118: 1:    'aaa',
118: 1:    '123',
118: 1:    'dEf',
118: 1:    'zxc',
118: 1:    'qwe',
118: 1:    'rty',
118: 1:    'mnb',
118: 1:    'vbn',
118: 1:    'fgh',
118: 1:    'ijk',
118: 1:    'lmn',
118: 1:    'pqr',
118: 1:    'stu'
118: 1:  ]
118: 1:}
118: 1:Scores: 3837
118: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust']')
118: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
119: 1:BoardData {
119: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
119: 1:  'expectedAnswer': 'ywx',
119: 1:  'history': [
119: 1:    {
119: 1:      'answer': 'cab',
119: 1:      'question': 'abc',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'dca',
119: 1:      'question': 'cad',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'das',
119: 1:      'question': 'asd',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'zxy',
119: 1:      'question': 'xyz',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'aaa',
119: 1:      'question': 'aaa',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '312',
119: 1:      'question': '123',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'fdE',
119: 1:      'question': 'dEf',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'czx',
119: 1:      'question': 'zxc',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'eqw',
119: 1:      'question': 'qwe',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'yrt',
119: 1:      'question': 'rty',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'bmn',
119: 1:      'question': 'mnb',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'nvb',
119: 1:      'question': 'vbn',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'hfg',
119: 1:      'question': 'fgh',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'kij',
119: 1:      'question': 'ijk',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'nlm',
119: 1:      'question': 'lmn',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'rpq',
119: 1:      'question': 'pqr',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': 'ust',
119: 1:      'question': 'stu',
119: 1:      'valid': true
119: 1:    }
119: 1:  ],
119: 1:  'info': [
119: 1:    '✅f(abc) = cab',
119: 1:    '✅f(cad) = dca',
119: 1:    '✅f(asd) = das',
119: 1:    '✅f(xyz) = zxy',
119: 1:    '✅f(aaa) = aaa',
119: 1:    '✅f(123) = 312',
119: 1:    '✅f(dEf) = fdE',
119: 1:    '✅f(zxc) = czx',
119: 1:    '✅f(qwe) = eqw',
119: 1:    '✅f(rty) = yrt',
119: 1:    '✅f(mnb) = bmn',
119: 1:    '✅f(vbn) = nvb',
119: 1:    '✅f(fgh) = hfg',
119: 1:    '✅f(ijk) = kij',
119: 1:    '✅f(lmn) = nlm',
119: 1:    '✅f(pqr) = rpq',
119: 1:    '✅f(stu) = ust',
119: 1:    '❌f(wxy) = ??? != ywx'
119: 1:  ],
119: 1:  'level': 4,
119: 1:  'nextQuestion': 'wxy',
119: 1:  'questions': [
119: 1:    'abc',
119: 1:    'cad',
119: 1:    'asd',
119: 1:    'xyz',
119: 1:    'aaa',
119: 1:    '123',
119: 1:    'dEf',
119: 1:    'zxc',
119: 1:    'qwe',
119: 1:    'rty',
119: 1:    'mnb',
119: 1:    'vbn',
119: 1:    'fgh',
119: 1:    'ijk',
119: 1:    'lmn',
119: 1:    'pqr',
119: 1:    'stu',
119: 1:    'wxy'
119: 1:  ]
119: 1:}
119: 1:Scores: 3842
119: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx']')
119: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
120: 1:BoardData {
120: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
120: 1:  'expectedAnswer': '222',
120: 1:  'history': [
120: 1:    {
120: 1:      'answer': 'cab',
120: 1:      'question': 'abc',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'dca',
120: 1:      'question': 'cad',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'das',
120: 1:      'question': 'asd',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'zxy',
120: 1:      'question': 'xyz',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'aaa',
120: 1:      'question': 'aaa',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '312',
120: 1:      'question': '123',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'fdE',
120: 1:      'question': 'dEf',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'czx',
120: 1:      'question': 'zxc',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'eqw',
120: 1:      'question': 'qwe',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'yrt',
120: 1:      'question': 'rty',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'bmn',
120: 1:      'question': 'mnb',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'nvb',
120: 1:      'question': 'vbn',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'hfg',
120: 1:      'question': 'fgh',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'kij',
120: 1:      'question': 'ijk',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'nlm',
120: 1:      'question': 'lmn',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'rpq',
120: 1:      'question': 'pqr',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'ust',
120: 1:      'question': 'stu',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': 'ywx',
120: 1:      'question': 'wxy',
120: 1:      'valid': true
120: 1:    }
120: 1:  ],
120: 1:  'info': [
120: 1:    '✅f(abc) = cab',
120: 1:    '✅f(cad) = dca',
120: 1:    '✅f(asd) = das',
120: 1:    '✅f(xyz) = zxy',
120: 1:    '✅f(aaa) = aaa',
120: 1:    '✅f(123) = 312',
120: 1:    '✅f(dEf) = fdE',
120: 1:    '✅f(zxc) = czx',
120: 1:    '✅f(qwe) = eqw',
120: 1:    '✅f(rty) = yrt',
120: 1:    '✅f(mnb) = bmn',
120: 1:    '✅f(vbn) = nvb',
120: 1:    '✅f(fgh) = hfg',
120: 1:    '✅f(ijk) = kij',
120: 1:    '✅f(lmn) = nlm',
120: 1:    '✅f(pqr) = rpq',
120: 1:    '✅f(stu) = ust',
120: 1:    '✅f(wxy) = ywx',
120: 1:    '❌f(222) = ??? != 222'
120: 1:  ],
120: 1:  'level': 4,
120: 1:  'nextQuestion': '222',
120: 1:  'questions': [
120: 1:    'abc',
120: 1:    'cad',
120: 1:    'asd',
120: 1:    'xyz',
120: 1:    'aaa',
120: 1:    '123',
120: 1:    'dEf',
120: 1:    'zxc',
120: 1:    'qwe',
120: 1:    'rty',
120: 1:    'mnb',
120: 1:    'vbn',
120: 1:    'fgh',
120: 1:    'ijk',
120: 1:    'lmn',
120: 1:    'pqr',
120: 1:    'stu',
120: 1:    'wxy',
120: 1:    '222'
120: 1:  ]
120: 1:}
120: 1:Scores: 3847
120: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222']')
120: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
121: 1:BoardData {
121: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
121: 1:  'expectedAnswer': '978',
121: 1:  'history': [
121: 1:    {
121: 1:      'answer': 'cab',
121: 1:      'question': 'abc',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'dca',
121: 1:      'question': 'cad',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'das',
121: 1:      'question': 'asd',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'zxy',
121: 1:      'question': 'xyz',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'aaa',
121: 1:      'question': 'aaa',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '312',
121: 1:      'question': '123',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'fdE',
121: 1:      'question': 'dEf',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'czx',
121: 1:      'question': 'zxc',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'eqw',
121: 1:      'question': 'qwe',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'yrt',
121: 1:      'question': 'rty',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'bmn',
121: 1:      'question': 'mnb',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'nvb',
121: 1:      'question': 'vbn',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'hfg',
121: 1:      'question': 'fgh',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'kij',
121: 1:      'question': 'ijk',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'nlm',
121: 1:      'question': 'lmn',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'rpq',
121: 1:      'question': 'pqr',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'ust',
121: 1:      'question': 'stu',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': 'ywx',
121: 1:      'question': 'wxy',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '222',
121: 1:      'question': '222',
121: 1:      'valid': true
121: 1:    }
121: 1:  ],
121: 1:  'info': [
121: 1:    '✅f(abc) = cab',
121: 1:    '✅f(cad) = dca',
121: 1:    '✅f(asd) = das',
121: 1:    '✅f(xyz) = zxy',
121: 1:    '✅f(aaa) = aaa',
121: 1:    '✅f(123) = 312',
121: 1:    '✅f(dEf) = fdE',
121: 1:    '✅f(zxc) = czx',
121: 1:    '✅f(qwe) = eqw',
121: 1:    '✅f(rty) = yrt',
121: 1:    '✅f(mnb) = bmn',
121: 1:    '✅f(vbn) = nvb',
121: 1:    '✅f(fgh) = hfg',
121: 1:    '✅f(ijk) = kij',
121: 1:    '✅f(lmn) = nlm',
121: 1:    '✅f(pqr) = rpq',
121: 1:    '✅f(stu) = ust',
121: 1:    '✅f(wxy) = ywx',
121: 1:    '✅f(222) = 222',
121: 1:    '❌f(789) = ??? != 978'
121: 1:  ],
121: 1:  'level': 4,
121: 1:  'nextQuestion': '789',
121: 1:  'questions': [
121: 1:    'abc',
121: 1:    'cad',
121: 1:    'asd',
121: 1:    'xyz',
121: 1:    'aaa',
121: 1:    '123',
121: 1:    'dEf',
121: 1:    'zxc',
121: 1:    'qwe',
121: 1:    'rty',
121: 1:    'mnb',
121: 1:    'vbn',
121: 1:    'fgh',
121: 1:    'ijk',
121: 1:    'lmn',
121: 1:    'pqr',
121: 1:    'stu',
121: 1:    'wxy',
121: 1:    '222',
121: 1:    '789'
121: 1:  ]
121: 1:}
121: 1:Scores: 3852
121: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222', '978']')
121: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
122: 1:BoardData {
122: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
122: 1:  'expectedAnswer': '009',
122: 1:  'history': [
122: 1:    {
122: 1:      'answer': 'cab',
122: 1:      'question': 'abc',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'dca',
122: 1:      'question': 'cad',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'das',
122: 1:      'question': 'asd',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'zxy',
122: 1:      'question': 'xyz',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'aaa',
122: 1:      'question': 'aaa',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '312',
122: 1:      'question': '123',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'fdE',
122: 1:      'question': 'dEf',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'czx',
122: 1:      'question': 'zxc',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'eqw',
122: 1:      'question': 'qwe',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'yrt',
122: 1:      'question': 'rty',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'bmn',
122: 1:      'question': 'mnb',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'nvb',
122: 1:      'question': 'vbn',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'hfg',
122: 1:      'question': 'fgh',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'kij',
122: 1:      'question': 'ijk',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'nlm',
122: 1:      'question': 'lmn',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'rpq',
122: 1:      'question': 'pqr',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'ust',
122: 1:      'question': 'stu',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': 'ywx',
122: 1:      'question': 'wxy',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '222',
122: 1:      'question': '222',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '978',
122: 1:      'question': '789',
122: 1:      'valid': true
122: 1:    }
122: 1:  ],
122: 1:  'info': [
122: 1:    '✅f(abc) = cab',
122: 1:    '✅f(cad) = dca',
122: 1:    '✅f(asd) = das',
122: 1:    '✅f(xyz) = zxy',
122: 1:    '✅f(aaa) = aaa',
122: 1:    '✅f(123) = 312',
122: 1:    '✅f(dEf) = fdE',
122: 1:    '✅f(zxc) = czx',
122: 1:    '✅f(qwe) = eqw',
122: 1:    '✅f(rty) = yrt',
122: 1:    '✅f(mnb) = bmn',
122: 1:    '✅f(vbn) = nvb',
122: 1:    '✅f(fgh) = hfg',
122: 1:    '✅f(ijk) = kij',
122: 1:    '✅f(lmn) = nlm',
122: 1:    '✅f(pqr) = rpq',
122: 1:    '✅f(stu) = ust',
122: 1:    '✅f(wxy) = ywx',
122: 1:    '✅f(222) = 222',
122: 1:    '✅f(789) = 978',
122: 1:    '❌f(090) = ??? != 009'
122: 1:  ],
122: 1:  'level': 4,
122: 1:  'nextQuestion': '090',
122: 1:  'questions': [
122: 1:    'abc',
122: 1:    'cad',
122: 1:    'asd',
122: 1:    'xyz',
122: 1:    'aaa',
122: 1:    '123',
122: 1:    'dEf',
122: 1:    'zxc',
122: 1:    'qwe',
122: 1:    'rty',
122: 1:    'mnb',
122: 1:    'vbn',
122: 1:    'fgh',
122: 1:    'ijk',
122: 1:    'lmn',
122: 1:    'pqr',
122: 1:    'stu',
122: 1:    'wxy',
122: 1:    '222',
122: 1:    '789',
122: 1:    '090'
122: 1:  ]
122: 1:}
122: 1:Scores: 3857
122: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222', '978', '009']')
122: 1:Fire Event: PassTest{complexity=12, testCount=21}
122: 1:Fire Event: NextAlgorithm{complexity=12, time=0}
------------------------------------------
123: 1:BoardData {
123: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
123: 1:  'history': [
123: 1:    {
123: 1:      'answer': 'cab',
123: 1:      'question': 'abc',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'dca',
123: 1:      'question': 'cad',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'das',
123: 1:      'question': 'asd',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'zxy',
123: 1:      'question': 'xyz',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'aaa',
123: 1:      'question': 'aaa',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '312',
123: 1:      'question': '123',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'fdE',
123: 1:      'question': 'dEf',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'czx',
123: 1:      'question': 'zxc',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'eqw',
123: 1:      'question': 'qwe',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'yrt',
123: 1:      'question': 'rty',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'bmn',
123: 1:      'question': 'mnb',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'nvb',
123: 1:      'question': 'vbn',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'hfg',
123: 1:      'question': 'fgh',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'kij',
123: 1:      'question': 'ijk',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'nlm',
123: 1:      'question': 'lmn',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'rpq',
123: 1:      'question': 'pqr',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'ust',
123: 1:      'question': 'stu',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': 'ywx',
123: 1:      'question': 'wxy',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '222',
123: 1:      'question': '222',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '978',
123: 1:      'question': '789',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '009',
123: 1:      'question': '090',
123: 1:      'valid': true
123: 1:    }
123: 1:  ],
123: 1:  'info': [
123: 1:    '✅f(abc) = cab',
123: 1:    '✅f(cad) = dca',
123: 1:    '✅f(asd) = das',
123: 1:    '✅f(xyz) = zxy',
123: 1:    '✅f(aaa) = aaa',
123: 1:    '✅f(123) = 312',
123: 1:    '✅f(dEf) = fdE',
123: 1:    '✅f(zxc) = czx',
123: 1:    '✅f(qwe) = eqw',
123: 1:    '✅f(rty) = yrt',
123: 1:    '✅f(mnb) = bmn',
123: 1:    '✅f(vbn) = nvb',
123: 1:    '✅f(fgh) = hfg',
123: 1:    '✅f(ijk) = kij',
123: 1:    '✅f(lmn) = nlm',
123: 1:    '✅f(pqr) = rpq',
123: 1:    '✅f(stu) = ust',
123: 1:    '✅f(wxy) = ywx',
123: 1:    '✅f(222) = 222',
123: 1:    '✅f(789) = 978',
123: 1:    '✅f(090) = 009'
123: 1:  ],
123: 1:  'level': 4,
123: 1:  'questions': []
123: 1:}
123: 1:Scores: 5481
123: 1:Answer: message('StartNextLevel')
123: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
124: 1:BoardData {
124: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
124: 1:  'expectedAnswer': '222',
124: 1:  'history': [],
124: 1:  'info': ['❌f(111) = ??? != 222'],
124: 1:  'level': 5,
124: 1:  'nextQuestion': '111',
124: 1:  'questions': ['111']
124: 1:}
124: 1:Scores: 5481
124: 1:Answer: message('['222']')
124: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
125: 1:BoardData {
125: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
125: 1:  'expectedAnswer': '333',
125: 1:  'history': [{
125: 1:    'answer': '222',
125: 1:    'question': '111',
125: 1:    'valid': true
125: 1:  }],
125: 1:  'info': [
125: 1:    '✅f(111) = 222',
125: 1:    '❌f(222) = ??? != 333'
125: 1:  ],
125: 1:  'level': 5,
125: 1:  'nextQuestion': '222',
125: 1:  'questions': [
125: 1:    '111',
125: 1:    '222'
125: 1:  ]
125: 1:}
125: 1:Scores: 5491
125: 1:Answer: message('['222', '333']')
125: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
126: 1:BoardData {
126: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
126: 1:  'expectedAnswer': '444',
126: 1:  'history': [
126: 1:    {
126: 1:      'answer': '222',
126: 1:      'question': '111',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '333',
126: 1:      'question': '222',
126: 1:      'valid': true
126: 1:    }
126: 1:  ],
126: 1:  'info': [
126: 1:    '✅f(111) = 222',
126: 1:    '✅f(222) = 333',
126: 1:    '❌f(333) = ??? != 444'
126: 1:  ],
126: 1:  'level': 5,
126: 1:  'nextQuestion': '333',
126: 1:  'questions': [
126: 1:    '111',
126: 1:    '222',
126: 1:    '333'
126: 1:  ]
126: 1:}
126: 1:Scores: 5501
126: 1:Answer: message('['222', '333', '444']')
126: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
127: 1:BoardData {
127: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
127: 1:  'expectedAnswer': '555',
127: 1:  'history': [
127: 1:    {
127: 1:      'answer': '222',
127: 1:      'question': '111',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '333',
127: 1:      'question': '222',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '444',
127: 1:      'question': '333',
127: 1:      'valid': true
127: 1:    }
127: 1:  ],
127: 1:  'info': [
127: 1:    '✅f(111) = 222',
127: 1:    '✅f(222) = 333',
127: 1:    '✅f(333) = 444',
127: 1:    '❌f(444) = ??? != 555'
127: 1:  ],
127: 1:  'level': 5,
127: 1:  'nextQuestion': '444',
127: 1:  'questions': [
127: 1:    '111',
127: 1:    '222',
127: 1:    '333',
127: 1:    '444'
127: 1:  ]
127: 1:}
127: 1:Scores: 5511
127: 1:Answer: message('['222', '333', '444', '555']')
127: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
128: 1:BoardData {
128: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
128: 1:  'expectedAnswer': '666',
128: 1:  'history': [
128: 1:    {
128: 1:      'answer': '222',
128: 1:      'question': '111',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '333',
128: 1:      'question': '222',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '444',
128: 1:      'question': '333',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '555',
128: 1:      'question': '444',
128: 1:      'valid': true
128: 1:    }
128: 1:  ],
128: 1:  'info': [
128: 1:    '✅f(111) = 222',
128: 1:    '✅f(222) = 333',
128: 1:    '✅f(333) = 444',
128: 1:    '✅f(444) = 555',
128: 1:    '❌f(555) = ??? != 666'
128: 1:  ],
128: 1:  'level': 5,
128: 1:  'nextQuestion': '555',
128: 1:  'questions': [
128: 1:    '111',
128: 1:    '222',
128: 1:    '333',
128: 1:    '444',
128: 1:    '555'
128: 1:  ]
128: 1:}
128: 1:Scores: 5521
128: 1:Answer: message('['222', '333', '444', '555', '666']')
128: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
129: 1:BoardData {
129: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
129: 1:  'expectedAnswer': '121',
129: 1:  'history': [
129: 1:    {
129: 1:      'answer': '222',
129: 1:      'question': '111',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '333',
129: 1:      'question': '222',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '444',
129: 1:      'question': '333',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '555',
129: 1:      'question': '444',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '666',
129: 1:      'question': '555',
129: 1:      'valid': true
129: 1:    }
129: 1:  ],
129: 1:  'info': [
129: 1:    '✅f(111) = 222',
129: 1:    '✅f(222) = 333',
129: 1:    '✅f(333) = 444',
129: 1:    '✅f(444) = 555',
129: 1:    '✅f(555) = 666',
129: 1:    '❌f(100) = ??? != 121'
129: 1:  ],
129: 1:  'level': 5,
129: 1:  'nextQuestion': '100',
129: 1:  'questions': [
129: 1:    '111',
129: 1:    '222',
129: 1:    '333',
129: 1:    '444',
129: 1:    '555',
129: 1:    '100'
129: 1:  ]
129: 1:}
129: 1:Scores: 5531
129: 1:Answer: message('['222', '333', '444', '555', '666', '121']')
129: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
130: 1:BoardData {
130: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
130: 1:  'expectedAnswer': '423',
130: 1:  'history': [
130: 1:    {
130: 1:      'answer': '222',
130: 1:      'question': '111',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '333',
130: 1:      'question': '222',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '444',
130: 1:      'question': '333',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '555',
130: 1:      'question': '444',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '666',
130: 1:      'question': '555',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '121',
130: 1:      'question': '100',
130: 1:      'valid': true
130: 1:    }
130: 1:  ],
130: 1:  'info': [
130: 1:    '✅f(111) = 222',
130: 1:    '✅f(222) = 333',
130: 1:    '✅f(333) = 444',
130: 1:    '✅f(444) = 555',
130: 1:    '✅f(555) = 666',
130: 1:    '✅f(100) = 121',
130: 1:    '❌f(123) = ??? != 423'
130: 1:  ],
130: 1:  'level': 5,
130: 1:  'nextQuestion': '123',
130: 1:  'questions': [
130: 1:    '111',
130: 1:    '222',
130: 1:    '333',
130: 1:    '444',
130: 1:    '555',
130: 1:    '100',
130: 1:    '123'
130: 1:  ]
130: 1:}
130: 1:Scores: 5541
130: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423']')
130: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
131: 1:BoardData {
131: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
131: 1:  'expectedAnswer': '000',
131: 1:  'history': [
131: 1:    {
131: 1:      'answer': '222',
131: 1:      'question': '111',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '333',
131: 1:      'question': '222',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '444',
131: 1:      'question': '333',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '555',
131: 1:      'question': '444',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '666',
131: 1:      'question': '555',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '121',
131: 1:      'question': '100',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '423',
131: 1:      'question': '123',
131: 1:      'valid': true
131: 1:    }
131: 1:  ],
131: 1:  'info': [
131: 1:    '✅f(111) = 222',
131: 1:    '✅f(222) = 333',
131: 1:    '✅f(333) = 444',
131: 1:    '✅f(444) = 555',
131: 1:    '✅f(555) = 666',
131: 1:    '✅f(100) = 121',
131: 1:    '✅f(123) = 423',
131: 1:    '❌f(999) = ??? != 000'
131: 1:  ],
131: 1:  'level': 5,
131: 1:  'nextQuestion': '999',
131: 1:  'questions': [
131: 1:    '111',
131: 1:    '222',
131: 1:    '333',
131: 1:    '444',
131: 1:    '555',
131: 1:    '100',
131: 1:    '123',
131: 1:    '999'
131: 1:  ]
131: 1:}
131: 1:Scores: 5551
131: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000']')
131: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
132: 1:BoardData {
132: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
132: 1:  'expectedAnswer': '089',
132: 1:  'history': [
132: 1:    {
132: 1:      'answer': '222',
132: 1:      'question': '111',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '333',
132: 1:      'question': '222',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '444',
132: 1:      'question': '333',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '555',
132: 1:      'question': '444',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '666',
132: 1:      'question': '555',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '121',
132: 1:      'question': '100',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '423',
132: 1:      'question': '123',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '000',
132: 1:      'question': '999',
132: 1:      'valid': true
132: 1:    }
132: 1:  ],
132: 1:  'info': [
132: 1:    '✅f(111) = 222',
132: 1:    '✅f(222) = 333',
132: 1:    '✅f(333) = 444',
132: 1:    '✅f(444) = 555',
132: 1:    '✅f(555) = 666',
132: 1:    '✅f(100) = 121',
132: 1:    '✅f(123) = 423',
132: 1:    '✅f(999) = 000',
132: 1:    '❌f(789) = ??? != 089'
132: 1:  ],
132: 1:  'level': 5,
132: 1:  'nextQuestion': '789',
132: 1:  'questions': [
132: 1:    '111',
132: 1:    '222',
132: 1:    '333',
132: 1:    '444',
132: 1:    '555',
132: 1:    '100',
132: 1:    '123',
132: 1:    '999',
132: 1:    '789'
132: 1:  ]
132: 1:}
132: 1:Scores: 5561
132: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089']')
132: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
133: 1:BoardData {
133: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
133: 1:  'expectedAnswer': '111',
133: 1:  'history': [
133: 1:    {
133: 1:      'answer': '222',
133: 1:      'question': '111',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '333',
133: 1:      'question': '222',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '444',
133: 1:      'question': '333',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '555',
133: 1:      'question': '444',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '666',
133: 1:      'question': '555',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '121',
133: 1:      'question': '100',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '423',
133: 1:      'question': '123',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '000',
133: 1:      'question': '999',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '089',
133: 1:      'question': '789',
133: 1:      'valid': true
133: 1:    }
133: 1:  ],
133: 1:  'info': [
133: 1:    '✅f(111) = 222',
133: 1:    '✅f(222) = 333',
133: 1:    '✅f(333) = 444',
133: 1:    '✅f(444) = 555',
133: 1:    '✅f(555) = 666',
133: 1:    '✅f(100) = 121',
133: 1:    '✅f(123) = 423',
133: 1:    '✅f(999) = 000',
133: 1:    '✅f(789) = 089',
133: 1:    '❌f(000) = ??? != 111'
133: 1:  ],
133: 1:  'level': 5,
133: 1:  'nextQuestion': '000',
133: 1:  'questions': [
133: 1:    '111',
133: 1:    '222',
133: 1:    '333',
133: 1:    '444',
133: 1:    '555',
133: 1:    '100',
133: 1:    '123',
133: 1:    '999',
133: 1:    '789',
133: 1:    '000'
133: 1:  ]
133: 1:}
133: 1:Scores: 5571
133: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111']')
133: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
134: 1:BoardData {
134: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
134: 1:  'expectedAnswer': '001',
134: 1:  'history': [
134: 1:    {
134: 1:      'answer': '222',
134: 1:      'question': '111',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '333',
134: 1:      'question': '222',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '444',
134: 1:      'question': '333',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '555',
134: 1:      'question': '444',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '666',
134: 1:      'question': '555',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '121',
134: 1:      'question': '100',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '423',
134: 1:      'question': '123',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '000',
134: 1:      'question': '999',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '089',
134: 1:      'question': '789',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '111',
134: 1:      'question': '000',
134: 1:      'valid': true
134: 1:    }
134: 1:  ],
134: 1:  'info': [
134: 1:    '✅f(111) = 222',
134: 1:    '✅f(222) = 333',
134: 1:    '✅f(333) = 444',
134: 1:    '✅f(444) = 555',
134: 1:    '✅f(555) = 666',
134: 1:    '✅f(100) = 121',
134: 1:    '✅f(123) = 423',
134: 1:    '✅f(999) = 000',
134: 1:    '✅f(789) = 089',
134: 1:    '✅f(000) = 111',
134: 1:    '❌f(909) = ??? != 001'
134: 1:  ],
134: 1:  'level': 5,
134: 1:  'nextQuestion': '909',
134: 1:  'questions': [
134: 1:    '111',
134: 1:    '222',
134: 1:    '333',
134: 1:    '444',
134: 1:    '555',
134: 1:    '100',
134: 1:    '123',
134: 1:    '999',
134: 1:    '789',
134: 1:    '000',
134: 1:    '909'
134: 1:  ]
134: 1:}
134: 1:Scores: 5581
134: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111', '001']')
134: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
135: 1:BoardData {
135: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
135: 1:  'expectedAnswer': '110',
135: 1:  'history': [
135: 1:    {
135: 1:      'answer': '222',
135: 1:      'question': '111',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '333',
135: 1:      'question': '222',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '444',
135: 1:      'question': '333',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '555',
135: 1:      'question': '444',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '666',
135: 1:      'question': '555',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '121',
135: 1:      'question': '100',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '423',
135: 1:      'question': '123',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '000',
135: 1:      'question': '999',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '089',
135: 1:      'question': '789',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '111',
135: 1:      'question': '000',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '001',
135: 1:      'question': '909',
135: 1:      'valid': true
135: 1:    }
135: 1:  ],
135: 1:  'info': [
135: 1:    '✅f(111) = 222',
135: 1:    '✅f(222) = 333',
135: 1:    '✅f(333) = 444',
135: 1:    '✅f(444) = 555',
135: 1:    '✅f(555) = 666',
135: 1:    '✅f(100) = 121',
135: 1:    '✅f(123) = 423',
135: 1:    '✅f(999) = 000',
135: 1:    '✅f(789) = 089',
135: 1:    '✅f(000) = 111',
135: 1:    '✅f(909) = 001',
135: 1:    '❌f(090) = ??? != 110'
135: 1:  ],
135: 1:  'level': 5,
135: 1:  'nextQuestion': '090',
135: 1:  'questions': [
135: 1:    '111',
135: 1:    '222',
135: 1:    '333',
135: 1:    '444',
135: 1:    '555',
135: 1:    '100',
135: 1:    '123',
135: 1:    '999',
135: 1:    '789',
135: 1:    '000',
135: 1:    '909',
135: 1:    '090'
135: 1:  ]
135: 1:}
135: 1:Scores: 5591
135: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111', '001', '110']')
135: 1:Fire Event: PassTest{complexity=13, testCount=12}
135: 1:Fire Event: NextAlgorithm{complexity=13, time=0}
------------------------------------------
136: 1:BoardData {
136: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
136: 1:  'history': [
136: 1:    {
136: 1:      'answer': '222',
136: 1:      'question': '111',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '333',
136: 1:      'question': '222',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '444',
136: 1:      'question': '333',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '555',
136: 1:      'question': '444',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '666',
136: 1:      'question': '555',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '121',
136: 1:      'question': '100',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '423',
136: 1:      'question': '123',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '000',
136: 1:      'question': '999',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '089',
136: 1:      'question': '789',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '111',
136: 1:      'question': '000',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '001',
136: 1:      'question': '909',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '110',
136: 1:      'question': '090',
136: 1:      'valid': true
136: 1:    }
136: 1:  ],
136: 1:  'info': [
136: 1:    '✅f(111) = 222',
136: 1:    '✅f(222) = 333',
136: 1:    '✅f(333) = 444',
136: 1:    '✅f(444) = 555',
136: 1:    '✅f(555) = 666',
136: 1:    '✅f(100) = 121',
136: 1:    '✅f(123) = 423',
136: 1:    '✅f(999) = 000',
136: 1:    '✅f(789) = 089',
136: 1:    '✅f(000) = 111',
136: 1:    '✅f(909) = 001',
136: 1:    '✅f(090) = 110'
136: 1:  ],
136: 1:  'level': 5,
136: 1:  'questions': []
136: 1:}
136: 1:Scores: 7355
136: 1:Answer: message('StartNextLevel')
136: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
137: 1:BoardData {
137: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
137: 1:  'expectedAnswer': '101',
137: 1:  'history': [],
137: 1:  'info': ['❌f(1) = ??? != 101'],
137: 1:  'level': 6,
137: 1:  'nextQuestion': '1',
137: 1:  'questions': ['1']
137: 1:}
137: 1:Scores: 7355
137: 1:Answer: message('['101']')
137: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
138: 1:BoardData {
138: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
138: 1:  'expectedAnswer': '112',
138: 1:  'history': [{
138: 1:    'answer': '101',
138: 1:    'question': '1',
138: 1:    'valid': true
138: 1:  }],
138: 1:  'info': [
138: 1:    '✅f(1) = 101',
138: 1:    '❌f(2) = ??? != 112'
138: 1:  ],
138: 1:  'level': 6,
138: 1:  'nextQuestion': '2',
138: 1:  'questions': [
138: 1:    '1',
138: 1:    '2'
138: 1:  ]
138: 1:}
138: 1:Scores: 7361
138: 1:Answer: message('['101', '112']')
138: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
139: 1:BoardData {
139: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
139: 1:  'expectedAnswer': '131',
139: 1:  'history': [
139: 1:    {
139: 1:      'answer': '101',
139: 1:      'question': '1',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '112',
139: 1:      'question': '2',
139: 1:      'valid': true
139: 1:    }
139: 1:  ],
139: 1:  'info': [
139: 1:    '✅f(1) = 101',
139: 1:    '✅f(2) = 112',
139: 1:    '❌f(3) = ??? != 131'
139: 1:  ],
139: 1:  'level': 6,
139: 1:  'nextQuestion': '3',
139: 1:  'questions': [
139: 1:    '1',
139: 1:    '2',
139: 1:    '3'
139: 1:  ]
139: 1:}
139: 1:Scores: 7367
139: 1:Answer: message('['101', '112', '131']')
139: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
140: 1:BoardData {
140: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
140: 1:  'expectedAnswer': '415',
140: 1:  'history': [
140: 1:    {
140: 1:      'answer': '101',
140: 1:      'question': '1',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '112',
140: 1:      'question': '2',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '131',
140: 1:      'question': '3',
140: 1:      'valid': true
140: 1:    }
140: 1:  ],
140: 1:  'info': [
140: 1:    '✅f(1) = 101',
140: 1:    '✅f(2) = 112',
140: 1:    '✅f(3) = 131',
140: 1:    '❌f(4) = ??? != 415'
140: 1:  ],
140: 1:  'level': 6,
140: 1:  'nextQuestion': '4',
140: 1:  'questions': [
140: 1:    '1',
140: 1:    '2',
140: 1:    '3',
140: 1:    '4'
140: 1:  ]
140: 1:}
140: 1:Scores: 7373
140: 1:Answer: message('['101', '112', '131', '415']')
140: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
141: 1:BoardData {
141: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
141: 1:  'expectedAnswer': '161',
141: 1:  'history': [
141: 1:    {
141: 1:      'answer': '101',
141: 1:      'question': '1',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '112',
141: 1:      'question': '2',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '131',
141: 1:      'question': '3',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '415',
141: 1:      'question': '4',
141: 1:      'valid': true
141: 1:    }
141: 1:  ],
141: 1:  'info': [
141: 1:    '✅f(1) = 101',
141: 1:    '✅f(2) = 112',
141: 1:    '✅f(3) = 131',
141: 1:    '✅f(4) = 415',
141: 1:    '❌f(5) = ??? != 161'
141: 1:  ],
141: 1:  'level': 6,
141: 1:  'nextQuestion': '5',
141: 1:  'questions': [
141: 1:    '1',
141: 1:    '2',
141: 1:    '3',
141: 1:    '4',
141: 1:    '5'
141: 1:  ]
141: 1:}
141: 1:Scores: 7379
141: 1:Answer: message('['101', '112', '131', '415', '161']')
141: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
142: 1:BoardData {
142: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
142: 1:  'expectedAnswer': '718',
142: 1:  'history': [
142: 1:    {
142: 1:      'answer': '101',
142: 1:      'question': '1',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '112',
142: 1:      'question': '2',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '131',
142: 1:      'question': '3',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '415',
142: 1:      'question': '4',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '161',
142: 1:      'question': '5',
142: 1:      'valid': true
142: 1:    }
142: 1:  ],
142: 1:  'info': [
142: 1:    '✅f(1) = 101',
142: 1:    '✅f(2) = 112',
142: 1:    '✅f(3) = 131',
142: 1:    '✅f(4) = 415',
142: 1:    '✅f(5) = 161',
142: 1:    '❌f(6) = ??? != 718'
142: 1:  ],
142: 1:  'level': 6,
142: 1:  'nextQuestion': '6',
142: 1:  'questions': [
142: 1:    '1',
142: 1:    '2',
142: 1:    '3',
142: 1:    '4',
142: 1:    '5',
142: 1:    '6'
142: 1:  ]
142: 1:}
142: 1:Scores: 7385
142: 1:Answer: message('['101', '112', '131', '415', '161', '718']')
142: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
143: 1:BoardData {
143: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
143: 1:  'expectedAnswer': '192',
143: 1:  'history': [
143: 1:    {
143: 1:      'answer': '101',
143: 1:      'question': '1',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '112',
143: 1:      'question': '2',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '131',
143: 1:      'question': '3',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '415',
143: 1:      'question': '4',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '161',
143: 1:      'question': '5',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '718',
143: 1:      'question': '6',
143: 1:      'valid': true
143: 1:    }
143: 1:  ],
143: 1:  'info': [
143: 1:    '✅f(1) = 101',
143: 1:    '✅f(2) = 112',
143: 1:    '✅f(3) = 131',
143: 1:    '✅f(4) = 415',
143: 1:    '✅f(5) = 161',
143: 1:    '✅f(6) = 718',
143: 1:    '❌f(7) = ??? != 192'
143: 1:  ],
143: 1:  'level': 6,
143: 1:  'nextQuestion': '7',
143: 1:  'questions': [
143: 1:    '1',
143: 1:    '2',
143: 1:    '3',
143: 1:    '4',
143: 1:    '5',
143: 1:    '6',
143: 1:    '7'
143: 1:  ]
143: 1:}
143: 1:Scores: 7391
143: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192']')
143: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
144: 1:BoardData {
144: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
144: 1:  'expectedAnswer': '021',
144: 1:  'history': [
144: 1:    {
144: 1:      'answer': '101',
144: 1:      'question': '1',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '112',
144: 1:      'question': '2',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '131',
144: 1:      'question': '3',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '415',
144: 1:      'question': '4',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '161',
144: 1:      'question': '5',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '718',
144: 1:      'question': '6',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '192',
144: 1:      'question': '7',
144: 1:      'valid': true
144: 1:    }
144: 1:  ],
144: 1:  'info': [
144: 1:    '✅f(1) = 101',
144: 1:    '✅f(2) = 112',
144: 1:    '✅f(3) = 131',
144: 1:    '✅f(4) = 415',
144: 1:    '✅f(5) = 161',
144: 1:    '✅f(6) = 718',
144: 1:    '✅f(7) = 192',
144: 1:    '❌f(8) = ??? != 021'
144: 1:  ],
144: 1:  'level': 6,
144: 1:  'nextQuestion': '8',
144: 1:  'questions': [
144: 1:    '1',
144: 1:    '2',
144: 1:    '3',
144: 1:    '4',
144: 1:    '5',
144: 1:    '6',
144: 1:    '7',
144: 1:    '8'
144: 1:  ]
144: 1:}
144: 1:Scores: 7397
144: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021']')
144: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
145: 1:BoardData {
145: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
145: 1:  'expectedAnswer': '222',
145: 1:  'history': [
145: 1:    {
145: 1:      'answer': '101',
145: 1:      'question': '1',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '112',
145: 1:      'question': '2',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '131',
145: 1:      'question': '3',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '415',
145: 1:      'question': '4',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '161',
145: 1:      'question': '5',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '718',
145: 1:      'question': '6',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '192',
145: 1:      'question': '7',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '021',
145: 1:      'question': '8',
145: 1:      'valid': true
145: 1:    }
145: 1:  ],
145: 1:  'info': [
145: 1:    '✅f(1) = 101',
145: 1:    '✅f(2) = 112',
145: 1:    '✅f(3) = 131',
145: 1:    '✅f(4) = 415',
145: 1:    '✅f(5) = 161',
145: 1:    '✅f(6) = 718',
145: 1:    '✅f(7) = 192',
145: 1:    '✅f(8) = 021',
145: 1:    '❌f(9) = ??? != 222'
145: 1:  ],
145: 1:  'level': 6,
145: 1:  'nextQuestion': '9',
145: 1:  'questions': [
145: 1:    '1',
145: 1:    '2',
145: 1:    '3',
145: 1:    '4',
145: 1:    '5',
145: 1:    '6',
145: 1:    '7',
145: 1:    '8',
145: 1:    '9'
145: 1:  ]
145: 1:}
145: 1:Scores: 7403
145: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222']')
145: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
146: 1:BoardData {
146: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
146: 1:  'expectedAnswer': '324',
146: 1:  'history': [
146: 1:    {
146: 1:      'answer': '101',
146: 1:      'question': '1',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '112',
146: 1:      'question': '2',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '131',
146: 1:      'question': '3',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '415',
146: 1:      'question': '4',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '161',
146: 1:      'question': '5',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '718',
146: 1:      'question': '6',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '192',
146: 1:      'question': '7',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '021',
146: 1:      'question': '8',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '222',
146: 1:      'question': '9',
146: 1:      'valid': true
146: 1:    }
146: 1:  ],
146: 1:  'info': [
146: 1:    '✅f(1) = 101',
146: 1:    '✅f(2) = 112',
146: 1:    '✅f(3) = 131',
146: 1:    '✅f(4) = 415',
146: 1:    '✅f(5) = 161',
146: 1:    '✅f(6) = 718',
146: 1:    '✅f(7) = 192',
146: 1:    '✅f(8) = 021',
146: 1:    '✅f(9) = 222',
146: 1:    '❌f(10) = ??? != 324'
146: 1:  ],
146: 1:  'level': 6,
146: 1:  'nextQuestion': '10',
146: 1:  'questions': [
146: 1:    '1',
146: 1:    '2',
146: 1:    '3',
146: 1:    '4',
146: 1:    '5',
146: 1:    '6',
146: 1:    '7',
146: 1:    '8',
146: 1:    '9',
146: 1:    '10'
146: 1:  ]
146: 1:}
146: 1:Scores: 7409
146: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324']')
146: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
147: 1:BoardData {
147: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
147: 1:  'expectedAnswer': '252',
147: 1:  'history': [
147: 1:    {
147: 1:      'answer': '101',
147: 1:      'question': '1',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '112',
147: 1:      'question': '2',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '131',
147: 1:      'question': '3',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '415',
147: 1:      'question': '4',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '161',
147: 1:      'question': '5',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '718',
147: 1:      'question': '6',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '192',
147: 1:      'question': '7',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '021',
147: 1:      'question': '8',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '222',
147: 1:      'question': '9',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '324',
147: 1:      'question': '10',
147: 1:      'valid': true
147: 1:    }
147: 1:  ],
147: 1:  'info': [
147: 1:    '✅f(1) = 101',
147: 1:    '✅f(2) = 112',
147: 1:    '✅f(3) = 131',
147: 1:    '✅f(4) = 415',
147: 1:    '✅f(5) = 161',
147: 1:    '✅f(6) = 718',
147: 1:    '✅f(7) = 192',
147: 1:    '✅f(8) = 021',
147: 1:    '✅f(9) = 222',
147: 1:    '✅f(10) = 324',
147: 1:    '❌f(11) = ??? != 252'
147: 1:  ],
147: 1:  'level': 6,
147: 1:  'nextQuestion': '11',
147: 1:  'questions': [
147: 1:    '1',
147: 1:    '2',
147: 1:    '3',
147: 1:    '4',
147: 1:    '5',
147: 1:    '6',
147: 1:    '7',
147: 1:    '8',
147: 1:    '9',
147: 1:    '10',
147: 1:    '11'
147: 1:  ]
147: 1:}
147: 1:Scores: 7415
147: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252']')
147: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
148: 1:BoardData {
148: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
148: 1:  'expectedAnswer': '627',
148: 1:  'history': [
148: 1:    {
148: 1:      'answer': '101',
148: 1:      'question': '1',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '112',
148: 1:      'question': '2',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '131',
148: 1:      'question': '3',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '415',
148: 1:      'question': '4',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '161',
148: 1:      'question': '5',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '718',
148: 1:      'question': '6',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '192',
148: 1:      'question': '7',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '021',
148: 1:      'question': '8',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '222',
148: 1:      'question': '9',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '324',
148: 1:      'question': '10',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '252',
148: 1:      'question': '11',
148: 1:      'valid': true
148: 1:    }
148: 1:  ],
148: 1:  'info': [
148: 1:    '✅f(1) = 101',
148: 1:    '✅f(2) = 112',
148: 1:    '✅f(3) = 131',
148: 1:    '✅f(4) = 415',
148: 1:    '✅f(5) = 161',
148: 1:    '✅f(6) = 718',
148: 1:    '✅f(7) = 192',
148: 1:    '✅f(8) = 021',
148: 1:    '✅f(9) = 222',
148: 1:    '✅f(10) = 324',
148: 1:    '✅f(11) = 252',
148: 1:    '❌f(12) = ??? != 627'
148: 1:  ],
148: 1:  'level': 6,
148: 1:  'nextQuestion': '12',
148: 1:  'questions': [
148: 1:    '1',
148: 1:    '2',
148: 1:    '3',
148: 1:    '4',
148: 1:    '5',
148: 1:    '6',
148: 1:    '7',
148: 1:    '8',
148: 1:    '9',
148: 1:    '10',
148: 1:    '11',
148: 1:    '12'
148: 1:  ]
148: 1:}
148: 1:Scores: 7421
148: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627']')
148: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
149: 1:BoardData {
149: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
149: 1:  'expectedAnswer': '282',
149: 1:  'history': [
149: 1:    {
149: 1:      'answer': '101',
149: 1:      'question': '1',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '112',
149: 1:      'question': '2',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '131',
149: 1:      'question': '3',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '415',
149: 1:      'question': '4',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '161',
149: 1:      'question': '5',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '718',
149: 1:      'question': '6',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '192',
149: 1:      'question': '7',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '021',
149: 1:      'question': '8',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '222',
149: 1:      'question': '9',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '324',
149: 1:      'question': '10',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '252',
149: 1:      'question': '11',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '627',
149: 1:      'question': '12',
149: 1:      'valid': true
149: 1:    }
149: 1:  ],
149: 1:  'info': [
149: 1:    '✅f(1) = 101',
149: 1:    '✅f(2) = 112',
149: 1:    '✅f(3) = 131',
149: 1:    '✅f(4) = 415',
149: 1:    '✅f(5) = 161',
149: 1:    '✅f(6) = 718',
149: 1:    '✅f(7) = 192',
149: 1:    '✅f(8) = 021',
149: 1:    '✅f(9) = 222',
149: 1:    '✅f(10) = 324',
149: 1:    '✅f(11) = 252',
149: 1:    '✅f(12) = 627',
149: 1:    '❌f(13) = ??? != 282'
149: 1:  ],
149: 1:  'level': 6,
149: 1:  'nextQuestion': '13',
149: 1:  'questions': [
149: 1:    '1',
149: 1:    '2',
149: 1:    '3',
149: 1:    '4',
149: 1:    '5',
149: 1:    '6',
149: 1:    '7',
149: 1:    '8',
149: 1:    '9',
149: 1:    '10',
149: 1:    '11',
149: 1:    '12',
149: 1:    '13'
149: 1:  ]
149: 1:}
149: 1:Scores: 7427
149: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282']')
149: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
150: 1:BoardData {
150: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
150: 1:  'expectedAnswer': '930',
150: 1:  'history': [
150: 1:    {
150: 1:      'answer': '101',
150: 1:      'question': '1',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '112',
150: 1:      'question': '2',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '131',
150: 1:      'question': '3',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '415',
150: 1:      'question': '4',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '161',
150: 1:      'question': '5',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '718',
150: 1:      'question': '6',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '192',
150: 1:      'question': '7',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '021',
150: 1:      'question': '8',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '222',
150: 1:      'question': '9',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '324',
150: 1:      'question': '10',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '252',
150: 1:      'question': '11',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '627',
150: 1:      'question': '12',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '282',
150: 1:      'question': '13',
150: 1:      'valid': true
150: 1:    }
150: 1:  ],
150: 1:  'info': [
150: 1:    '✅f(1) = 101',
150: 1:    '✅f(2) = 112',
150: 1:    '✅f(3) = 131',
150: 1:    '✅f(4) = 415',
150: 1:    '✅f(5) = 161',
150: 1:    '✅f(6) = 718',
150: 1:    '✅f(7) = 192',
150: 1:    '✅f(8) = 021',
150: 1:    '✅f(9) = 222',
150: 1:    '✅f(10) = 324',
150: 1:    '✅f(11) = 252',
150: 1:    '✅f(12) = 627',
150: 1:    '✅f(13) = 282',
150: 1:    '❌f(14) = ??? != 930'
150: 1:  ],
150: 1:  'level': 6,
150: 1:  'nextQuestion': '14',
150: 1:  'questions': [
150: 1:    '1',
150: 1:    '2',
150: 1:    '3',
150: 1:    '4',
150: 1:    '5',
150: 1:    '6',
150: 1:    '7',
150: 1:    '8',
150: 1:    '9',
150: 1:    '10',
150: 1:    '11',
150: 1:    '12',
150: 1:    '13',
150: 1:    '14'
150: 1:  ]
150: 1:}
150: 1:Scores: 7433
150: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930']')
150: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
151: 1:BoardData {
151: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
151: 1:  'expectedAnswer': '313',
151: 1:  'history': [
151: 1:    {
151: 1:      'answer': '101',
151: 1:      'question': '1',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '112',
151: 1:      'question': '2',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '131',
151: 1:      'question': '3',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '415',
151: 1:      'question': '4',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '161',
151: 1:      'question': '5',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '718',
151: 1:      'question': '6',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '192',
151: 1:      'question': '7',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '021',
151: 1:      'question': '8',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '222',
151: 1:      'question': '9',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '324',
151: 1:      'question': '10',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '252',
151: 1:      'question': '11',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '627',
151: 1:      'question': '12',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '282',
151: 1:      'question': '13',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '930',
151: 1:      'question': '14',
151: 1:      'valid': true
151: 1:    }
151: 1:  ],
151: 1:  'info': [
151: 1:    '✅f(1) = 101',
151: 1:    '✅f(2) = 112',
151: 1:    '✅f(3) = 131',
151: 1:    '✅f(4) = 415',
151: 1:    '✅f(5) = 161',
151: 1:    '✅f(6) = 718',
151: 1:    '✅f(7) = 192',
151: 1:    '✅f(8) = 021',
151: 1:    '✅f(9) = 222',
151: 1:    '✅f(10) = 324',
151: 1:    '✅f(11) = 252',
151: 1:    '✅f(12) = 627',
151: 1:    '✅f(13) = 282',
151: 1:    '✅f(14) = 930',
151: 1:    '❌f(15) = ??? != 313'
151: 1:  ],
151: 1:  'level': 6,
151: 1:  'nextQuestion': '15',
151: 1:  'questions': [
151: 1:    '1',
151: 1:    '2',
151: 1:    '3',
151: 1:    '4',
151: 1:    '5',
151: 1:    '6',
151: 1:    '7',
151: 1:    '8',
151: 1:    '9',
151: 1:    '10',
151: 1:    '11',
151: 1:    '12',
151: 1:    '13',
151: 1:    '14',
151: 1:    '15'
151: 1:  ]
151: 1:}
151: 1:Scores: 7439
151: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313']')
151: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
152: 1:BoardData {
152: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
152: 1:  'expectedAnswer': '233',
152: 1:  'history': [
152: 1:    {
152: 1:      'answer': '101',
152: 1:      'question': '1',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '112',
152: 1:      'question': '2',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '131',
152: 1:      'question': '3',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '415',
152: 1:      'question': '4',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '161',
152: 1:      'question': '5',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '718',
152: 1:      'question': '6',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '192',
152: 1:      'question': '7',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '021',
152: 1:      'question': '8',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '222',
152: 1:      'question': '9',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '324',
152: 1:      'question': '10',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '252',
152: 1:      'question': '11',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '627',
152: 1:      'question': '12',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '282',
152: 1:      'question': '13',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '930',
152: 1:      'question': '14',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '313',
152: 1:      'question': '15',
152: 1:      'valid': true
152: 1:    }
152: 1:  ],
152: 1:  'info': [
152: 1:    '✅f(1) = 101',
152: 1:    '✅f(2) = 112',
152: 1:    '✅f(3) = 131',
152: 1:    '✅f(4) = 415',
152: 1:    '✅f(5) = 161',
152: 1:    '✅f(6) = 718',
152: 1:    '✅f(7) = 192',
152: 1:    '✅f(8) = 021',
152: 1:    '✅f(9) = 222',
152: 1:    '✅f(10) = 324',
152: 1:    '✅f(11) = 252',
152: 1:    '✅f(12) = 627',
152: 1:    '✅f(13) = 282',
152: 1:    '✅f(14) = 930',
152: 1:    '✅f(15) = 313',
152: 1:    '❌f(16) = ??? != 233'
152: 1:  ],
152: 1:  'level': 6,
152: 1:  'nextQuestion': '16',
152: 1:  'questions': [
152: 1:    '1',
152: 1:    '2',
152: 1:    '3',
152: 1:    '4',
152: 1:    '5',
152: 1:    '6',
152: 1:    '7',
152: 1:    '8',
152: 1:    '9',
152: 1:    '10',
152: 1:    '11',
152: 1:    '12',
152: 1:    '13',
152: 1:    '14',
152: 1:    '15',
152: 1:    '16'
152: 1:  ]
152: 1:}
152: 1:Scores: 7445
152: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233']')
152: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
153: 1:BoardData {
153: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
153: 1:  'expectedAnswer': '343',
153: 1:  'history': [
153: 1:    {
153: 1:      'answer': '101',
153: 1:      'question': '1',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '112',
153: 1:      'question': '2',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '131',
153: 1:      'question': '3',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '415',
153: 1:      'question': '4',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '161',
153: 1:      'question': '5',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '718',
153: 1:      'question': '6',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '192',
153: 1:      'question': '7',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '021',
153: 1:      'question': '8',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '222',
153: 1:      'question': '9',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '324',
153: 1:      'question': '10',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '252',
153: 1:      'question': '11',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '627',
153: 1:      'question': '12',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '282',
153: 1:      'question': '13',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '930',
153: 1:      'question': '14',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '313',
153: 1:      'question': '15',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '233',
153: 1:      'question': '16',
153: 1:      'valid': true
153: 1:    }
153: 1:  ],
153: 1:  'info': [
153: 1:    '✅f(1) = 101',
153: 1:    '✅f(2) = 112',
153: 1:    '✅f(3) = 131',
153: 1:    '✅f(4) = 415',
153: 1:    '✅f(5) = 161',
153: 1:    '✅f(6) = 718',
153: 1:    '✅f(7) = 192',
153: 1:    '✅f(8) = 021',
153: 1:    '✅f(9) = 222',
153: 1:    '✅f(10) = 324',
153: 1:    '✅f(11) = 252',
153: 1:    '✅f(12) = 627',
153: 1:    '✅f(13) = 282',
153: 1:    '✅f(14) = 930',
153: 1:    '✅f(15) = 313',
153: 1:    '✅f(16) = 233',
153: 1:    '❌f(17) = ??? != 343'
153: 1:  ],
153: 1:  'level': 6,
153: 1:  'nextQuestion': '17',
153: 1:  'questions': [
153: 1:    '1',
153: 1:    '2',
153: 1:    '3',
153: 1:    '4',
153: 1:    '5',
153: 1:    '6',
153: 1:    '7',
153: 1:    '8',
153: 1:    '9',
153: 1:    '10',
153: 1:    '11',
153: 1:    '12',
153: 1:    '13',
153: 1:    '14',
153: 1:    '15',
153: 1:    '16',
153: 1:    '17'
153: 1:  ]
153: 1:}
153: 1:Scores: 7451
153: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343']')
153: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
154: 1:BoardData {
154: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
154: 1:  'expectedAnswer': '536',
154: 1:  'history': [
154: 1:    {
154: 1:      'answer': '101',
154: 1:      'question': '1',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '112',
154: 1:      'question': '2',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '131',
154: 1:      'question': '3',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '415',
154: 1:      'question': '4',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '161',
154: 1:      'question': '5',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '718',
154: 1:      'question': '6',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '192',
154: 1:      'question': '7',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '021',
154: 1:      'question': '8',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '222',
154: 1:      'question': '9',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '324',
154: 1:      'question': '10',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '252',
154: 1:      'question': '11',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '627',
154: 1:      'question': '12',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '282',
154: 1:      'question': '13',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '930',
154: 1:      'question': '14',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '313',
154: 1:      'question': '15',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '233',
154: 1:      'question': '16',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '343',
154: 1:      'question': '17',
154: 1:      'valid': true
154: 1:    }
154: 1:  ],
154: 1:  'info': [
154: 1:    '✅f(1) = 101',
154: 1:    '✅f(2) = 112',
154: 1:    '✅f(3) = 131',
154: 1:    '✅f(4) = 415',
154: 1:    '✅f(5) = 161',
154: 1:    '✅f(6) = 718',
154: 1:    '✅f(7) = 192',
154: 1:    '✅f(8) = 021',
154: 1:    '✅f(9) = 222',
154: 1:    '✅f(10) = 324',
154: 1:    '✅f(11) = 252',
154: 1:    '✅f(12) = 627',
154: 1:    '✅f(13) = 282',
154: 1:    '✅f(14) = 930',
154: 1:    '✅f(15) = 313',
154: 1:    '✅f(16) = 233',
154: 1:    '✅f(17) = 343',
154: 1:    '❌f(18) = ??? != 536'
154: 1:  ],
154: 1:  'level': 6,
154: 1:  'nextQuestion': '18',
154: 1:  'questions': [
154: 1:    '1',
154: 1:    '2',
154: 1:    '3',
154: 1:    '4',
154: 1:    '5',
154: 1:    '6',
154: 1:    '7',
154: 1:    '8',
154: 1:    '9',
154: 1:    '10',
154: 1:    '11',
154: 1:    '12',
154: 1:    '13',
154: 1:    '14',
154: 1:    '15',
154: 1:    '16',
154: 1:    '17',
154: 1:    '18'
154: 1:  ]
154: 1:}
154: 1:Scores: 7457
154: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536']')
154: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
155: 1:BoardData {
155: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
155: 1:  'expectedAnswer': '373',
155: 1:  'history': [
155: 1:    {
155: 1:      'answer': '101',
155: 1:      'question': '1',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '112',
155: 1:      'question': '2',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '131',
155: 1:      'question': '3',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '415',
155: 1:      'question': '4',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '161',
155: 1:      'question': '5',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '718',
155: 1:      'question': '6',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '192',
155: 1:      'question': '7',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '021',
155: 1:      'question': '8',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '222',
155: 1:      'question': '9',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '324',
155: 1:      'question': '10',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '252',
155: 1:      'question': '11',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '627',
155: 1:      'question': '12',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '282',
155: 1:      'question': '13',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '930',
155: 1:      'question': '14',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '313',
155: 1:      'question': '15',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '233',
155: 1:      'question': '16',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '343',
155: 1:      'question': '17',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '536',
155: 1:      'question': '18',
155: 1:      'valid': true
155: 1:    }
155: 1:  ],
155: 1:  'info': [
155: 1:    '✅f(1) = 101',
155: 1:    '✅f(2) = 112',
155: 1:    '✅f(3) = 131',
155: 1:    '✅f(4) = 415',
155: 1:    '✅f(5) = 161',
155: 1:    '✅f(6) = 718',
155: 1:    '✅f(7) = 192',
155: 1:    '✅f(8) = 021',
155: 1:    '✅f(9) = 222',
155: 1:    '✅f(10) = 324',
155: 1:    '✅f(11) = 252',
155: 1:    '✅f(12) = 627',
155: 1:    '✅f(13) = 282',
155: 1:    '✅f(14) = 930',
155: 1:    '✅f(15) = 313',
155: 1:    '✅f(16) = 233',
155: 1:    '✅f(17) = 343',
155: 1:    '✅f(18) = 536',
155: 1:    '❌f(19) = ??? != 373'
155: 1:  ],
155: 1:  'level': 6,
155: 1:  'nextQuestion': '19',
155: 1:  'questions': [
155: 1:    '1',
155: 1:    '2',
155: 1:    '3',
155: 1:    '4',
155: 1:    '5',
155: 1:    '6',
155: 1:    '7',
155: 1:    '8',
155: 1:    '9',
155: 1:    '10',
155: 1:    '11',
155: 1:    '12',
155: 1:    '13',
155: 1:    '14',
155: 1:    '15',
155: 1:    '16',
155: 1:    '17',
155: 1:    '18',
155: 1:    '19'
155: 1:  ]
155: 1:}
155: 1:Scores: 7463
155: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373']')
155: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
156: 1:BoardData {
156: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
156: 1:  'expectedAnswer': '839',
156: 1:  'history': [
156: 1:    {
156: 1:      'answer': '101',
156: 1:      'question': '1',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '112',
156: 1:      'question': '2',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '131',
156: 1:      'question': '3',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '415',
156: 1:      'question': '4',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '161',
156: 1:      'question': '5',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '718',
156: 1:      'question': '6',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '192',
156: 1:      'question': '7',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '021',
156: 1:      'question': '8',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '222',
156: 1:      'question': '9',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '324',
156: 1:      'question': '10',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '252',
156: 1:      'question': '11',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '627',
156: 1:      'question': '12',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '282',
156: 1:      'question': '13',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '930',
156: 1:      'question': '14',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '313',
156: 1:      'question': '15',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '233',
156: 1:      'question': '16',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '343',
156: 1:      'question': '17',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '536',
156: 1:      'question': '18',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '373',
156: 1:      'question': '19',
156: 1:      'valid': true
156: 1:    }
156: 1:  ],
156: 1:  'info': [
156: 1:    '✅f(1) = 101',
156: 1:    '✅f(2) = 112',
156: 1:    '✅f(3) = 131',
156: 1:    '✅f(4) = 415',
156: 1:    '✅f(5) = 161',
156: 1:    '✅f(6) = 718',
156: 1:    '✅f(7) = 192',
156: 1:    '✅f(8) = 021',
156: 1:    '✅f(9) = 222',
156: 1:    '✅f(10) = 324',
156: 1:    '✅f(11) = 252',
156: 1:    '✅f(12) = 627',
156: 1:    '✅f(13) = 282',
156: 1:    '✅f(14) = 930',
156: 1:    '✅f(15) = 313',
156: 1:    '✅f(16) = 233',
156: 1:    '✅f(17) = 343',
156: 1:    '✅f(18) = 536',
156: 1:    '✅f(19) = 373',
156: 1:    '❌f(20) = ??? != 839'
156: 1:  ],
156: 1:  'level': 6,
156: 1:  'nextQuestion': '20',
156: 1:  'questions': [
156: 1:    '1',
156: 1:    '2',
156: 1:    '3',
156: 1:    '4',
156: 1:    '5',
156: 1:    '6',
156: 1:    '7',
156: 1:    '8',
156: 1:    '9',
156: 1:    '10',
156: 1:    '11',
156: 1:    '12',
156: 1:    '13',
156: 1:    '14',
156: 1:    '15',
156: 1:    '16',
156: 1:    '17',
156: 1:    '18',
156: 1:    '19',
156: 1:    '20'
156: 1:  ]
156: 1:}
156: 1:Scores: 7469
156: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839']')
156: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
157: 1:BoardData {
157: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
157: 1:  'expectedAnswer': '404',
157: 1:  'history': [
157: 1:    {
157: 1:      'answer': '101',
157: 1:      'question': '1',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '112',
157: 1:      'question': '2',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '131',
157: 1:      'question': '3',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '415',
157: 1:      'question': '4',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '161',
157: 1:      'question': '5',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '718',
157: 1:      'question': '6',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '192',
157: 1:      'question': '7',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '021',
157: 1:      'question': '8',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '222',
157: 1:      'question': '9',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '324',
157: 1:      'question': '10',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '252',
157: 1:      'question': '11',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '627',
157: 1:      'question': '12',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '282',
157: 1:      'question': '13',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '930',
157: 1:      'question': '14',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '313',
157: 1:      'question': '15',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '233',
157: 1:      'question': '16',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '343',
157: 1:      'question': '17',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '536',
157: 1:      'question': '18',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '373',
157: 1:      'question': '19',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '839',
157: 1:      'question': '20',
157: 1:      'valid': true
157: 1:    }
157: 1:  ],
157: 1:  'info': [
157: 1:    '✅f(1) = 101',
157: 1:    '✅f(2) = 112',
157: 1:    '✅f(3) = 131',
157: 1:    '✅f(4) = 415',
157: 1:    '✅f(5) = 161',
157: 1:    '✅f(6) = 718',
157: 1:    '✅f(7) = 192',
157: 1:    '✅f(8) = 021',
157: 1:    '✅f(9) = 222',
157: 1:    '✅f(10) = 324',
157: 1:    '✅f(11) = 252',
157: 1:    '✅f(12) = 627',
157: 1:    '✅f(13) = 282',
157: 1:    '✅f(14) = 930',
157: 1:    '✅f(15) = 313',
157: 1:    '✅f(16) = 233',
157: 1:    '✅f(17) = 343',
157: 1:    '✅f(18) = 536',
157: 1:    '✅f(19) = 373',
157: 1:    '✅f(20) = 839',
157: 1:    '❌f(21) = ??? != 404'
157: 1:  ],
157: 1:  'level': 6,
157: 1:  'nextQuestion': '21',
157: 1:  'questions': [
157: 1:    '1',
157: 1:    '2',
157: 1:    '3',
157: 1:    '4',
157: 1:    '5',
157: 1:    '6',
157: 1:    '7',
157: 1:    '8',
157: 1:    '9',
157: 1:    '10',
157: 1:    '11',
157: 1:    '12',
157: 1:    '13',
157: 1:    '14',
157: 1:    '15',
157: 1:    '16',
157: 1:    '17',
157: 1:    '18',
157: 1:    '19',
157: 1:    '20',
157: 1:    '21'
157: 1:  ]
157: 1:}
157: 1:Scores: 7475
157: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404']')
157: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
158: 1:BoardData {
158: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
158: 1:  'expectedAnswer': '142',
158: 1:  'history': [
158: 1:    {
158: 1:      'answer': '101',
158: 1:      'question': '1',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '112',
158: 1:      'question': '2',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '131',
158: 1:      'question': '3',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '415',
158: 1:      'question': '4',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '161',
158: 1:      'question': '5',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '718',
158: 1:      'question': '6',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '192',
158: 1:      'question': '7',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '021',
158: 1:      'question': '8',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '222',
158: 1:      'question': '9',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '324',
158: 1:      'question': '10',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '252',
158: 1:      'question': '11',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '627',
158: 1:      'question': '12',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '282',
158: 1:      'question': '13',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '930',
158: 1:      'question': '14',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '313',
158: 1:      'question': '15',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '233',
158: 1:      'question': '16',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '343',
158: 1:      'question': '17',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '536',
158: 1:      'question': '18',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '373',
158: 1:      'question': '19',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '839',
158: 1:      'question': '20',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '404',
158: 1:      'question': '21',
158: 1:      'valid': true
158: 1:    }
158: 1:  ],
158: 1:  'info': [
158: 1:    '✅f(1) = 101',
158: 1:    '✅f(2) = 112',
158: 1:    '✅f(3) = 131',
158: 1:    '✅f(4) = 415',
158: 1:    '✅f(5) = 161',
158: 1:    '✅f(6) = 718',
158: 1:    '✅f(7) = 192',
158: 1:    '✅f(8) = 021',
158: 1:    '✅f(9) = 222',
158: 1:    '✅f(10) = 324',
158: 1:    '✅f(11) = 252',
158: 1:    '✅f(12) = 627',
158: 1:    '✅f(13) = 282',
158: 1:    '✅f(14) = 930',
158: 1:    '✅f(15) = 313',
158: 1:    '✅f(16) = 233',
158: 1:    '✅f(17) = 343',
158: 1:    '✅f(18) = 536',
158: 1:    '✅f(19) = 373',
158: 1:    '✅f(20) = 839',
158: 1:    '✅f(21) = 404',
158: 1:    '❌f(22) = ??? != 142'
158: 1:  ],
158: 1:  'level': 6,
158: 1:  'nextQuestion': '22',
158: 1:  'questions': [
158: 1:    '1',
158: 1:    '2',
158: 1:    '3',
158: 1:    '4',
158: 1:    '5',
158: 1:    '6',
158: 1:    '7',
158: 1:    '8',
158: 1:    '9',
158: 1:    '10',
158: 1:    '11',
158: 1:    '12',
158: 1:    '13',
158: 1:    '14',
158: 1:    '15',
158: 1:    '16',
158: 1:    '17',
158: 1:    '18',
158: 1:    '19',
158: 1:    '20',
158: 1:    '21',
158: 1:    '22'
158: 1:  ]
158: 1:}
158: 1:Scores: 7481
158: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142']')
158: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
159: 1:BoardData {
159: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
159: 1:  'expectedAnswer': '434',
159: 1:  'history': [
159: 1:    {
159: 1:      'answer': '101',
159: 1:      'question': '1',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '112',
159: 1:      'question': '2',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '131',
159: 1:      'question': '3',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '415',
159: 1:      'question': '4',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '161',
159: 1:      'question': '5',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '718',
159: 1:      'question': '6',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '192',
159: 1:      'question': '7',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '021',
159: 1:      'question': '8',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '222',
159: 1:      'question': '9',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '324',
159: 1:      'question': '10',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '252',
159: 1:      'question': '11',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '627',
159: 1:      'question': '12',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '282',
159: 1:      'question': '13',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '930',
159: 1:      'question': '14',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '313',
159: 1:      'question': '15',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '233',
159: 1:      'question': '16',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '343',
159: 1:      'question': '17',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '536',
159: 1:      'question': '18',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '373',
159: 1:      'question': '19',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '839',
159: 1:      'question': '20',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '404',
159: 1:      'question': '21',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '142',
159: 1:      'question': '22',
159: 1:      'valid': true
159: 1:    }
159: 1:  ],
159: 1:  'info': [
159: 1:    '✅f(1) = 101',
159: 1:    '✅f(2) = 112',
159: 1:    '✅f(3) = 131',
159: 1:    '✅f(4) = 415',
159: 1:    '✅f(5) = 161',
159: 1:    '✅f(6) = 718',
159: 1:    '✅f(7) = 192',
159: 1:    '✅f(8) = 021',
159: 1:    '✅f(9) = 222',
159: 1:    '✅f(10) = 324',
159: 1:    '✅f(11) = 252',
159: 1:    '✅f(12) = 627',
159: 1:    '✅f(13) = 282',
159: 1:    '✅f(14) = 930',
159: 1:    '✅f(15) = 313',
159: 1:    '✅f(16) = 233',
159: 1:    '✅f(17) = 343',
159: 1:    '✅f(18) = 536',
159: 1:    '✅f(19) = 373',
159: 1:    '✅f(20) = 839',
159: 1:    '✅f(21) = 404',
159: 1:    '✅f(22) = 142',
159: 1:    '❌f(23) = ??? != 434'
159: 1:  ],
159: 1:  'level': 6,
159: 1:  'nextQuestion': '23',
159: 1:  'questions': [
159: 1:    '1',
159: 1:    '2',
159: 1:    '3',
159: 1:    '4',
159: 1:    '5',
159: 1:    '6',
159: 1:    '7',
159: 1:    '8',
159: 1:    '9',
159: 1:    '10',
159: 1:    '11',
159: 1:    '12',
159: 1:    '13',
159: 1:    '14',
159: 1:    '15',
159: 1:    '16',
159: 1:    '17',
159: 1:    '18',
159: 1:    '19',
159: 1:    '20',
159: 1:    '21',
159: 1:    '22',
159: 1:    '23'
159: 1:  ]
159: 1:}
159: 1:Scores: 7487
159: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434']')
159: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
160: 1:BoardData {
160: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
160: 1:  'expectedAnswer': '445',
160: 1:  'history': [
160: 1:    {
160: 1:      'answer': '101',
160: 1:      'question': '1',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '112',
160: 1:      'question': '2',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '131',
160: 1:      'question': '3',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '415',
160: 1:      'question': '4',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '161',
160: 1:      'question': '5',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '718',
160: 1:      'question': '6',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '192',
160: 1:      'question': '7',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '021',
160: 1:      'question': '8',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '222',
160: 1:      'question': '9',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '324',
160: 1:      'question': '10',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '252',
160: 1:      'question': '11',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '627',
160: 1:      'question': '12',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '282',
160: 1:      'question': '13',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '930',
160: 1:      'question': '14',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '313',
160: 1:      'question': '15',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '233',
160: 1:      'question': '16',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '343',
160: 1:      'question': '17',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '536',
160: 1:      'question': '18',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '373',
160: 1:      'question': '19',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '839',
160: 1:      'question': '20',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '404',
160: 1:      'question': '21',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '142',
160: 1:      'question': '22',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '434',
160: 1:      'question': '23',
160: 1:      'valid': true
160: 1:    }
160: 1:  ],
160: 1:  'info': [
160: 1:    '✅f(1) = 101',
160: 1:    '✅f(2) = 112',
160: 1:    '✅f(3) = 131',
160: 1:    '✅f(4) = 415',
160: 1:    '✅f(5) = 161',
160: 1:    '✅f(6) = 718',
160: 1:    '✅f(7) = 192',
160: 1:    '✅f(8) = 021',
160: 1:    '✅f(9) = 222',
160: 1:    '✅f(10) = 324',
160: 1:    '✅f(11) = 252',
160: 1:    '✅f(12) = 627',
160: 1:    '✅f(13) = 282',
160: 1:    '✅f(14) = 930',
160: 1:    '✅f(15) = 313',
160: 1:    '✅f(16) = 233',
160: 1:    '✅f(17) = 343',
160: 1:    '✅f(18) = 536',
160: 1:    '✅f(19) = 373',
160: 1:    '✅f(20) = 839',
160: 1:    '✅f(21) = 404',
160: 1:    '✅f(22) = 142',
160: 1:    '✅f(23) = 434',
160: 1:    '❌f(24) = ??? != 445'
160: 1:  ],
160: 1:  'level': 6,
160: 1:  'nextQuestion': '24',
160: 1:  'questions': [
160: 1:    '1',
160: 1:    '2',
160: 1:    '3',
160: 1:    '4',
160: 1:    '5',
160: 1:    '6',
160: 1:    '7',
160: 1:    '8',
160: 1:    '9',
160: 1:    '10',
160: 1:    '11',
160: 1:    '12',
160: 1:    '13',
160: 1:    '14',
160: 1:    '15',
160: 1:    '16',
160: 1:    '17',
160: 1:    '18',
160: 1:    '19',
160: 1:    '20',
160: 1:    '21',
160: 1:    '22',
160: 1:    '23',
160: 1:    '24'
160: 1:  ]
160: 1:}
160: 1:Scores: 7493
160: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434', '445']')
160: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
161: 1:BoardData {
161: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
161: 1:  'expectedAnswer': '464',
161: 1:  'history': [
161: 1:    {
161: 1:      'answer': '101',
161: 1:      'question': '1',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '112',
161: 1:      'question': '2',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '131',
161: 1:      'question': '3',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '415',
161: 1:      'question': '4',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '161',
161: 1:      'question': '5',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '718',
161: 1:      'question': '6',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '192',
161: 1:      'question': '7',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '021',
161: 1:      'question': '8',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '222',
161: 1:      'question': '9',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '324',
161: 1:      'question': '10',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '252',
161: 1:      'question': '11',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '627',
161: 1:      'question': '12',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '282',
161: 1:      'question': '13',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '930',
161: 1:      'question': '14',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '313',
161: 1:      'question': '15',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '233',
161: 1:      'question': '16',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '343',
161: 1:      'question': '17',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '536',
161: 1:      'question': '18',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '373',
161: 1:      'question': '19',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '839',
161: 1:      'question': '20',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '404',
161: 1:      'question': '21',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '142',
161: 1:      'question': '22',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '434',
161: 1:      'question': '23',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '445',
161: 1:      'question': '24',
161: 1:      'valid': true
161: 1:    }
161: 1:  ],
161: 1:  'info': [
161: 1:    '✅f(1) = 101',
161: 1:    '✅f(2) = 112',
161: 1:    '✅f(3) = 131',
161: 1:    '✅f(4) = 415',
161: 1:    '✅f(5) = 161',
161: 1:    '✅f(6) = 718',
161: 1:    '✅f(7) = 192',
161: 1:    '✅f(8) = 021',
161: 1:    '✅f(9) = 222',
161: 1:    '✅f(10) = 324',
161: 1:    '✅f(11) = 252',
161: 1:    '✅f(12) = 627',
161: 1:    '✅f(13) = 282',
161: 1:    '✅f(14) = 930',
161: 1:    '✅f(15) = 313',
161: 1:    '✅f(16) = 233',
161: 1:    '✅f(17) = 343',
161: 1:    '✅f(18) = 536',
161: 1:    '✅f(19) = 373',
161: 1:    '✅f(20) = 839',
161: 1:    '✅f(21) = 404',
161: 1:    '✅f(22) = 142',
161: 1:    '✅f(23) = 434',
161: 1:    '✅f(24) = 445',
161: 1:    '❌f(25) = ??? != 464'
161: 1:  ],
161: 1:  'level': 6,
161: 1:  'nextQuestion': '25',
161: 1:  'questions': [
161: 1:    '1',
161: 1:    '2',
161: 1:    '3',
161: 1:    '4',
161: 1:    '5',
161: 1:    '6',
161: 1:    '7',
161: 1:    '8',
161: 1:    '9',
161: 1:    '10',
161: 1:    '11',
161: 1:    '12',
161: 1:    '13',
161: 1:    '14',
161: 1:    '15',
161: 1:    '16',
161: 1:    '17',
161: 1:    '18',
161: 1:    '19',
161: 1:    '20',
161: 1:    '21',
161: 1:    '22',
161: 1:    '23',
161: 1:    '24',
161: 1:    '25'
161: 1:  ]
161: 1:}
161: 1:Scores: 7499
161: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434', '445', '464']')
161: 1:Fire Event: PassTest{complexity=15, testCount=25}
161: 1:Fire Event: NextAlgorithm{complexity=15, time=0}
------------------------------------------
162: 1:BoardData {
162: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
162: 1:  'history': [
162: 1:    {
162: 1:      'answer': '101',
162: 1:      'question': '1',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '112',
162: 1:      'question': '2',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '131',
162: 1:      'question': '3',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '415',
162: 1:      'question': '4',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '161',
162: 1:      'question': '5',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '718',
162: 1:      'question': '6',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '192',
162: 1:      'question': '7',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '021',
162: 1:      'question': '8',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '222',
162: 1:      'question': '9',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '324',
162: 1:      'question': '10',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '252',
162: 1:      'question': '11',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '627',
162: 1:      'question': '12',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '282',
162: 1:      'question': '13',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '930',
162: 1:      'question': '14',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '313',
162: 1:      'question': '15',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '233',
162: 1:      'question': '16',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '343',
162: 1:      'question': '17',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '536',
162: 1:      'question': '18',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '373',
162: 1:      'question': '19',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '839',
162: 1:      'question': '20',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '404',
162: 1:      'question': '21',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '142',
162: 1:      'question': '22',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '434',
162: 1:      'question': '23',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '445',
162: 1:      'question': '24',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '464',
162: 1:      'question': '25',
162: 1:      'valid': true
162: 1:    }
162: 1:  ],
162: 1:  'info': [
162: 1:    '✅f(1) = 101',
162: 1:    '✅f(2) = 112',
162: 1:    '✅f(3) = 131',
162: 1:    '✅f(4) = 415',
162: 1:    '✅f(5) = 161',
162: 1:    '✅f(6) = 718',
162: 1:    '✅f(7) = 192',
162: 1:    '✅f(8) = 021',
162: 1:    '✅f(9) = 222',
162: 1:    '✅f(10) = 324',
162: 1:    '✅f(11) = 252',
162: 1:    '✅f(12) = 627',
162: 1:    '✅f(13) = 282',
162: 1:    '✅f(14) = 930',
162: 1:    '✅f(15) = 313',
162: 1:    '✅f(16) = 233',
162: 1:    '✅f(17) = 343',
162: 1:    '✅f(18) = 536',
162: 1:    '✅f(19) = 373',
162: 1:    '✅f(20) = 839',
162: 1:    '✅f(21) = 404',
162: 1:    '✅f(22) = 142',
162: 1:    '✅f(23) = 434',
162: 1:    '✅f(24) = 445',
162: 1:    '✅f(25) = 464'
162: 1:  ],
162: 1:  'level': 6,
162: 1:  'questions': []
162: 1:}
162: 1:Scores: 9529
162: 1:Answer: message('StartNextLevel')
162: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
163: 1:BoardData {
163: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
163: 1:  'expectedAnswer': '1',
163: 1:  'history': [],
163: 1:  'info': ['❌f(1) = ??? != 1'],
163: 1:  'level': 7,
163: 1:  'nextQuestion': '1',
163: 1:  'questions': ['1']
163: 1:}
163: 1:Scores: 9529
163: 1:Answer: message('['1']')
163: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
164: 1:BoardData {
164: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
164: 1:  'expectedAnswer': '1',
164: 1:  'history': [{
164: 1:    'answer': '1',
164: 1:    'question': '1',
164: 1:    'valid': true
164: 1:  }],
164: 1:  'info': [
164: 1:    '✅f(1) = 1',
164: 1:    '❌f(2) = ??? != 1'
164: 1:  ],
164: 1:  'level': 7,
164: 1:  'nextQuestion': '2',
164: 1:  'questions': [
164: 1:    '1',
164: 1:    '2'
164: 1:  ]
164: 1:}
164: 1:Scores: 9537
164: 1:Answer: message('['1', '1']')
164: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
165: 1:BoardData {
165: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
165: 1:  'expectedAnswer': '2',
165: 1:  'history': [
165: 1:    {
165: 1:      'answer': '1',
165: 1:      'question': '1',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '1',
165: 1:      'question': '2',
165: 1:      'valid': true
165: 1:    }
165: 1:  ],
165: 1:  'info': [
165: 1:    '✅f(1) = 1',
165: 1:    '✅f(2) = 1',
165: 1:    '❌f(3) = ??? != 2'
165: 1:  ],
165: 1:  'level': 7,
165: 1:  'nextQuestion': '3',
165: 1:  'questions': [
165: 1:    '1',
165: 1:    '2',
165: 1:    '3'
165: 1:  ]
165: 1:}
165: 1:Scores: 9545
165: 1:Answer: message('['1', '1', '2']')
165: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
166: 1:BoardData {
166: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
166: 1:  'expectedAnswer': '3',
166: 1:  'history': [
166: 1:    {
166: 1:      'answer': '1',
166: 1:      'question': '1',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '1',
166: 1:      'question': '2',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '2',
166: 1:      'question': '3',
166: 1:      'valid': true
166: 1:    }
166: 1:  ],
166: 1:  'info': [
166: 1:    '✅f(1) = 1',
166: 1:    '✅f(2) = 1',
166: 1:    '✅f(3) = 2',
166: 1:    '❌f(4) = ??? != 3'
166: 1:  ],
166: 1:  'level': 7,
166: 1:  'nextQuestion': '4',
166: 1:  'questions': [
166: 1:    '1',
166: 1:    '2',
166: 1:    '3',
166: 1:    '4'
166: 1:  ]
166: 1:}
166: 1:Scores: 9553
166: 1:Answer: message('['1', '1', '2', '3']')
166: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
167: 1:BoardData {
167: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
167: 1:  'expectedAnswer': '5',
167: 1:  'history': [
167: 1:    {
167: 1:      'answer': '1',
167: 1:      'question': '1',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '1',
167: 1:      'question': '2',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '2',
167: 1:      'question': '3',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '3',
167: 1:      'question': '4',
167: 1:      'valid': true
167: 1:    }
167: 1:  ],
167: 1:  'info': [
167: 1:    '✅f(1) = 1',
167: 1:    '✅f(2) = 1',
167: 1:    '✅f(3) = 2',
167: 1:    '✅f(4) = 3',
167: 1:    '❌f(5) = ??? != 5'
167: 1:  ],
167: 1:  'level': 7,
167: 1:  'nextQuestion': '5',
167: 1:  'questions': [
167: 1:    '1',
167: 1:    '2',
167: 1:    '3',
167: 1:    '4',
167: 1:    '5'
167: 1:  ]
167: 1:}
167: 1:Scores: 9561
167: 1:Answer: message('['1', '1', '2', '3', '5']')
167: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
168: 1:BoardData {
168: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
168: 1:  'expectedAnswer': '8',
168: 1:  'history': [
168: 1:    {
168: 1:      'answer': '1',
168: 1:      'question': '1',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '1',
168: 1:      'question': '2',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '2',
168: 1:      'question': '3',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '3',
168: 1:      'question': '4',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '5',
168: 1:      'question': '5',
168: 1:      'valid': true
168: 1:    }
168: 1:  ],
168: 1:  'info': [
168: 1:    '✅f(1) = 1',
168: 1:    '✅f(2) = 1',
168: 1:    '✅f(3) = 2',
168: 1:    '✅f(4) = 3',
168: 1:    '✅f(5) = 5',
168: 1:    '❌f(6) = ??? != 8'
168: 1:  ],
168: 1:  'level': 7,
168: 1:  'nextQuestion': '6',
168: 1:  'questions': [
168: 1:    '1',
168: 1:    '2',
168: 1:    '3',
168: 1:    '4',
168: 1:    '5',
168: 1:    '6'
168: 1:  ]
168: 1:}
168: 1:Scores: 9569
168: 1:Answer: message('['1', '1', '2', '3', '5', '8']')
168: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
169: 1:BoardData {
169: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
169: 1:  'expectedAnswer': '13',
169: 1:  'history': [
169: 1:    {
169: 1:      'answer': '1',
169: 1:      'question': '1',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '1',
169: 1:      'question': '2',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '2',
169: 1:      'question': '3',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '3',
169: 1:      'question': '4',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '5',
169: 1:      'question': '5',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '8',
169: 1:      'question': '6',
169: 1:      'valid': true
169: 1:    }
169: 1:  ],
169: 1:  'info': [
169: 1:    '✅f(1) = 1',
169: 1:    '✅f(2) = 1',
169: 1:    '✅f(3) = 2',
169: 1:    '✅f(4) = 3',
169: 1:    '✅f(5) = 5',
169: 1:    '✅f(6) = 8',
169: 1:    '❌f(7) = ??? != 13'
169: 1:  ],
169: 1:  'level': 7,
169: 1:  'nextQuestion': '7',
169: 1:  'questions': [
169: 1:    '1',
169: 1:    '2',
169: 1:    '3',
169: 1:    '4',
169: 1:    '5',
169: 1:    '6',
169: 1:    '7'
169: 1:  ]
169: 1:}
169: 1:Scores: 9577
169: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13']')
169: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
170: 1:BoardData {
170: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
170: 1:  'expectedAnswer': '21',
170: 1:  'history': [
170: 1:    {
170: 1:      'answer': '1',
170: 1:      'question': '1',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '1',
170: 1:      'question': '2',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '2',
170: 1:      'question': '3',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '3',
170: 1:      'question': '4',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '5',
170: 1:      'question': '5',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '8',
170: 1:      'question': '6',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '13',
170: 1:      'question': '7',
170: 1:      'valid': true
170: 1:    }
170: 1:  ],
170: 1:  'info': [
170: 1:    '✅f(1) = 1',
170: 1:    '✅f(2) = 1',
170: 1:    '✅f(3) = 2',
170: 1:    '✅f(4) = 3',
170: 1:    '✅f(5) = 5',
170: 1:    '✅f(6) = 8',
170: 1:    '✅f(7) = 13',
170: 1:    '❌f(8) = ??? != 21'
170: 1:  ],
170: 1:  'level': 7,
170: 1:  'nextQuestion': '8',
170: 1:  'questions': [
170: 1:    '1',
170: 1:    '2',
170: 1:    '3',
170: 1:    '4',
170: 1:    '5',
170: 1:    '6',
170: 1:    '7',
170: 1:    '8'
170: 1:  ]
170: 1:}
170: 1:Scores: 9585
170: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21']')
170: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
171: 1:BoardData {
171: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
171: 1:  'expectedAnswer': '34',
171: 1:  'history': [
171: 1:    {
171: 1:      'answer': '1',
171: 1:      'question': '1',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '1',
171: 1:      'question': '2',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '2',
171: 1:      'question': '3',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '3',
171: 1:      'question': '4',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '5',
171: 1:      'question': '5',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '8',
171: 1:      'question': '6',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '13',
171: 1:      'question': '7',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '21',
171: 1:      'question': '8',
171: 1:      'valid': true
171: 1:    }
171: 1:  ],
171: 1:  'info': [
171: 1:    '✅f(1) = 1',
171: 1:    '✅f(2) = 1',
171: 1:    '✅f(3) = 2',
171: 1:    '✅f(4) = 3',
171: 1:    '✅f(5) = 5',
171: 1:    '✅f(6) = 8',
171: 1:    '✅f(7) = 13',
171: 1:    '✅f(8) = 21',
171: 1:    '❌f(9) = ??? != 34'
171: 1:  ],
171: 1:  'level': 7,
171: 1:  'nextQuestion': '9',
171: 1:  'questions': [
171: 1:    '1',
171: 1:    '2',
171: 1:    '3',
171: 1:    '4',
171: 1:    '5',
171: 1:    '6',
171: 1:    '7',
171: 1:    '8',
171: 1:    '9'
171: 1:  ]
171: 1:}
171: 1:Scores: 9593
171: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34']')
171: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
172: 1:BoardData {
172: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
172: 1:  'expectedAnswer': '55',
172: 1:  'history': [
172: 1:    {
172: 1:      'answer': '1',
172: 1:      'question': '1',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '1',
172: 1:      'question': '2',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '2',
172: 1:      'question': '3',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '3',
172: 1:      'question': '4',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '5',
172: 1:      'question': '5',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '8',
172: 1:      'question': '6',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '13',
172: 1:      'question': '7',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '21',
172: 1:      'question': '8',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '34',
172: 1:      'question': '9',
172: 1:      'valid': true
172: 1:    }
172: 1:  ],
172: 1:  'info': [
172: 1:    '✅f(1) = 1',
172: 1:    '✅f(2) = 1',
172: 1:    '✅f(3) = 2',
172: 1:    '✅f(4) = 3',
172: 1:    '✅f(5) = 5',
172: 1:    '✅f(6) = 8',
172: 1:    '✅f(7) = 13',
172: 1:    '✅f(8) = 21',
172: 1:    '✅f(9) = 34',
172: 1:    '❌f(10) = ??? != 55'
172: 1:  ],
172: 1:  'level': 7,
172: 1:  'nextQuestion': '10',
172: 1:  'questions': [
172: 1:    '1',
172: 1:    '2',
172: 1:    '3',
172: 1:    '4',
172: 1:    '5',
172: 1:    '6',
172: 1:    '7',
172: 1:    '8',
172: 1:    '9',
172: 1:    '10'
172: 1:  ]
172: 1:}
172: 1:Scores: 9601
172: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55']')
172: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
173: 1:BoardData {
173: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
173: 1:  'expectedAnswer': '89',
173: 1:  'history': [
173: 1:    {
173: 1:      'answer': '1',
173: 1:      'question': '1',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '1',
173: 1:      'question': '2',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '2',
173: 1:      'question': '3',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '3',
173: 1:      'question': '4',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '5',
173: 1:      'question': '5',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '8',
173: 1:      'question': '6',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '13',
173: 1:      'question': '7',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '21',
173: 1:      'question': '8',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '34',
173: 1:      'question': '9',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '55',
173: 1:      'question': '10',
173: 1:      'valid': true
173: 1:    }
173: 1:  ],
173: 1:  'info': [
173: 1:    '✅f(1) = 1',
173: 1:    '✅f(2) = 1',
173: 1:    '✅f(3) = 2',
173: 1:    '✅f(4) = 3',
173: 1:    '✅f(5) = 5',
173: 1:    '✅f(6) = 8',
173: 1:    '✅f(7) = 13',
173: 1:    '✅f(8) = 21',
173: 1:    '✅f(9) = 34',
173: 1:    '✅f(10) = 55',
173: 1:    '❌f(11) = ??? != 89'
173: 1:  ],
173: 1:  'level': 7,
173: 1:  'nextQuestion': '11',
173: 1:  'questions': [
173: 1:    '1',
173: 1:    '2',
173: 1:    '3',
173: 1:    '4',
173: 1:    '5',
173: 1:    '6',
173: 1:    '7',
173: 1:    '8',
173: 1:    '9',
173: 1:    '10',
173: 1:    '11'
173: 1:  ]
173: 1:}
173: 1:Scores: 9609
173: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89']')
173: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
174: 1:BoardData {
174: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
174: 1:  'expectedAnswer': '144',
174: 1:  'history': [
174: 1:    {
174: 1:      'answer': '1',
174: 1:      'question': '1',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '1',
174: 1:      'question': '2',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '2',
174: 1:      'question': '3',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '3',
174: 1:      'question': '4',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '5',
174: 1:      'question': '5',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '8',
174: 1:      'question': '6',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '13',
174: 1:      'question': '7',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '21',
174: 1:      'question': '8',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '34',
174: 1:      'question': '9',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '55',
174: 1:      'question': '10',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '89',
174: 1:      'question': '11',
174: 1:      'valid': true
174: 1:    }
174: 1:  ],
174: 1:  'info': [
174: 1:    '✅f(1) = 1',
174: 1:    '✅f(2) = 1',
174: 1:    '✅f(3) = 2',
174: 1:    '✅f(4) = 3',
174: 1:    '✅f(5) = 5',
174: 1:    '✅f(6) = 8',
174: 1:    '✅f(7) = 13',
174: 1:    '✅f(8) = 21',
174: 1:    '✅f(9) = 34',
174: 1:    '✅f(10) = 55',
174: 1:    '✅f(11) = 89',
174: 1:    '❌f(12) = ??? != 144'
174: 1:  ],
174: 1:  'level': 7,
174: 1:  'nextQuestion': '12',
174: 1:  'questions': [
174: 1:    '1',
174: 1:    '2',
174: 1:    '3',
174: 1:    '4',
174: 1:    '5',
174: 1:    '6',
174: 1:    '7',
174: 1:    '8',
174: 1:    '9',
174: 1:    '10',
174: 1:    '11',
174: 1:    '12'
174: 1:  ]
174: 1:}
174: 1:Scores: 9617
174: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144']')
174: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
175: 1:BoardData {
175: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
175: 1:  'expectedAnswer': '233',
175: 1:  'history': [
175: 1:    {
175: 1:      'answer': '1',
175: 1:      'question': '1',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '1',
175: 1:      'question': '2',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '2',
175: 1:      'question': '3',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '3',
175: 1:      'question': '4',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '5',
175: 1:      'question': '5',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '8',
175: 1:      'question': '6',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '13',
175: 1:      'question': '7',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '21',
175: 1:      'question': '8',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '34',
175: 1:      'question': '9',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '55',
175: 1:      'question': '10',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '89',
175: 1:      'question': '11',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '144',
175: 1:      'question': '12',
175: 1:      'valid': true
175: 1:    }
175: 1:  ],
175: 1:  'info': [
175: 1:    '✅f(1) = 1',
175: 1:    '✅f(2) = 1',
175: 1:    '✅f(3) = 2',
175: 1:    '✅f(4) = 3',
175: 1:    '✅f(5) = 5',
175: 1:    '✅f(6) = 8',
175: 1:    '✅f(7) = 13',
175: 1:    '✅f(8) = 21',
175: 1:    '✅f(9) = 34',
175: 1:    '✅f(10) = 55',
175: 1:    '✅f(11) = 89',
175: 1:    '✅f(12) = 144',
175: 1:    '❌f(13) = ??? != 233'
175: 1:  ],
175: 1:  'level': 7,
175: 1:  'nextQuestion': '13',
175: 1:  'questions': [
175: 1:    '1',
175: 1:    '2',
175: 1:    '3',
175: 1:    '4',
175: 1:    '5',
175: 1:    '6',
175: 1:    '7',
175: 1:    '8',
175: 1:    '9',
175: 1:    '10',
175: 1:    '11',
175: 1:    '12',
175: 1:    '13'
175: 1:  ]
175: 1:}
175: 1:Scores: 9625
175: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233']')
175: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
176: 1:BoardData {
176: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
176: 1:  'expectedAnswer': '377',
176: 1:  'history': [
176: 1:    {
176: 1:      'answer': '1',
176: 1:      'question': '1',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '1',
176: 1:      'question': '2',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '2',
176: 1:      'question': '3',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '3',
176: 1:      'question': '4',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '5',
176: 1:      'question': '5',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '8',
176: 1:      'question': '6',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '13',
176: 1:      'question': '7',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '21',
176: 1:      'question': '8',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '34',
176: 1:      'question': '9',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '55',
176: 1:      'question': '10',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '89',
176: 1:      'question': '11',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '144',
176: 1:      'question': '12',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '233',
176: 1:      'question': '13',
176: 1:      'valid': true
176: 1:    }
176: 1:  ],
176: 1:  'info': [
176: 1:    '✅f(1) = 1',
176: 1:    '✅f(2) = 1',
176: 1:    '✅f(3) = 2',
176: 1:    '✅f(4) = 3',
176: 1:    '✅f(5) = 5',
176: 1:    '✅f(6) = 8',
176: 1:    '✅f(7) = 13',
176: 1:    '✅f(8) = 21',
176: 1:    '✅f(9) = 34',
176: 1:    '✅f(10) = 55',
176: 1:    '✅f(11) = 89',
176: 1:    '✅f(12) = 144',
176: 1:    '✅f(13) = 233',
176: 1:    '❌f(14) = ??? != 377'
176: 1:  ],
176: 1:  'level': 7,
176: 1:  'nextQuestion': '14',
176: 1:  'questions': [
176: 1:    '1',
176: 1:    '2',
176: 1:    '3',
176: 1:    '4',
176: 1:    '5',
176: 1:    '6',
176: 1:    '7',
176: 1:    '8',
176: 1:    '9',
176: 1:    '10',
176: 1:    '11',
176: 1:    '12',
176: 1:    '13',
176: 1:    '14'
176: 1:  ]
176: 1:}
176: 1:Scores: 9633
176: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377']')
176: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
177: 1:BoardData {
177: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
177: 1:  'expectedAnswer': '610',
177: 1:  'history': [
177: 1:    {
177: 1:      'answer': '1',
177: 1:      'question': '1',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '1',
177: 1:      'question': '2',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '2',
177: 1:      'question': '3',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '3',
177: 1:      'question': '4',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '5',
177: 1:      'question': '5',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '8',
177: 1:      'question': '6',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '13',
177: 1:      'question': '7',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '21',
177: 1:      'question': '8',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '34',
177: 1:      'question': '9',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '55',
177: 1:      'question': '10',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '89',
177: 1:      'question': '11',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '144',
177: 1:      'question': '12',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '233',
177: 1:      'question': '13',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '377',
177: 1:      'question': '14',
177: 1:      'valid': true
177: 1:    }
177: 1:  ],
177: 1:  'info': [
177: 1:    '✅f(1) = 1',
177: 1:    '✅f(2) = 1',
177: 1:    '✅f(3) = 2',
177: 1:    '✅f(4) = 3',
177: 1:    '✅f(5) = 5',
177: 1:    '✅f(6) = 8',
177: 1:    '✅f(7) = 13',
177: 1:    '✅f(8) = 21',
177: 1:    '✅f(9) = 34',
177: 1:    '✅f(10) = 55',
177: 1:    '✅f(11) = 89',
177: 1:    '✅f(12) = 144',
177: 1:    '✅f(13) = 233',
177: 1:    '✅f(14) = 377',
177: 1:    '❌f(15) = ??? != 610'
177: 1:  ],
177: 1:  'level': 7,
177: 1:  'nextQuestion': '15',
177: 1:  'questions': [
177: 1:    '1',
177: 1:    '2',
177: 1:    '3',
177: 1:    '4',
177: 1:    '5',
177: 1:    '6',
177: 1:    '7',
177: 1:    '8',
177: 1:    '9',
177: 1:    '10',
177: 1:    '11',
177: 1:    '12',
177: 1:    '13',
177: 1:    '14',
177: 1:    '15'
177: 1:  ]
177: 1:}
177: 1:Scores: 9641
177: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610']')
177: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
178: 1:BoardData {
178: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
178: 1:  'expectedAnswer': '987',
178: 1:  'history': [
178: 1:    {
178: 1:      'answer': '1',
178: 1:      'question': '1',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '1',
178: 1:      'question': '2',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '2',
178: 1:      'question': '3',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '3',
178: 1:      'question': '4',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '5',
178: 1:      'question': '5',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '8',
178: 1:      'question': '6',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '13',
178: 1:      'question': '7',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '21',
178: 1:      'question': '8',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '34',
178: 1:      'question': '9',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '55',
178: 1:      'question': '10',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '89',
178: 1:      'question': '11',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '144',
178: 1:      'question': '12',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '233',
178: 1:      'question': '13',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '377',
178: 1:      'question': '14',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '610',
178: 1:      'question': '15',
178: 1:      'valid': true
178: 1:    }
178: 1:  ],
178: 1:  'info': [
178: 1:    '✅f(1) = 1',
178: 1:    '✅f(2) = 1',
178: 1:    '✅f(3) = 2',
178: 1:    '✅f(4) = 3',
178: 1:    '✅f(5) = 5',
178: 1:    '✅f(6) = 8',
178: 1:    '✅f(7) = 13',
178: 1:    '✅f(8) = 21',
178: 1:    '✅f(9) = 34',
178: 1:    '✅f(10) = 55',
178: 1:    '✅f(11) = 89',
178: 1:    '✅f(12) = 144',
178: 1:    '✅f(13) = 233',
178: 1:    '✅f(14) = 377',
178: 1:    '✅f(15) = 610',
178: 1:    '❌f(16) = ??? != 987'
178: 1:  ],
178: 1:  'level': 7,
178: 1:  'nextQuestion': '16',
178: 1:  'questions': [
178: 1:    '1',
178: 1:    '2',
178: 1:    '3',
178: 1:    '4',
178: 1:    '5',
178: 1:    '6',
178: 1:    '7',
178: 1:    '8',
178: 1:    '9',
178: 1:    '10',
178: 1:    '11',
178: 1:    '12',
178: 1:    '13',
178: 1:    '14',
178: 1:    '15',
178: 1:    '16'
178: 1:  ]
178: 1:}
178: 1:Scores: 9649
178: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987']')
178: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
179: 1:BoardData {
179: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
179: 1:  'expectedAnswer': '1597',
179: 1:  'history': [
179: 1:    {
179: 1:      'answer': '1',
179: 1:      'question': '1',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '1',
179: 1:      'question': '2',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '2',
179: 1:      'question': '3',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '3',
179: 1:      'question': '4',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '5',
179: 1:      'question': '5',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '8',
179: 1:      'question': '6',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '13',
179: 1:      'question': '7',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '21',
179: 1:      'question': '8',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '34',
179: 1:      'question': '9',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '55',
179: 1:      'question': '10',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '89',
179: 1:      'question': '11',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '144',
179: 1:      'question': '12',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '233',
179: 1:      'question': '13',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '377',
179: 1:      'question': '14',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '610',
179: 1:      'question': '15',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '987',
179: 1:      'question': '16',
179: 1:      'valid': true
179: 1:    }
179: 1:  ],
179: 1:  'info': [
179: 1:    '✅f(1) = 1',
179: 1:    '✅f(2) = 1',
179: 1:    '✅f(3) = 2',
179: 1:    '✅f(4) = 3',
179: 1:    '✅f(5) = 5',
179: 1:    '✅f(6) = 8',
179: 1:    '✅f(7) = 13',
179: 1:    '✅f(8) = 21',
179: 1:    '✅f(9) = 34',
179: 1:    '✅f(10) = 55',
179: 1:    '✅f(11) = 89',
179: 1:    '✅f(12) = 144',
179: 1:    '✅f(13) = 233',
179: 1:    '✅f(14) = 377',
179: 1:    '✅f(15) = 610',
179: 1:    '✅f(16) = 987',
179: 1:    '❌f(17) = ??? != 1597'
179: 1:  ],
179: 1:  'level': 7,
179: 1:  'nextQuestion': '17',
179: 1:  'questions': [
179: 1:    '1',
179: 1:    '2',
179: 1:    '3',
179: 1:    '4',
179: 1:    '5',
179: 1:    '6',
179: 1:    '7',
179: 1:    '8',
179: 1:    '9',
179: 1:    '10',
179: 1:    '11',
179: 1:    '12',
179: 1:    '13',
179: 1:    '14',
179: 1:    '15',
179: 1:    '16',
179: 1:    '17'
179: 1:  ]
179: 1:}
179: 1:Scores: 9657
179: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597']')
179: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
180: 1:BoardData {
180: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
180: 1:  'expectedAnswer': '2584',
180: 1:  'history': [
180: 1:    {
180: 1:      'answer': '1',
180: 1:      'question': '1',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '1',
180: 1:      'question': '2',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '2',
180: 1:      'question': '3',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '3',
180: 1:      'question': '4',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '5',
180: 1:      'question': '5',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '8',
180: 1:      'question': '6',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '13',
180: 1:      'question': '7',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '21',
180: 1:      'question': '8',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '34',
180: 1:      'question': '9',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '55',
180: 1:      'question': '10',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '89',
180: 1:      'question': '11',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '144',
180: 1:      'question': '12',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '233',
180: 1:      'question': '13',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '377',
180: 1:      'question': '14',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '610',
180: 1:      'question': '15',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '987',
180: 1:      'question': '16',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '1597',
180: 1:      'question': '17',
180: 1:      'valid': true
180: 1:    }
180: 1:  ],
180: 1:  'info': [
180: 1:    '✅f(1) = 1',
180: 1:    '✅f(2) = 1',
180: 1:    '✅f(3) = 2',
180: 1:    '✅f(4) = 3',
180: 1:    '✅f(5) = 5',
180: 1:    '✅f(6) = 8',
180: 1:    '✅f(7) = 13',
180: 1:    '✅f(8) = 21',
180: 1:    '✅f(9) = 34',
180: 1:    '✅f(10) = 55',
180: 1:    '✅f(11) = 89',
180: 1:    '✅f(12) = 144',
180: 1:    '✅f(13) = 233',
180: 1:    '✅f(14) = 377',
180: 1:    '✅f(15) = 610',
180: 1:    '✅f(16) = 987',
180: 1:    '✅f(17) = 1597',
180: 1:    '❌f(18) = ??? != 2584'
180: 1:  ],
180: 1:  'level': 7,
180: 1:  'nextQuestion': '18',
180: 1:  'questions': [
180: 1:    '1',
180: 1:    '2',
180: 1:    '3',
180: 1:    '4',
180: 1:    '5',
180: 1:    '6',
180: 1:    '7',
180: 1:    '8',
180: 1:    '9',
180: 1:    '10',
180: 1:    '11',
180: 1:    '12',
180: 1:    '13',
180: 1:    '14',
180: 1:    '15',
180: 1:    '16',
180: 1:    '17',
180: 1:    '18'
180: 1:  ]
180: 1:}
180: 1:Scores: 9665
180: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584']')
180: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
181: 1:BoardData {
181: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
181: 1:  'expectedAnswer': '4181',
181: 1:  'history': [
181: 1:    {
181: 1:      'answer': '1',
181: 1:      'question': '1',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '1',
181: 1:      'question': '2',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '2',
181: 1:      'question': '3',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '3',
181: 1:      'question': '4',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '5',
181: 1:      'question': '5',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '8',
181: 1:      'question': '6',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '13',
181: 1:      'question': '7',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '21',
181: 1:      'question': '8',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '34',
181: 1:      'question': '9',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '55',
181: 1:      'question': '10',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '89',
181: 1:      'question': '11',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '144',
181: 1:      'question': '12',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '233',
181: 1:      'question': '13',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '377',
181: 1:      'question': '14',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '610',
181: 1:      'question': '15',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '987',
181: 1:      'question': '16',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '1597',
181: 1:      'question': '17',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '2584',
181: 1:      'question': '18',
181: 1:      'valid': true
181: 1:    }
181: 1:  ],
181: 1:  'info': [
181: 1:    '✅f(1) = 1',
181: 1:    '✅f(2) = 1',
181: 1:    '✅f(3) = 2',
181: 1:    '✅f(4) = 3',
181: 1:    '✅f(5) = 5',
181: 1:    '✅f(6) = 8',
181: 1:    '✅f(7) = 13',
181: 1:    '✅f(8) = 21',
181: 1:    '✅f(9) = 34',
181: 1:    '✅f(10) = 55',
181: 1:    '✅f(11) = 89',
181: 1:    '✅f(12) = 144',
181: 1:    '✅f(13) = 233',
181: 1:    '✅f(14) = 377',
181: 1:    '✅f(15) = 610',
181: 1:    '✅f(16) = 987',
181: 1:    '✅f(17) = 1597',
181: 1:    '✅f(18) = 2584',
181: 1:    '❌f(19) = ??? != 4181'
181: 1:  ],
181: 1:  'level': 7,
181: 1:  'nextQuestion': '19',
181: 1:  'questions': [
181: 1:    '1',
181: 1:    '2',
181: 1:    '3',
181: 1:    '4',
181: 1:    '5',
181: 1:    '6',
181: 1:    '7',
181: 1:    '8',
181: 1:    '9',
181: 1:    '10',
181: 1:    '11',
181: 1:    '12',
181: 1:    '13',
181: 1:    '14',
181: 1:    '15',
181: 1:    '16',
181: 1:    '17',
181: 1:    '18',
181: 1:    '19'
181: 1:  ]
181: 1:}
181: 1:Scores: 9673
181: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181']')
181: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
182: 1:BoardData {
182: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
182: 1:  'expectedAnswer': '6765',
182: 1:  'history': [
182: 1:    {
182: 1:      'answer': '1',
182: 1:      'question': '1',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '1',
182: 1:      'question': '2',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '2',
182: 1:      'question': '3',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '3',
182: 1:      'question': '4',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '5',
182: 1:      'question': '5',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '8',
182: 1:      'question': '6',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '13',
182: 1:      'question': '7',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '21',
182: 1:      'question': '8',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '34',
182: 1:      'question': '9',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '55',
182: 1:      'question': '10',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '89',
182: 1:      'question': '11',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '144',
182: 1:      'question': '12',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '233',
182: 1:      'question': '13',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '377',
182: 1:      'question': '14',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '610',
182: 1:      'question': '15',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '987',
182: 1:      'question': '16',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '1597',
182: 1:      'question': '17',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '2584',
182: 1:      'question': '18',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '4181',
182: 1:      'question': '19',
182: 1:      'valid': true
182: 1:    }
182: 1:  ],
182: 1:  'info': [
182: 1:    '✅f(1) = 1',
182: 1:    '✅f(2) = 1',
182: 1:    '✅f(3) = 2',
182: 1:    '✅f(4) = 3',
182: 1:    '✅f(5) = 5',
182: 1:    '✅f(6) = 8',
182: 1:    '✅f(7) = 13',
182: 1:    '✅f(8) = 21',
182: 1:    '✅f(9) = 34',
182: 1:    '✅f(10) = 55',
182: 1:    '✅f(11) = 89',
182: 1:    '✅f(12) = 144',
182: 1:    '✅f(13) = 233',
182: 1:    '✅f(14) = 377',
182: 1:    '✅f(15) = 610',
182: 1:    '✅f(16) = 987',
182: 1:    '✅f(17) = 1597',
182: 1:    '✅f(18) = 2584',
182: 1:    '✅f(19) = 4181',
182: 1:    '❌f(20) = ??? != 6765'
182: 1:  ],
182: 1:  'level': 7,
182: 1:  'nextQuestion': '20',
182: 1:  'questions': [
182: 1:    '1',
182: 1:    '2',
182: 1:    '3',
182: 1:    '4',
182: 1:    '5',
182: 1:    '6',
182: 1:    '7',
182: 1:    '8',
182: 1:    '9',
182: 1:    '10',
182: 1:    '11',
182: 1:    '12',
182: 1:    '13',
182: 1:    '14',
182: 1:    '15',
182: 1:    '16',
182: 1:    '17',
182: 1:    '18',
182: 1:    '19',
182: 1:    '20'
182: 1:  ]
182: 1:}
182: 1:Scores: 9681
182: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765']')
182: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
183: 1:BoardData {
183: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
183: 1:  'expectedAnswer': '10946',
183: 1:  'history': [
183: 1:    {
183: 1:      'answer': '1',
183: 1:      'question': '1',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '1',
183: 1:      'question': '2',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '2',
183: 1:      'question': '3',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '3',
183: 1:      'question': '4',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '5',
183: 1:      'question': '5',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '8',
183: 1:      'question': '6',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '13',
183: 1:      'question': '7',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '21',
183: 1:      'question': '8',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '34',
183: 1:      'question': '9',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '55',
183: 1:      'question': '10',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '89',
183: 1:      'question': '11',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '144',
183: 1:      'question': '12',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '233',
183: 1:      'question': '13',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '377',
183: 1:      'question': '14',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '610',
183: 1:      'question': '15',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '987',
183: 1:      'question': '16',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '1597',
183: 1:      'question': '17',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '2584',
183: 1:      'question': '18',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '4181',
183: 1:      'question': '19',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '6765',
183: 1:      'question': '20',
183: 1:      'valid': true
183: 1:    }
183: 1:  ],
183: 1:  'info': [
183: 1:    '✅f(1) = 1',
183: 1:    '✅f(2) = 1',
183: 1:    '✅f(3) = 2',
183: 1:    '✅f(4) = 3',
183: 1:    '✅f(5) = 5',
183: 1:    '✅f(6) = 8',
183: 1:    '✅f(7) = 13',
183: 1:    '✅f(8) = 21',
183: 1:    '✅f(9) = 34',
183: 1:    '✅f(10) = 55',
183: 1:    '✅f(11) = 89',
183: 1:    '✅f(12) = 144',
183: 1:    '✅f(13) = 233',
183: 1:    '✅f(14) = 377',
183: 1:    '✅f(15) = 610',
183: 1:    '✅f(16) = 987',
183: 1:    '✅f(17) = 1597',
183: 1:    '✅f(18) = 2584',
183: 1:    '✅f(19) = 4181',
183: 1:    '✅f(20) = 6765',
183: 1:    '❌f(21) = ??? != 10946'
183: 1:  ],
183: 1:  'level': 7,
183: 1:  'nextQuestion': '21',
183: 1:  'questions': [
183: 1:    '1',
183: 1:    '2',
183: 1:    '3',
183: 1:    '4',
183: 1:    '5',
183: 1:    '6',
183: 1:    '7',
183: 1:    '8',
183: 1:    '9',
183: 1:    '10',
183: 1:    '11',
183: 1:    '12',
183: 1:    '13',
183: 1:    '14',
183: 1:    '15',
183: 1:    '16',
183: 1:    '17',
183: 1:    '18',
183: 1:    '19',
183: 1:    '20',
183: 1:    '21'
183: 1:  ]
183: 1:}
183: 1:Scores: 9689
183: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946']')
183: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
184: 1:BoardData {
184: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
184: 1:  'expectedAnswer': '17711',
184: 1:  'history': [
184: 1:    {
184: 1:      'answer': '1',
184: 1:      'question': '1',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '1',
184: 1:      'question': '2',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '2',
184: 1:      'question': '3',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '3',
184: 1:      'question': '4',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '5',
184: 1:      'question': '5',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '8',
184: 1:      'question': '6',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '13',
184: 1:      'question': '7',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '21',
184: 1:      'question': '8',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '34',
184: 1:      'question': '9',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '55',
184: 1:      'question': '10',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '89',
184: 1:      'question': '11',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '144',
184: 1:      'question': '12',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '233',
184: 1:      'question': '13',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '377',
184: 1:      'question': '14',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '610',
184: 1:      'question': '15',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '987',
184: 1:      'question': '16',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '1597',
184: 1:      'question': '17',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '2584',
184: 1:      'question': '18',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '4181',
184: 1:      'question': '19',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '6765',
184: 1:      'question': '20',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '10946',
184: 1:      'question': '21',
184: 1:      'valid': true
184: 1:    }
184: 1:  ],
184: 1:  'info': [
184: 1:    '✅f(1) = 1',
184: 1:    '✅f(2) = 1',
184: 1:    '✅f(3) = 2',
184: 1:    '✅f(4) = 3',
184: 1:    '✅f(5) = 5',
184: 1:    '✅f(6) = 8',
184: 1:    '✅f(7) = 13',
184: 1:    '✅f(8) = 21',
184: 1:    '✅f(9) = 34',
184: 1:    '✅f(10) = 55',
184: 1:    '✅f(11) = 89',
184: 1:    '✅f(12) = 144',
184: 1:    '✅f(13) = 233',
184: 1:    '✅f(14) = 377',
184: 1:    '✅f(15) = 610',
184: 1:    '✅f(16) = 987',
184: 1:    '✅f(17) = 1597',
184: 1:    '✅f(18) = 2584',
184: 1:    '✅f(19) = 4181',
184: 1:    '✅f(20) = 6765',
184: 1:    '✅f(21) = 10946',
184: 1:    '❌f(22) = ??? != 17711'
184: 1:  ],
184: 1:  'level': 7,
184: 1:  'nextQuestion': '22',
184: 1:  'questions': [
184: 1:    '1',
184: 1:    '2',
184: 1:    '3',
184: 1:    '4',
184: 1:    '5',
184: 1:    '6',
184: 1:    '7',
184: 1:    '8',
184: 1:    '9',
184: 1:    '10',
184: 1:    '11',
184: 1:    '12',
184: 1:    '13',
184: 1:    '14',
184: 1:    '15',
184: 1:    '16',
184: 1:    '17',
184: 1:    '18',
184: 1:    '19',
184: 1:    '20',
184: 1:    '21',
184: 1:    '22'
184: 1:  ]
184: 1:}
184: 1:Scores: 9697
184: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711']')
184: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
185: 1:BoardData {
185: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
185: 1:  'expectedAnswer': '28657',
185: 1:  'history': [
185: 1:    {
185: 1:      'answer': '1',
185: 1:      'question': '1',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '1',
185: 1:      'question': '2',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '2',
185: 1:      'question': '3',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '3',
185: 1:      'question': '4',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '5',
185: 1:      'question': '5',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '8',
185: 1:      'question': '6',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '13',
185: 1:      'question': '7',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '21',
185: 1:      'question': '8',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '34',
185: 1:      'question': '9',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '55',
185: 1:      'question': '10',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '89',
185: 1:      'question': '11',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '144',
185: 1:      'question': '12',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '233',
185: 1:      'question': '13',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '377',
185: 1:      'question': '14',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '610',
185: 1:      'question': '15',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '987',
185: 1:      'question': '16',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '1597',
185: 1:      'question': '17',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '2584',
185: 1:      'question': '18',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '4181',
185: 1:      'question': '19',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '6765',
185: 1:      'question': '20',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '10946',
185: 1:      'question': '21',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '17711',
185: 1:      'question': '22',
185: 1:      'valid': true
185: 1:    }
185: 1:  ],
185: 1:  'info': [
185: 1:    '✅f(1) = 1',
185: 1:    '✅f(2) = 1',
185: 1:    '✅f(3) = 2',
185: 1:    '✅f(4) = 3',
185: 1:    '✅f(5) = 5',
185: 1:    '✅f(6) = 8',
185: 1:    '✅f(7) = 13',
185: 1:    '✅f(8) = 21',
185: 1:    '✅f(9) = 34',
185: 1:    '✅f(10) = 55',
185: 1:    '✅f(11) = 89',
185: 1:    '✅f(12) = 144',
185: 1:    '✅f(13) = 233',
185: 1:    '✅f(14) = 377',
185: 1:    '✅f(15) = 610',
185: 1:    '✅f(16) = 987',
185: 1:    '✅f(17) = 1597',
185: 1:    '✅f(18) = 2584',
185: 1:    '✅f(19) = 4181',
185: 1:    '✅f(20) = 6765',
185: 1:    '✅f(21) = 10946',
185: 1:    '✅f(22) = 17711',
185: 1:    '❌f(23) = ??? != 28657'
185: 1:  ],
185: 1:  'level': 7,
185: 1:  'nextQuestion': '23',
185: 1:  'questions': [
185: 1:    '1',
185: 1:    '2',
185: 1:    '3',
185: 1:    '4',
185: 1:    '5',
185: 1:    '6',
185: 1:    '7',
185: 1:    '8',
185: 1:    '9',
185: 1:    '10',
185: 1:    '11',
185: 1:    '12',
185: 1:    '13',
185: 1:    '14',
185: 1:    '15',
185: 1:    '16',
185: 1:    '17',
185: 1:    '18',
185: 1:    '19',
185: 1:    '20',
185: 1:    '21',
185: 1:    '22',
185: 1:    '23'
185: 1:  ]
185: 1:}
185: 1:Scores: 9705
185: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657']')
185: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
186: 1:BoardData {
186: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
186: 1:  'expectedAnswer': '46368',
186: 1:  'history': [
186: 1:    {
186: 1:      'answer': '1',
186: 1:      'question': '1',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '1',
186: 1:      'question': '2',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '2',
186: 1:      'question': '3',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '3',
186: 1:      'question': '4',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '5',
186: 1:      'question': '5',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '8',
186: 1:      'question': '6',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '13',
186: 1:      'question': '7',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '21',
186: 1:      'question': '8',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '34',
186: 1:      'question': '9',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '55',
186: 1:      'question': '10',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '89',
186: 1:      'question': '11',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '144',
186: 1:      'question': '12',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '233',
186: 1:      'question': '13',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '377',
186: 1:      'question': '14',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '610',
186: 1:      'question': '15',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '987',
186: 1:      'question': '16',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '1597',
186: 1:      'question': '17',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '2584',
186: 1:      'question': '18',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '4181',
186: 1:      'question': '19',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '6765',
186: 1:      'question': '20',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '10946',
186: 1:      'question': '21',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '17711',
186: 1:      'question': '22',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '28657',
186: 1:      'question': '23',
186: 1:      'valid': true
186: 1:    }
186: 1:  ],
186: 1:  'info': [
186: 1:    '✅f(1) = 1',
186: 1:    '✅f(2) = 1',
186: 1:    '✅f(3) = 2',
186: 1:    '✅f(4) = 3',
186: 1:    '✅f(5) = 5',
186: 1:    '✅f(6) = 8',
186: 1:    '✅f(7) = 13',
186: 1:    '✅f(8) = 21',
186: 1:    '✅f(9) = 34',
186: 1:    '✅f(10) = 55',
186: 1:    '✅f(11) = 89',
186: 1:    '✅f(12) = 144',
186: 1:    '✅f(13) = 233',
186: 1:    '✅f(14) = 377',
186: 1:    '✅f(15) = 610',
186: 1:    '✅f(16) = 987',
186: 1:    '✅f(17) = 1597',
186: 1:    '✅f(18) = 2584',
186: 1:    '✅f(19) = 4181',
186: 1:    '✅f(20) = 6765',
186: 1:    '✅f(21) = 10946',
186: 1:    '✅f(22) = 17711',
186: 1:    '✅f(23) = 28657',
186: 1:    '❌f(24) = ??? != 46368'
186: 1:  ],
186: 1:  'level': 7,
186: 1:  'nextQuestion': '24',
186: 1:  'questions': [
186: 1:    '1',
186: 1:    '2',
186: 1:    '3',
186: 1:    '4',
186: 1:    '5',
186: 1:    '6',
186: 1:    '7',
186: 1:    '8',
186: 1:    '9',
186: 1:    '10',
186: 1:    '11',
186: 1:    '12',
186: 1:    '13',
186: 1:    '14',
186: 1:    '15',
186: 1:    '16',
186: 1:    '17',
186: 1:    '18',
186: 1:    '19',
186: 1:    '20',
186: 1:    '21',
186: 1:    '22',
186: 1:    '23',
186: 1:    '24'
186: 1:  ]
186: 1:}
186: 1:Scores: 9713
186: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657', '46368']')
186: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
187: 1:BoardData {
187: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
187: 1:  'expectedAnswer': '75025',
187: 1:  'history': [
187: 1:    {
187: 1:      'answer': '1',
187: 1:      'question': '1',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '1',
187: 1:      'question': '2',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '2',
187: 1:      'question': '3',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '3',
187: 1:      'question': '4',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '5',
187: 1:      'question': '5',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '8',
187: 1:      'question': '6',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '13',
187: 1:      'question': '7',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '21',
187: 1:      'question': '8',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '34',
187: 1:      'question': '9',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '55',
187: 1:      'question': '10',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '89',
187: 1:      'question': '11',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '144',
187: 1:      'question': '12',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '233',
187: 1:      'question': '13',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '377',
187: 1:      'question': '14',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '610',
187: 1:      'question': '15',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '987',
187: 1:      'question': '16',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '1597',
187: 1:      'question': '17',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '2584',
187: 1:      'question': '18',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '4181',
187: 1:      'question': '19',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '6765',
187: 1:      'question': '20',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '10946',
187: 1:      'question': '21',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '17711',
187: 1:      'question': '22',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '28657',
187: 1:      'question': '23',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '46368',
187: 1:      'question': '24',
187: 1:      'valid': true
187: 1:    }
187: 1:  ],
187: 1:  'info': [
187: 1:    '✅f(1) = 1',
187: 1:    '✅f(2) = 1',
187: 1:    '✅f(3) = 2',
187: 1:    '✅f(4) = 3',
187: 1:    '✅f(5) = 5',
187: 1:    '✅f(6) = 8',
187: 1:    '✅f(7) = 13',
187: 1:    '✅f(8) = 21',
187: 1:    '✅f(9) = 34',
187: 1:    '✅f(10) = 55',
187: 1:    '✅f(11) = 89',
187: 1:    '✅f(12) = 144',
187: 1:    '✅f(13) = 233',
187: 1:    '✅f(14) = 377',
187: 1:    '✅f(15) = 610',
187: 1:    '✅f(16) = 987',
187: 1:    '✅f(17) = 1597',
187: 1:    '✅f(18) = 2584',
187: 1:    '✅f(19) = 4181',
187: 1:    '✅f(20) = 6765',
187: 1:    '✅f(21) = 10946',
187: 1:    '✅f(22) = 17711',
187: 1:    '✅f(23) = 28657',
187: 1:    '✅f(24) = 46368',
187: 1:    '❌f(25) = ??? != 75025'
187: 1:  ],
187: 1:  'level': 7,
187: 1:  'nextQuestion': '25',
187: 1:  'questions': [
187: 1:    '1',
187: 1:    '2',
187: 1:    '3',
187: 1:    '4',
187: 1:    '5',
187: 1:    '6',
187: 1:    '7',
187: 1:    '8',
187: 1:    '9',
187: 1:    '10',
187: 1:    '11',
187: 1:    '12',
187: 1:    '13',
187: 1:    '14',
187: 1:    '15',
187: 1:    '16',
187: 1:    '17',
187: 1:    '18',
187: 1:    '19',
187: 1:    '20',
187: 1:    '21',
187: 1:    '22',
187: 1:    '23',
187: 1:    '24',
187: 1:    '25'
187: 1:  ]
187: 1:}
187: 1:Scores: 9721
187: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657', '46368', '75025']')
187: 1:Fire Event: PassTest{complexity=20, testCount=25}
187: 1:Fire Event: NextAlgorithm{complexity=20, time=0}
------------------------------------------
188: 1:BoardData {
188: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
188: 1:  'history': [
188: 1:    {
188: 1:      'answer': '1',
188: 1:      'question': '1',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '1',
188: 1:      'question': '2',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '2',
188: 1:      'question': '3',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '3',
188: 1:      'question': '4',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '5',
188: 1:      'question': '5',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '8',
188: 1:      'question': '6',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '13',
188: 1:      'question': '7',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '21',
188: 1:      'question': '8',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '34',
188: 1:      'question': '9',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '55',
188: 1:      'question': '10',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '89',
188: 1:      'question': '11',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '144',
188: 1:      'question': '12',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '233',
188: 1:      'question': '13',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '377',
188: 1:      'question': '14',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '610',
188: 1:      'question': '15',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '987',
188: 1:      'question': '16',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '1597',
188: 1:      'question': '17',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '2584',
188: 1:      'question': '18',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '4181',
188: 1:      'question': '19',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '6765',
188: 1:      'question': '20',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '10946',
188: 1:      'question': '21',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '17711',
188: 1:      'question': '22',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '28657',
188: 1:      'question': '23',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '46368',
188: 1:      'question': '24',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '75025',
188: 1:      'question': '25',
188: 1:      'valid': true
188: 1:    }
188: 1:  ],
188: 1:  'info': [
188: 1:    '✅f(1) = 1',
188: 1:    '✅f(2) = 1',
188: 1:    '✅f(3) = 2',
188: 1:    '✅f(4) = 3',
188: 1:    '✅f(5) = 5',
188: 1:    '✅f(6) = 8',
188: 1:    '✅f(7) = 13',
188: 1:    '✅f(8) = 21',
188: 1:    '✅f(9) = 34',
188: 1:    '✅f(10) = 55',
188: 1:    '✅f(11) = 89',
188: 1:    '✅f(12) = 144',
188: 1:    '✅f(13) = 233',
188: 1:    '✅f(14) = 377',
188: 1:    '✅f(15) = 610',
188: 1:    '✅f(16) = 987',
188: 1:    '✅f(17) = 1597',
188: 1:    '✅f(18) = 2584',
188: 1:    '✅f(19) = 4181',
188: 1:    '✅f(20) = 6765',
188: 1:    '✅f(21) = 10946',
188: 1:    '✅f(22) = 17711',
188: 1:    '✅f(23) = 28657',
188: 1:    '✅f(24) = 46368',
188: 1:    '✅f(25) = 75025'
188: 1:  ],
188: 1:  'level': 7,
188: 1:  'questions': []
188: 1:}
188: 1:Scores: 12428
188: 1:Answer: message('StartNextLevel')
188: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
189: 1:BoardData {
189: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
189: 1:  'expectedAnswer': '[1]',
189: 1:  'history': [],
189: 1:  'info': ['❌f(1) = ??? != [1]'],
189: 1:  'level': 8,
189: 1:  'nextQuestion': '1',
189: 1:  'questions': ['1']
189: 1:}
189: 1:Scores: 12428
189: 1:Answer: message('['[1]']')
189: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
190: 1:BoardData {
190: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
190: 1:  'expectedAnswer': '[2]',
190: 1:  'history': [{
190: 1:    'answer': '[1]',
190: 1:    'question': '1',
190: 1:    'valid': true
190: 1:  }],
190: 1:  'info': [
190: 1:    '✅f(1) = [1]',
190: 1:    '❌f(2) = ??? != [2]'
190: 1:  ],
190: 1:  'level': 8,
190: 1:  'nextQuestion': '2',
190: 1:  'questions': [
190: 1:    '1',
190: 1:    '2'
190: 1:  ]
190: 1:}
190: 1:Scores: 12438
190: 1:Answer: message('['[1]', '[2]']')
190: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
191: 1:BoardData {
191: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
191: 1:  'expectedAnswer': '[3]',
191: 1:  'history': [
191: 1:    {
191: 1:      'answer': '[1]',
191: 1:      'question': '1',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2]',
191: 1:      'question': '2',
191: 1:      'valid': true
191: 1:    }
191: 1:  ],
191: 1:  'info': [
191: 1:    '✅f(1) = [1]',
191: 1:    '✅f(2) = [2]',
191: 1:    '❌f(3) = ??? != [3]'
191: 1:  ],
191: 1:  'level': 8,
191: 1:  'nextQuestion': '3',
191: 1:  'questions': [
191: 1:    '1',
191: 1:    '2',
191: 1:    '3'
191: 1:  ]
191: 1:}
191: 1:Scores: 12448
191: 1:Answer: message('['[1]', '[2]', '[3]']')
191: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
192: 1:BoardData {
192: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
192: 1:  'expectedAnswer': '[2,2]',
192: 1:  'history': [
192: 1:    {
192: 1:      'answer': '[1]',
192: 1:      'question': '1',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2]',
192: 1:      'question': '2',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[3]',
192: 1:      'question': '3',
192: 1:      'valid': true
192: 1:    }
192: 1:  ],
192: 1:  'info': [
192: 1:    '✅f(1) = [1]',
192: 1:    '✅f(2) = [2]',
192: 1:    '✅f(3) = [3]',
192: 1:    '❌f(4) = ??? != [2,2]'
192: 1:  ],
192: 1:  'level': 8,
192: 1:  'nextQuestion': '4',
192: 1:  'questions': [
192: 1:    '1',
192: 1:    '2',
192: 1:    '3',
192: 1:    '4'
192: 1:  ]
192: 1:}
192: 1:Scores: 12458
192: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]']')
192: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
193: 1:BoardData {
193: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
193: 1:  'expectedAnswer': '[5]',
193: 1:  'history': [
193: 1:    {
193: 1:      'answer': '[1]',
193: 1:      'question': '1',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2]',
193: 1:      'question': '2',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[3]',
193: 1:      'question': '3',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,2]',
193: 1:      'question': '4',
193: 1:      'valid': true
193: 1:    }
193: 1:  ],
193: 1:  'info': [
193: 1:    '✅f(1) = [1]',
193: 1:    '✅f(2) = [2]',
193: 1:    '✅f(3) = [3]',
193: 1:    '✅f(4) = [2,2]',
193: 1:    '❌f(5) = ??? != [5]'
193: 1:  ],
193: 1:  'level': 8,
193: 1:  'nextQuestion': '5',
193: 1:  'questions': [
193: 1:    '1',
193: 1:    '2',
193: 1:    '3',
193: 1:    '4',
193: 1:    '5'
193: 1:  ]
193: 1:}
193: 1:Scores: 12468
193: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]']')
193: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
194: 1:BoardData {
194: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
194: 1:  'expectedAnswer': '[2,3]',
194: 1:  'history': [
194: 1:    {
194: 1:      'answer': '[1]',
194: 1:      'question': '1',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2]',
194: 1:      'question': '2',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[3]',
194: 1:      'question': '3',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,2]',
194: 1:      'question': '4',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[5]',
194: 1:      'question': '5',
194: 1:      'valid': true
194: 1:    }
194: 1:  ],
194: 1:  'info': [
194: 1:    '✅f(1) = [1]',
194: 1:    '✅f(2) = [2]',
194: 1:    '✅f(3) = [3]',
194: 1:    '✅f(4) = [2,2]',
194: 1:    '✅f(5) = [5]',
194: 1:    '❌f(6) = ??? != [2,3]'
194: 1:  ],
194: 1:  'level': 8,
194: 1:  'nextQuestion': '6',
194: 1:  'questions': [
194: 1:    '1',
194: 1:    '2',
194: 1:    '3',
194: 1:    '4',
194: 1:    '5',
194: 1:    '6'
194: 1:  ]
194: 1:}
194: 1:Scores: 12478
194: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]']')
194: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
195: 1:BoardData {
195: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
195: 1:  'expectedAnswer': '[7]',
195: 1:  'history': [
195: 1:    {
195: 1:      'answer': '[1]',
195: 1:      'question': '1',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2]',
195: 1:      'question': '2',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[3]',
195: 1:      'question': '3',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,2]',
195: 1:      'question': '4',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[5]',
195: 1:      'question': '5',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,3]',
195: 1:      'question': '6',
195: 1:      'valid': true
195: 1:    }
195: 1:  ],
195: 1:  'info': [
195: 1:    '✅f(1) = [1]',
195: 1:    '✅f(2) = [2]',
195: 1:    '✅f(3) = [3]',
195: 1:    '✅f(4) = [2,2]',
195: 1:    '✅f(5) = [5]',
195: 1:    '✅f(6) = [2,3]',
195: 1:    '❌f(7) = ??? != [7]'
195: 1:  ],
195: 1:  'level': 8,
195: 1:  'nextQuestion': '7',
195: 1:  'questions': [
195: 1:    '1',
195: 1:    '2',
195: 1:    '3',
195: 1:    '4',
195: 1:    '5',
195: 1:    '6',
195: 1:    '7'
195: 1:  ]
195: 1:}
195: 1:Scores: 12488
195: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]']')
195: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
196: 1:BoardData {
196: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
196: 1:  'expectedAnswer': '[2,2,2]',
196: 1:  'history': [
196: 1:    {
196: 1:      'answer': '[1]',
196: 1:      'question': '1',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2]',
196: 1:      'question': '2',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[3]',
196: 1:      'question': '3',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,2]',
196: 1:      'question': '4',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[5]',
196: 1:      'question': '5',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,3]',
196: 1:      'question': '6',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[7]',
196: 1:      'question': '7',
196: 1:      'valid': true
196: 1:    }
196: 1:  ],
196: 1:  'info': [
196: 1:    '✅f(1) = [1]',
196: 1:    '✅f(2) = [2]',
196: 1:    '✅f(3) = [3]',
196: 1:    '✅f(4) = [2,2]',
196: 1:    '✅f(5) = [5]',
196: 1:    '✅f(6) = [2,3]',
196: 1:    '✅f(7) = [7]',
196: 1:    '❌f(8) = ??? != [2,2,2]'
196: 1:  ],
196: 1:  'level': 8,
196: 1:  'nextQuestion': '8',
196: 1:  'questions': [
196: 1:    '1',
196: 1:    '2',
196: 1:    '3',
196: 1:    '4',
196: 1:    '5',
196: 1:    '6',
196: 1:    '7',
196: 1:    '8'
196: 1:  ]
196: 1:}
196: 1:Scores: 12498
196: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]']')
196: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
197: 1:BoardData {
197: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
197: 1:  'expectedAnswer': '[3,3]',
197: 1:  'history': [
197: 1:    {
197: 1:      'answer': '[1]',
197: 1:      'question': '1',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2]',
197: 1:      'question': '2',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[3]',
197: 1:      'question': '3',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,2]',
197: 1:      'question': '4',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[5]',
197: 1:      'question': '5',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,3]',
197: 1:      'question': '6',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[7]',
197: 1:      'question': '7',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,2,2]',
197: 1:      'question': '8',
197: 1:      'valid': true
197: 1:    }
197: 1:  ],
197: 1:  'info': [
197: 1:    '✅f(1) = [1]',
197: 1:    '✅f(2) = [2]',
197: 1:    '✅f(3) = [3]',
197: 1:    '✅f(4) = [2,2]',
197: 1:    '✅f(5) = [5]',
197: 1:    '✅f(6) = [2,3]',
197: 1:    '✅f(7) = [7]',
197: 1:    '✅f(8) = [2,2,2]',
197: 1:    '❌f(9) = ??? != [3,3]'
197: 1:  ],
197: 1:  'level': 8,
197: 1:  'nextQuestion': '9',
197: 1:  'questions': [
197: 1:    '1',
197: 1:    '2',
197: 1:    '3',
197: 1:    '4',
197: 1:    '5',
197: 1:    '6',
197: 1:    '7',
197: 1:    '8',
197: 1:    '9'
197: 1:  ]
197: 1:}
197: 1:Scores: 12508
197: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]']')
197: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
198: 1:BoardData {
198: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
198: 1:  'expectedAnswer': '[2,5]',
198: 1:  'history': [
198: 1:    {
198: 1:      'answer': '[1]',
198: 1:      'question': '1',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2]',
198: 1:      'question': '2',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[3]',
198: 1:      'question': '3',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,2]',
198: 1:      'question': '4',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[5]',
198: 1:      'question': '5',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,3]',
198: 1:      'question': '6',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[7]',
198: 1:      'question': '7',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,2,2]',
198: 1:      'question': '8',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[3,3]',
198: 1:      'question': '9',
198: 1:      'valid': true
198: 1:    }
198: 1:  ],
198: 1:  'info': [
198: 1:    '✅f(1) = [1]',
198: 1:    '✅f(2) = [2]',
198: 1:    '✅f(3) = [3]',
198: 1:    '✅f(4) = [2,2]',
198: 1:    '✅f(5) = [5]',
198: 1:    '✅f(6) = [2,3]',
198: 1:    '✅f(7) = [7]',
198: 1:    '✅f(8) = [2,2,2]',
198: 1:    '✅f(9) = [3,3]',
198: 1:    '❌f(10) = ??? != [2,5]'
198: 1:  ],
198: 1:  'level': 8,
198: 1:  'nextQuestion': '10',
198: 1:  'questions': [
198: 1:    '1',
198: 1:    '2',
198: 1:    '3',
198: 1:    '4',
198: 1:    '5',
198: 1:    '6',
198: 1:    '7',
198: 1:    '8',
198: 1:    '9',
198: 1:    '10'
198: 1:  ]
198: 1:}
198: 1:Scores: 12518
198: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]']')
198: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
199: 1:BoardData {
199: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
199: 1:  'expectedAnswer': '[11]',
199: 1:  'history': [
199: 1:    {
199: 1:      'answer': '[1]',
199: 1:      'question': '1',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[2]',
199: 1:      'question': '2',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[3]',
199: 1:      'question': '3',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[2,2]',
199: 1:      'question': '4',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[5]',
199: 1:      'question': '5',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[2,3]',
199: 1:      'question': '6',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[7]',
199: 1:      'question': '7',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[2,2,2]',
199: 1:      'question': '8',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[3,3]',
199: 1:      'question': '9',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '[2,5]',
199: 1:      'question': '10',
199: 1:      'valid': true
199: 1:    }
199: 1:  ],
199: 1:  'info': [
199: 1:    '✅f(1) = [1]',
199: 1:    '✅f(2) = [2]',
199: 1:    '✅f(3) = [3]',
199: 1:    '✅f(4) = [2,2]',
199: 1:    '✅f(5) = [5]',
199: 1:    '✅f(6) = [2,3]',
199: 1:    '✅f(7) = [7]',
199: 1:    '✅f(8) = [2,2,2]',
199: 1:    '✅f(9) = [3,3]',
199: 1:    '✅f(10) = [2,5]',
199: 1:    '❌f(11) = ??? != [11]'
199: 1:  ],
199: 1:  'level': 8,
199: 1:  'nextQuestion': '11',
199: 1:  'questions': [
199: 1:    '1',
199: 1:    '2',
199: 1:    '3',
199: 1:    '4',
199: 1:    '5',
199: 1:    '6',
199: 1:    '7',
199: 1:    '8',
199: 1:    '9',
199: 1:    '10',
199: 1:    '11'
199: 1:  ]
199: 1:}
199: 1:Scores: 12528
199: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]']')
199: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
200: 1:BoardData {
200: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
200: 1:  'expectedAnswer': '[2,2,3]',
200: 1:  'history': [
200: 1:    {
200: 1:      'answer': '[1]',
200: 1:      'question': '1',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[2]',
200: 1:      'question': '2',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[3]',
200: 1:      'question': '3',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[2,2]',
200: 1:      'question': '4',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[5]',
200: 1:      'question': '5',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[2,3]',
200: 1:      'question': '6',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[7]',
200: 1:      'question': '7',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[2,2,2]',
200: 1:      'question': '8',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[3,3]',
200: 1:      'question': '9',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[2,5]',
200: 1:      'question': '10',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '[11]',
200: 1:      'question': '11',
200: 1:      'valid': true
200: 1:    }
200: 1:  ],
200: 1:  'info': [
200: 1:    '✅f(1) = [1]',
200: 1:    '✅f(2) = [2]',
200: 1:    '✅f(3) = [3]',
200: 1:    '✅f(4) = [2,2]',
200: 1:    '✅f(5) = [5]',
200: 1:    '✅f(6) = [2,3]',
200: 1:    '✅f(7) = [7]',
200: 1:    '✅f(8) = [2,2,2]',
200: 1:    '✅f(9) = [3,3]',
200: 1:    '✅f(10) = [2,5]',
200: 1:    '✅f(11) = [11]',
200: 1:    '❌f(12) = ??? != [2,2,3]'
200: 1:  ],
200: 1:  'level': 8,
200: 1:  'nextQuestion': '12',
200: 1:  'questions': [
200: 1:    '1',
200: 1:    '2',
200: 1:    '3',
200: 1:    '4',
200: 1:    '5',
200: 1:    '6',
200: 1:    '7',
200: 1:    '8',
200: 1:    '9',
200: 1:    '10',
200: 1:    '11',
200: 1:    '12'
200: 1:  ]
200: 1:}
200: 1:Scores: 12538
200: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]']')
200: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
201: 1:BoardData {
201: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
201: 1:  'expectedAnswer': '[13]',
201: 1:  'history': [
201: 1:    {
201: 1:      'answer': '[1]',
201: 1:      'question': '1',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[2]',
201: 1:      'question': '2',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[3]',
201: 1:      'question': '3',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[2,2]',
201: 1:      'question': '4',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[5]',
201: 1:      'question': '5',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[2,3]',
201: 1:      'question': '6',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[7]',
201: 1:      'question': '7',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[2,2,2]',
201: 1:      'question': '8',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[3,3]',
201: 1:      'question': '9',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[2,5]',
201: 1:      'question': '10',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[11]',
201: 1:      'question': '11',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '[2,2,3]',
201: 1:      'question': '12',
201: 1:      'valid': true
201: 1:    }
201: 1:  ],
201: 1:  'info': [
201: 1:    '✅f(1) = [1]',
201: 1:    '✅f(2) = [2]',
201: 1:    '✅f(3) = [3]',
201: 1:    '✅f(4) = [2,2]',
201: 1:    '✅f(5) = [5]',
201: 1:    '✅f(6) = [2,3]',
201: 1:    '✅f(7) = [7]',
201: 1:    '✅f(8) = [2,2,2]',
201: 1:    '✅f(9) = [3,3]',
201: 1:    '✅f(10) = [2,5]',
201: 1:    '✅f(11) = [11]',
201: 1:    '✅f(12) = [2,2,3]',
201: 1:    '❌f(13) = ??? != [13]'
201: 1:  ],
201: 1:  'level': 8,
201: 1:  'nextQuestion': '13',
201: 1:  'questions': [
201: 1:    '1',
201: 1:    '2',
201: 1:    '3',
201: 1:    '4',
201: 1:    '5',
201: 1:    '6',
201: 1:    '7',
201: 1:    '8',
201: 1:    '9',
201: 1:    '10',
201: 1:    '11',
201: 1:    '12',
201: 1:    '13'
201: 1:  ]
201: 1:}
201: 1:Scores: 12548
201: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]']')
201: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
202: 1:BoardData {
202: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
202: 1:  'expectedAnswer': '[2,7]',
202: 1:  'history': [
202: 1:    {
202: 1:      'answer': '[1]',
202: 1:      'question': '1',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[2]',
202: 1:      'question': '2',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[3]',
202: 1:      'question': '3',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[2,2]',
202: 1:      'question': '4',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[5]',
202: 1:      'question': '5',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[2,3]',
202: 1:      'question': '6',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[7]',
202: 1:      'question': '7',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[2,2,2]',
202: 1:      'question': '8',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[3,3]',
202: 1:      'question': '9',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[2,5]',
202: 1:      'question': '10',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[11]',
202: 1:      'question': '11',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[2,2,3]',
202: 1:      'question': '12',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '[13]',
202: 1:      'question': '13',
202: 1:      'valid': true
202: 1:    }
202: 1:  ],
202: 1:  'info': [
202: 1:    '✅f(1) = [1]',
202: 1:    '✅f(2) = [2]',
202: 1:    '✅f(3) = [3]',
202: 1:    '✅f(4) = [2,2]',
202: 1:    '✅f(5) = [5]',
202: 1:    '✅f(6) = [2,3]',
202: 1:    '✅f(7) = [7]',
202: 1:    '✅f(8) = [2,2,2]',
202: 1:    '✅f(9) = [3,3]',
202: 1:    '✅f(10) = [2,5]',
202: 1:    '✅f(11) = [11]',
202: 1:    '✅f(12) = [2,2,3]',
202: 1:    '✅f(13) = [13]',
202: 1:    '❌f(14) = ??? != [2,7]'
202: 1:  ],
202: 1:  'level': 8,
202: 1:  'nextQuestion': '14',
202: 1:  'questions': [
202: 1:    '1',
202: 1:    '2',
202: 1:    '3',
202: 1:    '4',
202: 1:    '5',
202: 1:    '6',
202: 1:    '7',
202: 1:    '8',
202: 1:    '9',
202: 1:    '10',
202: 1:    '11',
202: 1:    '12',
202: 1:    '13',
202: 1:    '14'
202: 1:  ]
202: 1:}
202: 1:Scores: 12558
202: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]']')
202: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
203: 1:BoardData {
203: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
203: 1:  'expectedAnswer': '[3,5]',
203: 1:  'history': [
203: 1:    {
203: 1:      'answer': '[1]',
203: 1:      'question': '1',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[2]',
203: 1:      'question': '2',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[3]',
203: 1:      'question': '3',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[2,2]',
203: 1:      'question': '4',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[5]',
203: 1:      'question': '5',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[2,3]',
203: 1:      'question': '6',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[7]',
203: 1:      'question': '7',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[2,2,2]',
203: 1:      'question': '8',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[3,3]',
203: 1:      'question': '9',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[2,5]',
203: 1:      'question': '10',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[11]',
203: 1:      'question': '11',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[2,2,3]',
203: 1:      'question': '12',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[13]',
203: 1:      'question': '13',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '[2,7]',
203: 1:      'question': '14',
203: 1:      'valid': true
203: 1:    }
203: 1:  ],
203: 1:  'info': [
203: 1:    '✅f(1) = [1]',
203: 1:    '✅f(2) = [2]',
203: 1:    '✅f(3) = [3]',
203: 1:    '✅f(4) = [2,2]',
203: 1:    '✅f(5) = [5]',
203: 1:    '✅f(6) = [2,3]',
203: 1:    '✅f(7) = [7]',
203: 1:    '✅f(8) = [2,2,2]',
203: 1:    '✅f(9) = [3,3]',
203: 1:    '✅f(10) = [2,5]',
203: 1:    '✅f(11) = [11]',
203: 1:    '✅f(12) = [2,2,3]',
203: 1:    '✅f(13) = [13]',
203: 1:    '✅f(14) = [2,7]',
203: 1:    '❌f(15) = ??? != [3,5]'
203: 1:  ],
203: 1:  'level': 8,
203: 1:  'nextQuestion': '15',
203: 1:  'questions': [
203: 1:    '1',
203: 1:    '2',
203: 1:    '3',
203: 1:    '4',
203: 1:    '5',
203: 1:    '6',
203: 1:    '7',
203: 1:    '8',
203: 1:    '9',
203: 1:    '10',
203: 1:    '11',
203: 1:    '12',
203: 1:    '13',
203: 1:    '14',
203: 1:    '15'
203: 1:  ]
203: 1:}
203: 1:Scores: 12568
203: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]']')
203: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
204: 1:BoardData {
204: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
204: 1:  'expectedAnswer': '[2,2,2,2]',
204: 1:  'history': [
204: 1:    {
204: 1:      'answer': '[1]',
204: 1:      'question': '1',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[2]',
204: 1:      'question': '2',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[3]',
204: 1:      'question': '3',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[2,2]',
204: 1:      'question': '4',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[5]',
204: 1:      'question': '5',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[2,3]',
204: 1:      'question': '6',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[7]',
204: 1:      'question': '7',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[2,2,2]',
204: 1:      'question': '8',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[3,3]',
204: 1:      'question': '9',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[2,5]',
204: 1:      'question': '10',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[11]',
204: 1:      'question': '11',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[2,2,3]',
204: 1:      'question': '12',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[13]',
204: 1:      'question': '13',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[2,7]',
204: 1:      'question': '14',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '[3,5]',
204: 1:      'question': '15',
204: 1:      'valid': true
204: 1:    }
204: 1:  ],
204: 1:  'info': [
204: 1:    '✅f(1) = [1]',
204: 1:    '✅f(2) = [2]',
204: 1:    '✅f(3) = [3]',
204: 1:    '✅f(4) = [2,2]',
204: 1:    '✅f(5) = [5]',
204: 1:    '✅f(6) = [2,3]',
204: 1:    '✅f(7) = [7]',
204: 1:    '✅f(8) = [2,2,2]',
204: 1:    '✅f(9) = [3,3]',
204: 1:    '✅f(10) = [2,5]',
204: 1:    '✅f(11) = [11]',
204: 1:    '✅f(12) = [2,2,3]',
204: 1:    '✅f(13) = [13]',
204: 1:    '✅f(14) = [2,7]',
204: 1:    '✅f(15) = [3,5]',
204: 1:    '❌f(16) = ??? != [2,2,2,2]'
204: 1:  ],
204: 1:  'level': 8,
204: 1:  'nextQuestion': '16',
204: 1:  'questions': [
204: 1:    '1',
204: 1:    '2',
204: 1:    '3',
204: 1:    '4',
204: 1:    '5',
204: 1:    '6',
204: 1:    '7',
204: 1:    '8',
204: 1:    '9',
204: 1:    '10',
204: 1:    '11',
204: 1:    '12',
204: 1:    '13',
204: 1:    '14',
204: 1:    '15',
204: 1:    '16'
204: 1:  ]
204: 1:}
204: 1:Scores: 12578
204: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]']')
204: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
205: 1:BoardData {
205: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
205: 1:  'expectedAnswer': '[17]',
205: 1:  'history': [
205: 1:    {
205: 1:      'answer': '[1]',
205: 1:      'question': '1',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[2]',
205: 1:      'question': '2',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[3]',
205: 1:      'question': '3',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[2,2]',
205: 1:      'question': '4',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[5]',
205: 1:      'question': '5',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[2,3]',
205: 1:      'question': '6',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[7]',
205: 1:      'question': '7',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[2,2,2]',
205: 1:      'question': '8',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[3,3]',
205: 1:      'question': '9',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[2,5]',
205: 1:      'question': '10',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[11]',
205: 1:      'question': '11',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[2,2,3]',
205: 1:      'question': '12',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[13]',
205: 1:      'question': '13',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[2,7]',
205: 1:      'question': '14',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[3,5]',
205: 1:      'question': '15',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '[2,2,2,2]',
205: 1:      'question': '16',
205: 1:      'valid': true
205: 1:    }
205: 1:  ],
205: 1:  'info': [
205: 1:    '✅f(1) = [1]',
205: 1:    '✅f(2) = [2]',
205: 1:    '✅f(3) = [3]',
205: 1:    '✅f(4) = [2,2]',
205: 1:    '✅f(5) = [5]',
205: 1:    '✅f(6) = [2,3]',
205: 1:    '✅f(7) = [7]',
205: 1:    '✅f(8) = [2,2,2]',
205: 1:    '✅f(9) = [3,3]',
205: 1:    '✅f(10) = [2,5]',
205: 1:    '✅f(11) = [11]',
205: 1:    '✅f(12) = [2,2,3]',
205: 1:    '✅f(13) = [13]',
205: 1:    '✅f(14) = [2,7]',
205: 1:    '✅f(15) = [3,5]',
205: 1:    '✅f(16) = [2,2,2,2]',
205: 1:    '❌f(17) = ??? != [17]'
205: 1:  ],
205: 1:  'level': 8,
205: 1:  'nextQuestion': '17',
205: 1:  'questions': [
205: 1:    '1',
205: 1:    '2',
205: 1:    '3',
205: 1:    '4',
205: 1:    '5',
205: 1:    '6',
205: 1:    '7',
205: 1:    '8',
205: 1:    '9',
205: 1:    '10',
205: 1:    '11',
205: 1:    '12',
205: 1:    '13',
205: 1:    '14',
205: 1:    '15',
205: 1:    '16',
205: 1:    '17'
205: 1:  ]
205: 1:}
205: 1:Scores: 12588
205: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]']')
205: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
206: 1:BoardData {
206: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
206: 1:  'expectedAnswer': '[2,3,3]',
206: 1:  'history': [
206: 1:    {
206: 1:      'answer': '[1]',
206: 1:      'question': '1',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[2]',
206: 1:      'question': '2',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[3]',
206: 1:      'question': '3',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[2,2]',
206: 1:      'question': '4',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[5]',
206: 1:      'question': '5',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[2,3]',
206: 1:      'question': '6',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[7]',
206: 1:      'question': '7',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[2,2,2]',
206: 1:      'question': '8',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[3,3]',
206: 1:      'question': '9',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[2,5]',
206: 1:      'question': '10',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[11]',
206: 1:      'question': '11',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[2,2,3]',
206: 1:      'question': '12',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[13]',
206: 1:      'question': '13',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[2,7]',
206: 1:      'question': '14',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[3,5]',
206: 1:      'question': '15',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[2,2,2,2]',
206: 1:      'question': '16',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '[17]',
206: 1:      'question': '17',
206: 1:      'valid': true
206: 1:    }
206: 1:  ],
206: 1:  'info': [
206: 1:    '✅f(1) = [1]',
206: 1:    '✅f(2) = [2]',
206: 1:    '✅f(3) = [3]',
206: 1:    '✅f(4) = [2,2]',
206: 1:    '✅f(5) = [5]',
206: 1:    '✅f(6) = [2,3]',
206: 1:    '✅f(7) = [7]',
206: 1:    '✅f(8) = [2,2,2]',
206: 1:    '✅f(9) = [3,3]',
206: 1:    '✅f(10) = [2,5]',
206: 1:    '✅f(11) = [11]',
206: 1:    '✅f(12) = [2,2,3]',
206: 1:    '✅f(13) = [13]',
206: 1:    '✅f(14) = [2,7]',
206: 1:    '✅f(15) = [3,5]',
206: 1:    '✅f(16) = [2,2,2,2]',
206: 1:    '✅f(17) = [17]',
206: 1:    '❌f(18) = ??? != [2,3,3]'
206: 1:  ],
206: 1:  'level': 8,
206: 1:  'nextQuestion': '18',
206: 1:  'questions': [
206: 1:    '1',
206: 1:    '2',
206: 1:    '3',
206: 1:    '4',
206: 1:    '5',
206: 1:    '6',
206: 1:    '7',
206: 1:    '8',
206: 1:    '9',
206: 1:    '10',
206: 1:    '11',
206: 1:    '12',
206: 1:    '13',
206: 1:    '14',
206: 1:    '15',
206: 1:    '16',
206: 1:    '17',
206: 1:    '18'
206: 1:  ]
206: 1:}
206: 1:Scores: 12598
206: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]']')
206: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
207: 1:BoardData {
207: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
207: 1:  'expectedAnswer': '[19]',
207: 1:  'history': [
207: 1:    {
207: 1:      'answer': '[1]',
207: 1:      'question': '1',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2]',
207: 1:      'question': '2',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[3]',
207: 1:      'question': '3',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2,2]',
207: 1:      'question': '4',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[5]',
207: 1:      'question': '5',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2,3]',
207: 1:      'question': '6',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[7]',
207: 1:      'question': '7',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2,2,2]',
207: 1:      'question': '8',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[3,3]',
207: 1:      'question': '9',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2,5]',
207: 1:      'question': '10',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[11]',
207: 1:      'question': '11',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2,2,3]',
207: 1:      'question': '12',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[13]',
207: 1:      'question': '13',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2,7]',
207: 1:      'question': '14',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[3,5]',
207: 1:      'question': '15',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2,2,2,2]',
207: 1:      'question': '16',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[17]',
207: 1:      'question': '17',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '[2,3,3]',
207: 1:      'question': '18',
207: 1:      'valid': true
207: 1:    }
207: 1:  ],
207: 1:  'info': [
207: 1:    '✅f(1) = [1]',
207: 1:    '✅f(2) = [2]',
207: 1:    '✅f(3) = [3]',
207: 1:    '✅f(4) = [2,2]',
207: 1:    '✅f(5) = [5]',
207: 1:    '✅f(6) = [2,3]',
207: 1:    '✅f(7) = [7]',
207: 1:    '✅f(8) = [2,2,2]',
207: 1:    '✅f(9) = [3,3]',
207: 1:    '✅f(10) = [2,5]',
207: 1:    '✅f(11) = [11]',
207: 1:    '✅f(12) = [2,2,3]',
207: 1:    '✅f(13) = [13]',
207: 1:    '✅f(14) = [2,7]',
207: 1:    '✅f(15) = [3,5]',
207: 1:    '✅f(16) = [2,2,2,2]',
207: 1:    '✅f(17) = [17]',
207: 1:    '✅f(18) = [2,3,3]',
207: 1:    '❌f(19) = ??? != [19]'
207: 1:  ],
207: 1:  'level': 8,
207: 1:  'nextQuestion': '19',
207: 1:  'questions': [
207: 1:    '1',
207: 1:    '2',
207: 1:    '3',
207: 1:    '4',
207: 1:    '5',
207: 1:    '6',
207: 1:    '7',
207: 1:    '8',
207: 1:    '9',
207: 1:    '10',
207: 1:    '11',
207: 1:    '12',
207: 1:    '13',
207: 1:    '14',
207: 1:    '15',
207: 1:    '16',
207: 1:    '17',
207: 1:    '18',
207: 1:    '19'
207: 1:  ]
207: 1:}
207: 1:Scores: 12608
207: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]']')
207: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
208: 1:BoardData {
208: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
208: 1:  'expectedAnswer': '[2,2,5]',
208: 1:  'history': [
208: 1:    {
208: 1:      'answer': '[1]',
208: 1:      'question': '1',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2]',
208: 1:      'question': '2',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[3]',
208: 1:      'question': '3',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2,2]',
208: 1:      'question': '4',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[5]',
208: 1:      'question': '5',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2,3]',
208: 1:      'question': '6',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[7]',
208: 1:      'question': '7',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2,2,2]',
208: 1:      'question': '8',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[3,3]',
208: 1:      'question': '9',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2,5]',
208: 1:      'question': '10',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[11]',
208: 1:      'question': '11',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2,2,3]',
208: 1:      'question': '12',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[13]',
208: 1:      'question': '13',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2,7]',
208: 1:      'question': '14',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[3,5]',
208: 1:      'question': '15',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2,2,2,2]',
208: 1:      'question': '16',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[17]',
208: 1:      'question': '17',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[2,3,3]',
208: 1:      'question': '18',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '[19]',
208: 1:      'question': '19',
208: 1:      'valid': true
208: 1:    }
208: 1:  ],
208: 1:  'info': [
208: 1:    '✅f(1) = [1]',
208: 1:    '✅f(2) = [2]',
208: 1:    '✅f(3) = [3]',
208: 1:    '✅f(4) = [2,2]',
208: 1:    '✅f(5) = [5]',
208: 1:    '✅f(6) = [2,3]',
208: 1:    '✅f(7) = [7]',
208: 1:    '✅f(8) = [2,2,2]',
208: 1:    '✅f(9) = [3,3]',
208: 1:    '✅f(10) = [2,5]',
208: 1:    '✅f(11) = [11]',
208: 1:    '✅f(12) = [2,2,3]',
208: 1:    '✅f(13) = [13]',
208: 1:    '✅f(14) = [2,7]',
208: 1:    '✅f(15) = [3,5]',
208: 1:    '✅f(16) = [2,2,2,2]',
208: 1:    '✅f(17) = [17]',
208: 1:    '✅f(18) = [2,3,3]',
208: 1:    '✅f(19) = [19]',
208: 1:    '❌f(20) = ??? != [2,2,5]'
208: 1:  ],
208: 1:  'level': 8,
208: 1:  'nextQuestion': '20',
208: 1:  'questions': [
208: 1:    '1',
208: 1:    '2',
208: 1:    '3',
208: 1:    '4',
208: 1:    '5',
208: 1:    '6',
208: 1:    '7',
208: 1:    '8',
208: 1:    '9',
208: 1:    '10',
208: 1:    '11',
208: 1:    '12',
208: 1:    '13',
208: 1:    '14',
208: 1:    '15',
208: 1:    '16',
208: 1:    '17',
208: 1:    '18',
208: 1:    '19',
208: 1:    '20'
208: 1:  ]
208: 1:}
208: 1:Scores: 12618
208: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]']')
208: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
209: 1:BoardData {
209: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
209: 1:  'expectedAnswer': '[3,7]',
209: 1:  'history': [
209: 1:    {
209: 1:      'answer': '[1]',
209: 1:      'question': '1',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2]',
209: 1:      'question': '2',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[3]',
209: 1:      'question': '3',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,2]',
209: 1:      'question': '4',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[5]',
209: 1:      'question': '5',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,3]',
209: 1:      'question': '6',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[7]',
209: 1:      'question': '7',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,2,2]',
209: 1:      'question': '8',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[3,3]',
209: 1:      'question': '9',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,5]',
209: 1:      'question': '10',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[11]',
209: 1:      'question': '11',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,2,3]',
209: 1:      'question': '12',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[13]',
209: 1:      'question': '13',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,7]',
209: 1:      'question': '14',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[3,5]',
209: 1:      'question': '15',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,2,2,2]',
209: 1:      'question': '16',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[17]',
209: 1:      'question': '17',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,3,3]',
209: 1:      'question': '18',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[19]',
209: 1:      'question': '19',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '[2,2,5]',
209: 1:      'question': '20',
209: 1:      'valid': true
209: 1:    }
209: 1:  ],
209: 1:  'info': [
209: 1:    '✅f(1) = [1]',
209: 1:    '✅f(2) = [2]',
209: 1:    '✅f(3) = [3]',
209: 1:    '✅f(4) = [2,2]',
209: 1:    '✅f(5) = [5]',
209: 1:    '✅f(6) = [2,3]',
209: 1:    '✅f(7) = [7]',
209: 1:    '✅f(8) = [2,2,2]',
209: 1:    '✅f(9) = [3,3]',
209: 1:    '✅f(10) = [2,5]',
209: 1:    '✅f(11) = [11]',
209: 1:    '✅f(12) = [2,2,3]',
209: 1:    '✅f(13) = [13]',
209: 1:    '✅f(14) = [2,7]',
209: 1:    '✅f(15) = [3,5]',
209: 1:    '✅f(16) = [2,2,2,2]',
209: 1:    '✅f(17) = [17]',
209: 1:    '✅f(18) = [2,3,3]',
209: 1:    '✅f(19) = [19]',
209: 1:    '✅f(20) = [2,2,5]',
209: 1:    '❌f(21) = ??? != [3,7]'
209: 1:  ],
209: 1:  'level': 8,
209: 1:  'nextQuestion': '21',
209: 1:  'questions': [
209: 1:    '1',
209: 1:    '2',
209: 1:    '3',
209: 1:    '4',
209: 1:    '5',
209: 1:    '6',
209: 1:    '7',
209: 1:    '8',
209: 1:    '9',
209: 1:    '10',
209: 1:    '11',
209: 1:    '12',
209: 1:    '13',
209: 1:    '14',
209: 1:    '15',
209: 1:    '16',
209: 1:    '17',
209: 1:    '18',
209: 1:    '19',
209: 1:    '20',
209: 1:    '21'
209: 1:  ]
209: 1:}
209: 1:Scores: 12628
209: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]']')
209: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
210: 1:BoardData {
210: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
210: 1:  'expectedAnswer': '[2,11]',
210: 1:  'history': [
210: 1:    {
210: 1:      'answer': '[1]',
210: 1:      'question': '1',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2]',
210: 1:      'question': '2',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[3]',
210: 1:      'question': '3',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,2]',
210: 1:      'question': '4',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[5]',
210: 1:      'question': '5',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,3]',
210: 1:      'question': '6',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[7]',
210: 1:      'question': '7',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,2,2]',
210: 1:      'question': '8',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[3,3]',
210: 1:      'question': '9',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,5]',
210: 1:      'question': '10',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[11]',
210: 1:      'question': '11',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,2,3]',
210: 1:      'question': '12',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[13]',
210: 1:      'question': '13',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,7]',
210: 1:      'question': '14',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[3,5]',
210: 1:      'question': '15',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,2,2,2]',
210: 1:      'question': '16',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[17]',
210: 1:      'question': '17',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,3,3]',
210: 1:      'question': '18',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[19]',
210: 1:      'question': '19',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[2,2,5]',
210: 1:      'question': '20',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '[3,7]',
210: 1:      'question': '21',
210: 1:      'valid': true
210: 1:    }
210: 1:  ],
210: 1:  'info': [
210: 1:    '✅f(1) = [1]',
210: 1:    '✅f(2) = [2]',
210: 1:    '✅f(3) = [3]',
210: 1:    '✅f(4) = [2,2]',
210: 1:    '✅f(5) = [5]',
210: 1:    '✅f(6) = [2,3]',
210: 1:    '✅f(7) = [7]',
210: 1:    '✅f(8) = [2,2,2]',
210: 1:    '✅f(9) = [3,3]',
210: 1:    '✅f(10) = [2,5]',
210: 1:    '✅f(11) = [11]',
210: 1:    '✅f(12) = [2,2,3]',
210: 1:    '✅f(13) = [13]',
210: 1:    '✅f(14) = [2,7]',
210: 1:    '✅f(15) = [3,5]',
210: 1:    '✅f(16) = [2,2,2,2]',
210: 1:    '✅f(17) = [17]',
210: 1:    '✅f(18) = [2,3,3]',
210: 1:    '✅f(19) = [19]',
210: 1:    '✅f(20) = [2,2,5]',
210: 1:    '✅f(21) = [3,7]',
210: 1:    '❌f(22) = ??? != [2,11]'
210: 1:  ],
210: 1:  'level': 8,
210: 1:  'nextQuestion': '22',
210: 1:  'questions': [
210: 1:    '1',
210: 1:    '2',
210: 1:    '3',
210: 1:    '4',
210: 1:    '5',
210: 1:    '6',
210: 1:    '7',
210: 1:    '8',
210: 1:    '9',
210: 1:    '10',
210: 1:    '11',
210: 1:    '12',
210: 1:    '13',
210: 1:    '14',
210: 1:    '15',
210: 1:    '16',
210: 1:    '17',
210: 1:    '18',
210: 1:    '19',
210: 1:    '20',
210: 1:    '21',
210: 1:    '22'
210: 1:  ]
210: 1:}
210: 1:Scores: 12638
210: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]']')
210: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
211: 1:BoardData {
211: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
211: 1:  'expectedAnswer': '[23]',
211: 1:  'history': [
211: 1:    {
211: 1:      'answer': '[1]',
211: 1:      'question': '1',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2]',
211: 1:      'question': '2',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[3]',
211: 1:      'question': '3',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,2]',
211: 1:      'question': '4',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[5]',
211: 1:      'question': '5',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,3]',
211: 1:      'question': '6',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[7]',
211: 1:      'question': '7',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,2,2]',
211: 1:      'question': '8',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[3,3]',
211: 1:      'question': '9',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,5]',
211: 1:      'question': '10',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[11]',
211: 1:      'question': '11',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,2,3]',
211: 1:      'question': '12',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[13]',
211: 1:      'question': '13',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,7]',
211: 1:      'question': '14',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[3,5]',
211: 1:      'question': '15',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,2,2,2]',
211: 1:      'question': '16',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[17]',
211: 1:      'question': '17',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,3,3]',
211: 1:      'question': '18',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[19]',
211: 1:      'question': '19',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,2,5]',
211: 1:      'question': '20',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[3,7]',
211: 1:      'question': '21',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '[2,11]',
211: 1:      'question': '22',
211: 1:      'valid': true
211: 1:    }
211: 1:  ],
211: 1:  'info': [
211: 1:    '✅f(1) = [1]',
211: 1:    '✅f(2) = [2]',
211: 1:    '✅f(3) = [3]',
211: 1:    '✅f(4) = [2,2]',
211: 1:    '✅f(5) = [5]',
211: 1:    '✅f(6) = [2,3]',
211: 1:    '✅f(7) = [7]',
211: 1:    '✅f(8) = [2,2,2]',
211: 1:    '✅f(9) = [3,3]',
211: 1:    '✅f(10) = [2,5]',
211: 1:    '✅f(11) = [11]',
211: 1:    '✅f(12) = [2,2,3]',
211: 1:    '✅f(13) = [13]',
211: 1:    '✅f(14) = [2,7]',
211: 1:    '✅f(15) = [3,5]',
211: 1:    '✅f(16) = [2,2,2,2]',
211: 1:    '✅f(17) = [17]',
211: 1:    '✅f(18) = [2,3,3]',
211: 1:    '✅f(19) = [19]',
211: 1:    '✅f(20) = [2,2,5]',
211: 1:    '✅f(21) = [3,7]',
211: 1:    '✅f(22) = [2,11]',
211: 1:    '❌f(23) = ??? != [23]'
211: 1:  ],
211: 1:  'level': 8,
211: 1:  'nextQuestion': '23',
211: 1:  'questions': [
211: 1:    '1',
211: 1:    '2',
211: 1:    '3',
211: 1:    '4',
211: 1:    '5',
211: 1:    '6',
211: 1:    '7',
211: 1:    '8',
211: 1:    '9',
211: 1:    '10',
211: 1:    '11',
211: 1:    '12',
211: 1:    '13',
211: 1:    '14',
211: 1:    '15',
211: 1:    '16',
211: 1:    '17',
211: 1:    '18',
211: 1:    '19',
211: 1:    '20',
211: 1:    '21',
211: 1:    '22',
211: 1:    '23'
211: 1:  ]
211: 1:}
211: 1:Scores: 12648
211: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]']')
211: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
212: 1:BoardData {
212: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
212: 1:  'expectedAnswer': '[2,2,2,3]',
212: 1:  'history': [
212: 1:    {
212: 1:      'answer': '[1]',
212: 1:      'question': '1',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2]',
212: 1:      'question': '2',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[3]',
212: 1:      'question': '3',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,2]',
212: 1:      'question': '4',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[5]',
212: 1:      'question': '5',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,3]',
212: 1:      'question': '6',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[7]',
212: 1:      'question': '7',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,2,2]',
212: 1:      'question': '8',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[3,3]',
212: 1:      'question': '9',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,5]',
212: 1:      'question': '10',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[11]',
212: 1:      'question': '11',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,2,3]',
212: 1:      'question': '12',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[13]',
212: 1:      'question': '13',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,7]',
212: 1:      'question': '14',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[3,5]',
212: 1:      'question': '15',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,2,2,2]',
212: 1:      'question': '16',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[17]',
212: 1:      'question': '17',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,3,3]',
212: 1:      'question': '18',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[19]',
212: 1:      'question': '19',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,2,5]',
212: 1:      'question': '20',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[3,7]',
212: 1:      'question': '21',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[2,11]',
212: 1:      'question': '22',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '[23]',
212: 1:      'question': '23',
212: 1:      'valid': true
212: 1:    }
212: 1:  ],
212: 1:  'info': [
212: 1:    '✅f(1) = [1]',
212: 1:    '✅f(2) = [2]',
212: 1:    '✅f(3) = [3]',
212: 1:    '✅f(4) = [2,2]',
212: 1:    '✅f(5) = [5]',
212: 1:    '✅f(6) = [2,3]',
212: 1:    '✅f(7) = [7]',
212: 1:    '✅f(8) = [2,2,2]',
212: 1:    '✅f(9) = [3,3]',
212: 1:    '✅f(10) = [2,5]',
212: 1:    '✅f(11) = [11]',
212: 1:    '✅f(12) = [2,2,3]',
212: 1:    '✅f(13) = [13]',
212: 1:    '✅f(14) = [2,7]',
212: 1:    '✅f(15) = [3,5]',
212: 1:    '✅f(16) = [2,2,2,2]',
212: 1:    '✅f(17) = [17]',
212: 1:    '✅f(18) = [2,3,3]',
212: 1:    '✅f(19) = [19]',
212: 1:    '✅f(20) = [2,2,5]',
212: 1:    '✅f(21) = [3,7]',
212: 1:    '✅f(22) = [2,11]',
212: 1:    '✅f(23) = [23]',
212: 1:    '❌f(24) = ??? != [2,2,2,3]'
212: 1:  ],
212: 1:  'level': 8,
212: 1:  'nextQuestion': '24',
212: 1:  'questions': [
212: 1:    '1',
212: 1:    '2',
212: 1:    '3',
212: 1:    '4',
212: 1:    '5',
212: 1:    '6',
212: 1:    '7',
212: 1:    '8',
212: 1:    '9',
212: 1:    '10',
212: 1:    '11',
212: 1:    '12',
212: 1:    '13',
212: 1:    '14',
212: 1:    '15',
212: 1:    '16',
212: 1:    '17',
212: 1:    '18',
212: 1:    '19',
212: 1:    '20',
212: 1:    '21',
212: 1:    '22',
212: 1:    '23',
212: 1:    '24'
212: 1:  ]
212: 1:}
212: 1:Scores: 12658
212: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]', '[2,2,2,3]']')
212: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
213: 1:BoardData {
213: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
213: 1:  'expectedAnswer': '[5,5]',
213: 1:  'history': [
213: 1:    {
213: 1:      'answer': '[1]',
213: 1:      'question': '1',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2]',
213: 1:      'question': '2',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[3]',
213: 1:      'question': '3',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,2]',
213: 1:      'question': '4',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[5]',
213: 1:      'question': '5',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,3]',
213: 1:      'question': '6',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[7]',
213: 1:      'question': '7',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,2,2]',
213: 1:      'question': '8',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[3,3]',
213: 1:      'question': '9',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,5]',
213: 1:      'question': '10',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[11]',
213: 1:      'question': '11',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,2,3]',
213: 1:      'question': '12',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[13]',
213: 1:      'question': '13',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,7]',
213: 1:      'question': '14',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[3,5]',
213: 1:      'question': '15',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,2,2,2]',
213: 1:      'question': '16',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[17]',
213: 1:      'question': '17',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,3,3]',
213: 1:      'question': '18',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[19]',
213: 1:      'question': '19',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,2,5]',
213: 1:      'question': '20',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[3,7]',
213: 1:      'question': '21',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,11]',
213: 1:      'question': '22',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[23]',
213: 1:      'question': '23',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '[2,2,2,3]',
213: 1:      'question': '24',
213: 1:      'valid': true
213: 1:    }
213: 1:  ],
213: 1:  'info': [
213: 1:    '✅f(1) = [1]',
213: 1:    '✅f(2) = [2]',
213: 1:    '✅f(3) = [3]',
213: 1:    '✅f(4) = [2,2]',
213: 1:    '✅f(5) = [5]',
213: 1:    '✅f(6) = [2,3]',
213: 1:    '✅f(7) = [7]',
213: 1:    '✅f(8) = [2,2,2]',
213: 1:    '✅f(9) = [3,3]',
213: 1:    '✅f(10) = [2,5]',
213: 1:    '✅f(11) = [11]',
213: 1:    '✅f(12) = [2,2,3]',
213: 1:    '✅f(13) = [13]',
213: 1:    '✅f(14) = [2,7]',
213: 1:    '✅f(15) = [3,5]',
213: 1:    '✅f(16) = [2,2,2,2]',
213: 1:    '✅f(17) = [17]',
213: 1:    '✅f(18) = [2,3,3]',
213: 1:    '✅f(19) = [19]',
213: 1:    '✅f(20) = [2,2,5]',
213: 1:    '✅f(21) = [3,7]',
213: 1:    '✅f(22) = [2,11]',
213: 1:    '✅f(23) = [23]',
213: 1:    '✅f(24) = [2,2,2,3]',
213: 1:    '❌f(25) = ??? != [5,5]'
213: 1:  ],
213: 1:  'level': 8,
213: 1:  'nextQuestion': '25',
213: 1:  'questions': [
213: 1:    '1',
213: 1:    '2',
213: 1:    '3',
213: 1:    '4',
213: 1:    '5',
213: 1:    '6',
213: 1:    '7',
213: 1:    '8',
213: 1:    '9',
213: 1:    '10',
213: 1:    '11',
213: 1:    '12',
213: 1:    '13',
213: 1:    '14',
213: 1:    '15',
213: 1:    '16',
213: 1:    '17',
213: 1:    '18',
213: 1:    '19',
213: 1:    '20',
213: 1:    '21',
213: 1:    '22',
213: 1:    '23',
213: 1:    '24',
213: 1:    '25'
213: 1:  ]
213: 1:}
213: 1:Scores: 12668
213: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]', '[2,2,2,3]', '[5,5]']')
213: 1:Fire Event: PassTest{complexity=25, testCount=25}
213: 1:Fire Event: NextAlgorithm{complexity=25, time=0}
------------------------------------------
214: 1:BoardData {
214: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
214: 1:  'history': [
214: 1:    {
214: 1:      'answer': '[1]',
214: 1:      'question': '1',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2]',
214: 1:      'question': '2',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[3]',
214: 1:      'question': '3',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,2]',
214: 1:      'question': '4',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[5]',
214: 1:      'question': '5',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,3]',
214: 1:      'question': '6',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[7]',
214: 1:      'question': '7',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,2,2]',
214: 1:      'question': '8',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[3,3]',
214: 1:      'question': '9',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,5]',
214: 1:      'question': '10',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[11]',
214: 1:      'question': '11',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,2,3]',
214: 1:      'question': '12',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[13]',
214: 1:      'question': '13',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,7]',
214: 1:      'question': '14',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[3,5]',
214: 1:      'question': '15',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,2,2,2]',
214: 1:      'question': '16',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[17]',
214: 1:      'question': '17',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,3,3]',
214: 1:      'question': '18',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[19]',
214: 1:      'question': '19',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,2,5]',
214: 1:      'question': '20',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[3,7]',
214: 1:      'question': '21',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,11]',
214: 1:      'question': '22',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[23]',
214: 1:      'question': '23',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[2,2,2,3]',
214: 1:      'question': '24',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '[5,5]',
214: 1:      'question': '25',
214: 1:      'valid': true
214: 1:    }
214: 1:  ],
214: 1:  'info': [
214: 1:    '✅f(1) = [1]',
214: 1:    '✅f(2) = [2]',
214: 1:    '✅f(3) = [3]',
214: 1:    '✅f(4) = [2,2]',
214: 1:    '✅f(5) = [5]',
214: 1:    '✅f(6) = [2,3]',
214: 1:    '✅f(7) = [7]',
214: 1:    '✅f(8) = [2,2,2]',
214: 1:    '✅f(9) = [3,3]',
214: 1:    '✅f(10) = [2,5]',
214: 1:    '✅f(11) = [11]',
214: 1:    '✅f(12) = [2,2,3]',
214: 1:    '✅f(13) = [13]',
214: 1:    '✅f(14) = [2,7]',
214: 1:    '✅f(15) = [3,5]',
214: 1:    '✅f(16) = [2,2,2,2]',
214: 1:    '✅f(17) = [17]',
214: 1:    '✅f(18) = [2,3,3]',
214: 1:    '✅f(19) = [19]',
214: 1:    '✅f(20) = [2,2,5]',
214: 1:    '✅f(21) = [3,7]',
214: 1:    '✅f(22) = [2,11]',
214: 1:    '✅f(23) = [23]',
214: 1:    '✅f(24) = [2,2,2,3]',
214: 1:    '✅f(25) = [5,5]'
214: 1:  ],
214: 1:  'level': 8,
214: 1:  'questions': []
214: 1:}
214: 1:Scores: 16052
214: 1:Answer: message('StartNextLevel')
214: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
215: 1:BoardData {
215: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
215: 1:  'expectedAnswer': '2',
215: 1:  'history': [],
215: 1:  'info': ['❌f(1) = ??? != 2'],
215: 1:  'level': 9,
215: 1:  'nextQuestion': '1',
215: 1:  'questions': ['1']
215: 1:}
215: 1:Scores: 16052
215: 1:Answer: message('['2']')
215: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
216: 1:BoardData {
216: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
216: 1:  'expectedAnswer': '4',
216: 1:  'history': [{
216: 1:    'answer': '2',
216: 1:    'question': '1',
216: 1:    'valid': true
216: 1:  }],
216: 1:  'info': [
216: 1:    '✅f(1) = 2',
216: 1:    '❌f(2) = ??? != 4'
216: 1:  ],
216: 1:  'level': 9,
216: 1:  'nextQuestion': '2',
216: 1:  'questions': [
216: 1:    '1',
216: 1:    '2'
216: 1:  ]
216: 1:}
216: 1:Scores: 16064
216: 1:Answer: message('['2', '4']')
216: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
217: 1:BoardData {
217: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
217: 1:  'expectedAnswer': '8',
217: 1:  'history': [
217: 1:    {
217: 1:      'answer': '2',
217: 1:      'question': '1',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '4',
217: 1:      'question': '2',
217: 1:      'valid': true
217: 1:    }
217: 1:  ],
217: 1:  'info': [
217: 1:    '✅f(1) = 2',
217: 1:    '✅f(2) = 4',
217: 1:    '❌f(3) = ??? != 8'
217: 1:  ],
217: 1:  'level': 9,
217: 1:  'nextQuestion': '3',
217: 1:  'questions': [
217: 1:    '1',
217: 1:    '2',
217: 1:    '3'
217: 1:  ]
217: 1:}
217: 1:Scores: 16076
217: 1:Answer: message('['2', '4', '8']')
217: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
218: 1:BoardData {
218: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
218: 1:  'expectedAnswer': '7',
218: 1:  'history': [
218: 1:    {
218: 1:      'answer': '2',
218: 1:      'question': '1',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '4',
218: 1:      'question': '2',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '8',
218: 1:      'question': '3',
218: 1:      'valid': true
218: 1:    }
218: 1:  ],
218: 1:  'info': [
218: 1:    '✅f(1) = 2',
218: 1:    '✅f(2) = 4',
218: 1:    '✅f(3) = 8',
218: 1:    '❌f(4) = ??? != 7'
218: 1:  ],
218: 1:  'level': 9,
218: 1:  'nextQuestion': '4',
218: 1:  'questions': [
218: 1:    '1',
218: 1:    '2',
218: 1:    '3',
218: 1:    '4'
218: 1:  ]
218: 1:}
218: 1:Scores: 16088
218: 1:Answer: message('['2', '4', '8', '7']')
218: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
219: 1:BoardData {
219: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
219: 1:  'expectedAnswer': '5',
219: 1:  'history': [
219: 1:    {
219: 1:      'answer': '2',
219: 1:      'question': '1',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '4',
219: 1:      'question': '2',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '8',
219: 1:      'question': '3',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '7',
219: 1:      'question': '4',
219: 1:      'valid': true
219: 1:    }
219: 1:  ],
219: 1:  'info': [
219: 1:    '✅f(1) = 2',
219: 1:    '✅f(2) = 4',
219: 1:    '✅f(3) = 8',
219: 1:    '✅f(4) = 7',
219: 1:    '❌f(5) = ??? != 5'
219: 1:  ],
219: 1:  'level': 9,
219: 1:  'nextQuestion': '5',
219: 1:  'questions': [
219: 1:    '1',
219: 1:    '2',
219: 1:    '3',
219: 1:    '4',
219: 1:    '5'
219: 1:  ]
219: 1:}
219: 1:Scores: 16100
219: 1:Answer: message('['2', '4', '8', '7', '5']')
219: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
220: 1:BoardData {
220: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
220: 1:  'expectedAnswer': '10',
220: 1:  'history': [
220: 1:    {
220: 1:      'answer': '2',
220: 1:      'question': '1',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '4',
220: 1:      'question': '2',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '8',
220: 1:      'question': '3',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '7',
220: 1:      'question': '4',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '5',
220: 1:      'question': '5',
220: 1:      'valid': true
220: 1:    }
220: 1:  ],
220: 1:  'info': [
220: 1:    '✅f(1) = 2',
220: 1:    '✅f(2) = 4',
220: 1:    '✅f(3) = 8',
220: 1:    '✅f(4) = 7',
220: 1:    '✅f(5) = 5',
220: 1:    '❌f(6) = ??? != 10'
220: 1:  ],
220: 1:  'level': 9,
220: 1:  'nextQuestion': '6',
220: 1:  'questions': [
220: 1:    '1',
220: 1:    '2',
220: 1:    '3',
220: 1:    '4',
220: 1:    '5',
220: 1:    '6'
220: 1:  ]
220: 1:}
220: 1:Scores: 16112
220: 1:Answer: message('['2', '4', '8', '7', '5', '10']')
220: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
221: 1:BoardData {
221: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
221: 1:  'expectedAnswer': '11',
221: 1:  'history': [
221: 1:    {
221: 1:      'answer': '2',
221: 1:      'question': '1',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '4',
221: 1:      'question': '2',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '8',
221: 1:      'question': '3',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '7',
221: 1:      'question': '4',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '5',
221: 1:      'question': '5',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '10',
221: 1:      'question': '6',
221: 1:      'valid': true
221: 1:    }
221: 1:  ],
221: 1:  'info': [
221: 1:    '✅f(1) = 2',
221: 1:    '✅f(2) = 4',
221: 1:    '✅f(3) = 8',
221: 1:    '✅f(4) = 7',
221: 1:    '✅f(5) = 5',
221: 1:    '✅f(6) = 10',
221: 1:    '❌f(7) = ??? != 11'
221: 1:  ],
221: 1:  'level': 9,
221: 1:  'nextQuestion': '7',
221: 1:  'questions': [
221: 1:    '1',
221: 1:    '2',
221: 1:    '3',
221: 1:    '4',
221: 1:    '5',
221: 1:    '6',
221: 1:    '7'
221: 1:  ]
221: 1:}
221: 1:Scores: 16124
221: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11']')
221: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
222: 1:BoardData {
222: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
222: 1:  'expectedAnswer': '13',
222: 1:  'history': [
222: 1:    {
222: 1:      'answer': '2',
222: 1:      'question': '1',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '4',
222: 1:      'question': '2',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '8',
222: 1:      'question': '3',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '7',
222: 1:      'question': '4',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '5',
222: 1:      'question': '5',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '10',
222: 1:      'question': '6',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '11',
222: 1:      'question': '7',
222: 1:      'valid': true
222: 1:    }
222: 1:  ],
222: 1:  'info': [
222: 1:    '✅f(1) = 2',
222: 1:    '✅f(2) = 4',
222: 1:    '✅f(3) = 8',
222: 1:    '✅f(4) = 7',
222: 1:    '✅f(5) = 5',
222: 1:    '✅f(6) = 10',
222: 1:    '✅f(7) = 11',
222: 1:    '❌f(8) = ??? != 13'
222: 1:  ],
222: 1:  'level': 9,
222: 1:  'nextQuestion': '8',
222: 1:  'questions': [
222: 1:    '1',
222: 1:    '2',
222: 1:    '3',
222: 1:    '4',
222: 1:    '5',
222: 1:    '6',
222: 1:    '7',
222: 1:    '8'
222: 1:  ]
222: 1:}
222: 1:Scores: 16136
222: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13']')
222: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
223: 1:BoardData {
223: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
223: 1:  'expectedAnswer': '8',
223: 1:  'history': [
223: 1:    {
223: 1:      'answer': '2',
223: 1:      'question': '1',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '4',
223: 1:      'question': '2',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '8',
223: 1:      'question': '3',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '7',
223: 1:      'question': '4',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '5',
223: 1:      'question': '5',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '10',
223: 1:      'question': '6',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '11',
223: 1:      'question': '7',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '13',
223: 1:      'question': '8',
223: 1:      'valid': true
223: 1:    }
223: 1:  ],
223: 1:  'info': [
223: 1:    '✅f(1) = 2',
223: 1:    '✅f(2) = 4',
223: 1:    '✅f(3) = 8',
223: 1:    '✅f(4) = 7',
223: 1:    '✅f(5) = 5',
223: 1:    '✅f(6) = 10',
223: 1:    '✅f(7) = 11',
223: 1:    '✅f(8) = 13',
223: 1:    '❌f(9) = ??? != 8'
223: 1:  ],
223: 1:  'level': 9,
223: 1:  'nextQuestion': '9',
223: 1:  'questions': [
223: 1:    '1',
223: 1:    '2',
223: 1:    '3',
223: 1:    '4',
223: 1:    '5',
223: 1:    '6',
223: 1:    '7',
223: 1:    '8',
223: 1:    '9'
223: 1:  ]
223: 1:}
223: 1:Scores: 16148
223: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8']')
223: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
224: 1:BoardData {
224: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
224: 1:  'expectedAnswer': '7',
224: 1:  'history': [
224: 1:    {
224: 1:      'answer': '2',
224: 1:      'question': '1',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '4',
224: 1:      'question': '2',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '8',
224: 1:      'question': '3',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '7',
224: 1:      'question': '4',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '5',
224: 1:      'question': '5',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '10',
224: 1:      'question': '6',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '11',
224: 1:      'question': '7',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '13',
224: 1:      'question': '8',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '8',
224: 1:      'question': '9',
224: 1:      'valid': true
224: 1:    }
224: 1:  ],
224: 1:  'info': [
224: 1:    '✅f(1) = 2',
224: 1:    '✅f(2) = 4',
224: 1:    '✅f(3) = 8',
224: 1:    '✅f(4) = 7',
224: 1:    '✅f(5) = 5',
224: 1:    '✅f(6) = 10',
224: 1:    '✅f(7) = 11',
224: 1:    '✅f(8) = 13',
224: 1:    '✅f(9) = 8',
224: 1:    '❌f(10) = ??? != 7'
224: 1:  ],
224: 1:  'level': 9,
224: 1:  'nextQuestion': '10',
224: 1:  'questions': [
224: 1:    '1',
224: 1:    '2',
224: 1:    '3',
224: 1:    '4',
224: 1:    '5',
224: 1:    '6',
224: 1:    '7',
224: 1:    '8',
224: 1:    '9',
224: 1:    '10'
224: 1:  ]
224: 1:}
224: 1:Scores: 16160
224: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7']')
224: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
225: 1:BoardData {
225: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
225: 1:  'expectedAnswer': '14',
225: 1:  'history': [
225: 1:    {
225: 1:      'answer': '2',
225: 1:      'question': '1',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '4',
225: 1:      'question': '2',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '8',
225: 1:      'question': '3',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '7',
225: 1:      'question': '4',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '5',
225: 1:      'question': '5',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '10',
225: 1:      'question': '6',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '11',
225: 1:      'question': '7',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '13',
225: 1:      'question': '8',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '8',
225: 1:      'question': '9',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '7',
225: 1:      'question': '10',
225: 1:      'valid': true
225: 1:    }
225: 1:  ],
225: 1:  'info': [
225: 1:    '✅f(1) = 2',
225: 1:    '✅f(2) = 4',
225: 1:    '✅f(3) = 8',
225: 1:    '✅f(4) = 7',
225: 1:    '✅f(5) = 5',
225: 1:    '✅f(6) = 10',
225: 1:    '✅f(7) = 11',
225: 1:    '✅f(8) = 13',
225: 1:    '✅f(9) = 8',
225: 1:    '✅f(10) = 7',
225: 1:    '❌f(11) = ??? != 14'
225: 1:  ],
225: 1:  'level': 9,
225: 1:  'nextQuestion': '11',
225: 1:  'questions': [
225: 1:    '1',
225: 1:    '2',
225: 1:    '3',
225: 1:    '4',
225: 1:    '5',
225: 1:    '6',
225: 1:    '7',
225: 1:    '8',
225: 1:    '9',
225: 1:    '10',
225: 1:    '11'
225: 1:  ]
225: 1:}
225: 1:Scores: 16172
225: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14']')
225: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
226: 1:BoardData {
226: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
226: 1:  'expectedAnswer': '19',
226: 1:  'history': [
226: 1:    {
226: 1:      'answer': '2',
226: 1:      'question': '1',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '4',
226: 1:      'question': '2',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '8',
226: 1:      'question': '3',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '7',
226: 1:      'question': '4',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '5',
226: 1:      'question': '5',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '10',
226: 1:      'question': '6',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '11',
226: 1:      'question': '7',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '13',
226: 1:      'question': '8',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '8',
226: 1:      'question': '9',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '7',
226: 1:      'question': '10',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '14',
226: 1:      'question': '11',
226: 1:      'valid': true
226: 1:    }
226: 1:  ],
226: 1:  'info': [
226: 1:    '✅f(1) = 2',
226: 1:    '✅f(2) = 4',
226: 1:    '✅f(3) = 8',
226: 1:    '✅f(4) = 7',
226: 1:    '✅f(5) = 5',
226: 1:    '✅f(6) = 10',
226: 1:    '✅f(7) = 11',
226: 1:    '✅f(8) = 13',
226: 1:    '✅f(9) = 8',
226: 1:    '✅f(10) = 7',
226: 1:    '✅f(11) = 14',
226: 1:    '❌f(12) = ??? != 19'
226: 1:  ],
226: 1:  'level': 9,
226: 1:  'nextQuestion': '12',
226: 1:  'questions': [
226: 1:    '1',
226: 1:    '2',
226: 1:    '3',
226: 1:    '4',
226: 1:    '5',
226: 1:    '6',
226: 1:    '7',
226: 1:    '8',
226: 1:    '9',
226: 1:    '10',
226: 1:    '11',
226: 1:    '12'
226: 1:  ]
226: 1:}
226: 1:Scores: 16184
226: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19']')
226: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
227: 1:BoardData {
227: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
227: 1:  'expectedAnswer': '20',
227: 1:  'history': [
227: 1:    {
227: 1:      'answer': '2',
227: 1:      'question': '1',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '4',
227: 1:      'question': '2',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '8',
227: 1:      'question': '3',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '7',
227: 1:      'question': '4',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '5',
227: 1:      'question': '5',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '10',
227: 1:      'question': '6',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '11',
227: 1:      'question': '7',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '13',
227: 1:      'question': '8',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '8',
227: 1:      'question': '9',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '7',
227: 1:      'question': '10',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '14',
227: 1:      'question': '11',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '19',
227: 1:      'question': '12',
227: 1:      'valid': true
227: 1:    }
227: 1:  ],
227: 1:  'info': [
227: 1:    '✅f(1) = 2',
227: 1:    '✅f(2) = 4',
227: 1:    '✅f(3) = 8',
227: 1:    '✅f(4) = 7',
227: 1:    '✅f(5) = 5',
227: 1:    '✅f(6) = 10',
227: 1:    '✅f(7) = 11',
227: 1:    '✅f(8) = 13',
227: 1:    '✅f(9) = 8',
227: 1:    '✅f(10) = 7',
227: 1:    '✅f(11) = 14',
227: 1:    '✅f(12) = 19',
227: 1:    '❌f(13) = ??? != 20'
227: 1:  ],
227: 1:  'level': 9,
227: 1:  'nextQuestion': '13',
227: 1:  'questions': [
227: 1:    '1',
227: 1:    '2',
227: 1:    '3',
227: 1:    '4',
227: 1:    '5',
227: 1:    '6',
227: 1:    '7',
227: 1:    '8',
227: 1:    '9',
227: 1:    '10',
227: 1:    '11',
227: 1:    '12',
227: 1:    '13'
227: 1:  ]
227: 1:}
227: 1:Scores: 16196
227: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20']')
227: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
228: 1:BoardData {
228: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
228: 1:  'expectedAnswer': '22',
228: 1:  'history': [
228: 1:    {
228: 1:      'answer': '2',
228: 1:      'question': '1',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '4',
228: 1:      'question': '2',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '8',
228: 1:      'question': '3',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '7',
228: 1:      'question': '4',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '5',
228: 1:      'question': '5',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '10',
228: 1:      'question': '6',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '11',
228: 1:      'question': '7',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '13',
228: 1:      'question': '8',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '8',
228: 1:      'question': '9',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '7',
228: 1:      'question': '10',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '14',
228: 1:      'question': '11',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '19',
228: 1:      'question': '12',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '20',
228: 1:      'question': '13',
228: 1:      'valid': true
228: 1:    }
228: 1:  ],
228: 1:  'info': [
228: 1:    '✅f(1) = 2',
228: 1:    '✅f(2) = 4',
228: 1:    '✅f(3) = 8',
228: 1:    '✅f(4) = 7',
228: 1:    '✅f(5) = 5',
228: 1:    '✅f(6) = 10',
228: 1:    '✅f(7) = 11',
228: 1:    '✅f(8) = 13',
228: 1:    '✅f(9) = 8',
228: 1:    '✅f(10) = 7',
228: 1:    '✅f(11) = 14',
228: 1:    '✅f(12) = 19',
228: 1:    '✅f(13) = 20',
228: 1:    '❌f(14) = ??? != 22'
228: 1:  ],
228: 1:  'level': 9,
228: 1:  'nextQuestion': '14',
228: 1:  'questions': [
228: 1:    '1',
228: 1:    '2',
228: 1:    '3',
228: 1:    '4',
228: 1:    '5',
228: 1:    '6',
228: 1:    '7',
228: 1:    '8',
228: 1:    '9',
228: 1:    '10',
228: 1:    '11',
228: 1:    '12',
228: 1:    '13',
228: 1:    '14'
228: 1:  ]
228: 1:}
228: 1:Scores: 16208
228: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22']')
228: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
229: 1:BoardData {
229: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
229: 1:  'expectedAnswer': '26',
229: 1:  'history': [
229: 1:    {
229: 1:      'answer': '2',
229: 1:      'question': '1',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '4',
229: 1:      'question': '2',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '8',
229: 1:      'question': '3',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '7',
229: 1:      'question': '4',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '5',
229: 1:      'question': '5',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '10',
229: 1:      'question': '6',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '11',
229: 1:      'question': '7',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '13',
229: 1:      'question': '8',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '8',
229: 1:      'question': '9',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '7',
229: 1:      'question': '10',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '14',
229: 1:      'question': '11',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '19',
229: 1:      'question': '12',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '20',
229: 1:      'question': '13',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '22',
229: 1:      'question': '14',
229: 1:      'valid': true
229: 1:    }
229: 1:  ],
229: 1:  'info': [
229: 1:    '✅f(1) = 2',
229: 1:    '✅f(2) = 4',
229: 1:    '✅f(3) = 8',
229: 1:    '✅f(4) = 7',
229: 1:    '✅f(5) = 5',
229: 1:    '✅f(6) = 10',
229: 1:    '✅f(7) = 11',
229: 1:    '✅f(8) = 13',
229: 1:    '✅f(9) = 8',
229: 1:    '✅f(10) = 7',
229: 1:    '✅f(11) = 14',
229: 1:    '✅f(12) = 19',
229: 1:    '✅f(13) = 20',
229: 1:    '✅f(14) = 22',
229: 1:    '❌f(15) = ??? != 26'
229: 1:  ],
229: 1:  'level': 9,
229: 1:  'nextQuestion': '15',
229: 1:  'questions': [
229: 1:    '1',
229: 1:    '2',
229: 1:    '3',
229: 1:    '4',
229: 1:    '5',
229: 1:    '6',
229: 1:    '7',
229: 1:    '8',
229: 1:    '9',
229: 1:    '10',
229: 1:    '11',
229: 1:    '12',
229: 1:    '13',
229: 1:    '14',
229: 1:    '15'
229: 1:  ]
229: 1:}
229: 1:Scores: 16220
229: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26']')
229: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
230: 1:BoardData {
230: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
230: 1:  'expectedAnswer': '25',
230: 1:  'history': [
230: 1:    {
230: 1:      'answer': '2',
230: 1:      'question': '1',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '4',
230: 1:      'question': '2',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '8',
230: 1:      'question': '3',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '7',
230: 1:      'question': '4',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '5',
230: 1:      'question': '5',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '10',
230: 1:      'question': '6',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '11',
230: 1:      'question': '7',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '13',
230: 1:      'question': '8',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '8',
230: 1:      'question': '9',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '7',
230: 1:      'question': '10',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '14',
230: 1:      'question': '11',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '19',
230: 1:      'question': '12',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '20',
230: 1:      'question': '13',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '22',
230: 1:      'question': '14',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '26',
230: 1:      'question': '15',
230: 1:      'valid': true
230: 1:    }
230: 1:  ],
230: 1:  'info': [
230: 1:    '✅f(1) = 2',
230: 1:    '✅f(2) = 4',
230: 1:    '✅f(3) = 8',
230: 1:    '✅f(4) = 7',
230: 1:    '✅f(5) = 5',
230: 1:    '✅f(6) = 10',
230: 1:    '✅f(7) = 11',
230: 1:    '✅f(8) = 13',
230: 1:    '✅f(9) = 8',
230: 1:    '✅f(10) = 7',
230: 1:    '✅f(11) = 14',
230: 1:    '✅f(12) = 19',
230: 1:    '✅f(13) = 20',
230: 1:    '✅f(14) = 22',
230: 1:    '✅f(15) = 26',
230: 1:    '❌f(16) = ??? != 25'
230: 1:  ],
230: 1:  'level': 9,
230: 1:  'nextQuestion': '16',
230: 1:  'questions': [
230: 1:    '1',
230: 1:    '2',
230: 1:    '3',
230: 1:    '4',
230: 1:    '5',
230: 1:    '6',
230: 1:    '7',
230: 1:    '8',
230: 1:    '9',
230: 1:    '10',
230: 1:    '11',
230: 1:    '12',
230: 1:    '13',
230: 1:    '14',
230: 1:    '15',
230: 1:    '16'
230: 1:  ]
230: 1:}
230: 1:Scores: 16232
230: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25']')
230: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
231: 1:BoardData {
231: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
231: 1:  'expectedAnswer': '14',
231: 1:  'history': [
231: 1:    {
231: 1:      'answer': '2',
231: 1:      'question': '1',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '4',
231: 1:      'question': '2',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '8',
231: 1:      'question': '3',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '7',
231: 1:      'question': '4',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '5',
231: 1:      'question': '5',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '10',
231: 1:      'question': '6',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '11',
231: 1:      'question': '7',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '13',
231: 1:      'question': '8',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '8',
231: 1:      'question': '9',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '7',
231: 1:      'question': '10',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '14',
231: 1:      'question': '11',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '19',
231: 1:      'question': '12',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '20',
231: 1:      'question': '13',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '22',
231: 1:      'question': '14',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '26',
231: 1:      'question': '15',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '25',
231: 1:      'question': '16',
231: 1:      'valid': true
231: 1:    }
231: 1:  ],
231: 1:  'info': [
231: 1:    '✅f(1) = 2',
231: 1:    '✅f(2) = 4',
231: 1:    '✅f(3) = 8',
231: 1:    '✅f(4) = 7',
231: 1:    '✅f(5) = 5',
231: 1:    '✅f(6) = 10',
231: 1:    '✅f(7) = 11',
231: 1:    '✅f(8) = 13',
231: 1:    '✅f(9) = 8',
231: 1:    '✅f(10) = 7',
231: 1:    '✅f(11) = 14',
231: 1:    '✅f(12) = 19',
231: 1:    '✅f(13) = 20',
231: 1:    '✅f(14) = 22',
231: 1:    '✅f(15) = 26',
231: 1:    '✅f(16) = 25',
231: 1:    '❌f(17) = ??? != 14'
231: 1:  ],
231: 1:  'level': 9,
231: 1:  'nextQuestion': '17',
231: 1:  'questions': [
231: 1:    '1',
231: 1:    '2',
231: 1:    '3',
231: 1:    '4',
231: 1:    '5',
231: 1:    '6',
231: 1:    '7',
231: 1:    '8',
231: 1:    '9',
231: 1:    '10',
231: 1:    '11',
231: 1:    '12',
231: 1:    '13',
231: 1:    '14',
231: 1:    '15',
231: 1:    '16',
231: 1:    '17'
231: 1:  ]
231: 1:}
231: 1:Scores: 16244
231: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14']')
231: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
232: 1:BoardData {
232: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
232: 1:  'expectedAnswer': '19',
232: 1:  'history': [
232: 1:    {
232: 1:      'answer': '2',
232: 1:      'question': '1',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '4',
232: 1:      'question': '2',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '8',
232: 1:      'question': '3',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '7',
232: 1:      'question': '4',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '5',
232: 1:      'question': '5',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '10',
232: 1:      'question': '6',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '11',
232: 1:      'question': '7',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '13',
232: 1:      'question': '8',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '8',
232: 1:      'question': '9',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '7',
232: 1:      'question': '10',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '14',
232: 1:      'question': '11',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '19',
232: 1:      'question': '12',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '20',
232: 1:      'question': '13',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '22',
232: 1:      'question': '14',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '26',
232: 1:      'question': '15',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '25',
232: 1:      'question': '16',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '14',
232: 1:      'question': '17',
232: 1:      'valid': true
232: 1:    }
232: 1:  ],
232: 1:  'info': [
232: 1:    '✅f(1) = 2',
232: 1:    '✅f(2) = 4',
232: 1:    '✅f(3) = 8',
232: 1:    '✅f(4) = 7',
232: 1:    '✅f(5) = 5',
232: 1:    '✅f(6) = 10',
232: 1:    '✅f(7) = 11',
232: 1:    '✅f(8) = 13',
232: 1:    '✅f(9) = 8',
232: 1:    '✅f(10) = 7',
232: 1:    '✅f(11) = 14',
232: 1:    '✅f(12) = 19',
232: 1:    '✅f(13) = 20',
232: 1:    '✅f(14) = 22',
232: 1:    '✅f(15) = 26',
232: 1:    '✅f(16) = 25',
232: 1:    '✅f(17) = 14',
232: 1:    '❌f(18) = ??? != 19'
232: 1:  ],
232: 1:  'level': 9,
232: 1:  'nextQuestion': '18',
232: 1:  'questions': [
232: 1:    '1',
232: 1:    '2',
232: 1:    '3',
232: 1:    '4',
232: 1:    '5',
232: 1:    '6',
232: 1:    '7',
232: 1:    '8',
232: 1:    '9',
232: 1:    '10',
232: 1:    '11',
232: 1:    '12',
232: 1:    '13',
232: 1:    '14',
232: 1:    '15',
232: 1:    '16',
232: 1:    '17',
232: 1:    '18'
232: 1:  ]
232: 1:}
232: 1:Scores: 16256
232: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19']')
232: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
233: 1:BoardData {
233: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
233: 1:  'expectedAnswer': '29',
233: 1:  'history': [
233: 1:    {
233: 1:      'answer': '2',
233: 1:      'question': '1',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '4',
233: 1:      'question': '2',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '8',
233: 1:      'question': '3',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '7',
233: 1:      'question': '4',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '5',
233: 1:      'question': '5',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '10',
233: 1:      'question': '6',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '11',
233: 1:      'question': '7',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '13',
233: 1:      'question': '8',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '8',
233: 1:      'question': '9',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '7',
233: 1:      'question': '10',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '14',
233: 1:      'question': '11',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '19',
233: 1:      'question': '12',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '20',
233: 1:      'question': '13',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '22',
233: 1:      'question': '14',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '26',
233: 1:      'question': '15',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '25',
233: 1:      'question': '16',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '14',
233: 1:      'question': '17',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '19',
233: 1:      'question': '18',
233: 1:      'valid': true
233: 1:    }
233: 1:  ],
233: 1:  'info': [
233: 1:    '✅f(1) = 2',
233: 1:    '✅f(2) = 4',
233: 1:    '✅f(3) = 8',
233: 1:    '✅f(4) = 7',
233: 1:    '✅f(5) = 5',
233: 1:    '✅f(6) = 10',
233: 1:    '✅f(7) = 11',
233: 1:    '✅f(8) = 13',
233: 1:    '✅f(9) = 8',
233: 1:    '✅f(10) = 7',
233: 1:    '✅f(11) = 14',
233: 1:    '✅f(12) = 19',
233: 1:    '✅f(13) = 20',
233: 1:    '✅f(14) = 22',
233: 1:    '✅f(15) = 26',
233: 1:    '✅f(16) = 25',
233: 1:    '✅f(17) = 14',
233: 1:    '✅f(18) = 19',
233: 1:    '❌f(19) = ??? != 29'
233: 1:  ],
233: 1:  'level': 9,
233: 1:  'nextQuestion': '19',
233: 1:  'questions': [
233: 1:    '1',
233: 1:    '2',
233: 1:    '3',
233: 1:    '4',
233: 1:    '5',
233: 1:    '6',
233: 1:    '7',
233: 1:    '8',
233: 1:    '9',
233: 1:    '10',
233: 1:    '11',
233: 1:    '12',
233: 1:    '13',
233: 1:    '14',
233: 1:    '15',
233: 1:    '16',
233: 1:    '17',
233: 1:    '18',
233: 1:    '19'
233: 1:  ]
233: 1:}
233: 1:Scores: 16268
233: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29']')
233: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
234: 1:BoardData {
234: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
234: 1:  'expectedAnswer': '31',
234: 1:  'history': [
234: 1:    {
234: 1:      'answer': '2',
234: 1:      'question': '1',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '4',
234: 1:      'question': '2',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '8',
234: 1:      'question': '3',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '7',
234: 1:      'question': '4',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '5',
234: 1:      'question': '5',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '10',
234: 1:      'question': '6',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '11',
234: 1:      'question': '7',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '13',
234: 1:      'question': '8',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '8',
234: 1:      'question': '9',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '7',
234: 1:      'question': '10',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '14',
234: 1:      'question': '11',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '19',
234: 1:      'question': '12',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '20',
234: 1:      'question': '13',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '22',
234: 1:      'question': '14',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '26',
234: 1:      'question': '15',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '25',
234: 1:      'question': '16',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '14',
234: 1:      'question': '17',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '19',
234: 1:      'question': '18',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '29',
234: 1:      'question': '19',
234: 1:      'valid': true
234: 1:    }
234: 1:  ],
234: 1:  'info': [
234: 1:    '✅f(1) = 2',
234: 1:    '✅f(2) = 4',
234: 1:    '✅f(3) = 8',
234: 1:    '✅f(4) = 7',
234: 1:    '✅f(5) = 5',
234: 1:    '✅f(6) = 10',
234: 1:    '✅f(7) = 11',
234: 1:    '✅f(8) = 13',
234: 1:    '✅f(9) = 8',
234: 1:    '✅f(10) = 7',
234: 1:    '✅f(11) = 14',
234: 1:    '✅f(12) = 19',
234: 1:    '✅f(13) = 20',
234: 1:    '✅f(14) = 22',
234: 1:    '✅f(15) = 26',
234: 1:    '✅f(16) = 25',
234: 1:    '✅f(17) = 14',
234: 1:    '✅f(18) = 19',
234: 1:    '✅f(19) = 29',
234: 1:    '❌f(20) = ??? != 31'
234: 1:  ],
234: 1:  'level': 9,
234: 1:  'nextQuestion': '20',
234: 1:  'questions': [
234: 1:    '1',
234: 1:    '2',
234: 1:    '3',
234: 1:    '4',
234: 1:    '5',
234: 1:    '6',
234: 1:    '7',
234: 1:    '8',
234: 1:    '9',
234: 1:    '10',
234: 1:    '11',
234: 1:    '12',
234: 1:    '13',
234: 1:    '14',
234: 1:    '15',
234: 1:    '16',
234: 1:    '17',
234: 1:    '18',
234: 1:    '19',
234: 1:    '20'
234: 1:  ]
234: 1:}
234: 1:Scores: 16280
234: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31']')
234: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
235: 1:BoardData {
235: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
235: 1:  'expectedAnswer': '26',
235: 1:  'history': [
235: 1:    {
235: 1:      'answer': '2',
235: 1:      'question': '1',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '4',
235: 1:      'question': '2',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '8',
235: 1:      'question': '3',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '7',
235: 1:      'question': '4',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '5',
235: 1:      'question': '5',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '10',
235: 1:      'question': '6',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '11',
235: 1:      'question': '7',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '13',
235: 1:      'question': '8',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '8',
235: 1:      'question': '9',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '7',
235: 1:      'question': '10',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '14',
235: 1:      'question': '11',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '19',
235: 1:      'question': '12',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '20',
235: 1:      'question': '13',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '22',
235: 1:      'question': '14',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '26',
235: 1:      'question': '15',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '25',
235: 1:      'question': '16',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '14',
235: 1:      'question': '17',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '19',
235: 1:      'question': '18',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '29',
235: 1:      'question': '19',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '31',
235: 1:      'question': '20',
235: 1:      'valid': true
235: 1:    }
235: 1:  ],
235: 1:  'info': [
235: 1:    '✅f(1) = 2',
235: 1:    '✅f(2) = 4',
235: 1:    '✅f(3) = 8',
235: 1:    '✅f(4) = 7',
235: 1:    '✅f(5) = 5',
235: 1:    '✅f(6) = 10',
235: 1:    '✅f(7) = 11',
235: 1:    '✅f(8) = 13',
235: 1:    '✅f(9) = 8',
235: 1:    '✅f(10) = 7',
235: 1:    '✅f(11) = 14',
235: 1:    '✅f(12) = 19',
235: 1:    '✅f(13) = 20',
235: 1:    '✅f(14) = 22',
235: 1:    '✅f(15) = 26',
235: 1:    '✅f(16) = 25',
235: 1:    '✅f(17) = 14',
235: 1:    '✅f(18) = 19',
235: 1:    '✅f(19) = 29',
235: 1:    '✅f(20) = 31',
235: 1:    '❌f(21) = ??? != 26'
235: 1:  ],
235: 1:  'level': 9,
235: 1:  'nextQuestion': '21',
235: 1:  'questions': [
235: 1:    '1',
235: 1:    '2',
235: 1:    '3',
235: 1:    '4',
235: 1:    '5',
235: 1:    '6',
235: 1:    '7',
235: 1:    '8',
235: 1:    '9',
235: 1:    '10',
235: 1:    '11',
235: 1:    '12',
235: 1:    '13',
235: 1:    '14',
235: 1:    '15',
235: 1:    '16',
235: 1:    '17',
235: 1:    '18',
235: 1:    '19',
235: 1:    '20',
235: 1:    '21'
235: 1:  ]
235: 1:}
235: 1:Scores: 16292
235: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26']')
235: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
236: 1:BoardData {
236: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
236: 1:  'expectedAnswer': '25',
236: 1:  'history': [
236: 1:    {
236: 1:      'answer': '2',
236: 1:      'question': '1',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '4',
236: 1:      'question': '2',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '8',
236: 1:      'question': '3',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '7',
236: 1:      'question': '4',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '5',
236: 1:      'question': '5',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '10',
236: 1:      'question': '6',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '11',
236: 1:      'question': '7',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '13',
236: 1:      'question': '8',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '8',
236: 1:      'question': '9',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '7',
236: 1:      'question': '10',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '14',
236: 1:      'question': '11',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '19',
236: 1:      'question': '12',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '20',
236: 1:      'question': '13',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '22',
236: 1:      'question': '14',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '26',
236: 1:      'question': '15',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '25',
236: 1:      'question': '16',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '14',
236: 1:      'question': '17',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '19',
236: 1:      'question': '18',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '29',
236: 1:      'question': '19',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '31',
236: 1:      'question': '20',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '26',
236: 1:      'question': '21',
236: 1:      'valid': true
236: 1:    }
236: 1:  ],
236: 1:  'info': [
236: 1:    '✅f(1) = 2',
236: 1:    '✅f(2) = 4',
236: 1:    '✅f(3) = 8',
236: 1:    '✅f(4) = 7',
236: 1:    '✅f(5) = 5',
236: 1:    '✅f(6) = 10',
236: 1:    '✅f(7) = 11',
236: 1:    '✅f(8) = 13',
236: 1:    '✅f(9) = 8',
236: 1:    '✅f(10) = 7',
236: 1:    '✅f(11) = 14',
236: 1:    '✅f(12) = 19',
236: 1:    '✅f(13) = 20',
236: 1:    '✅f(14) = 22',
236: 1:    '✅f(15) = 26',
236: 1:    '✅f(16) = 25',
236: 1:    '✅f(17) = 14',
236: 1:    '✅f(18) = 19',
236: 1:    '✅f(19) = 29',
236: 1:    '✅f(20) = 31',
236: 1:    '✅f(21) = 26',
236: 1:    '❌f(22) = ??? != 25'
236: 1:  ],
236: 1:  'level': 9,
236: 1:  'nextQuestion': '22',
236: 1:  'questions': [
236: 1:    '1',
236: 1:    '2',
236: 1:    '3',
236: 1:    '4',
236: 1:    '5',
236: 1:    '6',
236: 1:    '7',
236: 1:    '8',
236: 1:    '9',
236: 1:    '10',
236: 1:    '11',
236: 1:    '12',
236: 1:    '13',
236: 1:    '14',
236: 1:    '15',
236: 1:    '16',
236: 1:    '17',
236: 1:    '18',
236: 1:    '19',
236: 1:    '20',
236: 1:    '21',
236: 1:    '22'
236: 1:  ]
236: 1:}
236: 1:Scores: 16304
236: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25']')
236: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
237: 1:BoardData {
237: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
237: 1:  'expectedAnswer': '41',
237: 1:  'history': [
237: 1:    {
237: 1:      'answer': '2',
237: 1:      'question': '1',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '4',
237: 1:      'question': '2',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '8',
237: 1:      'question': '3',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '7',
237: 1:      'question': '4',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '5',
237: 1:      'question': '5',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '10',
237: 1:      'question': '6',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '11',
237: 1:      'question': '7',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '13',
237: 1:      'question': '8',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '8',
237: 1:      'question': '9',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '7',
237: 1:      'question': '10',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '14',
237: 1:      'question': '11',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '19',
237: 1:      'question': '12',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '20',
237: 1:      'question': '13',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '22',
237: 1:      'question': '14',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '26',
237: 1:      'question': '15',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '25',
237: 1:      'question': '16',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '14',
237: 1:      'question': '17',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '19',
237: 1:      'question': '18',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '29',
237: 1:      'question': '19',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '31',
237: 1:      'question': '20',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '26',
237: 1:      'question': '21',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '25',
237: 1:      'question': '22',
237: 1:      'valid': true
237: 1:    }
237: 1:  ],
237: 1:  'info': [
237: 1:    '✅f(1) = 2',
237: 1:    '✅f(2) = 4',
237: 1:    '✅f(3) = 8',
237: 1:    '✅f(4) = 7',
237: 1:    '✅f(5) = 5',
237: 1:    '✅f(6) = 10',
237: 1:    '✅f(7) = 11',
237: 1:    '✅f(8) = 13',
237: 1:    '✅f(9) = 8',
237: 1:    '✅f(10) = 7',
237: 1:    '✅f(11) = 14',
237: 1:    '✅f(12) = 19',
237: 1:    '✅f(13) = 20',
237: 1:    '✅f(14) = 22',
237: 1:    '✅f(15) = 26',
237: 1:    '✅f(16) = 25',
237: 1:    '✅f(17) = 14',
237: 1:    '✅f(18) = 19',
237: 1:    '✅f(19) = 29',
237: 1:    '✅f(20) = 31',
237: 1:    '✅f(21) = 26',
237: 1:    '✅f(22) = 25',
237: 1:    '❌f(23) = ??? != 41'
237: 1:  ],
237: 1:  'level': 9,
237: 1:  'nextQuestion': '23',
237: 1:  'questions': [
237: 1:    '1',
237: 1:    '2',
237: 1:    '3',
237: 1:    '4',
237: 1:    '5',
237: 1:    '6',
237: 1:    '7',
237: 1:    '8',
237: 1:    '9',
237: 1:    '10',
237: 1:    '11',
237: 1:    '12',
237: 1:    '13',
237: 1:    '14',
237: 1:    '15',
237: 1:    '16',
237: 1:    '17',
237: 1:    '18',
237: 1:    '19',
237: 1:    '20',
237: 1:    '21',
237: 1:    '22',
237: 1:    '23'
237: 1:  ]
237: 1:}
237: 1:Scores: 16316
237: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41']')
237: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
238: 1:BoardData {
238: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
238: 1:  'expectedAnswer': '37',
238: 1:  'history': [
238: 1:    {
238: 1:      'answer': '2',
238: 1:      'question': '1',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '4',
238: 1:      'question': '2',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '8',
238: 1:      'question': '3',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '7',
238: 1:      'question': '4',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '5',
238: 1:      'question': '5',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '10',
238: 1:      'question': '6',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '11',
238: 1:      'question': '7',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '13',
238: 1:      'question': '8',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '8',
238: 1:      'question': '9',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '7',
238: 1:      'question': '10',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '14',
238: 1:      'question': '11',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '19',
238: 1:      'question': '12',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '20',
238: 1:      'question': '13',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '22',
238: 1:      'question': '14',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '26',
238: 1:      'question': '15',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '25',
238: 1:      'question': '16',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '14',
238: 1:      'question': '17',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '19',
238: 1:      'question': '18',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '29',
238: 1:      'question': '19',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '31',
238: 1:      'question': '20',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '26',
238: 1:      'question': '21',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '25',
238: 1:      'question': '22',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '41',
238: 1:      'question': '23',
238: 1:      'valid': true
238: 1:    }
238: 1:  ],
238: 1:  'info': [
238: 1:    '✅f(1) = 2',
238: 1:    '✅f(2) = 4',
238: 1:    '✅f(3) = 8',
238: 1:    '✅f(4) = 7',
238: 1:    '✅f(5) = 5',
238: 1:    '✅f(6) = 10',
238: 1:    '✅f(7) = 11',
238: 1:    '✅f(8) = 13',
238: 1:    '✅f(9) = 8',
238: 1:    '✅f(10) = 7',
238: 1:    '✅f(11) = 14',
238: 1:    '✅f(12) = 19',
238: 1:    '✅f(13) = 20',
238: 1:    '✅f(14) = 22',
238: 1:    '✅f(15) = 26',
238: 1:    '✅f(16) = 25',
238: 1:    '✅f(17) = 14',
238: 1:    '✅f(18) = 19',
238: 1:    '✅f(19) = 29',
238: 1:    '✅f(20) = 31',
238: 1:    '✅f(21) = 26',
238: 1:    '✅f(22) = 25',
238: 1:    '✅f(23) = 41',
238: 1:    '❌f(24) = ??? != 37'
238: 1:  ],
238: 1:  'level': 9,
238: 1:  'nextQuestion': '24',
238: 1:  'questions': [
238: 1:    '1',
238: 1:    '2',
238: 1:    '3',
238: 1:    '4',
238: 1:    '5',
238: 1:    '6',
238: 1:    '7',
238: 1:    '8',
238: 1:    '9',
238: 1:    '10',
238: 1:    '11',
238: 1:    '12',
238: 1:    '13',
238: 1:    '14',
238: 1:    '15',
238: 1:    '16',
238: 1:    '17',
238: 1:    '18',
238: 1:    '19',
238: 1:    '20',
238: 1:    '21',
238: 1:    '22',
238: 1:    '23',
238: 1:    '24'
238: 1:  ]
238: 1:}
238: 1:Scores: 16328
238: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41', '37']')
238: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
239: 1:BoardData {
239: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
239: 1:  'expectedAnswer': '29',
239: 1:  'history': [
239: 1:    {
239: 1:      'answer': '2',
239: 1:      'question': '1',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '4',
239: 1:      'question': '2',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '8',
239: 1:      'question': '3',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '7',
239: 1:      'question': '4',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '5',
239: 1:      'question': '5',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '10',
239: 1:      'question': '6',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '11',
239: 1:      'question': '7',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '13',
239: 1:      'question': '8',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '8',
239: 1:      'question': '9',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '7',
239: 1:      'question': '10',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '14',
239: 1:      'question': '11',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '19',
239: 1:      'question': '12',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '20',
239: 1:      'question': '13',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '22',
239: 1:      'question': '14',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '26',
239: 1:      'question': '15',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '25',
239: 1:      'question': '16',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '14',
239: 1:      'question': '17',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '19',
239: 1:      'question': '18',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '29',
239: 1:      'question': '19',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '31',
239: 1:      'question': '20',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '26',
239: 1:      'question': '21',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '25',
239: 1:      'question': '22',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '41',
239: 1:      'question': '23',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '37',
239: 1:      'question': '24',
239: 1:      'valid': true
239: 1:    }
239: 1:  ],
239: 1:  'info': [
239: 1:    '✅f(1) = 2',
239: 1:    '✅f(2) = 4',
239: 1:    '✅f(3) = 8',
239: 1:    '✅f(4) = 7',
239: 1:    '✅f(5) = 5',
239: 1:    '✅f(6) = 10',
239: 1:    '✅f(7) = 11',
239: 1:    '✅f(8) = 13',
239: 1:    '✅f(9) = 8',
239: 1:    '✅f(10) = 7',
239: 1:    '✅f(11) = 14',
239: 1:    '✅f(12) = 19',
239: 1:    '✅f(13) = 20',
239: 1:    '✅f(14) = 22',
239: 1:    '✅f(15) = 26',
239: 1:    '✅f(16) = 25',
239: 1:    '✅f(17) = 14',
239: 1:    '✅f(18) = 19',
239: 1:    '✅f(19) = 29',
239: 1:    '✅f(20) = 31',
239: 1:    '✅f(21) = 26',
239: 1:    '✅f(22) = 25',
239: 1:    '✅f(23) = 41',
239: 1:    '✅f(24) = 37',
239: 1:    '❌f(25) = ??? != 29'
239: 1:  ],
239: 1:  'level': 9,
239: 1:  'nextQuestion': '25',
239: 1:  'questions': [
239: 1:    '1',
239: 1:    '2',
239: 1:    '3',
239: 1:    '4',
239: 1:    '5',
239: 1:    '6',
239: 1:    '7',
239: 1:    '8',
239: 1:    '9',
239: 1:    '10',
239: 1:    '11',
239: 1:    '12',
239: 1:    '13',
239: 1:    '14',
239: 1:    '15',
239: 1:    '16',
239: 1:    '17',
239: 1:    '18',
239: 1:    '19',
239: 1:    '20',
239: 1:    '21',
239: 1:    '22',
239: 1:    '23',
239: 1:    '24',
239: 1:    '25'
239: 1:  ]
239: 1:}
239: 1:Scores: 16340
239: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41', '37', '29']')
239: 1:Fire Event: PassTest{complexity=30, testCount=25}
239: 1:Fire Event: NextAlgorithm{complexity=30, time=0}
------------------------------------------
240: 1:BoardData {
240: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
240: 1:  'history': [
240: 1:    {
240: 1:      'answer': '2',
240: 1:      'question': '1',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '4',
240: 1:      'question': '2',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '8',
240: 1:      'question': '3',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '7',
240: 1:      'question': '4',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '5',
240: 1:      'question': '5',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '10',
240: 1:      'question': '6',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '11',
240: 1:      'question': '7',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '13',
240: 1:      'question': '8',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '8',
240: 1:      'question': '9',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '7',
240: 1:      'question': '10',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '14',
240: 1:      'question': '11',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '19',
240: 1:      'question': '12',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '20',
240: 1:      'question': '13',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '22',
240: 1:      'question': '14',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '26',
240: 1:      'question': '15',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '25',
240: 1:      'question': '16',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '14',
240: 1:      'question': '17',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '19',
240: 1:      'question': '18',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '29',
240: 1:      'question': '19',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '31',
240: 1:      'question': '20',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '26',
240: 1:      'question': '21',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '25',
240: 1:      'question': '22',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '41',
240: 1:      'question': '23',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '37',
240: 1:      'question': '24',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '29',
240: 1:      'question': '25',
240: 1:      'valid': true
240: 1:    }
240: 1:  ],
240: 1:  'info': [
240: 1:    '✅f(1) = 2',
240: 1:    '✅f(2) = 4',
240: 1:    '✅f(3) = 8',
240: 1:    '✅f(4) = 7',
240: 1:    '✅f(5) = 5',
240: 1:    '✅f(6) = 10',
240: 1:    '✅f(7) = 11',
240: 1:    '✅f(8) = 13',
240: 1:    '✅f(9) = 8',
240: 1:    '✅f(10) = 7',
240: 1:    '✅f(11) = 14',
240: 1:    '✅f(12) = 19',
240: 1:    '✅f(13) = 20',
240: 1:    '✅f(14) = 22',
240: 1:    '✅f(15) = 26',
240: 1:    '✅f(16) = 25',
240: 1:    '✅f(17) = 14',
240: 1:    '✅f(18) = 19',
240: 1:    '✅f(19) = 29',
240: 1:    '✅f(20) = 31',
240: 1:    '✅f(21) = 26',
240: 1:    '✅f(22) = 25',
240: 1:    '✅f(23) = 41',
240: 1:    '✅f(24) = 37',
240: 1:    '✅f(25) = 29'
240: 1:  ],
240: 1:  'level': 9,
240: 1:  'questions': []
240: 1:}
240: 1:Scores: 20401
240: 1:Answer: message('StartNextLevel')
240: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
241: 1:BoardData {
241: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
241: 1:  'expectedAnswer': 'true',
241: 1:  'history': [],
241: 1:  'info': ['❌f(0, 1, 5) = ??? != true'],
241: 1:  'level': 10,
241: 1:  'nextQuestion': '0, 1, 5',
241: 1:  'questions': ['0, 1, 5']
241: 1:}
241: 1:Scores: 20401
241: 1:Answer: message('['true']')
241: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
242: 1:BoardData {
242: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
242: 1:  'expectedAnswer': 'true',
242: 1:  'history': [{
242: 1:    'answer': 'true',
242: 1:    'question': '0, 1, 5',
242: 1:    'valid': true
242: 1:  }],
242: 1:  'info': [
242: 1:    '✅f(0, 1, 5) = true',
242: 1:    '❌f(1, 0, 1) = ??? != true'
242: 1:  ],
242: 1:  'level': 10,
242: 1:  'nextQuestion': '1, 0, 1',
242: 1:  'questions': [
242: 1:    '0, 1, 5',
242: 1:    '1, 0, 1'
242: 1:  ]
242: 1:}
242: 1:Scores: 20408
242: 1:Answer: message('['true', 'true']')
242: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
243: 1:BoardData {
243: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
243: 1:  'expectedAnswer': 'false',
243: 1:  'history': [
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '0, 1, 5',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '1, 0, 1',
243: 1:      'valid': true
243: 1:    }
243: 1:  ],
243: 1:  'info': [
243: 1:    '✅f(0, 1, 5) = true',
243: 1:    '✅f(1, 0, 1) = true',
243: 1:    '❌f(1, 0, 2) = ??? != false'
243: 1:  ],
243: 1:  'level': 10,
243: 1:  'nextQuestion': '1, 0, 2',
243: 1:  'questions': [
243: 1:    '0, 1, 5',
243: 1:    '1, 0, 1',
243: 1:    '1, 0, 2'
243: 1:  ]
243: 1:}
243: 1:Scores: 20415
243: 1:Answer: message('['true', 'true', 'false']')
243: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
244: 1:BoardData {
244: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
244: 1:  'expectedAnswer': 'true',
244: 1:  'history': [
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '0, 1, 5',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '1, 0, 1',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '1, 0, 2',
244: 1:      'valid': true
244: 1:    }
244: 1:  ],
244: 1:  'info': [
244: 1:    '✅f(0, 1, 5) = true',
244: 1:    '✅f(1, 0, 1) = true',
244: 1:    '✅f(1, 0, 2) = false',
244: 1:    '❌f(3, 1, 7) = ??? != true'
244: 1:  ],
244: 1:  'level': 10,
244: 1:  'nextQuestion': '3, 1, 7',
244: 1:  'questions': [
244: 1:    '0, 1, 5',
244: 1:    '1, 0, 1',
244: 1:    '1, 0, 2',
244: 1:    '3, 1, 7'
244: 1:  ]
244: 1:}
244: 1:Scores: 20422
244: 1:Answer: message('['true', 'true', 'false', 'true']')
244: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
245: 1:BoardData {
245: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
245: 1:  'expectedAnswer': 'true',
245: 1:  'history': [
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '0, 1, 5',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '1, 0, 1',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '1, 0, 2',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '3, 1, 7',
245: 1:      'valid': true
245: 1:    }
245: 1:  ],
245: 1:  'info': [
245: 1:    '✅f(0, 1, 5) = true',
245: 1:    '✅f(1, 0, 1) = true',
245: 1:    '✅f(1, 0, 2) = false',
245: 1:    '✅f(3, 1, 7) = true',
245: 1:    '❌f(4, 2, 14) = ??? != true'
245: 1:  ],
245: 1:  'level': 10,
245: 1:  'nextQuestion': '4, 2, 14',
245: 1:  'questions': [
245: 1:    '0, 1, 5',
245: 1:    '1, 0, 1',
245: 1:    '1, 0, 2',
245: 1:    '3, 1, 7',
245: 1:    '4, 2, 14'
245: 1:  ]
245: 1:}
245: 1:Scores: 20429
245: 1:Answer: message('['true', 'true', 'false', 'true', 'true']')
245: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
246: 1:BoardData {
246: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
246: 1:  'expectedAnswer': 'false',
246: 1:  'history': [
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '0, 1, 5',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '1, 0, 1',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '1, 0, 2',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '3, 1, 7',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '4, 2, 14',
246: 1:      'valid': true
246: 1:    }
246: 1:  ],
246: 1:  'info': [
246: 1:    '✅f(0, 1, 5) = true',
246: 1:    '✅f(1, 0, 1) = true',
246: 1:    '✅f(1, 0, 2) = false',
246: 1:    '✅f(3, 1, 7) = true',
246: 1:    '✅f(4, 2, 14) = true',
246: 1:    '❌f(3, 2, 14) = ??? != false'
246: 1:  ],
246: 1:  'level': 10,
246: 1:  'nextQuestion': '3, 2, 14',
246: 1:  'questions': [
246: 1:    '0, 1, 5',
246: 1:    '1, 0, 1',
246: 1:    '1, 0, 2',
246: 1:    '3, 1, 7',
246: 1:    '4, 2, 14',
246: 1:    '3, 2, 14'
246: 1:  ]
246: 1:}
246: 1:Scores: 20436
246: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false']')
246: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
247: 1:BoardData {
247: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
247: 1:  'expectedAnswer': 'true',
247: 1:  'history': [
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '0, 1, 5',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '1, 0, 1',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '1, 0, 2',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '3, 1, 7',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '4, 2, 14',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '3, 2, 14',
247: 1:      'valid': true
247: 1:    }
247: 1:  ],
247: 1:  'info': [
247: 1:    '✅f(0, 1, 5) = true',
247: 1:    '✅f(1, 0, 1) = true',
247: 1:    '✅f(1, 0, 2) = false',
247: 1:    '✅f(3, 1, 7) = true',
247: 1:    '✅f(4, 2, 14) = true',
247: 1:    '✅f(3, 2, 14) = false',
247: 1:    '❌f(0, 2, 5) = ??? != true'
247: 1:  ],
247: 1:  'level': 10,
247: 1:  'nextQuestion': '0, 2, 5',
247: 1:  'questions': [
247: 1:    '0, 1, 5',
247: 1:    '1, 0, 1',
247: 1:    '1, 0, 2',
247: 1:    '3, 1, 7',
247: 1:    '4, 2, 14',
247: 1:    '3, 2, 14',
247: 1:    '0, 2, 5'
247: 1:  ]
247: 1:}
247: 1:Scores: 20443
247: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true']')
247: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
248: 1:BoardData {
248: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
248: 1:  'expectedAnswer': 'true',
248: 1:  'history': [
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '0, 1, 5',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '1, 0, 1',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '1, 0, 2',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '3, 1, 7',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '4, 2, 14',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '3, 2, 14',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '0, 2, 5',
248: 1:      'valid': true
248: 1:    }
248: 1:  ],
248: 1:  'info': [
248: 1:    '✅f(0, 1, 5) = true',
248: 1:    '✅f(1, 0, 1) = true',
248: 1:    '✅f(1, 0, 2) = false',
248: 1:    '✅f(3, 1, 7) = true',
248: 1:    '✅f(4, 2, 14) = true',
248: 1:    '✅f(3, 2, 14) = false',
248: 1:    '✅f(0, 2, 5) = true',
248: 1:    '❌f(3, 1, 6) = ??? != true'
248: 1:  ],
248: 1:  'level': 10,
248: 1:  'nextQuestion': '3, 1, 6',
248: 1:  'questions': [
248: 1:    '0, 1, 5',
248: 1:    '1, 0, 1',
248: 1:    '1, 0, 2',
248: 1:    '3, 1, 7',
248: 1:    '4, 2, 14',
248: 1:    '3, 2, 14',
248: 1:    '0, 2, 5',
248: 1:    '3, 1, 6'
248: 1:  ]
248: 1:}
248: 1:Scores: 20450
248: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true']')
248: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
249: 1:BoardData {
249: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
249: 1:  'expectedAnswer': 'false',
249: 1:  'history': [
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '0, 1, 5',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '1, 0, 1',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '1, 0, 2',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '3, 1, 7',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '4, 2, 14',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '3, 2, 14',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '0, 2, 5',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '3, 1, 6',
249: 1:      'valid': true
249: 1:    }
249: 1:  ],
249: 1:  'info': [
249: 1:    '✅f(0, 1, 5) = true',
249: 1:    '✅f(1, 0, 1) = true',
249: 1:    '✅f(1, 0, 2) = false',
249: 1:    '✅f(3, 1, 7) = true',
249: 1:    '✅f(4, 2, 14) = true',
249: 1:    '✅f(3, 2, 14) = false',
249: 1:    '✅f(0, 2, 5) = true',
249: 1:    '✅f(3, 1, 6) = true',
249: 1:    '❌f(3, 1, 9) = ??? != false'
249: 1:  ],
249: 1:  'level': 10,
249: 1:  'nextQuestion': '3, 1, 9',
249: 1:  'questions': [
249: 1:    '0, 1, 5',
249: 1:    '1, 0, 1',
249: 1:    '1, 0, 2',
249: 1:    '3, 1, 7',
249: 1:    '4, 2, 14',
249: 1:    '3, 2, 14',
249: 1:    '0, 2, 5',
249: 1:    '3, 1, 6',
249: 1:    '3, 1, 9'
249: 1:  ]
249: 1:}
249: 1:Scores: 20457
249: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false']')
249: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
250: 1:BoardData {
250: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
250: 1:  'expectedAnswer': 'false',
250: 1:  'history': [
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '0, 1, 5',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '1, 0, 1',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '1, 0, 2',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '3, 1, 7',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '4, 2, 14',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '3, 2, 14',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '0, 2, 5',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '3, 1, 6',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '3, 1, 9',
250: 1:      'valid': true
250: 1:    }
250: 1:  ],
250: 1:  'info': [
250: 1:    '✅f(0, 1, 5) = true',
250: 1:    '✅f(1, 0, 1) = true',
250: 1:    '✅f(1, 0, 2) = false',
250: 1:    '✅f(3, 1, 7) = true',
250: 1:    '✅f(4, 2, 14) = true',
250: 1:    '✅f(3, 2, 14) = false',
250: 1:    '✅f(0, 2, 5) = true',
250: 1:    '✅f(3, 1, 6) = true',
250: 1:    '✅f(3, 1, 9) = false',
250: 1:    '❌f(3, 2, 9) = ??? != false'
250: 1:  ],
250: 1:  'level': 10,
250: 1:  'nextQuestion': '3, 2, 9',
250: 1:  'questions': [
250: 1:    '0, 1, 5',
250: 1:    '1, 0, 1',
250: 1:    '1, 0, 2',
250: 1:    '3, 1, 7',
250: 1:    '4, 2, 14',
250: 1:    '3, 2, 14',
250: 1:    '0, 2, 5',
250: 1:    '3, 1, 6',
250: 1:    '3, 1, 9',
250: 1:    '3, 2, 9'
250: 1:  ]
250: 1:}
250: 1:Scores: 20464
250: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false']')
250: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
251: 1:BoardData {
251: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
251: 1:  'expectedAnswer': 'true',
251: 1:  'history': [
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '0, 1, 5',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '1, 0, 1',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '1, 0, 2',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '3, 1, 7',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '4, 2, 14',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '3, 2, 14',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '0, 2, 5',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '3, 1, 6',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '3, 1, 9',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '3, 2, 9',
251: 1:      'valid': true
251: 1:    }
251: 1:  ],
251: 1:  'info': [
251: 1:    '✅f(0, 1, 5) = true',
251: 1:    '✅f(1, 0, 1) = true',
251: 1:    '✅f(1, 0, 2) = false',
251: 1:    '✅f(3, 1, 7) = true',
251: 1:    '✅f(4, 2, 14) = true',
251: 1:    '✅f(3, 2, 14) = false',
251: 1:    '✅f(0, 2, 5) = true',
251: 1:    '✅f(3, 1, 6) = true',
251: 1:    '✅f(3, 1, 9) = false',
251: 1:    '✅f(3, 2, 9) = false',
251: 1:    '❌f(10, 10, 0) = ??? != true'
251: 1:  ],
251: 1:  'level': 10,
251: 1:  'nextQuestion': '10, 10, 0',
251: 1:  'questions': [
251: 1:    '0, 1, 5',
251: 1:    '1, 0, 1',
251: 1:    '1, 0, 2',
251: 1:    '3, 1, 7',
251: 1:    '4, 2, 14',
251: 1:    '3, 2, 14',
251: 1:    '0, 2, 5',
251: 1:    '3, 1, 6',
251: 1:    '3, 1, 9',
251: 1:    '3, 2, 9',
251: 1:    '10, 10, 0'
251: 1:  ]
251: 1:}
251: 1:Scores: 20471
251: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
251: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
252: 1:BoardData {
252: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
252: 1:  'expectedAnswer': 'false',
252: 1:  'history': [
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '0, 1, 5',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '1, 0, 1',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '1, 0, 2',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '3, 1, 7',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '4, 2, 14',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '3, 2, 14',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '0, 2, 5',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '3, 1, 6',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '3, 1, 9',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '3, 2, 9',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '10, 10, 0',
252: 1:      'valid': true
252: 1:    }
252: 1:  ],
252: 1:  'info': [
252: 1:    '✅f(0, 1, 5) = true',
252: 1:    '✅f(1, 0, 1) = true',
252: 1:    '✅f(1, 0, 2) = false',
252: 1:    '✅f(3, 1, 7) = true',
252: 1:    '✅f(4, 2, 14) = true',
252: 1:    '✅f(3, 2, 14) = false',
252: 1:    '✅f(0, 2, 5) = true',
252: 1:    '✅f(3, 1, 6) = true',
252: 1:    '✅f(3, 1, 9) = false',
252: 1:    '✅f(3, 2, 9) = false',
252: 1:    '✅f(10, 10, 0) = true',
252: 1:    '❌f(0, 0, 1) = ??? != false'
252: 1:  ],
252: 1:  'level': 10,
252: 1:  'nextQuestion': '0, 0, 1',
252: 1:  'questions': [
252: 1:    '0, 1, 5',
252: 1:    '1, 0, 1',
252: 1:    '1, 0, 2',
252: 1:    '3, 1, 7',
252: 1:    '4, 2, 14',
252: 1:    '3, 2, 14',
252: 1:    '0, 2, 5',
252: 1:    '3, 1, 6',
252: 1:    '3, 1, 9',
252: 1:    '3, 2, 9',
252: 1:    '10, 10, 0',
252: 1:    '0, 0, 1'
252: 1:  ]
252: 1:}
252: 1:Scores: 20478
252: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false']')
252: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
253: 1:BoardData {
253: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
253: 1:  'expectedAnswer': 'false',
253: 1:  'history': [
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '0, 1, 5',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '1, 0, 1',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '1, 0, 2',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '3, 1, 7',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '4, 2, 14',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '3, 2, 14',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '0, 2, 5',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '3, 1, 6',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '3, 1, 9',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '3, 2, 9',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '10, 10, 0',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '0, 0, 1',
253: 1:      'valid': true
253: 1:    }
253: 1:  ],
253: 1:  'info': [
253: 1:    '✅f(0, 1, 5) = true',
253: 1:    '✅f(1, 0, 1) = true',
253: 1:    '✅f(1, 0, 2) = false',
253: 1:    '✅f(3, 1, 7) = true',
253: 1:    '✅f(4, 2, 14) = true',
253: 1:    '✅f(3, 2, 14) = false',
253: 1:    '✅f(0, 2, 5) = true',
253: 1:    '✅f(3, 1, 6) = true',
253: 1:    '✅f(3, 1, 9) = false',
253: 1:    '✅f(3, 2, 9) = false',
253: 1:    '✅f(10, 10, 0) = true',
253: 1:    '✅f(0, 0, 1) = false',
253: 1:    '❌f(0, 1, 1) = ??? != false'
253: 1:  ],
253: 1:  'level': 10,
253: 1:  'nextQuestion': '0, 1, 1',
253: 1:  'questions': [
253: 1:    '0, 1, 5',
253: 1:    '1, 0, 1',
253: 1:    '1, 0, 2',
253: 1:    '3, 1, 7',
253: 1:    '4, 2, 14',
253: 1:    '3, 2, 14',
253: 1:    '0, 2, 5',
253: 1:    '3, 1, 6',
253: 1:    '3, 1, 9',
253: 1:    '3, 2, 9',
253: 1:    '10, 10, 0',
253: 1:    '0, 0, 1',
253: 1:    '0, 1, 1'
253: 1:  ]
253: 1:}
253: 1:Scores: 20485
253: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false']')
253: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
254: 1:BoardData {
254: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
254: 1:  'expectedAnswer': 'false',
254: 1:  'history': [
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '0, 1, 5',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '1, 0, 1',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '1, 0, 2',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '3, 1, 7',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '4, 2, 14',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '3, 2, 14',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '0, 2, 5',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '3, 1, 6',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '3, 1, 9',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '3, 2, 9',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '10, 10, 0',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '0, 0, 1',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '0, 1, 1',
254: 1:      'valid': true
254: 1:    }
254: 1:  ],
254: 1:  'info': [
254: 1:    '✅f(0, 1, 5) = true',
254: 1:    '✅f(1, 0, 1) = true',
254: 1:    '✅f(1, 0, 2) = false',
254: 1:    '✅f(3, 1, 7) = true',
254: 1:    '✅f(4, 2, 14) = true',
254: 1:    '✅f(3, 2, 14) = false',
254: 1:    '✅f(0, 2, 5) = true',
254: 1:    '✅f(3, 1, 6) = true',
254: 1:    '✅f(3, 1, 9) = false',
254: 1:    '✅f(3, 2, 9) = false',
254: 1:    '✅f(10, 10, 0) = true',
254: 1:    '✅f(0, 0, 1) = false',
254: 1:    '✅f(0, 1, 1) = false',
254: 1:    '❌f(0, 0, 2) = ??? != false'
254: 1:  ],
254: 1:  'level': 10,
254: 1:  'nextQuestion': '0, 0, 2',
254: 1:  'questions': [
254: 1:    '0, 1, 5',
254: 1:    '1, 0, 1',
254: 1:    '1, 0, 2',
254: 1:    '3, 1, 7',
254: 1:    '4, 2, 14',
254: 1:    '3, 2, 14',
254: 1:    '0, 2, 5',
254: 1:    '3, 1, 6',
254: 1:    '3, 1, 9',
254: 1:    '3, 2, 9',
254: 1:    '10, 10, 0',
254: 1:    '0, 0, 1',
254: 1:    '0, 1, 1',
254: 1:    '0, 0, 2'
254: 1:  ]
254: 1:}
254: 1:Scores: 20492
254: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false']')
254: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
255: 1:BoardData {
255: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
255: 1:  'expectedAnswer': 'true',
255: 1:  'history': [
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '0, 1, 5',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '1, 0, 1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '1, 0, 2',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '3, 1, 7',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '4, 2, 14',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '3, 2, 14',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '0, 2, 5',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '3, 1, 6',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '3, 1, 9',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '3, 2, 9',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '10, 10, 0',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '0, 0, 1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '0, 1, 1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '0, 0, 2',
255: 1:      'valid': true
255: 1:    }
255: 1:  ],
255: 1:  'info': [
255: 1:    '✅f(0, 1, 5) = true',
255: 1:    '✅f(1, 0, 1) = true',
255: 1:    '✅f(1, 0, 2) = false',
255: 1:    '✅f(3, 1, 7) = true',
255: 1:    '✅f(4, 2, 14) = true',
255: 1:    '✅f(3, 2, 14) = false',
255: 1:    '✅f(0, 2, 5) = true',
255: 1:    '✅f(3, 1, 6) = true',
255: 1:    '✅f(3, 1, 9) = false',
255: 1:    '✅f(3, 2, 9) = false',
255: 1:    '✅f(10, 10, 0) = true',
255: 1:    '✅f(0, 0, 1) = false',
255: 1:    '✅f(0, 1, 1) = false',
255: 1:    '✅f(0, 0, 2) = false',
255: 1:    '❌f(2, 0, 2) = ??? != true'
255: 1:  ],
255: 1:  'level': 10,
255: 1:  'nextQuestion': '2, 0, 2',
255: 1:  'questions': [
255: 1:    '0, 1, 5',
255: 1:    '1, 0, 1',
255: 1:    '1, 0, 2',
255: 1:    '3, 1, 7',
255: 1:    '4, 2, 14',
255: 1:    '3, 2, 14',
255: 1:    '0, 2, 5',
255: 1:    '3, 1, 6',
255: 1:    '3, 1, 9',
255: 1:    '3, 2, 9',
255: 1:    '10, 10, 0',
255: 1:    '0, 0, 1',
255: 1:    '0, 1, 1',
255: 1:    '0, 0, 2',
255: 1:    '2, 0, 2'
255: 1:  ]
255: 1:}
255: 1:Scores: 20499
255: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true']')
255: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
256: 1:BoardData {
256: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
256: 1:  'expectedAnswer': 'false',
256: 1:  'history': [
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '0, 1, 5',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '1, 0, 1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '1, 0, 2',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '3, 1, 7',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '4, 2, 14',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '3, 2, 14',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '0, 2, 5',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '3, 1, 6',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '3, 1, 9',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '3, 2, 9',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '10, 10, 0',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '0, 0, 1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '0, 1, 1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '0, 0, 2',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '2, 0, 2',
256: 1:      'valid': true
256: 1:    }
256: 1:  ],
256: 1:  'info': [
256: 1:    '✅f(0, 1, 5) = true',
256: 1:    '✅f(1, 0, 1) = true',
256: 1:    '✅f(1, 0, 2) = false',
256: 1:    '✅f(3, 1, 7) = true',
256: 1:    '✅f(4, 2, 14) = true',
256: 1:    '✅f(3, 2, 14) = false',
256: 1:    '✅f(0, 2, 5) = true',
256: 1:    '✅f(3, 1, 6) = true',
256: 1:    '✅f(3, 1, 9) = false',
256: 1:    '✅f(3, 2, 9) = false',
256: 1:    '✅f(10, 10, 0) = true',
256: 1:    '✅f(0, 0, 1) = false',
256: 1:    '✅f(0, 1, 1) = false',
256: 1:    '✅f(0, 0, 2) = false',
256: 1:    '✅f(2, 0, 2) = true',
256: 1:    '❌f(0, 1, 2) = ??? != false'
256: 1:  ],
256: 1:  'level': 10,
256: 1:  'nextQuestion': '0, 1, 2',
256: 1:  'questions': [
256: 1:    '0, 1, 5',
256: 1:    '1, 0, 1',
256: 1:    '1, 0, 2',
256: 1:    '3, 1, 7',
256: 1:    '4, 2, 14',
256: 1:    '3, 2, 14',
256: 1:    '0, 2, 5',
256: 1:    '3, 1, 6',
256: 1:    '3, 1, 9',
256: 1:    '3, 2, 9',
256: 1:    '10, 10, 0',
256: 1:    '0, 0, 1',
256: 1:    '0, 1, 1',
256: 1:    '0, 0, 2',
256: 1:    '2, 0, 2',
256: 1:    '0, 1, 2'
256: 1:  ]
256: 1:}
256: 1:Scores: 20506
256: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false']')
256: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
257: 1:BoardData {
257: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
257: 1:  'expectedAnswer': 'false',
257: 1:  'history': [
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '0, 1, 5',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '1, 0, 1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '1, 0, 2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '3, 1, 7',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '4, 2, 14',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '3, 2, 14',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '0, 2, 5',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '3, 1, 6',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '3, 1, 9',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '3, 2, 9',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '10, 10, 0',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '0, 0, 1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '0, 1, 1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '0, 0, 2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '2, 0, 2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '0, 1, 2',
257: 1:      'valid': true
257: 1:    }
257: 1:  ],
257: 1:  'info': [
257: 1:    '✅f(0, 1, 5) = true',
257: 1:    '✅f(1, 0, 1) = true',
257: 1:    '✅f(1, 0, 2) = false',
257: 1:    '✅f(3, 1, 7) = true',
257: 1:    '✅f(4, 2, 14) = true',
257: 1:    '✅f(3, 2, 14) = false',
257: 1:    '✅f(0, 2, 5) = true',
257: 1:    '✅f(3, 1, 6) = true',
257: 1:    '✅f(3, 1, 9) = false',
257: 1:    '✅f(3, 2, 9) = false',
257: 1:    '✅f(10, 10, 0) = true',
257: 1:    '✅f(0, 0, 1) = false',
257: 1:    '✅f(0, 1, 1) = false',
257: 1:    '✅f(0, 0, 2) = false',
257: 1:    '✅f(2, 0, 2) = true',
257: 1:    '✅f(0, 1, 2) = false',
257: 1:    '❌f(1, 1, 2) = ??? != false'
257: 1:  ],
257: 1:  'level': 10,
257: 1:  'nextQuestion': '1, 1, 2',
257: 1:  'questions': [
257: 1:    '0, 1, 5',
257: 1:    '1, 0, 1',
257: 1:    '1, 0, 2',
257: 1:    '3, 1, 7',
257: 1:    '4, 2, 14',
257: 1:    '3, 2, 14',
257: 1:    '0, 2, 5',
257: 1:    '3, 1, 6',
257: 1:    '3, 1, 9',
257: 1:    '3, 2, 9',
257: 1:    '10, 10, 0',
257: 1:    '0, 0, 1',
257: 1:    '0, 1, 1',
257: 1:    '0, 0, 2',
257: 1:    '2, 0, 2',
257: 1:    '0, 1, 2',
257: 1:    '1, 1, 2'
257: 1:  ]
257: 1:}
257: 1:Scores: 20513
257: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false']')
257: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
258: 1:BoardData {
258: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
258: 1:  'expectedAnswer': 'false',
258: 1:  'history': [
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '0, 1, 5',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '1, 0, 1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '1, 0, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '3, 1, 7',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '4, 2, 14',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '3, 2, 14',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '0, 2, 5',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '3, 1, 6',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '3, 1, 9',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '3, 2, 9',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '10, 10, 0',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '0, 0, 1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '0, 1, 1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '0, 0, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '2, 0, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '0, 1, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '1, 1, 2',
258: 1:      'valid': true
258: 1:    }
258: 1:  ],
258: 1:  'info': [
258: 1:    '✅f(0, 1, 5) = true',
258: 1:    '✅f(1, 0, 1) = true',
258: 1:    '✅f(1, 0, 2) = false',
258: 1:    '✅f(3, 1, 7) = true',
258: 1:    '✅f(4, 2, 14) = true',
258: 1:    '✅f(3, 2, 14) = false',
258: 1:    '✅f(0, 2, 5) = true',
258: 1:    '✅f(3, 1, 6) = true',
258: 1:    '✅f(3, 1, 9) = false',
258: 1:    '✅f(3, 2, 9) = false',
258: 1:    '✅f(10, 10, 0) = true',
258: 1:    '✅f(0, 0, 1) = false',
258: 1:    '✅f(0, 1, 1) = false',
258: 1:    '✅f(0, 0, 2) = false',
258: 1:    '✅f(2, 0, 2) = true',
258: 1:    '✅f(0, 1, 2) = false',
258: 1:    '✅f(1, 1, 2) = false',
258: 1:    '❌f(2, 1, 3) = ??? != false'
258: 1:  ],
258: 1:  'level': 10,
258: 1:  'nextQuestion': '2, 1, 3',
258: 1:  'questions': [
258: 1:    '0, 1, 5',
258: 1:    '1, 0, 1',
258: 1:    '1, 0, 2',
258: 1:    '3, 1, 7',
258: 1:    '4, 2, 14',
258: 1:    '3, 2, 14',
258: 1:    '0, 2, 5',
258: 1:    '3, 1, 6',
258: 1:    '3, 1, 9',
258: 1:    '3, 2, 9',
258: 1:    '10, 10, 0',
258: 1:    '0, 0, 1',
258: 1:    '0, 1, 1',
258: 1:    '0, 0, 2',
258: 1:    '2, 0, 2',
258: 1:    '0, 1, 2',
258: 1:    '1, 1, 2',
258: 1:    '2, 1, 3'
258: 1:  ]
258: 1:}
258: 1:Scores: 20520
258: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false']')
258: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
259: 1:BoardData {
259: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
259: 1:  'expectedAnswer': 'false',
259: 1:  'history': [
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '0, 1, 5',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '1, 0, 1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '1, 0, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '3, 1, 7',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '4, 2, 14',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '3, 2, 14',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '0, 2, 5',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '3, 1, 6',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '3, 1, 9',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '3, 2, 9',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '10, 10, 0',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '0, 0, 1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '0, 1, 1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '0, 0, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '2, 0, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '0, 1, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '1, 1, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '2, 1, 3',
259: 1:      'valid': true
259: 1:    }
259: 1:  ],
259: 1:  'info': [
259: 1:    '✅f(0, 1, 5) = true',
259: 1:    '✅f(1, 0, 1) = true',
259: 1:    '✅f(1, 0, 2) = false',
259: 1:    '✅f(3, 1, 7) = true',
259: 1:    '✅f(4, 2, 14) = true',
259: 1:    '✅f(3, 2, 14) = false',
259: 1:    '✅f(0, 2, 5) = true',
259: 1:    '✅f(3, 1, 6) = true',
259: 1:    '✅f(3, 1, 9) = false',
259: 1:    '✅f(3, 2, 9) = false',
259: 1:    '✅f(10, 10, 0) = true',
259: 1:    '✅f(0, 0, 1) = false',
259: 1:    '✅f(0, 1, 1) = false',
259: 1:    '✅f(0, 0, 2) = false',
259: 1:    '✅f(2, 0, 2) = true',
259: 1:    '✅f(0, 1, 2) = false',
259: 1:    '✅f(1, 1, 2) = false',
259: 1:    '✅f(2, 1, 3) = false',
259: 1:    '❌f(3, 1, 4) = ??? != false'
259: 1:  ],
259: 1:  'level': 10,
259: 1:  'nextQuestion': '3, 1, 4',
259: 1:  'questions': [
259: 1:    '0, 1, 5',
259: 1:    '1, 0, 1',
259: 1:    '1, 0, 2',
259: 1:    '3, 1, 7',
259: 1:    '4, 2, 14',
259: 1:    '3, 2, 14',
259: 1:    '0, 2, 5',
259: 1:    '3, 1, 6',
259: 1:    '3, 1, 9',
259: 1:    '3, 2, 9',
259: 1:    '10, 10, 0',
259: 1:    '0, 0, 1',
259: 1:    '0, 1, 1',
259: 1:    '0, 0, 2',
259: 1:    '2, 0, 2',
259: 1:    '0, 1, 2',
259: 1:    '1, 1, 2',
259: 1:    '2, 1, 3',
259: 1:    '3, 1, 4'
259: 1:  ]
259: 1:}
259: 1:Scores: 20527
259: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false']')
259: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
260: 1:BoardData {
260: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
260: 1:  'expectedAnswer': 'true',
260: 1:  'history': [
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '0, 1, 5',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '1, 0, 1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '1, 0, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '3, 1, 7',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '4, 2, 14',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '3, 2, 14',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '0, 2, 5',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '3, 1, 6',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '3, 1, 9',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '3, 2, 9',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '10, 10, 0',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '0, 0, 1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '0, 1, 1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '0, 0, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '2, 0, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '0, 1, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '1, 1, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '2, 1, 3',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '3, 1, 4',
260: 1:      'valid': true
260: 1:    }
260: 1:  ],
260: 1:  'info': [
260: 1:    '✅f(0, 1, 5) = true',
260: 1:    '✅f(1, 0, 1) = true',
260: 1:    '✅f(1, 0, 2) = false',
260: 1:    '✅f(3, 1, 7) = true',
260: 1:    '✅f(4, 2, 14) = true',
260: 1:    '✅f(3, 2, 14) = false',
260: 1:    '✅f(0, 2, 5) = true',
260: 1:    '✅f(3, 1, 6) = true',
260: 1:    '✅f(3, 1, 9) = false',
260: 1:    '✅f(3, 2, 9) = false',
260: 1:    '✅f(10, 10, 0) = true',
260: 1:    '✅f(0, 0, 1) = false',
260: 1:    '✅f(0, 1, 1) = false',
260: 1:    '✅f(0, 0, 2) = false',
260: 1:    '✅f(2, 0, 2) = true',
260: 1:    '✅f(0, 1, 2) = false',
260: 1:    '✅f(1, 1, 2) = false',
260: 1:    '✅f(2, 1, 3) = false',
260: 1:    '✅f(3, 1, 4) = false',
260: 1:    '❌f(2, 1, 1) = ??? != true'
260: 1:  ],
260: 1:  'level': 10,
260: 1:  'nextQuestion': '2, 1, 1',
260: 1:  'questions': [
260: 1:    '0, 1, 5',
260: 1:    '1, 0, 1',
260: 1:    '1, 0, 2',
260: 1:    '3, 1, 7',
260: 1:    '4, 2, 14',
260: 1:    '3, 2, 14',
260: 1:    '0, 2, 5',
260: 1:    '3, 1, 6',
260: 1:    '3, 1, 9',
260: 1:    '3, 2, 9',
260: 1:    '10, 10, 0',
260: 1:    '0, 0, 1',
260: 1:    '0, 1, 1',
260: 1:    '0, 0, 2',
260: 1:    '2, 0, 2',
260: 1:    '0, 1, 2',
260: 1:    '1, 1, 2',
260: 1:    '2, 1, 3',
260: 1:    '3, 1, 4',
260: 1:    '2, 1, 1'
260: 1:  ]
260: 1:}
260: 1:Scores: 20534
260: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true']')
260: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
261: 1:BoardData {
261: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
261: 1:  'expectedAnswer': 'true',
261: 1:  'history': [
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '0, 1, 5',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '1, 0, 1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '1, 0, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '3, 1, 7',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '4, 2, 14',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '3, 2, 14',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '0, 2, 5',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '3, 1, 6',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '3, 1, 9',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '3, 2, 9',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '10, 10, 0',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '0, 0, 1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '0, 1, 1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '0, 0, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '2, 0, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '0, 1, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '1, 1, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '2, 1, 3',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '3, 1, 4',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '2, 1, 1',
261: 1:      'valid': true
261: 1:    }
261: 1:  ],
261: 1:  'info': [
261: 1:    '✅f(0, 1, 5) = true',
261: 1:    '✅f(1, 0, 1) = true',
261: 1:    '✅f(1, 0, 2) = false',
261: 1:    '✅f(3, 1, 7) = true',
261: 1:    '✅f(4, 2, 14) = true',
261: 1:    '✅f(3, 2, 14) = false',
261: 1:    '✅f(0, 2, 5) = true',
261: 1:    '✅f(3, 1, 6) = true',
261: 1:    '✅f(3, 1, 9) = false',
261: 1:    '✅f(3, 2, 9) = false',
261: 1:    '✅f(10, 10, 0) = true',
261: 1:    '✅f(0, 0, 1) = false',
261: 1:    '✅f(0, 1, 1) = false',
261: 1:    '✅f(0, 0, 2) = false',
261: 1:    '✅f(2, 0, 2) = true',
261: 1:    '✅f(0, 1, 2) = false',
261: 1:    '✅f(1, 1, 2) = false',
261: 1:    '✅f(2, 1, 3) = false',
261: 1:    '✅f(3, 1, 4) = false',
261: 1:    '✅f(2, 1, 1) = true',
261: 1:    '❌f(2, 2, 6) = ??? != true'
261: 1:  ],
261: 1:  'level': 10,
261: 1:  'nextQuestion': '2, 2, 6',
261: 1:  'questions': [
261: 1:    '0, 1, 5',
261: 1:    '1, 0, 1',
261: 1:    '1, 0, 2',
261: 1:    '3, 1, 7',
261: 1:    '4, 2, 14',
261: 1:    '3, 2, 14',
261: 1:    '0, 2, 5',
261: 1:    '3, 1, 6',
261: 1:    '3, 1, 9',
261: 1:    '3, 2, 9',
261: 1:    '10, 10, 0',
261: 1:    '0, 0, 1',
261: 1:    '0, 1, 1',
261: 1:    '0, 0, 2',
261: 1:    '2, 0, 2',
261: 1:    '0, 1, 2',
261: 1:    '1, 1, 2',
261: 1:    '2, 1, 3',
261: 1:    '3, 1, 4',
261: 1:    '2, 1, 1',
261: 1:    '2, 2, 6'
261: 1:  ]
261: 1:}
261: 1:Scores: 20541
261: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true']')
261: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
262: 1:BoardData {
262: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
262: 1:  'expectedAnswer': 'true',
262: 1:  'history': [
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '0, 1, 5',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '1, 0, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '1, 0, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '3, 1, 7',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '4, 2, 14',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '3, 2, 14',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '0, 2, 5',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '3, 1, 6',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '3, 1, 9',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '3, 2, 9',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '10, 10, 0',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '0, 0, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '0, 1, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '0, 0, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '2, 0, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '0, 1, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '1, 1, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '2, 1, 3',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '3, 1, 4',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '2, 1, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '2, 2, 6',
262: 1:      'valid': true
262: 1:    }
262: 1:  ],
262: 1:  'info': [
262: 1:    '✅f(0, 1, 5) = true',
262: 1:    '✅f(1, 0, 1) = true',
262: 1:    '✅f(1, 0, 2) = false',
262: 1:    '✅f(3, 1, 7) = true',
262: 1:    '✅f(4, 2, 14) = true',
262: 1:    '✅f(3, 2, 14) = false',
262: 1:    '✅f(0, 2, 5) = true',
262: 1:    '✅f(3, 1, 6) = true',
262: 1:    '✅f(3, 1, 9) = false',
262: 1:    '✅f(3, 2, 9) = false',
262: 1:    '✅f(10, 10, 0) = true',
262: 1:    '✅f(0, 0, 1) = false',
262: 1:    '✅f(0, 1, 1) = false',
262: 1:    '✅f(0, 0, 2) = false',
262: 1:    '✅f(2, 0, 2) = true',
262: 1:    '✅f(0, 1, 2) = false',
262: 1:    '✅f(1, 1, 2) = false',
262: 1:    '✅f(2, 1, 3) = false',
262: 1:    '✅f(3, 1, 4) = false',
262: 1:    '✅f(2, 1, 1) = true',
262: 1:    '✅f(2, 2, 6) = true',
262: 1:    '❌f(6, 1, 11) = ??? != true'
262: 1:  ],
262: 1:  'level': 10,
262: 1:  'nextQuestion': '6, 1, 11',
262: 1:  'questions': [
262: 1:    '0, 1, 5',
262: 1:    '1, 0, 1',
262: 1:    '1, 0, 2',
262: 1:    '3, 1, 7',
262: 1:    '4, 2, 14',
262: 1:    '3, 2, 14',
262: 1:    '0, 2, 5',
262: 1:    '3, 1, 6',
262: 1:    '3, 1, 9',
262: 1:    '3, 2, 9',
262: 1:    '10, 10, 0',
262: 1:    '0, 0, 1',
262: 1:    '0, 1, 1',
262: 1:    '0, 0, 2',
262: 1:    '2, 0, 2',
262: 1:    '0, 1, 2',
262: 1:    '1, 1, 2',
262: 1:    '2, 1, 3',
262: 1:    '3, 1, 4',
262: 1:    '2, 1, 1',
262: 1:    '2, 2, 6',
262: 1:    '6, 1, 11'
262: 1:  ]
262: 1:}
262: 1:Scores: 20548
262: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true']')
262: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
263: 1:BoardData {
263: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
263: 1:  'expectedAnswer': 'true',
263: 1:  'history': [
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '0, 1, 5',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '1, 0, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '1, 0, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '3, 1, 7',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '4, 2, 14',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '3, 2, 14',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '0, 2, 5',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '3, 1, 6',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '3, 1, 9',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '3, 2, 9',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '10, 10, 0',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '0, 0, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '0, 1, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '0, 0, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '2, 0, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '0, 1, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '1, 1, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '2, 1, 3',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '3, 1, 4',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '2, 1, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '2, 2, 6',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '6, 1, 11',
263: 1:      'valid': true
263: 1:    }
263: 1:  ],
263: 1:  'info': [
263: 1:    '✅f(0, 1, 5) = true',
263: 1:    '✅f(1, 0, 1) = true',
263: 1:    '✅f(1, 0, 2) = false',
263: 1:    '✅f(3, 1, 7) = true',
263: 1:    '✅f(4, 2, 14) = true',
263: 1:    '✅f(3, 2, 14) = false',
263: 1:    '✅f(0, 2, 5) = true',
263: 1:    '✅f(3, 1, 6) = true',
263: 1:    '✅f(3, 1, 9) = false',
263: 1:    '✅f(3, 2, 9) = false',
263: 1:    '✅f(10, 10, 0) = true',
263: 1:    '✅f(0, 0, 1) = false',
263: 1:    '✅f(0, 1, 1) = false',
263: 1:    '✅f(0, 0, 2) = false',
263: 1:    '✅f(2, 0, 2) = true',
263: 1:    '✅f(0, 1, 2) = false',
263: 1:    '✅f(1, 1, 2) = false',
263: 1:    '✅f(2, 1, 3) = false',
263: 1:    '✅f(3, 1, 4) = false',
263: 1:    '✅f(2, 1, 1) = true',
263: 1:    '✅f(2, 2, 6) = true',
263: 1:    '✅f(6, 1, 11) = true',
263: 1:    '❌f(5, 0, 1) = ??? != true'
263: 1:  ],
263: 1:  'level': 10,
263: 1:  'nextQuestion': '5, 0, 1',
263: 1:  'questions': [
263: 1:    '0, 1, 5',
263: 1:    '1, 0, 1',
263: 1:    '1, 0, 2',
263: 1:    '3, 1, 7',
263: 1:    '4, 2, 14',
263: 1:    '3, 2, 14',
263: 1:    '0, 2, 5',
263: 1:    '3, 1, 6',
263: 1:    '3, 1, 9',
263: 1:    '3, 2, 9',
263: 1:    '10, 10, 0',
263: 1:    '0, 0, 1',
263: 1:    '0, 1, 1',
263: 1:    '0, 0, 2',
263: 1:    '2, 0, 2',
263: 1:    '0, 1, 2',
263: 1:    '1, 1, 2',
263: 1:    '2, 1, 3',
263: 1:    '3, 1, 4',
263: 1:    '2, 1, 1',
263: 1:    '2, 2, 6',
263: 1:    '6, 1, 11',
263: 1:    '5, 0, 1'
263: 1:  ]
263: 1:}
263: 1:Scores: 20555
263: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true']')
263: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
264: 1:BoardData {
264: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
264: 1:  'expectedAnswer': 'true',
264: 1:  'history': [
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '0, 1, 5',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '1, 0, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '1, 0, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '3, 1, 7',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '4, 2, 14',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '3, 2, 14',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '0, 2, 5',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '3, 1, 6',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '3, 1, 9',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '3, 2, 9',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '10, 10, 0',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '0, 0, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '0, 1, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '0, 0, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '2, 0, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '0, 1, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '1, 1, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '2, 1, 3',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '3, 1, 4',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '2, 1, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '2, 2, 6',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '6, 1, 11',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '5, 0, 1',
264: 1:      'valid': true
264: 1:    }
264: 1:  ],
264: 1:  'info': [
264: 1:    '✅f(0, 1, 5) = true',
264: 1:    '✅f(1, 0, 1) = true',
264: 1:    '✅f(1, 0, 2) = false',
264: 1:    '✅f(3, 1, 7) = true',
264: 1:    '✅f(4, 2, 14) = true',
264: 1:    '✅f(3, 2, 14) = false',
264: 1:    '✅f(0, 2, 5) = true',
264: 1:    '✅f(3, 1, 6) = true',
264: 1:    '✅f(3, 1, 9) = false',
264: 1:    '✅f(3, 2, 9) = false',
264: 1:    '✅f(10, 10, 0) = true',
264: 1:    '✅f(0, 0, 1) = false',
264: 1:    '✅f(0, 1, 1) = false',
264: 1:    '✅f(0, 0, 2) = false',
264: 1:    '✅f(2, 0, 2) = true',
264: 1:    '✅f(0, 1, 2) = false',
264: 1:    '✅f(1, 1, 2) = false',
264: 1:    '✅f(2, 1, 3) = false',
264: 1:    '✅f(3, 1, 4) = false',
264: 1:    '✅f(2, 1, 1) = true',
264: 1:    '✅f(2, 2, 6) = true',
264: 1:    '✅f(6, 1, 11) = true',
264: 1:    '✅f(5, 0, 1) = true',
264: 1:    '❌f(3, 1, 8) = ??? != true'
264: 1:  ],
264: 1:  'level': 10,
264: 1:  'nextQuestion': '3, 1, 8',
264: 1:  'questions': [
264: 1:    '0, 1, 5',
264: 1:    '1, 0, 1',
264: 1:    '1, 0, 2',
264: 1:    '3, 1, 7',
264: 1:    '4, 2, 14',
264: 1:    '3, 2, 14',
264: 1:    '0, 2, 5',
264: 1:    '3, 1, 6',
264: 1:    '3, 1, 9',
264: 1:    '3, 2, 9',
264: 1:    '10, 10, 0',
264: 1:    '0, 0, 1',
264: 1:    '0, 1, 1',
264: 1:    '0, 0, 2',
264: 1:    '2, 0, 2',
264: 1:    '0, 1, 2',
264: 1:    '1, 1, 2',
264: 1:    '2, 1, 3',
264: 1:    '3, 1, 4',
264: 1:    '2, 1, 1',
264: 1:    '2, 2, 6',
264: 1:    '6, 1, 11',
264: 1:    '5, 0, 1',
264: 1:    '3, 1, 8'
264: 1:  ]
264: 1:}
264: 1:Scores: 20562
264: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true']')
264: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
265: 1:BoardData {
265: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
265: 1:  'expectedAnswer': 'true',
265: 1:  'history': [
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '0, 1, 5',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '1, 0, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '1, 0, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '3, 1, 7',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '4, 2, 14',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '3, 2, 14',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '0, 2, 5',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '3, 1, 6',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '3, 1, 9',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '3, 2, 9',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '10, 10, 0',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '0, 0, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '0, 1, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '0, 0, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '2, 0, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '0, 1, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '1, 1, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '2, 1, 3',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '3, 1, 4',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '2, 1, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '2, 2, 6',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '6, 1, 11',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '5, 0, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '3, 1, 8',
265: 1:      'valid': true
265: 1:    }
265: 1:  ],
265: 1:  'info': [
265: 1:    '✅f(0, 1, 5) = true',
265: 1:    '✅f(1, 0, 1) = true',
265: 1:    '✅f(1, 0, 2) = false',
265: 1:    '✅f(3, 1, 7) = true',
265: 1:    '✅f(4, 2, 14) = true',
265: 1:    '✅f(3, 2, 14) = false',
265: 1:    '✅f(0, 2, 5) = true',
265: 1:    '✅f(3, 1, 6) = true',
265: 1:    '✅f(3, 1, 9) = false',
265: 1:    '✅f(3, 2, 9) = false',
265: 1:    '✅f(10, 10, 0) = true',
265: 1:    '✅f(0, 0, 1) = false',
265: 1:    '✅f(0, 1, 1) = false',
265: 1:    '✅f(0, 0, 2) = false',
265: 1:    '✅f(2, 0, 2) = true',
265: 1:    '✅f(0, 1, 2) = false',
265: 1:    '✅f(1, 1, 2) = false',
265: 1:    '✅f(2, 1, 3) = false',
265: 1:    '✅f(3, 1, 4) = false',
265: 1:    '✅f(2, 1, 1) = true',
265: 1:    '✅f(2, 2, 6) = true',
265: 1:    '✅f(6, 1, 11) = true',
265: 1:    '✅f(5, 0, 1) = true',
265: 1:    '✅f(3, 1, 8) = true',
265: 1:    '❌f(3, 2, 10) = ??? != true'
265: 1:  ],
265: 1:  'level': 10,
265: 1:  'nextQuestion': '3, 2, 10',
265: 1:  'questions': [
265: 1:    '0, 1, 5',
265: 1:    '1, 0, 1',
265: 1:    '1, 0, 2',
265: 1:    '3, 1, 7',
265: 1:    '4, 2, 14',
265: 1:    '3, 2, 14',
265: 1:    '0, 2, 5',
265: 1:    '3, 1, 6',
265: 1:    '3, 1, 9',
265: 1:    '3, 2, 9',
265: 1:    '10, 10, 0',
265: 1:    '0, 0, 1',
265: 1:    '0, 1, 1',
265: 1:    '0, 0, 2',
265: 1:    '2, 0, 2',
265: 1:    '0, 1, 2',
265: 1:    '1, 1, 2',
265: 1:    '2, 1, 3',
265: 1:    '3, 1, 4',
265: 1:    '2, 1, 1',
265: 1:    '2, 2, 6',
265: 1:    '6, 1, 11',
265: 1:    '5, 0, 1',
265: 1:    '3, 1, 8',
265: 1:    '3, 2, 10'
265: 1:  ]
265: 1:}
265: 1:Scores: 20569
265: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true']')
265: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
266: 1:BoardData {
266: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
266: 1:  'expectedAnswer': 'true',
266: 1:  'history': [
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '0, 1, 5',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '1, 0, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '1, 0, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 1, 7',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '4, 2, 14',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '3, 2, 14',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '0, 2, 5',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 1, 6',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '3, 1, 9',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '3, 2, 9',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '10, 10, 0',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '0, 0, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '0, 1, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '0, 0, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '2, 0, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '0, 1, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '1, 1, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '2, 1, 3',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '3, 1, 4',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '2, 1, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '2, 2, 6',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '6, 1, 11',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '5, 0, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 1, 8',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 2, 10',
266: 1:      'valid': true
266: 1:    }
266: 1:  ],
266: 1:  'info': [
266: 1:    '✅f(0, 1, 5) = true',
266: 1:    '✅f(1, 0, 1) = true',
266: 1:    '✅f(1, 0, 2) = false',
266: 1:    '✅f(3, 1, 7) = true',
266: 1:    '✅f(4, 2, 14) = true',
266: 1:    '✅f(3, 2, 14) = false',
266: 1:    '✅f(0, 2, 5) = true',
266: 1:    '✅f(3, 1, 6) = true',
266: 1:    '✅f(3, 1, 9) = false',
266: 1:    '✅f(3, 2, 9) = false',
266: 1:    '✅f(10, 10, 0) = true',
266: 1:    '✅f(0, 0, 1) = false',
266: 1:    '✅f(0, 1, 1) = false',
266: 1:    '✅f(0, 0, 2) = false',
266: 1:    '✅f(2, 0, 2) = true',
266: 1:    '✅f(0, 1, 2) = false',
266: 1:    '✅f(1, 1, 2) = false',
266: 1:    '✅f(2, 1, 3) = false',
266: 1:    '✅f(3, 1, 4) = false',
266: 1:    '✅f(2, 1, 1) = true',
266: 1:    '✅f(2, 2, 6) = true',
266: 1:    '✅f(6, 1, 11) = true',
266: 1:    '✅f(5, 0, 1) = true',
266: 1:    '✅f(3, 1, 8) = true',
266: 1:    '✅f(3, 2, 10) = true',
266: 1:    '❌f(3, 2, 8) = ??? != true'
266: 1:  ],
266: 1:  'level': 10,
266: 1:  'nextQuestion': '3, 2, 8',
266: 1:  'questions': [
266: 1:    '0, 1, 5',
266: 1:    '1, 0, 1',
266: 1:    '1, 0, 2',
266: 1:    '3, 1, 7',
266: 1:    '4, 2, 14',
266: 1:    '3, 2, 14',
266: 1:    '0, 2, 5',
266: 1:    '3, 1, 6',
266: 1:    '3, 1, 9',
266: 1:    '3, 2, 9',
266: 1:    '10, 10, 0',
266: 1:    '0, 0, 1',
266: 1:    '0, 1, 1',
266: 1:    '0, 0, 2',
266: 1:    '2, 0, 2',
266: 1:    '0, 1, 2',
266: 1:    '1, 1, 2',
266: 1:    '2, 1, 3',
266: 1:    '3, 1, 4',
266: 1:    '2, 1, 1',
266: 1:    '2, 2, 6',
266: 1:    '6, 1, 11',
266: 1:    '5, 0, 1',
266: 1:    '3, 1, 8',
266: 1:    '3, 2, 10',
266: 1:    '3, 2, 8'
266: 1:  ]
266: 1:}
266: 1:Scores: 20576
266: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true']')
266: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
267: 1:BoardData {
267: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
267: 1:  'expectedAnswer': 'false',
267: 1:  'history': [
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '0, 1, 5',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '1, 0, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '1, 0, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 1, 7',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '4, 2, 14',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '3, 2, 14',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '0, 2, 5',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 1, 6',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '3, 1, 9',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '3, 2, 9',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '10, 10, 0',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '0, 0, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '0, 1, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '0, 0, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '2, 0, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '0, 1, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '1, 1, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '2, 1, 3',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '3, 1, 4',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '2, 1, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '2, 2, 6',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '6, 1, 11',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '5, 0, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 1, 8',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 2, 10',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 2, 8',
267: 1:      'valid': true
267: 1:    }
267: 1:  ],
267: 1:  'info': [
267: 1:    '✅f(0, 1, 5) = true',
267: 1:    '✅f(1, 0, 1) = true',
267: 1:    '✅f(1, 0, 2) = false',
267: 1:    '✅f(3, 1, 7) = true',
267: 1:    '✅f(4, 2, 14) = true',
267: 1:    '✅f(3, 2, 14) = false',
267: 1:    '✅f(0, 2, 5) = true',
267: 1:    '✅f(3, 1, 6) = true',
267: 1:    '✅f(3, 1, 9) = false',
267: 1:    '✅f(3, 2, 9) = false',
267: 1:    '✅f(10, 10, 0) = true',
267: 1:    '✅f(0, 0, 1) = false',
267: 1:    '✅f(0, 1, 1) = false',
267: 1:    '✅f(0, 0, 2) = false',
267: 1:    '✅f(2, 0, 2) = true',
267: 1:    '✅f(0, 1, 2) = false',
267: 1:    '✅f(1, 1, 2) = false',
267: 1:    '✅f(2, 1, 3) = false',
267: 1:    '✅f(3, 1, 4) = false',
267: 1:    '✅f(2, 1, 1) = true',
267: 1:    '✅f(2, 2, 6) = true',
267: 1:    '✅f(6, 1, 11) = true',
267: 1:    '✅f(5, 0, 1) = true',
267: 1:    '✅f(3, 1, 8) = true',
267: 1:    '✅f(3, 2, 10) = true',
267: 1:    '✅f(3, 2, 8) = true',
267: 1:    '❌f(6, 0, 11) = ??? != false'
267: 1:  ],
267: 1:  'level': 10,
267: 1:  'nextQuestion': '6, 0, 11',
267: 1:  'questions': [
267: 1:    '0, 1, 5',
267: 1:    '1, 0, 1',
267: 1:    '1, 0, 2',
267: 1:    '3, 1, 7',
267: 1:    '4, 2, 14',
267: 1:    '3, 2, 14',
267: 1:    '0, 2, 5',
267: 1:    '3, 1, 6',
267: 1:    '3, 1, 9',
267: 1:    '3, 2, 9',
267: 1:    '10, 10, 0',
267: 1:    '0, 0, 1',
267: 1:    '0, 1, 1',
267: 1:    '0, 0, 2',
267: 1:    '2, 0, 2',
267: 1:    '0, 1, 2',
267: 1:    '1, 1, 2',
267: 1:    '2, 1, 3',
267: 1:    '3, 1, 4',
267: 1:    '2, 1, 1',
267: 1:    '2, 2, 6',
267: 1:    '6, 1, 11',
267: 1:    '5, 0, 1',
267: 1:    '3, 1, 8',
267: 1:    '3, 2, 10',
267: 1:    '3, 2, 8',
267: 1:    '6, 0, 11'
267: 1:  ]
267: 1:}
267: 1:Scores: 20583
267: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false']')
267: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
268: 1:BoardData {
268: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
268: 1:  'expectedAnswer': 'true',
268: 1:  'history': [
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '0, 1, 5',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '1, 0, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '1, 0, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 1, 7',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '4, 2, 14',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '3, 2, 14',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '0, 2, 5',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 1, 6',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '3, 1, 9',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '3, 2, 9',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '10, 10, 0',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '0, 0, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '0, 1, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '0, 0, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '2, 0, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '0, 1, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '1, 1, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '2, 1, 3',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '3, 1, 4',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '2, 1, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '2, 2, 6',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '6, 1, 11',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '5, 0, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 1, 8',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 2, 10',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 2, 8',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '6, 0, 11',
268: 1:      'valid': true
268: 1:    }
268: 1:  ],
268: 1:  'info': [
268: 1:    '✅f(0, 1, 5) = true',
268: 1:    '✅f(1, 0, 1) = true',
268: 1:    '✅f(1, 0, 2) = false',
268: 1:    '✅f(3, 1, 7) = true',
268: 1:    '✅f(4, 2, 14) = true',
268: 1:    '✅f(3, 2, 14) = false',
268: 1:    '✅f(0, 2, 5) = true',
268: 1:    '✅f(3, 1, 6) = true',
268: 1:    '✅f(3, 1, 9) = false',
268: 1:    '✅f(3, 2, 9) = false',
268: 1:    '✅f(10, 10, 0) = true',
268: 1:    '✅f(0, 0, 1) = false',
268: 1:    '✅f(0, 1, 1) = false',
268: 1:    '✅f(0, 0, 2) = false',
268: 1:    '✅f(2, 0, 2) = true',
268: 1:    '✅f(0, 1, 2) = false',
268: 1:    '✅f(1, 1, 2) = false',
268: 1:    '✅f(2, 1, 3) = false',
268: 1:    '✅f(3, 1, 4) = false',
268: 1:    '✅f(2, 1, 1) = true',
268: 1:    '✅f(2, 2, 6) = true',
268: 1:    '✅f(6, 1, 11) = true',
268: 1:    '✅f(5, 0, 1) = true',
268: 1:    '✅f(3, 1, 8) = true',
268: 1:    '✅f(3, 2, 10) = true',
268: 1:    '✅f(3, 2, 8) = true',
268: 1:    '✅f(6, 0, 11) = false',
268: 1:    '❌f(1, 4, 11) = ??? != true'
268: 1:  ],
268: 1:  'level': 10,
268: 1:  'nextQuestion': '1, 4, 11',
268: 1:  'questions': [
268: 1:    '0, 1, 5',
268: 1:    '1, 0, 1',
268: 1:    '1, 0, 2',
268: 1:    '3, 1, 7',
268: 1:    '4, 2, 14',
268: 1:    '3, 2, 14',
268: 1:    '0, 2, 5',
268: 1:    '3, 1, 6',
268: 1:    '3, 1, 9',
268: 1:    '3, 2, 9',
268: 1:    '10, 10, 0',
268: 1:    '0, 0, 1',
268: 1:    '0, 1, 1',
268: 1:    '0, 0, 2',
268: 1:    '2, 0, 2',
268: 1:    '0, 1, 2',
268: 1:    '1, 1, 2',
268: 1:    '2, 1, 3',
268: 1:    '3, 1, 4',
268: 1:    '2, 1, 1',
268: 1:    '2, 2, 6',
268: 1:    '6, 1, 11',
268: 1:    '5, 0, 1',
268: 1:    '3, 1, 8',
268: 1:    '3, 2, 10',
268: 1:    '3, 2, 8',
268: 1:    '6, 0, 11',
268: 1:    '1, 4, 11'
268: 1:  ]
268: 1:}
268: 1:Scores: 20590
268: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true']')
268: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
269: 1:BoardData {
269: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
269: 1:  'expectedAnswer': 'true',
269: 1:  'history': [
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '0, 1, 5',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '1, 0, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '1, 0, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 1, 7',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '4, 2, 14',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '3, 2, 14',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '0, 2, 5',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 1, 6',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '3, 1, 9',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '3, 2, 9',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '10, 10, 0',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '0, 0, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '0, 1, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '0, 0, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '2, 0, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '0, 1, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '1, 1, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '2, 1, 3',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '3, 1, 4',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '2, 1, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '2, 2, 6',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '6, 1, 11',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '5, 0, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 1, 8',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 2, 10',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 2, 8',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '6, 0, 11',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '1, 4, 11',
269: 1:      'valid': true
269: 1:    }
269: 1:  ],
269: 1:  'info': [
269: 1:    '✅f(0, 1, 5) = true',
269: 1:    '✅f(1, 0, 1) = true',
269: 1:    '✅f(1, 0, 2) = false',
269: 1:    '✅f(3, 1, 7) = true',
269: 1:    '✅f(4, 2, 14) = true',
269: 1:    '✅f(3, 2, 14) = false',
269: 1:    '✅f(0, 2, 5) = true',
269: 1:    '✅f(3, 1, 6) = true',
269: 1:    '✅f(3, 1, 9) = false',
269: 1:    '✅f(3, 2, 9) = false',
269: 1:    '✅f(10, 10, 0) = true',
269: 1:    '✅f(0, 0, 1) = false',
269: 1:    '✅f(0, 1, 1) = false',
269: 1:    '✅f(0, 0, 2) = false',
269: 1:    '✅f(2, 0, 2) = true',
269: 1:    '✅f(0, 1, 2) = false',
269: 1:    '✅f(1, 1, 2) = false',
269: 1:    '✅f(2, 1, 3) = false',
269: 1:    '✅f(3, 1, 4) = false',
269: 1:    '✅f(2, 1, 1) = true',
269: 1:    '✅f(2, 2, 6) = true',
269: 1:    '✅f(6, 1, 11) = true',
269: 1:    '✅f(5, 0, 1) = true',
269: 1:    '✅f(3, 1, 8) = true',
269: 1:    '✅f(3, 2, 10) = true',
269: 1:    '✅f(3, 2, 8) = true',
269: 1:    '✅f(6, 0, 11) = false',
269: 1:    '✅f(1, 4, 11) = true',
269: 1:    '❌f(0, 3, 10) = ??? != true'
269: 1:  ],
269: 1:  'level': 10,
269: 1:  'nextQuestion': '0, 3, 10',
269: 1:  'questions': [
269: 1:    '0, 1, 5',
269: 1:    '1, 0, 1',
269: 1:    '1, 0, 2',
269: 1:    '3, 1, 7',
269: 1:    '4, 2, 14',
269: 1:    '3, 2, 14',
269: 1:    '0, 2, 5',
269: 1:    '3, 1, 6',
269: 1:    '3, 1, 9',
269: 1:    '3, 2, 9',
269: 1:    '10, 10, 0',
269: 1:    '0, 0, 1',
269: 1:    '0, 1, 1',
269: 1:    '0, 0, 2',
269: 1:    '2, 0, 2',
269: 1:    '0, 1, 2',
269: 1:    '1, 1, 2',
269: 1:    '2, 1, 3',
269: 1:    '3, 1, 4',
269: 1:    '2, 1, 1',
269: 1:    '2, 2, 6',
269: 1:    '6, 1, 11',
269: 1:    '5, 0, 1',
269: 1:    '3, 1, 8',
269: 1:    '3, 2, 10',
269: 1:    '3, 2, 8',
269: 1:    '6, 0, 11',
269: 1:    '1, 4, 11',
269: 1:    '0, 3, 10'
269: 1:  ]
269: 1:}
269: 1:Scores: 20597
269: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true']')
269: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
270: 1:BoardData {
270: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
270: 1:  'expectedAnswer': 'false',
270: 1:  'history': [
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '0, 1, 5',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '1, 0, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '1, 0, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 1, 7',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '4, 2, 14',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '3, 2, 14',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '0, 2, 5',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 1, 6',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '3, 1, 9',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '3, 2, 9',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '10, 10, 0',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '0, 0, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '0, 1, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '0, 0, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '2, 0, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '0, 1, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '1, 1, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '2, 1, 3',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '3, 1, 4',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '2, 1, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '2, 2, 6',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '6, 1, 11',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '5, 0, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 1, 8',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 2, 10',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 2, 8',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '6, 0, 11',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '1, 4, 11',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '0, 3, 10',
270: 1:      'valid': true
270: 1:    }
270: 1:  ],
270: 1:  'info': [
270: 1:    '✅f(0, 1, 5) = true',
270: 1:    '✅f(1, 0, 1) = true',
270: 1:    '✅f(1, 0, 2) = false',
270: 1:    '✅f(3, 1, 7) = true',
270: 1:    '✅f(4, 2, 14) = true',
270: 1:    '✅f(3, 2, 14) = false',
270: 1:    '✅f(0, 2, 5) = true',
270: 1:    '✅f(3, 1, 6) = true',
270: 1:    '✅f(3, 1, 9) = false',
270: 1:    '✅f(3, 2, 9) = false',
270: 1:    '✅f(10, 10, 0) = true',
270: 1:    '✅f(0, 0, 1) = false',
270: 1:    '✅f(0, 1, 1) = false',
270: 1:    '✅f(0, 0, 2) = false',
270: 1:    '✅f(2, 0, 2) = true',
270: 1:    '✅f(0, 1, 2) = false',
270: 1:    '✅f(1, 1, 2) = false',
270: 1:    '✅f(2, 1, 3) = false',
270: 1:    '✅f(3, 1, 4) = false',
270: 1:    '✅f(2, 1, 1) = true',
270: 1:    '✅f(2, 2, 6) = true',
270: 1:    '✅f(6, 1, 11) = true',
270: 1:    '✅f(5, 0, 1) = true',
270: 1:    '✅f(3, 1, 8) = true',
270: 1:    '✅f(3, 2, 10) = true',
270: 1:    '✅f(3, 2, 8) = true',
270: 1:    '✅f(6, 0, 11) = false',
270: 1:    '✅f(1, 4, 11) = true',
270: 1:    '✅f(0, 3, 10) = true',
270: 1:    '❌f(1, 4, 12) = ??? != false'
270: 1:  ],
270: 1:  'level': 10,
270: 1:  'nextQuestion': '1, 4, 12',
270: 1:  'questions': [
270: 1:    '0, 1, 5',
270: 1:    '1, 0, 1',
270: 1:    '1, 0, 2',
270: 1:    '3, 1, 7',
270: 1:    '4, 2, 14',
270: 1:    '3, 2, 14',
270: 1:    '0, 2, 5',
270: 1:    '3, 1, 6',
270: 1:    '3, 1, 9',
270: 1:    '3, 2, 9',
270: 1:    '10, 10, 0',
270: 1:    '0, 0, 1',
270: 1:    '0, 1, 1',
270: 1:    '0, 0, 2',
270: 1:    '2, 0, 2',
270: 1:    '0, 1, 2',
270: 1:    '1, 1, 2',
270: 1:    '2, 1, 3',
270: 1:    '3, 1, 4',
270: 1:    '2, 1, 1',
270: 1:    '2, 2, 6',
270: 1:    '6, 1, 11',
270: 1:    '5, 0, 1',
270: 1:    '3, 1, 8',
270: 1:    '3, 2, 10',
270: 1:    '3, 2, 8',
270: 1:    '6, 0, 11',
270: 1:    '1, 4, 11',
270: 1:    '0, 3, 10',
270: 1:    '1, 4, 12'
270: 1:  ]
270: 1:}
270: 1:Scores: 20604
270: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false']')
270: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
271: 1:BoardData {
271: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
271: 1:  'expectedAnswer': 'false',
271: 1:  'history': [
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '0, 1, 5',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '1, 0, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '1, 0, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 1, 7',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '4, 2, 14',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '3, 2, 14',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '0, 2, 5',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 1, 6',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '3, 1, 9',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '3, 2, 9',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '10, 10, 0',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '0, 0, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '0, 1, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '0, 0, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '2, 0, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '0, 1, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '1, 1, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '2, 1, 3',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '3, 1, 4',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '2, 1, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '2, 2, 6',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '6, 1, 11',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '5, 0, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 1, 8',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 2, 10',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 2, 8',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '6, 0, 11',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '1, 4, 11',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '0, 3, 10',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '1, 4, 12',
271: 1:      'valid': true
271: 1:    }
271: 1:  ],
271: 1:  'info': [
271: 1:    '✅f(0, 1, 5) = true',
271: 1:    '✅f(1, 0, 1) = true',
271: 1:    '✅f(1, 0, 2) = false',
271: 1:    '✅f(3, 1, 7) = true',
271: 1:    '✅f(4, 2, 14) = true',
271: 1:    '✅f(3, 2, 14) = false',
271: 1:    '✅f(0, 2, 5) = true',
271: 1:    '✅f(3, 1, 6) = true',
271: 1:    '✅f(3, 1, 9) = false',
271: 1:    '✅f(3, 2, 9) = false',
271: 1:    '✅f(10, 10, 0) = true',
271: 1:    '✅f(0, 0, 1) = false',
271: 1:    '✅f(0, 1, 1) = false',
271: 1:    '✅f(0, 0, 2) = false',
271: 1:    '✅f(2, 0, 2) = true',
271: 1:    '✅f(0, 1, 2) = false',
271: 1:    '✅f(1, 1, 2) = false',
271: 1:    '✅f(2, 1, 3) = false',
271: 1:    '✅f(3, 1, 4) = false',
271: 1:    '✅f(2, 1, 1) = true',
271: 1:    '✅f(2, 2, 6) = true',
271: 1:    '✅f(6, 1, 11) = true',
271: 1:    '✅f(5, 0, 1) = true',
271: 1:    '✅f(3, 1, 8) = true',
271: 1:    '✅f(3, 2, 10) = true',
271: 1:    '✅f(3, 2, 8) = true',
271: 1:    '✅f(6, 0, 11) = false',
271: 1:    '✅f(1, 4, 11) = true',
271: 1:    '✅f(0, 3, 10) = true',
271: 1:    '✅f(1, 4, 12) = false',
271: 1:    '❌f(1, 1, 7) = ??? != false'
271: 1:  ],
271: 1:  'level': 10,
271: 1:  'nextQuestion': '1, 1, 7',
271: 1:  'questions': [
271: 1:    '0, 1, 5',
271: 1:    '1, 0, 1',
271: 1:    '1, 0, 2',
271: 1:    '3, 1, 7',
271: 1:    '4, 2, 14',
271: 1:    '3, 2, 14',
271: 1:    '0, 2, 5',
271: 1:    '3, 1, 6',
271: 1:    '3, 1, 9',
271: 1:    '3, 2, 9',
271: 1:    '10, 10, 0',
271: 1:    '0, 0, 1',
271: 1:    '0, 1, 1',
271: 1:    '0, 0, 2',
271: 1:    '2, 0, 2',
271: 1:    '0, 1, 2',
271: 1:    '1, 1, 2',
271: 1:    '2, 1, 3',
271: 1:    '3, 1, 4',
271: 1:    '2, 1, 1',
271: 1:    '2, 2, 6',
271: 1:    '6, 1, 11',
271: 1:    '5, 0, 1',
271: 1:    '3, 1, 8',
271: 1:    '3, 2, 10',
271: 1:    '3, 2, 8',
271: 1:    '6, 0, 11',
271: 1:    '1, 4, 11',
271: 1:    '0, 3, 10',
271: 1:    '1, 4, 12',
271: 1:    '1, 1, 7'
271: 1:  ]
271: 1:}
271: 1:Scores: 20611
271: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false']')
271: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
272: 1:BoardData {
272: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
272: 1:  'expectedAnswer': 'true',
272: 1:  'history': [
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '0, 1, 5',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '1, 0, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 0, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 1, 7',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '4, 2, 14',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '3, 2, 14',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '0, 2, 5',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 1, 6',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '3, 1, 9',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '3, 2, 9',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '10, 10, 0',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '0, 0, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '0, 1, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '0, 0, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '2, 0, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '0, 1, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 1, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '2, 1, 3',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '3, 1, 4',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '2, 1, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '2, 2, 6',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '6, 1, 11',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '5, 0, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 1, 8',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 2, 10',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 2, 8',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '6, 0, 11',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '1, 4, 11',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '0, 3, 10',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 4, 12',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 1, 7',
272: 1:      'valid': true
272: 1:    }
272: 1:  ],
272: 1:  'info': [
272: 1:    '✅f(0, 1, 5) = true',
272: 1:    '✅f(1, 0, 1) = true',
272: 1:    '✅f(1, 0, 2) = false',
272: 1:    '✅f(3, 1, 7) = true',
272: 1:    '✅f(4, 2, 14) = true',
272: 1:    '✅f(3, 2, 14) = false',
272: 1:    '✅f(0, 2, 5) = true',
272: 1:    '✅f(3, 1, 6) = true',
272: 1:    '✅f(3, 1, 9) = false',
272: 1:    '✅f(3, 2, 9) = false',
272: 1:    '✅f(10, 10, 0) = true',
272: 1:    '✅f(0, 0, 1) = false',
272: 1:    '✅f(0, 1, 1) = false',
272: 1:    '✅f(0, 0, 2) = false',
272: 1:    '✅f(2, 0, 2) = true',
272: 1:    '✅f(0, 1, 2) = false',
272: 1:    '✅f(1, 1, 2) = false',
272: 1:    '✅f(2, 1, 3) = false',
272: 1:    '✅f(3, 1, 4) = false',
272: 1:    '✅f(2, 1, 1) = true',
272: 1:    '✅f(2, 2, 6) = true',
272: 1:    '✅f(6, 1, 11) = true',
272: 1:    '✅f(5, 0, 1) = true',
272: 1:    '✅f(3, 1, 8) = true',
272: 1:    '✅f(3, 2, 10) = true',
272: 1:    '✅f(3, 2, 8) = true',
272: 1:    '✅f(6, 0, 11) = false',
272: 1:    '✅f(1, 4, 11) = true',
272: 1:    '✅f(0, 3, 10) = true',
272: 1:    '✅f(1, 4, 12) = false',
272: 1:    '✅f(1, 1, 7) = false',
272: 1:    '❌f(2, 1, 7) = ??? != true'
272: 1:  ],
272: 1:  'level': 10,
272: 1:  'nextQuestion': '2, 1, 7',
272: 1:  'questions': [
272: 1:    '0, 1, 5',
272: 1:    '1, 0, 1',
272: 1:    '1, 0, 2',
272: 1:    '3, 1, 7',
272: 1:    '4, 2, 14',
272: 1:    '3, 2, 14',
272: 1:    '0, 2, 5',
272: 1:    '3, 1, 6',
272: 1:    '3, 1, 9',
272: 1:    '3, 2, 9',
272: 1:    '10, 10, 0',
272: 1:    '0, 0, 1',
272: 1:    '0, 1, 1',
272: 1:    '0, 0, 2',
272: 1:    '2, 0, 2',
272: 1:    '0, 1, 2',
272: 1:    '1, 1, 2',
272: 1:    '2, 1, 3',
272: 1:    '3, 1, 4',
272: 1:    '2, 1, 1',
272: 1:    '2, 2, 6',
272: 1:    '6, 1, 11',
272: 1:    '5, 0, 1',
272: 1:    '3, 1, 8',
272: 1:    '3, 2, 10',
272: 1:    '3, 2, 8',
272: 1:    '6, 0, 11',
272: 1:    '1, 4, 11',
272: 1:    '0, 3, 10',
272: 1:    '1, 4, 12',
272: 1:    '1, 1, 7',
272: 1:    '2, 1, 7'
272: 1:  ]
272: 1:}
272: 1:Scores: 20618
272: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
272: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
273: 1:BoardData {
273: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
273: 1:  'expectedAnswer': 'true',
273: 1:  'history': [
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '0, 1, 5',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '1, 0, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 0, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 1, 7',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '4, 2, 14',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 2, 14',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '0, 2, 5',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 1, 6',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 1, 9',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 2, 9',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '10, 10, 0',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '0, 0, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '0, 1, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '0, 0, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '2, 0, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '0, 1, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 1, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '2, 1, 3',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 1, 4',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '2, 1, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '2, 2, 6',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '6, 1, 11',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '5, 0, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 1, 8',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 2, 10',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 2, 8',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '6, 0, 11',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '1, 4, 11',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '0, 3, 10',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 4, 12',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 1, 7',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '2, 1, 7',
273: 1:      'valid': true
273: 1:    }
273: 1:  ],
273: 1:  'info': [
273: 1:    '✅f(0, 1, 5) = true',
273: 1:    '✅f(1, 0, 1) = true',
273: 1:    '✅f(1, 0, 2) = false',
273: 1:    '✅f(3, 1, 7) = true',
273: 1:    '✅f(4, 2, 14) = true',
273: 1:    '✅f(3, 2, 14) = false',
273: 1:    '✅f(0, 2, 5) = true',
273: 1:    '✅f(3, 1, 6) = true',
273: 1:    '✅f(3, 1, 9) = false',
273: 1:    '✅f(3, 2, 9) = false',
273: 1:    '✅f(10, 10, 0) = true',
273: 1:    '✅f(0, 0, 1) = false',
273: 1:    '✅f(0, 1, 1) = false',
273: 1:    '✅f(0, 0, 2) = false',
273: 1:    '✅f(2, 0, 2) = true',
273: 1:    '✅f(0, 1, 2) = false',
273: 1:    '✅f(1, 1, 2) = false',
273: 1:    '✅f(2, 1, 3) = false',
273: 1:    '✅f(3, 1, 4) = false',
273: 1:    '✅f(2, 1, 1) = true',
273: 1:    '✅f(2, 2, 6) = true',
273: 1:    '✅f(6, 1, 11) = true',
273: 1:    '✅f(5, 0, 1) = true',
273: 1:    '✅f(3, 1, 8) = true',
273: 1:    '✅f(3, 2, 10) = true',
273: 1:    '✅f(3, 2, 8) = true',
273: 1:    '✅f(6, 0, 11) = false',
273: 1:    '✅f(1, 4, 11) = true',
273: 1:    '✅f(0, 3, 10) = true',
273: 1:    '✅f(1, 4, 12) = false',
273: 1:    '✅f(1, 1, 7) = false',
273: 1:    '✅f(2, 1, 7) = true',
273: 1:    '❌f(7, 1, 11) = ??? != true'
273: 1:  ],
273: 1:  'level': 10,
273: 1:  'nextQuestion': '7, 1, 11',
273: 1:  'questions': [
273: 1:    '0, 1, 5',
273: 1:    '1, 0, 1',
273: 1:    '1, 0, 2',
273: 1:    '3, 1, 7',
273: 1:    '4, 2, 14',
273: 1:    '3, 2, 14',
273: 1:    '0, 2, 5',
273: 1:    '3, 1, 6',
273: 1:    '3, 1, 9',
273: 1:    '3, 2, 9',
273: 1:    '10, 10, 0',
273: 1:    '0, 0, 1',
273: 1:    '0, 1, 1',
273: 1:    '0, 0, 2',
273: 1:    '2, 0, 2',
273: 1:    '0, 1, 2',
273: 1:    '1, 1, 2',
273: 1:    '2, 1, 3',
273: 1:    '3, 1, 4',
273: 1:    '2, 1, 1',
273: 1:    '2, 2, 6',
273: 1:    '6, 1, 11',
273: 1:    '5, 0, 1',
273: 1:    '3, 1, 8',
273: 1:    '3, 2, 10',
273: 1:    '3, 2, 8',
273: 1:    '6, 0, 11',
273: 1:    '1, 4, 11',
273: 1:    '0, 3, 10',
273: 1:    '1, 4, 12',
273: 1:    '1, 1, 7',
273: 1:    '2, 1, 7',
273: 1:    '7, 1, 11'
273: 1:  ]
273: 1:}
273: 1:Scores: 20625
273: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true']')
273: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
274: 1:BoardData {
274: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
274: 1:  'expectedAnswer': 'true',
274: 1:  'history': [
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '0, 1, 5',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '1, 0, 1',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '1, 0, 2',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '3, 1, 7',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '4, 2, 14',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '3, 2, 14',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '0, 2, 5',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '3, 1, 6',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '3, 1, 9',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '3, 2, 9',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '10, 10, 0',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '0, 0, 1',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '0, 1, 1',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '0, 0, 2',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '2, 0, 2',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '0, 1, 2',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '1, 1, 2',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '2, 1, 3',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '3, 1, 4',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '2, 1, 1',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '2, 2, 6',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '6, 1, 11',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '5, 0, 1',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '3, 1, 8',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '3, 2, 10',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '3, 2, 8',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '6, 0, 11',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '1, 4, 11',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '0, 3, 10',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '1, 4, 12',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '1, 1, 7',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '2, 1, 7',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '7, 1, 11',
274: 1:      'valid': true
274: 1:    }
274: 1:  ],
274: 1:  'info': [
274: 1:    '✅f(0, 1, 5) = true',
274: 1:    '✅f(1, 0, 1) = true',
274: 1:    '✅f(1, 0, 2) = false',
274: 1:    '✅f(3, 1, 7) = true',
274: 1:    '✅f(4, 2, 14) = true',
274: 1:    '✅f(3, 2, 14) = false',
274: 1:    '✅f(0, 2, 5) = true',
274: 1:    '✅f(3, 1, 6) = true',
274: 1:    '✅f(3, 1, 9) = false',
274: 1:    '✅f(3, 2, 9) = false',
274: 1:    '✅f(10, 10, 0) = true',
274: 1:    '✅f(0, 0, 1) = false',
274: 1:    '✅f(0, 1, 1) = false',
274: 1:    '✅f(0, 0, 2) = false',
274: 1:    '✅f(2, 0, 2) = true',
274: 1:    '✅f(0, 1, 2) = false',
274: 1:    '✅f(1, 1, 2) = false',
274: 1:    '✅f(2, 1, 3) = false',
274: 1:    '✅f(3, 1, 4) = false',
274: 1:    '✅f(2, 1, 1) = true',
274: 1:    '✅f(2, 2, 6) = true',
274: 1:    '✅f(6, 1, 11) = true',
274: 1:    '✅f(5, 0, 1) = true',
274: 1:    '✅f(3, 1, 8) = true',
274: 1:    '✅f(3, 2, 10) = true',
274: 1:    '✅f(3, 2, 8) = true',
274: 1:    '✅f(6, 0, 11) = false',
274: 1:    '✅f(1, 4, 11) = true',
274: 1:    '✅f(0, 3, 10) = true',
274: 1:    '✅f(1, 4, 12) = false',
274: 1:    '✅f(1, 1, 7) = false',
274: 1:    '✅f(2, 1, 7) = true',
274: 1:    '✅f(7, 1, 11) = true',
274: 1:    '❌f(7, 1, 8) = ??? != true'
274: 1:  ],
274: 1:  'level': 10,
274: 1:  'nextQuestion': '7, 1, 8',
274: 1:  'questions': [
274: 1:    '0, 1, 5',
274: 1:    '1, 0, 1',
274: 1:    '1, 0, 2',
274: 1:    '3, 1, 7',
274: 1:    '4, 2, 14',
274: 1:    '3, 2, 14',
274: 1:    '0, 2, 5',
274: 1:    '3, 1, 6',
274: 1:    '3, 1, 9',
274: 1:    '3, 2, 9',
274: 1:    '10, 10, 0',
274: 1:    '0, 0, 1',
274: 1:    '0, 1, 1',
274: 1:    '0, 0, 2',
274: 1:    '2, 0, 2',
274: 1:    '0, 1, 2',
274: 1:    '1, 1, 2',
274: 1:    '2, 1, 3',
274: 1:    '3, 1, 4',
274: 1:    '2, 1, 1',
274: 1:    '2, 2, 6',
274: 1:    '6, 1, 11',
274: 1:    '5, 0, 1',
274: 1:    '3, 1, 8',
274: 1:    '3, 2, 10',
274: 1:    '3, 2, 8',
274: 1:    '6, 0, 11',
274: 1:    '1, 4, 11',
274: 1:    '0, 3, 10',
274: 1:    '1, 4, 12',
274: 1:    '1, 1, 7',
274: 1:    '2, 1, 7',
274: 1:    '7, 1, 11',
274: 1:    '7, 1, 8'
274: 1:  ]
274: 1:}
274: 1:Scores: 20632
274: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true']')
274: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
275: 1:BoardData {
275: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
275: 1:  'expectedAnswer': 'false',
275: 1:  'history': [
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '0, 1, 5',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '1, 0, 1',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '1, 0, 2',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '3, 1, 7',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '4, 2, 14',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '3, 2, 14',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '0, 2, 5',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '3, 1, 6',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '3, 1, 9',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '3, 2, 9',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '10, 10, 0',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '0, 0, 1',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '0, 1, 1',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '0, 0, 2',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '2, 0, 2',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '0, 1, 2',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '1, 1, 2',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '2, 1, 3',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '3, 1, 4',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '2, 1, 1',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '2, 2, 6',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '6, 1, 11',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '5, 0, 1',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '3, 1, 8',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '3, 2, 10',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '3, 2, 8',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '6, 0, 11',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '1, 4, 11',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '0, 3, 10',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '1, 4, 12',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '1, 1, 7',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '2, 1, 7',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '7, 1, 11',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '7, 1, 8',
275: 1:      'valid': true
275: 1:    }
275: 1:  ],
275: 1:  'info': [
275: 1:    '✅f(0, 1, 5) = true',
275: 1:    '✅f(1, 0, 1) = true',
275: 1:    '✅f(1, 0, 2) = false',
275: 1:    '✅f(3, 1, 7) = true',
275: 1:    '✅f(4, 2, 14) = true',
275: 1:    '✅f(3, 2, 14) = false',
275: 1:    '✅f(0, 2, 5) = true',
275: 1:    '✅f(3, 1, 6) = true',
275: 1:    '✅f(3, 1, 9) = false',
275: 1:    '✅f(3, 2, 9) = false',
275: 1:    '✅f(10, 10, 0) = true',
275: 1:    '✅f(0, 0, 1) = false',
275: 1:    '✅f(0, 1, 1) = false',
275: 1:    '✅f(0, 0, 2) = false',
275: 1:    '✅f(2, 0, 2) = true',
275: 1:    '✅f(0, 1, 2) = false',
275: 1:    '✅f(1, 1, 2) = false',
275: 1:    '✅f(2, 1, 3) = false',
275: 1:    '✅f(3, 1, 4) = false',
275: 1:    '✅f(2, 1, 1) = true',
275: 1:    '✅f(2, 2, 6) = true',
275: 1:    '✅f(6, 1, 11) = true',
275: 1:    '✅f(5, 0, 1) = true',
275: 1:    '✅f(3, 1, 8) = true',
275: 1:    '✅f(3, 2, 10) = true',
275: 1:    '✅f(3, 2, 8) = true',
275: 1:    '✅f(6, 0, 11) = false',
275: 1:    '✅f(1, 4, 11) = true',
275: 1:    '✅f(0, 3, 10) = true',
275: 1:    '✅f(1, 4, 12) = false',
275: 1:    '✅f(1, 1, 7) = false',
275: 1:    '✅f(2, 1, 7) = true',
275: 1:    '✅f(7, 1, 11) = true',
275: 1:    '✅f(7, 1, 8) = true',
275: 1:    '❌f(7, 1, 13) = ??? != false'
275: 1:  ],
275: 1:  'level': 10,
275: 1:  'nextQuestion': '7, 1, 13',
275: 1:  'questions': [
275: 1:    '0, 1, 5',
275: 1:    '1, 0, 1',
275: 1:    '1, 0, 2',
275: 1:    '3, 1, 7',
275: 1:    '4, 2, 14',
275: 1:    '3, 2, 14',
275: 1:    '0, 2, 5',
275: 1:    '3, 1, 6',
275: 1:    '3, 1, 9',
275: 1:    '3, 2, 9',
275: 1:    '10, 10, 0',
275: 1:    '0, 0, 1',
275: 1:    '0, 1, 1',
275: 1:    '0, 0, 2',
275: 1:    '2, 0, 2',
275: 1:    '0, 1, 2',
275: 1:    '1, 1, 2',
275: 1:    '2, 1, 3',
275: 1:    '3, 1, 4',
275: 1:    '2, 1, 1',
275: 1:    '2, 2, 6',
275: 1:    '6, 1, 11',
275: 1:    '5, 0, 1',
275: 1:    '3, 1, 8',
275: 1:    '3, 2, 10',
275: 1:    '3, 2, 8',
275: 1:    '6, 0, 11',
275: 1:    '1, 4, 11',
275: 1:    '0, 3, 10',
275: 1:    '1, 4, 12',
275: 1:    '1, 1, 7',
275: 1:    '2, 1, 7',
275: 1:    '7, 1, 11',
275: 1:    '7, 1, 8',
275: 1:    '7, 1, 13'
275: 1:  ]
275: 1:}
275: 1:Scores: 20639
275: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false']')
275: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
276: 1:BoardData {
276: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
276: 1:  'expectedAnswer': 'true',
276: 1:  'history': [
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '0, 1, 5',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '1, 0, 1',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '1, 0, 2',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '3, 1, 7',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '4, 2, 14',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '3, 2, 14',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '0, 2, 5',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '3, 1, 6',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '3, 1, 9',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '3, 2, 9',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '10, 10, 0',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '0, 0, 1',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '0, 1, 1',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '0, 0, 2',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '2, 0, 2',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '0, 1, 2',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '1, 1, 2',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '2, 1, 3',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '3, 1, 4',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '2, 1, 1',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '2, 2, 6',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '6, 1, 11',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '5, 0, 1',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '3, 1, 8',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '3, 2, 10',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '3, 2, 8',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '6, 0, 11',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '1, 4, 11',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '0, 3, 10',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '1, 4, 12',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '1, 1, 7',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '2, 1, 7',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '7, 1, 11',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '7, 1, 8',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '7, 1, 13',
276: 1:      'valid': true
276: 1:    }
276: 1:  ],
276: 1:  'info': [
276: 1:    '✅f(0, 1, 5) = true',
276: 1:    '✅f(1, 0, 1) = true',
276: 1:    '✅f(1, 0, 2) = false',
276: 1:    '✅f(3, 1, 7) = true',
276: 1:    '✅f(4, 2, 14) = true',
276: 1:    '✅f(3, 2, 14) = false',
276: 1:    '✅f(0, 2, 5) = true',
276: 1:    '✅f(3, 1, 6) = true',
276: 1:    '✅f(3, 1, 9) = false',
276: 1:    '✅f(3, 2, 9) = false',
276: 1:    '✅f(10, 10, 0) = true',
276: 1:    '✅f(0, 0, 1) = false',
276: 1:    '✅f(0, 1, 1) = false',
276: 1:    '✅f(0, 0, 2) = false',
276: 1:    '✅f(2, 0, 2) = true',
276: 1:    '✅f(0, 1, 2) = false',
276: 1:    '✅f(1, 1, 2) = false',
276: 1:    '✅f(2, 1, 3) = false',
276: 1:    '✅f(3, 1, 4) = false',
276: 1:    '✅f(2, 1, 1) = true',
276: 1:    '✅f(2, 2, 6) = true',
276: 1:    '✅f(6, 1, 11) = true',
276: 1:    '✅f(5, 0, 1) = true',
276: 1:    '✅f(3, 1, 8) = true',
276: 1:    '✅f(3, 2, 10) = true',
276: 1:    '✅f(3, 2, 8) = true',
276: 1:    '✅f(6, 0, 11) = false',
276: 1:    '✅f(1, 4, 11) = true',
276: 1:    '✅f(0, 3, 10) = true',
276: 1:    '✅f(1, 4, 12) = false',
276: 1:    '✅f(1, 1, 7) = false',
276: 1:    '✅f(2, 1, 7) = true',
276: 1:    '✅f(7, 1, 11) = true',
276: 1:    '✅f(7, 1, 8) = true',
276: 1:    '✅f(7, 1, 13) = false',
276: 1:    '❌f(43, 1, 46) = ??? != true'
276: 1:  ],
276: 1:  'level': 10,
276: 1:  'nextQuestion': '43, 1, 46',
276: 1:  'questions': [
276: 1:    '0, 1, 5',
276: 1:    '1, 0, 1',
276: 1:    '1, 0, 2',
276: 1:    '3, 1, 7',
276: 1:    '4, 2, 14',
276: 1:    '3, 2, 14',
276: 1:    '0, 2, 5',
276: 1:    '3, 1, 6',
276: 1:    '3, 1, 9',
276: 1:    '3, 2, 9',
276: 1:    '10, 10, 0',
276: 1:    '0, 0, 1',
276: 1:    '0, 1, 1',
276: 1:    '0, 0, 2',
276: 1:    '2, 0, 2',
276: 1:    '0, 1, 2',
276: 1:    '1, 1, 2',
276: 1:    '2, 1, 3',
276: 1:    '3, 1, 4',
276: 1:    '2, 1, 1',
276: 1:    '2, 2, 6',
276: 1:    '6, 1, 11',
276: 1:    '5, 0, 1',
276: 1:    '3, 1, 8',
276: 1:    '3, 2, 10',
276: 1:    '3, 2, 8',
276: 1:    '6, 0, 11',
276: 1:    '1, 4, 11',
276: 1:    '0, 3, 10',
276: 1:    '1, 4, 12',
276: 1:    '1, 1, 7',
276: 1:    '2, 1, 7',
276: 1:    '7, 1, 11',
276: 1:    '7, 1, 8',
276: 1:    '7, 1, 13',
276: 1:    '43, 1, 46'
276: 1:  ]
276: 1:}
276: 1:Scores: 20646
276: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true']')
276: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
277: 1:BoardData {
277: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
277: 1:  'expectedAnswer': 'false',
277: 1:  'history': [
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '0, 1, 5',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '1, 0, 1',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '1, 0, 2',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '3, 1, 7',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '4, 2, 14',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '3, 2, 14',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '0, 2, 5',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '3, 1, 6',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '3, 1, 9',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '3, 2, 9',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '10, 10, 0',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '0, 0, 1',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '0, 1, 1',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '0, 0, 2',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '2, 0, 2',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '0, 1, 2',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '1, 1, 2',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '2, 1, 3',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '3, 1, 4',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '2, 1, 1',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '2, 2, 6',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '6, 1, 11',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '5, 0, 1',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '3, 1, 8',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '3, 2, 10',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '3, 2, 8',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '6, 0, 11',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '1, 4, 11',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '0, 3, 10',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '1, 4, 12',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '1, 1, 7',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '2, 1, 7',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '7, 1, 11',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '7, 1, 8',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '7, 1, 13',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '43, 1, 46',
277: 1:      'valid': true
277: 1:    }
277: 1:  ],
277: 1:  'info': [
277: 1:    '✅f(0, 1, 5) = true',
277: 1:    '✅f(1, 0, 1) = true',
277: 1:    '✅f(1, 0, 2) = false',
277: 1:    '✅f(3, 1, 7) = true',
277: 1:    '✅f(4, 2, 14) = true',
277: 1:    '✅f(3, 2, 14) = false',
277: 1:    '✅f(0, 2, 5) = true',
277: 1:    '✅f(3, 1, 6) = true',
277: 1:    '✅f(3, 1, 9) = false',
277: 1:    '✅f(3, 2, 9) = false',
277: 1:    '✅f(10, 10, 0) = true',
277: 1:    '✅f(0, 0, 1) = false',
277: 1:    '✅f(0, 1, 1) = false',
277: 1:    '✅f(0, 0, 2) = false',
277: 1:    '✅f(2, 0, 2) = true',
277: 1:    '✅f(0, 1, 2) = false',
277: 1:    '✅f(1, 1, 2) = false',
277: 1:    '✅f(2, 1, 3) = false',
277: 1:    '✅f(3, 1, 4) = false',
277: 1:    '✅f(2, 1, 1) = true',
277: 1:    '✅f(2, 2, 6) = true',
277: 1:    '✅f(6, 1, 11) = true',
277: 1:    '✅f(5, 0, 1) = true',
277: 1:    '✅f(3, 1, 8) = true',
277: 1:    '✅f(3, 2, 10) = true',
277: 1:    '✅f(3, 2, 8) = true',
277: 1:    '✅f(6, 0, 11) = false',
277: 1:    '✅f(1, 4, 11) = true',
277: 1:    '✅f(0, 3, 10) = true',
277: 1:    '✅f(1, 4, 12) = false',
277: 1:    '✅f(1, 1, 7) = false',
277: 1:    '✅f(2, 1, 7) = true',
277: 1:    '✅f(7, 1, 11) = true',
277: 1:    '✅f(7, 1, 8) = true',
277: 1:    '✅f(7, 1, 13) = false',
277: 1:    '✅f(43, 1, 46) = true',
277: 1:    '❌f(40, 1, 46) = ??? != false'
277: 1:  ],
277: 1:  'level': 10,
277: 1:  'nextQuestion': '40, 1, 46',
277: 1:  'questions': [
277: 1:    '0, 1, 5',
277: 1:    '1, 0, 1',
277: 1:    '1, 0, 2',
277: 1:    '3, 1, 7',
277: 1:    '4, 2, 14',
277: 1:    '3, 2, 14',
277: 1:    '0, 2, 5',
277: 1:    '3, 1, 6',
277: 1:    '3, 1, 9',
277: 1:    '3, 2, 9',
277: 1:    '10, 10, 0',
277: 1:    '0, 0, 1',
277: 1:    '0, 1, 1',
277: 1:    '0, 0, 2',
277: 1:    '2, 0, 2',
277: 1:    '0, 1, 2',
277: 1:    '1, 1, 2',
277: 1:    '2, 1, 3',
277: 1:    '3, 1, 4',
277: 1:    '2, 1, 1',
277: 1:    '2, 2, 6',
277: 1:    '6, 1, 11',
277: 1:    '5, 0, 1',
277: 1:    '3, 1, 8',
277: 1:    '3, 2, 10',
277: 1:    '3, 2, 8',
277: 1:    '6, 0, 11',
277: 1:    '1, 4, 11',
277: 1:    '0, 3, 10',
277: 1:    '1, 4, 12',
277: 1:    '1, 1, 7',
277: 1:    '2, 1, 7',
277: 1:    '7, 1, 11',
277: 1:    '7, 1, 8',
277: 1:    '7, 1, 13',
277: 1:    '43, 1, 46',
277: 1:    '40, 1, 46'
277: 1:  ]
277: 1:}
277: 1:Scores: 20653
277: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false']')
277: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
278: 1:BoardData {
278: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
278: 1:  'expectedAnswer': 'true',
278: 1:  'history': [
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '0, 1, 5',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '1, 0, 1',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '1, 0, 2',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '3, 1, 7',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '4, 2, 14',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '3, 2, 14',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '0, 2, 5',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '3, 1, 6',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '3, 1, 9',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '3, 2, 9',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '10, 10, 0',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '0, 0, 1',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '0, 1, 1',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '0, 0, 2',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '2, 0, 2',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '0, 1, 2',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '1, 1, 2',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '2, 1, 3',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '3, 1, 4',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '2, 1, 1',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '2, 2, 6',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '6, 1, 11',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '5, 0, 1',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '3, 1, 8',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '3, 2, 10',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '3, 2, 8',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '6, 0, 11',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '1, 4, 11',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '0, 3, 10',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '1, 4, 12',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '1, 1, 7',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '2, 1, 7',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '7, 1, 11',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '7, 1, 8',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '7, 1, 13',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '43, 1, 46',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '40, 1, 46',
278: 1:      'valid': true
278: 1:    }
278: 1:  ],
278: 1:  'info': [
278: 1:    '✅f(0, 1, 5) = true',
278: 1:    '✅f(1, 0, 1) = true',
278: 1:    '✅f(1, 0, 2) = false',
278: 1:    '✅f(3, 1, 7) = true',
278: 1:    '✅f(4, 2, 14) = true',
278: 1:    '✅f(3, 2, 14) = false',
278: 1:    '✅f(0, 2, 5) = true',
278: 1:    '✅f(3, 1, 6) = true',
278: 1:    '✅f(3, 1, 9) = false',
278: 1:    '✅f(3, 2, 9) = false',
278: 1:    '✅f(10, 10, 0) = true',
278: 1:    '✅f(0, 0, 1) = false',
278: 1:    '✅f(0, 1, 1) = false',
278: 1:    '✅f(0, 0, 2) = false',
278: 1:    '✅f(2, 0, 2) = true',
278: 1:    '✅f(0, 1, 2) = false',
278: 1:    '✅f(1, 1, 2) = false',
278: 1:    '✅f(2, 1, 3) = false',
278: 1:    '✅f(3, 1, 4) = false',
278: 1:    '✅f(2, 1, 1) = true',
278: 1:    '✅f(2, 2, 6) = true',
278: 1:    '✅f(6, 1, 11) = true',
278: 1:    '✅f(5, 0, 1) = true',
278: 1:    '✅f(3, 1, 8) = true',
278: 1:    '✅f(3, 2, 10) = true',
278: 1:    '✅f(3, 2, 8) = true',
278: 1:    '✅f(6, 0, 11) = false',
278: 1:    '✅f(1, 4, 11) = true',
278: 1:    '✅f(0, 3, 10) = true',
278: 1:    '✅f(1, 4, 12) = false',
278: 1:    '✅f(1, 1, 7) = false',
278: 1:    '✅f(2, 1, 7) = true',
278: 1:    '✅f(7, 1, 11) = true',
278: 1:    '✅f(7, 1, 8) = true',
278: 1:    '✅f(7, 1, 13) = false',
278: 1:    '✅f(43, 1, 46) = true',
278: 1:    '✅f(40, 1, 46) = false',
278: 1:    '❌f(40, 2, 47) = ??? != true'
278: 1:  ],
278: 1:  'level': 10,
278: 1:  'nextQuestion': '40, 2, 47',
278: 1:  'questions': [
278: 1:    '0, 1, 5',
278: 1:    '1, 0, 1',
278: 1:    '1, 0, 2',
278: 1:    '3, 1, 7',
278: 1:    '4, 2, 14',
278: 1:    '3, 2, 14',
278: 1:    '0, 2, 5',
278: 1:    '3, 1, 6',
278: 1:    '3, 1, 9',
278: 1:    '3, 2, 9',
278: 1:    '10, 10, 0',
278: 1:    '0, 0, 1',
278: 1:    '0, 1, 1',
278: 1:    '0, 0, 2',
278: 1:    '2, 0, 2',
278: 1:    '0, 1, 2',
278: 1:    '1, 1, 2',
278: 1:    '2, 1, 3',
278: 1:    '3, 1, 4',
278: 1:    '2, 1, 1',
278: 1:    '2, 2, 6',
278: 1:    '6, 1, 11',
278: 1:    '5, 0, 1',
278: 1:    '3, 1, 8',
278: 1:    '3, 2, 10',
278: 1:    '3, 2, 8',
278: 1:    '6, 0, 11',
278: 1:    '1, 4, 11',
278: 1:    '0, 3, 10',
278: 1:    '1, 4, 12',
278: 1:    '1, 1, 7',
278: 1:    '2, 1, 7',
278: 1:    '7, 1, 11',
278: 1:    '7, 1, 8',
278: 1:    '7, 1, 13',
278: 1:    '43, 1, 46',
278: 1:    '40, 1, 46',
278: 1:    '40, 2, 47'
278: 1:  ]
278: 1:}
278: 1:Scores: 20660
278: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true']')
278: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
279: 1:BoardData {
279: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
279: 1:  'expectedAnswer': 'true',
279: 1:  'history': [
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '0, 1, 5',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '1, 0, 1',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '1, 0, 2',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '3, 1, 7',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '4, 2, 14',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '3, 2, 14',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '0, 2, 5',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '3, 1, 6',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '3, 1, 9',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '3, 2, 9',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '10, 10, 0',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '0, 0, 1',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '0, 1, 1',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '0, 0, 2',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '2, 0, 2',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '0, 1, 2',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '1, 1, 2',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '2, 1, 3',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '3, 1, 4',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '2, 1, 1',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '2, 2, 6',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '6, 1, 11',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '5, 0, 1',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '3, 1, 8',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '3, 2, 10',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '3, 2, 8',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '6, 0, 11',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '1, 4, 11',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '0, 3, 10',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '1, 4, 12',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '1, 1, 7',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '2, 1, 7',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '7, 1, 11',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '7, 1, 8',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '7, 1, 13',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '43, 1, 46',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '40, 1, 46',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '40, 2, 47',
279: 1:      'valid': true
279: 1:    }
279: 1:  ],
279: 1:  'info': [
279: 1:    '✅f(0, 1, 5) = true',
279: 1:    '✅f(1, 0, 1) = true',
279: 1:    '✅f(1, 0, 2) = false',
279: 1:    '✅f(3, 1, 7) = true',
279: 1:    '✅f(4, 2, 14) = true',
279: 1:    '✅f(3, 2, 14) = false',
279: 1:    '✅f(0, 2, 5) = true',
279: 1:    '✅f(3, 1, 6) = true',
279: 1:    '✅f(3, 1, 9) = false',
279: 1:    '✅f(3, 2, 9) = false',
279: 1:    '✅f(10, 10, 0) = true',
279: 1:    '✅f(0, 0, 1) = false',
279: 1:    '✅f(0, 1, 1) = false',
279: 1:    '✅f(0, 0, 2) = false',
279: 1:    '✅f(2, 0, 2) = true',
279: 1:    '✅f(0, 1, 2) = false',
279: 1:    '✅f(1, 1, 2) = false',
279: 1:    '✅f(2, 1, 3) = false',
279: 1:    '✅f(3, 1, 4) = false',
279: 1:    '✅f(2, 1, 1) = true',
279: 1:    '✅f(2, 2, 6) = true',
279: 1:    '✅f(6, 1, 11) = true',
279: 1:    '✅f(5, 0, 1) = true',
279: 1:    '✅f(3, 1, 8) = true',
279: 1:    '✅f(3, 2, 10) = true',
279: 1:    '✅f(3, 2, 8) = true',
279: 1:    '✅f(6, 0, 11) = false',
279: 1:    '✅f(1, 4, 11) = true',
279: 1:    '✅f(0, 3, 10) = true',
279: 1:    '✅f(1, 4, 12) = false',
279: 1:    '✅f(1, 1, 7) = false',
279: 1:    '✅f(2, 1, 7) = true',
279: 1:    '✅f(7, 1, 11) = true',
279: 1:    '✅f(7, 1, 8) = true',
279: 1:    '✅f(7, 1, 13) = false',
279: 1:    '✅f(43, 1, 46) = true',
279: 1:    '✅f(40, 1, 46) = false',
279: 1:    '✅f(40, 2, 47) = true',
279: 1:    '❌f(40, 2, 50) = ??? != true'
279: 1:  ],
279: 1:  'level': 10,
279: 1:  'nextQuestion': '40, 2, 50',
279: 1:  'questions': [
279: 1:    '0, 1, 5',
279: 1:    '1, 0, 1',
279: 1:    '1, 0, 2',
279: 1:    '3, 1, 7',
279: 1:    '4, 2, 14',
279: 1:    '3, 2, 14',
279: 1:    '0, 2, 5',
279: 1:    '3, 1, 6',
279: 1:    '3, 1, 9',
279: 1:    '3, 2, 9',
279: 1:    '10, 10, 0',
279: 1:    '0, 0, 1',
279: 1:    '0, 1, 1',
279: 1:    '0, 0, 2',
279: 1:    '2, 0, 2',
279: 1:    '0, 1, 2',
279: 1:    '1, 1, 2',
279: 1:    '2, 1, 3',
279: 1:    '3, 1, 4',
279: 1:    '2, 1, 1',
279: 1:    '2, 2, 6',
279: 1:    '6, 1, 11',
279: 1:    '5, 0, 1',
279: 1:    '3, 1, 8',
279: 1:    '3, 2, 10',
279: 1:    '3, 2, 8',
279: 1:    '6, 0, 11',
279: 1:    '1, 4, 11',
279: 1:    '0, 3, 10',
279: 1:    '1, 4, 12',
279: 1:    '1, 1, 7',
279: 1:    '2, 1, 7',
279: 1:    '7, 1, 11',
279: 1:    '7, 1, 8',
279: 1:    '7, 1, 13',
279: 1:    '43, 1, 46',
279: 1:    '40, 1, 46',
279: 1:    '40, 2, 47',
279: 1:    '40, 2, 50'
279: 1:  ]
279: 1:}
279: 1:Scores: 20667
279: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true']')
279: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
280: 1:BoardData {
280: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
280: 1:  'expectedAnswer': 'false',
280: 1:  'history': [
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '0, 1, 5',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '1, 0, 1',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '1, 0, 2',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '3, 1, 7',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '4, 2, 14',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '3, 2, 14',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '0, 2, 5',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '3, 1, 6',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '3, 1, 9',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '3, 2, 9',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '10, 10, 0',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '0, 0, 1',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '0, 1, 1',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '0, 0, 2',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '2, 0, 2',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '0, 1, 2',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '1, 1, 2',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '2, 1, 3',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '3, 1, 4',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '2, 1, 1',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '2, 2, 6',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '6, 1, 11',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '5, 0, 1',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '3, 1, 8',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '3, 2, 10',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '3, 2, 8',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '6, 0, 11',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '1, 4, 11',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '0, 3, 10',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '1, 4, 12',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '1, 1, 7',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '2, 1, 7',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '7, 1, 11',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '7, 1, 8',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '7, 1, 13',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '43, 1, 46',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '40, 1, 46',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '40, 2, 47',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '40, 2, 50',
280: 1:      'valid': true
280: 1:    }
280: 1:  ],
280: 1:  'info': [
280: 1:    '✅f(0, 1, 5) = true',
280: 1:    '✅f(1, 0, 1) = true',
280: 1:    '✅f(1, 0, 2) = false',
280: 1:    '✅f(3, 1, 7) = true',
280: 1:    '✅f(4, 2, 14) = true',
280: 1:    '✅f(3, 2, 14) = false',
280: 1:    '✅f(0, 2, 5) = true',
280: 1:    '✅f(3, 1, 6) = true',
280: 1:    '✅f(3, 1, 9) = false',
280: 1:    '✅f(3, 2, 9) = false',
280: 1:    '✅f(10, 10, 0) = true',
280: 1:    '✅f(0, 0, 1) = false',
280: 1:    '✅f(0, 1, 1) = false',
280: 1:    '✅f(0, 0, 2) = false',
280: 1:    '✅f(2, 0, 2) = true',
280: 1:    '✅f(0, 1, 2) = false',
280: 1:    '✅f(1, 1, 2) = false',
280: 1:    '✅f(2, 1, 3) = false',
280: 1:    '✅f(3, 1, 4) = false',
280: 1:    '✅f(2, 1, 1) = true',
280: 1:    '✅f(2, 2, 6) = true',
280: 1:    '✅f(6, 1, 11) = true',
280: 1:    '✅f(5, 0, 1) = true',
280: 1:    '✅f(3, 1, 8) = true',
280: 1:    '✅f(3, 2, 10) = true',
280: 1:    '✅f(3, 2, 8) = true',
280: 1:    '✅f(6, 0, 11) = false',
280: 1:    '✅f(1, 4, 11) = true',
280: 1:    '✅f(0, 3, 10) = true',
280: 1:    '✅f(1, 4, 12) = false',
280: 1:    '✅f(1, 1, 7) = false',
280: 1:    '✅f(2, 1, 7) = true',
280: 1:    '✅f(7, 1, 11) = true',
280: 1:    '✅f(7, 1, 8) = true',
280: 1:    '✅f(7, 1, 13) = false',
280: 1:    '✅f(43, 1, 46) = true',
280: 1:    '✅f(40, 1, 46) = false',
280: 1:    '✅f(40, 2, 47) = true',
280: 1:    '✅f(40, 2, 50) = true',
280: 1:    '❌f(40, 2, 52) = ??? != false'
280: 1:  ],
280: 1:  'level': 10,
280: 1:  'nextQuestion': '40, 2, 52',
280: 1:  'questions': [
280: 1:    '0, 1, 5',
280: 1:    '1, 0, 1',
280: 1:    '1, 0, 2',
280: 1:    '3, 1, 7',
280: 1:    '4, 2, 14',
280: 1:    '3, 2, 14',
280: 1:    '0, 2, 5',
280: 1:    '3, 1, 6',
280: 1:    '3, 1, 9',
280: 1:    '3, 2, 9',
280: 1:    '10, 10, 0',
280: 1:    '0, 0, 1',
280: 1:    '0, 1, 1',
280: 1:    '0, 0, 2',
280: 1:    '2, 0, 2',
280: 1:    '0, 1, 2',
280: 1:    '1, 1, 2',
280: 1:    '2, 1, 3',
280: 1:    '3, 1, 4',
280: 1:    '2, 1, 1',
280: 1:    '2, 2, 6',
280: 1:    '6, 1, 11',
280: 1:    '5, 0, 1',
280: 1:    '3, 1, 8',
280: 1:    '3, 2, 10',
280: 1:    '3, 2, 8',
280: 1:    '6, 0, 11',
280: 1:    '1, 4, 11',
280: 1:    '0, 3, 10',
280: 1:    '1, 4, 12',
280: 1:    '1, 1, 7',
280: 1:    '2, 1, 7',
280: 1:    '7, 1, 11',
280: 1:    '7, 1, 8',
280: 1:    '7, 1, 13',
280: 1:    '43, 1, 46',
280: 1:    '40, 1, 46',
280: 1:    '40, 2, 47',
280: 1:    '40, 2, 50',
280: 1:    '40, 2, 52'
280: 1:  ]
280: 1:}
280: 1:Scores: 20674
280: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false']')
280: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
281: 1:BoardData {
281: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
281: 1:  'expectedAnswer': 'false',
281: 1:  'history': [
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '0, 1, 5',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '1, 0, 1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '1, 0, 2',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '3, 1, 7',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '4, 2, 14',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '3, 2, 14',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '0, 2, 5',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '3, 1, 6',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '3, 1, 9',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '3, 2, 9',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '10, 10, 0',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '0, 0, 1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '0, 1, 1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '0, 0, 2',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '2, 0, 2',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '0, 1, 2',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '1, 1, 2',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '2, 1, 3',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '3, 1, 4',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '2, 1, 1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '2, 2, 6',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '6, 1, 11',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '5, 0, 1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '3, 1, 8',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '3, 2, 10',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '3, 2, 8',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '6, 0, 11',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '1, 4, 11',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '0, 3, 10',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '1, 4, 12',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '1, 1, 7',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '2, 1, 7',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '7, 1, 11',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '7, 1, 8',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '7, 1, 13',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '43, 1, 46',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '40, 1, 46',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '40, 2, 47',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '40, 2, 50',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '40, 2, 52',
281: 1:      'valid': true
281: 1:    }
281: 1:  ],
281: 1:  'info': [
281: 1:    '✅f(0, 1, 5) = true',
281: 1:    '✅f(1, 0, 1) = true',
281: 1:    '✅f(1, 0, 2) = false',
281: 1:    '✅f(3, 1, 7) = true',
281: 1:    '✅f(4, 2, 14) = true',
281: 1:    '✅f(3, 2, 14) = false',
281: 1:    '✅f(0, 2, 5) = true',
281: 1:    '✅f(3, 1, 6) = true',
281: 1:    '✅f(3, 1, 9) = false',
281: 1:    '✅f(3, 2, 9) = false',
281: 1:    '✅f(10, 10, 0) = true',
281: 1:    '✅f(0, 0, 1) = false',
281: 1:    '✅f(0, 1, 1) = false',
281: 1:    '✅f(0, 0, 2) = false',
281: 1:    '✅f(2, 0, 2) = true',
281: 1:    '✅f(0, 1, 2) = false',
281: 1:    '✅f(1, 1, 2) = false',
281: 1:    '✅f(2, 1, 3) = false',
281: 1:    '✅f(3, 1, 4) = false',
281: 1:    '✅f(2, 1, 1) = true',
281: 1:    '✅f(2, 2, 6) = true',
281: 1:    '✅f(6, 1, 11) = true',
281: 1:    '✅f(5, 0, 1) = true',
281: 1:    '✅f(3, 1, 8) = true',
281: 1:    '✅f(3, 2, 10) = true',
281: 1:    '✅f(3, 2, 8) = true',
281: 1:    '✅f(6, 0, 11) = false',
281: 1:    '✅f(1, 4, 11) = true',
281: 1:    '✅f(0, 3, 10) = true',
281: 1:    '✅f(1, 4, 12) = false',
281: 1:    '✅f(1, 1, 7) = false',
281: 1:    '✅f(2, 1, 7) = true',
281: 1:    '✅f(7, 1, 11) = true',
281: 1:    '✅f(7, 1, 8) = true',
281: 1:    '✅f(7, 1, 13) = false',
281: 1:    '✅f(43, 1, 46) = true',
281: 1:    '✅f(40, 1, 46) = false',
281: 1:    '✅f(40, 2, 47) = true',
281: 1:    '✅f(40, 2, 50) = true',
281: 1:    '✅f(40, 2, 52) = false',
281: 1:    '❌f(22, 2, 33) = ??? != false'
281: 1:  ],
281: 1:  'level': 10,
281: 1:  'nextQuestion': '22, 2, 33',
281: 1:  'questions': [
281: 1:    '0, 1, 5',
281: 1:    '1, 0, 1',
281: 1:    '1, 0, 2',
281: 1:    '3, 1, 7',
281: 1:    '4, 2, 14',
281: 1:    '3, 2, 14',
281: 1:    '0, 2, 5',
281: 1:    '3, 1, 6',
281: 1:    '3, 1, 9',
281: 1:    '3, 2, 9',
281: 1:    '10, 10, 0',
281: 1:    '0, 0, 1',
281: 1:    '0, 1, 1',
281: 1:    '0, 0, 2',
281: 1:    '2, 0, 2',
281: 1:    '0, 1, 2',
281: 1:    '1, 1, 2',
281: 1:    '2, 1, 3',
281: 1:    '3, 1, 4',
281: 1:    '2, 1, 1',
281: 1:    '2, 2, 6',
281: 1:    '6, 1, 11',
281: 1:    '5, 0, 1',
281: 1:    '3, 1, 8',
281: 1:    '3, 2, 10',
281: 1:    '3, 2, 8',
281: 1:    '6, 0, 11',
281: 1:    '1, 4, 11',
281: 1:    '0, 3, 10',
281: 1:    '1, 4, 12',
281: 1:    '1, 1, 7',
281: 1:    '2, 1, 7',
281: 1:    '7, 1, 11',
281: 1:    '7, 1, 8',
281: 1:    '7, 1, 13',
281: 1:    '43, 1, 46',
281: 1:    '40, 1, 46',
281: 1:    '40, 2, 47',
281: 1:    '40, 2, 50',
281: 1:    '40, 2, 52',
281: 1:    '22, 2, 33'
281: 1:  ]
281: 1:}
281: 1:Scores: 20681
281: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false']')
281: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
282: 1:BoardData {
282: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
282: 1:  'expectedAnswer': 'true',
282: 1:  'history': [
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '0, 1, 5',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '1, 0, 1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '1, 0, 2',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '3, 1, 7',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '4, 2, 14',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '3, 2, 14',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '0, 2, 5',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '3, 1, 6',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '3, 1, 9',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '3, 2, 9',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '10, 10, 0',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '0, 0, 1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '0, 1, 1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '0, 0, 2',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '2, 0, 2',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '0, 1, 2',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '1, 1, 2',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '2, 1, 3',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '3, 1, 4',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '2, 1, 1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '2, 2, 6',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '6, 1, 11',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '5, 0, 1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '3, 1, 8',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '3, 2, 10',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '3, 2, 8',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '6, 0, 11',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '1, 4, 11',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '0, 3, 10',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '1, 4, 12',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '1, 1, 7',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '2, 1, 7',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '7, 1, 11',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '7, 1, 8',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '7, 1, 13',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '43, 1, 46',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '40, 1, 46',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '40, 2, 47',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '40, 2, 50',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '40, 2, 52',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '22, 2, 33',
282: 1:      'valid': true
282: 1:    }
282: 1:  ],
282: 1:  'info': [
282: 1:    '✅f(0, 1, 5) = true',
282: 1:    '✅f(1, 0, 1) = true',
282: 1:    '✅f(1, 0, 2) = false',
282: 1:    '✅f(3, 1, 7) = true',
282: 1:    '✅f(4, 2, 14) = true',
282: 1:    '✅f(3, 2, 14) = false',
282: 1:    '✅f(0, 2, 5) = true',
282: 1:    '✅f(3, 1, 6) = true',
282: 1:    '✅f(3, 1, 9) = false',
282: 1:    '✅f(3, 2, 9) = false',
282: 1:    '✅f(10, 10, 0) = true',
282: 1:    '✅f(0, 0, 1) = false',
282: 1:    '✅f(0, 1, 1) = false',
282: 1:    '✅f(0, 0, 2) = false',
282: 1:    '✅f(2, 0, 2) = true',
282: 1:    '✅f(0, 1, 2) = false',
282: 1:    '✅f(1, 1, 2) = false',
282: 1:    '✅f(2, 1, 3) = false',
282: 1:    '✅f(3, 1, 4) = false',
282: 1:    '✅f(2, 1, 1) = true',
282: 1:    '✅f(2, 2, 6) = true',
282: 1:    '✅f(6, 1, 11) = true',
282: 1:    '✅f(5, 0, 1) = true',
282: 1:    '✅f(3, 1, 8) = true',
282: 1:    '✅f(3, 2, 10) = true',
282: 1:    '✅f(3, 2, 8) = true',
282: 1:    '✅f(6, 0, 11) = false',
282: 1:    '✅f(1, 4, 11) = true',
282: 1:    '✅f(0, 3, 10) = true',
282: 1:    '✅f(1, 4, 12) = false',
282: 1:    '✅f(1, 1, 7) = false',
282: 1:    '✅f(2, 1, 7) = true',
282: 1:    '✅f(7, 1, 11) = true',
282: 1:    '✅f(7, 1, 8) = true',
282: 1:    '✅f(7, 1, 13) = false',
282: 1:    '✅f(43, 1, 46) = true',
282: 1:    '✅f(40, 1, 46) = false',
282: 1:    '✅f(40, 2, 47) = true',
282: 1:    '✅f(40, 2, 50) = true',
282: 1:    '✅f(40, 2, 52) = false',
282: 1:    '✅f(22, 2, 33) = false',
282: 1:    '❌f(0, 2, 10) = ??? != true'
282: 1:  ],
282: 1:  'level': 10,
282: 1:  'nextQuestion': '0, 2, 10',
282: 1:  'questions': [
282: 1:    '0, 1, 5',
282: 1:    '1, 0, 1',
282: 1:    '1, 0, 2',
282: 1:    '3, 1, 7',
282: 1:    '4, 2, 14',
282: 1:    '3, 2, 14',
282: 1:    '0, 2, 5',
282: 1:    '3, 1, 6',
282: 1:    '3, 1, 9',
282: 1:    '3, 2, 9',
282: 1:    '10, 10, 0',
282: 1:    '0, 0, 1',
282: 1:    '0, 1, 1',
282: 1:    '0, 0, 2',
282: 1:    '2, 0, 2',
282: 1:    '0, 1, 2',
282: 1:    '1, 1, 2',
282: 1:    '2, 1, 3',
282: 1:    '3, 1, 4',
282: 1:    '2, 1, 1',
282: 1:    '2, 2, 6',
282: 1:    '6, 1, 11',
282: 1:    '5, 0, 1',
282: 1:    '3, 1, 8',
282: 1:    '3, 2, 10',
282: 1:    '3, 2, 8',
282: 1:    '6, 0, 11',
282: 1:    '1, 4, 11',
282: 1:    '0, 3, 10',
282: 1:    '1, 4, 12',
282: 1:    '1, 1, 7',
282: 1:    '2, 1, 7',
282: 1:    '7, 1, 11',
282: 1:    '7, 1, 8',
282: 1:    '7, 1, 13',
282: 1:    '43, 1, 46',
282: 1:    '40, 1, 46',
282: 1:    '40, 2, 47',
282: 1:    '40, 2, 50',
282: 1:    '40, 2, 52',
282: 1:    '22, 2, 33',
282: 1:    '0, 2, 10'
282: 1:  ]
282: 1:}
282: 1:Scores: 20688
282: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
282: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
283: 1:BoardData {
283: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
283: 1:  'expectedAnswer': 'true',
283: 1:  'history': [
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '0, 1, 5',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '1, 0, 1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '1, 0, 2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '3, 1, 7',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '4, 2, 14',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '3, 2, 14',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '0, 2, 5',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '3, 1, 6',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '3, 1, 9',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '3, 2, 9',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '10, 10, 0',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '0, 0, 1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '0, 1, 1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '0, 0, 2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '2, 0, 2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '0, 1, 2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '1, 1, 2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '2, 1, 3',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '3, 1, 4',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '2, 1, 1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '2, 2, 6',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '6, 1, 11',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '5, 0, 1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '3, 1, 8',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '3, 2, 10',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '3, 2, 8',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '6, 0, 11',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '1, 4, 11',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '0, 3, 10',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '1, 4, 12',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '1, 1, 7',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '2, 1, 7',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '7, 1, 11',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '7, 1, 8',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '7, 1, 13',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '43, 1, 46',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '40, 1, 46',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '40, 2, 47',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '40, 2, 50',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '40, 2, 52',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '22, 2, 33',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '0, 2, 10',
283: 1:      'valid': true
283: 1:    }
283: 1:  ],
283: 1:  'info': [
283: 1:    '✅f(0, 1, 5) = true',
283: 1:    '✅f(1, 0, 1) = true',
283: 1:    '✅f(1, 0, 2) = false',
283: 1:    '✅f(3, 1, 7) = true',
283: 1:    '✅f(4, 2, 14) = true',
283: 1:    '✅f(3, 2, 14) = false',
283: 1:    '✅f(0, 2, 5) = true',
283: 1:    '✅f(3, 1, 6) = true',
283: 1:    '✅f(3, 1, 9) = false',
283: 1:    '✅f(3, 2, 9) = false',
283: 1:    '✅f(10, 10, 0) = true',
283: 1:    '✅f(0, 0, 1) = false',
283: 1:    '✅f(0, 1, 1) = false',
283: 1:    '✅f(0, 0, 2) = false',
283: 1:    '✅f(2, 0, 2) = true',
283: 1:    '✅f(0, 1, 2) = false',
283: 1:    '✅f(1, 1, 2) = false',
283: 1:    '✅f(2, 1, 3) = false',
283: 1:    '✅f(3, 1, 4) = false',
283: 1:    '✅f(2, 1, 1) = true',
283: 1:    '✅f(2, 2, 6) = true',
283: 1:    '✅f(6, 1, 11) = true',
283: 1:    '✅f(5, 0, 1) = true',
283: 1:    '✅f(3, 1, 8) = true',
283: 1:    '✅f(3, 2, 10) = true',
283: 1:    '✅f(3, 2, 8) = true',
283: 1:    '✅f(6, 0, 11) = false',
283: 1:    '✅f(1, 4, 11) = true',
283: 1:    '✅f(0, 3, 10) = true',
283: 1:    '✅f(1, 4, 12) = false',
283: 1:    '✅f(1, 1, 7) = false',
283: 1:    '✅f(2, 1, 7) = true',
283: 1:    '✅f(7, 1, 11) = true',
283: 1:    '✅f(7, 1, 8) = true',
283: 1:    '✅f(7, 1, 13) = false',
283: 1:    '✅f(43, 1, 46) = true',
283: 1:    '✅f(40, 1, 46) = false',
283: 1:    '✅f(40, 2, 47) = true',
283: 1:    '✅f(40, 2, 50) = true',
283: 1:    '✅f(40, 2, 52) = false',
283: 1:    '✅f(22, 2, 33) = false',
283: 1:    '✅f(0, 2, 10) = true',
283: 1:    '❌f(1000000, 1000, 1000100) = ??? != true'
283: 1:  ],
283: 1:  'level': 10,
283: 1:  'nextQuestion': '1000000, 1000, 1000100',
283: 1:  'questions': [
283: 1:    '0, 1, 5',
283: 1:    '1, 0, 1',
283: 1:    '1, 0, 2',
283: 1:    '3, 1, 7',
283: 1:    '4, 2, 14',
283: 1:    '3, 2, 14',
283: 1:    '0, 2, 5',
283: 1:    '3, 1, 6',
283: 1:    '3, 1, 9',
283: 1:    '3, 2, 9',
283: 1:    '10, 10, 0',
283: 1:    '0, 0, 1',
283: 1:    '0, 1, 1',
283: 1:    '0, 0, 2',
283: 1:    '2, 0, 2',
283: 1:    '0, 1, 2',
283: 1:    '1, 1, 2',
283: 1:    '2, 1, 3',
283: 1:    '3, 1, 4',
283: 1:    '2, 1, 1',
283: 1:    '2, 2, 6',
283: 1:    '6, 1, 11',
283: 1:    '5, 0, 1',
283: 1:    '3, 1, 8',
283: 1:    '3, 2, 10',
283: 1:    '3, 2, 8',
283: 1:    '6, 0, 11',
283: 1:    '1, 4, 11',
283: 1:    '0, 3, 10',
283: 1:    '1, 4, 12',
283: 1:    '1, 1, 7',
283: 1:    '2, 1, 7',
283: 1:    '7, 1, 11',
283: 1:    '7, 1, 8',
283: 1:    '7, 1, 13',
283: 1:    '43, 1, 46',
283: 1:    '40, 1, 46',
283: 1:    '40, 2, 47',
283: 1:    '40, 2, 50',
283: 1:    '40, 2, 52',
283: 1:    '22, 2, 33',
283: 1:    '0, 2, 10',
283: 1:    '1000000, 1000, 1000100'
283: 1:  ]
283: 1:}
283: 1:Scores: 20695
283: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true']')
283: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
284: 1:BoardData {
284: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
284: 1:  'expectedAnswer': 'false',
284: 1:  'history': [
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '0, 1, 5',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '1, 0, 1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '1, 0, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '3, 1, 7',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '4, 2, 14',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '3, 2, 14',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '0, 2, 5',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '3, 1, 6',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '3, 1, 9',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '3, 2, 9',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '10, 10, 0',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '0, 0, 1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '0, 1, 1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '0, 0, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '2, 0, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '0, 1, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '1, 1, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '2, 1, 3',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '3, 1, 4',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '2, 1, 1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '2, 2, 6',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '6, 1, 11',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '5, 0, 1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '3, 1, 8',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '3, 2, 10',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '3, 2, 8',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '6, 0, 11',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '1, 4, 11',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '0, 3, 10',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '1, 4, 12',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '1, 1, 7',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '2, 1, 7',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '7, 1, 11',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '7, 1, 8',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '7, 1, 13',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '43, 1, 46',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '40, 1, 46',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '40, 2, 47',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '40, 2, 50',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '40, 2, 52',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '22, 2, 33',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '0, 2, 10',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '1000000, 1000, 1000100',
284: 1:      'valid': true
284: 1:    }
284: 1:  ],
284: 1:  'info': [
284: 1:    '✅f(0, 1, 5) = true',
284: 1:    '✅f(1, 0, 1) = true',
284: 1:    '✅f(1, 0, 2) = false',
284: 1:    '✅f(3, 1, 7) = true',
284: 1:    '✅f(4, 2, 14) = true',
284: 1:    '✅f(3, 2, 14) = false',
284: 1:    '✅f(0, 2, 5) = true',
284: 1:    '✅f(3, 1, 6) = true',
284: 1:    '✅f(3, 1, 9) = false',
284: 1:    '✅f(3, 2, 9) = false',
284: 1:    '✅f(10, 10, 0) = true',
284: 1:    '✅f(0, 0, 1) = false',
284: 1:    '✅f(0, 1, 1) = false',
284: 1:    '✅f(0, 0, 2) = false',
284: 1:    '✅f(2, 0, 2) = true',
284: 1:    '✅f(0, 1, 2) = false',
284: 1:    '✅f(1, 1, 2) = false',
284: 1:    '✅f(2, 1, 3) = false',
284: 1:    '✅f(3, 1, 4) = false',
284: 1:    '✅f(2, 1, 1) = true',
284: 1:    '✅f(2, 2, 6) = true',
284: 1:    '✅f(6, 1, 11) = true',
284: 1:    '✅f(5, 0, 1) = true',
284: 1:    '✅f(3, 1, 8) = true',
284: 1:    '✅f(3, 2, 10) = true',
284: 1:    '✅f(3, 2, 8) = true',
284: 1:    '✅f(6, 0, 11) = false',
284: 1:    '✅f(1, 4, 11) = true',
284: 1:    '✅f(0, 3, 10) = true',
284: 1:    '✅f(1, 4, 12) = false',
284: 1:    '✅f(1, 1, 7) = false',
284: 1:    '✅f(2, 1, 7) = true',
284: 1:    '✅f(7, 1, 11) = true',
284: 1:    '✅f(7, 1, 8) = true',
284: 1:    '✅f(7, 1, 13) = false',
284: 1:    '✅f(43, 1, 46) = true',
284: 1:    '✅f(40, 1, 46) = false',
284: 1:    '✅f(40, 2, 47) = true',
284: 1:    '✅f(40, 2, 50) = true',
284: 1:    '✅f(40, 2, 52) = false',
284: 1:    '✅f(22, 2, 33) = false',
284: 1:    '✅f(0, 2, 10) = true',
284: 1:    '✅f(1000000, 1000, 1000100) = true',
284: 1:    '❌f(2, 1000000, 100003) = ??? != false'
284: 1:  ],
284: 1:  'level': 10,
284: 1:  'nextQuestion': '2, 1000000, 100003',
284: 1:  'questions': [
284: 1:    '0, 1, 5',
284: 1:    '1, 0, 1',
284: 1:    '1, 0, 2',
284: 1:    '3, 1, 7',
284: 1:    '4, 2, 14',
284: 1:    '3, 2, 14',
284: 1:    '0, 2, 5',
284: 1:    '3, 1, 6',
284: 1:    '3, 1, 9',
284: 1:    '3, 2, 9',
284: 1:    '10, 10, 0',
284: 1:    '0, 0, 1',
284: 1:    '0, 1, 1',
284: 1:    '0, 0, 2',
284: 1:    '2, 0, 2',
284: 1:    '0, 1, 2',
284: 1:    '1, 1, 2',
284: 1:    '2, 1, 3',
284: 1:    '3, 1, 4',
284: 1:    '2, 1, 1',
284: 1:    '2, 2, 6',
284: 1:    '6, 1, 11',
284: 1:    '5, 0, 1',
284: 1:    '3, 1, 8',
284: 1:    '3, 2, 10',
284: 1:    '3, 2, 8',
284: 1:    '6, 0, 11',
284: 1:    '1, 4, 11',
284: 1:    '0, 3, 10',
284: 1:    '1, 4, 12',
284: 1:    '1, 1, 7',
284: 1:    '2, 1, 7',
284: 1:    '7, 1, 11',
284: 1:    '7, 1, 8',
284: 1:    '7, 1, 13',
284: 1:    '43, 1, 46',
284: 1:    '40, 1, 46',
284: 1:    '40, 2, 47',
284: 1:    '40, 2, 50',
284: 1:    '40, 2, 52',
284: 1:    '22, 2, 33',
284: 1:    '0, 2, 10',
284: 1:    '1000000, 1000, 1000100',
284: 1:    '2, 1000000, 100003'
284: 1:  ]
284: 1:}
284: 1:Scores: 20702
284: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false']')
284: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
285: 1:BoardData {
285: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
285: 1:  'expectedAnswer': 'true',
285: 1:  'history': [
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '0, 1, 5',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '1, 0, 1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '1, 0, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '3, 1, 7',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '4, 2, 14',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '3, 2, 14',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '0, 2, 5',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '3, 1, 6',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '3, 1, 9',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '3, 2, 9',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '10, 10, 0',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '0, 0, 1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '0, 1, 1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '0, 0, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '2, 0, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '0, 1, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '1, 1, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '2, 1, 3',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '3, 1, 4',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '2, 1, 1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '2, 2, 6',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '6, 1, 11',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '5, 0, 1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '3, 1, 8',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '3, 2, 10',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '3, 2, 8',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '6, 0, 11',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '1, 4, 11',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '0, 3, 10',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '1, 4, 12',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '1, 1, 7',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '2, 1, 7',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '7, 1, 11',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '7, 1, 8',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '7, 1, 13',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '43, 1, 46',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '40, 1, 46',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '40, 2, 47',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '40, 2, 50',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '40, 2, 52',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '22, 2, 33',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '0, 2, 10',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '1000000, 1000, 1000100',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '2, 1000000, 100003',
285: 1:      'valid': true
285: 1:    }
285: 1:  ],
285: 1:  'info': [
285: 1:    '✅f(0, 1, 5) = true',
285: 1:    '✅f(1, 0, 1) = true',
285: 1:    '✅f(1, 0, 2) = false',
285: 1:    '✅f(3, 1, 7) = true',
285: 1:    '✅f(4, 2, 14) = true',
285: 1:    '✅f(3, 2, 14) = false',
285: 1:    '✅f(0, 2, 5) = true',
285: 1:    '✅f(3, 1, 6) = true',
285: 1:    '✅f(3, 1, 9) = false',
285: 1:    '✅f(3, 2, 9) = false',
285: 1:    '✅f(10, 10, 0) = true',
285: 1:    '✅f(0, 0, 1) = false',
285: 1:    '✅f(0, 1, 1) = false',
285: 1:    '✅f(0, 0, 2) = false',
285: 1:    '✅f(2, 0, 2) = true',
285: 1:    '✅f(0, 1, 2) = false',
285: 1:    '✅f(1, 1, 2) = false',
285: 1:    '✅f(2, 1, 3) = false',
285: 1:    '✅f(3, 1, 4) = false',
285: 1:    '✅f(2, 1, 1) = true',
285: 1:    '✅f(2, 2, 6) = true',
285: 1:    '✅f(6, 1, 11) = true',
285: 1:    '✅f(5, 0, 1) = true',
285: 1:    '✅f(3, 1, 8) = true',
285: 1:    '✅f(3, 2, 10) = true',
285: 1:    '✅f(3, 2, 8) = true',
285: 1:    '✅f(6, 0, 11) = false',
285: 1:    '✅f(1, 4, 11) = true',
285: 1:    '✅f(0, 3, 10) = true',
285: 1:    '✅f(1, 4, 12) = false',
285: 1:    '✅f(1, 1, 7) = false',
285: 1:    '✅f(2, 1, 7) = true',
285: 1:    '✅f(7, 1, 11) = true',
285: 1:    '✅f(7, 1, 8) = true',
285: 1:    '✅f(7, 1, 13) = false',
285: 1:    '✅f(43, 1, 46) = true',
285: 1:    '✅f(40, 1, 46) = false',
285: 1:    '✅f(40, 2, 47) = true',
285: 1:    '✅f(40, 2, 50) = true',
285: 1:    '✅f(40, 2, 52) = false',
285: 1:    '✅f(22, 2, 33) = false',
285: 1:    '✅f(0, 2, 10) = true',
285: 1:    '✅f(1000000, 1000, 1000100) = true',
285: 1:    '✅f(2, 1000000, 100003) = false',
285: 1:    '❌f(20, 0, 19) = ??? != true'
285: 1:  ],
285: 1:  'level': 10,
285: 1:  'nextQuestion': '20, 0, 19',
285: 1:  'questions': [
285: 1:    '0, 1, 5',
285: 1:    '1, 0, 1',
285: 1:    '1, 0, 2',
285: 1:    '3, 1, 7',
285: 1:    '4, 2, 14',
285: 1:    '3, 2, 14',
285: 1:    '0, 2, 5',
285: 1:    '3, 1, 6',
285: 1:    '3, 1, 9',
285: 1:    '3, 2, 9',
285: 1:    '10, 10, 0',
285: 1:    '0, 0, 1',
285: 1:    '0, 1, 1',
285: 1:    '0, 0, 2',
285: 1:    '2, 0, 2',
285: 1:    '0, 1, 2',
285: 1:    '1, 1, 2',
285: 1:    '2, 1, 3',
285: 1:    '3, 1, 4',
285: 1:    '2, 1, 1',
285: 1:    '2, 2, 6',
285: 1:    '6, 1, 11',
285: 1:    '5, 0, 1',
285: 1:    '3, 1, 8',
285: 1:    '3, 2, 10',
285: 1:    '3, 2, 8',
285: 1:    '6, 0, 11',
285: 1:    '1, 4, 11',
285: 1:    '0, 3, 10',
285: 1:    '1, 4, 12',
285: 1:    '1, 1, 7',
285: 1:    '2, 1, 7',
285: 1:    '7, 1, 11',
285: 1:    '7, 1, 8',
285: 1:    '7, 1, 13',
285: 1:    '43, 1, 46',
285: 1:    '40, 1, 46',
285: 1:    '40, 2, 47',
285: 1:    '40, 2, 50',
285: 1:    '40, 2, 52',
285: 1:    '22, 2, 33',
285: 1:    '0, 2, 10',
285: 1:    '1000000, 1000, 1000100',
285: 1:    '2, 1000000, 100003',
285: 1:    '20, 0, 19'
285: 1:  ]
285: 1:}
285: 1:Scores: 20709
285: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true']')
285: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
286: 1:BoardData {
286: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
286: 1:  'expectedAnswer': 'false',
286: 1:  'history': [
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '0, 1, 5',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '1, 0, 1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '1, 0, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '3, 1, 7',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '4, 2, 14',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '3, 2, 14',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '0, 2, 5',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '3, 1, 6',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '3, 1, 9',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '3, 2, 9',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '10, 10, 0',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '0, 0, 1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '0, 1, 1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '0, 0, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '2, 0, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '0, 1, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '1, 1, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '2, 1, 3',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '3, 1, 4',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '2, 1, 1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '2, 2, 6',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '6, 1, 11',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '5, 0, 1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '3, 1, 8',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '3, 2, 10',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '3, 2, 8',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '6, 0, 11',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '1, 4, 11',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '0, 3, 10',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '1, 4, 12',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '1, 1, 7',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '2, 1, 7',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '7, 1, 11',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '7, 1, 8',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '7, 1, 13',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '43, 1, 46',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '40, 1, 46',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '40, 2, 47',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '40, 2, 50',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '40, 2, 52',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '22, 2, 33',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '0, 2, 10',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '1000000, 1000, 1000100',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '2, 1000000, 100003',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '20, 0, 19',
286: 1:      'valid': true
286: 1:    }
286: 1:  ],
286: 1:  'info': [
286: 1:    '✅f(0, 1, 5) = true',
286: 1:    '✅f(1, 0, 1) = true',
286: 1:    '✅f(1, 0, 2) = false',
286: 1:    '✅f(3, 1, 7) = true',
286: 1:    '✅f(4, 2, 14) = true',
286: 1:    '✅f(3, 2, 14) = false',
286: 1:    '✅f(0, 2, 5) = true',
286: 1:    '✅f(3, 1, 6) = true',
286: 1:    '✅f(3, 1, 9) = false',
286: 1:    '✅f(3, 2, 9) = false',
286: 1:    '✅f(10, 10, 0) = true',
286: 1:    '✅f(0, 0, 1) = false',
286: 1:    '✅f(0, 1, 1) = false',
286: 1:    '✅f(0, 0, 2) = false',
286: 1:    '✅f(2, 0, 2) = true',
286: 1:    '✅f(0, 1, 2) = false',
286: 1:    '✅f(1, 1, 2) = false',
286: 1:    '✅f(2, 1, 3) = false',
286: 1:    '✅f(3, 1, 4) = false',
286: 1:    '✅f(2, 1, 1) = true',
286: 1:    '✅f(2, 2, 6) = true',
286: 1:    '✅f(6, 1, 11) = true',
286: 1:    '✅f(5, 0, 1) = true',
286: 1:    '✅f(3, 1, 8) = true',
286: 1:    '✅f(3, 2, 10) = true',
286: 1:    '✅f(3, 2, 8) = true',
286: 1:    '✅f(6, 0, 11) = false',
286: 1:    '✅f(1, 4, 11) = true',
286: 1:    '✅f(0, 3, 10) = true',
286: 1:    '✅f(1, 4, 12) = false',
286: 1:    '✅f(1, 1, 7) = false',
286: 1:    '✅f(2, 1, 7) = true',
286: 1:    '✅f(7, 1, 11) = true',
286: 1:    '✅f(7, 1, 8) = true',
286: 1:    '✅f(7, 1, 13) = false',
286: 1:    '✅f(43, 1, 46) = true',
286: 1:    '✅f(40, 1, 46) = false',
286: 1:    '✅f(40, 2, 47) = true',
286: 1:    '✅f(40, 2, 50) = true',
286: 1:    '✅f(40, 2, 52) = false',
286: 1:    '✅f(22, 2, 33) = false',
286: 1:    '✅f(0, 2, 10) = true',
286: 1:    '✅f(1000000, 1000, 1000100) = true',
286: 1:    '✅f(2, 1000000, 100003) = false',
286: 1:    '✅f(20, 0, 19) = true',
286: 1:    '❌f(20, 0, 21) = ??? != false'
286: 1:  ],
286: 1:  'level': 10,
286: 1:  'nextQuestion': '20, 0, 21',
286: 1:  'questions': [
286: 1:    '0, 1, 5',
286: 1:    '1, 0, 1',
286: 1:    '1, 0, 2',
286: 1:    '3, 1, 7',
286: 1:    '4, 2, 14',
286: 1:    '3, 2, 14',
286: 1:    '0, 2, 5',
286: 1:    '3, 1, 6',
286: 1:    '3, 1, 9',
286: 1:    '3, 2, 9',
286: 1:    '10, 10, 0',
286: 1:    '0, 0, 1',
286: 1:    '0, 1, 1',
286: 1:    '0, 0, 2',
286: 1:    '2, 0, 2',
286: 1:    '0, 1, 2',
286: 1:    '1, 1, 2',
286: 1:    '2, 1, 3',
286: 1:    '3, 1, 4',
286: 1:    '2, 1, 1',
286: 1:    '2, 2, 6',
286: 1:    '6, 1, 11',
286: 1:    '5, 0, 1',
286: 1:    '3, 1, 8',
286: 1:    '3, 2, 10',
286: 1:    '3, 2, 8',
286: 1:    '6, 0, 11',
286: 1:    '1, 4, 11',
286: 1:    '0, 3, 10',
286: 1:    '1, 4, 12',
286: 1:    '1, 1, 7',
286: 1:    '2, 1, 7',
286: 1:    '7, 1, 11',
286: 1:    '7, 1, 8',
286: 1:    '7, 1, 13',
286: 1:    '43, 1, 46',
286: 1:    '40, 1, 46',
286: 1:    '40, 2, 47',
286: 1:    '40, 2, 50',
286: 1:    '40, 2, 52',
286: 1:    '22, 2, 33',
286: 1:    '0, 2, 10',
286: 1:    '1000000, 1000, 1000100',
286: 1:    '2, 1000000, 100003',
286: 1:    '20, 0, 19',
286: 1:    '20, 0, 21'
286: 1:  ]
286: 1:}
286: 1:Scores: 20716
286: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false']')
286: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
287: 1:BoardData {
287: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
287: 1:  'expectedAnswer': 'false',
287: 1:  'history': [
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '0, 1, 5',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '1, 0, 1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '1, 0, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '3, 1, 7',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '4, 2, 14',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '3, 2, 14',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '0, 2, 5',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '3, 1, 6',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '3, 1, 9',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '3, 2, 9',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '10, 10, 0',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '0, 0, 1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '0, 1, 1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '0, 0, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '2, 0, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '0, 1, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '1, 1, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '2, 1, 3',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '3, 1, 4',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '2, 1, 1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '2, 2, 6',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '6, 1, 11',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '5, 0, 1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '3, 1, 8',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '3, 2, 10',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '3, 2, 8',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '6, 0, 11',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '1, 4, 11',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '0, 3, 10',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '1, 4, 12',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '1, 1, 7',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '2, 1, 7',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '7, 1, 11',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '7, 1, 8',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '7, 1, 13',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '43, 1, 46',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '40, 1, 46',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '40, 2, 47',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '40, 2, 50',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '40, 2, 52',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '22, 2, 33',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '0, 2, 10',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '1000000, 1000, 1000100',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '2, 1000000, 100003',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '20, 0, 19',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '20, 0, 21',
287: 1:      'valid': true
287: 1:    }
287: 1:  ],
287: 1:  'info': [
287: 1:    '✅f(0, 1, 5) = true',
287: 1:    '✅f(1, 0, 1) = true',
287: 1:    '✅f(1, 0, 2) = false',
287: 1:    '✅f(3, 1, 7) = true',
287: 1:    '✅f(4, 2, 14) = true',
287: 1:    '✅f(3, 2, 14) = false',
287: 1:    '✅f(0, 2, 5) = true',
287: 1:    '✅f(3, 1, 6) = true',
287: 1:    '✅f(3, 1, 9) = false',
287: 1:    '✅f(3, 2, 9) = false',
287: 1:    '✅f(10, 10, 0) = true',
287: 1:    '✅f(0, 0, 1) = false',
287: 1:    '✅f(0, 1, 1) = false',
287: 1:    '✅f(0, 0, 2) = false',
287: 1:    '✅f(2, 0, 2) = true',
287: 1:    '✅f(0, 1, 2) = false',
287: 1:    '✅f(1, 1, 2) = false',
287: 1:    '✅f(2, 1, 3) = false',
287: 1:    '✅f(3, 1, 4) = false',
287: 1:    '✅f(2, 1, 1) = true',
287: 1:    '✅f(2, 2, 6) = true',
287: 1:    '✅f(6, 1, 11) = true',
287: 1:    '✅f(5, 0, 1) = true',
287: 1:    '✅f(3, 1, 8) = true',
287: 1:    '✅f(3, 2, 10) = true',
287: 1:    '✅f(3, 2, 8) = true',
287: 1:    '✅f(6, 0, 11) = false',
287: 1:    '✅f(1, 4, 11) = true',
287: 1:    '✅f(0, 3, 10) = true',
287: 1:    '✅f(1, 4, 12) = false',
287: 1:    '✅f(1, 1, 7) = false',
287: 1:    '✅f(2, 1, 7) = true',
287: 1:    '✅f(7, 1, 11) = true',
287: 1:    '✅f(7, 1, 8) = true',
287: 1:    '✅f(7, 1, 13) = false',
287: 1:    '✅f(43, 1, 46) = true',
287: 1:    '✅f(40, 1, 46) = false',
287: 1:    '✅f(40, 2, 47) = true',
287: 1:    '✅f(40, 2, 50) = true',
287: 1:    '✅f(40, 2, 52) = false',
287: 1:    '✅f(22, 2, 33) = false',
287: 1:    '✅f(0, 2, 10) = true',
287: 1:    '✅f(1000000, 1000, 1000100) = true',
287: 1:    '✅f(2, 1000000, 100003) = false',
287: 1:    '✅f(20, 0, 19) = true',
287: 1:    '✅f(20, 0, 21) = false',
287: 1:    '❌f(20, 4, 51) = ??? != false'
287: 1:  ],
287: 1:  'level': 10,
287: 1:  'nextQuestion': '20, 4, 51',
287: 1:  'questions': [
287: 1:    '0, 1, 5',
287: 1:    '1, 0, 1',
287: 1:    '1, 0, 2',
287: 1:    '3, 1, 7',
287: 1:    '4, 2, 14',
287: 1:    '3, 2, 14',
287: 1:    '0, 2, 5',
287: 1:    '3, 1, 6',
287: 1:    '3, 1, 9',
287: 1:    '3, 2, 9',
287: 1:    '10, 10, 0',
287: 1:    '0, 0, 1',
287: 1:    '0, 1, 1',
287: 1:    '0, 0, 2',
287: 1:    '2, 0, 2',
287: 1:    '0, 1, 2',
287: 1:    '1, 1, 2',
287: 1:    '2, 1, 3',
287: 1:    '3, 1, 4',
287: 1:    '2, 1, 1',
287: 1:    '2, 2, 6',
287: 1:    '6, 1, 11',
287: 1:    '5, 0, 1',
287: 1:    '3, 1, 8',
287: 1:    '3, 2, 10',
287: 1:    '3, 2, 8',
287: 1:    '6, 0, 11',
287: 1:    '1, 4, 11',
287: 1:    '0, 3, 10',
287: 1:    '1, 4, 12',
287: 1:    '1, 1, 7',
287: 1:    '2, 1, 7',
287: 1:    '7, 1, 11',
287: 1:    '7, 1, 8',
287: 1:    '7, 1, 13',
287: 1:    '43, 1, 46',
287: 1:    '40, 1, 46',
287: 1:    '40, 2, 47',
287: 1:    '40, 2, 50',
287: 1:    '40, 2, 52',
287: 1:    '22, 2, 33',
287: 1:    '0, 2, 10',
287: 1:    '1000000, 1000, 1000100',
287: 1:    '2, 1000000, 100003',
287: 1:    '20, 0, 19',
287: 1:    '20, 0, 21',
287: 1:    '20, 4, 51'
287: 1:  ]
287: 1:}
287: 1:Scores: 20723
287: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false', 'false']')
287: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
288: 1:BoardData {
288: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
288: 1:  'expectedAnswer': 'true',
288: 1:  'history': [
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '0, 1, 5',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '1, 0, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '1, 0, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '3, 1, 7',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '4, 2, 14',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '3, 2, 14',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '0, 2, 5',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '3, 1, 6',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '3, 1, 9',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '3, 2, 9',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '10, 10, 0',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '0, 0, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '0, 1, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '0, 0, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '2, 0, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '0, 1, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '1, 1, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '2, 1, 3',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '3, 1, 4',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '2, 1, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '2, 2, 6',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '6, 1, 11',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '5, 0, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '3, 1, 8',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '3, 2, 10',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '3, 2, 8',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '6, 0, 11',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '1, 4, 11',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '0, 3, 10',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '1, 4, 12',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '1, 1, 7',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '2, 1, 7',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '7, 1, 11',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '7, 1, 8',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '7, 1, 13',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '43, 1, 46',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '40, 1, 46',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '40, 2, 47',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '40, 2, 50',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '40, 2, 52',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '22, 2, 33',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '0, 2, 10',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '1000000, 1000, 1000100',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '2, 1000000, 100003',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '20, 0, 19',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '20, 0, 21',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '20, 4, 51',
288: 1:      'valid': true
288: 1:    }
288: 1:  ],
288: 1:  'info': [
288: 1:    '✅f(0, 1, 5) = true',
288: 1:    '✅f(1, 0, 1) = true',
288: 1:    '✅f(1, 0, 2) = false',
288: 1:    '✅f(3, 1, 7) = true',
288: 1:    '✅f(4, 2, 14) = true',
288: 1:    '✅f(3, 2, 14) = false',
288: 1:    '✅f(0, 2, 5) = true',
288: 1:    '✅f(3, 1, 6) = true',
288: 1:    '✅f(3, 1, 9) = false',
288: 1:    '✅f(3, 2, 9) = false',
288: 1:    '✅f(10, 10, 0) = true',
288: 1:    '✅f(0, 0, 1) = false',
288: 1:    '✅f(0, 1, 1) = false',
288: 1:    '✅f(0, 0, 2) = false',
288: 1:    '✅f(2, 0, 2) = true',
288: 1:    '✅f(0, 1, 2) = false',
288: 1:    '✅f(1, 1, 2) = false',
288: 1:    '✅f(2, 1, 3) = false',
288: 1:    '✅f(3, 1, 4) = false',
288: 1:    '✅f(2, 1, 1) = true',
288: 1:    '✅f(2, 2, 6) = true',
288: 1:    '✅f(6, 1, 11) = true',
288: 1:    '✅f(5, 0, 1) = true',
288: 1:    '✅f(3, 1, 8) = true',
288: 1:    '✅f(3, 2, 10) = true',
288: 1:    '✅f(3, 2, 8) = true',
288: 1:    '✅f(6, 0, 11) = false',
288: 1:    '✅f(1, 4, 11) = true',
288: 1:    '✅f(0, 3, 10) = true',
288: 1:    '✅f(1, 4, 12) = false',
288: 1:    '✅f(1, 1, 7) = false',
288: 1:    '✅f(2, 1, 7) = true',
288: 1:    '✅f(7, 1, 11) = true',
288: 1:    '✅f(7, 1, 8) = true',
288: 1:    '✅f(7, 1, 13) = false',
288: 1:    '✅f(43, 1, 46) = true',
288: 1:    '✅f(40, 1, 46) = false',
288: 1:    '✅f(40, 2, 47) = true',
288: 1:    '✅f(40, 2, 50) = true',
288: 1:    '✅f(40, 2, 52) = false',
288: 1:    '✅f(22, 2, 33) = false',
288: 1:    '✅f(0, 2, 10) = true',
288: 1:    '✅f(1000000, 1000, 1000100) = true',
288: 1:    '✅f(2, 1000000, 100003) = false',
288: 1:    '✅f(20, 0, 19) = true',
288: 1:    '✅f(20, 0, 21) = false',
288: 1:    '✅f(20, 4, 51) = false',
288: 1:    '❌f(20, 4, 39) = ??? != true'
288: 1:  ],
288: 1:  'level': 10,
288: 1:  'nextQuestion': '20, 4, 39',
288: 1:  'questions': [
288: 1:    '0, 1, 5',
288: 1:    '1, 0, 1',
288: 1:    '1, 0, 2',
288: 1:    '3, 1, 7',
288: 1:    '4, 2, 14',
288: 1:    '3, 2, 14',
288: 1:    '0, 2, 5',
288: 1:    '3, 1, 6',
288: 1:    '3, 1, 9',
288: 1:    '3, 2, 9',
288: 1:    '10, 10, 0',
288: 1:    '0, 0, 1',
288: 1:    '0, 1, 1',
288: 1:    '0, 0, 2',
288: 1:    '2, 0, 2',
288: 1:    '0, 1, 2',
288: 1:    '1, 1, 2',
288: 1:    '2, 1, 3',
288: 1:    '3, 1, 4',
288: 1:    '2, 1, 1',
288: 1:    '2, 2, 6',
288: 1:    '6, 1, 11',
288: 1:    '5, 0, 1',
288: 1:    '3, 1, 8',
288: 1:    '3, 2, 10',
288: 1:    '3, 2, 8',
288: 1:    '6, 0, 11',
288: 1:    '1, 4, 11',
288: 1:    '0, 3, 10',
288: 1:    '1, 4, 12',
288: 1:    '1, 1, 7',
288: 1:    '2, 1, 7',
288: 1:    '7, 1, 11',
288: 1:    '7, 1, 8',
288: 1:    '7, 1, 13',
288: 1:    '43, 1, 46',
288: 1:    '40, 1, 46',
288: 1:    '40, 2, 47',
288: 1:    '40, 2, 50',
288: 1:    '40, 2, 52',
288: 1:    '22, 2, 33',
288: 1:    '0, 2, 10',
288: 1:    '1000000, 1000, 1000100',
288: 1:    '2, 1000000, 100003',
288: 1:    '20, 0, 19',
288: 1:    '20, 0, 21',
288: 1:    '20, 4, 51',
288: 1:    '20, 4, 39'
288: 1:  ]
288: 1:}
288: 1:Scores: 20730
288: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false', 'false', 'true']')
288: 1:Fire Event: PassTest{complexity=35, testCount=48}
288: 1:Fire Event: NextAlgorithm{complexity=35, time=0}
------------------------------------------
289: 1:BoardData {
289: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
289: 1:  'history': [
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '0, 1, 5',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '1, 0, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '1, 0, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '3, 1, 7',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '4, 2, 14',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '3, 2, 14',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '0, 2, 5',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '3, 1, 6',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '3, 1, 9',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '3, 2, 9',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '10, 10, 0',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '0, 0, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '0, 1, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '0, 0, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '2, 0, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '0, 1, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '1, 1, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '2, 1, 3',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '3, 1, 4',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '2, 1, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '2, 2, 6',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '6, 1, 11',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '5, 0, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '3, 1, 8',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '3, 2, 10',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '3, 2, 8',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '6, 0, 11',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '1, 4, 11',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '0, 3, 10',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '1, 4, 12',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '1, 1, 7',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '2, 1, 7',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '7, 1, 11',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '7, 1, 8',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '7, 1, 13',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '43, 1, 46',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '40, 1, 46',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '40, 2, 47',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '40, 2, 50',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '40, 2, 52',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '22, 2, 33',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '0, 2, 10',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '1000000, 1000, 1000100',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '2, 1000000, 100003',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '20, 0, 19',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '20, 0, 21',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '20, 4, 51',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '20, 4, 39',
289: 1:      'valid': true
289: 1:    }
289: 1:  ],
289: 1:  'info': [
289: 1:    '✅f(0, 1, 5) = true',
289: 1:    '✅f(1, 0, 1) = true',
289: 1:    '✅f(1, 0, 2) = false',
289: 1:    '✅f(3, 1, 7) = true',
289: 1:    '✅f(4, 2, 14) = true',
289: 1:    '✅f(3, 2, 14) = false',
289: 1:    '✅f(0, 2, 5) = true',
289: 1:    '✅f(3, 1, 6) = true',
289: 1:    '✅f(3, 1, 9) = false',
289: 1:    '✅f(3, 2, 9) = false',
289: 1:    '✅f(10, 10, 0) = true',
289: 1:    '✅f(0, 0, 1) = false',
289: 1:    '✅f(0, 1, 1) = false',
289: 1:    '✅f(0, 0, 2) = false',
289: 1:    '✅f(2, 0, 2) = true',
289: 1:    '✅f(0, 1, 2) = false',
289: 1:    '✅f(1, 1, 2) = false',
289: 1:    '✅f(2, 1, 3) = false',
289: 1:    '✅f(3, 1, 4) = false',
289: 1:    '✅f(2, 1, 1) = true',
289: 1:    '✅f(2, 2, 6) = true',
289: 1:    '✅f(6, 1, 11) = true',
289: 1:    '✅f(5, 0, 1) = true',
289: 1:    '✅f(3, 1, 8) = true',
289: 1:    '✅f(3, 2, 10) = true',
289: 1:    '✅f(3, 2, 8) = true',
289: 1:    '✅f(6, 0, 11) = false',
289: 1:    '✅f(1, 4, 11) = true',
289: 1:    '✅f(0, 3, 10) = true',
289: 1:    '✅f(1, 4, 12) = false',
289: 1:    '✅f(1, 1, 7) = false',
289: 1:    '✅f(2, 1, 7) = true',
289: 1:    '✅f(7, 1, 11) = true',
289: 1:    '✅f(7, 1, 8) = true',
289: 1:    '✅f(7, 1, 13) = false',
289: 1:    '✅f(43, 1, 46) = true',
289: 1:    '✅f(40, 1, 46) = false',
289: 1:    '✅f(40, 2, 47) = true',
289: 1:    '✅f(40, 2, 50) = true',
289: 1:    '✅f(40, 2, 52) = false',
289: 1:    '✅f(22, 2, 33) = false',
289: 1:    '✅f(0, 2, 10) = true',
289: 1:    '✅f(1000000, 1000, 1000100) = true',
289: 1:    '✅f(2, 1000000, 100003) = false',
289: 1:    '✅f(20, 0, 19) = true',
289: 1:    '✅f(20, 0, 21) = false',
289: 1:    '✅f(20, 4, 51) = false',
289: 1:    '✅f(20, 4, 39) = true'
289: 1:  ],
289: 1:  'level': 10,
289: 1:  'questions': []
289: 1:}
289: 1:Scores: 25461
289: 1:Answer: message('StartNextLevel')
289: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
290: 1:BoardData {
290: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
290: 1:  'expectedAnswer': 'I',
290: 1:  'history': [],
290: 1:  'info': ['❌f(1) = ??? != I'],
290: 1:  'level': 11,
290: 1:  'nextQuestion': '1',
290: 1:  'questions': ['1']
290: 1:}
290: 1:Scores: 25461
290: 1:Answer: message('['I']')
290: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
291: 1:BoardData {
291: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
291: 1:  'expectedAnswer': 'II',
291: 1:  'history': [{
291: 1:    'answer': 'I',
291: 1:    'question': '1',
291: 1:    'valid': true
291: 1:  }],
291: 1:  'info': [
291: 1:    '✅f(1) = I',
291: 1:    '❌f(2) = ??? != II'
291: 1:  ],
291: 1:  'level': 11,
291: 1:  'nextQuestion': '2',
291: 1:  'questions': [
291: 1:    '1',
291: 1:    '2'
291: 1:  ]
291: 1:}
291: 1:Scores: 25471
291: 1:Answer: message('['I', 'II']')
291: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
292: 1:BoardData {
292: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
292: 1:  'expectedAnswer': 'III',
292: 1:  'history': [
292: 1:    {
292: 1:      'answer': 'I',
292: 1:      'question': '1',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'II',
292: 1:      'question': '2',
292: 1:      'valid': true
292: 1:    }
292: 1:  ],
292: 1:  'info': [
292: 1:    '✅f(1) = I',
292: 1:    '✅f(2) = II',
292: 1:    '❌f(3) = ??? != III'
292: 1:  ],
292: 1:  'level': 11,
292: 1:  'nextQuestion': '3',
292: 1:  'questions': [
292: 1:    '1',
292: 1:    '2',
292: 1:    '3'
292: 1:  ]
292: 1:}
292: 1:Scores: 25481
292: 1:Answer: message('['I', 'II', 'III']')
292: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
293: 1:BoardData {
293: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
293: 1:  'expectedAnswer': 'IV',
293: 1:  'history': [
293: 1:    {
293: 1:      'answer': 'I',
293: 1:      'question': '1',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'II',
293: 1:      'question': '2',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'III',
293: 1:      'question': '3',
293: 1:      'valid': true
293: 1:    }
293: 1:  ],
293: 1:  'info': [
293: 1:    '✅f(1) = I',
293: 1:    '✅f(2) = II',
293: 1:    '✅f(3) = III',
293: 1:    '❌f(4) = ??? != IV'
293: 1:  ],
293: 1:  'level': 11,
293: 1:  'nextQuestion': '4',
293: 1:  'questions': [
293: 1:    '1',
293: 1:    '2',
293: 1:    '3',
293: 1:    '4'
293: 1:  ]
293: 1:}
293: 1:Scores: 25491
293: 1:Answer: message('['I', 'II', 'III', 'IV']')
293: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
294: 1:BoardData {
294: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
294: 1:  'expectedAnswer': 'V',
294: 1:  'history': [
294: 1:    {
294: 1:      'answer': 'I',
294: 1:      'question': '1',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'II',
294: 1:      'question': '2',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'III',
294: 1:      'question': '3',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'IV',
294: 1:      'question': '4',
294: 1:      'valid': true
294: 1:    }
294: 1:  ],
294: 1:  'info': [
294: 1:    '✅f(1) = I',
294: 1:    '✅f(2) = II',
294: 1:    '✅f(3) = III',
294: 1:    '✅f(4) = IV',
294: 1:    '❌f(5) = ??? != V'
294: 1:  ],
294: 1:  'level': 11,
294: 1:  'nextQuestion': '5',
294: 1:  'questions': [
294: 1:    '1',
294: 1:    '2',
294: 1:    '3',
294: 1:    '4',
294: 1:    '5'
294: 1:  ]
294: 1:}
294: 1:Scores: 25501
294: 1:Answer: message('['I', 'II', 'III', 'IV', 'V']')
294: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
295: 1:BoardData {
295: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
295: 1:  'expectedAnswer': 'VI',
295: 1:  'history': [
295: 1:    {
295: 1:      'answer': 'I',
295: 1:      'question': '1',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'II',
295: 1:      'question': '2',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'III',
295: 1:      'question': '3',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'IV',
295: 1:      'question': '4',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'V',
295: 1:      'question': '5',
295: 1:      'valid': true
295: 1:    }
295: 1:  ],
295: 1:  'info': [
295: 1:    '✅f(1) = I',
295: 1:    '✅f(2) = II',
295: 1:    '✅f(3) = III',
295: 1:    '✅f(4) = IV',
295: 1:    '✅f(5) = V',
295: 1:    '❌f(6) = ??? != VI'
295: 1:  ],
295: 1:  'level': 11,
295: 1:  'nextQuestion': '6',
295: 1:  'questions': [
295: 1:    '1',
295: 1:    '2',
295: 1:    '3',
295: 1:    '4',
295: 1:    '5',
295: 1:    '6'
295: 1:  ]
295: 1:}
295: 1:Scores: 25511
295: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI']')
295: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
296: 1:BoardData {
296: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
296: 1:  'expectedAnswer': 'VII',
296: 1:  'history': [
296: 1:    {
296: 1:      'answer': 'I',
296: 1:      'question': '1',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'II',
296: 1:      'question': '2',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'III',
296: 1:      'question': '3',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'IV',
296: 1:      'question': '4',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'V',
296: 1:      'question': '5',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'VI',
296: 1:      'question': '6',
296: 1:      'valid': true
296: 1:    }
296: 1:  ],
296: 1:  'info': [
296: 1:    '✅f(1) = I',
296: 1:    '✅f(2) = II',
296: 1:    '✅f(3) = III',
296: 1:    '✅f(4) = IV',
296: 1:    '✅f(5) = V',
296: 1:    '✅f(6) = VI',
296: 1:    '❌f(7) = ??? != VII'
296: 1:  ],
296: 1:  'level': 11,
296: 1:  'nextQuestion': '7',
296: 1:  'questions': [
296: 1:    '1',
296: 1:    '2',
296: 1:    '3',
296: 1:    '4',
296: 1:    '5',
296: 1:    '6',
296: 1:    '7'
296: 1:  ]
296: 1:}
296: 1:Scores: 25521
296: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII']')
296: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
297: 1:BoardData {
297: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
297: 1:  'expectedAnswer': 'VIII',
297: 1:  'history': [
297: 1:    {
297: 1:      'answer': 'I',
297: 1:      'question': '1',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'II',
297: 1:      'question': '2',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'III',
297: 1:      'question': '3',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'IV',
297: 1:      'question': '4',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'V',
297: 1:      'question': '5',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'VI',
297: 1:      'question': '6',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'VII',
297: 1:      'question': '7',
297: 1:      'valid': true
297: 1:    }
297: 1:  ],
297: 1:  'info': [
297: 1:    '✅f(1) = I',
297: 1:    '✅f(2) = II',
297: 1:    '✅f(3) = III',
297: 1:    '✅f(4) = IV',
297: 1:    '✅f(5) = V',
297: 1:    '✅f(6) = VI',
297: 1:    '✅f(7) = VII',
297: 1:    '❌f(8) = ??? != VIII'
297: 1:  ],
297: 1:  'level': 11,
297: 1:  'nextQuestion': '8',
297: 1:  'questions': [
297: 1:    '1',
297: 1:    '2',
297: 1:    '3',
297: 1:    '4',
297: 1:    '5',
297: 1:    '6',
297: 1:    '7',
297: 1:    '8'
297: 1:  ]
297: 1:}
297: 1:Scores: 25531
297: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII']')
297: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
298: 1:BoardData {
298: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
298: 1:  'expectedAnswer': 'IX',
298: 1:  'history': [
298: 1:    {
298: 1:      'answer': 'I',
298: 1:      'question': '1',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'II',
298: 1:      'question': '2',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'III',
298: 1:      'question': '3',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'IV',
298: 1:      'question': '4',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'V',
298: 1:      'question': '5',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'VI',
298: 1:      'question': '6',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'VII',
298: 1:      'question': '7',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'VIII',
298: 1:      'question': '8',
298: 1:      'valid': true
298: 1:    }
298: 1:  ],
298: 1:  'info': [
298: 1:    '✅f(1) = I',
298: 1:    '✅f(2) = II',
298: 1:    '✅f(3) = III',
298: 1:    '✅f(4) = IV',
298: 1:    '✅f(5) = V',
298: 1:    '✅f(6) = VI',
298: 1:    '✅f(7) = VII',
298: 1:    '✅f(8) = VIII',
298: 1:    '❌f(9) = ??? != IX'
298: 1:  ],
298: 1:  'level': 11,
298: 1:  'nextQuestion': '9',
298: 1:  'questions': [
298: 1:    '1',
298: 1:    '2',
298: 1:    '3',
298: 1:    '4',
298: 1:    '5',
298: 1:    '6',
298: 1:    '7',
298: 1:    '8',
298: 1:    '9'
298: 1:  ]
298: 1:}
298: 1:Scores: 25541
298: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX']')
298: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
299: 1:BoardData {
299: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
299: 1:  'expectedAnswer': 'X',
299: 1:  'history': [
299: 1:    {
299: 1:      'answer': 'I',
299: 1:      'question': '1',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'II',
299: 1:      'question': '2',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'III',
299: 1:      'question': '3',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'IV',
299: 1:      'question': '4',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'V',
299: 1:      'question': '5',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'VI',
299: 1:      'question': '6',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'VII',
299: 1:      'question': '7',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'VIII',
299: 1:      'question': '8',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'IX',
299: 1:      'question': '9',
299: 1:      'valid': true
299: 1:    }
299: 1:  ],
299: 1:  'info': [
299: 1:    '✅f(1) = I',
299: 1:    '✅f(2) = II',
299: 1:    '✅f(3) = III',
299: 1:    '✅f(4) = IV',
299: 1:    '✅f(5) = V',
299: 1:    '✅f(6) = VI',
299: 1:    '✅f(7) = VII',
299: 1:    '✅f(8) = VIII',
299: 1:    '✅f(9) = IX',
299: 1:    '❌f(10) = ??? != X'
299: 1:  ],
299: 1:  'level': 11,
299: 1:  'nextQuestion': '10',
299: 1:  'questions': [
299: 1:    '1',
299: 1:    '2',
299: 1:    '3',
299: 1:    '4',
299: 1:    '5',
299: 1:    '6',
299: 1:    '7',
299: 1:    '8',
299: 1:    '9',
299: 1:    '10'
299: 1:  ]
299: 1:}
299: 1:Scores: 25551
299: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X']')
299: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
300: 1:BoardData {
300: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
300: 1:  'expectedAnswer': 'XI',
300: 1:  'history': [
300: 1:    {
300: 1:      'answer': 'I',
300: 1:      'question': '1',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'II',
300: 1:      'question': '2',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'III',
300: 1:      'question': '3',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'IV',
300: 1:      'question': '4',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'V',
300: 1:      'question': '5',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'VI',
300: 1:      'question': '6',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'VII',
300: 1:      'question': '7',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'VIII',
300: 1:      'question': '8',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'IX',
300: 1:      'question': '9',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'X',
300: 1:      'question': '10',
300: 1:      'valid': true
300: 1:    }
300: 1:  ],
300: 1:  'info': [
300: 1:    '✅f(1) = I',
300: 1:    '✅f(2) = II',
300: 1:    '✅f(3) = III',
300: 1:    '✅f(4) = IV',
300: 1:    '✅f(5) = V',
300: 1:    '✅f(6) = VI',
300: 1:    '✅f(7) = VII',
300: 1:    '✅f(8) = VIII',
300: 1:    '✅f(9) = IX',
300: 1:    '✅f(10) = X',
300: 1:    '❌f(11) = ??? != XI'
300: 1:  ],
300: 1:  'level': 11,
300: 1:  'nextQuestion': '11',
300: 1:  'questions': [
300: 1:    '1',
300: 1:    '2',
300: 1:    '3',
300: 1:    '4',
300: 1:    '5',
300: 1:    '6',
300: 1:    '7',
300: 1:    '8',
300: 1:    '9',
300: 1:    '10',
300: 1:    '11'
300: 1:  ]
300: 1:}
300: 1:Scores: 25561
300: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI']')
300: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
301: 1:BoardData {
301: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
301: 1:  'expectedAnswer': 'XII',
301: 1:  'history': [
301: 1:    {
301: 1:      'answer': 'I',
301: 1:      'question': '1',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'II',
301: 1:      'question': '2',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'III',
301: 1:      'question': '3',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'IV',
301: 1:      'question': '4',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'V',
301: 1:      'question': '5',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'VI',
301: 1:      'question': '6',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'VII',
301: 1:      'question': '7',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'VIII',
301: 1:      'question': '8',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'IX',
301: 1:      'question': '9',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'X',
301: 1:      'question': '10',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'XI',
301: 1:      'question': '11',
301: 1:      'valid': true
301: 1:    }
301: 1:  ],
301: 1:  'info': [
301: 1:    '✅f(1) = I',
301: 1:    '✅f(2) = II',
301: 1:    '✅f(3) = III',
301: 1:    '✅f(4) = IV',
301: 1:    '✅f(5) = V',
301: 1:    '✅f(6) = VI',
301: 1:    '✅f(7) = VII',
301: 1:    '✅f(8) = VIII',
301: 1:    '✅f(9) = IX',
301: 1:    '✅f(10) = X',
301: 1:    '✅f(11) = XI',
301: 1:    '❌f(12) = ??? != XII'
301: 1:  ],
301: 1:  'level': 11,
301: 1:  'nextQuestion': '12',
301: 1:  'questions': [
301: 1:    '1',
301: 1:    '2',
301: 1:    '3',
301: 1:    '4',
301: 1:    '5',
301: 1:    '6',
301: 1:    '7',
301: 1:    '8',
301: 1:    '9',
301: 1:    '10',
301: 1:    '11',
301: 1:    '12'
301: 1:  ]
301: 1:}
301: 1:Scores: 25571
301: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII']')
301: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
302: 1:BoardData {
302: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
302: 1:  'expectedAnswer': 'XIII',
302: 1:  'history': [
302: 1:    {
302: 1:      'answer': 'I',
302: 1:      'question': '1',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'II',
302: 1:      'question': '2',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'III',
302: 1:      'question': '3',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'IV',
302: 1:      'question': '4',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'V',
302: 1:      'question': '5',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'VI',
302: 1:      'question': '6',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'VII',
302: 1:      'question': '7',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'VIII',
302: 1:      'question': '8',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'IX',
302: 1:      'question': '9',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'X',
302: 1:      'question': '10',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'XI',
302: 1:      'question': '11',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'XII',
302: 1:      'question': '12',
302: 1:      'valid': true
302: 1:    }
302: 1:  ],
302: 1:  'info': [
302: 1:    '✅f(1) = I',
302: 1:    '✅f(2) = II',
302: 1:    '✅f(3) = III',
302: 1:    '✅f(4) = IV',
302: 1:    '✅f(5) = V',
302: 1:    '✅f(6) = VI',
302: 1:    '✅f(7) = VII',
302: 1:    '✅f(8) = VIII',
302: 1:    '✅f(9) = IX',
302: 1:    '✅f(10) = X',
302: 1:    '✅f(11) = XI',
302: 1:    '✅f(12) = XII',
302: 1:    '❌f(13) = ??? != XIII'
302: 1:  ],
302: 1:  'level': 11,
302: 1:  'nextQuestion': '13',
302: 1:  'questions': [
302: 1:    '1',
302: 1:    '2',
302: 1:    '3',
302: 1:    '4',
302: 1:    '5',
302: 1:    '6',
302: 1:    '7',
302: 1:    '8',
302: 1:    '9',
302: 1:    '10',
302: 1:    '11',
302: 1:    '12',
302: 1:    '13'
302: 1:  ]
302: 1:}
302: 1:Scores: 25581
302: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII']')
302: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
303: 1:BoardData {
303: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
303: 1:  'expectedAnswer': 'XIV',
303: 1:  'history': [
303: 1:    {
303: 1:      'answer': 'I',
303: 1:      'question': '1',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'II',
303: 1:      'question': '2',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'III',
303: 1:      'question': '3',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'IV',
303: 1:      'question': '4',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'V',
303: 1:      'question': '5',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'VI',
303: 1:      'question': '6',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'VII',
303: 1:      'question': '7',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'VIII',
303: 1:      'question': '8',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'IX',
303: 1:      'question': '9',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'X',
303: 1:      'question': '10',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'XI',
303: 1:      'question': '11',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'XII',
303: 1:      'question': '12',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'XIII',
303: 1:      'question': '13',
303: 1:      'valid': true
303: 1:    }
303: 1:  ],
303: 1:  'info': [
303: 1:    '✅f(1) = I',
303: 1:    '✅f(2) = II',
303: 1:    '✅f(3) = III',
303: 1:    '✅f(4) = IV',
303: 1:    '✅f(5) = V',
303: 1:    '✅f(6) = VI',
303: 1:    '✅f(7) = VII',
303: 1:    '✅f(8) = VIII',
303: 1:    '✅f(9) = IX',
303: 1:    '✅f(10) = X',
303: 1:    '✅f(11) = XI',
303: 1:    '✅f(12) = XII',
303: 1:    '✅f(13) = XIII',
303: 1:    '❌f(14) = ??? != XIV'
303: 1:  ],
303: 1:  'level': 11,
303: 1:  'nextQuestion': '14',
303: 1:  'questions': [
303: 1:    '1',
303: 1:    '2',
303: 1:    '3',
303: 1:    '4',
303: 1:    '5',
303: 1:    '6',
303: 1:    '7',
303: 1:    '8',
303: 1:    '9',
303: 1:    '10',
303: 1:    '11',
303: 1:    '12',
303: 1:    '13',
303: 1:    '14'
303: 1:  ]
303: 1:}
303: 1:Scores: 25591
303: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV']')
303: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
304: 1:BoardData {
304: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
304: 1:  'expectedAnswer': 'XV',
304: 1:  'history': [
304: 1:    {
304: 1:      'answer': 'I',
304: 1:      'question': '1',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'II',
304: 1:      'question': '2',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'III',
304: 1:      'question': '3',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'IV',
304: 1:      'question': '4',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'V',
304: 1:      'question': '5',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'VI',
304: 1:      'question': '6',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'VII',
304: 1:      'question': '7',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'VIII',
304: 1:      'question': '8',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'IX',
304: 1:      'question': '9',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'X',
304: 1:      'question': '10',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'XI',
304: 1:      'question': '11',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'XII',
304: 1:      'question': '12',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'XIII',
304: 1:      'question': '13',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'XIV',
304: 1:      'question': '14',
304: 1:      'valid': true
304: 1:    }
304: 1:  ],
304: 1:  'info': [
304: 1:    '✅f(1) = I',
304: 1:    '✅f(2) = II',
304: 1:    '✅f(3) = III',
304: 1:    '✅f(4) = IV',
304: 1:    '✅f(5) = V',
304: 1:    '✅f(6) = VI',
304: 1:    '✅f(7) = VII',
304: 1:    '✅f(8) = VIII',
304: 1:    '✅f(9) = IX',
304: 1:    '✅f(10) = X',
304: 1:    '✅f(11) = XI',
304: 1:    '✅f(12) = XII',
304: 1:    '✅f(13) = XIII',
304: 1:    '✅f(14) = XIV',
304: 1:    '❌f(15) = ??? != XV'
304: 1:  ],
304: 1:  'level': 11,
304: 1:  'nextQuestion': '15',
304: 1:  'questions': [
304: 1:    '1',
304: 1:    '2',
304: 1:    '3',
304: 1:    '4',
304: 1:    '5',
304: 1:    '6',
304: 1:    '7',
304: 1:    '8',
304: 1:    '9',
304: 1:    '10',
304: 1:    '11',
304: 1:    '12',
304: 1:    '13',
304: 1:    '14',
304: 1:    '15'
304: 1:  ]
304: 1:}
304: 1:Scores: 25601
304: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV']')
304: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
305: 1:BoardData {
305: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
305: 1:  'expectedAnswer': 'XVI',
305: 1:  'history': [
305: 1:    {
305: 1:      'answer': 'I',
305: 1:      'question': '1',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'II',
305: 1:      'question': '2',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'III',
305: 1:      'question': '3',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'IV',
305: 1:      'question': '4',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'V',
305: 1:      'question': '5',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'VI',
305: 1:      'question': '6',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'VII',
305: 1:      'question': '7',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'VIII',
305: 1:      'question': '8',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'IX',
305: 1:      'question': '9',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'X',
305: 1:      'question': '10',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'XI',
305: 1:      'question': '11',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'XII',
305: 1:      'question': '12',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'XIII',
305: 1:      'question': '13',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'XIV',
305: 1:      'question': '14',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'XV',
305: 1:      'question': '15',
305: 1:      'valid': true
305: 1:    }
305: 1:  ],
305: 1:  'info': [
305: 1:    '✅f(1) = I',
305: 1:    '✅f(2) = II',
305: 1:    '✅f(3) = III',
305: 1:    '✅f(4) = IV',
305: 1:    '✅f(5) = V',
305: 1:    '✅f(6) = VI',
305: 1:    '✅f(7) = VII',
305: 1:    '✅f(8) = VIII',
305: 1:    '✅f(9) = IX',
305: 1:    '✅f(10) = X',
305: 1:    '✅f(11) = XI',
305: 1:    '✅f(12) = XII',
305: 1:    '✅f(13) = XIII',
305: 1:    '✅f(14) = XIV',
305: 1:    '✅f(15) = XV',
305: 1:    '❌f(16) = ??? != XVI'
305: 1:  ],
305: 1:  'level': 11,
305: 1:  'nextQuestion': '16',
305: 1:  'questions': [
305: 1:    '1',
305: 1:    '2',
305: 1:    '3',
305: 1:    '4',
305: 1:    '5',
305: 1:    '6',
305: 1:    '7',
305: 1:    '8',
305: 1:    '9',
305: 1:    '10',
305: 1:    '11',
305: 1:    '12',
305: 1:    '13',
305: 1:    '14',
305: 1:    '15',
305: 1:    '16'
305: 1:  ]
305: 1:}
305: 1:Scores: 25611
305: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI']')
305: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
306: 1:BoardData {
306: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
306: 1:  'expectedAnswer': 'XVII',
306: 1:  'history': [
306: 1:    {
306: 1:      'answer': 'I',
306: 1:      'question': '1',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'II',
306: 1:      'question': '2',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'III',
306: 1:      'question': '3',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'IV',
306: 1:      'question': '4',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'V',
306: 1:      'question': '5',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'VI',
306: 1:      'question': '6',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'VII',
306: 1:      'question': '7',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'VIII',
306: 1:      'question': '8',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'IX',
306: 1:      'question': '9',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'X',
306: 1:      'question': '10',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'XI',
306: 1:      'question': '11',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'XII',
306: 1:      'question': '12',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'XIII',
306: 1:      'question': '13',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'XIV',
306: 1:      'question': '14',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'XV',
306: 1:      'question': '15',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'XVI',
306: 1:      'question': '16',
306: 1:      'valid': true
306: 1:    }
306: 1:  ],
306: 1:  'info': [
306: 1:    '✅f(1) = I',
306: 1:    '✅f(2) = II',
306: 1:    '✅f(3) = III',
306: 1:    '✅f(4) = IV',
306: 1:    '✅f(5) = V',
306: 1:    '✅f(6) = VI',
306: 1:    '✅f(7) = VII',
306: 1:    '✅f(8) = VIII',
306: 1:    '✅f(9) = IX',
306: 1:    '✅f(10) = X',
306: 1:    '✅f(11) = XI',
306: 1:    '✅f(12) = XII',
306: 1:    '✅f(13) = XIII',
306: 1:    '✅f(14) = XIV',
306: 1:    '✅f(15) = XV',
306: 1:    '✅f(16) = XVI',
306: 1:    '❌f(17) = ??? != XVII'
306: 1:  ],
306: 1:  'level': 11,
306: 1:  'nextQuestion': '17',
306: 1:  'questions': [
306: 1:    '1',
306: 1:    '2',
306: 1:    '3',
306: 1:    '4',
306: 1:    '5',
306: 1:    '6',
306: 1:    '7',
306: 1:    '8',
306: 1:    '9',
306: 1:    '10',
306: 1:    '11',
306: 1:    '12',
306: 1:    '13',
306: 1:    '14',
306: 1:    '15',
306: 1:    '16',
306: 1:    '17'
306: 1:  ]
306: 1:}
306: 1:Scores: 25621
306: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII']')
306: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
307: 1:BoardData {
307: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
307: 1:  'expectedAnswer': 'XVIII',
307: 1:  'history': [
307: 1:    {
307: 1:      'answer': 'I',
307: 1:      'question': '1',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'II',
307: 1:      'question': '2',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'III',
307: 1:      'question': '3',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'IV',
307: 1:      'question': '4',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'V',
307: 1:      'question': '5',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'VI',
307: 1:      'question': '6',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'VII',
307: 1:      'question': '7',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'VIII',
307: 1:      'question': '8',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'IX',
307: 1:      'question': '9',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'X',
307: 1:      'question': '10',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'XI',
307: 1:      'question': '11',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'XII',
307: 1:      'question': '12',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'XIII',
307: 1:      'question': '13',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'XIV',
307: 1:      'question': '14',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'XV',
307: 1:      'question': '15',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'XVI',
307: 1:      'question': '16',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'XVII',
307: 1:      'question': '17',
307: 1:      'valid': true
307: 1:    }
307: 1:  ],
307: 1:  'info': [
307: 1:    '✅f(1) = I',
307: 1:    '✅f(2) = II',
307: 1:    '✅f(3) = III',
307: 1:    '✅f(4) = IV',
307: 1:    '✅f(5) = V',
307: 1:    '✅f(6) = VI',
307: 1:    '✅f(7) = VII',
307: 1:    '✅f(8) = VIII',
307: 1:    '✅f(9) = IX',
307: 1:    '✅f(10) = X',
307: 1:    '✅f(11) = XI',
307: 1:    '✅f(12) = XII',
307: 1:    '✅f(13) = XIII',
307: 1:    '✅f(14) = XIV',
307: 1:    '✅f(15) = XV',
307: 1:    '✅f(16) = XVI',
307: 1:    '✅f(17) = XVII',
307: 1:    '❌f(18) = ??? != XVIII'
307: 1:  ],
307: 1:  'level': 11,
307: 1:  'nextQuestion': '18',
307: 1:  'questions': [
307: 1:    '1',
307: 1:    '2',
307: 1:    '3',
307: 1:    '4',
307: 1:    '5',
307: 1:    '6',
307: 1:    '7',
307: 1:    '8',
307: 1:    '9',
307: 1:    '10',
307: 1:    '11',
307: 1:    '12',
307: 1:    '13',
307: 1:    '14',
307: 1:    '15',
307: 1:    '16',
307: 1:    '17',
307: 1:    '18'
307: 1:  ]
307: 1:}
307: 1:Scores: 25631
307: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII']')
307: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
308: 1:BoardData {
308: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
308: 1:  'expectedAnswer': 'XIX',
308: 1:  'history': [
308: 1:    {
308: 1:      'answer': 'I',
308: 1:      'question': '1',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'II',
308: 1:      'question': '2',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'III',
308: 1:      'question': '3',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'IV',
308: 1:      'question': '4',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'V',
308: 1:      'question': '5',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'VI',
308: 1:      'question': '6',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'VII',
308: 1:      'question': '7',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'VIII',
308: 1:      'question': '8',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'IX',
308: 1:      'question': '9',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'X',
308: 1:      'question': '10',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'XI',
308: 1:      'question': '11',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'XII',
308: 1:      'question': '12',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'XIII',
308: 1:      'question': '13',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'XIV',
308: 1:      'question': '14',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'XV',
308: 1:      'question': '15',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'XVI',
308: 1:      'question': '16',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'XVII',
308: 1:      'question': '17',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'XVIII',
308: 1:      'question': '18',
308: 1:      'valid': true
308: 1:    }
308: 1:  ],
308: 1:  'info': [
308: 1:    '✅f(1) = I',
308: 1:    '✅f(2) = II',
308: 1:    '✅f(3) = III',
308: 1:    '✅f(4) = IV',
308: 1:    '✅f(5) = V',
308: 1:    '✅f(6) = VI',
308: 1:    '✅f(7) = VII',
308: 1:    '✅f(8) = VIII',
308: 1:    '✅f(9) = IX',
308: 1:    '✅f(10) = X',
308: 1:    '✅f(11) = XI',
308: 1:    '✅f(12) = XII',
308: 1:    '✅f(13) = XIII',
308: 1:    '✅f(14) = XIV',
308: 1:    '✅f(15) = XV',
308: 1:    '✅f(16) = XVI',
308: 1:    '✅f(17) = XVII',
308: 1:    '✅f(18) = XVIII',
308: 1:    '❌f(19) = ??? != XIX'
308: 1:  ],
308: 1:  'level': 11,
308: 1:  'nextQuestion': '19',
308: 1:  'questions': [
308: 1:    '1',
308: 1:    '2',
308: 1:    '3',
308: 1:    '4',
308: 1:    '5',
308: 1:    '6',
308: 1:    '7',
308: 1:    '8',
308: 1:    '9',
308: 1:    '10',
308: 1:    '11',
308: 1:    '12',
308: 1:    '13',
308: 1:    '14',
308: 1:    '15',
308: 1:    '16',
308: 1:    '17',
308: 1:    '18',
308: 1:    '19'
308: 1:  ]
308: 1:}
308: 1:Scores: 25641
308: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX']')
308: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
309: 1:BoardData {
309: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
309: 1:  'expectedAnswer': 'XX',
309: 1:  'history': [
309: 1:    {
309: 1:      'answer': 'I',
309: 1:      'question': '1',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'II',
309: 1:      'question': '2',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'III',
309: 1:      'question': '3',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'IV',
309: 1:      'question': '4',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'V',
309: 1:      'question': '5',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'VI',
309: 1:      'question': '6',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'VII',
309: 1:      'question': '7',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'VIII',
309: 1:      'question': '8',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'IX',
309: 1:      'question': '9',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'X',
309: 1:      'question': '10',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XI',
309: 1:      'question': '11',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XII',
309: 1:      'question': '12',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XIII',
309: 1:      'question': '13',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XIV',
309: 1:      'question': '14',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XV',
309: 1:      'question': '15',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XVI',
309: 1:      'question': '16',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XVII',
309: 1:      'question': '17',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XVIII',
309: 1:      'question': '18',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'XIX',
309: 1:      'question': '19',
309: 1:      'valid': true
309: 1:    }
309: 1:  ],
309: 1:  'info': [
309: 1:    '✅f(1) = I',
309: 1:    '✅f(2) = II',
309: 1:    '✅f(3) = III',
309: 1:    '✅f(4) = IV',
309: 1:    '✅f(5) = V',
309: 1:    '✅f(6) = VI',
309: 1:    '✅f(7) = VII',
309: 1:    '✅f(8) = VIII',
309: 1:    '✅f(9) = IX',
309: 1:    '✅f(10) = X',
309: 1:    '✅f(11) = XI',
309: 1:    '✅f(12) = XII',
309: 1:    '✅f(13) = XIII',
309: 1:    '✅f(14) = XIV',
309: 1:    '✅f(15) = XV',
309: 1:    '✅f(16) = XVI',
309: 1:    '✅f(17) = XVII',
309: 1:    '✅f(18) = XVIII',
309: 1:    '✅f(19) = XIX',
309: 1:    '❌f(20) = ??? != XX'
309: 1:  ],
309: 1:  'level': 11,
309: 1:  'nextQuestion': '20',
309: 1:  'questions': [
309: 1:    '1',
309: 1:    '2',
309: 1:    '3',
309: 1:    '4',
309: 1:    '5',
309: 1:    '6',
309: 1:    '7',
309: 1:    '8',
309: 1:    '9',
309: 1:    '10',
309: 1:    '11',
309: 1:    '12',
309: 1:    '13',
309: 1:    '14',
309: 1:    '15',
309: 1:    '16',
309: 1:    '17',
309: 1:    '18',
309: 1:    '19',
309: 1:    '20'
309: 1:  ]
309: 1:}
309: 1:Scores: 25651
309: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX']')
309: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
310: 1:BoardData {
310: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
310: 1:  'expectedAnswer': 'XXX',
310: 1:  'history': [
310: 1:    {
310: 1:      'answer': 'I',
310: 1:      'question': '1',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'II',
310: 1:      'question': '2',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'III',
310: 1:      'question': '3',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'IV',
310: 1:      'question': '4',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'V',
310: 1:      'question': '5',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'VI',
310: 1:      'question': '6',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'VII',
310: 1:      'question': '7',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'VIII',
310: 1:      'question': '8',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'IX',
310: 1:      'question': '9',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'X',
310: 1:      'question': '10',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XI',
310: 1:      'question': '11',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XII',
310: 1:      'question': '12',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XIII',
310: 1:      'question': '13',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XIV',
310: 1:      'question': '14',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XV',
310: 1:      'question': '15',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XVI',
310: 1:      'question': '16',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XVII',
310: 1:      'question': '17',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XVIII',
310: 1:      'question': '18',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XIX',
310: 1:      'question': '19',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'XX',
310: 1:      'question': '20',
310: 1:      'valid': true
310: 1:    }
310: 1:  ],
310: 1:  'info': [
310: 1:    '✅f(1) = I',
310: 1:    '✅f(2) = II',
310: 1:    '✅f(3) = III',
310: 1:    '✅f(4) = IV',
310: 1:    '✅f(5) = V',
310: 1:    '✅f(6) = VI',
310: 1:    '✅f(7) = VII',
310: 1:    '✅f(8) = VIII',
310: 1:    '✅f(9) = IX',
310: 1:    '✅f(10) = X',
310: 1:    '✅f(11) = XI',
310: 1:    '✅f(12) = XII',
310: 1:    '✅f(13) = XIII',
310: 1:    '✅f(14) = XIV',
310: 1:    '✅f(15) = XV',
310: 1:    '✅f(16) = XVI',
310: 1:    '✅f(17) = XVII',
310: 1:    '✅f(18) = XVIII',
310: 1:    '✅f(19) = XIX',
310: 1:    '✅f(20) = XX',
310: 1:    '❌f(30) = ??? != XXX'
310: 1:  ],
310: 1:  'level': 11,
310: 1:  'nextQuestion': '30',
310: 1:  'questions': [
310: 1:    '1',
310: 1:    '2',
310: 1:    '3',
310: 1:    '4',
310: 1:    '5',
310: 1:    '6',
310: 1:    '7',
310: 1:    '8',
310: 1:    '9',
310: 1:    '10',
310: 1:    '11',
310: 1:    '12',
310: 1:    '13',
310: 1:    '14',
310: 1:    '15',
310: 1:    '16',
310: 1:    '17',
310: 1:    '18',
310: 1:    '19',
310: 1:    '20',
310: 1:    '30'
310: 1:  ]
310: 1:}
310: 1:Scores: 25661
310: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX']')
310: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
311: 1:BoardData {
311: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
311: 1:  'expectedAnswer': 'XXXV',
311: 1:  'history': [
311: 1:    {
311: 1:      'answer': 'I',
311: 1:      'question': '1',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'II',
311: 1:      'question': '2',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'III',
311: 1:      'question': '3',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'IV',
311: 1:      'question': '4',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'V',
311: 1:      'question': '5',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'VI',
311: 1:      'question': '6',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'VII',
311: 1:      'question': '7',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'VIII',
311: 1:      'question': '8',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'IX',
311: 1:      'question': '9',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'X',
311: 1:      'question': '10',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XI',
311: 1:      'question': '11',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XII',
311: 1:      'question': '12',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XIII',
311: 1:      'question': '13',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XIV',
311: 1:      'question': '14',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XV',
311: 1:      'question': '15',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XVI',
311: 1:      'question': '16',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XVII',
311: 1:      'question': '17',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XVIII',
311: 1:      'question': '18',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XIX',
311: 1:      'question': '19',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XX',
311: 1:      'question': '20',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'XXX',
311: 1:      'question': '30',
311: 1:      'valid': true
311: 1:    }
311: 1:  ],
311: 1:  'info': [
311: 1:    '✅f(1) = I',
311: 1:    '✅f(2) = II',
311: 1:    '✅f(3) = III',
311: 1:    '✅f(4) = IV',
311: 1:    '✅f(5) = V',
311: 1:    '✅f(6) = VI',
311: 1:    '✅f(7) = VII',
311: 1:    '✅f(8) = VIII',
311: 1:    '✅f(9) = IX',
311: 1:    '✅f(10) = X',
311: 1:    '✅f(11) = XI',
311: 1:    '✅f(12) = XII',
311: 1:    '✅f(13) = XIII',
311: 1:    '✅f(14) = XIV',
311: 1:    '✅f(15) = XV',
311: 1:    '✅f(16) = XVI',
311: 1:    '✅f(17) = XVII',
311: 1:    '✅f(18) = XVIII',
311: 1:    '✅f(19) = XIX',
311: 1:    '✅f(20) = XX',
311: 1:    '✅f(30) = XXX',
311: 1:    '❌f(35) = ??? != XXXV'
311: 1:  ],
311: 1:  'level': 11,
311: 1:  'nextQuestion': '35',
311: 1:  'questions': [
311: 1:    '1',
311: 1:    '2',
311: 1:    '3',
311: 1:    '4',
311: 1:    '5',
311: 1:    '6',
311: 1:    '7',
311: 1:    '8',
311: 1:    '9',
311: 1:    '10',
311: 1:    '11',
311: 1:    '12',
311: 1:    '13',
311: 1:    '14',
311: 1:    '15',
311: 1:    '16',
311: 1:    '17',
311: 1:    '18',
311: 1:    '19',
311: 1:    '20',
311: 1:    '30',
311: 1:    '35'
311: 1:  ]
311: 1:}
311: 1:Scores: 25671
311: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV']')
311: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
312: 1:BoardData {
312: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
312: 1:  'expectedAnswer': 'XXXVI',
312: 1:  'history': [
312: 1:    {
312: 1:      'answer': 'I',
312: 1:      'question': '1',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'II',
312: 1:      'question': '2',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'III',
312: 1:      'question': '3',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'IV',
312: 1:      'question': '4',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'V',
312: 1:      'question': '5',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'VI',
312: 1:      'question': '6',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'VII',
312: 1:      'question': '7',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'VIII',
312: 1:      'question': '8',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'IX',
312: 1:      'question': '9',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'X',
312: 1:      'question': '10',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XI',
312: 1:      'question': '11',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XII',
312: 1:      'question': '12',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XIII',
312: 1:      'question': '13',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XIV',
312: 1:      'question': '14',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XV',
312: 1:      'question': '15',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XVI',
312: 1:      'question': '16',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XVII',
312: 1:      'question': '17',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XVIII',
312: 1:      'question': '18',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XIX',
312: 1:      'question': '19',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XX',
312: 1:      'question': '20',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XXX',
312: 1:      'question': '30',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'XXXV',
312: 1:      'question': '35',
312: 1:      'valid': true
312: 1:    }
312: 1:  ],
312: 1:  'info': [
312: 1:    '✅f(1) = I',
312: 1:    '✅f(2) = II',
312: 1:    '✅f(3) = III',
312: 1:    '✅f(4) = IV',
312: 1:    '✅f(5) = V',
312: 1:    '✅f(6) = VI',
312: 1:    '✅f(7) = VII',
312: 1:    '✅f(8) = VIII',
312: 1:    '✅f(9) = IX',
312: 1:    '✅f(10) = X',
312: 1:    '✅f(11) = XI',
312: 1:    '✅f(12) = XII',
312: 1:    '✅f(13) = XIII',
312: 1:    '✅f(14) = XIV',
312: 1:    '✅f(15) = XV',
312: 1:    '✅f(16) = XVI',
312: 1:    '✅f(17) = XVII',
312: 1:    '✅f(18) = XVIII',
312: 1:    '✅f(19) = XIX',
312: 1:    '✅f(20) = XX',
312: 1:    '✅f(30) = XXX',
312: 1:    '✅f(35) = XXXV',
312: 1:    '❌f(36) = ??? != XXXVI'
312: 1:  ],
312: 1:  'level': 11,
312: 1:  'nextQuestion': '36',
312: 1:  'questions': [
312: 1:    '1',
312: 1:    '2',
312: 1:    '3',
312: 1:    '4',
312: 1:    '5',
312: 1:    '6',
312: 1:    '7',
312: 1:    '8',
312: 1:    '9',
312: 1:    '10',
312: 1:    '11',
312: 1:    '12',
312: 1:    '13',
312: 1:    '14',
312: 1:    '15',
312: 1:    '16',
312: 1:    '17',
312: 1:    '18',
312: 1:    '19',
312: 1:    '20',
312: 1:    '30',
312: 1:    '35',
312: 1:    '36'
312: 1:  ]
312: 1:}
312: 1:Scores: 25681
312: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI']')
312: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
313: 1:BoardData {
313: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
313: 1:  'expectedAnswer': 'XLVI',
313: 1:  'history': [
313: 1:    {
313: 1:      'answer': 'I',
313: 1:      'question': '1',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'II',
313: 1:      'question': '2',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'III',
313: 1:      'question': '3',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'IV',
313: 1:      'question': '4',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'V',
313: 1:      'question': '5',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'VI',
313: 1:      'question': '6',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'VII',
313: 1:      'question': '7',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'VIII',
313: 1:      'question': '8',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'IX',
313: 1:      'question': '9',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'X',
313: 1:      'question': '10',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XI',
313: 1:      'question': '11',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XII',
313: 1:      'question': '12',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XIII',
313: 1:      'question': '13',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XIV',
313: 1:      'question': '14',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XV',
313: 1:      'question': '15',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XVI',
313: 1:      'question': '16',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XVII',
313: 1:      'question': '17',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XVIII',
313: 1:      'question': '18',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XIX',
313: 1:      'question': '19',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XX',
313: 1:      'question': '20',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XXX',
313: 1:      'question': '30',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XXXV',
313: 1:      'question': '35',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'XXXVI',
313: 1:      'question': '36',
313: 1:      'valid': true
313: 1:    }
313: 1:  ],
313: 1:  'info': [
313: 1:    '✅f(1) = I',
313: 1:    '✅f(2) = II',
313: 1:    '✅f(3) = III',
313: 1:    '✅f(4) = IV',
313: 1:    '✅f(5) = V',
313: 1:    '✅f(6) = VI',
313: 1:    '✅f(7) = VII',
313: 1:    '✅f(8) = VIII',
313: 1:    '✅f(9) = IX',
313: 1:    '✅f(10) = X',
313: 1:    '✅f(11) = XI',
313: 1:    '✅f(12) = XII',
313: 1:    '✅f(13) = XIII',
313: 1:    '✅f(14) = XIV',
313: 1:    '✅f(15) = XV',
313: 1:    '✅f(16) = XVI',
313: 1:    '✅f(17) = XVII',
313: 1:    '✅f(18) = XVIII',
313: 1:    '✅f(19) = XIX',
313: 1:    '✅f(20) = XX',
313: 1:    '✅f(30) = XXX',
313: 1:    '✅f(35) = XXXV',
313: 1:    '✅f(36) = XXXVI',
313: 1:    '❌f(46) = ??? != XLVI'
313: 1:  ],
313: 1:  'level': 11,
313: 1:  'nextQuestion': '46',
313: 1:  'questions': [
313: 1:    '1',
313: 1:    '2',
313: 1:    '3',
313: 1:    '4',
313: 1:    '5',
313: 1:    '6',
313: 1:    '7',
313: 1:    '8',
313: 1:    '9',
313: 1:    '10',
313: 1:    '11',
313: 1:    '12',
313: 1:    '13',
313: 1:    '14',
313: 1:    '15',
313: 1:    '16',
313: 1:    '17',
313: 1:    '18',
313: 1:    '19',
313: 1:    '20',
313: 1:    '30',
313: 1:    '35',
313: 1:    '36',
313: 1:    '46'
313: 1:  ]
313: 1:}
313: 1:Scores: 25691
313: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI']')
313: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
314: 1:BoardData {
314: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
314: 1:  'expectedAnswer': 'LVII',
314: 1:  'history': [
314: 1:    {
314: 1:      'answer': 'I',
314: 1:      'question': '1',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'II',
314: 1:      'question': '2',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'III',
314: 1:      'question': '3',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'IV',
314: 1:      'question': '4',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'V',
314: 1:      'question': '5',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'VI',
314: 1:      'question': '6',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'VII',
314: 1:      'question': '7',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'VIII',
314: 1:      'question': '8',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'IX',
314: 1:      'question': '9',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'X',
314: 1:      'question': '10',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XI',
314: 1:      'question': '11',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XII',
314: 1:      'question': '12',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XIII',
314: 1:      'question': '13',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XIV',
314: 1:      'question': '14',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XV',
314: 1:      'question': '15',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XVI',
314: 1:      'question': '16',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XVII',
314: 1:      'question': '17',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XVIII',
314: 1:      'question': '18',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XIX',
314: 1:      'question': '19',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XX',
314: 1:      'question': '20',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XXX',
314: 1:      'question': '30',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XXXV',
314: 1:      'question': '35',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XXXVI',
314: 1:      'question': '36',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'XLVI',
314: 1:      'question': '46',
314: 1:      'valid': true
314: 1:    }
314: 1:  ],
314: 1:  'info': [
314: 1:    '✅f(1) = I',
314: 1:    '✅f(2) = II',
314: 1:    '✅f(3) = III',
314: 1:    '✅f(4) = IV',
314: 1:    '✅f(5) = V',
314: 1:    '✅f(6) = VI',
314: 1:    '✅f(7) = VII',
314: 1:    '✅f(8) = VIII',
314: 1:    '✅f(9) = IX',
314: 1:    '✅f(10) = X',
314: 1:    '✅f(11) = XI',
314: 1:    '✅f(12) = XII',
314: 1:    '✅f(13) = XIII',
314: 1:    '✅f(14) = XIV',
314: 1:    '✅f(15) = XV',
314: 1:    '✅f(16) = XVI',
314: 1:    '✅f(17) = XVII',
314: 1:    '✅f(18) = XVIII',
314: 1:    '✅f(19) = XIX',
314: 1:    '✅f(20) = XX',
314: 1:    '✅f(30) = XXX',
314: 1:    '✅f(35) = XXXV',
314: 1:    '✅f(36) = XXXVI',
314: 1:    '✅f(46) = XLVI',
314: 1:    '❌f(57) = ??? != LVII'
314: 1:  ],
314: 1:  'level': 11,
314: 1:  'nextQuestion': '57',
314: 1:  'questions': [
314: 1:    '1',
314: 1:    '2',
314: 1:    '3',
314: 1:    '4',
314: 1:    '5',
314: 1:    '6',
314: 1:    '7',
314: 1:    '8',
314: 1:    '9',
314: 1:    '10',
314: 1:    '11',
314: 1:    '12',
314: 1:    '13',
314: 1:    '14',
314: 1:    '15',
314: 1:    '16',
314: 1:    '17',
314: 1:    '18',
314: 1:    '19',
314: 1:    '20',
314: 1:    '30',
314: 1:    '35',
314: 1:    '36',
314: 1:    '46',
314: 1:    '57'
314: 1:  ]
314: 1:}
314: 1:Scores: 25701
314: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII']')
314: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
315: 1:BoardData {
315: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
315: 1:  'expectedAnswer': 'LXVII',
315: 1:  'history': [
315: 1:    {
315: 1:      'answer': 'I',
315: 1:      'question': '1',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'II',
315: 1:      'question': '2',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'III',
315: 1:      'question': '3',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'IV',
315: 1:      'question': '4',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'V',
315: 1:      'question': '5',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'VI',
315: 1:      'question': '6',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'VII',
315: 1:      'question': '7',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'VIII',
315: 1:      'question': '8',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'IX',
315: 1:      'question': '9',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'X',
315: 1:      'question': '10',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XI',
315: 1:      'question': '11',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XII',
315: 1:      'question': '12',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XIII',
315: 1:      'question': '13',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XIV',
315: 1:      'question': '14',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XV',
315: 1:      'question': '15',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XVI',
315: 1:      'question': '16',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XVII',
315: 1:      'question': '17',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XVIII',
315: 1:      'question': '18',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XIX',
315: 1:      'question': '19',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XX',
315: 1:      'question': '20',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XXX',
315: 1:      'question': '30',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XXXV',
315: 1:      'question': '35',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XXXVI',
315: 1:      'question': '36',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'XLVI',
315: 1:      'question': '46',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'LVII',
315: 1:      'question': '57',
315: 1:      'valid': true
315: 1:    }
315: 1:  ],
315: 1:  'info': [
315: 1:    '✅f(1) = I',
315: 1:    '✅f(2) = II',
315: 1:    '✅f(3) = III',
315: 1:    '✅f(4) = IV',
315: 1:    '✅f(5) = V',
315: 1:    '✅f(6) = VI',
315: 1:    '✅f(7) = VII',
315: 1:    '✅f(8) = VIII',
315: 1:    '✅f(9) = IX',
315: 1:    '✅f(10) = X',
315: 1:    '✅f(11) = XI',
315: 1:    '✅f(12) = XII',
315: 1:    '✅f(13) = XIII',
315: 1:    '✅f(14) = XIV',
315: 1:    '✅f(15) = XV',
315: 1:    '✅f(16) = XVI',
315: 1:    '✅f(17) = XVII',
315: 1:    '✅f(18) = XVIII',
315: 1:    '✅f(19) = XIX',
315: 1:    '✅f(20) = XX',
315: 1:    '✅f(30) = XXX',
315: 1:    '✅f(35) = XXXV',
315: 1:    '✅f(36) = XXXVI',
315: 1:    '✅f(46) = XLVI',
315: 1:    '✅f(57) = LVII',
315: 1:    '❌f(67) = ??? != LXVII'
315: 1:  ],
315: 1:  'level': 11,
315: 1:  'nextQuestion': '67',
315: 1:  'questions': [
315: 1:    '1',
315: 1:    '2',
315: 1:    '3',
315: 1:    '4',
315: 1:    '5',
315: 1:    '6',
315: 1:    '7',
315: 1:    '8',
315: 1:    '9',
315: 1:    '10',
315: 1:    '11',
315: 1:    '12',
315: 1:    '13',
315: 1:    '14',
315: 1:    '15',
315: 1:    '16',
315: 1:    '17',
315: 1:    '18',
315: 1:    '19',
315: 1:    '20',
315: 1:    '30',
315: 1:    '35',
315: 1:    '36',
315: 1:    '46',
315: 1:    '57',
315: 1:    '67'
315: 1:  ]
315: 1:}
315: 1:Scores: 25711
315: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII']')
315: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
316: 1:BoardData {
316: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
316: 1:  'expectedAnswer': 'LXXXIX',
316: 1:  'history': [
316: 1:    {
316: 1:      'answer': 'I',
316: 1:      'question': '1',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'II',
316: 1:      'question': '2',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'III',
316: 1:      'question': '3',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'IV',
316: 1:      'question': '4',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'V',
316: 1:      'question': '5',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'VI',
316: 1:      'question': '6',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'VII',
316: 1:      'question': '7',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'VIII',
316: 1:      'question': '8',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'IX',
316: 1:      'question': '9',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'X',
316: 1:      'question': '10',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XI',
316: 1:      'question': '11',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XII',
316: 1:      'question': '12',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XIII',
316: 1:      'question': '13',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XIV',
316: 1:      'question': '14',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XV',
316: 1:      'question': '15',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XVI',
316: 1:      'question': '16',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XVII',
316: 1:      'question': '17',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XVIII',
316: 1:      'question': '18',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XIX',
316: 1:      'question': '19',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XX',
316: 1:      'question': '20',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XXX',
316: 1:      'question': '30',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XXXV',
316: 1:      'question': '35',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XXXVI',
316: 1:      'question': '36',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'XLVI',
316: 1:      'question': '46',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'LVII',
316: 1:      'question': '57',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': 'LXVII',
316: 1:      'question': '67',
316: 1:      'valid': true
316: 1:    }
316: 1:  ],
316: 1:  'info': [
316: 1:    '✅f(1) = I',
316: 1:    '✅f(2) = II',
316: 1:    '✅f(3) = III',
316: 1:    '✅f(4) = IV',
316: 1:    '✅f(5) = V',
316: 1:    '✅f(6) = VI',
316: 1:    '✅f(7) = VII',
316: 1:    '✅f(8) = VIII',
316: 1:    '✅f(9) = IX',
316: 1:    '✅f(10) = X',
316: 1:    '✅f(11) = XI',
316: 1:    '✅f(12) = XII',
316: 1:    '✅f(13) = XIII',
316: 1:    '✅f(14) = XIV',
316: 1:    '✅f(15) = XV',
316: 1:    '✅f(16) = XVI',
316: 1:    '✅f(17) = XVII',
316: 1:    '✅f(18) = XVIII',
316: 1:    '✅f(19) = XIX',
316: 1:    '✅f(20) = XX',
316: 1:    '✅f(30) = XXX',
316: 1:    '✅f(35) = XXXV',
316: 1:    '✅f(36) = XXXVI',
316: 1:    '✅f(46) = XLVI',
316: 1:    '✅f(57) = LVII',
316: 1:    '✅f(67) = LXVII',
316: 1:    '❌f(89) = ??? != LXXXIX'
316: 1:  ],
316: 1:  'level': 11,
316: 1:  'nextQuestion': '89',
316: 1:  'questions': [
316: 1:    '1',
316: 1:    '2',
316: 1:    '3',
316: 1:    '4',
316: 1:    '5',
316: 1:    '6',
316: 1:    '7',
316: 1:    '8',
316: 1:    '9',
316: 1:    '10',
316: 1:    '11',
316: 1:    '12',
316: 1:    '13',
316: 1:    '14',
316: 1:    '15',
316: 1:    '16',
316: 1:    '17',
316: 1:    '18',
316: 1:    '19',
316: 1:    '20',
316: 1:    '30',
316: 1:    '35',
316: 1:    '36',
316: 1:    '46',
316: 1:    '57',
316: 1:    '67',
316: 1:    '89'
316: 1:  ]
316: 1:}
316: 1:Scores: 25721
316: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX']')
316: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
317: 1:BoardData {
317: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
317: 1:  'expectedAnswer': 'CXXIII',
317: 1:  'history': [
317: 1:    {
317: 1:      'answer': 'I',
317: 1:      'question': '1',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'II',
317: 1:      'question': '2',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'III',
317: 1:      'question': '3',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'IV',
317: 1:      'question': '4',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'V',
317: 1:      'question': '5',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'VI',
317: 1:      'question': '6',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'VII',
317: 1:      'question': '7',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'VIII',
317: 1:      'question': '8',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'IX',
317: 1:      'question': '9',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'X',
317: 1:      'question': '10',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XI',
317: 1:      'question': '11',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XII',
317: 1:      'question': '12',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XIII',
317: 1:      'question': '13',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XIV',
317: 1:      'question': '14',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XV',
317: 1:      'question': '15',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XVI',
317: 1:      'question': '16',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XVII',
317: 1:      'question': '17',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XVIII',
317: 1:      'question': '18',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XIX',
317: 1:      'question': '19',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XX',
317: 1:      'question': '20',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XXX',
317: 1:      'question': '30',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XXXV',
317: 1:      'question': '35',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XXXVI',
317: 1:      'question': '36',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'XLVI',
317: 1:      'question': '46',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'LVII',
317: 1:      'question': '57',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'LXVII',
317: 1:      'question': '67',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': 'LXXXIX',
317: 1:      'question': '89',
317: 1:      'valid': true
317: 1:    }
317: 1:  ],
317: 1:  'info': [
317: 1:    '✅f(1) = I',
317: 1:    '✅f(2) = II',
317: 1:    '✅f(3) = III',
317: 1:    '✅f(4) = IV',
317: 1:    '✅f(5) = V',
317: 1:    '✅f(6) = VI',
317: 1:    '✅f(7) = VII',
317: 1:    '✅f(8) = VIII',
317: 1:    '✅f(9) = IX',
317: 1:    '✅f(10) = X',
317: 1:    '✅f(11) = XI',
317: 1:    '✅f(12) = XII',
317: 1:    '✅f(13) = XIII',
317: 1:    '✅f(14) = XIV',
317: 1:    '✅f(15) = XV',
317: 1:    '✅f(16) = XVI',
317: 1:    '✅f(17) = XVII',
317: 1:    '✅f(18) = XVIII',
317: 1:    '✅f(19) = XIX',
317: 1:    '✅f(20) = XX',
317: 1:    '✅f(30) = XXX',
317: 1:    '✅f(35) = XXXV',
317: 1:    '✅f(36) = XXXVI',
317: 1:    '✅f(46) = XLVI',
317: 1:    '✅f(57) = LVII',
317: 1:    '✅f(67) = LXVII',
317: 1:    '✅f(89) = LXXXIX',
317: 1:    '❌f(123) = ??? != CXXIII'
317: 1:  ],
317: 1:  'level': 11,
317: 1:  'nextQuestion': '123',
317: 1:  'questions': [
317: 1:    '1',
317: 1:    '2',
317: 1:    '3',
317: 1:    '4',
317: 1:    '5',
317: 1:    '6',
317: 1:    '7',
317: 1:    '8',
317: 1:    '9',
317: 1:    '10',
317: 1:    '11',
317: 1:    '12',
317: 1:    '13',
317: 1:    '14',
317: 1:    '15',
317: 1:    '16',
317: 1:    '17',
317: 1:    '18',
317: 1:    '19',
317: 1:    '20',
317: 1:    '30',
317: 1:    '35',
317: 1:    '36',
317: 1:    '46',
317: 1:    '57',
317: 1:    '67',
317: 1:    '89',
317: 1:    '123'
317: 1:  ]
317: 1:}
317: 1:Scores: 25731
317: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII']')
317: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
318: 1:BoardData {
318: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
318: 1:  'expectedAnswer': 'CCXXXIV',
318: 1:  'history': [
318: 1:    {
318: 1:      'answer': 'I',
318: 1:      'question': '1',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'II',
318: 1:      'question': '2',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'III',
318: 1:      'question': '3',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'IV',
318: 1:      'question': '4',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'V',
318: 1:      'question': '5',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'VI',
318: 1:      'question': '6',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'VII',
318: 1:      'question': '7',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'VIII',
318: 1:      'question': '8',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'IX',
318: 1:      'question': '9',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'X',
318: 1:      'question': '10',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XI',
318: 1:      'question': '11',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XII',
318: 1:      'question': '12',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XIII',
318: 1:      'question': '13',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XIV',
318: 1:      'question': '14',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XV',
318: 1:      'question': '15',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XVI',
318: 1:      'question': '16',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XVII',
318: 1:      'question': '17',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XVIII',
318: 1:      'question': '18',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XIX',
318: 1:      'question': '19',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XX',
318: 1:      'question': '20',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XXX',
318: 1:      'question': '30',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XXXV',
318: 1:      'question': '35',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XXXVI',
318: 1:      'question': '36',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'XLVI',
318: 1:      'question': '46',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'LVII',
318: 1:      'question': '57',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'LXVII',
318: 1:      'question': '67',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'LXXXIX',
318: 1:      'question': '89',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': 'CXXIII',
318: 1:      'question': '123',
318: 1:      'valid': true
318: 1:    }
318: 1:  ],
318: 1:  'info': [
318: 1:    '✅f(1) = I',
318: 1:    '✅f(2) = II',
318: 1:    '✅f(3) = III',
318: 1:    '✅f(4) = IV',
318: 1:    '✅f(5) = V',
318: 1:    '✅f(6) = VI',
318: 1:    '✅f(7) = VII',
318: 1:    '✅f(8) = VIII',
318: 1:    '✅f(9) = IX',
318: 1:    '✅f(10) = X',
318: 1:    '✅f(11) = XI',
318: 1:    '✅f(12) = XII',
318: 1:    '✅f(13) = XIII',
318: 1:    '✅f(14) = XIV',
318: 1:    '✅f(15) = XV',
318: 1:    '✅f(16) = XVI',
318: 1:    '✅f(17) = XVII',
318: 1:    '✅f(18) = XVIII',
318: 1:    '✅f(19) = XIX',
318: 1:    '✅f(20) = XX',
318: 1:    '✅f(30) = XXX',
318: 1:    '✅f(35) = XXXV',
318: 1:    '✅f(36) = XXXVI',
318: 1:    '✅f(46) = XLVI',
318: 1:    '✅f(57) = LVII',
318: 1:    '✅f(67) = LXVII',
318: 1:    '✅f(89) = LXXXIX',
318: 1:    '✅f(123) = CXXIII',
318: 1:    '❌f(234) = ??? != CCXXXIV'
318: 1:  ],
318: 1:  'level': 11,
318: 1:  'nextQuestion': '234',
318: 1:  'questions': [
318: 1:    '1',
318: 1:    '2',
318: 1:    '3',
318: 1:    '4',
318: 1:    '5',
318: 1:    '6',
318: 1:    '7',
318: 1:    '8',
318: 1:    '9',
318: 1:    '10',
318: 1:    '11',
318: 1:    '12',
318: 1:    '13',
318: 1:    '14',
318: 1:    '15',
318: 1:    '16',
318: 1:    '17',
318: 1:    '18',
318: 1:    '19',
318: 1:    '20',
318: 1:    '30',
318: 1:    '35',
318: 1:    '36',
318: 1:    '46',
318: 1:    '57',
318: 1:    '67',
318: 1:    '89',
318: 1:    '123',
318: 1:    '234'
318: 1:  ]
318: 1:}
318: 1:Scores: 25741
318: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV']')
318: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
319: 1:BoardData {
319: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
319: 1:  'expectedAnswer': 'CCCXLV',
319: 1:  'history': [
319: 1:    {
319: 1:      'answer': 'I',
319: 1:      'question': '1',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'II',
319: 1:      'question': '2',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'III',
319: 1:      'question': '3',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'IV',
319: 1:      'question': '4',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'V',
319: 1:      'question': '5',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'VI',
319: 1:      'question': '6',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'VII',
319: 1:      'question': '7',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'VIII',
319: 1:      'question': '8',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'IX',
319: 1:      'question': '9',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'X',
319: 1:      'question': '10',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XI',
319: 1:      'question': '11',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XII',
319: 1:      'question': '12',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XIII',
319: 1:      'question': '13',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XIV',
319: 1:      'question': '14',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XV',
319: 1:      'question': '15',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XVI',
319: 1:      'question': '16',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XVII',
319: 1:      'question': '17',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XVIII',
319: 1:      'question': '18',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XIX',
319: 1:      'question': '19',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XX',
319: 1:      'question': '20',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XXX',
319: 1:      'question': '30',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XXXV',
319: 1:      'question': '35',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XXXVI',
319: 1:      'question': '36',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'XLVI',
319: 1:      'question': '46',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'LVII',
319: 1:      'question': '57',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'LXVII',
319: 1:      'question': '67',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'LXXXIX',
319: 1:      'question': '89',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'CXXIII',
319: 1:      'question': '123',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': 'CCXXXIV',
319: 1:      'question': '234',
319: 1:      'valid': true
319: 1:    }
319: 1:  ],
319: 1:  'info': [
319: 1:    '✅f(1) = I',
319: 1:    '✅f(2) = II',
319: 1:    '✅f(3) = III',
319: 1:    '✅f(4) = IV',
319: 1:    '✅f(5) = V',
319: 1:    '✅f(6) = VI',
319: 1:    '✅f(7) = VII',
319: 1:    '✅f(8) = VIII',
319: 1:    '✅f(9) = IX',
319: 1:    '✅f(10) = X',
319: 1:    '✅f(11) = XI',
319: 1:    '✅f(12) = XII',
319: 1:    '✅f(13) = XIII',
319: 1:    '✅f(14) = XIV',
319: 1:    '✅f(15) = XV',
319: 1:    '✅f(16) = XVI',
319: 1:    '✅f(17) = XVII',
319: 1:    '✅f(18) = XVIII',
319: 1:    '✅f(19) = XIX',
319: 1:    '✅f(20) = XX',
319: 1:    '✅f(30) = XXX',
319: 1:    '✅f(35) = XXXV',
319: 1:    '✅f(36) = XXXVI',
319: 1:    '✅f(46) = XLVI',
319: 1:    '✅f(57) = LVII',
319: 1:    '✅f(67) = LXVII',
319: 1:    '✅f(89) = LXXXIX',
319: 1:    '✅f(123) = CXXIII',
319: 1:    '✅f(234) = CCXXXIV',
319: 1:    '❌f(345) = ??? != CCCXLV'
319: 1:  ],
319: 1:  'level': 11,
319: 1:  'nextQuestion': '345',
319: 1:  'questions': [
319: 1:    '1',
319: 1:    '2',
319: 1:    '3',
319: 1:    '4',
319: 1:    '5',
319: 1:    '6',
319: 1:    '7',
319: 1:    '8',
319: 1:    '9',
319: 1:    '10',
319: 1:    '11',
319: 1:    '12',
319: 1:    '13',
319: 1:    '14',
319: 1:    '15',
319: 1:    '16',
319: 1:    '17',
319: 1:    '18',
319: 1:    '19',
319: 1:    '20',
319: 1:    '30',
319: 1:    '35',
319: 1:    '36',
319: 1:    '46',
319: 1:    '57',
319: 1:    '67',
319: 1:    '89',
319: 1:    '123',
319: 1:    '234',
319: 1:    '345'
319: 1:  ]
319: 1:}
319: 1:Scores: 25751
319: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV', 'CCCXLV']')
319: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
320: 1:BoardData {
320: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
320: 1:  'expectedAnswer': 'CDLVI',
320: 1:  'history': [
320: 1:    {
320: 1:      'answer': 'I',
320: 1:      'question': '1',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'II',
320: 1:      'question': '2',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'III',
320: 1:      'question': '3',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'IV',
320: 1:      'question': '4',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'V',
320: 1:      'question': '5',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'VI',
320: 1:      'question': '6',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'VII',
320: 1:      'question': '7',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'VIII',
320: 1:      'question': '8',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'IX',
320: 1:      'question': '9',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'X',
320: 1:      'question': '10',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XI',
320: 1:      'question': '11',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XII',
320: 1:      'question': '12',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XIII',
320: 1:      'question': '13',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XIV',
320: 1:      'question': '14',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XV',
320: 1:      'question': '15',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XVI',
320: 1:      'question': '16',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XVII',
320: 1:      'question': '17',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XVIII',
320: 1:      'question': '18',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XIX',
320: 1:      'question': '19',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XX',
320: 1:      'question': '20',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XXX',
320: 1:      'question': '30',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XXXV',
320: 1:      'question': '35',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XXXVI',
320: 1:      'question': '36',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'XLVI',
320: 1:      'question': '46',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'LVII',
320: 1:      'question': '57',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'LXVII',
320: 1:      'question': '67',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'LXXXIX',
320: 1:      'question': '89',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'CXXIII',
320: 1:      'question': '123',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'CCXXXIV',
320: 1:      'question': '234',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': 'CCCXLV',
320: 1:      'question': '345',
320: 1:      'valid': true
320: 1:    }
320: 1:  ],
320: 1:  'info': [
320: 1:    '✅f(1) = I',
320: 1:    '✅f(2) = II',
320: 1:    '✅f(3) = III',
320: 1:    '✅f(4) = IV',
320: 1:    '✅f(5) = V',
320: 1:    '✅f(6) = VI',
320: 1:    '✅f(7) = VII',
320: 1:    '✅f(8) = VIII',
320: 1:    '✅f(9) = IX',
320: 1:    '✅f(10) = X',
320: 1:    '✅f(11) = XI',
320: 1:    '✅f(12) = XII',
320: 1:    '✅f(13) = XIII',
320: 1:    '✅f(14) = XIV',
320: 1:    '✅f(15) = XV',
320: 1:    '✅f(16) = XVI',
320: 1:    '✅f(17) = XVII',
320: 1:    '✅f(18) = XVIII',
320: 1:    '✅f(19) = XIX',
320: 1:    '✅f(20) = XX',
320: 1:    '✅f(30) = XXX',
320: 1:    '✅f(35) = XXXV',
320: 1:    '✅f(36) = XXXVI',
320: 1:    '✅f(46) = XLVI',
320: 1:    '✅f(57) = LVII',
320: 1:    '✅f(67) = LXVII',
320: 1:    '✅f(89) = LXXXIX',
320: 1:    '✅f(123) = CXXIII',
320: 1:    '✅f(234) = CCXXXIV',
320: 1:    '✅f(345) = CCCXLV',
320: 1:    '❌f(456) = ??? != CDLVI'
320: 1:  ],
320: 1:  'level': 11,
320: 1:  'nextQuestion': '456',
320: 1:  'questions': [
320: 1:    '1',
320: 1:    '2',
320: 1:    '3',
320: 1:    '4',
320: 1:    '5',
320: 1:    '6',
320: 1:    '7',
320: 1:    '8',
320: 1:    '9',
320: 1:    '10',
320: 1:    '11',
320: 1:    '12',
320: 1:    '13',
320: 1:    '14',
320: 1:    '15',
320: 1:    '16',
320: 1:    '17',
320: 1:    '18',
320: 1:    '19',
320: 1:    '20',
320: 1:    '30',
320: 1:    '35',
320: 1:    '36',
320: 1:    '46',
320: 1:    '57',
320: 1:    '67',
320: 1:    '89',
320: 1:    '123',
320: 1:    '234',
320: 1:    '345',
320: 1:    '456'
320: 1:  ]
320: 1:}
320: 1:Scores: 25761
320: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV', 'CCCXLV', 'CDLVI']')
320: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
321: 1:BoardData {
321: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
321: 1:  'expectedAnswer': 'DLXVII',
321: 1:  'history': [
321: 1:    {
321: 1:      'answer': 'I',
321: 1:      'question': '1',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'II',
321: 1:      'question': '2',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'III',
321: 1:      'question': '3',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'IV',
321: 1:      'question': '4',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'V',
321: 1:      'question': '5',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'VI',
321: 1:      'question': '6',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'VII',
321: 1:      'question': '7',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'VIII',
321: 1:      'question': '8',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'IX',
321: 1:      'question': '9',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'X',
321: 1:      'question': '10',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XI',
321: 1:      'question': '11',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XII',
321: 1:      'question': '12',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XIII',
321: 1:      'question': '13',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XIV',
321: 1:      'question': '14',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XV',
321: 1:      'question': '15',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XVI',
321: 1:      'question': '16',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XVII',
321: 1:      'question': '17',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XVIII',
321: 1:      'question': '18',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XIX',
321: 1:      'question': '19',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XX',
321: 1:      'question': '20',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XXX',
321: 1:      'question': '30',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XXXV',
321: 1:      'question': '35',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XXXVI',
321: 1:      'question': '36',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'XLVI',
321: 1:      'question': '46',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'LVII',
321: 1:      'question': '57',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'LXVII',
321: 1:      'question': '67',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'LXXXIX',
321: 1:      'question': '89',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'CXXIII',
321: 1:      'question': '123',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'CCXXXIV',
321: 1:      'question': '234',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'CCCXLV',
321: 1:      'question': '345',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': 'CDLVI',
321: 1:      'question': '456',
321: 1:      'valid': true
321: 1:    }
321: 1:  ],
321: 1:  'info': [
321: 1:    '✅f(1) = I',
321: 1:    '✅f(2) = II',
321: 1:    '✅f(3) = III',
321: 1:    '✅f(4) = IV',
321: 1:    '✅f(5) = V',
321: 1:    '✅f(6) = VI',
321: 1:    '✅f(7) = VII',
321: 1:    '✅f(8) = VIII',
321: 1:    '✅f(9) = IX',
321: 1:    '✅f(10) = X',
321: 1:    '✅f(11) = XI',
321: 1:    '✅f(12) = XII',
321: 1:    '✅f(13) = XIII',
321: 1:    '✅f(14) = XIV',
321: 1:    '✅f(15) = XV',
321: 1:    '✅f(16) = XVI',
321: 1:    '✅f(17) = XVII',
321: 1:    '✅f(18) = XVIII',
321: 1:    '✅f(19) = XIX',
321: 1:    '✅f(20) = XX',
321: 1:    '✅f(30) = XXX',
321: 1:    '✅f(35) = XXXV',
321: 1:    '✅f(36) = XXXVI',
321: 1:    '✅f(46) = XLVI',
321: 1:    '✅f(57) = LVII',
321: 1:    '✅f(67) = LXVII',
321: 1:    '✅f(89) = LXXXIX',
321: 1:    '✅f(123) = CXXIII',
321: 1:    '✅f(234) = CCXXXIV',
321: 1:    '✅f(345) = CCCXLV',
321: 1:    '✅f(456) = CDLVI',
321: 1:    '❌f(567) = ??? != DLXVII'
321: 1:  ],
321: 1:  'level': 11,
321: 1:  'nextQuestion': '567',
321: 1:  'questions': [
321: 1:    '1',
321: 1:    '2',
321: 1:    '3',
321: 1:    '4',
321: 1:    '5',
321: 1:    '6',
321: 1:    '7',
321: 1:    '8',
321: 1:    '9',
321: 1:    '10',
321: 1:    '11',
321: 1:    '12',
321: 1:    '13',
321: 1:    '14',
321: 1:    '15',
321: 1:    '16',
321: 1:    '17',
321: 1:    '18',
321: 1:    '19',
321: 1:    '20',
321: 1:    '30',
321: 1:    '35',
321: 1:    '36',
321: 1:    '46',
321: 1:    '57',
321: 1:    '67',
321: 1:    '89',
321: 1:    '123',
321: 1:    '234',
321: 1:    '345',
321: 1:    '456',
321: 1:    '567'
321: 1:  ]
321: 1:}
321: 1:Scores: 25771
321: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV', 'CCCXLV', 'CDLVI', 'DLXVII']')
321: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
322: 1:BoardData {
322: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
322: 1:  'expectedAnswer': 'DCLXXVIII',
322: 1:  'history': [
322: 1:    {
322: 1:      'answer': 'I',
322: 1:      'question': '1',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'II',
322: 1:      'question': '2',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'III',
322: 1:      'question': '3',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'IV',
322: 1:      'question': '4',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'V',
322: 1:      'question': '5',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'VI',
322: 1:      'question': '6',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'VII',
322: 1:      'question': '7',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'VIII',
322: 1:      'question': '8',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'IX',
322: 1:      'question': '9',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'X',
322: 1:      'question': '10',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XI',
322: 1:      'question': '11',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XII',
322: 1:      'question': '12',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XIII',
322: 1:      'question': '13',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XIV',
322: 1:      'question': '14',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XV',
322: 1:      'question': '15',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XVI',
322: 1:      'question': '16',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XVII',
322: 1:      'question': '17',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XVIII',
322: 1:      'question': '18',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XIX',
322: 1:      'question': '19',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XX',
322: 1:      'question': '20',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XXX',
322: 1:      'question': '30',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XXXV',
322: 1:      'question': '35',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XXXVI',
322: 1:      'question': '36',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'XLVI',
322: 1:      'question': '46',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'LVII',
322: 1:      'question': '57',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'LXVII',
322: 1:      'question': '67',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'LXXXIX',
322: 1:      'question': '89',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'CXXIII',
322: 1:      'question': '123',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'CCXXXIV',
322: 1:      'question': '234',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'CCCXLV',
322: 1:      'question': '345',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'CDLVI',
322: 1:      'question': '456',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': 'DLXVII',
322: 1:      'question': '567',
322: 1:      'valid': true
322: 1:    }
322: 1:  ],
322: 1:  'info': [
322: 1:    '✅f(1) = I',
322: 1:    '✅f(2) = II',
322: 1:    '✅f(3) = III',
322: 1:    '✅f(4) = IV',
322: 1:    '✅f(5) = V',
322: 1:    '✅f(6) = VI',
322: 1:    '✅f(7) = VII',
322: 1:    '✅f(8) = VIII',
322: 1:    '✅f(9) = IX',
322: 1:    '✅f(10) = X',
322: 1:    '✅f(11) = XI',
322: 1:    '✅f(12) = XII',
322: 1:    '✅f(13) = XIII',
322: 1:    '✅f(14) = XIV',
322: 1:    '✅f(15) = XV',
322: 1:    '✅f(16) = XVI',
322: 1:    '✅f(17) = XVII',
322: 1:    '✅f(18) = XVIII',
322: 1:    '✅f(19) = XIX',
322: 1:    '✅f(20) = XX',
322: 1:    '✅f(30) = XXX',
322: 1:    '✅f(35) = XXXV',
322: 1:    '✅f(36) = XXXVI',
322: 1:    '✅f(46) = XLVI',
322: 1:    '✅f(57) = LVII',
322: 1:    '✅f(67) = LXVII',
322: 1:    '✅f(89) = LXXXIX',
322: 1:    '✅f(123) = CXXIII',
322: 1:    '✅f(234) = CCXXXIV',
322: 1:    '✅f(345) = CCCXLV',
322: 1:    '✅f(456) = CDLVI',
322: 1:    '✅f(567) = DLXVII',
322: 1:    '❌f(678) = ??? != DCLXXVIII'
322: 1:  ],
322: 1:  'level': 11,
322: 1:  'nextQuestion': '678',
322: 1:  'questions': [
322: 1:    '1',
322: 1:    '2',
322: 1:    '3',
322: 1:    '4',
322: 1:    '5',
322: 1:    '6',
322: 1:    '7',
322: 1:    '8',
322: 1:    '9',
322: 1:    '10',
322: 1:    '11',
322: 1:    '12',
322: 1:    '13',
322: 1:    '14',
322: 1:    '15',
322: 1:    '16',
322: 1:    '17',
322: 1:    '18',
322: 1:    '19',
322: 1:    '20',
322: 1:    '30',
322: 1:    '35',
322: 1:    '36',
322: 1:    '46',
322: 1:    '57',
322: 1:    '67',
322: 1:    '89',
322: 1:    '123',
322: 1:    '234',
322: 1:    '345',
322: 1:    '456',
322: 1:    '567',
322: 1:    '678'
322: 1:  ]
322: 1:}
322: 1:Scores: 25781
322: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV', 'CCCXLV', 'CDLVI', 'DLXVII', 'DCLXXVIII']')
322: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
323: 1:BoardData {
323: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
323: 1:  'expectedAnswer': 'DCCCXC',
323: 1:  'history': [
323: 1:    {
323: 1:      'answer': 'I',
323: 1:      'question': '1',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'II',
323: 1:      'question': '2',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'III',
323: 1:      'question': '3',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'IV',
323: 1:      'question': '4',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'V',
323: 1:      'question': '5',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'VI',
323: 1:      'question': '6',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'VII',
323: 1:      'question': '7',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'VIII',
323: 1:      'question': '8',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'IX',
323: 1:      'question': '9',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'X',
323: 1:      'question': '10',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XI',
323: 1:      'question': '11',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XII',
323: 1:      'question': '12',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XIII',
323: 1:      'question': '13',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XIV',
323: 1:      'question': '14',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XV',
323: 1:      'question': '15',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XVI',
323: 1:      'question': '16',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XVII',
323: 1:      'question': '17',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XVIII',
323: 1:      'question': '18',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XIX',
323: 1:      'question': '19',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XX',
323: 1:      'question': '20',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XXX',
323: 1:      'question': '30',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XXXV',
323: 1:      'question': '35',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XXXVI',
323: 1:      'question': '36',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'XLVI',
323: 1:      'question': '46',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'LVII',
323: 1:      'question': '57',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'LXVII',
323: 1:      'question': '67',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'LXXXIX',
323: 1:      'question': '89',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'CXXIII',
323: 1:      'question': '123',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'CCXXXIV',
323: 1:      'question': '234',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'CCCXLV',
323: 1:      'question': '345',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'CDLVI',
323: 1:      'question': '456',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'DLXVII',
323: 1:      'question': '567',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': 'DCLXXVIII',
323: 1:      'question': '678',
323: 1:      'valid': true
323: 1:    }
323: 1:  ],
323: 1:  'info': [
323: 1:    '✅f(1) = I',
323: 1:    '✅f(2) = II',
323: 1:    '✅f(3) = III',
323: 1:    '✅f(4) = IV',
323: 1:    '✅f(5) = V',
323: 1:    '✅f(6) = VI',
323: 1:    '✅f(7) = VII',
323: 1:    '✅f(8) = VIII',
323: 1:    '✅f(9) = IX',
323: 1:    '✅f(10) = X',
323: 1:    '✅f(11) = XI',
323: 1:    '✅f(12) = XII',
323: 1:    '✅f(13) = XIII',
323: 1:    '✅f(14) = XIV',
323: 1:    '✅f(15) = XV',
323: 1:    '✅f(16) = XVI',
323: 1:    '✅f(17) = XVII',
323: 1:    '✅f(18) = XVIII',
323: 1:    '✅f(19) = XIX',
323: 1:    '✅f(20) = XX',
323: 1:    '✅f(30) = XXX',
323: 1:    '✅f(35) = XXXV',
323: 1:    '✅f(36) = XXXVI',
323: 1:    '✅f(46) = XLVI',
323: 1:    '✅f(57) = LVII',
323: 1:    '✅f(67) = LXVII',
323: 1:    '✅f(89) = LXXXIX',
323: 1:    '✅f(123) = CXXIII',
323: 1:    '✅f(234) = CCXXXIV',
323: 1:    '✅f(345) = CCCXLV',
323: 1:    '✅f(456) = CDLVI',
323: 1:    '✅f(567) = DLXVII',
323: 1:    '✅f(678) = DCLXXVIII',
323: 1:    '❌f(890) = ??? != DCCCXC'
323: 1:  ],
323: 1:  'level': 11,
323: 1:  'nextQuestion': '890',
323: 1:  'questions': [
323: 1:    '1',
323: 1:    '2',
323: 1:    '3',
323: 1:    '4',
323: 1:    '5',
323: 1:    '6',
323: 1:    '7',
323: 1:    '8',
323: 1:    '9',
323: 1:    '10',
323: 1:    '11',
323: 1:    '12',
323: 1:    '13',
323: 1:    '14',
323: 1:    '15',
323: 1:    '16',
323: 1:    '17',
323: 1:    '18',
323: 1:    '19',
323: 1:    '20',
323: 1:    '30',
323: 1:    '35',
323: 1:    '36',
323: 1:    '46',
323: 1:    '57',
323: 1:    '67',
323: 1:    '89',
323: 1:    '123',
323: 1:    '234',
323: 1:    '345',
323: 1:    '456',
323: 1:    '567',
323: 1:    '678',
323: 1:    '890'
323: 1:  ]
323: 1:}
323: 1:Scores: 25791
323: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV', 'CCCXLV', 'CDLVI', 'DLXVII', 'DCLXXVIII', 'DCCCXC']')
323: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
324: 1:BoardData {
324: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
324: 1:  'expectedAnswer': 'MCCXXXIV',
324: 1:  'history': [
324: 1:    {
324: 1:      'answer': 'I',
324: 1:      'question': '1',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'II',
324: 1:      'question': '2',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'III',
324: 1:      'question': '3',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'IV',
324: 1:      'question': '4',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'V',
324: 1:      'question': '5',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'VI',
324: 1:      'question': '6',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'VII',
324: 1:      'question': '7',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'VIII',
324: 1:      'question': '8',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'IX',
324: 1:      'question': '9',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'X',
324: 1:      'question': '10',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XI',
324: 1:      'question': '11',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XII',
324: 1:      'question': '12',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XIII',
324: 1:      'question': '13',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XIV',
324: 1:      'question': '14',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XV',
324: 1:      'question': '15',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XVI',
324: 1:      'question': '16',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XVII',
324: 1:      'question': '17',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XVIII',
324: 1:      'question': '18',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XIX',
324: 1:      'question': '19',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XX',
324: 1:      'question': '20',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XXX',
324: 1:      'question': '30',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XXXV',
324: 1:      'question': '35',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XXXVI',
324: 1:      'question': '36',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'XLVI',
324: 1:      'question': '46',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'LVII',
324: 1:      'question': '57',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'LXVII',
324: 1:      'question': '67',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'LXXXIX',
324: 1:      'question': '89',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'CXXIII',
324: 1:      'question': '123',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'CCXXXIV',
324: 1:      'question': '234',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'CCCXLV',
324: 1:      'question': '345',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'CDLVI',
324: 1:      'question': '456',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'DLXVII',
324: 1:      'question': '567',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'DCLXXVIII',
324: 1:      'question': '678',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': 'DCCCXC',
324: 1:      'question': '890',
324: 1:      'valid': true
324: 1:    }
324: 1:  ],
324: 1:  'info': [
324: 1:    '✅f(1) = I',
324: 1:    '✅f(2) = II',
324: 1:    '✅f(3) = III',
324: 1:    '✅f(4) = IV',
324: 1:    '✅f(5) = V',
324: 1:    '✅f(6) = VI',
324: 1:    '✅f(7) = VII',
324: 1:    '✅f(8) = VIII',
324: 1:    '✅f(9) = IX',
324: 1:    '✅f(10) = X',
324: 1:    '✅f(11) = XI',
324: 1:    '✅f(12) = XII',
324: 1:    '✅f(13) = XIII',
324: 1:    '✅f(14) = XIV',
324: 1:    '✅f(15) = XV',
324: 1:    '✅f(16) = XVI',
324: 1:    '✅f(17) = XVII',
324: 1:    '✅f(18) = XVIII',
324: 1:    '✅f(19) = XIX',
324: 1:    '✅f(20) = XX',
324: 1:    '✅f(30) = XXX',
324: 1:    '✅f(35) = XXXV',
324: 1:    '✅f(36) = XXXVI',
324: 1:    '✅f(46) = XLVI',
324: 1:    '✅f(57) = LVII',
324: 1:    '✅f(67) = LXVII',
324: 1:    '✅f(89) = LXXXIX',
324: 1:    '✅f(123) = CXXIII',
324: 1:    '✅f(234) = CCXXXIV',
324: 1:    '✅f(345) = CCCXLV',
324: 1:    '✅f(456) = CDLVI',
324: 1:    '✅f(567) = DLXVII',
324: 1:    '✅f(678) = DCLXXVIII',
324: 1:    '✅f(890) = DCCCXC',
324: 1:    '❌f(1234) = ??? != MCCXXXIV'
324: 1:  ],
324: 1:  'level': 11,
324: 1:  'nextQuestion': '1234',
324: 1:  'questions': [
324: 1:    '1',
324: 1:    '2',
324: 1:    '3',
324: 1:    '4',
324: 1:    '5',
324: 1:    '6',
324: 1:    '7',
324: 1:    '8',
324: 1:    '9',
324: 1:    '10',
324: 1:    '11',
324: 1:    '12',
324: 1:    '13',
324: 1:    '14',
324: 1:    '15',
324: 1:    '16',
324: 1:    '17',
324: 1:    '18',
324: 1:    '19',
324: 1:    '20',
324: 1:    '30',
324: 1:    '35',
324: 1:    '36',
324: 1:    '46',
324: 1:    '57',
324: 1:    '67',
324: 1:    '89',
324: 1:    '123',
324: 1:    '234',
324: 1:    '345',
324: 1:    '456',
324: 1:    '567',
324: 1:    '678',
324: 1:    '890',
324: 1:    '1234'
324: 1:  ]
324: 1:}
324: 1:Scores: 25801
324: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV', 'CCCXLV', 'CDLVI', 'DLXVII', 'DCLXXVIII', 'DCCCXC', 'MCCXXXIV']')
324: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
325: 1:BoardData {
325: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
325: 1:  'expectedAnswer': 'MMCCCXLV',
325: 1:  'history': [
325: 1:    {
325: 1:      'answer': 'I',
325: 1:      'question': '1',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'II',
325: 1:      'question': '2',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'III',
325: 1:      'question': '3',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'IV',
325: 1:      'question': '4',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'V',
325: 1:      'question': '5',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'VI',
325: 1:      'question': '6',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'VII',
325: 1:      'question': '7',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'VIII',
325: 1:      'question': '8',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'IX',
325: 1:      'question': '9',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'X',
325: 1:      'question': '10',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XI',
325: 1:      'question': '11',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XII',
325: 1:      'question': '12',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XIII',
325: 1:      'question': '13',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XIV',
325: 1:      'question': '14',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XV',
325: 1:      'question': '15',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XVI',
325: 1:      'question': '16',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XVII',
325: 1:      'question': '17',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XVIII',
325: 1:      'question': '18',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XIX',
325: 1:      'question': '19',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XX',
325: 1:      'question': '20',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XXX',
325: 1:      'question': '30',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XXXV',
325: 1:      'question': '35',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XXXVI',
325: 1:      'question': '36',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'XLVI',
325: 1:      'question': '46',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'LVII',
325: 1:      'question': '57',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'LXVII',
325: 1:      'question': '67',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'LXXXIX',
325: 1:      'question': '89',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'CXXIII',
325: 1:      'question': '123',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'CCXXXIV',
325: 1:      'question': '234',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'CCCXLV',
325: 1:      'question': '345',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'CDLVI',
325: 1:      'question': '456',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'DLXVII',
325: 1:      'question': '567',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'DCLXXVIII',
325: 1:      'question': '678',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'DCCCXC',
325: 1:      'question': '890',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': 'MCCXXXIV',
325: 1:      'question': '1234',
325: 1:      'valid': true
325: 1:    }
325: 1:  ],
325: 1:  'info': [
325: 1:    '✅f(1) = I',
325: 1:    '✅f(2) = II',
325: 1:    '✅f(3) = III',
325: 1:    '✅f(4) = IV',
325: 1:    '✅f(5) = V',
325: 1:    '✅f(6) = VI',
325: 1:    '✅f(7) = VII',
325: 1:    '✅f(8) = VIII',
325: 1:    '✅f(9) = IX',
325: 1:    '✅f(10) = X',
325: 1:    '✅f(11) = XI',
325: 1:    '✅f(12) = XII',
325: 1:    '✅f(13) = XIII',
325: 1:    '✅f(14) = XIV',
325: 1:    '✅f(15) = XV',
325: 1:    '✅f(16) = XVI',
325: 1:    '✅f(17) = XVII',
325: 1:    '✅f(18) = XVIII',
325: 1:    '✅f(19) = XIX',
325: 1:    '✅f(20) = XX',
325: 1:    '✅f(30) = XXX',
325: 1:    '✅f(35) = XXXV',
325: 1:    '✅f(36) = XXXVI',
325: 1:    '✅f(46) = XLVI',
325: 1:    '✅f(57) = LVII',
325: 1:    '✅f(67) = LXVII',
325: 1:    '✅f(89) = LXXXIX',
325: 1:    '✅f(123) = CXXIII',
325: 1:    '✅f(234) = CCXXXIV',
325: 1:    '✅f(345) = CCCXLV',
325: 1:    '✅f(456) = CDLVI',
325: 1:    '✅f(567) = DLXVII',
325: 1:    '✅f(678) = DCLXXVIII',
325: 1:    '✅f(890) = DCCCXC',
325: 1:    '✅f(1234) = MCCXXXIV',
325: 1:    '❌f(2345) = ??? != MMCCCXLV'
325: 1:  ],
325: 1:  'level': 11,
325: 1:  'nextQuestion': '2345',
325: 1:  'questions': [
325: 1:    '1',
325: 1:    '2',
325: 1:    '3',
325: 1:    '4',
325: 1:    '5',
325: 1:    '6',
325: 1:    '7',
325: 1:    '8',
325: 1:    '9',
325: 1:    '10',
325: 1:    '11',
325: 1:    '12',
325: 1:    '13',
325: 1:    '14',
325: 1:    '15',
325: 1:    '16',
325: 1:    '17',
325: 1:    '18',
325: 1:    '19',
325: 1:    '20',
325: 1:    '30',
325: 1:    '35',
325: 1:    '36',
325: 1:    '46',
325: 1:    '57',
325: 1:    '67',
325: 1:    '89',
325: 1:    '123',
325: 1:    '234',
325: 1:    '345',
325: 1:    '456',
325: 1:    '567',
325: 1:    '678',
325: 1:    '890',
325: 1:    '1234',
325: 1:    '2345'
325: 1:  ]
325: 1:}
325: 1:Scores: 25811
325: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV', 'CCCXLV', 'CDLVI', 'DLXVII', 'DCLXXVIII', 'DCCCXC', 'MCCXXXIV', 'MMCCCXLV']')
325: 1:Fire Event: PassTest{complexity=37, testCount=37}
------------------------------------------
326: 1:BoardData {
326: 1:  'description': ['Roman number algorithm. Convert arabic number to roman number.'],
326: 1:  'expectedAnswer': 'MMMCDLVI',
326: 1:  'history': [
326: 1:    {
326: 1:      'answer': 'I',
326: 1:      'question': '1',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'II',
326: 1:      'question': '2',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'III',
326: 1:      'question': '3',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'IV',
326: 1:      'question': '4',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'V',
326: 1:      'question': '5',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'VI',
326: 1:      'question': '6',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'VII',
326: 1:      'question': '7',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'VIII',
326: 1:      'question': '8',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'IX',
326: 1:      'question': '9',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'X',
326: 1:      'question': '10',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XI',
326: 1:      'question': '11',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XII',
326: 1:      'question': '12',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XIII',
326: 1:      'question': '13',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XIV',
326: 1:      'question': '14',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XV',
326: 1:      'question': '15',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XVI',
326: 1:      'question': '16',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XVII',
326: 1:      'question': '17',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XVIII',
326: 1:      'question': '18',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XIX',
326: 1:      'question': '19',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XX',
326: 1:      'question': '20',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XXX',
326: 1:      'question': '30',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XXXV',
326: 1:      'question': '35',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XXXVI',
326: 1:      'question': '36',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'XLVI',
326: 1:      'question': '46',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'LVII',
326: 1:      'question': '57',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'LXVII',
326: 1:      'question': '67',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'LXXXIX',
326: 1:      'question': '89',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'CXXIII',
326: 1:      'question': '123',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'CCXXXIV',
326: 1:      'question': '234',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'CCCXLV',
326: 1:      'question': '345',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'CDLVI',
326: 1:      'question': '456',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'DLXVII',
326: 1:      'question': '567',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'DCLXXVIII',
326: 1:      'question': '678',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'DCCCXC',
326: 1:      'question': '890',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'MCCXXXIV',
326: 1:      'question': '1234',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': 'MMCCCXLV',
326: 1:      'question': '2345',
326: 1:      'valid': true
326: 1:    }
326: 1:  ],
326: 1:  'info': [
326: 1:    '✅f(1) = I',
326: 1:    '✅f(2) = II',
326: 1:    '✅f(3) = III',
326: 1:    '✅f(4) = IV',
326: 1:    '✅f(5) = V',
326: 1:    '✅f(6) = VI',
326: 1:    '✅f(7) = VII',
326: 1:    '✅f(8) = VIII',
326: 1:    '✅f(9) = IX',
326: 1:    '✅f(10) = X',
326: 1:    '✅f(11) = XI',
326: 1:    '✅f(12) = XII',
326: 1:    '✅f(13) = XIII',
326: 1:    '✅f(14) = XIV',
326: 1:    '✅f(15) = XV',
326: 1:    '✅f(16) = XVI',
326: 1:    '✅f(17) = XVII',
326: 1:    '✅f(18) = XVIII',
326: 1:    '✅f(19) = XIX',
326: 1:    '✅f(20) = XX',
326: 1:    '✅f(30) = XXX',
326: 1:    '✅f(35) = XXXV',
326: 1:    '✅f(36) = XXXVI',
326: 1:    '✅f(46) = XLVI',
326: 1:    '✅f(57) = LVII',
326: 1:    '✅f(67) = LXVII',
326: 1:    '✅f(89) = LXXXIX',
326: 1:    '✅f(123) = CXXIII',
326: 1:    '✅f(234) = CCXXXIV',
326: 1:    '✅f(345) = CCCXLV',
326: 1:    '✅f(456) = CDLVI',
326: 1:    '✅f(567) = DLXVII',
326: 1:    '✅f(678) = DCLXXVIII',
326: 1:    '✅f(890) = DCCCXC',
326: 1:    '✅f(1234) = MCCXXXIV',
326: 1:    '✅f(2345) = MMCCCXLV',
326: 1:    '❌f(3456) = ??? != MMMCDLVI'
326: 1:  ],
326: 1:  'level': 11,
326: 1:  'nextQuestion': '3456',
326: 1:  'questions': [
326: 1:    '1',
326: 1:    '2',
326: 1:    '3',
326: 1:    '4',
326: 1:    '5',
326: 1:    '6',
326: 1:    '7',
326: 1:    '8',
326: 1:    '9',
326: 1:    '10',
326: 1:    '11',
326: 1:    '12',
326: 1:    '13',
326: 1:    '14',
326: 1:    '15',
326: 1:    '16',
326: 1:    '17',
326: 1:    '18',
326: 1:    '19',
326: 1:    '20',
326: 1:    '30',
326: 1:    '35',
326: 1:    '36',
326: 1:    '46',
326: 1:    '57',
326: 1:    '67',
326: 1:    '89',
326: 1:    '123',
326: 1:    '234',
326: 1:    '345',
326: 1:    '456',
326: 1:    '567',
326: 1:    '678',
326: 1:    '890',
326: 1:    '1234',
326: 1:    '2345',
326: 1:    '3456'
326: 1:  ]
326: 1:}
326: 1:Scores: 25821
326: 1:Answer: message('['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX', 'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX', 'XX', 'XXX', 'XXXV', 'XXXVI', 'XLVI', 'LVII', 'LXVII', 'LXXXIX', 'CXXIII', 'CCXXXIV', 'CCCXLV', 'CDLVI', 'DLXVII', 'DCLXXVIII', 'DCCCXC', 'MCCXXXIV', 'MMCCCXLV', 'MMMCDLVI']')
326: 1:Fire Event: PassTest{complexity=37, testCount=37}
326: 1:Fire Event: NextAlgorithm{complexity=37, time=0}
------------------------------------------
327: 1:BoardData {
327: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
327: 1:  'history': [
327: 1:    {
327: 1:      'answer': 'I',
327: 1:      'question': '1',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'II',
327: 1:      'question': '2',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'III',
327: 1:      'question': '3',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'IV',
327: 1:      'question': '4',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'V',
327: 1:      'question': '5',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'VI',
327: 1:      'question': '6',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'VII',
327: 1:      'question': '7',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'VIII',
327: 1:      'question': '8',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'IX',
327: 1:      'question': '9',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'X',
327: 1:      'question': '10',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XI',
327: 1:      'question': '11',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XII',
327: 1:      'question': '12',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XIII',
327: 1:      'question': '13',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XIV',
327: 1:      'question': '14',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XV',
327: 1:      'question': '15',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XVI',
327: 1:      'question': '16',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XVII',
327: 1:      'question': '17',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XVIII',
327: 1:      'question': '18',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XIX',
327: 1:      'question': '19',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XX',
327: 1:      'question': '20',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XXX',
327: 1:      'question': '30',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XXXV',
327: 1:      'question': '35',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XXXVI',
327: 1:      'question': '36',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'XLVI',
327: 1:      'question': '46',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'LVII',
327: 1:      'question': '57',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'LXVII',
327: 1:      'question': '67',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'LXXXIX',
327: 1:      'question': '89',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'CXXIII',
327: 1:      'question': '123',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'CCXXXIV',
327: 1:      'question': '234',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'CCCXLV',
327: 1:      'question': '345',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'CDLVI',
327: 1:      'question': '456',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'DLXVII',
327: 1:      'question': '567',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'DCLXXVIII',
327: 1:      'question': '678',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'DCCCXC',
327: 1:      'question': '890',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'MCCXXXIV',
327: 1:      'question': '1234',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'MMCCCXLV',
327: 1:      'question': '2345',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': 'MMMCDLVI',
327: 1:      'question': '3456',
327: 1:      'valid': true
327: 1:    }
327: 1:  ],
327: 1:  'info': [
327: 1:    '✅f(1) = I',
327: 1:    '✅f(2) = II',
327: 1:    '✅f(3) = III',
327: 1:    '✅f(4) = IV',
327: 1:    '✅f(5) = V',
327: 1:    '✅f(6) = VI',
327: 1:    '✅f(7) = VII',
327: 1:    '✅f(8) = VIII',
327: 1:    '✅f(9) = IX',
327: 1:    '✅f(10) = X',
327: 1:    '✅f(11) = XI',
327: 1:    '✅f(12) = XII',
327: 1:    '✅f(13) = XIII',
327: 1:    '✅f(14) = XIV',
327: 1:    '✅f(15) = XV',
327: 1:    '✅f(16) = XVI',
327: 1:    '✅f(17) = XVII',
327: 1:    '✅f(18) = XVIII',
327: 1:    '✅f(19) = XIX',
327: 1:    '✅f(20) = XX',
327: 1:    '✅f(30) = XXX',
327: 1:    '✅f(35) = XXXV',
327: 1:    '✅f(36) = XXXVI',
327: 1:    '✅f(46) = XLVI',
327: 1:    '✅f(57) = LVII',
327: 1:    '✅f(67) = LXVII',
327: 1:    '✅f(89) = LXXXIX',
327: 1:    '✅f(123) = CXXIII',
327: 1:    '✅f(234) = CCXXXIV',
327: 1:    '✅f(345) = CCCXLV',
327: 1:    '✅f(456) = CDLVI',
327: 1:    '✅f(567) = DLXVII',
327: 1:    '✅f(678) = DCLXXVIII',
327: 1:    '✅f(890) = DCCCXC',
327: 1:    '✅f(1234) = MCCXXXIV',
327: 1:    '✅f(2345) = MMCCCXLV',
327: 1:    '✅f(3456) = MMMCDLVI'
327: 1:  ],
327: 1:  'level': 11,
327: 1:  'questions': []
327: 1:}
327: 1:Scores: 30825
327: 1:Answer: message('StartNextLevel')
327: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
328: 1:BoardData {
328: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
328: 1:  'expectedAnswer': '1',
328: 1:  'history': [],
328: 1:  'info': ['❌f(I) = ??? != 1'],
328: 1:  'level': 12,
328: 1:  'nextQuestion': 'I',
328: 1:  'questions': ['I']
328: 1:}
328: 1:Scores: 30825
328: 1:Answer: message('['1']')
328: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
329: 1:BoardData {
329: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
329: 1:  'expectedAnswer': '2',
329: 1:  'history': [{
329: 1:    'answer': '1',
329: 1:    'question': 'I',
329: 1:    'valid': true
329: 1:  }],
329: 1:  'info': [
329: 1:    '✅f(I) = 1',
329: 1:    '❌f(II) = ??? != 2'
329: 1:  ],
329: 1:  'level': 12,
329: 1:  'nextQuestion': 'II',
329: 1:  'questions': [
329: 1:    'I',
329: 1:    'II'
329: 1:  ]
329: 1:}
329: 1:Scores: 30835
329: 1:Answer: message('['1', '2']')
329: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
330: 1:BoardData {
330: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
330: 1:  'expectedAnswer': '3',
330: 1:  'history': [
330: 1:    {
330: 1:      'answer': '1',
330: 1:      'question': 'I',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '2',
330: 1:      'question': 'II',
330: 1:      'valid': true
330: 1:    }
330: 1:  ],
330: 1:  'info': [
330: 1:    '✅f(I) = 1',
330: 1:    '✅f(II) = 2',
330: 1:    '❌f(III) = ??? != 3'
330: 1:  ],
330: 1:  'level': 12,
330: 1:  'nextQuestion': 'III',
330: 1:  'questions': [
330: 1:    'I',
330: 1:    'II',
330: 1:    'III'
330: 1:  ]
330: 1:}
330: 1:Scores: 30845
330: 1:Answer: message('['1', '2', '3']')
330: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
331: 1:BoardData {
331: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
331: 1:  'expectedAnswer': '4',
331: 1:  'history': [
331: 1:    {
331: 1:      'answer': '1',
331: 1:      'question': 'I',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '2',
331: 1:      'question': 'II',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '3',
331: 1:      'question': 'III',
331: 1:      'valid': true
331: 1:    }
331: 1:  ],
331: 1:  'info': [
331: 1:    '✅f(I) = 1',
331: 1:    '✅f(II) = 2',
331: 1:    '✅f(III) = 3',
331: 1:    '❌f(IV) = ??? != 4'
331: 1:  ],
331: 1:  'level': 12,
331: 1:  'nextQuestion': 'IV',
331: 1:  'questions': [
331: 1:    'I',
331: 1:    'II',
331: 1:    'III',
331: 1:    'IV'
331: 1:  ]
331: 1:}
331: 1:Scores: 30855
331: 1:Answer: message('['1', '2', '3', '4']')
331: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
332: 1:BoardData {
332: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
332: 1:  'expectedAnswer': '5',
332: 1:  'history': [
332: 1:    {
332: 1:      'answer': '1',
332: 1:      'question': 'I',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '2',
332: 1:      'question': 'II',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '3',
332: 1:      'question': 'III',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '4',
332: 1:      'question': 'IV',
332: 1:      'valid': true
332: 1:    }
332: 1:  ],
332: 1:  'info': [
332: 1:    '✅f(I) = 1',
332: 1:    '✅f(II) = 2',
332: 1:    '✅f(III) = 3',
332: 1:    '✅f(IV) = 4',
332: 1:    '❌f(V) = ??? != 5'
332: 1:  ],
332: 1:  'level': 12,
332: 1:  'nextQuestion': 'V',
332: 1:  'questions': [
332: 1:    'I',
332: 1:    'II',
332: 1:    'III',
332: 1:    'IV',
332: 1:    'V'
332: 1:  ]
332: 1:}
332: 1:Scores: 30865
332: 1:Answer: message('['1', '2', '3', '4', '5']')
332: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
333: 1:BoardData {
333: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
333: 1:  'expectedAnswer': '6',
333: 1:  'history': [
333: 1:    {
333: 1:      'answer': '1',
333: 1:      'question': 'I',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '2',
333: 1:      'question': 'II',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '3',
333: 1:      'question': 'III',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '4',
333: 1:      'question': 'IV',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '5',
333: 1:      'question': 'V',
333: 1:      'valid': true
333: 1:    }
333: 1:  ],
333: 1:  'info': [
333: 1:    '✅f(I) = 1',
333: 1:    '✅f(II) = 2',
333: 1:    '✅f(III) = 3',
333: 1:    '✅f(IV) = 4',
333: 1:    '✅f(V) = 5',
333: 1:    '❌f(VI) = ??? != 6'
333: 1:  ],
333: 1:  'level': 12,
333: 1:  'nextQuestion': 'VI',
333: 1:  'questions': [
333: 1:    'I',
333: 1:    'II',
333: 1:    'III',
333: 1:    'IV',
333: 1:    'V',
333: 1:    'VI'
333: 1:  ]
333: 1:}
333: 1:Scores: 30875
333: 1:Answer: message('['1', '2', '3', '4', '5', '6']')
333: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
334: 1:BoardData {
334: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
334: 1:  'expectedAnswer': '7',
334: 1:  'history': [
334: 1:    {
334: 1:      'answer': '1',
334: 1:      'question': 'I',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '2',
334: 1:      'question': 'II',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '3',
334: 1:      'question': 'III',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '4',
334: 1:      'question': 'IV',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '5',
334: 1:      'question': 'V',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '6',
334: 1:      'question': 'VI',
334: 1:      'valid': true
334: 1:    }
334: 1:  ],
334: 1:  'info': [
334: 1:    '✅f(I) = 1',
334: 1:    '✅f(II) = 2',
334: 1:    '✅f(III) = 3',
334: 1:    '✅f(IV) = 4',
334: 1:    '✅f(V) = 5',
334: 1:    '✅f(VI) = 6',
334: 1:    '❌f(VII) = ??? != 7'
334: 1:  ],
334: 1:  'level': 12,
334: 1:  'nextQuestion': 'VII',
334: 1:  'questions': [
334: 1:    'I',
334: 1:    'II',
334: 1:    'III',
334: 1:    'IV',
334: 1:    'V',
334: 1:    'VI',
334: 1:    'VII'
334: 1:  ]
334: 1:}
334: 1:Scores: 30885
334: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7']')
334: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
335: 1:BoardData {
335: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
335: 1:  'expectedAnswer': '8',
335: 1:  'history': [
335: 1:    {
335: 1:      'answer': '1',
335: 1:      'question': 'I',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '2',
335: 1:      'question': 'II',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '3',
335: 1:      'question': 'III',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '4',
335: 1:      'question': 'IV',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '5',
335: 1:      'question': 'V',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '6',
335: 1:      'question': 'VI',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '7',
335: 1:      'question': 'VII',
335: 1:      'valid': true
335: 1:    }
335: 1:  ],
335: 1:  'info': [
335: 1:    '✅f(I) = 1',
335: 1:    '✅f(II) = 2',
335: 1:    '✅f(III) = 3',
335: 1:    '✅f(IV) = 4',
335: 1:    '✅f(V) = 5',
335: 1:    '✅f(VI) = 6',
335: 1:    '✅f(VII) = 7',
335: 1:    '❌f(VIII) = ??? != 8'
335: 1:  ],
335: 1:  'level': 12,
335: 1:  'nextQuestion': 'VIII',
335: 1:  'questions': [
335: 1:    'I',
335: 1:    'II',
335: 1:    'III',
335: 1:    'IV',
335: 1:    'V',
335: 1:    'VI',
335: 1:    'VII',
335: 1:    'VIII'
335: 1:  ]
335: 1:}
335: 1:Scores: 30895
335: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8']')
335: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
336: 1:BoardData {
336: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
336: 1:  'expectedAnswer': '9',
336: 1:  'history': [
336: 1:    {
336: 1:      'answer': '1',
336: 1:      'question': 'I',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '2',
336: 1:      'question': 'II',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '3',
336: 1:      'question': 'III',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '4',
336: 1:      'question': 'IV',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '5',
336: 1:      'question': 'V',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '6',
336: 1:      'question': 'VI',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '7',
336: 1:      'question': 'VII',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '8',
336: 1:      'question': 'VIII',
336: 1:      'valid': true
336: 1:    }
336: 1:  ],
336: 1:  'info': [
336: 1:    '✅f(I) = 1',
336: 1:    '✅f(II) = 2',
336: 1:    '✅f(III) = 3',
336: 1:    '✅f(IV) = 4',
336: 1:    '✅f(V) = 5',
336: 1:    '✅f(VI) = 6',
336: 1:    '✅f(VII) = 7',
336: 1:    '✅f(VIII) = 8',
336: 1:    '❌f(IX) = ??? != 9'
336: 1:  ],
336: 1:  'level': 12,
336: 1:  'nextQuestion': 'IX',
336: 1:  'questions': [
336: 1:    'I',
336: 1:    'II',
336: 1:    'III',
336: 1:    'IV',
336: 1:    'V',
336: 1:    'VI',
336: 1:    'VII',
336: 1:    'VIII',
336: 1:    'IX'
336: 1:  ]
336: 1:}
336: 1:Scores: 30905
336: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9']')
336: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
337: 1:BoardData {
337: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
337: 1:  'expectedAnswer': '10',
337: 1:  'history': [
337: 1:    {
337: 1:      'answer': '1',
337: 1:      'question': 'I',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '2',
337: 1:      'question': 'II',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '3',
337: 1:      'question': 'III',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '4',
337: 1:      'question': 'IV',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '5',
337: 1:      'question': 'V',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '6',
337: 1:      'question': 'VI',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '7',
337: 1:      'question': 'VII',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '8',
337: 1:      'question': 'VIII',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '9',
337: 1:      'question': 'IX',
337: 1:      'valid': true
337: 1:    }
337: 1:  ],
337: 1:  'info': [
337: 1:    '✅f(I) = 1',
337: 1:    '✅f(II) = 2',
337: 1:    '✅f(III) = 3',
337: 1:    '✅f(IV) = 4',
337: 1:    '✅f(V) = 5',
337: 1:    '✅f(VI) = 6',
337: 1:    '✅f(VII) = 7',
337: 1:    '✅f(VIII) = 8',
337: 1:    '✅f(IX) = 9',
337: 1:    '❌f(X) = ??? != 10'
337: 1:  ],
337: 1:  'level': 12,
337: 1:  'nextQuestion': 'X',
337: 1:  'questions': [
337: 1:    'I',
337: 1:    'II',
337: 1:    'III',
337: 1:    'IV',
337: 1:    'V',
337: 1:    'VI',
337: 1:    'VII',
337: 1:    'VIII',
337: 1:    'IX',
337: 1:    'X'
337: 1:  ]
337: 1:}
337: 1:Scores: 30915
337: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10']')
337: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
338: 1:BoardData {
338: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
338: 1:  'expectedAnswer': '11',
338: 1:  'history': [
338: 1:    {
338: 1:      'answer': '1',
338: 1:      'question': 'I',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '2',
338: 1:      'question': 'II',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '3',
338: 1:      'question': 'III',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '4',
338: 1:      'question': 'IV',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '5',
338: 1:      'question': 'V',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '6',
338: 1:      'question': 'VI',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '7',
338: 1:      'question': 'VII',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '8',
338: 1:      'question': 'VIII',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '9',
338: 1:      'question': 'IX',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '10',
338: 1:      'question': 'X',
338: 1:      'valid': true
338: 1:    }
338: 1:  ],
338: 1:  'info': [
338: 1:    '✅f(I) = 1',
338: 1:    '✅f(II) = 2',
338: 1:    '✅f(III) = 3',
338: 1:    '✅f(IV) = 4',
338: 1:    '✅f(V) = 5',
338: 1:    '✅f(VI) = 6',
338: 1:    '✅f(VII) = 7',
338: 1:    '✅f(VIII) = 8',
338: 1:    '✅f(IX) = 9',
338: 1:    '✅f(X) = 10',
338: 1:    '❌f(XI) = ??? != 11'
338: 1:  ],
338: 1:  'level': 12,
338: 1:  'nextQuestion': 'XI',
338: 1:  'questions': [
338: 1:    'I',
338: 1:    'II',
338: 1:    'III',
338: 1:    'IV',
338: 1:    'V',
338: 1:    'VI',
338: 1:    'VII',
338: 1:    'VIII',
338: 1:    'IX',
338: 1:    'X',
338: 1:    'XI'
338: 1:  ]
338: 1:}
338: 1:Scores: 30925
338: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11']')
338: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
339: 1:BoardData {
339: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
339: 1:  'expectedAnswer': '12',
339: 1:  'history': [
339: 1:    {
339: 1:      'answer': '1',
339: 1:      'question': 'I',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '2',
339: 1:      'question': 'II',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '3',
339: 1:      'question': 'III',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '4',
339: 1:      'question': 'IV',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '5',
339: 1:      'question': 'V',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '6',
339: 1:      'question': 'VI',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '7',
339: 1:      'question': 'VII',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '8',
339: 1:      'question': 'VIII',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '9',
339: 1:      'question': 'IX',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '10',
339: 1:      'question': 'X',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '11',
339: 1:      'question': 'XI',
339: 1:      'valid': true
339: 1:    }
339: 1:  ],
339: 1:  'info': [
339: 1:    '✅f(I) = 1',
339: 1:    '✅f(II) = 2',
339: 1:    '✅f(III) = 3',
339: 1:    '✅f(IV) = 4',
339: 1:    '✅f(V) = 5',
339: 1:    '✅f(VI) = 6',
339: 1:    '✅f(VII) = 7',
339: 1:    '✅f(VIII) = 8',
339: 1:    '✅f(IX) = 9',
339: 1:    '✅f(X) = 10',
339: 1:    '✅f(XI) = 11',
339: 1:    '❌f(XII) = ??? != 12'
339: 1:  ],
339: 1:  'level': 12,
339: 1:  'nextQuestion': 'XII',
339: 1:  'questions': [
339: 1:    'I',
339: 1:    'II',
339: 1:    'III',
339: 1:    'IV',
339: 1:    'V',
339: 1:    'VI',
339: 1:    'VII',
339: 1:    'VIII',
339: 1:    'IX',
339: 1:    'X',
339: 1:    'XI',
339: 1:    'XII'
339: 1:  ]
339: 1:}
339: 1:Scores: 30935
339: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12']')
339: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
340: 1:BoardData {
340: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
340: 1:  'expectedAnswer': '13',
340: 1:  'history': [
340: 1:    {
340: 1:      'answer': '1',
340: 1:      'question': 'I',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '2',
340: 1:      'question': 'II',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '3',
340: 1:      'question': 'III',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '4',
340: 1:      'question': 'IV',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '5',
340: 1:      'question': 'V',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '6',
340: 1:      'question': 'VI',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '7',
340: 1:      'question': 'VII',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '8',
340: 1:      'question': 'VIII',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '9',
340: 1:      'question': 'IX',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '10',
340: 1:      'question': 'X',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '11',
340: 1:      'question': 'XI',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '12',
340: 1:      'question': 'XII',
340: 1:      'valid': true
340: 1:    }
340: 1:  ],
340: 1:  'info': [
340: 1:    '✅f(I) = 1',
340: 1:    '✅f(II) = 2',
340: 1:    '✅f(III) = 3',
340: 1:    '✅f(IV) = 4',
340: 1:    '✅f(V) = 5',
340: 1:    '✅f(VI) = 6',
340: 1:    '✅f(VII) = 7',
340: 1:    '✅f(VIII) = 8',
340: 1:    '✅f(IX) = 9',
340: 1:    '✅f(X) = 10',
340: 1:    '✅f(XI) = 11',
340: 1:    '✅f(XII) = 12',
340: 1:    '❌f(XIII) = ??? != 13'
340: 1:  ],
340: 1:  'level': 12,
340: 1:  'nextQuestion': 'XIII',
340: 1:  'questions': [
340: 1:    'I',
340: 1:    'II',
340: 1:    'III',
340: 1:    'IV',
340: 1:    'V',
340: 1:    'VI',
340: 1:    'VII',
340: 1:    'VIII',
340: 1:    'IX',
340: 1:    'X',
340: 1:    'XI',
340: 1:    'XII',
340: 1:    'XIII'
340: 1:  ]
340: 1:}
340: 1:Scores: 30945
340: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13']')
340: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
341: 1:BoardData {
341: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
341: 1:  'expectedAnswer': '14',
341: 1:  'history': [
341: 1:    {
341: 1:      'answer': '1',
341: 1:      'question': 'I',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '2',
341: 1:      'question': 'II',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '3',
341: 1:      'question': 'III',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '4',
341: 1:      'question': 'IV',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '5',
341: 1:      'question': 'V',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '6',
341: 1:      'question': 'VI',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '7',
341: 1:      'question': 'VII',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '8',
341: 1:      'question': 'VIII',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '9',
341: 1:      'question': 'IX',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '10',
341: 1:      'question': 'X',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '11',
341: 1:      'question': 'XI',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '12',
341: 1:      'question': 'XII',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '13',
341: 1:      'question': 'XIII',
341: 1:      'valid': true
341: 1:    }
341: 1:  ],
341: 1:  'info': [
341: 1:    '✅f(I) = 1',
341: 1:    '✅f(II) = 2',
341: 1:    '✅f(III) = 3',
341: 1:    '✅f(IV) = 4',
341: 1:    '✅f(V) = 5',
341: 1:    '✅f(VI) = 6',
341: 1:    '✅f(VII) = 7',
341: 1:    '✅f(VIII) = 8',
341: 1:    '✅f(IX) = 9',
341: 1:    '✅f(X) = 10',
341: 1:    '✅f(XI) = 11',
341: 1:    '✅f(XII) = 12',
341: 1:    '✅f(XIII) = 13',
341: 1:    '❌f(XIV) = ??? != 14'
341: 1:  ],
341: 1:  'level': 12,
341: 1:  'nextQuestion': 'XIV',
341: 1:  'questions': [
341: 1:    'I',
341: 1:    'II',
341: 1:    'III',
341: 1:    'IV',
341: 1:    'V',
341: 1:    'VI',
341: 1:    'VII',
341: 1:    'VIII',
341: 1:    'IX',
341: 1:    'X',
341: 1:    'XI',
341: 1:    'XII',
341: 1:    'XIII',
341: 1:    'XIV'
341: 1:  ]
341: 1:}
341: 1:Scores: 30955
341: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14']')
341: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
342: 1:BoardData {
342: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
342: 1:  'expectedAnswer': '15',
342: 1:  'history': [
342: 1:    {
342: 1:      'answer': '1',
342: 1:      'question': 'I',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '2',
342: 1:      'question': 'II',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '3',
342: 1:      'question': 'III',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '4',
342: 1:      'question': 'IV',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '5',
342: 1:      'question': 'V',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '6',
342: 1:      'question': 'VI',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '7',
342: 1:      'question': 'VII',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '8',
342: 1:      'question': 'VIII',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '9',
342: 1:      'question': 'IX',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '10',
342: 1:      'question': 'X',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '11',
342: 1:      'question': 'XI',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '12',
342: 1:      'question': 'XII',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '13',
342: 1:      'question': 'XIII',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '14',
342: 1:      'question': 'XIV',
342: 1:      'valid': true
342: 1:    }
342: 1:  ],
342: 1:  'info': [
342: 1:    '✅f(I) = 1',
342: 1:    '✅f(II) = 2',
342: 1:    '✅f(III) = 3',
342: 1:    '✅f(IV) = 4',
342: 1:    '✅f(V) = 5',
342: 1:    '✅f(VI) = 6',
342: 1:    '✅f(VII) = 7',
342: 1:    '✅f(VIII) = 8',
342: 1:    '✅f(IX) = 9',
342: 1:    '✅f(X) = 10',
342: 1:    '✅f(XI) = 11',
342: 1:    '✅f(XII) = 12',
342: 1:    '✅f(XIII) = 13',
342: 1:    '✅f(XIV) = 14',
342: 1:    '❌f(XV) = ??? != 15'
342: 1:  ],
342: 1:  'level': 12,
342: 1:  'nextQuestion': 'XV',
342: 1:  'questions': [
342: 1:    'I',
342: 1:    'II',
342: 1:    'III',
342: 1:    'IV',
342: 1:    'V',
342: 1:    'VI',
342: 1:    'VII',
342: 1:    'VIII',
342: 1:    'IX',
342: 1:    'X',
342: 1:    'XI',
342: 1:    'XII',
342: 1:    'XIII',
342: 1:    'XIV',
342: 1:    'XV'
342: 1:  ]
342: 1:}
342: 1:Scores: 30965
342: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15']')
342: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
343: 1:BoardData {
343: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
343: 1:  'expectedAnswer': '16',
343: 1:  'history': [
343: 1:    {
343: 1:      'answer': '1',
343: 1:      'question': 'I',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '2',
343: 1:      'question': 'II',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '3',
343: 1:      'question': 'III',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '4',
343: 1:      'question': 'IV',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '5',
343: 1:      'question': 'V',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '6',
343: 1:      'question': 'VI',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '7',
343: 1:      'question': 'VII',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '8',
343: 1:      'question': 'VIII',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '9',
343: 1:      'question': 'IX',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '10',
343: 1:      'question': 'X',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '11',
343: 1:      'question': 'XI',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '12',
343: 1:      'question': 'XII',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '13',
343: 1:      'question': 'XIII',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '14',
343: 1:      'question': 'XIV',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '15',
343: 1:      'question': 'XV',
343: 1:      'valid': true
343: 1:    }
343: 1:  ],
343: 1:  'info': [
343: 1:    '✅f(I) = 1',
343: 1:    '✅f(II) = 2',
343: 1:    '✅f(III) = 3',
343: 1:    '✅f(IV) = 4',
343: 1:    '✅f(V) = 5',
343: 1:    '✅f(VI) = 6',
343: 1:    '✅f(VII) = 7',
343: 1:    '✅f(VIII) = 8',
343: 1:    '✅f(IX) = 9',
343: 1:    '✅f(X) = 10',
343: 1:    '✅f(XI) = 11',
343: 1:    '✅f(XII) = 12',
343: 1:    '✅f(XIII) = 13',
343: 1:    '✅f(XIV) = 14',
343: 1:    '✅f(XV) = 15',
343: 1:    '❌f(XVI) = ??? != 16'
343: 1:  ],
343: 1:  'level': 12,
343: 1:  'nextQuestion': 'XVI',
343: 1:  'questions': [
343: 1:    'I',
343: 1:    'II',
343: 1:    'III',
343: 1:    'IV',
343: 1:    'V',
343: 1:    'VI',
343: 1:    'VII',
343: 1:    'VIII',
343: 1:    'IX',
343: 1:    'X',
343: 1:    'XI',
343: 1:    'XII',
343: 1:    'XIII',
343: 1:    'XIV',
343: 1:    'XV',
343: 1:    'XVI'
343: 1:  ]
343: 1:}
343: 1:Scores: 30975
343: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16']')
343: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
344: 1:BoardData {
344: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
344: 1:  'expectedAnswer': '17',
344: 1:  'history': [
344: 1:    {
344: 1:      'answer': '1',
344: 1:      'question': 'I',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '2',
344: 1:      'question': 'II',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '3',
344: 1:      'question': 'III',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '4',
344: 1:      'question': 'IV',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '5',
344: 1:      'question': 'V',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '6',
344: 1:      'question': 'VI',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '7',
344: 1:      'question': 'VII',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '8',
344: 1:      'question': 'VIII',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '9',
344: 1:      'question': 'IX',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '10',
344: 1:      'question': 'X',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '11',
344: 1:      'question': 'XI',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '12',
344: 1:      'question': 'XII',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '13',
344: 1:      'question': 'XIII',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '14',
344: 1:      'question': 'XIV',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '15',
344: 1:      'question': 'XV',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '16',
344: 1:      'question': 'XVI',
344: 1:      'valid': true
344: 1:    }
344: 1:  ],
344: 1:  'info': [
344: 1:    '✅f(I) = 1',
344: 1:    '✅f(II) = 2',
344: 1:    '✅f(III) = 3',
344: 1:    '✅f(IV) = 4',
344: 1:    '✅f(V) = 5',
344: 1:    '✅f(VI) = 6',
344: 1:    '✅f(VII) = 7',
344: 1:    '✅f(VIII) = 8',
344: 1:    '✅f(IX) = 9',
344: 1:    '✅f(X) = 10',
344: 1:    '✅f(XI) = 11',
344: 1:    '✅f(XII) = 12',
344: 1:    '✅f(XIII) = 13',
344: 1:    '✅f(XIV) = 14',
344: 1:    '✅f(XV) = 15',
344: 1:    '✅f(XVI) = 16',
344: 1:    '❌f(XVII) = ??? != 17'
344: 1:  ],
344: 1:  'level': 12,
344: 1:  'nextQuestion': 'XVII',
344: 1:  'questions': [
344: 1:    'I',
344: 1:    'II',
344: 1:    'III',
344: 1:    'IV',
344: 1:    'V',
344: 1:    'VI',
344: 1:    'VII',
344: 1:    'VIII',
344: 1:    'IX',
344: 1:    'X',
344: 1:    'XI',
344: 1:    'XII',
344: 1:    'XIII',
344: 1:    'XIV',
344: 1:    'XV',
344: 1:    'XVI',
344: 1:    'XVII'
344: 1:  ]
344: 1:}
344: 1:Scores: 30985
344: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17']')
344: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
345: 1:BoardData {
345: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
345: 1:  'expectedAnswer': '18',
345: 1:  'history': [
345: 1:    {
345: 1:      'answer': '1',
345: 1:      'question': 'I',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '2',
345: 1:      'question': 'II',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '3',
345: 1:      'question': 'III',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '4',
345: 1:      'question': 'IV',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '5',
345: 1:      'question': 'V',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '6',
345: 1:      'question': 'VI',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '7',
345: 1:      'question': 'VII',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '8',
345: 1:      'question': 'VIII',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '9',
345: 1:      'question': 'IX',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '10',
345: 1:      'question': 'X',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '11',
345: 1:      'question': 'XI',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '12',
345: 1:      'question': 'XII',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '13',
345: 1:      'question': 'XIII',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '14',
345: 1:      'question': 'XIV',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '15',
345: 1:      'question': 'XV',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '16',
345: 1:      'question': 'XVI',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '17',
345: 1:      'question': 'XVII',
345: 1:      'valid': true
345: 1:    }
345: 1:  ],
345: 1:  'info': [
345: 1:    '✅f(I) = 1',
345: 1:    '✅f(II) = 2',
345: 1:    '✅f(III) = 3',
345: 1:    '✅f(IV) = 4',
345: 1:    '✅f(V) = 5',
345: 1:    '✅f(VI) = 6',
345: 1:    '✅f(VII) = 7',
345: 1:    '✅f(VIII) = 8',
345: 1:    '✅f(IX) = 9',
345: 1:    '✅f(X) = 10',
345: 1:    '✅f(XI) = 11',
345: 1:    '✅f(XII) = 12',
345: 1:    '✅f(XIII) = 13',
345: 1:    '✅f(XIV) = 14',
345: 1:    '✅f(XV) = 15',
345: 1:    '✅f(XVI) = 16',
345: 1:    '✅f(XVII) = 17',
345: 1:    '❌f(XVIII) = ??? != 18'
345: 1:  ],
345: 1:  'level': 12,
345: 1:  'nextQuestion': 'XVIII',
345: 1:  'questions': [
345: 1:    'I',
345: 1:    'II',
345: 1:    'III',
345: 1:    'IV',
345: 1:    'V',
345: 1:    'VI',
345: 1:    'VII',
345: 1:    'VIII',
345: 1:    'IX',
345: 1:    'X',
345: 1:    'XI',
345: 1:    'XII',
345: 1:    'XIII',
345: 1:    'XIV',
345: 1:    'XV',
345: 1:    'XVI',
345: 1:    'XVII',
345: 1:    'XVIII'
345: 1:  ]
345: 1:}
345: 1:Scores: 30995
345: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18']')
345: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
346: 1:BoardData {
346: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
346: 1:  'expectedAnswer': '19',
346: 1:  'history': [
346: 1:    {
346: 1:      'answer': '1',
346: 1:      'question': 'I',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '2',
346: 1:      'question': 'II',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '3',
346: 1:      'question': 'III',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '4',
346: 1:      'question': 'IV',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '5',
346: 1:      'question': 'V',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '6',
346: 1:      'question': 'VI',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '7',
346: 1:      'question': 'VII',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '8',
346: 1:      'question': 'VIII',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '9',
346: 1:      'question': 'IX',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '10',
346: 1:      'question': 'X',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '11',
346: 1:      'question': 'XI',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '12',
346: 1:      'question': 'XII',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '13',
346: 1:      'question': 'XIII',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '14',
346: 1:      'question': 'XIV',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '15',
346: 1:      'question': 'XV',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '16',
346: 1:      'question': 'XVI',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '17',
346: 1:      'question': 'XVII',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '18',
346: 1:      'question': 'XVIII',
346: 1:      'valid': true
346: 1:    }
346: 1:  ],
346: 1:  'info': [
346: 1:    '✅f(I) = 1',
346: 1:    '✅f(II) = 2',
346: 1:    '✅f(III) = 3',
346: 1:    '✅f(IV) = 4',
346: 1:    '✅f(V) = 5',
346: 1:    '✅f(VI) = 6',
346: 1:    '✅f(VII) = 7',
346: 1:    '✅f(VIII) = 8',
346: 1:    '✅f(IX) = 9',
346: 1:    '✅f(X) = 10',
346: 1:    '✅f(XI) = 11',
346: 1:    '✅f(XII) = 12',
346: 1:    '✅f(XIII) = 13',
346: 1:    '✅f(XIV) = 14',
346: 1:    '✅f(XV) = 15',
346: 1:    '✅f(XVI) = 16',
346: 1:    '✅f(XVII) = 17',
346: 1:    '✅f(XVIII) = 18',
346: 1:    '❌f(XIX) = ??? != 19'
346: 1:  ],
346: 1:  'level': 12,
346: 1:  'nextQuestion': 'XIX',
346: 1:  'questions': [
346: 1:    'I',
346: 1:    'II',
346: 1:    'III',
346: 1:    'IV',
346: 1:    'V',
346: 1:    'VI',
346: 1:    'VII',
346: 1:    'VIII',
346: 1:    'IX',
346: 1:    'X',
346: 1:    'XI',
346: 1:    'XII',
346: 1:    'XIII',
346: 1:    'XIV',
346: 1:    'XV',
346: 1:    'XVI',
346: 1:    'XVII',
346: 1:    'XVIII',
346: 1:    'XIX'
346: 1:  ]
346: 1:}
346: 1:Scores: 31005
346: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19']')
346: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
347: 1:BoardData {
347: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
347: 1:  'expectedAnswer': '20',
347: 1:  'history': [
347: 1:    {
347: 1:      'answer': '1',
347: 1:      'question': 'I',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '2',
347: 1:      'question': 'II',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '3',
347: 1:      'question': 'III',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '4',
347: 1:      'question': 'IV',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '5',
347: 1:      'question': 'V',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '6',
347: 1:      'question': 'VI',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '7',
347: 1:      'question': 'VII',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '8',
347: 1:      'question': 'VIII',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '9',
347: 1:      'question': 'IX',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '10',
347: 1:      'question': 'X',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '11',
347: 1:      'question': 'XI',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '12',
347: 1:      'question': 'XII',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '13',
347: 1:      'question': 'XIII',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '14',
347: 1:      'question': 'XIV',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '15',
347: 1:      'question': 'XV',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '16',
347: 1:      'question': 'XVI',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '17',
347: 1:      'question': 'XVII',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '18',
347: 1:      'question': 'XVIII',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '19',
347: 1:      'question': 'XIX',
347: 1:      'valid': true
347: 1:    }
347: 1:  ],
347: 1:  'info': [
347: 1:    '✅f(I) = 1',
347: 1:    '✅f(II) = 2',
347: 1:    '✅f(III) = 3',
347: 1:    '✅f(IV) = 4',
347: 1:    '✅f(V) = 5',
347: 1:    '✅f(VI) = 6',
347: 1:    '✅f(VII) = 7',
347: 1:    '✅f(VIII) = 8',
347: 1:    '✅f(IX) = 9',
347: 1:    '✅f(X) = 10',
347: 1:    '✅f(XI) = 11',
347: 1:    '✅f(XII) = 12',
347: 1:    '✅f(XIII) = 13',
347: 1:    '✅f(XIV) = 14',
347: 1:    '✅f(XV) = 15',
347: 1:    '✅f(XVI) = 16',
347: 1:    '✅f(XVII) = 17',
347: 1:    '✅f(XVIII) = 18',
347: 1:    '✅f(XIX) = 19',
347: 1:    '❌f(XX) = ??? != 20'
347: 1:  ],
347: 1:  'level': 12,
347: 1:  'nextQuestion': 'XX',
347: 1:  'questions': [
347: 1:    'I',
347: 1:    'II',
347: 1:    'III',
347: 1:    'IV',
347: 1:    'V',
347: 1:    'VI',
347: 1:    'VII',
347: 1:    'VIII',
347: 1:    'IX',
347: 1:    'X',
347: 1:    'XI',
347: 1:    'XII',
347: 1:    'XIII',
347: 1:    'XIV',
347: 1:    'XV',
347: 1:    'XVI',
347: 1:    'XVII',
347: 1:    'XVIII',
347: 1:    'XIX',
347: 1:    'XX'
347: 1:  ]
347: 1:}
347: 1:Scores: 31015
347: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20']')
347: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
348: 1:BoardData {
348: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
348: 1:  'expectedAnswer': '30',
348: 1:  'history': [
348: 1:    {
348: 1:      'answer': '1',
348: 1:      'question': 'I',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '2',
348: 1:      'question': 'II',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '3',
348: 1:      'question': 'III',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '4',
348: 1:      'question': 'IV',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '5',
348: 1:      'question': 'V',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '6',
348: 1:      'question': 'VI',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '7',
348: 1:      'question': 'VII',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '8',
348: 1:      'question': 'VIII',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '9',
348: 1:      'question': 'IX',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '10',
348: 1:      'question': 'X',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '11',
348: 1:      'question': 'XI',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '12',
348: 1:      'question': 'XII',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '13',
348: 1:      'question': 'XIII',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '14',
348: 1:      'question': 'XIV',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '15',
348: 1:      'question': 'XV',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '16',
348: 1:      'question': 'XVI',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '17',
348: 1:      'question': 'XVII',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '18',
348: 1:      'question': 'XVIII',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '19',
348: 1:      'question': 'XIX',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '20',
348: 1:      'question': 'XX',
348: 1:      'valid': true
348: 1:    }
348: 1:  ],
348: 1:  'info': [
348: 1:    '✅f(I) = 1',
348: 1:    '✅f(II) = 2',
348: 1:    '✅f(III) = 3',
348: 1:    '✅f(IV) = 4',
348: 1:    '✅f(V) = 5',
348: 1:    '✅f(VI) = 6',
348: 1:    '✅f(VII) = 7',
348: 1:    '✅f(VIII) = 8',
348: 1:    '✅f(IX) = 9',
348: 1:    '✅f(X) = 10',
348: 1:    '✅f(XI) = 11',
348: 1:    '✅f(XII) = 12',
348: 1:    '✅f(XIII) = 13',
348: 1:    '✅f(XIV) = 14',
348: 1:    '✅f(XV) = 15',
348: 1:    '✅f(XVI) = 16',
348: 1:    '✅f(XVII) = 17',
348: 1:    '✅f(XVIII) = 18',
348: 1:    '✅f(XIX) = 19',
348: 1:    '✅f(XX) = 20',
348: 1:    '❌f(XXX) = ??? != 30'
348: 1:  ],
348: 1:  'level': 12,
348: 1:  'nextQuestion': 'XXX',
348: 1:  'questions': [
348: 1:    'I',
348: 1:    'II',
348: 1:    'III',
348: 1:    'IV',
348: 1:    'V',
348: 1:    'VI',
348: 1:    'VII',
348: 1:    'VIII',
348: 1:    'IX',
348: 1:    'X',
348: 1:    'XI',
348: 1:    'XII',
348: 1:    'XIII',
348: 1:    'XIV',
348: 1:    'XV',
348: 1:    'XVI',
348: 1:    'XVII',
348: 1:    'XVIII',
348: 1:    'XIX',
348: 1:    'XX',
348: 1:    'XXX'
348: 1:  ]
348: 1:}
348: 1:Scores: 31025
348: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30']')
348: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
349: 1:BoardData {
349: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
349: 1:  'expectedAnswer': '35',
349: 1:  'history': [
349: 1:    {
349: 1:      'answer': '1',
349: 1:      'question': 'I',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '2',
349: 1:      'question': 'II',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '3',
349: 1:      'question': 'III',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '4',
349: 1:      'question': 'IV',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '5',
349: 1:      'question': 'V',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '6',
349: 1:      'question': 'VI',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '7',
349: 1:      'question': 'VII',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '8',
349: 1:      'question': 'VIII',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '9',
349: 1:      'question': 'IX',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '10',
349: 1:      'question': 'X',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '11',
349: 1:      'question': 'XI',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '12',
349: 1:      'question': 'XII',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '13',
349: 1:      'question': 'XIII',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '14',
349: 1:      'question': 'XIV',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '15',
349: 1:      'question': 'XV',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '16',
349: 1:      'question': 'XVI',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '17',
349: 1:      'question': 'XVII',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '18',
349: 1:      'question': 'XVIII',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '19',
349: 1:      'question': 'XIX',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '20',
349: 1:      'question': 'XX',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '30',
349: 1:      'question': 'XXX',
349: 1:      'valid': true
349: 1:    }
349: 1:  ],
349: 1:  'info': [
349: 1:    '✅f(I) = 1',
349: 1:    '✅f(II) = 2',
349: 1:    '✅f(III) = 3',
349: 1:    '✅f(IV) = 4',
349: 1:    '✅f(V) = 5',
349: 1:    '✅f(VI) = 6',
349: 1:    '✅f(VII) = 7',
349: 1:    '✅f(VIII) = 8',
349: 1:    '✅f(IX) = 9',
349: 1:    '✅f(X) = 10',
349: 1:    '✅f(XI) = 11',
349: 1:    '✅f(XII) = 12',
349: 1:    '✅f(XIII) = 13',
349: 1:    '✅f(XIV) = 14',
349: 1:    '✅f(XV) = 15',
349: 1:    '✅f(XVI) = 16',
349: 1:    '✅f(XVII) = 17',
349: 1:    '✅f(XVIII) = 18',
349: 1:    '✅f(XIX) = 19',
349: 1:    '✅f(XX) = 20',
349: 1:    '✅f(XXX) = 30',
349: 1:    '❌f(XXXV) = ??? != 35'
349: 1:  ],
349: 1:  'level': 12,
349: 1:  'nextQuestion': 'XXXV',
349: 1:  'questions': [
349: 1:    'I',
349: 1:    'II',
349: 1:    'III',
349: 1:    'IV',
349: 1:    'V',
349: 1:    'VI',
349: 1:    'VII',
349: 1:    'VIII',
349: 1:    'IX',
349: 1:    'X',
349: 1:    'XI',
349: 1:    'XII',
349: 1:    'XIII',
349: 1:    'XIV',
349: 1:    'XV',
349: 1:    'XVI',
349: 1:    'XVII',
349: 1:    'XVIII',
349: 1:    'XIX',
349: 1:    'XX',
349: 1:    'XXX',
349: 1:    'XXXV'
349: 1:  ]
349: 1:}
349: 1:Scores: 31035
349: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35']')
349: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
350: 1:BoardData {
350: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
350: 1:  'expectedAnswer': '36',
350: 1:  'history': [
350: 1:    {
350: 1:      'answer': '1',
350: 1:      'question': 'I',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '2',
350: 1:      'question': 'II',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '3',
350: 1:      'question': 'III',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '4',
350: 1:      'question': 'IV',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '5',
350: 1:      'question': 'V',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '6',
350: 1:      'question': 'VI',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '7',
350: 1:      'question': 'VII',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '8',
350: 1:      'question': 'VIII',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '9',
350: 1:      'question': 'IX',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '10',
350: 1:      'question': 'X',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '11',
350: 1:      'question': 'XI',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '12',
350: 1:      'question': 'XII',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '13',
350: 1:      'question': 'XIII',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '14',
350: 1:      'question': 'XIV',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '15',
350: 1:      'question': 'XV',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '16',
350: 1:      'question': 'XVI',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '17',
350: 1:      'question': 'XVII',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '18',
350: 1:      'question': 'XVIII',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '19',
350: 1:      'question': 'XIX',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '20',
350: 1:      'question': 'XX',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '30',
350: 1:      'question': 'XXX',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '35',
350: 1:      'question': 'XXXV',
350: 1:      'valid': true
350: 1:    }
350: 1:  ],
350: 1:  'info': [
350: 1:    '✅f(I) = 1',
350: 1:    '✅f(II) = 2',
350: 1:    '✅f(III) = 3',
350: 1:    '✅f(IV) = 4',
350: 1:    '✅f(V) = 5',
350: 1:    '✅f(VI) = 6',
350: 1:    '✅f(VII) = 7',
350: 1:    '✅f(VIII) = 8',
350: 1:    '✅f(IX) = 9',
350: 1:    '✅f(X) = 10',
350: 1:    '✅f(XI) = 11',
350: 1:    '✅f(XII) = 12',
350: 1:    '✅f(XIII) = 13',
350: 1:    '✅f(XIV) = 14',
350: 1:    '✅f(XV) = 15',
350: 1:    '✅f(XVI) = 16',
350: 1:    '✅f(XVII) = 17',
350: 1:    '✅f(XVIII) = 18',
350: 1:    '✅f(XIX) = 19',
350: 1:    '✅f(XX) = 20',
350: 1:    '✅f(XXX) = 30',
350: 1:    '✅f(XXXV) = 35',
350: 1:    '❌f(XXXVI) = ??? != 36'
350: 1:  ],
350: 1:  'level': 12,
350: 1:  'nextQuestion': 'XXXVI',
350: 1:  'questions': [
350: 1:    'I',
350: 1:    'II',
350: 1:    'III',
350: 1:    'IV',
350: 1:    'V',
350: 1:    'VI',
350: 1:    'VII',
350: 1:    'VIII',
350: 1:    'IX',
350: 1:    'X',
350: 1:    'XI',
350: 1:    'XII',
350: 1:    'XIII',
350: 1:    'XIV',
350: 1:    'XV',
350: 1:    'XVI',
350: 1:    'XVII',
350: 1:    'XVIII',
350: 1:    'XIX',
350: 1:    'XX',
350: 1:    'XXX',
350: 1:    'XXXV',
350: 1:    'XXXVI'
350: 1:  ]
350: 1:}
350: 1:Scores: 31045
350: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36']')
350: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
351: 1:BoardData {
351: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
351: 1:  'expectedAnswer': '46',
351: 1:  'history': [
351: 1:    {
351: 1:      'answer': '1',
351: 1:      'question': 'I',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '2',
351: 1:      'question': 'II',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '3',
351: 1:      'question': 'III',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '4',
351: 1:      'question': 'IV',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '5',
351: 1:      'question': 'V',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '6',
351: 1:      'question': 'VI',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '7',
351: 1:      'question': 'VII',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '8',
351: 1:      'question': 'VIII',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '9',
351: 1:      'question': 'IX',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '10',
351: 1:      'question': 'X',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '11',
351: 1:      'question': 'XI',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '12',
351: 1:      'question': 'XII',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '13',
351: 1:      'question': 'XIII',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '14',
351: 1:      'question': 'XIV',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '15',
351: 1:      'question': 'XV',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '16',
351: 1:      'question': 'XVI',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '17',
351: 1:      'question': 'XVII',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '18',
351: 1:      'question': 'XVIII',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '19',
351: 1:      'question': 'XIX',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '20',
351: 1:      'question': 'XX',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '30',
351: 1:      'question': 'XXX',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '35',
351: 1:      'question': 'XXXV',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '36',
351: 1:      'question': 'XXXVI',
351: 1:      'valid': true
351: 1:    }
351: 1:  ],
351: 1:  'info': [
351: 1:    '✅f(I) = 1',
351: 1:    '✅f(II) = 2',
351: 1:    '✅f(III) = 3',
351: 1:    '✅f(IV) = 4',
351: 1:    '✅f(V) = 5',
351: 1:    '✅f(VI) = 6',
351: 1:    '✅f(VII) = 7',
351: 1:    '✅f(VIII) = 8',
351: 1:    '✅f(IX) = 9',
351: 1:    '✅f(X) = 10',
351: 1:    '✅f(XI) = 11',
351: 1:    '✅f(XII) = 12',
351: 1:    '✅f(XIII) = 13',
351: 1:    '✅f(XIV) = 14',
351: 1:    '✅f(XV) = 15',
351: 1:    '✅f(XVI) = 16',
351: 1:    '✅f(XVII) = 17',
351: 1:    '✅f(XVIII) = 18',
351: 1:    '✅f(XIX) = 19',
351: 1:    '✅f(XX) = 20',
351: 1:    '✅f(XXX) = 30',
351: 1:    '✅f(XXXV) = 35',
351: 1:    '✅f(XXXVI) = 36',
351: 1:    '❌f(XLVI) = ??? != 46'
351: 1:  ],
351: 1:  'level': 12,
351: 1:  'nextQuestion': 'XLVI',
351: 1:  'questions': [
351: 1:    'I',
351: 1:    'II',
351: 1:    'III',
351: 1:    'IV',
351: 1:    'V',
351: 1:    'VI',
351: 1:    'VII',
351: 1:    'VIII',
351: 1:    'IX',
351: 1:    'X',
351: 1:    'XI',
351: 1:    'XII',
351: 1:    'XIII',
351: 1:    'XIV',
351: 1:    'XV',
351: 1:    'XVI',
351: 1:    'XVII',
351: 1:    'XVIII',
351: 1:    'XIX',
351: 1:    'XX',
351: 1:    'XXX',
351: 1:    'XXXV',
351: 1:    'XXXVI',
351: 1:    'XLVI'
351: 1:  ]
351: 1:}
351: 1:Scores: 31055
351: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46']')
351: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
352: 1:BoardData {
352: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
352: 1:  'expectedAnswer': '57',
352: 1:  'history': [
352: 1:    {
352: 1:      'answer': '1',
352: 1:      'question': 'I',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '2',
352: 1:      'question': 'II',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '3',
352: 1:      'question': 'III',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '4',
352: 1:      'question': 'IV',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '5',
352: 1:      'question': 'V',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '6',
352: 1:      'question': 'VI',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '7',
352: 1:      'question': 'VII',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '8',
352: 1:      'question': 'VIII',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '9',
352: 1:      'question': 'IX',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '10',
352: 1:      'question': 'X',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '11',
352: 1:      'question': 'XI',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '12',
352: 1:      'question': 'XII',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '13',
352: 1:      'question': 'XIII',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '14',
352: 1:      'question': 'XIV',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '15',
352: 1:      'question': 'XV',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '16',
352: 1:      'question': 'XVI',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '17',
352: 1:      'question': 'XVII',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '18',
352: 1:      'question': 'XVIII',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '19',
352: 1:      'question': 'XIX',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '20',
352: 1:      'question': 'XX',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '30',
352: 1:      'question': 'XXX',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '35',
352: 1:      'question': 'XXXV',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '36',
352: 1:      'question': 'XXXVI',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '46',
352: 1:      'question': 'XLVI',
352: 1:      'valid': true
352: 1:    }
352: 1:  ],
352: 1:  'info': [
352: 1:    '✅f(I) = 1',
352: 1:    '✅f(II) = 2',
352: 1:    '✅f(III) = 3',
352: 1:    '✅f(IV) = 4',
352: 1:    '✅f(V) = 5',
352: 1:    '✅f(VI) = 6',
352: 1:    '✅f(VII) = 7',
352: 1:    '✅f(VIII) = 8',
352: 1:    '✅f(IX) = 9',
352: 1:    '✅f(X) = 10',
352: 1:    '✅f(XI) = 11',
352: 1:    '✅f(XII) = 12',
352: 1:    '✅f(XIII) = 13',
352: 1:    '✅f(XIV) = 14',
352: 1:    '✅f(XV) = 15',
352: 1:    '✅f(XVI) = 16',
352: 1:    '✅f(XVII) = 17',
352: 1:    '✅f(XVIII) = 18',
352: 1:    '✅f(XIX) = 19',
352: 1:    '✅f(XX) = 20',
352: 1:    '✅f(XXX) = 30',
352: 1:    '✅f(XXXV) = 35',
352: 1:    '✅f(XXXVI) = 36',
352: 1:    '✅f(XLVI) = 46',
352: 1:    '❌f(LVII) = ??? != 57'
352: 1:  ],
352: 1:  'level': 12,
352: 1:  'nextQuestion': 'LVII',
352: 1:  'questions': [
352: 1:    'I',
352: 1:    'II',
352: 1:    'III',
352: 1:    'IV',
352: 1:    'V',
352: 1:    'VI',
352: 1:    'VII',
352: 1:    'VIII',
352: 1:    'IX',
352: 1:    'X',
352: 1:    'XI',
352: 1:    'XII',
352: 1:    'XIII',
352: 1:    'XIV',
352: 1:    'XV',
352: 1:    'XVI',
352: 1:    'XVII',
352: 1:    'XVIII',
352: 1:    'XIX',
352: 1:    'XX',
352: 1:    'XXX',
352: 1:    'XXXV',
352: 1:    'XXXVI',
352: 1:    'XLVI',
352: 1:    'LVII'
352: 1:  ]
352: 1:}
352: 1:Scores: 31065
352: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57']')
352: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
353: 1:BoardData {
353: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
353: 1:  'expectedAnswer': '67',
353: 1:  'history': [
353: 1:    {
353: 1:      'answer': '1',
353: 1:      'question': 'I',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '2',
353: 1:      'question': 'II',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '3',
353: 1:      'question': 'III',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '4',
353: 1:      'question': 'IV',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '5',
353: 1:      'question': 'V',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '6',
353: 1:      'question': 'VI',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '7',
353: 1:      'question': 'VII',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '8',
353: 1:      'question': 'VIII',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '9',
353: 1:      'question': 'IX',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '10',
353: 1:      'question': 'X',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '11',
353: 1:      'question': 'XI',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '12',
353: 1:      'question': 'XII',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '13',
353: 1:      'question': 'XIII',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '14',
353: 1:      'question': 'XIV',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '15',
353: 1:      'question': 'XV',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '16',
353: 1:      'question': 'XVI',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '17',
353: 1:      'question': 'XVII',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '18',
353: 1:      'question': 'XVIII',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '19',
353: 1:      'question': 'XIX',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '20',
353: 1:      'question': 'XX',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '30',
353: 1:      'question': 'XXX',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '35',
353: 1:      'question': 'XXXV',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '36',
353: 1:      'question': 'XXXVI',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '46',
353: 1:      'question': 'XLVI',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '57',
353: 1:      'question': 'LVII',
353: 1:      'valid': true
353: 1:    }
353: 1:  ],
353: 1:  'info': [
353: 1:    '✅f(I) = 1',
353: 1:    '✅f(II) = 2',
353: 1:    '✅f(III) = 3',
353: 1:    '✅f(IV) = 4',
353: 1:    '✅f(V) = 5',
353: 1:    '✅f(VI) = 6',
353: 1:    '✅f(VII) = 7',
353: 1:    '✅f(VIII) = 8',
353: 1:    '✅f(IX) = 9',
353: 1:    '✅f(X) = 10',
353: 1:    '✅f(XI) = 11',
353: 1:    '✅f(XII) = 12',
353: 1:    '✅f(XIII) = 13',
353: 1:    '✅f(XIV) = 14',
353: 1:    '✅f(XV) = 15',
353: 1:    '✅f(XVI) = 16',
353: 1:    '✅f(XVII) = 17',
353: 1:    '✅f(XVIII) = 18',
353: 1:    '✅f(XIX) = 19',
353: 1:    '✅f(XX) = 20',
353: 1:    '✅f(XXX) = 30',
353: 1:    '✅f(XXXV) = 35',
353: 1:    '✅f(XXXVI) = 36',
353: 1:    '✅f(XLVI) = 46',
353: 1:    '✅f(LVII) = 57',
353: 1:    '❌f(LXVII) = ??? != 67'
353: 1:  ],
353: 1:  'level': 12,
353: 1:  'nextQuestion': 'LXVII',
353: 1:  'questions': [
353: 1:    'I',
353: 1:    'II',
353: 1:    'III',
353: 1:    'IV',
353: 1:    'V',
353: 1:    'VI',
353: 1:    'VII',
353: 1:    'VIII',
353: 1:    'IX',
353: 1:    'X',
353: 1:    'XI',
353: 1:    'XII',
353: 1:    'XIII',
353: 1:    'XIV',
353: 1:    'XV',
353: 1:    'XVI',
353: 1:    'XVII',
353: 1:    'XVIII',
353: 1:    'XIX',
353: 1:    'XX',
353: 1:    'XXX',
353: 1:    'XXXV',
353: 1:    'XXXVI',
353: 1:    'XLVI',
353: 1:    'LVII',
353: 1:    'LXVII'
353: 1:  ]
353: 1:}
353: 1:Scores: 31075
353: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67']')
353: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
354: 1:BoardData {
354: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
354: 1:  'expectedAnswer': '89',
354: 1:  'history': [
354: 1:    {
354: 1:      'answer': '1',
354: 1:      'question': 'I',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '2',
354: 1:      'question': 'II',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '3',
354: 1:      'question': 'III',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '4',
354: 1:      'question': 'IV',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '5',
354: 1:      'question': 'V',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '6',
354: 1:      'question': 'VI',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '7',
354: 1:      'question': 'VII',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '8',
354: 1:      'question': 'VIII',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '9',
354: 1:      'question': 'IX',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '10',
354: 1:      'question': 'X',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '11',
354: 1:      'question': 'XI',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '12',
354: 1:      'question': 'XII',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '13',
354: 1:      'question': 'XIII',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '14',
354: 1:      'question': 'XIV',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '15',
354: 1:      'question': 'XV',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '16',
354: 1:      'question': 'XVI',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '17',
354: 1:      'question': 'XVII',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '18',
354: 1:      'question': 'XVIII',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '19',
354: 1:      'question': 'XIX',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '20',
354: 1:      'question': 'XX',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '30',
354: 1:      'question': 'XXX',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '35',
354: 1:      'question': 'XXXV',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '36',
354: 1:      'question': 'XXXVI',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '46',
354: 1:      'question': 'XLVI',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '57',
354: 1:      'question': 'LVII',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '67',
354: 1:      'question': 'LXVII',
354: 1:      'valid': true
354: 1:    }
354: 1:  ],
354: 1:  'info': [
354: 1:    '✅f(I) = 1',
354: 1:    '✅f(II) = 2',
354: 1:    '✅f(III) = 3',
354: 1:    '✅f(IV) = 4',
354: 1:    '✅f(V) = 5',
354: 1:    '✅f(VI) = 6',
354: 1:    '✅f(VII) = 7',
354: 1:    '✅f(VIII) = 8',
354: 1:    '✅f(IX) = 9',
354: 1:    '✅f(X) = 10',
354: 1:    '✅f(XI) = 11',
354: 1:    '✅f(XII) = 12',
354: 1:    '✅f(XIII) = 13',
354: 1:    '✅f(XIV) = 14',
354: 1:    '✅f(XV) = 15',
354: 1:    '✅f(XVI) = 16',
354: 1:    '✅f(XVII) = 17',
354: 1:    '✅f(XVIII) = 18',
354: 1:    '✅f(XIX) = 19',
354: 1:    '✅f(XX) = 20',
354: 1:    '✅f(XXX) = 30',
354: 1:    '✅f(XXXV) = 35',
354: 1:    '✅f(XXXVI) = 36',
354: 1:    '✅f(XLVI) = 46',
354: 1:    '✅f(LVII) = 57',
354: 1:    '✅f(LXVII) = 67',
354: 1:    '❌f(LXXXIX) = ??? != 89'
354: 1:  ],
354: 1:  'level': 12,
354: 1:  'nextQuestion': 'LXXXIX',
354: 1:  'questions': [
354: 1:    'I',
354: 1:    'II',
354: 1:    'III',
354: 1:    'IV',
354: 1:    'V',
354: 1:    'VI',
354: 1:    'VII',
354: 1:    'VIII',
354: 1:    'IX',
354: 1:    'X',
354: 1:    'XI',
354: 1:    'XII',
354: 1:    'XIII',
354: 1:    'XIV',
354: 1:    'XV',
354: 1:    'XVI',
354: 1:    'XVII',
354: 1:    'XVIII',
354: 1:    'XIX',
354: 1:    'XX',
354: 1:    'XXX',
354: 1:    'XXXV',
354: 1:    'XXXVI',
354: 1:    'XLVI',
354: 1:    'LVII',
354: 1:    'LXVII',
354: 1:    'LXXXIX'
354: 1:  ]
354: 1:}
354: 1:Scores: 31085
354: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89']')
354: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
355: 1:BoardData {
355: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
355: 1:  'expectedAnswer': '123',
355: 1:  'history': [
355: 1:    {
355: 1:      'answer': '1',
355: 1:      'question': 'I',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '2',
355: 1:      'question': 'II',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '3',
355: 1:      'question': 'III',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '4',
355: 1:      'question': 'IV',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '5',
355: 1:      'question': 'V',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '6',
355: 1:      'question': 'VI',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '7',
355: 1:      'question': 'VII',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '8',
355: 1:      'question': 'VIII',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '9',
355: 1:      'question': 'IX',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '10',
355: 1:      'question': 'X',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '11',
355: 1:      'question': 'XI',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '12',
355: 1:      'question': 'XII',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '13',
355: 1:      'question': 'XIII',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '14',
355: 1:      'question': 'XIV',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '15',
355: 1:      'question': 'XV',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '16',
355: 1:      'question': 'XVI',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '17',
355: 1:      'question': 'XVII',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '18',
355: 1:      'question': 'XVIII',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '19',
355: 1:      'question': 'XIX',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '20',
355: 1:      'question': 'XX',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '30',
355: 1:      'question': 'XXX',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '35',
355: 1:      'question': 'XXXV',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '36',
355: 1:      'question': 'XXXVI',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '46',
355: 1:      'question': 'XLVI',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '57',
355: 1:      'question': 'LVII',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '67',
355: 1:      'question': 'LXVII',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '89',
355: 1:      'question': 'LXXXIX',
355: 1:      'valid': true
355: 1:    }
355: 1:  ],
355: 1:  'info': [
355: 1:    '✅f(I) = 1',
355: 1:    '✅f(II) = 2',
355: 1:    '✅f(III) = 3',
355: 1:    '✅f(IV) = 4',
355: 1:    '✅f(V) = 5',
355: 1:    '✅f(VI) = 6',
355: 1:    '✅f(VII) = 7',
355: 1:    '✅f(VIII) = 8',
355: 1:    '✅f(IX) = 9',
355: 1:    '✅f(X) = 10',
355: 1:    '✅f(XI) = 11',
355: 1:    '✅f(XII) = 12',
355: 1:    '✅f(XIII) = 13',
355: 1:    '✅f(XIV) = 14',
355: 1:    '✅f(XV) = 15',
355: 1:    '✅f(XVI) = 16',
355: 1:    '✅f(XVII) = 17',
355: 1:    '✅f(XVIII) = 18',
355: 1:    '✅f(XIX) = 19',
355: 1:    '✅f(XX) = 20',
355: 1:    '✅f(XXX) = 30',
355: 1:    '✅f(XXXV) = 35',
355: 1:    '✅f(XXXVI) = 36',
355: 1:    '✅f(XLVI) = 46',
355: 1:    '✅f(LVII) = 57',
355: 1:    '✅f(LXVII) = 67',
355: 1:    '✅f(LXXXIX) = 89',
355: 1:    '❌f(CXXIII) = ??? != 123'
355: 1:  ],
355: 1:  'level': 12,
355: 1:  'nextQuestion': 'CXXIII',
355: 1:  'questions': [
355: 1:    'I',
355: 1:    'II',
355: 1:    'III',
355: 1:    'IV',
355: 1:    'V',
355: 1:    'VI',
355: 1:    'VII',
355: 1:    'VIII',
355: 1:    'IX',
355: 1:    'X',
355: 1:    'XI',
355: 1:    'XII',
355: 1:    'XIII',
355: 1:    'XIV',
355: 1:    'XV',
355: 1:    'XVI',
355: 1:    'XVII',
355: 1:    'XVIII',
355: 1:    'XIX',
355: 1:    'XX',
355: 1:    'XXX',
355: 1:    'XXXV',
355: 1:    'XXXVI',
355: 1:    'XLVI',
355: 1:    'LVII',
355: 1:    'LXVII',
355: 1:    'LXXXIX',
355: 1:    'CXXIII'
355: 1:  ]
355: 1:}
355: 1:Scores: 31095
355: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123']')
355: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
356: 1:BoardData {
356: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
356: 1:  'expectedAnswer': '234',
356: 1:  'history': [
356: 1:    {
356: 1:      'answer': '1',
356: 1:      'question': 'I',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '2',
356: 1:      'question': 'II',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '3',
356: 1:      'question': 'III',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '4',
356: 1:      'question': 'IV',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '5',
356: 1:      'question': 'V',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '6',
356: 1:      'question': 'VI',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '7',
356: 1:      'question': 'VII',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '8',
356: 1:      'question': 'VIII',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '9',
356: 1:      'question': 'IX',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '10',
356: 1:      'question': 'X',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '11',
356: 1:      'question': 'XI',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '12',
356: 1:      'question': 'XII',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '13',
356: 1:      'question': 'XIII',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '14',
356: 1:      'question': 'XIV',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '15',
356: 1:      'question': 'XV',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '16',
356: 1:      'question': 'XVI',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '17',
356: 1:      'question': 'XVII',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '18',
356: 1:      'question': 'XVIII',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '19',
356: 1:      'question': 'XIX',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '20',
356: 1:      'question': 'XX',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '30',
356: 1:      'question': 'XXX',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '35',
356: 1:      'question': 'XXXV',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '36',
356: 1:      'question': 'XXXVI',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '46',
356: 1:      'question': 'XLVI',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '57',
356: 1:      'question': 'LVII',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '67',
356: 1:      'question': 'LXVII',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '89',
356: 1:      'question': 'LXXXIX',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '123',
356: 1:      'question': 'CXXIII',
356: 1:      'valid': true
356: 1:    }
356: 1:  ],
356: 1:  'info': [
356: 1:    '✅f(I) = 1',
356: 1:    '✅f(II) = 2',
356: 1:    '✅f(III) = 3',
356: 1:    '✅f(IV) = 4',
356: 1:    '✅f(V) = 5',
356: 1:    '✅f(VI) = 6',
356: 1:    '✅f(VII) = 7',
356: 1:    '✅f(VIII) = 8',
356: 1:    '✅f(IX) = 9',
356: 1:    '✅f(X) = 10',
356: 1:    '✅f(XI) = 11',
356: 1:    '✅f(XII) = 12',
356: 1:    '✅f(XIII) = 13',
356: 1:    '✅f(XIV) = 14',
356: 1:    '✅f(XV) = 15',
356: 1:    '✅f(XVI) = 16',
356: 1:    '✅f(XVII) = 17',
356: 1:    '✅f(XVIII) = 18',
356: 1:    '✅f(XIX) = 19',
356: 1:    '✅f(XX) = 20',
356: 1:    '✅f(XXX) = 30',
356: 1:    '✅f(XXXV) = 35',
356: 1:    '✅f(XXXVI) = 36',
356: 1:    '✅f(XLVI) = 46',
356: 1:    '✅f(LVII) = 57',
356: 1:    '✅f(LXVII) = 67',
356: 1:    '✅f(LXXXIX) = 89',
356: 1:    '✅f(CXXIII) = 123',
356: 1:    '❌f(CCXXXIV) = ??? != 234'
356: 1:  ],
356: 1:  'level': 12,
356: 1:  'nextQuestion': 'CCXXXIV',
356: 1:  'questions': [
356: 1:    'I',
356: 1:    'II',
356: 1:    'III',
356: 1:    'IV',
356: 1:    'V',
356: 1:    'VI',
356: 1:    'VII',
356: 1:    'VIII',
356: 1:    'IX',
356: 1:    'X',
356: 1:    'XI',
356: 1:    'XII',
356: 1:    'XIII',
356: 1:    'XIV',
356: 1:    'XV',
356: 1:    'XVI',
356: 1:    'XVII',
356: 1:    'XVIII',
356: 1:    'XIX',
356: 1:    'XX',
356: 1:    'XXX',
356: 1:    'XXXV',
356: 1:    'XXXVI',
356: 1:    'XLVI',
356: 1:    'LVII',
356: 1:    'LXVII',
356: 1:    'LXXXIX',
356: 1:    'CXXIII',
356: 1:    'CCXXXIV'
356: 1:  ]
356: 1:}
356: 1:Scores: 31105
356: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234']')
356: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
357: 1:BoardData {
357: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
357: 1:  'expectedAnswer': '345',
357: 1:  'history': [
357: 1:    {
357: 1:      'answer': '1',
357: 1:      'question': 'I',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '2',
357: 1:      'question': 'II',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '3',
357: 1:      'question': 'III',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '4',
357: 1:      'question': 'IV',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '5',
357: 1:      'question': 'V',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '6',
357: 1:      'question': 'VI',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '7',
357: 1:      'question': 'VII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '8',
357: 1:      'question': 'VIII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '9',
357: 1:      'question': 'IX',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '10',
357: 1:      'question': 'X',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '11',
357: 1:      'question': 'XI',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '12',
357: 1:      'question': 'XII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '13',
357: 1:      'question': 'XIII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '14',
357: 1:      'question': 'XIV',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '15',
357: 1:      'question': 'XV',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '16',
357: 1:      'question': 'XVI',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '17',
357: 1:      'question': 'XVII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '18',
357: 1:      'question': 'XVIII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '19',
357: 1:      'question': 'XIX',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '20',
357: 1:      'question': 'XX',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '30',
357: 1:      'question': 'XXX',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '35',
357: 1:      'question': 'XXXV',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '36',
357: 1:      'question': 'XXXVI',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '46',
357: 1:      'question': 'XLVI',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '57',
357: 1:      'question': 'LVII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '67',
357: 1:      'question': 'LXVII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '89',
357: 1:      'question': 'LXXXIX',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '123',
357: 1:      'question': 'CXXIII',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '234',
357: 1:      'question': 'CCXXXIV',
357: 1:      'valid': true
357: 1:    }
357: 1:  ],
357: 1:  'info': [
357: 1:    '✅f(I) = 1',
357: 1:    '✅f(II) = 2',
357: 1:    '✅f(III) = 3',
357: 1:    '✅f(IV) = 4',
357: 1:    '✅f(V) = 5',
357: 1:    '✅f(VI) = 6',
357: 1:    '✅f(VII) = 7',
357: 1:    '✅f(VIII) = 8',
357: 1:    '✅f(IX) = 9',
357: 1:    '✅f(X) = 10',
357: 1:    '✅f(XI) = 11',
357: 1:    '✅f(XII) = 12',
357: 1:    '✅f(XIII) = 13',
357: 1:    '✅f(XIV) = 14',
357: 1:    '✅f(XV) = 15',
357: 1:    '✅f(XVI) = 16',
357: 1:    '✅f(XVII) = 17',
357: 1:    '✅f(XVIII) = 18',
357: 1:    '✅f(XIX) = 19',
357: 1:    '✅f(XX) = 20',
357: 1:    '✅f(XXX) = 30',
357: 1:    '✅f(XXXV) = 35',
357: 1:    '✅f(XXXVI) = 36',
357: 1:    '✅f(XLVI) = 46',
357: 1:    '✅f(LVII) = 57',
357: 1:    '✅f(LXVII) = 67',
357: 1:    '✅f(LXXXIX) = 89',
357: 1:    '✅f(CXXIII) = 123',
357: 1:    '✅f(CCXXXIV) = 234',
357: 1:    '❌f(CCCXLV) = ??? != 345'
357: 1:  ],
357: 1:  'level': 12,
357: 1:  'nextQuestion': 'CCCXLV',
357: 1:  'questions': [
357: 1:    'I',
357: 1:    'II',
357: 1:    'III',
357: 1:    'IV',
357: 1:    'V',
357: 1:    'VI',
357: 1:    'VII',
357: 1:    'VIII',
357: 1:    'IX',
357: 1:    'X',
357: 1:    'XI',
357: 1:    'XII',
357: 1:    'XIII',
357: 1:    'XIV',
357: 1:    'XV',
357: 1:    'XVI',
357: 1:    'XVII',
357: 1:    'XVIII',
357: 1:    'XIX',
357: 1:    'XX',
357: 1:    'XXX',
357: 1:    'XXXV',
357: 1:    'XXXVI',
357: 1:    'XLVI',
357: 1:    'LVII',
357: 1:    'LXVII',
357: 1:    'LXXXIX',
357: 1:    'CXXIII',
357: 1:    'CCXXXIV',
357: 1:    'CCCXLV'
357: 1:  ]
357: 1:}
357: 1:Scores: 31115
357: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234', '345']')
357: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
358: 1:BoardData {
358: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
358: 1:  'expectedAnswer': '456',
358: 1:  'history': [
358: 1:    {
358: 1:      'answer': '1',
358: 1:      'question': 'I',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '2',
358: 1:      'question': 'II',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '3',
358: 1:      'question': 'III',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '4',
358: 1:      'question': 'IV',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '5',
358: 1:      'question': 'V',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '6',
358: 1:      'question': 'VI',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '7',
358: 1:      'question': 'VII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '8',
358: 1:      'question': 'VIII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '9',
358: 1:      'question': 'IX',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '10',
358: 1:      'question': 'X',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '11',
358: 1:      'question': 'XI',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '12',
358: 1:      'question': 'XII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '13',
358: 1:      'question': 'XIII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '14',
358: 1:      'question': 'XIV',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '15',
358: 1:      'question': 'XV',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '16',
358: 1:      'question': 'XVI',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '17',
358: 1:      'question': 'XVII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '18',
358: 1:      'question': 'XVIII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '19',
358: 1:      'question': 'XIX',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '20',
358: 1:      'question': 'XX',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '30',
358: 1:      'question': 'XXX',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '35',
358: 1:      'question': 'XXXV',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '36',
358: 1:      'question': 'XXXVI',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '46',
358: 1:      'question': 'XLVI',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '57',
358: 1:      'question': 'LVII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '67',
358: 1:      'question': 'LXVII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '89',
358: 1:      'question': 'LXXXIX',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '123',
358: 1:      'question': 'CXXIII',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '234',
358: 1:      'question': 'CCXXXIV',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '345',
358: 1:      'question': 'CCCXLV',
358: 1:      'valid': true
358: 1:    }
358: 1:  ],
358: 1:  'info': [
358: 1:    '✅f(I) = 1',
358: 1:    '✅f(II) = 2',
358: 1:    '✅f(III) = 3',
358: 1:    '✅f(IV) = 4',
358: 1:    '✅f(V) = 5',
358: 1:    '✅f(VI) = 6',
358: 1:    '✅f(VII) = 7',
358: 1:    '✅f(VIII) = 8',
358: 1:    '✅f(IX) = 9',
358: 1:    '✅f(X) = 10',
358: 1:    '✅f(XI) = 11',
358: 1:    '✅f(XII) = 12',
358: 1:    '✅f(XIII) = 13',
358: 1:    '✅f(XIV) = 14',
358: 1:    '✅f(XV) = 15',
358: 1:    '✅f(XVI) = 16',
358: 1:    '✅f(XVII) = 17',
358: 1:    '✅f(XVIII) = 18',
358: 1:    '✅f(XIX) = 19',
358: 1:    '✅f(XX) = 20',
358: 1:    '✅f(XXX) = 30',
358: 1:    '✅f(XXXV) = 35',
358: 1:    '✅f(XXXVI) = 36',
358: 1:    '✅f(XLVI) = 46',
358: 1:    '✅f(LVII) = 57',
358: 1:    '✅f(LXVII) = 67',
358: 1:    '✅f(LXXXIX) = 89',
358: 1:    '✅f(CXXIII) = 123',
358: 1:    '✅f(CCXXXIV) = 234',
358: 1:    '✅f(CCCXLV) = 345',
358: 1:    '❌f(CDLVI) = ??? != 456'
358: 1:  ],
358: 1:  'level': 12,
358: 1:  'nextQuestion': 'CDLVI',
358: 1:  'questions': [
358: 1:    'I',
358: 1:    'II',
358: 1:    'III',
358: 1:    'IV',
358: 1:    'V',
358: 1:    'VI',
358: 1:    'VII',
358: 1:    'VIII',
358: 1:    'IX',
358: 1:    'X',
358: 1:    'XI',
358: 1:    'XII',
358: 1:    'XIII',
358: 1:    'XIV',
358: 1:    'XV',
358: 1:    'XVI',
358: 1:    'XVII',
358: 1:    'XVIII',
358: 1:    'XIX',
358: 1:    'XX',
358: 1:    'XXX',
358: 1:    'XXXV',
358: 1:    'XXXVI',
358: 1:    'XLVI',
358: 1:    'LVII',
358: 1:    'LXVII',
358: 1:    'LXXXIX',
358: 1:    'CXXIII',
358: 1:    'CCXXXIV',
358: 1:    'CCCXLV',
358: 1:    'CDLVI'
358: 1:  ]
358: 1:}
358: 1:Scores: 31125
358: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234', '345', '456']')
358: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
359: 1:BoardData {
359: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
359: 1:  'expectedAnswer': '567',
359: 1:  'history': [
359: 1:    {
359: 1:      'answer': '1',
359: 1:      'question': 'I',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '2',
359: 1:      'question': 'II',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '3',
359: 1:      'question': 'III',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '4',
359: 1:      'question': 'IV',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '5',
359: 1:      'question': 'V',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '6',
359: 1:      'question': 'VI',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '7',
359: 1:      'question': 'VII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '8',
359: 1:      'question': 'VIII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '9',
359: 1:      'question': 'IX',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '10',
359: 1:      'question': 'X',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '11',
359: 1:      'question': 'XI',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '12',
359: 1:      'question': 'XII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '13',
359: 1:      'question': 'XIII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '14',
359: 1:      'question': 'XIV',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '15',
359: 1:      'question': 'XV',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '16',
359: 1:      'question': 'XVI',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '17',
359: 1:      'question': 'XVII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '18',
359: 1:      'question': 'XVIII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '19',
359: 1:      'question': 'XIX',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '20',
359: 1:      'question': 'XX',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '30',
359: 1:      'question': 'XXX',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '35',
359: 1:      'question': 'XXXV',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '36',
359: 1:      'question': 'XXXVI',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '46',
359: 1:      'question': 'XLVI',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '57',
359: 1:      'question': 'LVII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '67',
359: 1:      'question': 'LXVII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '89',
359: 1:      'question': 'LXXXIX',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '123',
359: 1:      'question': 'CXXIII',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '234',
359: 1:      'question': 'CCXXXIV',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '345',
359: 1:      'question': 'CCCXLV',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '456',
359: 1:      'question': 'CDLVI',
359: 1:      'valid': true
359: 1:    }
359: 1:  ],
359: 1:  'info': [
359: 1:    '✅f(I) = 1',
359: 1:    '✅f(II) = 2',
359: 1:    '✅f(III) = 3',
359: 1:    '✅f(IV) = 4',
359: 1:    '✅f(V) = 5',
359: 1:    '✅f(VI) = 6',
359: 1:    '✅f(VII) = 7',
359: 1:    '✅f(VIII) = 8',
359: 1:    '✅f(IX) = 9',
359: 1:    '✅f(X) = 10',
359: 1:    '✅f(XI) = 11',
359: 1:    '✅f(XII) = 12',
359: 1:    '✅f(XIII) = 13',
359: 1:    '✅f(XIV) = 14',
359: 1:    '✅f(XV) = 15',
359: 1:    '✅f(XVI) = 16',
359: 1:    '✅f(XVII) = 17',
359: 1:    '✅f(XVIII) = 18',
359: 1:    '✅f(XIX) = 19',
359: 1:    '✅f(XX) = 20',
359: 1:    '✅f(XXX) = 30',
359: 1:    '✅f(XXXV) = 35',
359: 1:    '✅f(XXXVI) = 36',
359: 1:    '✅f(XLVI) = 46',
359: 1:    '✅f(LVII) = 57',
359: 1:    '✅f(LXVII) = 67',
359: 1:    '✅f(LXXXIX) = 89',
359: 1:    '✅f(CXXIII) = 123',
359: 1:    '✅f(CCXXXIV) = 234',
359: 1:    '✅f(CCCXLV) = 345',
359: 1:    '✅f(CDLVI) = 456',
359: 1:    '❌f(DLXVII) = ??? != 567'
359: 1:  ],
359: 1:  'level': 12,
359: 1:  'nextQuestion': 'DLXVII',
359: 1:  'questions': [
359: 1:    'I',
359: 1:    'II',
359: 1:    'III',
359: 1:    'IV',
359: 1:    'V',
359: 1:    'VI',
359: 1:    'VII',
359: 1:    'VIII',
359: 1:    'IX',
359: 1:    'X',
359: 1:    'XI',
359: 1:    'XII',
359: 1:    'XIII',
359: 1:    'XIV',
359: 1:    'XV',
359: 1:    'XVI',
359: 1:    'XVII',
359: 1:    'XVIII',
359: 1:    'XIX',
359: 1:    'XX',
359: 1:    'XXX',
359: 1:    'XXXV',
359: 1:    'XXXVI',
359: 1:    'XLVI',
359: 1:    'LVII',
359: 1:    'LXVII',
359: 1:    'LXXXIX',
359: 1:    'CXXIII',
359: 1:    'CCXXXIV',
359: 1:    'CCCXLV',
359: 1:    'CDLVI',
359: 1:    'DLXVII'
359: 1:  ]
359: 1:}
359: 1:Scores: 31135
359: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234', '345', '456', '567']')
359: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
360: 1:BoardData {
360: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
360: 1:  'expectedAnswer': '678',
360: 1:  'history': [
360: 1:    {
360: 1:      'answer': '1',
360: 1:      'question': 'I',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '2',
360: 1:      'question': 'II',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '3',
360: 1:      'question': 'III',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '4',
360: 1:      'question': 'IV',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '5',
360: 1:      'question': 'V',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '6',
360: 1:      'question': 'VI',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '7',
360: 1:      'question': 'VII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '8',
360: 1:      'question': 'VIII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '9',
360: 1:      'question': 'IX',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '10',
360: 1:      'question': 'X',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '11',
360: 1:      'question': 'XI',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '12',
360: 1:      'question': 'XII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '13',
360: 1:      'question': 'XIII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '14',
360: 1:      'question': 'XIV',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '15',
360: 1:      'question': 'XV',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '16',
360: 1:      'question': 'XVI',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '17',
360: 1:      'question': 'XVII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '18',
360: 1:      'question': 'XVIII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '19',
360: 1:      'question': 'XIX',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '20',
360: 1:      'question': 'XX',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '30',
360: 1:      'question': 'XXX',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '35',
360: 1:      'question': 'XXXV',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '36',
360: 1:      'question': 'XXXVI',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '46',
360: 1:      'question': 'XLVI',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '57',
360: 1:      'question': 'LVII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '67',
360: 1:      'question': 'LXVII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '89',
360: 1:      'question': 'LXXXIX',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '123',
360: 1:      'question': 'CXXIII',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '234',
360: 1:      'question': 'CCXXXIV',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '345',
360: 1:      'question': 'CCCXLV',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '456',
360: 1:      'question': 'CDLVI',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '567',
360: 1:      'question': 'DLXVII',
360: 1:      'valid': true
360: 1:    }
360: 1:  ],
360: 1:  'info': [
360: 1:    '✅f(I) = 1',
360: 1:    '✅f(II) = 2',
360: 1:    '✅f(III) = 3',
360: 1:    '✅f(IV) = 4',
360: 1:    '✅f(V) = 5',
360: 1:    '✅f(VI) = 6',
360: 1:    '✅f(VII) = 7',
360: 1:    '✅f(VIII) = 8',
360: 1:    '✅f(IX) = 9',
360: 1:    '✅f(X) = 10',
360: 1:    '✅f(XI) = 11',
360: 1:    '✅f(XII) = 12',
360: 1:    '✅f(XIII) = 13',
360: 1:    '✅f(XIV) = 14',
360: 1:    '✅f(XV) = 15',
360: 1:    '✅f(XVI) = 16',
360: 1:    '✅f(XVII) = 17',
360: 1:    '✅f(XVIII) = 18',
360: 1:    '✅f(XIX) = 19',
360: 1:    '✅f(XX) = 20',
360: 1:    '✅f(XXX) = 30',
360: 1:    '✅f(XXXV) = 35',
360: 1:    '✅f(XXXVI) = 36',
360: 1:    '✅f(XLVI) = 46',
360: 1:    '✅f(LVII) = 57',
360: 1:    '✅f(LXVII) = 67',
360: 1:    '✅f(LXXXIX) = 89',
360: 1:    '✅f(CXXIII) = 123',
360: 1:    '✅f(CCXXXIV) = 234',
360: 1:    '✅f(CCCXLV) = 345',
360: 1:    '✅f(CDLVI) = 456',
360: 1:    '✅f(DLXVII) = 567',
360: 1:    '❌f(DCLXXVIII) = ??? != 678'
360: 1:  ],
360: 1:  'level': 12,
360: 1:  'nextQuestion': 'DCLXXVIII',
360: 1:  'questions': [
360: 1:    'I',
360: 1:    'II',
360: 1:    'III',
360: 1:    'IV',
360: 1:    'V',
360: 1:    'VI',
360: 1:    'VII',
360: 1:    'VIII',
360: 1:    'IX',
360: 1:    'X',
360: 1:    'XI',
360: 1:    'XII',
360: 1:    'XIII',
360: 1:    'XIV',
360: 1:    'XV',
360: 1:    'XVI',
360: 1:    'XVII',
360: 1:    'XVIII',
360: 1:    'XIX',
360: 1:    'XX',
360: 1:    'XXX',
360: 1:    'XXXV',
360: 1:    'XXXVI',
360: 1:    'XLVI',
360: 1:    'LVII',
360: 1:    'LXVII',
360: 1:    'LXXXIX',
360: 1:    'CXXIII',
360: 1:    'CCXXXIV',
360: 1:    'CCCXLV',
360: 1:    'CDLVI',
360: 1:    'DLXVII',
360: 1:    'DCLXXVIII'
360: 1:  ]
360: 1:}
360: 1:Scores: 31145
360: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234', '345', '456', '567', '678']')
360: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
361: 1:BoardData {
361: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
361: 1:  'expectedAnswer': '890',
361: 1:  'history': [
361: 1:    {
361: 1:      'answer': '1',
361: 1:      'question': 'I',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '2',
361: 1:      'question': 'II',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '3',
361: 1:      'question': 'III',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '4',
361: 1:      'question': 'IV',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '5',
361: 1:      'question': 'V',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '6',
361: 1:      'question': 'VI',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '7',
361: 1:      'question': 'VII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '8',
361: 1:      'question': 'VIII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '9',
361: 1:      'question': 'IX',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '10',
361: 1:      'question': 'X',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '11',
361: 1:      'question': 'XI',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '12',
361: 1:      'question': 'XII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '13',
361: 1:      'question': 'XIII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '14',
361: 1:      'question': 'XIV',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '15',
361: 1:      'question': 'XV',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '16',
361: 1:      'question': 'XVI',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '17',
361: 1:      'question': 'XVII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '18',
361: 1:      'question': 'XVIII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '19',
361: 1:      'question': 'XIX',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '20',
361: 1:      'question': 'XX',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '30',
361: 1:      'question': 'XXX',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '35',
361: 1:      'question': 'XXXV',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '36',
361: 1:      'question': 'XXXVI',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '46',
361: 1:      'question': 'XLVI',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '57',
361: 1:      'question': 'LVII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '67',
361: 1:      'question': 'LXVII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '89',
361: 1:      'question': 'LXXXIX',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '123',
361: 1:      'question': 'CXXIII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '234',
361: 1:      'question': 'CCXXXIV',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '345',
361: 1:      'question': 'CCCXLV',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '456',
361: 1:      'question': 'CDLVI',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '567',
361: 1:      'question': 'DLXVII',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '678',
361: 1:      'question': 'DCLXXVIII',
361: 1:      'valid': true
361: 1:    }
361: 1:  ],
361: 1:  'info': [
361: 1:    '✅f(I) = 1',
361: 1:    '✅f(II) = 2',
361: 1:    '✅f(III) = 3',
361: 1:    '✅f(IV) = 4',
361: 1:    '✅f(V) = 5',
361: 1:    '✅f(VI) = 6',
361: 1:    '✅f(VII) = 7',
361: 1:    '✅f(VIII) = 8',
361: 1:    '✅f(IX) = 9',
361: 1:    '✅f(X) = 10',
361: 1:    '✅f(XI) = 11',
361: 1:    '✅f(XII) = 12',
361: 1:    '✅f(XIII) = 13',
361: 1:    '✅f(XIV) = 14',
361: 1:    '✅f(XV) = 15',
361: 1:    '✅f(XVI) = 16',
361: 1:    '✅f(XVII) = 17',
361: 1:    '✅f(XVIII) = 18',
361: 1:    '✅f(XIX) = 19',
361: 1:    '✅f(XX) = 20',
361: 1:    '✅f(XXX) = 30',
361: 1:    '✅f(XXXV) = 35',
361: 1:    '✅f(XXXVI) = 36',
361: 1:    '✅f(XLVI) = 46',
361: 1:    '✅f(LVII) = 57',
361: 1:    '✅f(LXVII) = 67',
361: 1:    '✅f(LXXXIX) = 89',
361: 1:    '✅f(CXXIII) = 123',
361: 1:    '✅f(CCXXXIV) = 234',
361: 1:    '✅f(CCCXLV) = 345',
361: 1:    '✅f(CDLVI) = 456',
361: 1:    '✅f(DLXVII) = 567',
361: 1:    '✅f(DCLXXVIII) = 678',
361: 1:    '❌f(DCCCXC) = ??? != 890'
361: 1:  ],
361: 1:  'level': 12,
361: 1:  'nextQuestion': 'DCCCXC',
361: 1:  'questions': [
361: 1:    'I',
361: 1:    'II',
361: 1:    'III',
361: 1:    'IV',
361: 1:    'V',
361: 1:    'VI',
361: 1:    'VII',
361: 1:    'VIII',
361: 1:    'IX',
361: 1:    'X',
361: 1:    'XI',
361: 1:    'XII',
361: 1:    'XIII',
361: 1:    'XIV',
361: 1:    'XV',
361: 1:    'XVI',
361: 1:    'XVII',
361: 1:    'XVIII',
361: 1:    'XIX',
361: 1:    'XX',
361: 1:    'XXX',
361: 1:    'XXXV',
361: 1:    'XXXVI',
361: 1:    'XLVI',
361: 1:    'LVII',
361: 1:    'LXVII',
361: 1:    'LXXXIX',
361: 1:    'CXXIII',
361: 1:    'CCXXXIV',
361: 1:    'CCCXLV',
361: 1:    'CDLVI',
361: 1:    'DLXVII',
361: 1:    'DCLXXVIII',
361: 1:    'DCCCXC'
361: 1:  ]
361: 1:}
361: 1:Scores: 31155
361: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234', '345', '456', '567', '678', '890']')
361: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
362: 1:BoardData {
362: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
362: 1:  'expectedAnswer': '1234',
362: 1:  'history': [
362: 1:    {
362: 1:      'answer': '1',
362: 1:      'question': 'I',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '2',
362: 1:      'question': 'II',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '3',
362: 1:      'question': 'III',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '4',
362: 1:      'question': 'IV',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '5',
362: 1:      'question': 'V',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '6',
362: 1:      'question': 'VI',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '7',
362: 1:      'question': 'VII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '8',
362: 1:      'question': 'VIII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '9',
362: 1:      'question': 'IX',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '10',
362: 1:      'question': 'X',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '11',
362: 1:      'question': 'XI',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '12',
362: 1:      'question': 'XII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '13',
362: 1:      'question': 'XIII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '14',
362: 1:      'question': 'XIV',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '15',
362: 1:      'question': 'XV',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '16',
362: 1:      'question': 'XVI',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '17',
362: 1:      'question': 'XVII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '18',
362: 1:      'question': 'XVIII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '19',
362: 1:      'question': 'XIX',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '20',
362: 1:      'question': 'XX',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '30',
362: 1:      'question': 'XXX',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '35',
362: 1:      'question': 'XXXV',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '36',
362: 1:      'question': 'XXXVI',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '46',
362: 1:      'question': 'XLVI',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '57',
362: 1:      'question': 'LVII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '67',
362: 1:      'question': 'LXVII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '89',
362: 1:      'question': 'LXXXIX',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '123',
362: 1:      'question': 'CXXIII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '234',
362: 1:      'question': 'CCXXXIV',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '345',
362: 1:      'question': 'CCCXLV',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '456',
362: 1:      'question': 'CDLVI',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '567',
362: 1:      'question': 'DLXVII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '678',
362: 1:      'question': 'DCLXXVIII',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '890',
362: 1:      'question': 'DCCCXC',
362: 1:      'valid': true
362: 1:    }
362: 1:  ],
362: 1:  'info': [
362: 1:    '✅f(I) = 1',
362: 1:    '✅f(II) = 2',
362: 1:    '✅f(III) = 3',
362: 1:    '✅f(IV) = 4',
362: 1:    '✅f(V) = 5',
362: 1:    '✅f(VI) = 6',
362: 1:    '✅f(VII) = 7',
362: 1:    '✅f(VIII) = 8',
362: 1:    '✅f(IX) = 9',
362: 1:    '✅f(X) = 10',
362: 1:    '✅f(XI) = 11',
362: 1:    '✅f(XII) = 12',
362: 1:    '✅f(XIII) = 13',
362: 1:    '✅f(XIV) = 14',
362: 1:    '✅f(XV) = 15',
362: 1:    '✅f(XVI) = 16',
362: 1:    '✅f(XVII) = 17',
362: 1:    '✅f(XVIII) = 18',
362: 1:    '✅f(XIX) = 19',
362: 1:    '✅f(XX) = 20',
362: 1:    '✅f(XXX) = 30',
362: 1:    '✅f(XXXV) = 35',
362: 1:    '✅f(XXXVI) = 36',
362: 1:    '✅f(XLVI) = 46',
362: 1:    '✅f(LVII) = 57',
362: 1:    '✅f(LXVII) = 67',
362: 1:    '✅f(LXXXIX) = 89',
362: 1:    '✅f(CXXIII) = 123',
362: 1:    '✅f(CCXXXIV) = 234',
362: 1:    '✅f(CCCXLV) = 345',
362: 1:    '✅f(CDLVI) = 456',
362: 1:    '✅f(DLXVII) = 567',
362: 1:    '✅f(DCLXXVIII) = 678',
362: 1:    '✅f(DCCCXC) = 890',
362: 1:    '❌f(MCCXXXIV) = ??? != 1234'
362: 1:  ],
362: 1:  'level': 12,
362: 1:  'nextQuestion': 'MCCXXXIV',
362: 1:  'questions': [
362: 1:    'I',
362: 1:    'II',
362: 1:    'III',
362: 1:    'IV',
362: 1:    'V',
362: 1:    'VI',
362: 1:    'VII',
362: 1:    'VIII',
362: 1:    'IX',
362: 1:    'X',
362: 1:    'XI',
362: 1:    'XII',
362: 1:    'XIII',
362: 1:    'XIV',
362: 1:    'XV',
362: 1:    'XVI',
362: 1:    'XVII',
362: 1:    'XVIII',
362: 1:    'XIX',
362: 1:    'XX',
362: 1:    'XXX',
362: 1:    'XXXV',
362: 1:    'XXXVI',
362: 1:    'XLVI',
362: 1:    'LVII',
362: 1:    'LXVII',
362: 1:    'LXXXIX',
362: 1:    'CXXIII',
362: 1:    'CCXXXIV',
362: 1:    'CCCXLV',
362: 1:    'CDLVI',
362: 1:    'DLXVII',
362: 1:    'DCLXXVIII',
362: 1:    'DCCCXC',
362: 1:    'MCCXXXIV'
362: 1:  ]
362: 1:}
362: 1:Scores: 31165
362: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234', '345', '456', '567', '678', '890', '1234']')
362: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
363: 1:BoardData {
363: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
363: 1:  'expectedAnswer': '2345',
363: 1:  'history': [
363: 1:    {
363: 1:      'answer': '1',
363: 1:      'question': 'I',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '2',
363: 1:      'question': 'II',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '3',
363: 1:      'question': 'III',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '4',
363: 1:      'question': 'IV',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '5',
363: 1:      'question': 'V',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '6',
363: 1:      'question': 'VI',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '7',
363: 1:      'question': 'VII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '8',
363: 1:      'question': 'VIII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '9',
363: 1:      'question': 'IX',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '10',
363: 1:      'question': 'X',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '11',
363: 1:      'question': 'XI',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '12',
363: 1:      'question': 'XII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '13',
363: 1:      'question': 'XIII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '14',
363: 1:      'question': 'XIV',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '15',
363: 1:      'question': 'XV',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '16',
363: 1:      'question': 'XVI',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '17',
363: 1:      'question': 'XVII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '18',
363: 1:      'question': 'XVIII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '19',
363: 1:      'question': 'XIX',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '20',
363: 1:      'question': 'XX',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '30',
363: 1:      'question': 'XXX',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '35',
363: 1:      'question': 'XXXV',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '36',
363: 1:      'question': 'XXXVI',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '46',
363: 1:      'question': 'XLVI',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '57',
363: 1:      'question': 'LVII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '67',
363: 1:      'question': 'LXVII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '89',
363: 1:      'question': 'LXXXIX',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '123',
363: 1:      'question': 'CXXIII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '234',
363: 1:      'question': 'CCXXXIV',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '345',
363: 1:      'question': 'CCCXLV',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '456',
363: 1:      'question': 'CDLVI',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '567',
363: 1:      'question': 'DLXVII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '678',
363: 1:      'question': 'DCLXXVIII',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '890',
363: 1:      'question': 'DCCCXC',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '1234',
363: 1:      'question': 'MCCXXXIV',
363: 1:      'valid': true
363: 1:    }
363: 1:  ],
363: 1:  'info': [
363: 1:    '✅f(I) = 1',
363: 1:    '✅f(II) = 2',
363: 1:    '✅f(III) = 3',
363: 1:    '✅f(IV) = 4',
363: 1:    '✅f(V) = 5',
363: 1:    '✅f(VI) = 6',
363: 1:    '✅f(VII) = 7',
363: 1:    '✅f(VIII) = 8',
363: 1:    '✅f(IX) = 9',
363: 1:    '✅f(X) = 10',
363: 1:    '✅f(XI) = 11',
363: 1:    '✅f(XII) = 12',
363: 1:    '✅f(XIII) = 13',
363: 1:    '✅f(XIV) = 14',
363: 1:    '✅f(XV) = 15',
363: 1:    '✅f(XVI) = 16',
363: 1:    '✅f(XVII) = 17',
363: 1:    '✅f(XVIII) = 18',
363: 1:    '✅f(XIX) = 19',
363: 1:    '✅f(XX) = 20',
363: 1:    '✅f(XXX) = 30',
363: 1:    '✅f(XXXV) = 35',
363: 1:    '✅f(XXXVI) = 36',
363: 1:    '✅f(XLVI) = 46',
363: 1:    '✅f(LVII) = 57',
363: 1:    '✅f(LXVII) = 67',
363: 1:    '✅f(LXXXIX) = 89',
363: 1:    '✅f(CXXIII) = 123',
363: 1:    '✅f(CCXXXIV) = 234',
363: 1:    '✅f(CCCXLV) = 345',
363: 1:    '✅f(CDLVI) = 456',
363: 1:    '✅f(DLXVII) = 567',
363: 1:    '✅f(DCLXXVIII) = 678',
363: 1:    '✅f(DCCCXC) = 890',
363: 1:    '✅f(MCCXXXIV) = 1234',
363: 1:    '❌f(MMCCCXLV) = ??? != 2345'
363: 1:  ],
363: 1:  'level': 12,
363: 1:  'nextQuestion': 'MMCCCXLV',
363: 1:  'questions': [
363: 1:    'I',
363: 1:    'II',
363: 1:    'III',
363: 1:    'IV',
363: 1:    'V',
363: 1:    'VI',
363: 1:    'VII',
363: 1:    'VIII',
363: 1:    'IX',
363: 1:    'X',
363: 1:    'XI',
363: 1:    'XII',
363: 1:    'XIII',
363: 1:    'XIV',
363: 1:    'XV',
363: 1:    'XVI',
363: 1:    'XVII',
363: 1:    'XVIII',
363: 1:    'XIX',
363: 1:    'XX',
363: 1:    'XXX',
363: 1:    'XXXV',
363: 1:    'XXXVI',
363: 1:    'XLVI',
363: 1:    'LVII',
363: 1:    'LXVII',
363: 1:    'LXXXIX',
363: 1:    'CXXIII',
363: 1:    'CCXXXIV',
363: 1:    'CCCXLV',
363: 1:    'CDLVI',
363: 1:    'DLXVII',
363: 1:    'DCLXXVIII',
363: 1:    'DCCCXC',
363: 1:    'MCCXXXIV',
363: 1:    'MMCCCXLV'
363: 1:  ]
363: 1:}
363: 1:Scores: 31175
363: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234', '345', '456', '567', '678', '890', '1234', '2345']')
363: 1:Fire Event: PassTest{complexity=38, testCount=37}
------------------------------------------
364: 1:BoardData {
364: 1:  'description': ['Write a function that converts a Roman number to Arabic'],
364: 1:  'expectedAnswer': '3456',
364: 1:  'history': [
364: 1:    {
364: 1:      'answer': '1',
364: 1:      'question': 'I',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '2',
364: 1:      'question': 'II',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '3',
364: 1:      'question': 'III',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '4',
364: 1:      'question': 'IV',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '5',
364: 1:      'question': 'V',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '6',
364: 1:      'question': 'VI',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '7',
364: 1:      'question': 'VII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '8',
364: 1:      'question': 'VIII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '9',
364: 1:      'question': 'IX',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '10',
364: 1:      'question': 'X',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '11',
364: 1:      'question': 'XI',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '12',
364: 1:      'question': 'XII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '13',
364: 1:      'question': 'XIII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '14',
364: 1:      'question': 'XIV',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '15',
364: 1:      'question': 'XV',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '16',
364: 1:      'question': 'XVI',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '17',
364: 1:      'question': 'XVII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '18',
364: 1:      'question': 'XVIII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '19',
364: 1:      'question': 'XIX',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '20',
364: 1:      'question': 'XX',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '30',
364: 1:      'question': 'XXX',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '35',
364: 1:      'question': 'XXXV',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '36',
364: 1:      'question': 'XXXVI',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '46',
364: 1:      'question': 'XLVI',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '57',
364: 1:      'question': 'LVII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '67',
364: 1:      'question': 'LXVII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '89',
364: 1:      'question': 'LXXXIX',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '123',
364: 1:      'question': 'CXXIII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '234',
364: 1:      'question': 'CCXXXIV',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '345',
364: 1:      'question': 'CCCXLV',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '456',
364: 1:      'question': 'CDLVI',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '567',
364: 1:      'question': 'DLXVII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '678',
364: 1:      'question': 'DCLXXVIII',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '890',
364: 1:      'question': 'DCCCXC',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '1234',
364: 1:      'question': 'MCCXXXIV',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '2345',
364: 1:      'question': 'MMCCCXLV',
364: 1:      'valid': true
364: 1:    }
364: 1:  ],
364: 1:  'info': [
364: 1:    '✅f(I) = 1',
364: 1:    '✅f(II) = 2',
364: 1:    '✅f(III) = 3',
364: 1:    '✅f(IV) = 4',
364: 1:    '✅f(V) = 5',
364: 1:    '✅f(VI) = 6',
364: 1:    '✅f(VII) = 7',
364: 1:    '✅f(VIII) = 8',
364: 1:    '✅f(IX) = 9',
364: 1:    '✅f(X) = 10',
364: 1:    '✅f(XI) = 11',
364: 1:    '✅f(XII) = 12',
364: 1:    '✅f(XIII) = 13',
364: 1:    '✅f(XIV) = 14',
364: 1:    '✅f(XV) = 15',
364: 1:    '✅f(XVI) = 16',
364: 1:    '✅f(XVII) = 17',
364: 1:    '✅f(XVIII) = 18',
364: 1:    '✅f(XIX) = 19',
364: 1:    '✅f(XX) = 20',
364: 1:    '✅f(XXX) = 30',
364: 1:    '✅f(XXXV) = 35',
364: 1:    '✅f(XXXVI) = 36',
364: 1:    '✅f(XLVI) = 46',
364: 1:    '✅f(LVII) = 57',
364: 1:    '✅f(LXVII) = 67',
364: 1:    '✅f(LXXXIX) = 89',
364: 1:    '✅f(CXXIII) = 123',
364: 1:    '✅f(CCXXXIV) = 234',
364: 1:    '✅f(CCCXLV) = 345',
364: 1:    '✅f(CDLVI) = 456',
364: 1:    '✅f(DLXVII) = 567',
364: 1:    '✅f(DCLXXVIII) = 678',
364: 1:    '✅f(DCCCXC) = 890',
364: 1:    '✅f(MCCXXXIV) = 1234',
364: 1:    '✅f(MMCCCXLV) = 2345',
364: 1:    '❌f(MMMCDLVI) = ??? != 3456'
364: 1:  ],
364: 1:  'level': 12,
364: 1:  'nextQuestion': 'MMMCDLVI',
364: 1:  'questions': [
364: 1:    'I',
364: 1:    'II',
364: 1:    'III',
364: 1:    'IV',
364: 1:    'V',
364: 1:    'VI',
364: 1:    'VII',
364: 1:    'VIII',
364: 1:    'IX',
364: 1:    'X',
364: 1:    'XI',
364: 1:    'XII',
364: 1:    'XIII',
364: 1:    'XIV',
364: 1:    'XV',
364: 1:    'XVI',
364: 1:    'XVII',
364: 1:    'XVIII',
364: 1:    'XIX',
364: 1:    'XX',
364: 1:    'XXX',
364: 1:    'XXXV',
364: 1:    'XXXVI',
364: 1:    'XLVI',
364: 1:    'LVII',
364: 1:    'LXVII',
364: 1:    'LXXXIX',
364: 1:    'CXXIII',
364: 1:    'CCXXXIV',
364: 1:    'CCCXLV',
364: 1:    'CDLVI',
364: 1:    'DLXVII',
364: 1:    'DCLXXVIII',
364: 1:    'DCCCXC',
364: 1:    'MCCXXXIV',
364: 1:    'MMCCCXLV',
364: 1:    'MMMCDLVI'
364: 1:  ]
364: 1:}
364: 1:Scores: 31185
364: 1:Answer: message('['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '30', '35', '36', '46', '57', '67', '89', '123', '234', '345', '456', '567', '678', '890', '1234', '2345', '3456']')
364: 1:Fire Event: PassTest{complexity=38, testCount=37}
364: 1:Fire Event: NextAlgorithm{complexity=38, time=0}
------------------------------------------
365: 1:BoardData {
365: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
365: 1:  'history': [
365: 1:    {
365: 1:      'answer': '1',
365: 1:      'question': 'I',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '2',
365: 1:      'question': 'II',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '3',
365: 1:      'question': 'III',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '4',
365: 1:      'question': 'IV',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '5',
365: 1:      'question': 'V',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '6',
365: 1:      'question': 'VI',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '7',
365: 1:      'question': 'VII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '8',
365: 1:      'question': 'VIII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '9',
365: 1:      'question': 'IX',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '10',
365: 1:      'question': 'X',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '11',
365: 1:      'question': 'XI',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '12',
365: 1:      'question': 'XII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '13',
365: 1:      'question': 'XIII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '14',
365: 1:      'question': 'XIV',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '15',
365: 1:      'question': 'XV',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '16',
365: 1:      'question': 'XVI',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '17',
365: 1:      'question': 'XVII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '18',
365: 1:      'question': 'XVIII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '19',
365: 1:      'question': 'XIX',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '20',
365: 1:      'question': 'XX',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '30',
365: 1:      'question': 'XXX',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '35',
365: 1:      'question': 'XXXV',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '36',
365: 1:      'question': 'XXXVI',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '46',
365: 1:      'question': 'XLVI',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '57',
365: 1:      'question': 'LVII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '67',
365: 1:      'question': 'LXVII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '89',
365: 1:      'question': 'LXXXIX',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '123',
365: 1:      'question': 'CXXIII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '234',
365: 1:      'question': 'CCXXXIV',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '345',
365: 1:      'question': 'CCCXLV',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '456',
365: 1:      'question': 'CDLVI',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '567',
365: 1:      'question': 'DLXVII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '678',
365: 1:      'question': 'DCLXXVIII',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '890',
365: 1:      'question': 'DCCCXC',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '1234',
365: 1:      'question': 'MCCXXXIV',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '2345',
365: 1:      'question': 'MMCCCXLV',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '3456',
365: 1:      'question': 'MMMCDLVI',
365: 1:      'valid': true
365: 1:    }
365: 1:  ],
365: 1:  'info': [
365: 1:    '✅f(I) = 1',
365: 1:    '✅f(II) = 2',
365: 1:    '✅f(III) = 3',
365: 1:    '✅f(IV) = 4',
365: 1:    '✅f(V) = 5',
365: 1:    '✅f(VI) = 6',
365: 1:    '✅f(VII) = 7',
365: 1:    '✅f(VIII) = 8',
365: 1:    '✅f(IX) = 9',
365: 1:    '✅f(X) = 10',
365: 1:    '✅f(XI) = 11',
365: 1:    '✅f(XII) = 12',
365: 1:    '✅f(XIII) = 13',
365: 1:    '✅f(XIV) = 14',
365: 1:    '✅f(XV) = 15',
365: 1:    '✅f(XVI) = 16',
365: 1:    '✅f(XVII) = 17',
365: 1:    '✅f(XVIII) = 18',
365: 1:    '✅f(XIX) = 19',
365: 1:    '✅f(XX) = 20',
365: 1:    '✅f(XXX) = 30',
365: 1:    '✅f(XXXV) = 35',
365: 1:    '✅f(XXXVI) = 36',
365: 1:    '✅f(XLVI) = 46',
365: 1:    '✅f(LVII) = 57',
365: 1:    '✅f(LXVII) = 67',
365: 1:    '✅f(LXXXIX) = 89',
365: 1:    '✅f(CXXIII) = 123',
365: 1:    '✅f(CCXXXIV) = 234',
365: 1:    '✅f(CCCXLV) = 345',
365: 1:    '✅f(CDLVI) = 456',
365: 1:    '✅f(DLXVII) = 567',
365: 1:    '✅f(DCLXXVIII) = 678',
365: 1:    '✅f(DCCCXC) = 890',
365: 1:    '✅f(MCCXXXIV) = 1234',
365: 1:    '✅f(MMCCCXLV) = 2345',
365: 1:    '✅f(MMMCDLVI) = 3456'
365: 1:  ],
365: 1:  'level': 12,
365: 1:  'questions': []
365: 1:}
365: 1:Scores: 36324
365: 1:Answer: message('StartNextLevel')
365: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
366: 1:BoardData {
366: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
366: 1:  'expectedAnswer': '1',
366: 1:  'history': [],
366: 1:  'info': ['❌f(1) = ??? != 1'],
366: 1:  'level': 13,
366: 1:  'nextQuestion': '1',
366: 1:  'questions': ['1']
366: 1:}
366: 1:Scores: 36324
366: 1:Answer: message('['1']')
366: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
367: 1:BoardData {
367: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
367: 1:  'expectedAnswer': '2',
367: 1:  'history': [{
367: 1:    'answer': '1',
367: 1:    'question': '1',
367: 1:    'valid': true
367: 1:  }],
367: 1:  'info': [
367: 1:    '✅f(1) = 1',
367: 1:    '❌f(2) = ??? != 2'
367: 1:  ],
367: 1:  'level': 13,
367: 1:  'nextQuestion': '2',
367: 1:  'questions': [
367: 1:    '1',
367: 1:    '2'
367: 1:  ]
367: 1:}
367: 1:Scores: 36340
367: 1:Answer: message('['1', '2']')
367: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
368: 1:BoardData {
368: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
368: 1:  'expectedAnswer': '6',
368: 1:  'history': [
368: 1:    {
368: 1:      'answer': '1',
368: 1:      'question': '1',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '2',
368: 1:      'question': '2',
368: 1:      'valid': true
368: 1:    }
368: 1:  ],
368: 1:  'info': [
368: 1:    '✅f(1) = 1',
368: 1:    '✅f(2) = 2',
368: 1:    '❌f(3) = ??? != 6'
368: 1:  ],
368: 1:  'level': 13,
368: 1:  'nextQuestion': '3',
368: 1:  'questions': [
368: 1:    '1',
368: 1:    '2',
368: 1:    '3'
368: 1:  ]
368: 1:}
368: 1:Scores: 36356
368: 1:Answer: message('['1', '2', '6']')
368: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
369: 1:BoardData {
369: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
369: 1:  'expectedAnswer': '24',
369: 1:  'history': [
369: 1:    {
369: 1:      'answer': '1',
369: 1:      'question': '1',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '2',
369: 1:      'question': '2',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '6',
369: 1:      'question': '3',
369: 1:      'valid': true
369: 1:    }
369: 1:  ],
369: 1:  'info': [
369: 1:    '✅f(1) = 1',
369: 1:    '✅f(2) = 2',
369: 1:    '✅f(3) = 6',
369: 1:    '❌f(4) = ??? != 24'
369: 1:  ],
369: 1:  'level': 13,
369: 1:  'nextQuestion': '4',
369: 1:  'questions': [
369: 1:    '1',
369: 1:    '2',
369: 1:    '3',
369: 1:    '4'
369: 1:  ]
369: 1:}
369: 1:Scores: 36372
369: 1:Answer: message('['1', '2', '6', '24']')
369: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
370: 1:BoardData {
370: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
370: 1:  'expectedAnswer': '120',
370: 1:  'history': [
370: 1:    {
370: 1:      'answer': '1',
370: 1:      'question': '1',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '2',
370: 1:      'question': '2',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '6',
370: 1:      'question': '3',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '24',
370: 1:      'question': '4',
370: 1:      'valid': true
370: 1:    }
370: 1:  ],
370: 1:  'info': [
370: 1:    '✅f(1) = 1',
370: 1:    '✅f(2) = 2',
370: 1:    '✅f(3) = 6',
370: 1:    '✅f(4) = 24',
370: 1:    '❌f(5) = ??? != 120'
370: 1:  ],
370: 1:  'level': 13,
370: 1:  'nextQuestion': '5',
370: 1:  'questions': [
370: 1:    '1',
370: 1:    '2',
370: 1:    '3',
370: 1:    '4',
370: 1:    '5'
370: 1:  ]
370: 1:}
370: 1:Scores: 36388
370: 1:Answer: message('['1', '2', '6', '24', '120']')
370: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
371: 1:BoardData {
371: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
371: 1:  'expectedAnswer': '720',
371: 1:  'history': [
371: 1:    {
371: 1:      'answer': '1',
371: 1:      'question': '1',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '2',
371: 1:      'question': '2',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '6',
371: 1:      'question': '3',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '24',
371: 1:      'question': '4',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '120',
371: 1:      'question': '5',
371: 1:      'valid': true
371: 1:    }
371: 1:  ],
371: 1:  'info': [
371: 1:    '✅f(1) = 1',
371: 1:    '✅f(2) = 2',
371: 1:    '✅f(3) = 6',
371: 1:    '✅f(4) = 24',
371: 1:    '✅f(5) = 120',
371: 1:    '❌f(6) = ??? != 720'
371: 1:  ],
371: 1:  'level': 13,
371: 1:  'nextQuestion': '6',
371: 1:  'questions': [
371: 1:    '1',
371: 1:    '2',
371: 1:    '3',
371: 1:    '4',
371: 1:    '5',
371: 1:    '6'
371: 1:  ]
371: 1:}
371: 1:Scores: 36404
371: 1:Answer: message('['1', '2', '6', '24', '120', '720']')
371: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
372: 1:BoardData {
372: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
372: 1:  'expectedAnswer': '5040',
372: 1:  'history': [
372: 1:    {
372: 1:      'answer': '1',
372: 1:      'question': '1',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '2',
372: 1:      'question': '2',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '6',
372: 1:      'question': '3',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '24',
372: 1:      'question': '4',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '120',
372: 1:      'question': '5',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '720',
372: 1:      'question': '6',
372: 1:      'valid': true
372: 1:    }
372: 1:  ],
372: 1:  'info': [
372: 1:    '✅f(1) = 1',
372: 1:    '✅f(2) = 2',
372: 1:    '✅f(3) = 6',
372: 1:    '✅f(4) = 24',
372: 1:    '✅f(5) = 120',
372: 1:    '✅f(6) = 720',
372: 1:    '❌f(7) = ??? != 5040'
372: 1:  ],
372: 1:  'level': 13,
372: 1:  'nextQuestion': '7',
372: 1:  'questions': [
372: 1:    '1',
372: 1:    '2',
372: 1:    '3',
372: 1:    '4',
372: 1:    '5',
372: 1:    '6',
372: 1:    '7'
372: 1:  ]
372: 1:}
372: 1:Scores: 36420
372: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040']')
372: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
373: 1:BoardData {
373: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
373: 1:  'expectedAnswer': '40320',
373: 1:  'history': [
373: 1:    {
373: 1:      'answer': '1',
373: 1:      'question': '1',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '2',
373: 1:      'question': '2',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '6',
373: 1:      'question': '3',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '24',
373: 1:      'question': '4',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '120',
373: 1:      'question': '5',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '720',
373: 1:      'question': '6',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '5040',
373: 1:      'question': '7',
373: 1:      'valid': true
373: 1:    }
373: 1:  ],
373: 1:  'info': [
373: 1:    '✅f(1) = 1',
373: 1:    '✅f(2) = 2',
373: 1:    '✅f(3) = 6',
373: 1:    '✅f(4) = 24',
373: 1:    '✅f(5) = 120',
373: 1:    '✅f(6) = 720',
373: 1:    '✅f(7) = 5040',
373: 1:    '❌f(8) = ??? != 40320'
373: 1:  ],
373: 1:  'level': 13,
373: 1:  'nextQuestion': '8',
373: 1:  'questions': [
373: 1:    '1',
373: 1:    '2',
373: 1:    '3',
373: 1:    '4',
373: 1:    '5',
373: 1:    '6',
373: 1:    '7',
373: 1:    '8'
373: 1:  ]
373: 1:}
373: 1:Scores: 36436
373: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320']')
373: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
374: 1:BoardData {
374: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
374: 1:  'expectedAnswer': '362880',
374: 1:  'history': [
374: 1:    {
374: 1:      'answer': '1',
374: 1:      'question': '1',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '2',
374: 1:      'question': '2',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '6',
374: 1:      'question': '3',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '24',
374: 1:      'question': '4',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '120',
374: 1:      'question': '5',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '720',
374: 1:      'question': '6',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '5040',
374: 1:      'question': '7',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '40320',
374: 1:      'question': '8',
374: 1:      'valid': true
374: 1:    }
374: 1:  ],
374: 1:  'info': [
374: 1:    '✅f(1) = 1',
374: 1:    '✅f(2) = 2',
374: 1:    '✅f(3) = 6',
374: 1:    '✅f(4) = 24',
374: 1:    '✅f(5) = 120',
374: 1:    '✅f(6) = 720',
374: 1:    '✅f(7) = 5040',
374: 1:    '✅f(8) = 40320',
374: 1:    '❌f(9) = ??? != 362880'
374: 1:  ],
374: 1:  'level': 13,
374: 1:  'nextQuestion': '9',
374: 1:  'questions': [
374: 1:    '1',
374: 1:    '2',
374: 1:    '3',
374: 1:    '4',
374: 1:    '5',
374: 1:    '6',
374: 1:    '7',
374: 1:    '8',
374: 1:    '9'
374: 1:  ]
374: 1:}
374: 1:Scores: 36452
374: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880']')
374: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
375: 1:BoardData {
375: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
375: 1:  'expectedAnswer': '3628800',
375: 1:  'history': [
375: 1:    {
375: 1:      'answer': '1',
375: 1:      'question': '1',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '2',
375: 1:      'question': '2',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '6',
375: 1:      'question': '3',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '24',
375: 1:      'question': '4',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '120',
375: 1:      'question': '5',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '720',
375: 1:      'question': '6',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '5040',
375: 1:      'question': '7',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '40320',
375: 1:      'question': '8',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '362880',
375: 1:      'question': '9',
375: 1:      'valid': true
375: 1:    }
375: 1:  ],
375: 1:  'info': [
375: 1:    '✅f(1) = 1',
375: 1:    '✅f(2) = 2',
375: 1:    '✅f(3) = 6',
375: 1:    '✅f(4) = 24',
375: 1:    '✅f(5) = 120',
375: 1:    '✅f(6) = 720',
375: 1:    '✅f(7) = 5040',
375: 1:    '✅f(8) = 40320',
375: 1:    '✅f(9) = 362880',
375: 1:    '❌f(10) = ??? != 3628800'
375: 1:  ],
375: 1:  'level': 13,
375: 1:  'nextQuestion': '10',
375: 1:  'questions': [
375: 1:    '1',
375: 1:    '2',
375: 1:    '3',
375: 1:    '4',
375: 1:    '5',
375: 1:    '6',
375: 1:    '7',
375: 1:    '8',
375: 1:    '9',
375: 1:    '10'
375: 1:  ]
375: 1:}
375: 1:Scores: 36468
375: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800']')
375: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
376: 1:BoardData {
376: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
376: 1:  'expectedAnswer': '39916800',
376: 1:  'history': [
376: 1:    {
376: 1:      'answer': '1',
376: 1:      'question': '1',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '2',
376: 1:      'question': '2',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '6',
376: 1:      'question': '3',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '24',
376: 1:      'question': '4',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '120',
376: 1:      'question': '5',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '720',
376: 1:      'question': '6',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '5040',
376: 1:      'question': '7',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '40320',
376: 1:      'question': '8',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '362880',
376: 1:      'question': '9',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '3628800',
376: 1:      'question': '10',
376: 1:      'valid': true
376: 1:    }
376: 1:  ],
376: 1:  'info': [
376: 1:    '✅f(1) = 1',
376: 1:    '✅f(2) = 2',
376: 1:    '✅f(3) = 6',
376: 1:    '✅f(4) = 24',
376: 1:    '✅f(5) = 120',
376: 1:    '✅f(6) = 720',
376: 1:    '✅f(7) = 5040',
376: 1:    '✅f(8) = 40320',
376: 1:    '✅f(9) = 362880',
376: 1:    '✅f(10) = 3628800',
376: 1:    '❌f(11) = ??? != 39916800'
376: 1:  ],
376: 1:  'level': 13,
376: 1:  'nextQuestion': '11',
376: 1:  'questions': [
376: 1:    '1',
376: 1:    '2',
376: 1:    '3',
376: 1:    '4',
376: 1:    '5',
376: 1:    '6',
376: 1:    '7',
376: 1:    '8',
376: 1:    '9',
376: 1:    '10',
376: 1:    '11'
376: 1:  ]
376: 1:}
376: 1:Scores: 36484
376: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800']')
376: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
377: 1:BoardData {
377: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
377: 1:  'expectedAnswer': '479001600',
377: 1:  'history': [
377: 1:    {
377: 1:      'answer': '1',
377: 1:      'question': '1',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '2',
377: 1:      'question': '2',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '6',
377: 1:      'question': '3',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '24',
377: 1:      'question': '4',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '120',
377: 1:      'question': '5',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '720',
377: 1:      'question': '6',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '5040',
377: 1:      'question': '7',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '40320',
377: 1:      'question': '8',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '362880',
377: 1:      'question': '9',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '3628800',
377: 1:      'question': '10',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '39916800',
377: 1:      'question': '11',
377: 1:      'valid': true
377: 1:    }
377: 1:  ],
377: 1:  'info': [
377: 1:    '✅f(1) = 1',
377: 1:    '✅f(2) = 2',
377: 1:    '✅f(3) = 6',
377: 1:    '✅f(4) = 24',
377: 1:    '✅f(5) = 120',
377: 1:    '✅f(6) = 720',
377: 1:    '✅f(7) = 5040',
377: 1:    '✅f(8) = 40320',
377: 1:    '✅f(9) = 362880',
377: 1:    '✅f(10) = 3628800',
377: 1:    '✅f(11) = 39916800',
377: 1:    '❌f(12) = ??? != 479001600'
377: 1:  ],
377: 1:  'level': 13,
377: 1:  'nextQuestion': '12',
377: 1:  'questions': [
377: 1:    '1',
377: 1:    '2',
377: 1:    '3',
377: 1:    '4',
377: 1:    '5',
377: 1:    '6',
377: 1:    '7',
377: 1:    '8',
377: 1:    '9',
377: 1:    '10',
377: 1:    '11',
377: 1:    '12'
377: 1:  ]
377: 1:}
377: 1:Scores: 36500
377: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600']')
377: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
378: 1:BoardData {
378: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
378: 1:  'expectedAnswer': '6227020800',
378: 1:  'history': [
378: 1:    {
378: 1:      'answer': '1',
378: 1:      'question': '1',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '2',
378: 1:      'question': '2',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '6',
378: 1:      'question': '3',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '24',
378: 1:      'question': '4',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '120',
378: 1:      'question': '5',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '720',
378: 1:      'question': '6',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '5040',
378: 1:      'question': '7',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '40320',
378: 1:      'question': '8',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '362880',
378: 1:      'question': '9',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '3628800',
378: 1:      'question': '10',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '39916800',
378: 1:      'question': '11',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '479001600',
378: 1:      'question': '12',
378: 1:      'valid': true
378: 1:    }
378: 1:  ],
378: 1:  'info': [
378: 1:    '✅f(1) = 1',
378: 1:    '✅f(2) = 2',
378: 1:    '✅f(3) = 6',
378: 1:    '✅f(4) = 24',
378: 1:    '✅f(5) = 120',
378: 1:    '✅f(6) = 720',
378: 1:    '✅f(7) = 5040',
378: 1:    '✅f(8) = 40320',
378: 1:    '✅f(9) = 362880',
378: 1:    '✅f(10) = 3628800',
378: 1:    '✅f(11) = 39916800',
378: 1:    '✅f(12) = 479001600',
378: 1:    '❌f(13) = ??? != 6227020800'
378: 1:  ],
378: 1:  'level': 13,
378: 1:  'nextQuestion': '13',
378: 1:  'questions': [
378: 1:    '1',
378: 1:    '2',
378: 1:    '3',
378: 1:    '4',
378: 1:    '5',
378: 1:    '6',
378: 1:    '7',
378: 1:    '8',
378: 1:    '9',
378: 1:    '10',
378: 1:    '11',
378: 1:    '12',
378: 1:    '13'
378: 1:  ]
378: 1:}
378: 1:Scores: 36516
378: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800']')
378: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
379: 1:BoardData {
379: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
379: 1:  'expectedAnswer': '87178291200',
379: 1:  'history': [
379: 1:    {
379: 1:      'answer': '1',
379: 1:      'question': '1',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '2',
379: 1:      'question': '2',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '6',
379: 1:      'question': '3',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '24',
379: 1:      'question': '4',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '120',
379: 1:      'question': '5',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '720',
379: 1:      'question': '6',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '5040',
379: 1:      'question': '7',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '40320',
379: 1:      'question': '8',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '362880',
379: 1:      'question': '9',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '3628800',
379: 1:      'question': '10',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '39916800',
379: 1:      'question': '11',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '479001600',
379: 1:      'question': '12',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '6227020800',
379: 1:      'question': '13',
379: 1:      'valid': true
379: 1:    }
379: 1:  ],
379: 1:  'info': [
379: 1:    '✅f(1) = 1',
379: 1:    '✅f(2) = 2',
379: 1:    '✅f(3) = 6',
379: 1:    '✅f(4) = 24',
379: 1:    '✅f(5) = 120',
379: 1:    '✅f(6) = 720',
379: 1:    '✅f(7) = 5040',
379: 1:    '✅f(8) = 40320',
379: 1:    '✅f(9) = 362880',
379: 1:    '✅f(10) = 3628800',
379: 1:    '✅f(11) = 39916800',
379: 1:    '✅f(12) = 479001600',
379: 1:    '✅f(13) = 6227020800',
379: 1:    '❌f(14) = ??? != 87178291200'
379: 1:  ],
379: 1:  'level': 13,
379: 1:  'nextQuestion': '14',
379: 1:  'questions': [
379: 1:    '1',
379: 1:    '2',
379: 1:    '3',
379: 1:    '4',
379: 1:    '5',
379: 1:    '6',
379: 1:    '7',
379: 1:    '8',
379: 1:    '9',
379: 1:    '10',
379: 1:    '11',
379: 1:    '12',
379: 1:    '13',
379: 1:    '14'
379: 1:  ]
379: 1:}
379: 1:Scores: 36532
379: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200']')
379: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
380: 1:BoardData {
380: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
380: 1:  'expectedAnswer': '1307674368000',
380: 1:  'history': [
380: 1:    {
380: 1:      'answer': '1',
380: 1:      'question': '1',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '2',
380: 1:      'question': '2',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '6',
380: 1:      'question': '3',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '24',
380: 1:      'question': '4',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '120',
380: 1:      'question': '5',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '720',
380: 1:      'question': '6',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '5040',
380: 1:      'question': '7',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '40320',
380: 1:      'question': '8',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '362880',
380: 1:      'question': '9',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '3628800',
380: 1:      'question': '10',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '39916800',
380: 1:      'question': '11',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '479001600',
380: 1:      'question': '12',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '6227020800',
380: 1:      'question': '13',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '87178291200',
380: 1:      'question': '14',
380: 1:      'valid': true
380: 1:    }
380: 1:  ],
380: 1:  'info': [
380: 1:    '✅f(1) = 1',
380: 1:    '✅f(2) = 2',
380: 1:    '✅f(3) = 6',
380: 1:    '✅f(4) = 24',
380: 1:    '✅f(5) = 120',
380: 1:    '✅f(6) = 720',
380: 1:    '✅f(7) = 5040',
380: 1:    '✅f(8) = 40320',
380: 1:    '✅f(9) = 362880',
380: 1:    '✅f(10) = 3628800',
380: 1:    '✅f(11) = 39916800',
380: 1:    '✅f(12) = 479001600',
380: 1:    '✅f(13) = 6227020800',
380: 1:    '✅f(14) = 87178291200',
380: 1:    '❌f(15) = ??? != 1307674368000'
380: 1:  ],
380: 1:  'level': 13,
380: 1:  'nextQuestion': '15',
380: 1:  'questions': [
380: 1:    '1',
380: 1:    '2',
380: 1:    '3',
380: 1:    '4',
380: 1:    '5',
380: 1:    '6',
380: 1:    '7',
380: 1:    '8',
380: 1:    '9',
380: 1:    '10',
380: 1:    '11',
380: 1:    '12',
380: 1:    '13',
380: 1:    '14',
380: 1:    '15'
380: 1:  ]
380: 1:}
380: 1:Scores: 36548
380: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000']')
380: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
381: 1:BoardData {
381: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
381: 1:  'expectedAnswer': '20922789888000',
381: 1:  'history': [
381: 1:    {
381: 1:      'answer': '1',
381: 1:      'question': '1',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '2',
381: 1:      'question': '2',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '6',
381: 1:      'question': '3',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '24',
381: 1:      'question': '4',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '120',
381: 1:      'question': '5',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '720',
381: 1:      'question': '6',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '5040',
381: 1:      'question': '7',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '40320',
381: 1:      'question': '8',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '362880',
381: 1:      'question': '9',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '3628800',
381: 1:      'question': '10',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '39916800',
381: 1:      'question': '11',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '479001600',
381: 1:      'question': '12',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '6227020800',
381: 1:      'question': '13',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '87178291200',
381: 1:      'question': '14',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '1307674368000',
381: 1:      'question': '15',
381: 1:      'valid': true
381: 1:    }
381: 1:  ],
381: 1:  'info': [
381: 1:    '✅f(1) = 1',
381: 1:    '✅f(2) = 2',
381: 1:    '✅f(3) = 6',
381: 1:    '✅f(4) = 24',
381: 1:    '✅f(5) = 120',
381: 1:    '✅f(6) = 720',
381: 1:    '✅f(7) = 5040',
381: 1:    '✅f(8) = 40320',
381: 1:    '✅f(9) = 362880',
381: 1:    '✅f(10) = 3628800',
381: 1:    '✅f(11) = 39916800',
381: 1:    '✅f(12) = 479001600',
381: 1:    '✅f(13) = 6227020800',
381: 1:    '✅f(14) = 87178291200',
381: 1:    '✅f(15) = 1307674368000',
381: 1:    '❌f(16) = ??? != 20922789888000'
381: 1:  ],
381: 1:  'level': 13,
381: 1:  'nextQuestion': '16',
381: 1:  'questions': [
381: 1:    '1',
381: 1:    '2',
381: 1:    '3',
381: 1:    '4',
381: 1:    '5',
381: 1:    '6',
381: 1:    '7',
381: 1:    '8',
381: 1:    '9',
381: 1:    '10',
381: 1:    '11',
381: 1:    '12',
381: 1:    '13',
381: 1:    '14',
381: 1:    '15',
381: 1:    '16'
381: 1:  ]
381: 1:}
381: 1:Scores: 36564
381: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000']')
381: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
382: 1:BoardData {
382: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
382: 1:  'expectedAnswer': '355687428096000',
382: 1:  'history': [
382: 1:    {
382: 1:      'answer': '1',
382: 1:      'question': '1',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '2',
382: 1:      'question': '2',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '6',
382: 1:      'question': '3',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '24',
382: 1:      'question': '4',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '120',
382: 1:      'question': '5',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '720',
382: 1:      'question': '6',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '5040',
382: 1:      'question': '7',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '40320',
382: 1:      'question': '8',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '362880',
382: 1:      'question': '9',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '3628800',
382: 1:      'question': '10',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '39916800',
382: 1:      'question': '11',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '479001600',
382: 1:      'question': '12',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '6227020800',
382: 1:      'question': '13',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '87178291200',
382: 1:      'question': '14',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '1307674368000',
382: 1:      'question': '15',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '20922789888000',
382: 1:      'question': '16',
382: 1:      'valid': true
382: 1:    }
382: 1:  ],
382: 1:  'info': [
382: 1:    '✅f(1) = 1',
382: 1:    '✅f(2) = 2',
382: 1:    '✅f(3) = 6',
382: 1:    '✅f(4) = 24',
382: 1:    '✅f(5) = 120',
382: 1:    '✅f(6) = 720',
382: 1:    '✅f(7) = 5040',
382: 1:    '✅f(8) = 40320',
382: 1:    '✅f(9) = 362880',
382: 1:    '✅f(10) = 3628800',
382: 1:    '✅f(11) = 39916800',
382: 1:    '✅f(12) = 479001600',
382: 1:    '✅f(13) = 6227020800',
382: 1:    '✅f(14) = 87178291200',
382: 1:    '✅f(15) = 1307674368000',
382: 1:    '✅f(16) = 20922789888000',
382: 1:    '❌f(17) = ??? != 355687428096000'
382: 1:  ],
382: 1:  'level': 13,
382: 1:  'nextQuestion': '17',
382: 1:  'questions': [
382: 1:    '1',
382: 1:    '2',
382: 1:    '3',
382: 1:    '4',
382: 1:    '5',
382: 1:    '6',
382: 1:    '7',
382: 1:    '8',
382: 1:    '9',
382: 1:    '10',
382: 1:    '11',
382: 1:    '12',
382: 1:    '13',
382: 1:    '14',
382: 1:    '15',
382: 1:    '16',
382: 1:    '17'
382: 1:  ]
382: 1:}
382: 1:Scores: 36580
382: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000']')
382: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
383: 1:BoardData {
383: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
383: 1:  'expectedAnswer': '6402373705728000',
383: 1:  'history': [
383: 1:    {
383: 1:      'answer': '1',
383: 1:      'question': '1',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '2',
383: 1:      'question': '2',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '6',
383: 1:      'question': '3',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '24',
383: 1:      'question': '4',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '120',
383: 1:      'question': '5',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '720',
383: 1:      'question': '6',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '5040',
383: 1:      'question': '7',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '40320',
383: 1:      'question': '8',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '362880',
383: 1:      'question': '9',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '3628800',
383: 1:      'question': '10',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '39916800',
383: 1:      'question': '11',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '479001600',
383: 1:      'question': '12',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '6227020800',
383: 1:      'question': '13',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '87178291200',
383: 1:      'question': '14',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '1307674368000',
383: 1:      'question': '15',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '20922789888000',
383: 1:      'question': '16',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '355687428096000',
383: 1:      'question': '17',
383: 1:      'valid': true
383: 1:    }
383: 1:  ],
383: 1:  'info': [
383: 1:    '✅f(1) = 1',
383: 1:    '✅f(2) = 2',
383: 1:    '✅f(3) = 6',
383: 1:    '✅f(4) = 24',
383: 1:    '✅f(5) = 120',
383: 1:    '✅f(6) = 720',
383: 1:    '✅f(7) = 5040',
383: 1:    '✅f(8) = 40320',
383: 1:    '✅f(9) = 362880',
383: 1:    '✅f(10) = 3628800',
383: 1:    '✅f(11) = 39916800',
383: 1:    '✅f(12) = 479001600',
383: 1:    '✅f(13) = 6227020800',
383: 1:    '✅f(14) = 87178291200',
383: 1:    '✅f(15) = 1307674368000',
383: 1:    '✅f(16) = 20922789888000',
383: 1:    '✅f(17) = 355687428096000',
383: 1:    '❌f(18) = ??? != 6402373705728000'
383: 1:  ],
383: 1:  'level': 13,
383: 1:  'nextQuestion': '18',
383: 1:  'questions': [
383: 1:    '1',
383: 1:    '2',
383: 1:    '3',
383: 1:    '4',
383: 1:    '5',
383: 1:    '6',
383: 1:    '7',
383: 1:    '8',
383: 1:    '9',
383: 1:    '10',
383: 1:    '11',
383: 1:    '12',
383: 1:    '13',
383: 1:    '14',
383: 1:    '15',
383: 1:    '16',
383: 1:    '17',
383: 1:    '18'
383: 1:  ]
383: 1:}
383: 1:Scores: 36596
383: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000']')
383: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
384: 1:BoardData {
384: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
384: 1:  'expectedAnswer': '121645100408832000',
384: 1:  'history': [
384: 1:    {
384: 1:      'answer': '1',
384: 1:      'question': '1',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '2',
384: 1:      'question': '2',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '6',
384: 1:      'question': '3',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '24',
384: 1:      'question': '4',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '120',
384: 1:      'question': '5',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '720',
384: 1:      'question': '6',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '5040',
384: 1:      'question': '7',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '40320',
384: 1:      'question': '8',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '362880',
384: 1:      'question': '9',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '3628800',
384: 1:      'question': '10',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '39916800',
384: 1:      'question': '11',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '479001600',
384: 1:      'question': '12',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '6227020800',
384: 1:      'question': '13',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '87178291200',
384: 1:      'question': '14',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '1307674368000',
384: 1:      'question': '15',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '20922789888000',
384: 1:      'question': '16',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '355687428096000',
384: 1:      'question': '17',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '6402373705728000',
384: 1:      'question': '18',
384: 1:      'valid': true
384: 1:    }
384: 1:  ],
384: 1:  'info': [
384: 1:    '✅f(1) = 1',
384: 1:    '✅f(2) = 2',
384: 1:    '✅f(3) = 6',
384: 1:    '✅f(4) = 24',
384: 1:    '✅f(5) = 120',
384: 1:    '✅f(6) = 720',
384: 1:    '✅f(7) = 5040',
384: 1:    '✅f(8) = 40320',
384: 1:    '✅f(9) = 362880',
384: 1:    '✅f(10) = 3628800',
384: 1:    '✅f(11) = 39916800',
384: 1:    '✅f(12) = 479001600',
384: 1:    '✅f(13) = 6227020800',
384: 1:    '✅f(14) = 87178291200',
384: 1:    '✅f(15) = 1307674368000',
384: 1:    '✅f(16) = 20922789888000',
384: 1:    '✅f(17) = 355687428096000',
384: 1:    '✅f(18) = 6402373705728000',
384: 1:    '❌f(19) = ??? != 121645100408832000'
384: 1:  ],
384: 1:  'level': 13,
384: 1:  'nextQuestion': '19',
384: 1:  'questions': [
384: 1:    '1',
384: 1:    '2',
384: 1:    '3',
384: 1:    '4',
384: 1:    '5',
384: 1:    '6',
384: 1:    '7',
384: 1:    '8',
384: 1:    '9',
384: 1:    '10',
384: 1:    '11',
384: 1:    '12',
384: 1:    '13',
384: 1:    '14',
384: 1:    '15',
384: 1:    '16',
384: 1:    '17',
384: 1:    '18',
384: 1:    '19'
384: 1:  ]
384: 1:}
384: 1:Scores: 36612
384: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000']')
384: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
385: 1:BoardData {
385: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
385: 1:  'expectedAnswer': '2432902008176640000',
385: 1:  'history': [
385: 1:    {
385: 1:      'answer': '1',
385: 1:      'question': '1',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '2',
385: 1:      'question': '2',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '6',
385: 1:      'question': '3',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '24',
385: 1:      'question': '4',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '120',
385: 1:      'question': '5',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '720',
385: 1:      'question': '6',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '5040',
385: 1:      'question': '7',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '40320',
385: 1:      'question': '8',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '362880',
385: 1:      'question': '9',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '3628800',
385: 1:      'question': '10',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '39916800',
385: 1:      'question': '11',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '479001600',
385: 1:      'question': '12',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '6227020800',
385: 1:      'question': '13',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '87178291200',
385: 1:      'question': '14',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '1307674368000',
385: 1:      'question': '15',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '20922789888000',
385: 1:      'question': '16',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '355687428096000',
385: 1:      'question': '17',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '6402373705728000',
385: 1:      'question': '18',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '121645100408832000',
385: 1:      'question': '19',
385: 1:      'valid': true
385: 1:    }
385: 1:  ],
385: 1:  'info': [
385: 1:    '✅f(1) = 1',
385: 1:    '✅f(2) = 2',
385: 1:    '✅f(3) = 6',
385: 1:    '✅f(4) = 24',
385: 1:    '✅f(5) = 120',
385: 1:    '✅f(6) = 720',
385: 1:    '✅f(7) = 5040',
385: 1:    '✅f(8) = 40320',
385: 1:    '✅f(9) = 362880',
385: 1:    '✅f(10) = 3628800',
385: 1:    '✅f(11) = 39916800',
385: 1:    '✅f(12) = 479001600',
385: 1:    '✅f(13) = 6227020800',
385: 1:    '✅f(14) = 87178291200',
385: 1:    '✅f(15) = 1307674368000',
385: 1:    '✅f(16) = 20922789888000',
385: 1:    '✅f(17) = 355687428096000',
385: 1:    '✅f(18) = 6402373705728000',
385: 1:    '✅f(19) = 121645100408832000',
385: 1:    '❌f(20) = ??? != 2432902008176640000'
385: 1:  ],
385: 1:  'level': 13,
385: 1:  'nextQuestion': '20',
385: 1:  'questions': [
385: 1:    '1',
385: 1:    '2',
385: 1:    '3',
385: 1:    '4',
385: 1:    '5',
385: 1:    '6',
385: 1:    '7',
385: 1:    '8',
385: 1:    '9',
385: 1:    '10',
385: 1:    '11',
385: 1:    '12',
385: 1:    '13',
385: 1:    '14',
385: 1:    '15',
385: 1:    '16',
385: 1:    '17',
385: 1:    '18',
385: 1:    '19',
385: 1:    '20'
385: 1:  ]
385: 1:}
385: 1:Scores: 36628
385: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000']')
385: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
386: 1:BoardData {
386: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
386: 1:  'expectedAnswer': '51090942171709440000',
386: 1:  'history': [
386: 1:    {
386: 1:      'answer': '1',
386: 1:      'question': '1',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '2',
386: 1:      'question': '2',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '6',
386: 1:      'question': '3',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '24',
386: 1:      'question': '4',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '120',
386: 1:      'question': '5',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '720',
386: 1:      'question': '6',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '5040',
386: 1:      'question': '7',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '40320',
386: 1:      'question': '8',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '362880',
386: 1:      'question': '9',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '3628800',
386: 1:      'question': '10',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '39916800',
386: 1:      'question': '11',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '479001600',
386: 1:      'question': '12',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '6227020800',
386: 1:      'question': '13',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '87178291200',
386: 1:      'question': '14',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '1307674368000',
386: 1:      'question': '15',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '20922789888000',
386: 1:      'question': '16',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '355687428096000',
386: 1:      'question': '17',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '6402373705728000',
386: 1:      'question': '18',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '121645100408832000',
386: 1:      'question': '19',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '2432902008176640000',
386: 1:      'question': '20',
386: 1:      'valid': true
386: 1:    }
386: 1:  ],
386: 1:  'info': [
386: 1:    '✅f(1) = 1',
386: 1:    '✅f(2) = 2',
386: 1:    '✅f(3) = 6',
386: 1:    '✅f(4) = 24',
386: 1:    '✅f(5) = 120',
386: 1:    '✅f(6) = 720',
386: 1:    '✅f(7) = 5040',
386: 1:    '✅f(8) = 40320',
386: 1:    '✅f(9) = 362880',
386: 1:    '✅f(10) = 3628800',
386: 1:    '✅f(11) = 39916800',
386: 1:    '✅f(12) = 479001600',
386: 1:    '✅f(13) = 6227020800',
386: 1:    '✅f(14) = 87178291200',
386: 1:    '✅f(15) = 1307674368000',
386: 1:    '✅f(16) = 20922789888000',
386: 1:    '✅f(17) = 355687428096000',
386: 1:    '✅f(18) = 6402373705728000',
386: 1:    '✅f(19) = 121645100408832000',
386: 1:    '✅f(20) = 2432902008176640000',
386: 1:    '❌f(21) = ??? != 51090942171709440000'
386: 1:  ],
386: 1:  'level': 13,
386: 1:  'nextQuestion': '21',
386: 1:  'questions': [
386: 1:    '1',
386: 1:    '2',
386: 1:    '3',
386: 1:    '4',
386: 1:    '5',
386: 1:    '6',
386: 1:    '7',
386: 1:    '8',
386: 1:    '9',
386: 1:    '10',
386: 1:    '11',
386: 1:    '12',
386: 1:    '13',
386: 1:    '14',
386: 1:    '15',
386: 1:    '16',
386: 1:    '17',
386: 1:    '18',
386: 1:    '19',
386: 1:    '20',
386: 1:    '21'
386: 1:  ]
386: 1:}
386: 1:Scores: 36644
386: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000']')
386: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
387: 1:BoardData {
387: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
387: 1:  'expectedAnswer': '1124000727777607680000',
387: 1:  'history': [
387: 1:    {
387: 1:      'answer': '1',
387: 1:      'question': '1',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '2',
387: 1:      'question': '2',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '6',
387: 1:      'question': '3',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '24',
387: 1:      'question': '4',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '120',
387: 1:      'question': '5',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '720',
387: 1:      'question': '6',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '5040',
387: 1:      'question': '7',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '40320',
387: 1:      'question': '8',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '362880',
387: 1:      'question': '9',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '3628800',
387: 1:      'question': '10',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '39916800',
387: 1:      'question': '11',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '479001600',
387: 1:      'question': '12',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '6227020800',
387: 1:      'question': '13',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '87178291200',
387: 1:      'question': '14',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '1307674368000',
387: 1:      'question': '15',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '20922789888000',
387: 1:      'question': '16',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '355687428096000',
387: 1:      'question': '17',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '6402373705728000',
387: 1:      'question': '18',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '121645100408832000',
387: 1:      'question': '19',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '2432902008176640000',
387: 1:      'question': '20',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '51090942171709440000',
387: 1:      'question': '21',
387: 1:      'valid': true
387: 1:    }
387: 1:  ],
387: 1:  'info': [
387: 1:    '✅f(1) = 1',
387: 1:    '✅f(2) = 2',
387: 1:    '✅f(3) = 6',
387: 1:    '✅f(4) = 24',
387: 1:    '✅f(5) = 120',
387: 1:    '✅f(6) = 720',
387: 1:    '✅f(7) = 5040',
387: 1:    '✅f(8) = 40320',
387: 1:    '✅f(9) = 362880',
387: 1:    '✅f(10) = 3628800',
387: 1:    '✅f(11) = 39916800',
387: 1:    '✅f(12) = 479001600',
387: 1:    '✅f(13) = 6227020800',
387: 1:    '✅f(14) = 87178291200',
387: 1:    '✅f(15) = 1307674368000',
387: 1:    '✅f(16) = 20922789888000',
387: 1:    '✅f(17) = 355687428096000',
387: 1:    '✅f(18) = 6402373705728000',
387: 1:    '✅f(19) = 121645100408832000',
387: 1:    '✅f(20) = 2432902008176640000',
387: 1:    '✅f(21) = 51090942171709440000',
387: 1:    '❌f(22) = ??? != 1124000727777607680000'
387: 1:  ],
387: 1:  'level': 13,
387: 1:  'nextQuestion': '22',
387: 1:  'questions': [
387: 1:    '1',
387: 1:    '2',
387: 1:    '3',
387: 1:    '4',
387: 1:    '5',
387: 1:    '6',
387: 1:    '7',
387: 1:    '8',
387: 1:    '9',
387: 1:    '10',
387: 1:    '11',
387: 1:    '12',
387: 1:    '13',
387: 1:    '14',
387: 1:    '15',
387: 1:    '16',
387: 1:    '17',
387: 1:    '18',
387: 1:    '19',
387: 1:    '20',
387: 1:    '21',
387: 1:    '22'
387: 1:  ]
387: 1:}
387: 1:Scores: 36660
387: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000']')
387: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
388: 1:BoardData {
388: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
388: 1:  'expectedAnswer': '25852016738884976640000',
388: 1:  'history': [
388: 1:    {
388: 1:      'answer': '1',
388: 1:      'question': '1',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '2',
388: 1:      'question': '2',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '6',
388: 1:      'question': '3',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '24',
388: 1:      'question': '4',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '120',
388: 1:      'question': '5',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '720',
388: 1:      'question': '6',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '5040',
388: 1:      'question': '7',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '40320',
388: 1:      'question': '8',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '362880',
388: 1:      'question': '9',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '3628800',
388: 1:      'question': '10',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '39916800',
388: 1:      'question': '11',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '479001600',
388: 1:      'question': '12',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '6227020800',
388: 1:      'question': '13',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '87178291200',
388: 1:      'question': '14',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '1307674368000',
388: 1:      'question': '15',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '20922789888000',
388: 1:      'question': '16',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '355687428096000',
388: 1:      'question': '17',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '6402373705728000',
388: 1:      'question': '18',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '121645100408832000',
388: 1:      'question': '19',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '2432902008176640000',
388: 1:      'question': '20',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '51090942171709440000',
388: 1:      'question': '21',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '1124000727777607680000',
388: 1:      'question': '22',
388: 1:      'valid': true
388: 1:    }
388: 1:  ],
388: 1:  'info': [
388: 1:    '✅f(1) = 1',
388: 1:    '✅f(2) = 2',
388: 1:    '✅f(3) = 6',
388: 1:    '✅f(4) = 24',
388: 1:    '✅f(5) = 120',
388: 1:    '✅f(6) = 720',
388: 1:    '✅f(7) = 5040',
388: 1:    '✅f(8) = 40320',
388: 1:    '✅f(9) = 362880',
388: 1:    '✅f(10) = 3628800',
388: 1:    '✅f(11) = 39916800',
388: 1:    '✅f(12) = 479001600',
388: 1:    '✅f(13) = 6227020800',
388: 1:    '✅f(14) = 87178291200',
388: 1:    '✅f(15) = 1307674368000',
388: 1:    '✅f(16) = 20922789888000',
388: 1:    '✅f(17) = 355687428096000',
388: 1:    '✅f(18) = 6402373705728000',
388: 1:    '✅f(19) = 121645100408832000',
388: 1:    '✅f(20) = 2432902008176640000',
388: 1:    '✅f(21) = 51090942171709440000',
388: 1:    '✅f(22) = 1124000727777607680000',
388: 1:    '❌f(23) = ??? != 25852016738884976640000'
388: 1:  ],
388: 1:  'level': 13,
388: 1:  'nextQuestion': '23',
388: 1:  'questions': [
388: 1:    '1',
388: 1:    '2',
388: 1:    '3',
388: 1:    '4',
388: 1:    '5',
388: 1:    '6',
388: 1:    '7',
388: 1:    '8',
388: 1:    '9',
388: 1:    '10',
388: 1:    '11',
388: 1:    '12',
388: 1:    '13',
388: 1:    '14',
388: 1:    '15',
388: 1:    '16',
388: 1:    '17',
388: 1:    '18',
388: 1:    '19',
388: 1:    '20',
388: 1:    '21',
388: 1:    '22',
388: 1:    '23'
388: 1:  ]
388: 1:}
388: 1:Scores: 36676
388: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000']')
388: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
389: 1:BoardData {
389: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
389: 1:  'expectedAnswer': '620448401733239439360000',
389: 1:  'history': [
389: 1:    {
389: 1:      'answer': '1',
389: 1:      'question': '1',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '2',
389: 1:      'question': '2',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '6',
389: 1:      'question': '3',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '24',
389: 1:      'question': '4',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '120',
389: 1:      'question': '5',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '720',
389: 1:      'question': '6',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '5040',
389: 1:      'question': '7',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '40320',
389: 1:      'question': '8',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '362880',
389: 1:      'question': '9',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '3628800',
389: 1:      'question': '10',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '39916800',
389: 1:      'question': '11',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '479001600',
389: 1:      'question': '12',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '6227020800',
389: 1:      'question': '13',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '87178291200',
389: 1:      'question': '14',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '1307674368000',
389: 1:      'question': '15',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '20922789888000',
389: 1:      'question': '16',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '355687428096000',
389: 1:      'question': '17',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '6402373705728000',
389: 1:      'question': '18',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '121645100408832000',
389: 1:      'question': '19',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '2432902008176640000',
389: 1:      'question': '20',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '51090942171709440000',
389: 1:      'question': '21',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '1124000727777607680000',
389: 1:      'question': '22',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '25852016738884976640000',
389: 1:      'question': '23',
389: 1:      'valid': true
389: 1:    }
389: 1:  ],
389: 1:  'info': [
389: 1:    '✅f(1) = 1',
389: 1:    '✅f(2) = 2',
389: 1:    '✅f(3) = 6',
389: 1:    '✅f(4) = 24',
389: 1:    '✅f(5) = 120',
389: 1:    '✅f(6) = 720',
389: 1:    '✅f(7) = 5040',
389: 1:    '✅f(8) = 40320',
389: 1:    '✅f(9) = 362880',
389: 1:    '✅f(10) = 3628800',
389: 1:    '✅f(11) = 39916800',
389: 1:    '✅f(12) = 479001600',
389: 1:    '✅f(13) = 6227020800',
389: 1:    '✅f(14) = 87178291200',
389: 1:    '✅f(15) = 1307674368000',
389: 1:    '✅f(16) = 20922789888000',
389: 1:    '✅f(17) = 355687428096000',
389: 1:    '✅f(18) = 6402373705728000',
389: 1:    '✅f(19) = 121645100408832000',
389: 1:    '✅f(20) = 2432902008176640000',
389: 1:    '✅f(21) = 51090942171709440000',
389: 1:    '✅f(22) = 1124000727777607680000',
389: 1:    '✅f(23) = 25852016738884976640000',
389: 1:    '❌f(24) = ??? != 620448401733239439360000'
389: 1:  ],
389: 1:  'level': 13,
389: 1:  'nextQuestion': '24',
389: 1:  'questions': [
389: 1:    '1',
389: 1:    '2',
389: 1:    '3',
389: 1:    '4',
389: 1:    '5',
389: 1:    '6',
389: 1:    '7',
389: 1:    '8',
389: 1:    '9',
389: 1:    '10',
389: 1:    '11',
389: 1:    '12',
389: 1:    '13',
389: 1:    '14',
389: 1:    '15',
389: 1:    '16',
389: 1:    '17',
389: 1:    '18',
389: 1:    '19',
389: 1:    '20',
389: 1:    '21',
389: 1:    '22',
389: 1:    '23',
389: 1:    '24'
389: 1:  ]
389: 1:}
389: 1:Scores: 36692
389: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000', '620448401733239439360000']')
389: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
390: 1:BoardData {
390: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
390: 1:  'expectedAnswer': '15511210043330985984000000',
390: 1:  'history': [
390: 1:    {
390: 1:      'answer': '1',
390: 1:      'question': '1',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '2',
390: 1:      'question': '2',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '6',
390: 1:      'question': '3',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '24',
390: 1:      'question': '4',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '120',
390: 1:      'question': '5',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '720',
390: 1:      'question': '6',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '5040',
390: 1:      'question': '7',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '40320',
390: 1:      'question': '8',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '362880',
390: 1:      'question': '9',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '3628800',
390: 1:      'question': '10',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '39916800',
390: 1:      'question': '11',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '479001600',
390: 1:      'question': '12',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '6227020800',
390: 1:      'question': '13',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '87178291200',
390: 1:      'question': '14',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '1307674368000',
390: 1:      'question': '15',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '20922789888000',
390: 1:      'question': '16',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '355687428096000',
390: 1:      'question': '17',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '6402373705728000',
390: 1:      'question': '18',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '121645100408832000',
390: 1:      'question': '19',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '2432902008176640000',
390: 1:      'question': '20',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '51090942171709440000',
390: 1:      'question': '21',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '1124000727777607680000',
390: 1:      'question': '22',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '25852016738884976640000',
390: 1:      'question': '23',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '620448401733239439360000',
390: 1:      'question': '24',
390: 1:      'valid': true
390: 1:    }
390: 1:  ],
390: 1:  'info': [
390: 1:    '✅f(1) = 1',
390: 1:    '✅f(2) = 2',
390: 1:    '✅f(3) = 6',
390: 1:    '✅f(4) = 24',
390: 1:    '✅f(5) = 120',
390: 1:    '✅f(6) = 720',
390: 1:    '✅f(7) = 5040',
390: 1:    '✅f(8) = 40320',
390: 1:    '✅f(9) = 362880',
390: 1:    '✅f(10) = 3628800',
390: 1:    '✅f(11) = 39916800',
390: 1:    '✅f(12) = 479001600',
390: 1:    '✅f(13) = 6227020800',
390: 1:    '✅f(14) = 87178291200',
390: 1:    '✅f(15) = 1307674368000',
390: 1:    '✅f(16) = 20922789888000',
390: 1:    '✅f(17) = 355687428096000',
390: 1:    '✅f(18) = 6402373705728000',
390: 1:    '✅f(19) = 121645100408832000',
390: 1:    '✅f(20) = 2432902008176640000',
390: 1:    '✅f(21) = 51090942171709440000',
390: 1:    '✅f(22) = 1124000727777607680000',
390: 1:    '✅f(23) = 25852016738884976640000',
390: 1:    '✅f(24) = 620448401733239439360000',
390: 1:    '❌f(25) = ??? != 15511210043330985984000000'
390: 1:  ],
390: 1:  'level': 13,
390: 1:  'nextQuestion': '25',
390: 1:  'questions': [
390: 1:    '1',
390: 1:    '2',
390: 1:    '3',
390: 1:    '4',
390: 1:    '5',
390: 1:    '6',
390: 1:    '7',
390: 1:    '8',
390: 1:    '9',
390: 1:    '10',
390: 1:    '11',
390: 1:    '12',
390: 1:    '13',
390: 1:    '14',
390: 1:    '15',
390: 1:    '16',
390: 1:    '17',
390: 1:    '18',
390: 1:    '19',
390: 1:    '20',
390: 1:    '21',
390: 1:    '22',
390: 1:    '23',
390: 1:    '24',
390: 1:    '25'
390: 1:  ]
390: 1:}
390: 1:Scores: 36708
390: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000', '620448401733239439360000', '15511210043330985984000000']')
390: 1:Fire Event: PassTest{complexity=40, testCount=25}
390: 1:Fire Event: NextAlgorithm{complexity=40, time=0}
------------------------------------------
391: 1:BoardData {
391: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
391: 1:  'history': [
391: 1:    {
391: 1:      'answer': '1',
391: 1:      'question': '1',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '2',
391: 1:      'question': '2',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '6',
391: 1:      'question': '3',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '24',
391: 1:      'question': '4',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '120',
391: 1:      'question': '5',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '720',
391: 1:      'question': '6',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '5040',
391: 1:      'question': '7',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '40320',
391: 1:      'question': '8',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '362880',
391: 1:      'question': '9',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '3628800',
391: 1:      'question': '10',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '39916800',
391: 1:      'question': '11',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '479001600',
391: 1:      'question': '12',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '6227020800',
391: 1:      'question': '13',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '87178291200',
391: 1:      'question': '14',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '1307674368000',
391: 1:      'question': '15',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '20922789888000',
391: 1:      'question': '16',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '355687428096000',
391: 1:      'question': '17',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '6402373705728000',
391: 1:      'question': '18',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '121645100408832000',
391: 1:      'question': '19',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '2432902008176640000',
391: 1:      'question': '20',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '51090942171709440000',
391: 1:      'question': '21',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '1124000727777607680000',
391: 1:      'question': '22',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '25852016738884976640000',
391: 1:      'question': '23',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '620448401733239439360000',
391: 1:      'question': '24',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '15511210043330985984000000',
391: 1:      'question': '25',
391: 1:      'valid': true
391: 1:    }
391: 1:  ],
391: 1:  'info': [
391: 1:    '✅f(1) = 1',
391: 1:    '✅f(2) = 2',
391: 1:    '✅f(3) = 6',
391: 1:    '✅f(4) = 24',
391: 1:    '✅f(5) = 120',
391: 1:    '✅f(6) = 720',
391: 1:    '✅f(7) = 5040',
391: 1:    '✅f(8) = 40320',
391: 1:    '✅f(9) = 362880',
391: 1:    '✅f(10) = 3628800',
391: 1:    '✅f(11) = 39916800',
391: 1:    '✅f(12) = 479001600',
391: 1:    '✅f(13) = 6227020800',
391: 1:    '✅f(14) = 87178291200',
391: 1:    '✅f(15) = 1307674368000',
391: 1:    '✅f(16) = 20922789888000',
391: 1:    '✅f(17) = 355687428096000',
391: 1:    '✅f(18) = 6402373705728000',
391: 1:    '✅f(19) = 121645100408832000',
391: 1:    '✅f(20) = 2432902008176640000',
391: 1:    '✅f(21) = 51090942171709440000',
391: 1:    '✅f(22) = 1124000727777607680000',
391: 1:    '✅f(23) = 25852016738884976640000',
391: 1:    '✅f(24) = 620448401733239439360000',
391: 1:    '✅f(25) = 15511210043330985984000000'
391: 1:  ],
391: 1:  'level': 13,
391: 1:  'questions': []
391: 1:}
391: 1:Scores: 42123
391: 1:Answer: message('StartNextLevel')
391: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
392: 1:BoardData {
392: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
392: 1:  'expectedAnswer': '2',
392: 1:  'history': [],
392: 1:  'info': ['❌f(1) = ??? != 2'],
392: 1:  'level': 14,
392: 1:  'nextQuestion': '1',
392: 1:  'questions': ['1']
392: 1:}
392: 1:Scores: 42123
392: 1:Answer: message('['2']')
392: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
393: 1:BoardData {
393: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
393: 1:  'expectedAnswer': '4',
393: 1:  'history': [{
393: 1:    'answer': '2',
393: 1:    'question': '1',
393: 1:    'valid': true
393: 1:  }],
393: 1:  'info': [
393: 1:    '✅f(1) = 2',
393: 1:    '❌f(2) = ??? != 4'
393: 1:  ],
393: 1:  'level': 14,
393: 1:  'nextQuestion': '2',
393: 1:  'questions': [
393: 1:    '1',
393: 1:    '2'
393: 1:  ]
393: 1:}
393: 1:Scores: 42137
393: 1:Answer: message('['2', '4']')
393: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
394: 1:BoardData {
394: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
394: 1:  'expectedAnswer': '6',
394: 1:  'history': [
394: 1:    {
394: 1:      'answer': '2',
394: 1:      'question': '1',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '4',
394: 1:      'question': '2',
394: 1:      'valid': true
394: 1:    }
394: 1:  ],
394: 1:  'info': [
394: 1:    '✅f(1) = 2',
394: 1:    '✅f(2) = 4',
394: 1:    '❌f(3) = ??? != 6'
394: 1:  ],
394: 1:  'level': 14,
394: 1:  'nextQuestion': '3',
394: 1:  'questions': [
394: 1:    '1',
394: 1:    '2',
394: 1:    '3'
394: 1:  ]
394: 1:}
394: 1:Scores: 42151
394: 1:Answer: message('['2', '4', '6']')
394: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
395: 1:BoardData {
395: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
395: 1:  'expectedAnswer': '8',
395: 1:  'history': [
395: 1:    {
395: 1:      'answer': '2',
395: 1:      'question': '1',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '4',
395: 1:      'question': '2',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '6',
395: 1:      'question': '3',
395: 1:      'valid': true
395: 1:    }
395: 1:  ],
395: 1:  'info': [
395: 1:    '✅f(1) = 2',
395: 1:    '✅f(2) = 4',
395: 1:    '✅f(3) = 6',
395: 1:    '❌f(4) = ??? != 8'
395: 1:  ],
395: 1:  'level': 14,
395: 1:  'nextQuestion': '4',
395: 1:  'questions': [
395: 1:    '1',
395: 1:    '2',
395: 1:    '3',
395: 1:    '4'
395: 1:  ]
395: 1:}
395: 1:Scores: 42165
395: 1:Answer: message('['2', '4', '6', '8']')
395: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
396: 1:BoardData {
396: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
396: 1:  'expectedAnswer': '11',
396: 1:  'history': [
396: 1:    {
396: 1:      'answer': '2',
396: 1:      'question': '1',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '4',
396: 1:      'question': '2',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '6',
396: 1:      'question': '3',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '8',
396: 1:      'question': '4',
396: 1:      'valid': true
396: 1:    }
396: 1:  ],
396: 1:  'info': [
396: 1:    '✅f(1) = 2',
396: 1:    '✅f(2) = 4',
396: 1:    '✅f(3) = 6',
396: 1:    '✅f(4) = 8',
396: 1:    '❌f(5) = ??? != 11'
396: 1:  ],
396: 1:  'level': 14,
396: 1:  'nextQuestion': '5',
396: 1:  'questions': [
396: 1:    '1',
396: 1:    '2',
396: 1:    '3',
396: 1:    '4',
396: 1:    '5'
396: 1:  ]
396: 1:}
396: 1:Scores: 42179
396: 1:Answer: message('['2', '4', '6', '8', '11']')
396: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
397: 1:BoardData {
397: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
397: 1:  'expectedAnswer': '33',
397: 1:  'history': [
397: 1:    {
397: 1:      'answer': '2',
397: 1:      'question': '1',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '4',
397: 1:      'question': '2',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '6',
397: 1:      'question': '3',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '8',
397: 1:      'question': '4',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '11',
397: 1:      'question': '5',
397: 1:      'valid': true
397: 1:    }
397: 1:  ],
397: 1:  'info': [
397: 1:    '✅f(1) = 2',
397: 1:    '✅f(2) = 4',
397: 1:    '✅f(3) = 6',
397: 1:    '✅f(4) = 8',
397: 1:    '✅f(5) = 11',
397: 1:    '❌f(6) = ??? != 33'
397: 1:  ],
397: 1:  'level': 14,
397: 1:  'nextQuestion': '6',
397: 1:  'questions': [
397: 1:    '1',
397: 1:    '2',
397: 1:    '3',
397: 1:    '4',
397: 1:    '5',
397: 1:    '6'
397: 1:  ]
397: 1:}
397: 1:Scores: 42193
397: 1:Answer: message('['2', '4', '6', '8', '11', '33']')
397: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
398: 1:BoardData {
398: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
398: 1:  'expectedAnswer': '55',
398: 1:  'history': [
398: 1:    {
398: 1:      'answer': '2',
398: 1:      'question': '1',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '4',
398: 1:      'question': '2',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '6',
398: 1:      'question': '3',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '8',
398: 1:      'question': '4',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '11',
398: 1:      'question': '5',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '33',
398: 1:      'question': '6',
398: 1:      'valid': true
398: 1:    }
398: 1:  ],
398: 1:  'info': [
398: 1:    '✅f(1) = 2',
398: 1:    '✅f(2) = 4',
398: 1:    '✅f(3) = 6',
398: 1:    '✅f(4) = 8',
398: 1:    '✅f(5) = 11',
398: 1:    '✅f(6) = 33',
398: 1:    '❌f(7) = ??? != 55'
398: 1:  ],
398: 1:  'level': 14,
398: 1:  'nextQuestion': '7',
398: 1:  'questions': [
398: 1:    '1',
398: 1:    '2',
398: 1:    '3',
398: 1:    '4',
398: 1:    '5',
398: 1:    '6',
398: 1:    '7'
398: 1:  ]
398: 1:}
398: 1:Scores: 42207
398: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55']')
398: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
399: 1:BoardData {
399: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
399: 1:  'expectedAnswer': '99',
399: 1:  'history': [
399: 1:    {
399: 1:      'answer': '2',
399: 1:      'question': '1',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '4',
399: 1:      'question': '2',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '6',
399: 1:      'question': '3',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '8',
399: 1:      'question': '4',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '11',
399: 1:      'question': '5',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '33',
399: 1:      'question': '6',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '55',
399: 1:      'question': '7',
399: 1:      'valid': true
399: 1:    }
399: 1:  ],
399: 1:  'info': [
399: 1:    '✅f(1) = 2',
399: 1:    '✅f(2) = 4',
399: 1:    '✅f(3) = 6',
399: 1:    '✅f(4) = 8',
399: 1:    '✅f(5) = 11',
399: 1:    '✅f(6) = 33',
399: 1:    '✅f(7) = 55',
399: 1:    '❌f(9) = ??? != 99'
399: 1:  ],
399: 1:  'level': 14,
399: 1:  'nextQuestion': '9',
399: 1:  'questions': [
399: 1:    '1',
399: 1:    '2',
399: 1:    '3',
399: 1:    '4',
399: 1:    '5',
399: 1:    '6',
399: 1:    '7',
399: 1:    '9'
399: 1:  ]
399: 1:}
399: 1:Scores: 42221
399: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99']')
399: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
400: 1:BoardData {
400: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
400: 1:  'expectedAnswer': '11',
400: 1:  'history': [
400: 1:    {
400: 1:      'answer': '2',
400: 1:      'question': '1',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '4',
400: 1:      'question': '2',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '6',
400: 1:      'question': '3',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '8',
400: 1:      'question': '4',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '11',
400: 1:      'question': '5',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '33',
400: 1:      'question': '6',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '55',
400: 1:      'question': '7',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '99',
400: 1:      'question': '9',
400: 1:      'valid': true
400: 1:    }
400: 1:  ],
400: 1:  'info': [
400: 1:    '✅f(1) = 2',
400: 1:    '✅f(2) = 4',
400: 1:    '✅f(3) = 6',
400: 1:    '✅f(4) = 8',
400: 1:    '✅f(5) = 11',
400: 1:    '✅f(6) = 33',
400: 1:    '✅f(7) = 55',
400: 1:    '✅f(9) = 99',
400: 1:    '❌f(10) = ??? != 11'
400: 1:  ],
400: 1:  'level': 14,
400: 1:  'nextQuestion': '10',
400: 1:  'questions': [
400: 1:    '1',
400: 1:    '2',
400: 1:    '3',
400: 1:    '4',
400: 1:    '5',
400: 1:    '6',
400: 1:    '7',
400: 1:    '9',
400: 1:    '10'
400: 1:  ]
400: 1:}
400: 1:Scores: 42235
400: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11']')
400: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
401: 1:BoardData {
401: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
401: 1:  'expectedAnswer': '22',
401: 1:  'history': [
401: 1:    {
401: 1:      'answer': '2',
401: 1:      'question': '1',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '4',
401: 1:      'question': '2',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '6',
401: 1:      'question': '3',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '8',
401: 1:      'question': '4',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '11',
401: 1:      'question': '5',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '33',
401: 1:      'question': '6',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '55',
401: 1:      'question': '7',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '99',
401: 1:      'question': '9',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '11',
401: 1:      'question': '10',
401: 1:      'valid': true
401: 1:    }
401: 1:  ],
401: 1:  'info': [
401: 1:    '✅f(1) = 2',
401: 1:    '✅f(2) = 4',
401: 1:    '✅f(3) = 6',
401: 1:    '✅f(4) = 8',
401: 1:    '✅f(5) = 11',
401: 1:    '✅f(6) = 33',
401: 1:    '✅f(7) = 55',
401: 1:    '✅f(9) = 99',
401: 1:    '✅f(10) = 11',
401: 1:    '❌f(11) = ??? != 22'
401: 1:  ],
401: 1:  'level': 14,
401: 1:  'nextQuestion': '11',
401: 1:  'questions': [
401: 1:    '1',
401: 1:    '2',
401: 1:    '3',
401: 1:    '4',
401: 1:    '5',
401: 1:    '6',
401: 1:    '7',
401: 1:    '9',
401: 1:    '10',
401: 1:    '11'
401: 1:  ]
401: 1:}
401: 1:Scores: 42249
401: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22']')
401: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
402: 1:BoardData {
402: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
402: 1:  'expectedAnswer': '33',
402: 1:  'history': [
402: 1:    {
402: 1:      'answer': '2',
402: 1:      'question': '1',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '4',
402: 1:      'question': '2',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '6',
402: 1:      'question': '3',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '8',
402: 1:      'question': '4',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '11',
402: 1:      'question': '5',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '33',
402: 1:      'question': '6',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '55',
402: 1:      'question': '7',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '99',
402: 1:      'question': '9',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '11',
402: 1:      'question': '10',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '22',
402: 1:      'question': '11',
402: 1:      'valid': true
402: 1:    }
402: 1:  ],
402: 1:  'info': [
402: 1:    '✅f(1) = 2',
402: 1:    '✅f(2) = 4',
402: 1:    '✅f(3) = 6',
402: 1:    '✅f(4) = 8',
402: 1:    '✅f(5) = 11',
402: 1:    '✅f(6) = 33',
402: 1:    '✅f(7) = 55',
402: 1:    '✅f(9) = 99',
402: 1:    '✅f(10) = 11',
402: 1:    '✅f(11) = 22',
402: 1:    '❌f(12) = ??? != 33'
402: 1:  ],
402: 1:  'level': 14,
402: 1:  'nextQuestion': '12',
402: 1:  'questions': [
402: 1:    '1',
402: 1:    '2',
402: 1:    '3',
402: 1:    '4',
402: 1:    '5',
402: 1:    '6',
402: 1:    '7',
402: 1:    '9',
402: 1:    '10',
402: 1:    '11',
402: 1:    '12'
402: 1:  ]
402: 1:}
402: 1:Scores: 42263
402: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33']')
402: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
403: 1:BoardData {
403: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
403: 1:  'expectedAnswer': '444',
403: 1:  'history': [
403: 1:    {
403: 1:      'answer': '2',
403: 1:      'question': '1',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '4',
403: 1:      'question': '2',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '6',
403: 1:      'question': '3',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '8',
403: 1:      'question': '4',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '11',
403: 1:      'question': '5',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '33',
403: 1:      'question': '6',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '55',
403: 1:      'question': '7',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '99',
403: 1:      'question': '9',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '11',
403: 1:      'question': '10',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '22',
403: 1:      'question': '11',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '33',
403: 1:      'question': '12',
403: 1:      'valid': true
403: 1:    }
403: 1:  ],
403: 1:  'info': [
403: 1:    '✅f(1) = 2',
403: 1:    '✅f(2) = 4',
403: 1:    '✅f(3) = 6',
403: 1:    '✅f(4) = 8',
403: 1:    '✅f(5) = 11',
403: 1:    '✅f(6) = 33',
403: 1:    '✅f(7) = 55',
403: 1:    '✅f(9) = 99',
403: 1:    '✅f(10) = 11',
403: 1:    '✅f(11) = 22',
403: 1:    '✅f(12) = 33',
403: 1:    '❌f(123) = ??? != 444'
403: 1:  ],
403: 1:  'level': 14,
403: 1:  'nextQuestion': '123',
403: 1:  'questions': [
403: 1:    '1',
403: 1:    '2',
403: 1:    '3',
403: 1:    '4',
403: 1:    '5',
403: 1:    '6',
403: 1:    '7',
403: 1:    '9',
403: 1:    '10',
403: 1:    '11',
403: 1:    '12',
403: 1:    '123'
403: 1:  ]
403: 1:}
403: 1:Scores: 42277
403: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444']')
403: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
404: 1:BoardData {
404: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
404: 1:  'expectedAnswer': '666',
404: 1:  'history': [
404: 1:    {
404: 1:      'answer': '2',
404: 1:      'question': '1',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '4',
404: 1:      'question': '2',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '6',
404: 1:      'question': '3',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '8',
404: 1:      'question': '4',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '11',
404: 1:      'question': '5',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '33',
404: 1:      'question': '6',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '55',
404: 1:      'question': '7',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '99',
404: 1:      'question': '9',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '11',
404: 1:      'question': '10',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '22',
404: 1:      'question': '11',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '33',
404: 1:      'question': '12',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '444',
404: 1:      'question': '123',
404: 1:      'valid': true
404: 1:    }
404: 1:  ],
404: 1:  'info': [
404: 1:    '✅f(1) = 2',
404: 1:    '✅f(2) = 4',
404: 1:    '✅f(3) = 6',
404: 1:    '✅f(4) = 8',
404: 1:    '✅f(5) = 11',
404: 1:    '✅f(6) = 33',
404: 1:    '✅f(7) = 55',
404: 1:    '✅f(9) = 99',
404: 1:    '✅f(10) = 11',
404: 1:    '✅f(11) = 22',
404: 1:    '✅f(12) = 33',
404: 1:    '✅f(123) = 444',
404: 1:    '❌f(234) = ??? != 666'
404: 1:  ],
404: 1:  'level': 14,
404: 1:  'nextQuestion': '234',
404: 1:  'questions': [
404: 1:    '1',
404: 1:    '2',
404: 1:    '3',
404: 1:    '4',
404: 1:    '5',
404: 1:    '6',
404: 1:    '7',
404: 1:    '9',
404: 1:    '10',
404: 1:    '11',
404: 1:    '12',
404: 1:    '123',
404: 1:    '234'
404: 1:  ]
404: 1:}
404: 1:Scores: 42291
404: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666']')
404: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
405: 1:BoardData {
405: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
405: 1:  'expectedAnswer': '888',
405: 1:  'history': [
405: 1:    {
405: 1:      'answer': '2',
405: 1:      'question': '1',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '4',
405: 1:      'question': '2',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '6',
405: 1:      'question': '3',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '8',
405: 1:      'question': '4',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '11',
405: 1:      'question': '5',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '33',
405: 1:      'question': '6',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '55',
405: 1:      'question': '7',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '99',
405: 1:      'question': '9',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '11',
405: 1:      'question': '10',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '22',
405: 1:      'question': '11',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '33',
405: 1:      'question': '12',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '444',
405: 1:      'question': '123',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '666',
405: 1:      'question': '234',
405: 1:      'valid': true
405: 1:    }
405: 1:  ],
405: 1:  'info': [
405: 1:    '✅f(1) = 2',
405: 1:    '✅f(2) = 4',
405: 1:    '✅f(3) = 6',
405: 1:    '✅f(4) = 8',
405: 1:    '✅f(5) = 11',
405: 1:    '✅f(6) = 33',
405: 1:    '✅f(7) = 55',
405: 1:    '✅f(9) = 99',
405: 1:    '✅f(10) = 11',
405: 1:    '✅f(11) = 22',
405: 1:    '✅f(12) = 33',
405: 1:    '✅f(123) = 444',
405: 1:    '✅f(234) = 666',
405: 1:    '❌f(345) = ??? != 888'
405: 1:  ],
405: 1:  'level': 14,
405: 1:  'nextQuestion': '345',
405: 1:  'questions': [
405: 1:    '1',
405: 1:    '2',
405: 1:    '3',
405: 1:    '4',
405: 1:    '5',
405: 1:    '6',
405: 1:    '7',
405: 1:    '9',
405: 1:    '10',
405: 1:    '11',
405: 1:    '12',
405: 1:    '123',
405: 1:    '234',
405: 1:    '345'
405: 1:  ]
405: 1:}
405: 1:Scores: 42305
405: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888']')
405: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
406: 1:BoardData {
406: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
406: 1:  'expectedAnswer': '1221',
406: 1:  'history': [
406: 1:    {
406: 1:      'answer': '2',
406: 1:      'question': '1',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '4',
406: 1:      'question': '2',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '6',
406: 1:      'question': '3',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '8',
406: 1:      'question': '4',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '11',
406: 1:      'question': '5',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '33',
406: 1:      'question': '6',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '55',
406: 1:      'question': '7',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '99',
406: 1:      'question': '9',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '11',
406: 1:      'question': '10',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '22',
406: 1:      'question': '11',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '33',
406: 1:      'question': '12',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '444',
406: 1:      'question': '123',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '666',
406: 1:      'question': '234',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '888',
406: 1:      'question': '345',
406: 1:      'valid': true
406: 1:    }
406: 1:  ],
406: 1:  'info': [
406: 1:    '✅f(1) = 2',
406: 1:    '✅f(2) = 4',
406: 1:    '✅f(3) = 6',
406: 1:    '✅f(4) = 8',
406: 1:    '✅f(5) = 11',
406: 1:    '✅f(6) = 33',
406: 1:    '✅f(7) = 55',
406: 1:    '✅f(9) = 99',
406: 1:    '✅f(10) = 11',
406: 1:    '✅f(11) = 22',
406: 1:    '✅f(12) = 33',
406: 1:    '✅f(123) = 444',
406: 1:    '✅f(234) = 666',
406: 1:    '✅f(345) = 888',
406: 1:    '❌f(456) = ??? != 1221'
406: 1:  ],
406: 1:  'level': 14,
406: 1:  'nextQuestion': '456',
406: 1:  'questions': [
406: 1:    '1',
406: 1:    '2',
406: 1:    '3',
406: 1:    '4',
406: 1:    '5',
406: 1:    '6',
406: 1:    '7',
406: 1:    '9',
406: 1:    '10',
406: 1:    '11',
406: 1:    '12',
406: 1:    '123',
406: 1:    '234',
406: 1:    '345',
406: 1:    '456'
406: 1:  ]
406: 1:}
406: 1:Scores: 42319
406: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221']')
406: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
407: 1:BoardData {
407: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
407: 1:  'expectedAnswer': '3663',
407: 1:  'history': [
407: 1:    {
407: 1:      'answer': '2',
407: 1:      'question': '1',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '4',
407: 1:      'question': '2',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '6',
407: 1:      'question': '3',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '8',
407: 1:      'question': '4',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '11',
407: 1:      'question': '5',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '33',
407: 1:      'question': '6',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '55',
407: 1:      'question': '7',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '99',
407: 1:      'question': '9',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '11',
407: 1:      'question': '10',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '22',
407: 1:      'question': '11',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '33',
407: 1:      'question': '12',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '444',
407: 1:      'question': '123',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '666',
407: 1:      'question': '234',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '888',
407: 1:      'question': '345',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1221',
407: 1:      'question': '456',
407: 1:      'valid': true
407: 1:    }
407: 1:  ],
407: 1:  'info': [
407: 1:    '✅f(1) = 2',
407: 1:    '✅f(2) = 4',
407: 1:    '✅f(3) = 6',
407: 1:    '✅f(4) = 8',
407: 1:    '✅f(5) = 11',
407: 1:    '✅f(6) = 33',
407: 1:    '✅f(7) = 55',
407: 1:    '✅f(9) = 99',
407: 1:    '✅f(10) = 11',
407: 1:    '✅f(11) = 22',
407: 1:    '✅f(12) = 33',
407: 1:    '✅f(123) = 444',
407: 1:    '✅f(234) = 666',
407: 1:    '✅f(345) = 888',
407: 1:    '✅f(456) = 1221',
407: 1:    '❌f(567) = ??? != 3663'
407: 1:  ],
407: 1:  'level': 14,
407: 1:  'nextQuestion': '567',
407: 1:  'questions': [
407: 1:    '1',
407: 1:    '2',
407: 1:    '3',
407: 1:    '4',
407: 1:    '5',
407: 1:    '6',
407: 1:    '7',
407: 1:    '9',
407: 1:    '10',
407: 1:    '11',
407: 1:    '12',
407: 1:    '123',
407: 1:    '234',
407: 1:    '345',
407: 1:    '456',
407: 1:    '567'
407: 1:  ]
407: 1:}
407: 1:Scores: 42333
407: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663']')
407: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
408: 1:BoardData {
408: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
408: 1:  'expectedAnswer': '23232',
408: 1:  'history': [
408: 1:    {
408: 1:      'answer': '2',
408: 1:      'question': '1',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '4',
408: 1:      'question': '2',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '6',
408: 1:      'question': '3',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '8',
408: 1:      'question': '4',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '11',
408: 1:      'question': '5',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '33',
408: 1:      'question': '6',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '55',
408: 1:      'question': '7',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '99',
408: 1:      'question': '9',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '11',
408: 1:      'question': '10',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '22',
408: 1:      'question': '11',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '33',
408: 1:      'question': '12',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '444',
408: 1:      'question': '123',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '666',
408: 1:      'question': '234',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '888',
408: 1:      'question': '345',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1221',
408: 1:      'question': '456',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '3663',
408: 1:      'question': '567',
408: 1:      'valid': true
408: 1:    }
408: 1:  ],
408: 1:  'info': [
408: 1:    '✅f(1) = 2',
408: 1:    '✅f(2) = 4',
408: 1:    '✅f(3) = 6',
408: 1:    '✅f(4) = 8',
408: 1:    '✅f(5) = 11',
408: 1:    '✅f(6) = 33',
408: 1:    '✅f(7) = 55',
408: 1:    '✅f(9) = 99',
408: 1:    '✅f(10) = 11',
408: 1:    '✅f(11) = 22',
408: 1:    '✅f(12) = 33',
408: 1:    '✅f(123) = 444',
408: 1:    '✅f(234) = 666',
408: 1:    '✅f(345) = 888',
408: 1:    '✅f(456) = 1221',
408: 1:    '✅f(567) = 3663',
408: 1:    '❌f(678) = ??? != 23232'
408: 1:  ],
408: 1:  'level': 14,
408: 1:  'nextQuestion': '678',
408: 1:  'questions': [
408: 1:    '1',
408: 1:    '2',
408: 1:    '3',
408: 1:    '4',
408: 1:    '5',
408: 1:    '6',
408: 1:    '7',
408: 1:    '9',
408: 1:    '10',
408: 1:    '11',
408: 1:    '12',
408: 1:    '123',
408: 1:    '234',
408: 1:    '345',
408: 1:    '456',
408: 1:    '567',
408: 1:    '678'
408: 1:  ]
408: 1:}
408: 1:Scores: 42347
408: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232']')
408: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
409: 1:BoardData {
409: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
409: 1:  'expectedAnswer': '66066',
409: 1:  'history': [
409: 1:    {
409: 1:      'answer': '2',
409: 1:      'question': '1',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '4',
409: 1:      'question': '2',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '6',
409: 1:      'question': '3',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '8',
409: 1:      'question': '4',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '11',
409: 1:      'question': '5',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '33',
409: 1:      'question': '6',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '55',
409: 1:      'question': '7',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '99',
409: 1:      'question': '9',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '11',
409: 1:      'question': '10',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '22',
409: 1:      'question': '11',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '33',
409: 1:      'question': '12',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '444',
409: 1:      'question': '123',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '666',
409: 1:      'question': '234',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '888',
409: 1:      'question': '345',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1221',
409: 1:      'question': '456',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '3663',
409: 1:      'question': '567',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '23232',
409: 1:      'question': '678',
409: 1:      'valid': true
409: 1:    }
409: 1:  ],
409: 1:  'info': [
409: 1:    '✅f(1) = 2',
409: 1:    '✅f(2) = 4',
409: 1:    '✅f(3) = 6',
409: 1:    '✅f(4) = 8',
409: 1:    '✅f(5) = 11',
409: 1:    '✅f(6) = 33',
409: 1:    '✅f(7) = 55',
409: 1:    '✅f(9) = 99',
409: 1:    '✅f(10) = 11',
409: 1:    '✅f(11) = 22',
409: 1:    '✅f(12) = 33',
409: 1:    '✅f(123) = 444',
409: 1:    '✅f(234) = 666',
409: 1:    '✅f(345) = 888',
409: 1:    '✅f(456) = 1221',
409: 1:    '✅f(567) = 3663',
409: 1:    '✅f(678) = 23232',
409: 1:    '❌f(789) = ??? != 66066'
409: 1:  ],
409: 1:  'level': 14,
409: 1:  'nextQuestion': '789',
409: 1:  'questions': [
409: 1:    '1',
409: 1:    '2',
409: 1:    '3',
409: 1:    '4',
409: 1:    '5',
409: 1:    '6',
409: 1:    '7',
409: 1:    '9',
409: 1:    '10',
409: 1:    '11',
409: 1:    '12',
409: 1:    '123',
409: 1:    '234',
409: 1:    '345',
409: 1:    '456',
409: 1:    '567',
409: 1:    '678',
409: 1:    '789'
409: 1:  ]
409: 1:}
409: 1:Scores: 42361
409: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066']')
409: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
410: 1:BoardData {
410: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
410: 1:  'expectedAnswer': '5555',
410: 1:  'history': [
410: 1:    {
410: 1:      'answer': '2',
410: 1:      'question': '1',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '4',
410: 1:      'question': '2',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '6',
410: 1:      'question': '3',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '8',
410: 1:      'question': '4',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '11',
410: 1:      'question': '5',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '33',
410: 1:      'question': '6',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '55',
410: 1:      'question': '7',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '99',
410: 1:      'question': '9',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '11',
410: 1:      'question': '10',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '22',
410: 1:      'question': '11',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '33',
410: 1:      'question': '12',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '444',
410: 1:      'question': '123',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '666',
410: 1:      'question': '234',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '888',
410: 1:      'question': '345',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1221',
410: 1:      'question': '456',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '3663',
410: 1:      'question': '567',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '23232',
410: 1:      'question': '678',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '66066',
410: 1:      'question': '789',
410: 1:      'valid': true
410: 1:    }
410: 1:  ],
410: 1:  'info': [
410: 1:    '✅f(1) = 2',
410: 1:    '✅f(2) = 4',
410: 1:    '✅f(3) = 6',
410: 1:    '✅f(4) = 8',
410: 1:    '✅f(5) = 11',
410: 1:    '✅f(6) = 33',
410: 1:    '✅f(7) = 55',
410: 1:    '✅f(9) = 99',
410: 1:    '✅f(10) = 11',
410: 1:    '✅f(11) = 22',
410: 1:    '✅f(12) = 33',
410: 1:    '✅f(123) = 444',
410: 1:    '✅f(234) = 666',
410: 1:    '✅f(345) = 888',
410: 1:    '✅f(456) = 1221',
410: 1:    '✅f(567) = 3663',
410: 1:    '✅f(678) = 23232',
410: 1:    '✅f(789) = 66066',
410: 1:    '❌f(1234) = ??? != 5555'
410: 1:  ],
410: 1:  'level': 14,
410: 1:  'nextQuestion': '1234',
410: 1:  'questions': [
410: 1:    '1',
410: 1:    '2',
410: 1:    '3',
410: 1:    '4',
410: 1:    '5',
410: 1:    '6',
410: 1:    '7',
410: 1:    '9',
410: 1:    '10',
410: 1:    '11',
410: 1:    '12',
410: 1:    '123',
410: 1:    '234',
410: 1:    '345',
410: 1:    '456',
410: 1:    '567',
410: 1:    '678',
410: 1:    '789',
410: 1:    '1234'
410: 1:  ]
410: 1:}
410: 1:Scores: 42375
410: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555']')
410: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
411: 1:BoardData {
411: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
411: 1:  'expectedAnswer': '7777',
411: 1:  'history': [
411: 1:    {
411: 1:      'answer': '2',
411: 1:      'question': '1',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '4',
411: 1:      'question': '2',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '6',
411: 1:      'question': '3',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '8',
411: 1:      'question': '4',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '11',
411: 1:      'question': '5',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '33',
411: 1:      'question': '6',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '55',
411: 1:      'question': '7',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '99',
411: 1:      'question': '9',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '11',
411: 1:      'question': '10',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '22',
411: 1:      'question': '11',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '33',
411: 1:      'question': '12',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '444',
411: 1:      'question': '123',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '666',
411: 1:      'question': '234',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '888',
411: 1:      'question': '345',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1221',
411: 1:      'question': '456',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '3663',
411: 1:      'question': '567',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '23232',
411: 1:      'question': '678',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '66066',
411: 1:      'question': '789',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '5555',
411: 1:      'question': '1234',
411: 1:      'valid': true
411: 1:    }
411: 1:  ],
411: 1:  'info': [
411: 1:    '✅f(1) = 2',
411: 1:    '✅f(2) = 4',
411: 1:    '✅f(3) = 6',
411: 1:    '✅f(4) = 8',
411: 1:    '✅f(5) = 11',
411: 1:    '✅f(6) = 33',
411: 1:    '✅f(7) = 55',
411: 1:    '✅f(9) = 99',
411: 1:    '✅f(10) = 11',
411: 1:    '✅f(11) = 22',
411: 1:    '✅f(12) = 33',
411: 1:    '✅f(123) = 444',
411: 1:    '✅f(234) = 666',
411: 1:    '✅f(345) = 888',
411: 1:    '✅f(456) = 1221',
411: 1:    '✅f(567) = 3663',
411: 1:    '✅f(678) = 23232',
411: 1:    '✅f(789) = 66066',
411: 1:    '✅f(1234) = 5555',
411: 1:    '❌f(2345) = ??? != 7777'
411: 1:  ],
411: 1:  'level': 14,
411: 1:  'nextQuestion': '2345',
411: 1:  'questions': [
411: 1:    '1',
411: 1:    '2',
411: 1:    '3',
411: 1:    '4',
411: 1:    '5',
411: 1:    '6',
411: 1:    '7',
411: 1:    '9',
411: 1:    '10',
411: 1:    '11',
411: 1:    '12',
411: 1:    '123',
411: 1:    '234',
411: 1:    '345',
411: 1:    '456',
411: 1:    '567',
411: 1:    '678',
411: 1:    '789',
411: 1:    '1234',
411: 1:    '2345'
411: 1:  ]
411: 1:}
411: 1:Scores: 42389
411: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777']')
411: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
412: 1:BoardData {
412: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
412: 1:  'expectedAnswer': '9999',
412: 1:  'history': [
412: 1:    {
412: 1:      'answer': '2',
412: 1:      'question': '1',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '4',
412: 1:      'question': '2',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '6',
412: 1:      'question': '3',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '8',
412: 1:      'question': '4',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '11',
412: 1:      'question': '5',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '33',
412: 1:      'question': '6',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '55',
412: 1:      'question': '7',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '99',
412: 1:      'question': '9',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '11',
412: 1:      'question': '10',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '22',
412: 1:      'question': '11',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '33',
412: 1:      'question': '12',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '444',
412: 1:      'question': '123',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '666',
412: 1:      'question': '234',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '888',
412: 1:      'question': '345',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1221',
412: 1:      'question': '456',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '3663',
412: 1:      'question': '567',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '23232',
412: 1:      'question': '678',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '66066',
412: 1:      'question': '789',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '5555',
412: 1:      'question': '1234',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '7777',
412: 1:      'question': '2345',
412: 1:      'valid': true
412: 1:    }
412: 1:  ],
412: 1:  'info': [
412: 1:    '✅f(1) = 2',
412: 1:    '✅f(2) = 4',
412: 1:    '✅f(3) = 6',
412: 1:    '✅f(4) = 8',
412: 1:    '✅f(5) = 11',
412: 1:    '✅f(6) = 33',
412: 1:    '✅f(7) = 55',
412: 1:    '✅f(9) = 99',
412: 1:    '✅f(10) = 11',
412: 1:    '✅f(11) = 22',
412: 1:    '✅f(12) = 33',
412: 1:    '✅f(123) = 444',
412: 1:    '✅f(234) = 666',
412: 1:    '✅f(345) = 888',
412: 1:    '✅f(456) = 1221',
412: 1:    '✅f(567) = 3663',
412: 1:    '✅f(678) = 23232',
412: 1:    '✅f(789) = 66066',
412: 1:    '✅f(1234) = 5555',
412: 1:    '✅f(2345) = 7777',
412: 1:    '❌f(3456) = ??? != 9999'
412: 1:  ],
412: 1:  'level': 14,
412: 1:  'nextQuestion': '3456',
412: 1:  'questions': [
412: 1:    '1',
412: 1:    '2',
412: 1:    '3',
412: 1:    '4',
412: 1:    '5',
412: 1:    '6',
412: 1:    '7',
412: 1:    '9',
412: 1:    '10',
412: 1:    '11',
412: 1:    '12',
412: 1:    '123',
412: 1:    '234',
412: 1:    '345',
412: 1:    '456',
412: 1:    '567',
412: 1:    '678',
412: 1:    '789',
412: 1:    '1234',
412: 1:    '2345',
412: 1:    '3456'
412: 1:  ]
412: 1:}
412: 1:Scores: 42403
412: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999']')
412: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
413: 1:BoardData {
413: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
413: 1:  'expectedAnswer': '12221',
413: 1:  'history': [
413: 1:    {
413: 1:      'answer': '2',
413: 1:      'question': '1',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '4',
413: 1:      'question': '2',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '6',
413: 1:      'question': '3',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '8',
413: 1:      'question': '4',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '11',
413: 1:      'question': '5',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '33',
413: 1:      'question': '6',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '55',
413: 1:      'question': '7',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '99',
413: 1:      'question': '9',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '11',
413: 1:      'question': '10',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '22',
413: 1:      'question': '11',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '33',
413: 1:      'question': '12',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '444',
413: 1:      'question': '123',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '666',
413: 1:      'question': '234',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '888',
413: 1:      'question': '345',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '1221',
413: 1:      'question': '456',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '3663',
413: 1:      'question': '567',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '23232',
413: 1:      'question': '678',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '66066',
413: 1:      'question': '789',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '5555',
413: 1:      'question': '1234',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '7777',
413: 1:      'question': '2345',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '9999',
413: 1:      'question': '3456',
413: 1:      'valid': true
413: 1:    }
413: 1:  ],
413: 1:  'info': [
413: 1:    '✅f(1) = 2',
413: 1:    '✅f(2) = 4',
413: 1:    '✅f(3) = 6',
413: 1:    '✅f(4) = 8',
413: 1:    '✅f(5) = 11',
413: 1:    '✅f(6) = 33',
413: 1:    '✅f(7) = 55',
413: 1:    '✅f(9) = 99',
413: 1:    '✅f(10) = 11',
413: 1:    '✅f(11) = 22',
413: 1:    '✅f(12) = 33',
413: 1:    '✅f(123) = 444',
413: 1:    '✅f(234) = 666',
413: 1:    '✅f(345) = 888',
413: 1:    '✅f(456) = 1221',
413: 1:    '✅f(567) = 3663',
413: 1:    '✅f(678) = 23232',
413: 1:    '✅f(789) = 66066',
413: 1:    '✅f(1234) = 5555',
413: 1:    '✅f(2345) = 7777',
413: 1:    '✅f(3456) = 9999',
413: 1:    '❌f(4567) = ??? != 12221'
413: 1:  ],
413: 1:  'level': 14,
413: 1:  'nextQuestion': '4567',
413: 1:  'questions': [
413: 1:    '1',
413: 1:    '2',
413: 1:    '3',
413: 1:    '4',
413: 1:    '5',
413: 1:    '6',
413: 1:    '7',
413: 1:    '9',
413: 1:    '10',
413: 1:    '11',
413: 1:    '12',
413: 1:    '123',
413: 1:    '234',
413: 1:    '345',
413: 1:    '456',
413: 1:    '567',
413: 1:    '678',
413: 1:    '789',
413: 1:    '1234',
413: 1:    '2345',
413: 1:    '3456',
413: 1:    '4567'
413: 1:  ]
413: 1:}
413: 1:Scores: 42417
413: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221']')
413: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
414: 1:BoardData {
414: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
414: 1:  'expectedAnswer': '48884',
414: 1:  'history': [
414: 1:    {
414: 1:      'answer': '2',
414: 1:      'question': '1',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '4',
414: 1:      'question': '2',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '6',
414: 1:      'question': '3',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '8',
414: 1:      'question': '4',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '11',
414: 1:      'question': '5',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '33',
414: 1:      'question': '6',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '55',
414: 1:      'question': '7',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '99',
414: 1:      'question': '9',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '11',
414: 1:      'question': '10',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '22',
414: 1:      'question': '11',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '33',
414: 1:      'question': '12',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '444',
414: 1:      'question': '123',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '666',
414: 1:      'question': '234',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '888',
414: 1:      'question': '345',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '1221',
414: 1:      'question': '456',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '3663',
414: 1:      'question': '567',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '23232',
414: 1:      'question': '678',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '66066',
414: 1:      'question': '789',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '5555',
414: 1:      'question': '1234',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '7777',
414: 1:      'question': '2345',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '9999',
414: 1:      'question': '3456',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '12221',
414: 1:      'question': '4567',
414: 1:      'valid': true
414: 1:    }
414: 1:  ],
414: 1:  'info': [
414: 1:    '✅f(1) = 2',
414: 1:    '✅f(2) = 4',
414: 1:    '✅f(3) = 6',
414: 1:    '✅f(4) = 8',
414: 1:    '✅f(5) = 11',
414: 1:    '✅f(6) = 33',
414: 1:    '✅f(7) = 55',
414: 1:    '✅f(9) = 99',
414: 1:    '✅f(10) = 11',
414: 1:    '✅f(11) = 22',
414: 1:    '✅f(12) = 33',
414: 1:    '✅f(123) = 444',
414: 1:    '✅f(234) = 666',
414: 1:    '✅f(345) = 888',
414: 1:    '✅f(456) = 1221',
414: 1:    '✅f(567) = 3663',
414: 1:    '✅f(678) = 23232',
414: 1:    '✅f(789) = 66066',
414: 1:    '✅f(1234) = 5555',
414: 1:    '✅f(2345) = 7777',
414: 1:    '✅f(3456) = 9999',
414: 1:    '✅f(4567) = 12221',
414: 1:    '❌f(5678) = ??? != 48884'
414: 1:  ],
414: 1:  'level': 14,
414: 1:  'nextQuestion': '5678',
414: 1:  'questions': [
414: 1:    '1',
414: 1:    '2',
414: 1:    '3',
414: 1:    '4',
414: 1:    '5',
414: 1:    '6',
414: 1:    '7',
414: 1:    '9',
414: 1:    '10',
414: 1:    '11',
414: 1:    '12',
414: 1:    '123',
414: 1:    '234',
414: 1:    '345',
414: 1:    '456',
414: 1:    '567',
414: 1:    '678',
414: 1:    '789',
414: 1:    '1234',
414: 1:    '2345',
414: 1:    '3456',
414: 1:    '4567',
414: 1:    '5678'
414: 1:  ]
414: 1:}
414: 1:Scores: 42431
414: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884']')
414: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
415: 1:BoardData {
415: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
415: 1:  'expectedAnswer': '993399',
415: 1:  'history': [
415: 1:    {
415: 1:      'answer': '2',
415: 1:      'question': '1',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '4',
415: 1:      'question': '2',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '6',
415: 1:      'question': '3',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '8',
415: 1:      'question': '4',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '11',
415: 1:      'question': '5',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '33',
415: 1:      'question': '6',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '55',
415: 1:      'question': '7',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '99',
415: 1:      'question': '9',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '11',
415: 1:      'question': '10',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '22',
415: 1:      'question': '11',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '33',
415: 1:      'question': '12',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '444',
415: 1:      'question': '123',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '666',
415: 1:      'question': '234',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '888',
415: 1:      'question': '345',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '1221',
415: 1:      'question': '456',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '3663',
415: 1:      'question': '567',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '23232',
415: 1:      'question': '678',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '66066',
415: 1:      'question': '789',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '5555',
415: 1:      'question': '1234',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '7777',
415: 1:      'question': '2345',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '9999',
415: 1:      'question': '3456',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '12221',
415: 1:      'question': '4567',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '48884',
415: 1:      'question': '5678',
415: 1:      'valid': true
415: 1:    }
415: 1:  ],
415: 1:  'info': [
415: 1:    '✅f(1) = 2',
415: 1:    '✅f(2) = 4',
415: 1:    '✅f(3) = 6',
415: 1:    '✅f(4) = 8',
415: 1:    '✅f(5) = 11',
415: 1:    '✅f(6) = 33',
415: 1:    '✅f(7) = 55',
415: 1:    '✅f(9) = 99',
415: 1:    '✅f(10) = 11',
415: 1:    '✅f(11) = 22',
415: 1:    '✅f(12) = 33',
415: 1:    '✅f(123) = 444',
415: 1:    '✅f(234) = 666',
415: 1:    '✅f(345) = 888',
415: 1:    '✅f(456) = 1221',
415: 1:    '✅f(567) = 3663',
415: 1:    '✅f(678) = 23232',
415: 1:    '✅f(789) = 66066',
415: 1:    '✅f(1234) = 5555',
415: 1:    '✅f(2345) = 7777',
415: 1:    '✅f(3456) = 9999',
415: 1:    '✅f(4567) = 12221',
415: 1:    '✅f(5678) = 48884',
415: 1:    '❌f(6789) = ??? != 993399'
415: 1:  ],
415: 1:  'level': 14,
415: 1:  'nextQuestion': '6789',
415: 1:  'questions': [
415: 1:    '1',
415: 1:    '2',
415: 1:    '3',
415: 1:    '4',
415: 1:    '5',
415: 1:    '6',
415: 1:    '7',
415: 1:    '9',
415: 1:    '10',
415: 1:    '11',
415: 1:    '12',
415: 1:    '123',
415: 1:    '234',
415: 1:    '345',
415: 1:    '456',
415: 1:    '567',
415: 1:    '678',
415: 1:    '789',
415: 1:    '1234',
415: 1:    '2345',
415: 1:    '3456',
415: 1:    '4567',
415: 1:    '5678',
415: 1:    '6789'
415: 1:  ]
415: 1:}
415: 1:Scores: 42445
415: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399']')
415: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
416: 1:BoardData {
416: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
416: 1:  'expectedAnswer': '993399',
416: 1:  'history': [
416: 1:    {
416: 1:      'answer': '2',
416: 1:      'question': '1',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '4',
416: 1:      'question': '2',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '6',
416: 1:      'question': '3',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '8',
416: 1:      'question': '4',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '11',
416: 1:      'question': '5',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '33',
416: 1:      'question': '6',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '55',
416: 1:      'question': '7',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '99',
416: 1:      'question': '9',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '11',
416: 1:      'question': '10',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '22',
416: 1:      'question': '11',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '33',
416: 1:      'question': '12',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '444',
416: 1:      'question': '123',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '666',
416: 1:      'question': '234',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '888',
416: 1:      'question': '345',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '1221',
416: 1:      'question': '456',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '3663',
416: 1:      'question': '567',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '23232',
416: 1:      'question': '678',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '66066',
416: 1:      'question': '789',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '5555',
416: 1:      'question': '1234',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '7777',
416: 1:      'question': '2345',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '9999',
416: 1:      'question': '3456',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '12221',
416: 1:      'question': '4567',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '48884',
416: 1:      'question': '5678',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '993399',
416: 1:      'question': '6789',
416: 1:      'valid': true
416: 1:    }
416: 1:  ],
416: 1:  'info': [
416: 1:    '✅f(1) = 2',
416: 1:    '✅f(2) = 4',
416: 1:    '✅f(3) = 6',
416: 1:    '✅f(4) = 8',
416: 1:    '✅f(5) = 11',
416: 1:    '✅f(6) = 33',
416: 1:    '✅f(7) = 55',
416: 1:    '✅f(9) = 99',
416: 1:    '✅f(10) = 11',
416: 1:    '✅f(11) = 22',
416: 1:    '✅f(12) = 33',
416: 1:    '✅f(123) = 444',
416: 1:    '✅f(234) = 666',
416: 1:    '✅f(345) = 888',
416: 1:    '✅f(456) = 1221',
416: 1:    '✅f(567) = 3663',
416: 1:    '✅f(678) = 23232',
416: 1:    '✅f(789) = 66066',
416: 1:    '✅f(1234) = 5555',
416: 1:    '✅f(2345) = 7777',
416: 1:    '✅f(3456) = 9999',
416: 1:    '✅f(4567) = 12221',
416: 1:    '✅f(5678) = 48884',
416: 1:    '✅f(6789) = 993399',
416: 1:    '❌f(7890) = ??? != 993399'
416: 1:  ],
416: 1:  'level': 14,
416: 1:  'nextQuestion': '7890',
416: 1:  'questions': [
416: 1:    '1',
416: 1:    '2',
416: 1:    '3',
416: 1:    '4',
416: 1:    '5',
416: 1:    '6',
416: 1:    '7',
416: 1:    '9',
416: 1:    '10',
416: 1:    '11',
416: 1:    '12',
416: 1:    '123',
416: 1:    '234',
416: 1:    '345',
416: 1:    '456',
416: 1:    '567',
416: 1:    '678',
416: 1:    '789',
416: 1:    '1234',
416: 1:    '2345',
416: 1:    '3456',
416: 1:    '4567',
416: 1:    '5678',
416: 1:    '6789',
416: 1:    '7890'
416: 1:  ]
416: 1:}
416: 1:Scores: 42459
416: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399']')
416: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
417: 1:BoardData {
417: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
417: 1:  'expectedAnswer': '66666',
417: 1:  'history': [
417: 1:    {
417: 1:      'answer': '2',
417: 1:      'question': '1',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '4',
417: 1:      'question': '2',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '6',
417: 1:      'question': '3',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '8',
417: 1:      'question': '4',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '11',
417: 1:      'question': '5',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '33',
417: 1:      'question': '6',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '55',
417: 1:      'question': '7',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '99',
417: 1:      'question': '9',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '11',
417: 1:      'question': '10',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '22',
417: 1:      'question': '11',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '33',
417: 1:      'question': '12',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '444',
417: 1:      'question': '123',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '666',
417: 1:      'question': '234',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '888',
417: 1:      'question': '345',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '1221',
417: 1:      'question': '456',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '3663',
417: 1:      'question': '567',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '23232',
417: 1:      'question': '678',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '66066',
417: 1:      'question': '789',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '5555',
417: 1:      'question': '1234',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '7777',
417: 1:      'question': '2345',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '9999',
417: 1:      'question': '3456',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '12221',
417: 1:      'question': '4567',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '48884',
417: 1:      'question': '5678',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '993399',
417: 1:      'question': '6789',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '993399',
417: 1:      'question': '7890',
417: 1:      'valid': true
417: 1:    }
417: 1:  ],
417: 1:  'info': [
417: 1:    '✅f(1) = 2',
417: 1:    '✅f(2) = 4',
417: 1:    '✅f(3) = 6',
417: 1:    '✅f(4) = 8',
417: 1:    '✅f(5) = 11',
417: 1:    '✅f(6) = 33',
417: 1:    '✅f(7) = 55',
417: 1:    '✅f(9) = 99',
417: 1:    '✅f(10) = 11',
417: 1:    '✅f(11) = 22',
417: 1:    '✅f(12) = 33',
417: 1:    '✅f(123) = 444',
417: 1:    '✅f(234) = 666',
417: 1:    '✅f(345) = 888',
417: 1:    '✅f(456) = 1221',
417: 1:    '✅f(567) = 3663',
417: 1:    '✅f(678) = 23232',
417: 1:    '✅f(789) = 66066',
417: 1:    '✅f(1234) = 5555',
417: 1:    '✅f(2345) = 7777',
417: 1:    '✅f(3456) = 9999',
417: 1:    '✅f(4567) = 12221',
417: 1:    '✅f(5678) = 48884',
417: 1:    '✅f(6789) = 993399',
417: 1:    '✅f(7890) = 993399',
417: 1:    '❌f(12345) = ??? != 66666'
417: 1:  ],
417: 1:  'level': 14,
417: 1:  'nextQuestion': '12345',
417: 1:  'questions': [
417: 1:    '1',
417: 1:    '2',
417: 1:    '3',
417: 1:    '4',
417: 1:    '5',
417: 1:    '6',
417: 1:    '7',
417: 1:    '9',
417: 1:    '10',
417: 1:    '11',
417: 1:    '12',
417: 1:    '123',
417: 1:    '234',
417: 1:    '345',
417: 1:    '456',
417: 1:    '567',
417: 1:    '678',
417: 1:    '789',
417: 1:    '1234',
417: 1:    '2345',
417: 1:    '3456',
417: 1:    '4567',
417: 1:    '5678',
417: 1:    '6789',
417: 1:    '7890',
417: 1:    '12345'
417: 1:  ]
417: 1:}
417: 1:Scores: 42473
417: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666']')
417: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
418: 1:BoardData {
418: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
418: 1:  'expectedAnswer': '777777',
418: 1:  'history': [
418: 1:    {
418: 1:      'answer': '2',
418: 1:      'question': '1',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '4',
418: 1:      'question': '2',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '6',
418: 1:      'question': '3',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '8',
418: 1:      'question': '4',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '11',
418: 1:      'question': '5',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '33',
418: 1:      'question': '6',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '55',
418: 1:      'question': '7',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '99',
418: 1:      'question': '9',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '11',
418: 1:      'question': '10',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '22',
418: 1:      'question': '11',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '33',
418: 1:      'question': '12',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '444',
418: 1:      'question': '123',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '666',
418: 1:      'question': '234',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '888',
418: 1:      'question': '345',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '1221',
418: 1:      'question': '456',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '3663',
418: 1:      'question': '567',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '23232',
418: 1:      'question': '678',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '66066',
418: 1:      'question': '789',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '5555',
418: 1:      'question': '1234',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '7777',
418: 1:      'question': '2345',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '9999',
418: 1:      'question': '3456',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '12221',
418: 1:      'question': '4567',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '48884',
418: 1:      'question': '5678',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '993399',
418: 1:      'question': '6789',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '993399',
418: 1:      'question': '7890',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '66666',
418: 1:      'question': '12345',
418: 1:      'valid': true
418: 1:    }
418: 1:  ],
418: 1:  'info': [
418: 1:    '✅f(1) = 2',
418: 1:    '✅f(2) = 4',
418: 1:    '✅f(3) = 6',
418: 1:    '✅f(4) = 8',
418: 1:    '✅f(5) = 11',
418: 1:    '✅f(6) = 33',
418: 1:    '✅f(7) = 55',
418: 1:    '✅f(9) = 99',
418: 1:    '✅f(10) = 11',
418: 1:    '✅f(11) = 22',
418: 1:    '✅f(12) = 33',
418: 1:    '✅f(123) = 444',
418: 1:    '✅f(234) = 666',
418: 1:    '✅f(345) = 888',
418: 1:    '✅f(456) = 1221',
418: 1:    '✅f(567) = 3663',
418: 1:    '✅f(678) = 23232',
418: 1:    '✅f(789) = 66066',
418: 1:    '✅f(1234) = 5555',
418: 1:    '✅f(2345) = 7777',
418: 1:    '✅f(3456) = 9999',
418: 1:    '✅f(4567) = 12221',
418: 1:    '✅f(5678) = 48884',
418: 1:    '✅f(6789) = 993399',
418: 1:    '✅f(7890) = 993399',
418: 1:    '✅f(12345) = 66666',
418: 1:    '❌f(123456) = ??? != 777777'
418: 1:  ],
418: 1:  'level': 14,
418: 1:  'nextQuestion': '123456',
418: 1:  'questions': [
418: 1:    '1',
418: 1:    '2',
418: 1:    '3',
418: 1:    '4',
418: 1:    '5',
418: 1:    '6',
418: 1:    '7',
418: 1:    '9',
418: 1:    '10',
418: 1:    '11',
418: 1:    '12',
418: 1:    '123',
418: 1:    '234',
418: 1:    '345',
418: 1:    '456',
418: 1:    '567',
418: 1:    '678',
418: 1:    '789',
418: 1:    '1234',
418: 1:    '2345',
418: 1:    '3456',
418: 1:    '4567',
418: 1:    '5678',
418: 1:    '6789',
418: 1:    '7890',
418: 1:    '12345',
418: 1:    '123456'
418: 1:  ]
418: 1:}
418: 1:Scores: 42487
418: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777']')
418: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
419: 1:BoardData {
419: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
419: 1:  'expectedAnswer': '8888888',
419: 1:  'history': [
419: 1:    {
419: 1:      'answer': '2',
419: 1:      'question': '1',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '4',
419: 1:      'question': '2',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '6',
419: 1:      'question': '3',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '8',
419: 1:      'question': '4',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '11',
419: 1:      'question': '5',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '33',
419: 1:      'question': '6',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '55',
419: 1:      'question': '7',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '99',
419: 1:      'question': '9',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '11',
419: 1:      'question': '10',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '22',
419: 1:      'question': '11',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '33',
419: 1:      'question': '12',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '444',
419: 1:      'question': '123',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '666',
419: 1:      'question': '234',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '888',
419: 1:      'question': '345',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '1221',
419: 1:      'question': '456',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '3663',
419: 1:      'question': '567',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '23232',
419: 1:      'question': '678',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '66066',
419: 1:      'question': '789',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '5555',
419: 1:      'question': '1234',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '7777',
419: 1:      'question': '2345',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '9999',
419: 1:      'question': '3456',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '12221',
419: 1:      'question': '4567',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '48884',
419: 1:      'question': '5678',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '993399',
419: 1:      'question': '6789',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '993399',
419: 1:      'question': '7890',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '66666',
419: 1:      'question': '12345',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '777777',
419: 1:      'question': '123456',
419: 1:      'valid': true
419: 1:    }
419: 1:  ],
419: 1:  'info': [
419: 1:    '✅f(1) = 2',
419: 1:    '✅f(2) = 4',
419: 1:    '✅f(3) = 6',
419: 1:    '✅f(4) = 8',
419: 1:    '✅f(5) = 11',
419: 1:    '✅f(6) = 33',
419: 1:    '✅f(7) = 55',
419: 1:    '✅f(9) = 99',
419: 1:    '✅f(10) = 11',
419: 1:    '✅f(11) = 22',
419: 1:    '✅f(12) = 33',
419: 1:    '✅f(123) = 444',
419: 1:    '✅f(234) = 666',
419: 1:    '✅f(345) = 888',
419: 1:    '✅f(456) = 1221',
419: 1:    '✅f(567) = 3663',
419: 1:    '✅f(678) = 23232',
419: 1:    '✅f(789) = 66066',
419: 1:    '✅f(1234) = 5555',
419: 1:    '✅f(2345) = 7777',
419: 1:    '✅f(3456) = 9999',
419: 1:    '✅f(4567) = 12221',
419: 1:    '✅f(5678) = 48884',
419: 1:    '✅f(6789) = 993399',
419: 1:    '✅f(7890) = 993399',
419: 1:    '✅f(12345) = 66666',
419: 1:    '✅f(123456) = 777777',
419: 1:    '❌f(1234567) = ??? != 8888888'
419: 1:  ],
419: 1:  'level': 14,
419: 1:  'nextQuestion': '1234567',
419: 1:  'questions': [
419: 1:    '1',
419: 1:    '2',
419: 1:    '3',
419: 1:    '4',
419: 1:    '5',
419: 1:    '6',
419: 1:    '7',
419: 1:    '9',
419: 1:    '10',
419: 1:    '11',
419: 1:    '12',
419: 1:    '123',
419: 1:    '234',
419: 1:    '345',
419: 1:    '456',
419: 1:    '567',
419: 1:    '678',
419: 1:    '789',
419: 1:    '1234',
419: 1:    '2345',
419: 1:    '3456',
419: 1:    '4567',
419: 1:    '5678',
419: 1:    '6789',
419: 1:    '7890',
419: 1:    '12345',
419: 1:    '123456',
419: 1:    '1234567'
419: 1:  ]
419: 1:}
419: 1:Scores: 42501
419: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888']')
419: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
420: 1:BoardData {
420: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
420: 1:  'expectedAnswer': '99999999',
420: 1:  'history': [
420: 1:    {
420: 1:      'answer': '2',
420: 1:      'question': '1',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '4',
420: 1:      'question': '2',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '6',
420: 1:      'question': '3',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '8',
420: 1:      'question': '4',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '11',
420: 1:      'question': '5',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '33',
420: 1:      'question': '6',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '55',
420: 1:      'question': '7',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '99',
420: 1:      'question': '9',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '11',
420: 1:      'question': '10',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '22',
420: 1:      'question': '11',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '33',
420: 1:      'question': '12',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '444',
420: 1:      'question': '123',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '666',
420: 1:      'question': '234',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '888',
420: 1:      'question': '345',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '1221',
420: 1:      'question': '456',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '3663',
420: 1:      'question': '567',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '23232',
420: 1:      'question': '678',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '66066',
420: 1:      'question': '789',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '5555',
420: 1:      'question': '1234',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '7777',
420: 1:      'question': '2345',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '9999',
420: 1:      'question': '3456',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '12221',
420: 1:      'question': '4567',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '48884',
420: 1:      'question': '5678',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '993399',
420: 1:      'question': '6789',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '993399',
420: 1:      'question': '7890',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '66666',
420: 1:      'question': '12345',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '777777',
420: 1:      'question': '123456',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '8888888',
420: 1:      'question': '1234567',
420: 1:      'valid': true
420: 1:    }
420: 1:  ],
420: 1:  'info': [
420: 1:    '✅f(1) = 2',
420: 1:    '✅f(2) = 4',
420: 1:    '✅f(3) = 6',
420: 1:    '✅f(4) = 8',
420: 1:    '✅f(5) = 11',
420: 1:    '✅f(6) = 33',
420: 1:    '✅f(7) = 55',
420: 1:    '✅f(9) = 99',
420: 1:    '✅f(10) = 11',
420: 1:    '✅f(11) = 22',
420: 1:    '✅f(12) = 33',
420: 1:    '✅f(123) = 444',
420: 1:    '✅f(234) = 666',
420: 1:    '✅f(345) = 888',
420: 1:    '✅f(456) = 1221',
420: 1:    '✅f(567) = 3663',
420: 1:    '✅f(678) = 23232',
420: 1:    '✅f(789) = 66066',
420: 1:    '✅f(1234) = 5555',
420: 1:    '✅f(2345) = 7777',
420: 1:    '✅f(3456) = 9999',
420: 1:    '✅f(4567) = 12221',
420: 1:    '✅f(5678) = 48884',
420: 1:    '✅f(6789) = 993399',
420: 1:    '✅f(7890) = 993399',
420: 1:    '✅f(12345) = 66666',
420: 1:    '✅f(123456) = 777777',
420: 1:    '✅f(1234567) = 8888888',
420: 1:    '❌f(12345678) = ??? != 99999999'
420: 1:  ],
420: 1:  'level': 14,
420: 1:  'nextQuestion': '12345678',
420: 1:  'questions': [
420: 1:    '1',
420: 1:    '2',
420: 1:    '3',
420: 1:    '4',
420: 1:    '5',
420: 1:    '6',
420: 1:    '7',
420: 1:    '9',
420: 1:    '10',
420: 1:    '11',
420: 1:    '12',
420: 1:    '123',
420: 1:    '234',
420: 1:    '345',
420: 1:    '456',
420: 1:    '567',
420: 1:    '678',
420: 1:    '789',
420: 1:    '1234',
420: 1:    '2345',
420: 1:    '3456',
420: 1:    '4567',
420: 1:    '5678',
420: 1:    '6789',
420: 1:    '7890',
420: 1:    '12345',
420: 1:    '123456',
420: 1:    '1234567',
420: 1:    '12345678'
420: 1:  ]
420: 1:}
420: 1:Scores: 42515
420: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999']')
420: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
421: 1:BoardData {
421: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
421: 1:  'expectedAnswer': '1222222221',
421: 1:  'history': [
421: 1:    {
421: 1:      'answer': '2',
421: 1:      'question': '1',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '4',
421: 1:      'question': '2',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '6',
421: 1:      'question': '3',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '8',
421: 1:      'question': '4',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '11',
421: 1:      'question': '5',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '33',
421: 1:      'question': '6',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '55',
421: 1:      'question': '7',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '99',
421: 1:      'question': '9',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '11',
421: 1:      'question': '10',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '22',
421: 1:      'question': '11',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '33',
421: 1:      'question': '12',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '444',
421: 1:      'question': '123',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '666',
421: 1:      'question': '234',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '888',
421: 1:      'question': '345',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '1221',
421: 1:      'question': '456',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '3663',
421: 1:      'question': '567',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '23232',
421: 1:      'question': '678',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '66066',
421: 1:      'question': '789',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '5555',
421: 1:      'question': '1234',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '7777',
421: 1:      'question': '2345',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '9999',
421: 1:      'question': '3456',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '12221',
421: 1:      'question': '4567',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '48884',
421: 1:      'question': '5678',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '993399',
421: 1:      'question': '6789',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '993399',
421: 1:      'question': '7890',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '66666',
421: 1:      'question': '12345',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '777777',
421: 1:      'question': '123456',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '8888888',
421: 1:      'question': '1234567',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '99999999',
421: 1:      'question': '12345678',
421: 1:      'valid': true
421: 1:    }
421: 1:  ],
421: 1:  'info': [
421: 1:    '✅f(1) = 2',
421: 1:    '✅f(2) = 4',
421: 1:    '✅f(3) = 6',
421: 1:    '✅f(4) = 8',
421: 1:    '✅f(5) = 11',
421: 1:    '✅f(6) = 33',
421: 1:    '✅f(7) = 55',
421: 1:    '✅f(9) = 99',
421: 1:    '✅f(10) = 11',
421: 1:    '✅f(11) = 22',
421: 1:    '✅f(12) = 33',
421: 1:    '✅f(123) = 444',
421: 1:    '✅f(234) = 666',
421: 1:    '✅f(345) = 888',
421: 1:    '✅f(456) = 1221',
421: 1:    '✅f(567) = 3663',
421: 1:    '✅f(678) = 23232',
421: 1:    '✅f(789) = 66066',
421: 1:    '✅f(1234) = 5555',
421: 1:    '✅f(2345) = 7777',
421: 1:    '✅f(3456) = 9999',
421: 1:    '✅f(4567) = 12221',
421: 1:    '✅f(5678) = 48884',
421: 1:    '✅f(6789) = 993399',
421: 1:    '✅f(7890) = 993399',
421: 1:    '✅f(12345) = 66666',
421: 1:    '✅f(123456) = 777777',
421: 1:    '✅f(1234567) = 8888888',
421: 1:    '✅f(12345678) = 99999999',
421: 1:    '❌f(123456789) = ??? != 1222222221'
421: 1:  ],
421: 1:  'level': 14,
421: 1:  'nextQuestion': '123456789',
421: 1:  'questions': [
421: 1:    '1',
421: 1:    '2',
421: 1:    '3',
421: 1:    '4',
421: 1:    '5',
421: 1:    '6',
421: 1:    '7',
421: 1:    '9',
421: 1:    '10',
421: 1:    '11',
421: 1:    '12',
421: 1:    '123',
421: 1:    '234',
421: 1:    '345',
421: 1:    '456',
421: 1:    '567',
421: 1:    '678',
421: 1:    '789',
421: 1:    '1234',
421: 1:    '2345',
421: 1:    '3456',
421: 1:    '4567',
421: 1:    '5678',
421: 1:    '6789',
421: 1:    '7890',
421: 1:    '12345',
421: 1:    '123456',
421: 1:    '1234567',
421: 1:    '12345678',
421: 1:    '123456789'
421: 1:  ]
421: 1:}
421: 1:Scores: 42529
421: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999', '1222222221']')
421: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
422: 1:BoardData {
422: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
422: 1:  'expectedAnswer': '3344444433',
422: 1:  'history': [
422: 1:    {
422: 1:      'answer': '2',
422: 1:      'question': '1',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '4',
422: 1:      'question': '2',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '6',
422: 1:      'question': '3',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '8',
422: 1:      'question': '4',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '11',
422: 1:      'question': '5',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '33',
422: 1:      'question': '6',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '55',
422: 1:      'question': '7',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '99',
422: 1:      'question': '9',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '11',
422: 1:      'question': '10',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '22',
422: 1:      'question': '11',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '33',
422: 1:      'question': '12',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '444',
422: 1:      'question': '123',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '666',
422: 1:      'question': '234',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '888',
422: 1:      'question': '345',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '1221',
422: 1:      'question': '456',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '3663',
422: 1:      'question': '567',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '23232',
422: 1:      'question': '678',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '66066',
422: 1:      'question': '789',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '5555',
422: 1:      'question': '1234',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '7777',
422: 1:      'question': '2345',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '9999',
422: 1:      'question': '3456',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '12221',
422: 1:      'question': '4567',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '48884',
422: 1:      'question': '5678',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '993399',
422: 1:      'question': '6789',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '993399',
422: 1:      'question': '7890',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '66666',
422: 1:      'question': '12345',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '777777',
422: 1:      'question': '123456',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '8888888',
422: 1:      'question': '1234567',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '99999999',
422: 1:      'question': '12345678',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '1222222221',
422: 1:      'question': '123456789',
422: 1:      'valid': true
422: 1:    }
422: 1:  ],
422: 1:  'info': [
422: 1:    '✅f(1) = 2',
422: 1:    '✅f(2) = 4',
422: 1:    '✅f(3) = 6',
422: 1:    '✅f(4) = 8',
422: 1:    '✅f(5) = 11',
422: 1:    '✅f(6) = 33',
422: 1:    '✅f(7) = 55',
422: 1:    '✅f(9) = 99',
422: 1:    '✅f(10) = 11',
422: 1:    '✅f(11) = 22',
422: 1:    '✅f(12) = 33',
422: 1:    '✅f(123) = 444',
422: 1:    '✅f(234) = 666',
422: 1:    '✅f(345) = 888',
422: 1:    '✅f(456) = 1221',
422: 1:    '✅f(567) = 3663',
422: 1:    '✅f(678) = 23232',
422: 1:    '✅f(789) = 66066',
422: 1:    '✅f(1234) = 5555',
422: 1:    '✅f(2345) = 7777',
422: 1:    '✅f(3456) = 9999',
422: 1:    '✅f(4567) = 12221',
422: 1:    '✅f(5678) = 48884',
422: 1:    '✅f(6789) = 993399',
422: 1:    '✅f(7890) = 993399',
422: 1:    '✅f(12345) = 66666',
422: 1:    '✅f(123456) = 777777',
422: 1:    '✅f(1234567) = 8888888',
422: 1:    '✅f(12345678) = 99999999',
422: 1:    '✅f(123456789) = 1222222221',
422: 1:    '❌f(1234567890) = ??? != 3344444433'
422: 1:  ],
422: 1:  'level': 14,
422: 1:  'nextQuestion': '1234567890',
422: 1:  'questions': [
422: 1:    '1',
422: 1:    '2',
422: 1:    '3',
422: 1:    '4',
422: 1:    '5',
422: 1:    '6',
422: 1:    '7',
422: 1:    '9',
422: 1:    '10',
422: 1:    '11',
422: 1:    '12',
422: 1:    '123',
422: 1:    '234',
422: 1:    '345',
422: 1:    '456',
422: 1:    '567',
422: 1:    '678',
422: 1:    '789',
422: 1:    '1234',
422: 1:    '2345',
422: 1:    '3456',
422: 1:    '4567',
422: 1:    '5678',
422: 1:    '6789',
422: 1:    '7890',
422: 1:    '12345',
422: 1:    '123456',
422: 1:    '1234567',
422: 1:    '12345678',
422: 1:    '123456789',
422: 1:    '1234567890'
422: 1:  ]
422: 1:}
422: 1:Scores: 42543
422: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999', '1222222221', '3344444433']')
422: 1:Fire Event: PassTest{complexity=45, testCount=31}
422: 1:Fire Event: NextAlgorithm{complexity=45, time=0}
------------------------------------------
423: 1:BoardData {
423: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
423: 1:  'history': [
423: 1:    {
423: 1:      'answer': '2',
423: 1:      'question': '1',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '4',
423: 1:      'question': '2',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '6',
423: 1:      'question': '3',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '8',
423: 1:      'question': '4',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '11',
423: 1:      'question': '5',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '33',
423: 1:      'question': '6',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '55',
423: 1:      'question': '7',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '99',
423: 1:      'question': '9',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '11',
423: 1:      'question': '10',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '22',
423: 1:      'question': '11',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '33',
423: 1:      'question': '12',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '444',
423: 1:      'question': '123',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '666',
423: 1:      'question': '234',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '888',
423: 1:      'question': '345',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '1221',
423: 1:      'question': '456',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '3663',
423: 1:      'question': '567',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '23232',
423: 1:      'question': '678',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '66066',
423: 1:      'question': '789',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '5555',
423: 1:      'question': '1234',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '7777',
423: 1:      'question': '2345',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '9999',
423: 1:      'question': '3456',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '12221',
423: 1:      'question': '4567',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '48884',
423: 1:      'question': '5678',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '993399',
423: 1:      'question': '6789',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '993399',
423: 1:      'question': '7890',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '66666',
423: 1:      'question': '12345',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '777777',
423: 1:      'question': '123456',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '8888888',
423: 1:      'question': '1234567',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '99999999',
423: 1:      'question': '12345678',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '1222222221',
423: 1:      'question': '123456789',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '3344444433',
423: 1:      'question': '1234567890',
423: 1:      'valid': true
423: 1:    }
423: 1:  ],
423: 1:  'info': [
423: 1:    '✅f(1) = 2',
423: 1:    '✅f(2) = 4',
423: 1:    '✅f(3) = 6',
423: 1:    '✅f(4) = 8',
423: 1:    '✅f(5) = 11',
423: 1:    '✅f(6) = 33',
423: 1:    '✅f(7) = 55',
423: 1:    '✅f(9) = 99',
423: 1:    '✅f(10) = 11',
423: 1:    '✅f(11) = 22',
423: 1:    '✅f(12) = 33',
423: 1:    '✅f(123) = 444',
423: 1:    '✅f(234) = 666',
423: 1:    '✅f(345) = 888',
423: 1:    '✅f(456) = 1221',
423: 1:    '✅f(567) = 3663',
423: 1:    '✅f(678) = 23232',
423: 1:    '✅f(789) = 66066',
423: 1:    '✅f(1234) = 5555',
423: 1:    '✅f(2345) = 7777',
423: 1:    '✅f(3456) = 9999',
423: 1:    '✅f(4567) = 12221',
423: 1:    '✅f(5678) = 48884',
423: 1:    '✅f(6789) = 993399',
423: 1:    '✅f(7890) = 993399',
423: 1:    '✅f(12345) = 66666',
423: 1:    '✅f(123456) = 777777',
423: 1:    '✅f(1234567) = 8888888',
423: 1:    '✅f(12345678) = 99999999',
423: 1:    '✅f(123456789) = 1222222221',
423: 1:    '✅f(1234567890) = 3344444433'
423: 1:  ],
423: 1:  'level': 14,
423: 1:  'questions': []
423: 1:}
423: 1:Scores: 48631
423: 1:Answer: message('StartNextLevel')
423: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
424: 1:BoardData {
424: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
424: 1:  'expectedAnswer': '971',
424: 1:  'history': [],
424: 1:  'info': ['❌f(1) = ??? != 971'],
424: 1:  'level': 15,
424: 1:  'nextQuestion': '1',
424: 1:  'questions': ['1']
424: 1:}
424: 1:Scores: 48631
424: 1:Answer: message('['971']')
424: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
425: 1:BoardData {
425: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
425: 1:  'expectedAnswer': '874',
425: 1:  'history': [{
425: 1:    'answer': '971',
425: 1:    'question': '1',
425: 1:    'valid': true
425: 1:  }],
425: 1:  'info': [
425: 1:    '✅f(1) = 971',
425: 1:    '❌f(2) = ??? != 874'
425: 1:  ],
425: 1:  'level': 15,
425: 1:  'nextQuestion': '2',
425: 1:  'questions': [
425: 1:    '1',
425: 1:    '2'
425: 1:  ]
425: 1:}
425: 1:Scores: 48651
425: 1:Answer: message('['971', '874']')
425: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
426: 1:BoardData {
426: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
426: 1:  'expectedAnswer': '787',
426: 1:  'history': [
426: 1:    {
426: 1:      'answer': '971',
426: 1:      'question': '1',
426: 1:      'valid': true
426: 1:    },
426: 1:    {
426: 1:      'answer': '874',
426: 1:      'question': '2',
426: 1:      'valid': true
426: 1:    }
426: 1:  ],
426: 1:  'info': [
426: 1:    '✅f(1) = 971',
426: 1:    '✅f(2) = 874',
426: 1:    '❌f(3) = ??? != 787'
426: 1:  ],
426: 1:  'level': 15,
426: 1:  'nextQuestion': '3',
426: 1:  'questions': [
426: 1:    '1',
426: 1:    '2',
426: 1:    '3'
426: 1:  ]
426: 1:}
426: 1:Scores: 48671
426: 1:Answer: message('['971', '874', '787']')
426: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
427: 1:BoardData {
427: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
427: 1:  'expectedAnswer': '709',
427: 1:  'history': [
427: 1:    {
427: 1:      'answer': '971',
427: 1:      'question': '1',
427: 1:      'valid': true
427: 1:    },
427: 1:    {
427: 1:      'answer': '874',
427: 1:      'question': '2',
427: 1:      'valid': true
427: 1:    },
427: 1:    {
427: 1:      'answer': '787',
427: 1:      'question': '3',
427: 1:      'valid': true
427: 1:    }
427: 1:  ],
427: 1:  'info': [
427: 1:    '✅f(1) = 971',
427: 1:    '✅f(2) = 874',
427: 1:    '✅f(3) = 787',
427: 1:    '❌f(4) = ??? != 709'
427: 1:  ],
427: 1:  'level': 15,
427: 1:  'nextQuestion': '4',
427: 1:  'questions': [
427: 1:    '1',
427: 1:    '2',
427: 1:    '3',
427: 1:    '4'
427: 1:  ]
427: 1:}
427: 1:Scores: 48691
427: 1:Answer: message('['971', '874', '787', '709']')
427: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
428: 1:BoardData {
428: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
428: 1:  'expectedAnswer': '639',
428: 1:  'history': [
428: 1:    {
428: 1:      'answer': '971',
428: 1:      'question': '1',
428: 1:      'valid': true
428: 1:    },
428: 1:    {
428: 1:      'answer': '874',
428: 1:      'question': '2',
428: 1:      'valid': true
428: 1:    },
428: 1:    {
428: 1:      'answer': '787',
428: 1:      'question': '3',
428: 1:      'valid': true
428: 1:    },
428: 1:    {
428: 1:      'answer': '709',
428: 1:      'question': '4',
428: 1:      'valid': true
428: 1:    }
428: 1:  ],
428: 1:  'info': [
428: 1:    '✅f(1) = 971',
428: 1:    '✅f(2) = 874',
428: 1:    '✅f(3) = 787',
428: 1:    '✅f(4) = 709',
428: 1:    '❌f(5) = ??? != 639'
428: 1:  ],
428: 1:  'level': 15,
428: 1:  'nextQuestion': '5',
428: 1:  'questions': [
428: 1:    '1',
428: 1:    '2',
428: 1:    '3',
428: 1:    '4',
428: 1:    '5'
428: 1:  ]
428: 1:}
428: 1:Scores: 48711
428: 1:Answer: message('['971', '874', '787', '709', '639']')
428: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
429: 1:BoardData {
429: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
429: 1:  'expectedAnswer': '576',
429: 1:  'history': [
429: 1:    {
429: 1:      'answer': '971',
429: 1:      'question': '1',
429: 1:      'valid': true
429: 1:    },
429: 1:    {
429: 1:      'answer': '874',
429: 1:      'question': '2',
429: 1:      'valid': true
429: 1:    },
429: 1:    {
429: 1:      'answer': '787',
429: 1:      'question': '3',
429: 1:      'valid': true
429: 1:    },
429: 1:    {
429: 1:      'answer': '709',
429: 1:      'question': '4',
429: 1:      'valid': true
429: 1:    },
429: 1:    {
429: 1:      'answer': '639',
429: 1:      'question': '5',
429: 1:      'valid': true
429: 1:    }
429: 1:  ],
429: 1:  'info': [
429: 1:    '✅f(1) = 971',
429: 1:    '✅f(2) = 874',
429: 1:    '✅f(3) = 787',
429: 1:    '✅f(4) = 709',
429: 1:    '✅f(5) = 639',
429: 1:    '❌f(6) = ??? != 576'
429: 1:  ],
429: 1:  'level': 15,
429: 1:  'nextQuestion': '6',
429: 1:  'questions': [
429: 1:    '1',
429: 1:    '2',
429: 1:    '3',
429: 1:    '4',
429: 1:    '5',
429: 1:    '6'
429: 1:  ]
429: 1:}
429: 1:Scores: 48731
429: 1:Answer: message('['971', '874', '787', '709', '639', '576']')
429: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
430: 1:BoardData {
430: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
430: 1:  'expectedAnswer': '519',
430: 1:  'history': [
430: 1:    {
430: 1:      'answer': '971',
430: 1:      'question': '1',
430: 1:      'valid': true
430: 1:    },
430: 1:    {
430: 1:      'answer': '874',
430: 1:      'question': '2',
430: 1:      'valid': true
430: 1:    },
430: 1:    {
430: 1:      'answer': '787',
430: 1:      'question': '3',
430: 1:      'valid': true
430: 1:    },
430: 1:    {
430: 1:      'answer': '709',
430: 1:      'question': '4',
430: 1:      'valid': true
430: 1:    },
430: 1:    {
430: 1:      'answer': '639',
430: 1:      'question': '5',
430: 1:      'valid': true
430: 1:    },
430: 1:    {
430: 1:      'answer': '576',
430: 1:      'question': '6',
430: 1:      'valid': true
430: 1:    }
430: 1:  ],
430: 1:  'info': [
430: 1:    '✅f(1) = 971',
430: 1:    '✅f(2) = 874',
430: 1:    '✅f(3) = 787',
430: 1:    '✅f(4) = 709',
430: 1:    '✅f(5) = 639',
430: 1:    '✅f(6) = 576',
430: 1:    '❌f(7) = ??? != 519'
430: 1:  ],
430: 1:  'level': 15,
430: 1:  'nextQuestion': '7',
430: 1:  'questions': [
430: 1:    '1',
430: 1:    '2',
430: 1:    '3',
430: 1:    '4',
430: 1:    '5',
430: 1:    '6',
430: 1:    '7'
430: 1:  ]
430: 1:}
430: 1:Scores: 48751
430: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519']')
430: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
431: 1:BoardData {
431: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
431: 1:  'expectedAnswer': '468',
431: 1:  'history': [
431: 1:    {
431: 1:      'answer': '971',
431: 1:      'question': '1',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '874',
431: 1:      'question': '2',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '787',
431: 1:      'question': '3',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '709',
431: 1:      'question': '4',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '639',
431: 1:      'question': '5',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '576',
431: 1:      'question': '6',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '519',
431: 1:      'question': '7',
431: 1:      'valid': true
431: 1:    }
431: 1:  ],
431: 1:  'info': [
431: 1:    '✅f(1) = 971',
431: 1:    '✅f(2) = 874',
431: 1:    '✅f(3) = 787',
431: 1:    '✅f(4) = 709',
431: 1:    '✅f(5) = 639',
431: 1:    '✅f(6) = 576',
431: 1:    '✅f(7) = 519',
431: 1:    '❌f(8) = ??? != 468'
431: 1:  ],
431: 1:  'level': 15,
431: 1:  'nextQuestion': '8',
431: 1:  'questions': [
431: 1:    '1',
431: 1:    '2',
431: 1:    '3',
431: 1:    '4',
431: 1:    '5',
431: 1:    '6',
431: 1:    '7',
431: 1:    '8'
431: 1:  ]
431: 1:}
431: 1:Scores: 48771
431: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468']')
431: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
432: 1:BoardData {
432: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
432: 1:  'expectedAnswer': '422',
432: 1:  'history': [
432: 1:    {
432: 1:      'answer': '971',
432: 1:      'question': '1',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '874',
432: 1:      'question': '2',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '787',
432: 1:      'question': '3',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '709',
432: 1:      'question': '4',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '639',
432: 1:      'question': '5',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '576',
432: 1:      'question': '6',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '519',
432: 1:      'question': '7',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '468',
432: 1:      'question': '8',
432: 1:      'valid': true
432: 1:    }
432: 1:  ],
432: 1:  'info': [
432: 1:    '✅f(1) = 971',
432: 1:    '✅f(2) = 874',
432: 1:    '✅f(3) = 787',
432: 1:    '✅f(4) = 709',
432: 1:    '✅f(5) = 639',
432: 1:    '✅f(6) = 576',
432: 1:    '✅f(7) = 519',
432: 1:    '✅f(8) = 468',
432: 1:    '❌f(9) = ??? != 422'
432: 1:  ],
432: 1:  'level': 15,
432: 1:  'nextQuestion': '9',
432: 1:  'questions': [
432: 1:    '1',
432: 1:    '2',
432: 1:    '3',
432: 1:    '4',
432: 1:    '5',
432: 1:    '6',
432: 1:    '7',
432: 1:    '8',
432: 1:    '9'
432: 1:  ]
432: 1:}
432: 1:Scores: 48791
432: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422']')
432: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
433: 1:BoardData {
433: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
433: 1:  'expectedAnswer': '380',
433: 1:  'history': [
433: 1:    {
433: 1:      'answer': '971',
433: 1:      'question': '1',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '874',
433: 1:      'question': '2',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '787',
433: 1:      'question': '3',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '709',
433: 1:      'question': '4',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '639',
433: 1:      'question': '5',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '576',
433: 1:      'question': '6',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '519',
433: 1:      'question': '7',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '468',
433: 1:      'question': '8',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '422',
433: 1:      'question': '9',
433: 1:      'valid': true
433: 1:    }
433: 1:  ],
433: 1:  'info': [
433: 1:    '✅f(1) = 971',
433: 1:    '✅f(2) = 874',
433: 1:    '✅f(3) = 787',
433: 1:    '✅f(4) = 709',
433: 1:    '✅f(5) = 639',
433: 1:    '✅f(6) = 576',
433: 1:    '✅f(7) = 519',
433: 1:    '✅f(8) = 468',
433: 1:    '✅f(9) = 422',
433: 1:    '❌f(10) = ??? != 380'
433: 1:  ],
433: 1:  'level': 15,
433: 1:  'nextQuestion': '10',
433: 1:  'questions': [
433: 1:    '1',
433: 1:    '2',
433: 1:    '3',
433: 1:    '4',
433: 1:    '5',
433: 1:    '6',
433: 1:    '7',
433: 1:    '8',
433: 1:    '9',
433: 1:    '10'
433: 1:  ]
433: 1:}
433: 1:Scores: 48811
433: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380']')
433: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
434: 1:BoardData {
434: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
434: 1:  'expectedAnswer': '342',
434: 1:  'history': [
434: 1:    {
434: 1:      'answer': '971',
434: 1:      'question': '1',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '874',
434: 1:      'question': '2',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '787',
434: 1:      'question': '3',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '709',
434: 1:      'question': '4',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '639',
434: 1:      'question': '5',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '576',
434: 1:      'question': '6',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '519',
434: 1:      'question': '7',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '468',
434: 1:      'question': '8',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '422',
434: 1:      'question': '9',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '380',
434: 1:      'question': '10',
434: 1:      'valid': true
434: 1:    }
434: 1:  ],
434: 1:  'info': [
434: 1:    '✅f(1) = 971',
434: 1:    '✅f(2) = 874',
434: 1:    '✅f(3) = 787',
434: 1:    '✅f(4) = 709',
434: 1:    '✅f(5) = 639',
434: 1:    '✅f(6) = 576',
434: 1:    '✅f(7) = 519',
434: 1:    '✅f(8) = 468',
434: 1:    '✅f(9) = 422',
434: 1:    '✅f(10) = 380',
434: 1:    '❌f(11) = ??? != 342'
434: 1:  ],
434: 1:  'level': 15,
434: 1:  'nextQuestion': '11',
434: 1:  'questions': [
434: 1:    '1',
434: 1:    '2',
434: 1:    '3',
434: 1:    '4',
434: 1:    '5',
434: 1:    '6',
434: 1:    '7',
434: 1:    '8',
434: 1:    '9',
434: 1:    '10',
434: 1:    '11'
434: 1:  ]
434: 1:}
434: 1:Scores: 48831
434: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342']')
434: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
435: 1:BoardData {
435: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
435: 1:  'expectedAnswer': '308',
435: 1:  'history': [
435: 1:    {
435: 1:      'answer': '971',
435: 1:      'question': '1',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '874',
435: 1:      'question': '2',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '787',
435: 1:      'question': '3',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '709',
435: 1:      'question': '4',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '639',
435: 1:      'question': '5',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '576',
435: 1:      'question': '6',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '519',
435: 1:      'question': '7',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '468',
435: 1:      'question': '8',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '422',
435: 1:      'question': '9',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '380',
435: 1:      'question': '10',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '342',
435: 1:      'question': '11',
435: 1:      'valid': true
435: 1:    }
435: 1:  ],
435: 1:  'info': [
435: 1:    '✅f(1) = 971',
435: 1:    '✅f(2) = 874',
435: 1:    '✅f(3) = 787',
435: 1:    '✅f(4) = 709',
435: 1:    '✅f(5) = 639',
435: 1:    '✅f(6) = 576',
435: 1:    '✅f(7) = 519',
435: 1:    '✅f(8) = 468',
435: 1:    '✅f(9) = 422',
435: 1:    '✅f(10) = 380',
435: 1:    '✅f(11) = 342',
435: 1:    '❌f(12) = ??? != 308'
435: 1:  ],
435: 1:  'level': 15,
435: 1:  'nextQuestion': '12',
435: 1:  'questions': [
435: 1:    '1',
435: 1:    '2',
435: 1:    '3',
435: 1:    '4',
435: 1:    '5',
435: 1:    '6',
435: 1:    '7',
435: 1:    '8',
435: 1:    '9',
435: 1:    '10',
435: 1:    '11',
435: 1:    '12'
435: 1:  ]
435: 1:}
435: 1:Scores: 48851
435: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308']')
435: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
436: 1:BoardData {
436: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
436: 1:  'expectedAnswer': '278',
436: 1:  'history': [
436: 1:    {
436: 1:      'answer': '971',
436: 1:      'question': '1',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '874',
436: 1:      'question': '2',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '787',
436: 1:      'question': '3',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '709',
436: 1:      'question': '4',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '639',
436: 1:      'question': '5',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '576',
436: 1:      'question': '6',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '519',
436: 1:      'question': '7',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '468',
436: 1:      'question': '8',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '422',
436: 1:      'question': '9',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '380',
436: 1:      'question': '10',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '342',
436: 1:      'question': '11',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '308',
436: 1:      'question': '12',
436: 1:      'valid': true
436: 1:    }
436: 1:  ],
436: 1:  'info': [
436: 1:    '✅f(1) = 971',
436: 1:    '✅f(2) = 874',
436: 1:    '✅f(3) = 787',
436: 1:    '✅f(4) = 709',
436: 1:    '✅f(5) = 639',
436: 1:    '✅f(6) = 576',
436: 1:    '✅f(7) = 519',
436: 1:    '✅f(8) = 468',
436: 1:    '✅f(9) = 422',
436: 1:    '✅f(10) = 380',
436: 1:    '✅f(11) = 342',
436: 1:    '✅f(12) = 308',
436: 1:    '❌f(13) = ??? != 278'
436: 1:  ],
436: 1:  'level': 15,
436: 1:  'nextQuestion': '13',
436: 1:  'questions': [
436: 1:    '1',
436: 1:    '2',
436: 1:    '3',
436: 1:    '4',
436: 1:    '5',
436: 1:    '6',
436: 1:    '7',
436: 1:    '8',
436: 1:    '9',
436: 1:    '10',
436: 1:    '11',
436: 1:    '12',
436: 1:    '13'
436: 1:  ]
436: 1:}
436: 1:Scores: 48871
436: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278']')
436: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
437: 1:BoardData {
437: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
437: 1:  'expectedAnswer': '251',
437: 1:  'history': [
437: 1:    {
437: 1:      'answer': '971',
437: 1:      'question': '1',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '874',
437: 1:      'question': '2',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '787',
437: 1:      'question': '3',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '709',
437: 1:      'question': '4',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '639',
437: 1:      'question': '5',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '576',
437: 1:      'question': '6',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '519',
437: 1:      'question': '7',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '468',
437: 1:      'question': '8',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '422',
437: 1:      'question': '9',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '380',
437: 1:      'question': '10',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '342',
437: 1:      'question': '11',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '308',
437: 1:      'question': '12',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '278',
437: 1:      'question': '13',
437: 1:      'valid': true
437: 1:    }
437: 1:  ],
437: 1:  'info': [
437: 1:    '✅f(1) = 971',
437: 1:    '✅f(2) = 874',
437: 1:    '✅f(3) = 787',
437: 1:    '✅f(4) = 709',
437: 1:    '✅f(5) = 639',
437: 1:    '✅f(6) = 576',
437: 1:    '✅f(7) = 519',
437: 1:    '✅f(8) = 468',
437: 1:    '✅f(9) = 422',
437: 1:    '✅f(10) = 380',
437: 1:    '✅f(11) = 342',
437: 1:    '✅f(12) = 308',
437: 1:    '✅f(13) = 278',
437: 1:    '❌f(14) = ??? != 251'
437: 1:  ],
437: 1:  'level': 15,
437: 1:  'nextQuestion': '14',
437: 1:  'questions': [
437: 1:    '1',
437: 1:    '2',
437: 1:    '3',
437: 1:    '4',
437: 1:    '5',
437: 1:    '6',
437: 1:    '7',
437: 1:    '8',
437: 1:    '9',
437: 1:    '10',
437: 1:    '11',
437: 1:    '12',
437: 1:    '13',
437: 1:    '14'
437: 1:  ]
437: 1:}
437: 1:Scores: 48891
437: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251']')
437: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
438: 1:BoardData {
438: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
438: 1:  'expectedAnswer': '226',
438: 1:  'history': [
438: 1:    {
438: 1:      'answer': '971',
438: 1:      'question': '1',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '874',
438: 1:      'question': '2',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '787',
438: 1:      'question': '3',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '709',
438: 1:      'question': '4',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '639',
438: 1:      'question': '5',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '576',
438: 1:      'question': '6',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '519',
438: 1:      'question': '7',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '468',
438: 1:      'question': '8',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '422',
438: 1:      'question': '9',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '380',
438: 1:      'question': '10',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '342',
438: 1:      'question': '11',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '308',
438: 1:      'question': '12',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '278',
438: 1:      'question': '13',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '251',
438: 1:      'question': '14',
438: 1:      'valid': true
438: 1:    }
438: 1:  ],
438: 1:  'info': [
438: 1:    '✅f(1) = 971',
438: 1:    '✅f(2) = 874',
438: 1:    '✅f(3) = 787',
438: 1:    '✅f(4) = 709',
438: 1:    '✅f(5) = 639',
438: 1:    '✅f(6) = 576',
438: 1:    '✅f(7) = 519',
438: 1:    '✅f(8) = 468',
438: 1:    '✅f(9) = 422',
438: 1:    '✅f(10) = 380',
438: 1:    '✅f(11) = 342',
438: 1:    '✅f(12) = 308',
438: 1:    '✅f(13) = 278',
438: 1:    '✅f(14) = 251',
438: 1:    '❌f(15) = ??? != 226'
438: 1:  ],
438: 1:  'level': 15,
438: 1:  'nextQuestion': '15',
438: 1:  'questions': [
438: 1:    '1',
438: 1:    '2',
438: 1:    '3',
438: 1:    '4',
438: 1:    '5',
438: 1:    '6',
438: 1:    '7',
438: 1:    '8',
438: 1:    '9',
438: 1:    '10',
438: 1:    '11',
438: 1:    '12',
438: 1:    '13',
438: 1:    '14',
438: 1:    '15'
438: 1:  ]
438: 1:}
438: 1:Scores: 48911
438: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226']')
438: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
439: 1:BoardData {
439: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
439: 1:  'expectedAnswer': '204',
439: 1:  'history': [
439: 1:    {
439: 1:      'answer': '971',
439: 1:      'question': '1',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '874',
439: 1:      'question': '2',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '787',
439: 1:      'question': '3',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '709',
439: 1:      'question': '4',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '639',
439: 1:      'question': '5',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '576',
439: 1:      'question': '6',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '519',
439: 1:      'question': '7',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '468',
439: 1:      'question': '8',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '422',
439: 1:      'question': '9',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '380',
439: 1:      'question': '10',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '342',
439: 1:      'question': '11',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '308',
439: 1:      'question': '12',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '278',
439: 1:      'question': '13',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '251',
439: 1:      'question': '14',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '226',
439: 1:      'question': '15',
439: 1:      'valid': true
439: 1:    }
439: 1:  ],
439: 1:  'info': [
439: 1:    '✅f(1) = 971',
439: 1:    '✅f(2) = 874',
439: 1:    '✅f(3) = 787',
439: 1:    '✅f(4) = 709',
439: 1:    '✅f(5) = 639',
439: 1:    '✅f(6) = 576',
439: 1:    '✅f(7) = 519',
439: 1:    '✅f(8) = 468',
439: 1:    '✅f(9) = 422',
439: 1:    '✅f(10) = 380',
439: 1:    '✅f(11) = 342',
439: 1:    '✅f(12) = 308',
439: 1:    '✅f(13) = 278',
439: 1:    '✅f(14) = 251',
439: 1:    '✅f(15) = 226',
439: 1:    '❌f(16) = ??? != 204'
439: 1:  ],
439: 1:  'level': 15,
439: 1:  'nextQuestion': '16',
439: 1:  'questions': [
439: 1:    '1',
439: 1:    '2',
439: 1:    '3',
439: 1:    '4',
439: 1:    '5',
439: 1:    '6',
439: 1:    '7',
439: 1:    '8',
439: 1:    '9',
439: 1:    '10',
439: 1:    '11',
439: 1:    '12',
439: 1:    '13',
439: 1:    '14',
439: 1:    '15',
439: 1:    '16'
439: 1:  ]
439: 1:}
439: 1:Scores: 48931
439: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204']')
439: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
440: 1:BoardData {
440: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
440: 1:  'expectedAnswer': '184',
440: 1:  'history': [
440: 1:    {
440: 1:      'answer': '971',
440: 1:      'question': '1',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '874',
440: 1:      'question': '2',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '787',
440: 1:      'question': '3',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '709',
440: 1:      'question': '4',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '639',
440: 1:      'question': '5',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '576',
440: 1:      'question': '6',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '519',
440: 1:      'question': '7',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '468',
440: 1:      'question': '8',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '422',
440: 1:      'question': '9',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '380',
440: 1:      'question': '10',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '342',
440: 1:      'question': '11',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '308',
440: 1:      'question': '12',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '278',
440: 1:      'question': '13',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '251',
440: 1:      'question': '14',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '226',
440: 1:      'question': '15',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '204',
440: 1:      'question': '16',
440: 1:      'valid': true
440: 1:    }
440: 1:  ],
440: 1:  'info': [
440: 1:    '✅f(1) = 971',
440: 1:    '✅f(2) = 874',
440: 1:    '✅f(3) = 787',
440: 1:    '✅f(4) = 709',
440: 1:    '✅f(5) = 639',
440: 1:    '✅f(6) = 576',
440: 1:    '✅f(7) = 519',
440: 1:    '✅f(8) = 468',
440: 1:    '✅f(9) = 422',
440: 1:    '✅f(10) = 380',
440: 1:    '✅f(11) = 342',
440: 1:    '✅f(12) = 308',
440: 1:    '✅f(13) = 278',
440: 1:    '✅f(14) = 251',
440: 1:    '✅f(15) = 226',
440: 1:    '✅f(16) = 204',
440: 1:    '❌f(17) = ??? != 184'
440: 1:  ],
440: 1:  'level': 15,
440: 1:  'nextQuestion': '17',
440: 1:  'questions': [
440: 1:    '1',
440: 1:    '2',
440: 1:    '3',
440: 1:    '4',
440: 1:    '5',
440: 1:    '6',
440: 1:    '7',
440: 1:    '8',
440: 1:    '9',
440: 1:    '10',
440: 1:    '11',
440: 1:    '12',
440: 1:    '13',
440: 1:    '14',
440: 1:    '15',
440: 1:    '16',
440: 1:    '17'
440: 1:  ]
440: 1:}
440: 1:Scores: 48951
440: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184']')
440: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
441: 1:BoardData {
441: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
441: 1:  'expectedAnswer': '166',
441: 1:  'history': [
441: 1:    {
441: 1:      'answer': '971',
441: 1:      'question': '1',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '874',
441: 1:      'question': '2',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '787',
441: 1:      'question': '3',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '709',
441: 1:      'question': '4',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '639',
441: 1:      'question': '5',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '576',
441: 1:      'question': '6',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '519',
441: 1:      'question': '7',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '468',
441: 1:      'question': '8',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '422',
441: 1:      'question': '9',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '380',
441: 1:      'question': '10',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '342',
441: 1:      'question': '11',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '308',
441: 1:      'question': '12',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '278',
441: 1:      'question': '13',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '251',
441: 1:      'question': '14',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '226',
441: 1:      'question': '15',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '204',
441: 1:      'question': '16',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '184',
441: 1:      'question': '17',
441: 1:      'valid': true
441: 1:    }
441: 1:  ],
441: 1:  'info': [
441: 1:    '✅f(1) = 971',
441: 1:    '✅f(2) = 874',
441: 1:    '✅f(3) = 787',
441: 1:    '✅f(4) = 709',
441: 1:    '✅f(5) = 639',
441: 1:    '✅f(6) = 576',
441: 1:    '✅f(7) = 519',
441: 1:    '✅f(8) = 468',
441: 1:    '✅f(9) = 422',
441: 1:    '✅f(10) = 380',
441: 1:    '✅f(11) = 342',
441: 1:    '✅f(12) = 308',
441: 1:    '✅f(13) = 278',
441: 1:    '✅f(14) = 251',
441: 1:    '✅f(15) = 226',
441: 1:    '✅f(16) = 204',
441: 1:    '✅f(17) = 184',
441: 1:    '❌f(18) = ??? != 166'
441: 1:  ],
441: 1:  'level': 15,
441: 1:  'nextQuestion': '18',
441: 1:  'questions': [
441: 1:    '1',
441: 1:    '2',
441: 1:    '3',
441: 1:    '4',
441: 1:    '5',
441: 1:    '6',
441: 1:    '7',
441: 1:    '8',
441: 1:    '9',
441: 1:    '10',
441: 1:    '11',
441: 1:    '12',
441: 1:    '13',
441: 1:    '14',
441: 1:    '15',
441: 1:    '16',
441: 1:    '17',
441: 1:    '18'
441: 1:  ]
441: 1:}
441: 1:Scores: 48971
441: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166']')
441: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
442: 1:BoardData {
442: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
442: 1:  'expectedAnswer': '150',
442: 1:  'history': [
442: 1:    {
442: 1:      'answer': '971',
442: 1:      'question': '1',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '874',
442: 1:      'question': '2',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '787',
442: 1:      'question': '3',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '709',
442: 1:      'question': '4',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '639',
442: 1:      'question': '5',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '576',
442: 1:      'question': '6',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '519',
442: 1:      'question': '7',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '468',
442: 1:      'question': '8',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '422',
442: 1:      'question': '9',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '380',
442: 1:      'question': '10',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '342',
442: 1:      'question': '11',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '308',
442: 1:      'question': '12',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '278',
442: 1:      'question': '13',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '251',
442: 1:      'question': '14',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '226',
442: 1:      'question': '15',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '204',
442: 1:      'question': '16',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '184',
442: 1:      'question': '17',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '166',
442: 1:      'question': '18',
442: 1:      'valid': true
442: 1:    }
442: 1:  ],
442: 1:  'info': [
442: 1:    '✅f(1) = 971',
442: 1:    '✅f(2) = 874',
442: 1:    '✅f(3) = 787',
442: 1:    '✅f(4) = 709',
442: 1:    '✅f(5) = 639',
442: 1:    '✅f(6) = 576',
442: 1:    '✅f(7) = 519',
442: 1:    '✅f(8) = 468',
442: 1:    '✅f(9) = 422',
442: 1:    '✅f(10) = 380',
442: 1:    '✅f(11) = 342',
442: 1:    '✅f(12) = 308',
442: 1:    '✅f(13) = 278',
442: 1:    '✅f(14) = 251',
442: 1:    '✅f(15) = 226',
442: 1:    '✅f(16) = 204',
442: 1:    '✅f(17) = 184',
442: 1:    '✅f(18) = 166',
442: 1:    '❌f(19) = ??? != 150'
442: 1:  ],
442: 1:  'level': 15,
442: 1:  'nextQuestion': '19',
442: 1:  'questions': [
442: 1:    '1',
442: 1:    '2',
442: 1:    '3',
442: 1:    '4',
442: 1:    '5',
442: 1:    '6',
442: 1:    '7',
442: 1:    '8',
442: 1:    '9',
442: 1:    '10',
442: 1:    '11',
442: 1:    '12',
442: 1:    '13',
442: 1:    '14',
442: 1:    '15',
442: 1:    '16',
442: 1:    '17',
442: 1:    '18',
442: 1:    '19'
442: 1:  ]
442: 1:}
442: 1:Scores: 48991
442: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150']')
442: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
443: 1:BoardData {
443: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
443: 1:  'expectedAnswer': '135',
443: 1:  'history': [
443: 1:    {
443: 1:      'answer': '971',
443: 1:      'question': '1',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '874',
443: 1:      'question': '2',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '787',
443: 1:      'question': '3',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '709',
443: 1:      'question': '4',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '639',
443: 1:      'question': '5',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '576',
443: 1:      'question': '6',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '519',
443: 1:      'question': '7',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '468',
443: 1:      'question': '8',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '422',
443: 1:      'question': '9',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '380',
443: 1:      'question': '10',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '342',
443: 1:      'question': '11',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '308',
443: 1:      'question': '12',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '278',
443: 1:      'question': '13',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '251',
443: 1:      'question': '14',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '226',
443: 1:      'question': '15',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '204',
443: 1:      'question': '16',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '184',
443: 1:      'question': '17',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '166',
443: 1:      'question': '18',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '150',
443: 1:      'question': '19',
443: 1:      'valid': true
443: 1:    }
443: 1:  ],
443: 1:  'info': [
443: 1:    '✅f(1) = 971',
443: 1:    '✅f(2) = 874',
443: 1:    '✅f(3) = 787',
443: 1:    '✅f(4) = 709',
443: 1:    '✅f(5) = 639',
443: 1:    '✅f(6) = 576',
443: 1:    '✅f(7) = 519',
443: 1:    '✅f(8) = 468',
443: 1:    '✅f(9) = 422',
443: 1:    '✅f(10) = 380',
443: 1:    '✅f(11) = 342',
443: 1:    '✅f(12) = 308',
443: 1:    '✅f(13) = 278',
443: 1:    '✅f(14) = 251',
443: 1:    '✅f(15) = 226',
443: 1:    '✅f(16) = 204',
443: 1:    '✅f(17) = 184',
443: 1:    '✅f(18) = 166',
443: 1:    '✅f(19) = 150',
443: 1:    '❌f(20) = ??? != 135'
443: 1:  ],
443: 1:  'level': 15,
443: 1:  'nextQuestion': '20',
443: 1:  'questions': [
443: 1:    '1',
443: 1:    '2',
443: 1:    '3',
443: 1:    '4',
443: 1:    '5',
443: 1:    '6',
443: 1:    '7',
443: 1:    '8',
443: 1:    '9',
443: 1:    '10',
443: 1:    '11',
443: 1:    '12',
443: 1:    '13',
443: 1:    '14',
443: 1:    '15',
443: 1:    '16',
443: 1:    '17',
443: 1:    '18',
443: 1:    '19',
443: 1:    '20'
443: 1:  ]
443: 1:}
443: 1:Scores: 49011
443: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135']')
443: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
444: 1:BoardData {
444: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
444: 1:  'expectedAnswer': '122',
444: 1:  'history': [
444: 1:    {
444: 1:      'answer': '971',
444: 1:      'question': '1',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '874',
444: 1:      'question': '2',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '787',
444: 1:      'question': '3',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '709',
444: 1:      'question': '4',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '639',
444: 1:      'question': '5',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '576',
444: 1:      'question': '6',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '519',
444: 1:      'question': '7',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '468',
444: 1:      'question': '8',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '422',
444: 1:      'question': '9',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '380',
444: 1:      'question': '10',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '342',
444: 1:      'question': '11',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '308',
444: 1:      'question': '12',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '278',
444: 1:      'question': '13',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '251',
444: 1:      'question': '14',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '226',
444: 1:      'question': '15',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '204',
444: 1:      'question': '16',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '184',
444: 1:      'question': '17',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '166',
444: 1:      'question': '18',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '150',
444: 1:      'question': '19',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '135',
444: 1:      'question': '20',
444: 1:      'valid': true
444: 1:    }
444: 1:  ],
444: 1:  'info': [
444: 1:    '✅f(1) = 971',
444: 1:    '✅f(2) = 874',
444: 1:    '✅f(3) = 787',
444: 1:    '✅f(4) = 709',
444: 1:    '✅f(5) = 639',
444: 1:    '✅f(6) = 576',
444: 1:    '✅f(7) = 519',
444: 1:    '✅f(8) = 468',
444: 1:    '✅f(9) = 422',
444: 1:    '✅f(10) = 380',
444: 1:    '✅f(11) = 342',
444: 1:    '✅f(12) = 308',
444: 1:    '✅f(13) = 278',
444: 1:    '✅f(14) = 251',
444: 1:    '✅f(15) = 226',
444: 1:    '✅f(16) = 204',
444: 1:    '✅f(17) = 184',
444: 1:    '✅f(18) = 166',
444: 1:    '✅f(19) = 150',
444: 1:    '✅f(20) = 135',
444: 1:    '❌f(21) = ??? != 122'
444: 1:  ],
444: 1:  'level': 15,
444: 1:  'nextQuestion': '21',
444: 1:  'questions': [
444: 1:    '1',
444: 1:    '2',
444: 1:    '3',
444: 1:    '4',
444: 1:    '5',
444: 1:    '6',
444: 1:    '7',
444: 1:    '8',
444: 1:    '9',
444: 1:    '10',
444: 1:    '11',
444: 1:    '12',
444: 1:    '13',
444: 1:    '14',
444: 1:    '15',
444: 1:    '16',
444: 1:    '17',
444: 1:    '18',
444: 1:    '19',
444: 1:    '20',
444: 1:    '21'
444: 1:  ]
444: 1:}
444: 1:Scores: 49031
444: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122']')
444: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
445: 1:BoardData {
445: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
445: 1:  'expectedAnswer': '110',
445: 1:  'history': [
445: 1:    {
445: 1:      'answer': '971',
445: 1:      'question': '1',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '874',
445: 1:      'question': '2',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '787',
445: 1:      'question': '3',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '709',
445: 1:      'question': '4',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '639',
445: 1:      'question': '5',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '576',
445: 1:      'question': '6',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '519',
445: 1:      'question': '7',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '468',
445: 1:      'question': '8',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '422',
445: 1:      'question': '9',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '380',
445: 1:      'question': '10',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '342',
445: 1:      'question': '11',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '308',
445: 1:      'question': '12',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '278',
445: 1:      'question': '13',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '251',
445: 1:      'question': '14',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '226',
445: 1:      'question': '15',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '204',
445: 1:      'question': '16',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '184',
445: 1:      'question': '17',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '166',
445: 1:      'question': '18',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '150',
445: 1:      'question': '19',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '135',
445: 1:      'question': '20',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '122',
445: 1:      'question': '21',
445: 1:      'valid': true
445: 1:    }
445: 1:  ],
445: 1:  'info': [
445: 1:    '✅f(1) = 971',
445: 1:    '✅f(2) = 874',
445: 1:    '✅f(3) = 787',
445: 1:    '✅f(4) = 709',
445: 1:    '✅f(5) = 639',
445: 1:    '✅f(6) = 576',
445: 1:    '✅f(7) = 519',
445: 1:    '✅f(8) = 468',
445: 1:    '✅f(9) = 422',
445: 1:    '✅f(10) = 380',
445: 1:    '✅f(11) = 342',
445: 1:    '✅f(12) = 308',
445: 1:    '✅f(13) = 278',
445: 1:    '✅f(14) = 251',
445: 1:    '✅f(15) = 226',
445: 1:    '✅f(16) = 204',
445: 1:    '✅f(17) = 184',
445: 1:    '✅f(18) = 166',
445: 1:    '✅f(19) = 150',
445: 1:    '✅f(20) = 135',
445: 1:    '✅f(21) = 122',
445: 1:    '❌f(22) = ??? != 110'
445: 1:  ],
445: 1:  'level': 15,
445: 1:  'nextQuestion': '22',
445: 1:  'questions': [
445: 1:    '1',
445: 1:    '2',
445: 1:    '3',
445: 1:    '4',
445: 1:    '5',
445: 1:    '6',
445: 1:    '7',
445: 1:    '8',
445: 1:    '9',
445: 1:    '10',
445: 1:    '11',
445: 1:    '12',
445: 1:    '13',
445: 1:    '14',
445: 1:    '15',
445: 1:    '16',
445: 1:    '17',
445: 1:    '18',
445: 1:    '19',
445: 1:    '20',
445: 1:    '21',
445: 1:    '22'
445: 1:  ]
445: 1:}
445: 1:Scores: 49051
445: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110']')
445: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
446: 1:BoardData {
446: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
446: 1:  'expectedAnswer': '99',
446: 1:  'history': [
446: 1:    {
446: 1:      'answer': '971',
446: 1:      'question': '1',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '874',
446: 1:      'question': '2',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '787',
446: 1:      'question': '3',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '709',
446: 1:      'question': '4',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '639',
446: 1:      'question': '5',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '576',
446: 1:      'question': '6',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '519',
446: 1:      'question': '7',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '468',
446: 1:      'question': '8',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '422',
446: 1:      'question': '9',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '380',
446: 1:      'question': '10',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '342',
446: 1:      'question': '11',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '308',
446: 1:      'question': '12',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '278',
446: 1:      'question': '13',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '251',
446: 1:      'question': '14',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '226',
446: 1:      'question': '15',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '204',
446: 1:      'question': '16',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '184',
446: 1:      'question': '17',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '166',
446: 1:      'question': '18',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '150',
446: 1:      'question': '19',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '135',
446: 1:      'question': '20',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '122',
446: 1:      'question': '21',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '110',
446: 1:      'question': '22',
446: 1:      'valid': true
446: 1:    }
446: 1:  ],
446: 1:  'info': [
446: 1:    '✅f(1) = 971',
446: 1:    '✅f(2) = 874',
446: 1:    '✅f(3) = 787',
446: 1:    '✅f(4) = 709',
446: 1:    '✅f(5) = 639',
446: 1:    '✅f(6) = 576',
446: 1:    '✅f(7) = 519',
446: 1:    '✅f(8) = 468',
446: 1:    '✅f(9) = 422',
446: 1:    '✅f(10) = 380',
446: 1:    '✅f(11) = 342',
446: 1:    '✅f(12) = 308',
446: 1:    '✅f(13) = 278',
446: 1:    '✅f(14) = 251',
446: 1:    '✅f(15) = 226',
446: 1:    '✅f(16) = 204',
446: 1:    '✅f(17) = 184',
446: 1:    '✅f(18) = 166',
446: 1:    '✅f(19) = 150',
446: 1:    '✅f(20) = 135',
446: 1:    '✅f(21) = 122',
446: 1:    '✅f(22) = 110',
446: 1:    '❌f(23) = ??? != 99'
446: 1:  ],
446: 1:  'level': 15,
446: 1:  'nextQuestion': '23',
446: 1:  'questions': [
446: 1:    '1',
446: 1:    '2',
446: 1:    '3',
446: 1:    '4',
446: 1:    '5',
446: 1:    '6',
446: 1:    '7',
446: 1:    '8',
446: 1:    '9',
446: 1:    '10',
446: 1:    '11',
446: 1:    '12',
446: 1:    '13',
446: 1:    '14',
446: 1:    '15',
446: 1:    '16',
446: 1:    '17',
446: 1:    '18',
446: 1:    '19',
446: 1:    '20',
446: 1:    '21',
446: 1:    '22',
446: 1:    '23'
446: 1:  ]
446: 1:}
446: 1:Scores: 49071
446: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99']')
446: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
447: 1:BoardData {
447: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
447: 1:  'expectedAnswer': '90',
447: 1:  'history': [
447: 1:    {
447: 1:      'answer': '971',
447: 1:      'question': '1',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '874',
447: 1:      'question': '2',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '787',
447: 1:      'question': '3',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '709',
447: 1:      'question': '4',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '639',
447: 1:      'question': '5',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '576',
447: 1:      'question': '6',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '519',
447: 1:      'question': '7',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '468',
447: 1:      'question': '8',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '422',
447: 1:      'question': '9',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '380',
447: 1:      'question': '10',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '342',
447: 1:      'question': '11',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '308',
447: 1:      'question': '12',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '278',
447: 1:      'question': '13',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '251',
447: 1:      'question': '14',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '226',
447: 1:      'question': '15',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '204',
447: 1:      'question': '16',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '184',
447: 1:      'question': '17',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '166',
447: 1:      'question': '18',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '150',
447: 1:      'question': '19',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '135',
447: 1:      'question': '20',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '122',
447: 1:      'question': '21',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '110',
447: 1:      'question': '22',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '99',
447: 1:      'question': '23',
447: 1:      'valid': true
447: 1:    }
447: 1:  ],
447: 1:  'info': [
447: 1:    '✅f(1) = 971',
447: 1:    '✅f(2) = 874',
447: 1:    '✅f(3) = 787',
447: 1:    '✅f(4) = 709',
447: 1:    '✅f(5) = 639',
447: 1:    '✅f(6) = 576',
447: 1:    '✅f(7) = 519',
447: 1:    '✅f(8) = 468',
447: 1:    '✅f(9) = 422',
447: 1:    '✅f(10) = 380',
447: 1:    '✅f(11) = 342',
447: 1:    '✅f(12) = 308',
447: 1:    '✅f(13) = 278',
447: 1:    '✅f(14) = 251',
447: 1:    '✅f(15) = 226',
447: 1:    '✅f(16) = 204',
447: 1:    '✅f(17) = 184',
447: 1:    '✅f(18) = 166',
447: 1:    '✅f(19) = 150',
447: 1:    '✅f(20) = 135',
447: 1:    '✅f(21) = 122',
447: 1:    '✅f(22) = 110',
447: 1:    '✅f(23) = 99',
447: 1:    '❌f(24) = ??? != 90'
447: 1:  ],
447: 1:  'level': 15,
447: 1:  'nextQuestion': '24',
447: 1:  'questions': [
447: 1:    '1',
447: 1:    '2',
447: 1:    '3',
447: 1:    '4',
447: 1:    '5',
447: 1:    '6',
447: 1:    '7',
447: 1:    '8',
447: 1:    '9',
447: 1:    '10',
447: 1:    '11',
447: 1:    '12',
447: 1:    '13',
447: 1:    '14',
447: 1:    '15',
447: 1:    '16',
447: 1:    '17',
447: 1:    '18',
447: 1:    '19',
447: 1:    '20',
447: 1:    '21',
447: 1:    '22',
447: 1:    '23',
447: 1:    '24'
447: 1:  ]
447: 1:}
447: 1:Scores: 49091
447: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99', '90']')
447: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
448: 1:BoardData {
448: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
448: 1:  'expectedAnswer': '81',
448: 1:  'history': [
448: 1:    {
448: 1:      'answer': '971',
448: 1:      'question': '1',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '874',
448: 1:      'question': '2',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '787',
448: 1:      'question': '3',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '709',
448: 1:      'question': '4',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '639',
448: 1:      'question': '5',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '576',
448: 1:      'question': '6',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '519',
448: 1:      'question': '7',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '468',
448: 1:      'question': '8',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '422',
448: 1:      'question': '9',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '380',
448: 1:      'question': '10',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '342',
448: 1:      'question': '11',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '308',
448: 1:      'question': '12',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '278',
448: 1:      'question': '13',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '251',
448: 1:      'question': '14',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '226',
448: 1:      'question': '15',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '204',
448: 1:      'question': '16',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '184',
448: 1:      'question': '17',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '166',
448: 1:      'question': '18',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '150',
448: 1:      'question': '19',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '135',
448: 1:      'question': '20',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '122',
448: 1:      'question': '21',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '110',
448: 1:      'question': '22',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '99',
448: 1:      'question': '23',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '90',
448: 1:      'question': '24',
448: 1:      'valid': true
448: 1:    }
448: 1:  ],
448: 1:  'info': [
448: 1:    '✅f(1) = 971',
448: 1:    '✅f(2) = 874',
448: 1:    '✅f(3) = 787',
448: 1:    '✅f(4) = 709',
448: 1:    '✅f(5) = 639',
448: 1:    '✅f(6) = 576',
448: 1:    '✅f(7) = 519',
448: 1:    '✅f(8) = 468',
448: 1:    '✅f(9) = 422',
448: 1:    '✅f(10) = 380',
448: 1:    '✅f(11) = 342',
448: 1:    '✅f(12) = 308',
448: 1:    '✅f(13) = 278',
448: 1:    '✅f(14) = 251',
448: 1:    '✅f(15) = 226',
448: 1:    '✅f(16) = 204',
448: 1:    '✅f(17) = 184',
448: 1:    '✅f(18) = 166',
448: 1:    '✅f(19) = 150',
448: 1:    '✅f(20) = 135',
448: 1:    '✅f(21) = 122',
448: 1:    '✅f(22) = 110',
448: 1:    '✅f(23) = 99',
448: 1:    '✅f(24) = 90',
448: 1:    '❌f(25) = ??? != 81'
448: 1:  ],
448: 1:  'level': 15,
448: 1:  'nextQuestion': '25',
448: 1:  'questions': [
448: 1:    '1',
448: 1:    '2',
448: 1:    '3',
448: 1:    '4',
448: 1:    '5',
448: 1:    '6',
448: 1:    '7',
448: 1:    '8',
448: 1:    '9',
448: 1:    '10',
448: 1:    '11',
448: 1:    '12',
448: 1:    '13',
448: 1:    '14',
448: 1:    '15',
448: 1:    '16',
448: 1:    '17',
448: 1:    '18',
448: 1:    '19',
448: 1:    '20',
448: 1:    '21',
448: 1:    '22',
448: 1:    '23',
448: 1:    '24',
448: 1:    '25'
448: 1:  ]
448: 1:}
448: 1:Scores: 49111
448: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99', '90', '81']')
448: 1:Fire Event: PassTest{complexity=50, testCount=25}
448: 1:Fire Event: NextAlgorithm{complexity=50, time=0}
------------------------------------------
449: 1:BoardData {
449: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
449: 1:  'history': [
449: 1:    {
449: 1:      'answer': '971',
449: 1:      'question': '1',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '874',
449: 1:      'question': '2',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '787',
449: 1:      'question': '3',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '709',
449: 1:      'question': '4',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '639',
449: 1:      'question': '5',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '576',
449: 1:      'question': '6',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '519',
449: 1:      'question': '7',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '468',
449: 1:      'question': '8',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '422',
449: 1:      'question': '9',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '380',
449: 1:      'question': '10',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '342',
449: 1:      'question': '11',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '308',
449: 1:      'question': '12',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '278',
449: 1:      'question': '13',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '251',
449: 1:      'question': '14',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '226',
449: 1:      'question': '15',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '204',
449: 1:      'question': '16',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '184',
449: 1:      'question': '17',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '166',
449: 1:      'question': '18',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '150',
449: 1:      'question': '19',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '135',
449: 1:      'question': '20',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '122',
449: 1:      'question': '21',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '110',
449: 1:      'question': '22',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '99',
449: 1:      'question': '23',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '90',
449: 1:      'question': '24',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '81',
449: 1:      'question': '25',
449: 1:      'valid': true
449: 1:    }
449: 1:  ],
449: 1:  'info': [
449: 1:    '✅f(1) = 971',
449: 1:    '✅f(2) = 874',
449: 1:    '✅f(3) = 787',
449: 1:    '✅f(4) = 709',
449: 1:    '✅f(5) = 639',
449: 1:    '✅f(6) = 576',
449: 1:    '✅f(7) = 519',
449: 1:    '✅f(8) = 468',
449: 1:    '✅f(9) = 422',
449: 1:    '✅f(10) = 380',
449: 1:    '✅f(11) = 342',
449: 1:    '✅f(12) = 308',
449: 1:    '✅f(13) = 278',
449: 1:    '✅f(14) = 251',
449: 1:    '✅f(15) = 226',
449: 1:    '✅f(16) = 204',
449: 1:    '✅f(17) = 184',
449: 1:    '✅f(18) = 166',
449: 1:    '✅f(19) = 150',
449: 1:    '✅f(20) = 135',
449: 1:    '✅f(21) = 122',
449: 1:    '✅f(22) = 110',
449: 1:    '✅f(23) = 99',
449: 1:    '✅f(24) = 90',
449: 1:    '✅f(25) = 81'
449: 1:  ],
449: 1:  'level': 15,
449: 1:  'questions': []
449: 1:}
449: 1:Scores: 55880
449: 1:Answer: message('StartNextLevel')
449: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
450: 1:BoardData {
450: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
450: 1:  'expectedAnswer': '2',
450: 1:  'history': [],
450: 1:  'info': ['❌f(1) = ??? != 2'],
450: 1:  'level': 16,
450: 1:  'nextQuestion': '1',
450: 1:  'questions': ['1']
450: 1:}
450: 1:Scores: 55880
450: 1:Answer: message('['2']')
450: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
451: 1:BoardData {
451: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
451: 1:  'expectedAnswer': '3',
451: 1:  'history': [{
451: 1:    'answer': '2',
451: 1:    'question': '1',
451: 1:    'valid': true
451: 1:  }],
451: 1:  'info': [
451: 1:    '✅f(1) = 2',
451: 1:    '❌f(2) = ??? != 3'
451: 1:  ],
451: 1:  'level': 16,
451: 1:  'nextQuestion': '2',
451: 1:  'questions': [
451: 1:    '1',
451: 1:    '2'
451: 1:  ]
451: 1:}
451: 1:Scores: 55902
451: 1:Answer: message('['2', '3']')
451: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
452: 1:BoardData {
452: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
452: 1:  'expectedAnswer': '5',
452: 1:  'history': [
452: 1:    {
452: 1:      'answer': '2',
452: 1:      'question': '1',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '3',
452: 1:      'question': '2',
452: 1:      'valid': true
452: 1:    }
452: 1:  ],
452: 1:  'info': [
452: 1:    '✅f(1) = 2',
452: 1:    '✅f(2) = 3',
452: 1:    '❌f(3) = ??? != 5'
452: 1:  ],
452: 1:  'level': 16,
452: 1:  'nextQuestion': '3',
452: 1:  'questions': [
452: 1:    '1',
452: 1:    '2',
452: 1:    '3'
452: 1:  ]
452: 1:}
452: 1:Scores: 55924
452: 1:Answer: message('['2', '3', '5']')
452: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
453: 1:BoardData {
453: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
453: 1:  'expectedAnswer': '7',
453: 1:  'history': [
453: 1:    {
453: 1:      'answer': '2',
453: 1:      'question': '1',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '3',
453: 1:      'question': '2',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '5',
453: 1:      'question': '3',
453: 1:      'valid': true
453: 1:    }
453: 1:  ],
453: 1:  'info': [
453: 1:    '✅f(1) = 2',
453: 1:    '✅f(2) = 3',
453: 1:    '✅f(3) = 5',
453: 1:    '❌f(4) = ??? != 7'
453: 1:  ],
453: 1:  'level': 16,
453: 1:  'nextQuestion': '4',
453: 1:  'questions': [
453: 1:    '1',
453: 1:    '2',
453: 1:    '3',
453: 1:    '4'
453: 1:  ]
453: 1:}
453: 1:Scores: 55946
453: 1:Answer: message('['2', '3', '5', '7']')
453: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
454: 1:BoardData {
454: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
454: 1:  'expectedAnswer': '11',
454: 1:  'history': [
454: 1:    {
454: 1:      'answer': '2',
454: 1:      'question': '1',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '3',
454: 1:      'question': '2',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '5',
454: 1:      'question': '3',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '7',
454: 1:      'question': '4',
454: 1:      'valid': true
454: 1:    }
454: 1:  ],
454: 1:  'info': [
454: 1:    '✅f(1) = 2',
454: 1:    '✅f(2) = 3',
454: 1:    '✅f(3) = 5',
454: 1:    '✅f(4) = 7',
454: 1:    '❌f(5) = ??? != 11'
454: 1:  ],
454: 1:  'level': 16,
454: 1:  'nextQuestion': '5',
454: 1:  'questions': [
454: 1:    '1',
454: 1:    '2',
454: 1:    '3',
454: 1:    '4',
454: 1:    '5'
454: 1:  ]
454: 1:}
454: 1:Scores: 55968
454: 1:Answer: message('['2', '3', '5', '7', '11']')
454: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
455: 1:BoardData {
455: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
455: 1:  'expectedAnswer': '13',
455: 1:  'history': [
455: 1:    {
455: 1:      'answer': '2',
455: 1:      'question': '1',
455: 1:      'valid': true
455: 1:    },
455: 1:    {
455: 1:      'answer': '3',
455: 1:      'question': '2',
455: 1:      'valid': true
455: 1:    },
455: 1:    {
455: 1:      'answer': '5',
455: 1:      'question': '3',
455: 1:      'valid': true
455: 1:    },
455: 1:    {
455: 1:      'answer': '7',
455: 1:      'question': '4',
455: 1:      'valid': true
455: 1:    },
455: 1:    {
455: 1:      'answer': '11',
455: 1:      'question': '5',
455: 1:      'valid': true
455: 1:    }
455: 1:  ],
455: 1:  'info': [
455: 1:    '✅f(1) = 2',
455: 1:    '✅f(2) = 3',
455: 1:    '✅f(3) = 5',
455: 1:    '✅f(4) = 7',
455: 1:    '✅f(5) = 11',
455: 1:    '❌f(6) = ??? != 13'
455: 1:  ],
455: 1:  'level': 16,
455: 1:  'nextQuestion': '6',
455: 1:  'questions': [
455: 1:    '1',
455: 1:    '2',
455: 1:    '3',
455: 1:    '4',
455: 1:    '5',
455: 1:    '6'
455: 1:  ]
455: 1:}
455: 1:Scores: 55990
455: 1:Answer: message('['2', '3', '5', '7', '11', '13']')
455: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
456: 1:BoardData {
456: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
456: 1:  'expectedAnswer': '17',
456: 1:  'history': [
456: 1:    {
456: 1:      'answer': '2',
456: 1:      'question': '1',
456: 1:      'valid': true
456: 1:    },
456: 1:    {
456: 1:      'answer': '3',
456: 1:      'question': '2',
456: 1:      'valid': true
456: 1:    },
456: 1:    {
456: 1:      'answer': '5',
456: 1:      'question': '3',
456: 1:      'valid': true
456: 1:    },
456: 1:    {
456: 1:      'answer': '7',
456: 1:      'question': '4',
456: 1:      'valid': true
456: 1:    },
456: 1:    {
456: 1:      'answer': '11',
456: 1:      'question': '5',
456: 1:      'valid': true
456: 1:    },
456: 1:    {
456: 1:      'answer': '13',
456: 1:      'question': '6',
456: 1:      'valid': true
456: 1:    }
456: 1:  ],
456: 1:  'info': [
456: 1:    '✅f(1) = 2',
456: 1:    '✅f(2) = 3',
456: 1:    '✅f(3) = 5',
456: 1:    '✅f(4) = 7',
456: 1:    '✅f(5) = 11',
456: 1:    '✅f(6) = 13',
456: 1:    '❌f(7) = ??? != 17'
456: 1:  ],
456: 1:  'level': 16,
456: 1:  'nextQuestion': '7',
456: 1:  'questions': [
456: 1:    '1',
456: 1:    '2',
456: 1:    '3',
456: 1:    '4',
456: 1:    '5',
456: 1:    '6',
456: 1:    '7'
456: 1:  ]
456: 1:}
456: 1:Scores: 56012
456: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17']')
456: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
457: 1:BoardData {
457: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
457: 1:  'expectedAnswer': '19',
457: 1:  'history': [
457: 1:    {
457: 1:      'answer': '2',
457: 1:      'question': '1',
457: 1:      'valid': true
457: 1:    },
457: 1:    {
457: 1:      'answer': '3',
457: 1:      'question': '2',
457: 1:      'valid': true
457: 1:    },
457: 1:    {
457: 1:      'answer': '5',
457: 1:      'question': '3',
457: 1:      'valid': true
457: 1:    },
457: 1:    {
457: 1:      'answer': '7',
457: 1:      'question': '4',
457: 1:      'valid': true
457: 1:    },
457: 1:    {
457: 1:      'answer': '11',
457: 1:      'question': '5',
457: 1:      'valid': true
457: 1:    },
457: 1:    {
457: 1:      'answer': '13',
457: 1:      'question': '6',
457: 1:      'valid': true
457: 1:    },
457: 1:    {
457: 1:      'answer': '17',
457: 1:      'question': '7',
457: 1:      'valid': true
457: 1:    }
457: 1:  ],
457: 1:  'info': [
457: 1:    '✅f(1) = 2',
457: 1:    '✅f(2) = 3',
457: 1:    '✅f(3) = 5',
457: 1:    '✅f(4) = 7',
457: 1:    '✅f(5) = 11',
457: 1:    '✅f(6) = 13',
457: 1:    '✅f(7) = 17',
457: 1:    '❌f(8) = ??? != 19'
457: 1:  ],
457: 1:  'level': 16,
457: 1:  'nextQuestion': '8',
457: 1:  'questions': [
457: 1:    '1',
457: 1:    '2',
457: 1:    '3',
457: 1:    '4',
457: 1:    '5',
457: 1:    '6',
457: 1:    '7',
457: 1:    '8'
457: 1:  ]
457: 1:}
457: 1:Scores: 56034
457: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19']')
457: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
458: 1:BoardData {
458: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
458: 1:  'expectedAnswer': '23',
458: 1:  'history': [
458: 1:    {
458: 1:      'answer': '2',
458: 1:      'question': '1',
458: 1:      'valid': true
458: 1:    },
458: 1:    {
458: 1:      'answer': '3',
458: 1:      'question': '2',
458: 1:      'valid': true
458: 1:    },
458: 1:    {
458: 1:      'answer': '5',
458: 1:      'question': '3',
458: 1:      'valid': true
458: 1:    },
458: 1:    {
458: 1:      'answer': '7',
458: 1:      'question': '4',
458: 1:      'valid': true
458: 1:    },
458: 1:    {
458: 1:      'answer': '11',
458: 1:      'question': '5',
458: 1:      'valid': true
458: 1:    },
458: 1:    {
458: 1:      'answer': '13',
458: 1:      'question': '6',
458: 1:      'valid': true
458: 1:    },
458: 1:    {
458: 1:      'answer': '17',
458: 1:      'question': '7',
458: 1:      'valid': true
458: 1:    },
458: 1:    {
458: 1:      'answer': '19',
458: 1:      'question': '8',
458: 1:      'valid': true
458: 1:    }
458: 1:  ],
458: 1:  'info': [
458: 1:    '✅f(1) = 2',
458: 1:    '✅f(2) = 3',
458: 1:    '✅f(3) = 5',
458: 1:    '✅f(4) = 7',
458: 1:    '✅f(5) = 11',
458: 1:    '✅f(6) = 13',
458: 1:    '✅f(7) = 17',
458: 1:    '✅f(8) = 19',
458: 1:    '❌f(9) = ??? != 23'
458: 1:  ],
458: 1:  'level': 16,
458: 1:  'nextQuestion': '9',
458: 1:  'questions': [
458: 1:    '1',
458: 1:    '2',
458: 1:    '3',
458: 1:    '4',
458: 1:    '5',
458: 1:    '6',
458: 1:    '7',
458: 1:    '8',
458: 1:    '9'
458: 1:  ]
458: 1:}
458: 1:Scores: 56056
458: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23']')
458: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
459: 1:BoardData {
459: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
459: 1:  'expectedAnswer': '29',
459: 1:  'history': [
459: 1:    {
459: 1:      'answer': '2',
459: 1:      'question': '1',
459: 1:      'valid': true
459: 1:    },
459: 1:    {
459: 1:      'answer': '3',
459: 1:      'question': '2',
459: 1:      'valid': true
459: 1:    },
459: 1:    {
459: 1:      'answer': '5',
459: 1:      'question': '3',
459: 1:      'valid': true
459: 1:    },
459: 1:    {
459: 1:      'answer': '7',
459: 1:      'question': '4',
459: 1:      'valid': true
459: 1:    },
459: 1:    {
459: 1:      'answer': '11',
459: 1:      'question': '5',
459: 1:      'valid': true
459: 1:    },
459: 1:    {
459: 1:      'answer': '13',
459: 1:      'question': '6',
459: 1:      'valid': true
459: 1:    },
459: 1:    {
459: 1:      'answer': '17',
459: 1:      'question': '7',
459: 1:      'valid': true
459: 1:    },
459: 1:    {
459: 1:      'answer': '19',
459: 1:      'question': '8',
459: 1:      'valid': true
459: 1:    },
459: 1:    {
459: 1:      'answer': '23',
459: 1:      'question': '9',
459: 1:      'valid': true
459: 1:    }
459: 1:  ],
459: 1:  'info': [
459: 1:    '✅f(1) = 2',
459: 1:    '✅f(2) = 3',
459: 1:    '✅f(3) = 5',
459: 1:    '✅f(4) = 7',
459: 1:    '✅f(5) = 11',
459: 1:    '✅f(6) = 13',
459: 1:    '✅f(7) = 17',
459: 1:    '✅f(8) = 19',
459: 1:    '✅f(9) = 23',
459: 1:    '❌f(10) = ??? != 29'
459: 1:  ],
459: 1:  'level': 16,
459: 1:  'nextQuestion': '10',
459: 1:  'questions': [
459: 1:    '1',
459: 1:    '2',
459: 1:    '3',
459: 1:    '4',
459: 1:    '5',
459: 1:    '6',
459: 1:    '7',
459: 1:    '8',
459: 1:    '9',
459: 1:    '10'
459: 1:  ]
459: 1:}
459: 1:Scores: 56078
459: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29']')
459: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
460: 1:BoardData {
460: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
460: 1:  'expectedAnswer': '31',
460: 1:  'history': [
460: 1:    {
460: 1:      'answer': '2',
460: 1:      'question': '1',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '3',
460: 1:      'question': '2',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '5',
460: 1:      'question': '3',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '7',
460: 1:      'question': '4',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '11',
460: 1:      'question': '5',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '13',
460: 1:      'question': '6',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '17',
460: 1:      'question': '7',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '19',
460: 1:      'question': '8',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '23',
460: 1:      'question': '9',
460: 1:      'valid': true
460: 1:    },
460: 1:    {
460: 1:      'answer': '29',
460: 1:      'question': '10',
460: 1:      'valid': true
460: 1:    }
460: 1:  ],
460: 1:  'info': [
460: 1:    '✅f(1) = 2',
460: 1:    '✅f(2) = 3',
460: 1:    '✅f(3) = 5',
460: 1:    '✅f(4) = 7',
460: 1:    '✅f(5) = 11',
460: 1:    '✅f(6) = 13',
460: 1:    '✅f(7) = 17',
460: 1:    '✅f(8) = 19',
460: 1:    '✅f(9) = 23',
460: 1:    '✅f(10) = 29',
460: 1:    '❌f(11) = ??? != 31'
460: 1:  ],
460: 1:  'level': 16,
460: 1:  'nextQuestion': '11',
460: 1:  'questions': [
460: 1:    '1',
460: 1:    '2',
460: 1:    '3',
460: 1:    '4',
460: 1:    '5',
460: 1:    '6',
460: 1:    '7',
460: 1:    '8',
460: 1:    '9',
460: 1:    '10',
460: 1:    '11'
460: 1:  ]
460: 1:}
460: 1:Scores: 56100
460: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31']')
460: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
461: 1:BoardData {
461: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
461: 1:  'expectedAnswer': '37',
461: 1:  'history': [
461: 1:    {
461: 1:      'answer': '2',
461: 1:      'question': '1',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '3',
461: 1:      'question': '2',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '5',
461: 1:      'question': '3',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '7',
461: 1:      'question': '4',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '11',
461: 1:      'question': '5',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '13',
461: 1:      'question': '6',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '17',
461: 1:      'question': '7',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '19',
461: 1:      'question': '8',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '23',
461: 1:      'question': '9',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '29',
461: 1:      'question': '10',
461: 1:      'valid': true
461: 1:    },
461: 1:    {
461: 1:      'answer': '31',
461: 1:      'question': '11',
461: 1:      'valid': true
461: 1:    }
461: 1:  ],
461: 1:  'info': [
461: 1:    '✅f(1) = 2',
461: 1:    '✅f(2) = 3',
461: 1:    '✅f(3) = 5',
461: 1:    '✅f(4) = 7',
461: 1:    '✅f(5) = 11',
461: 1:    '✅f(6) = 13',
461: 1:    '✅f(7) = 17',
461: 1:    '✅f(8) = 19',
461: 1:    '✅f(9) = 23',
461: 1:    '✅f(10) = 29',
461: 1:    '✅f(11) = 31',
461: 1:    '❌f(12) = ??? != 37'
461: 1:  ],
461: 1:  'level': 16,
461: 1:  'nextQuestion': '12',
461: 1:  'questions': [
461: 1:    '1',
461: 1:    '2',
461: 1:    '3',
461: 1:    '4',
461: 1:    '5',
461: 1:    '6',
461: 1:    '7',
461: 1:    '8',
461: 1:    '9',
461: 1:    '10',
461: 1:    '11',
461: 1:    '12'
461: 1:  ]
461: 1:}
461: 1:Scores: 56122
461: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37']')
461: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
462: 1:BoardData {
462: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
462: 1:  'expectedAnswer': '41',
462: 1:  'history': [
462: 1:    {
462: 1:      'answer': '2',
462: 1:      'question': '1',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '3',
462: 1:      'question': '2',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '5',
462: 1:      'question': '3',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '7',
462: 1:      'question': '4',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '11',
462: 1:      'question': '5',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '13',
462: 1:      'question': '6',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '17',
462: 1:      'question': '7',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '19',
462: 1:      'question': '8',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '23',
462: 1:      'question': '9',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '29',
462: 1:      'question': '10',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '31',
462: 1:      'question': '11',
462: 1:      'valid': true
462: 1:    },
462: 1:    {
462: 1:      'answer': '37',
462: 1:      'question': '12',
462: 1:      'valid': true
462: 1:    }
462: 1:  ],
462: 1:  'info': [
462: 1:    '✅f(1) = 2',
462: 1:    '✅f(2) = 3',
462: 1:    '✅f(3) = 5',
462: 1:    '✅f(4) = 7',
462: 1:    '✅f(5) = 11',
462: 1:    '✅f(6) = 13',
462: 1:    '✅f(7) = 17',
462: 1:    '✅f(8) = 19',
462: 1:    '✅f(9) = 23',
462: 1:    '✅f(10) = 29',
462: 1:    '✅f(11) = 31',
462: 1:    '✅f(12) = 37',
462: 1:    '❌f(13) = ??? != 41'
462: 1:  ],
462: 1:  'level': 16,
462: 1:  'nextQuestion': '13',
462: 1:  'questions': [
462: 1:    '1',
462: 1:    '2',
462: 1:    '3',
462: 1:    '4',
462: 1:    '5',
462: 1:    '6',
462: 1:    '7',
462: 1:    '8',
462: 1:    '9',
462: 1:    '10',
462: 1:    '11',
462: 1:    '12',
462: 1:    '13'
462: 1:  ]
462: 1:}
462: 1:Scores: 56144
462: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41']')
462: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
463: 1:BoardData {
463: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
463: 1:  'expectedAnswer': '43',
463: 1:  'history': [
463: 1:    {
463: 1:      'answer': '2',
463: 1:      'question': '1',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '3',
463: 1:      'question': '2',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '5',
463: 1:      'question': '3',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '7',
463: 1:      'question': '4',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '11',
463: 1:      'question': '5',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '13',
463: 1:      'question': '6',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '17',
463: 1:      'question': '7',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '19',
463: 1:      'question': '8',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '23',
463: 1:      'question': '9',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '29',
463: 1:      'question': '10',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '31',
463: 1:      'question': '11',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '37',
463: 1:      'question': '12',
463: 1:      'valid': true
463: 1:    },
463: 1:    {
463: 1:      'answer': '41',
463: 1:      'question': '13',
463: 1:      'valid': true
463: 1:    }
463: 1:  ],
463: 1:  'info': [
463: 1:    '✅f(1) = 2',
463: 1:    '✅f(2) = 3',
463: 1:    '✅f(3) = 5',
463: 1:    '✅f(4) = 7',
463: 1:    '✅f(5) = 11',
463: 1:    '✅f(6) = 13',
463: 1:    '✅f(7) = 17',
463: 1:    '✅f(8) = 19',
463: 1:    '✅f(9) = 23',
463: 1:    '✅f(10) = 29',
463: 1:    '✅f(11) = 31',
463: 1:    '✅f(12) = 37',
463: 1:    '✅f(13) = 41',
463: 1:    '❌f(14) = ??? != 43'
463: 1:  ],
463: 1:  'level': 16,
463: 1:  'nextQuestion': '14',
463: 1:  'questions': [
463: 1:    '1',
463: 1:    '2',
463: 1:    '3',
463: 1:    '4',
463: 1:    '5',
463: 1:    '6',
463: 1:    '7',
463: 1:    '8',
463: 1:    '9',
463: 1:    '10',
463: 1:    '11',
463: 1:    '12',
463: 1:    '13',
463: 1:    '14'
463: 1:  ]
463: 1:}
463: 1:Scores: 56166
463: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43']')
463: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
464: 1:BoardData {
464: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
464: 1:  'expectedAnswer': '47',
464: 1:  'history': [
464: 1:    {
464: 1:      'answer': '2',
464: 1:      'question': '1',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '3',
464: 1:      'question': '2',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '5',
464: 1:      'question': '3',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '7',
464: 1:      'question': '4',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '11',
464: 1:      'question': '5',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '13',
464: 1:      'question': '6',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '17',
464: 1:      'question': '7',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '19',
464: 1:      'question': '8',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '23',
464: 1:      'question': '9',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '29',
464: 1:      'question': '10',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '31',
464: 1:      'question': '11',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '37',
464: 1:      'question': '12',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '41',
464: 1:      'question': '13',
464: 1:      'valid': true
464: 1:    },
464: 1:    {
464: 1:      'answer': '43',
464: 1:      'question': '14',
464: 1:      'valid': true
464: 1:    }
464: 1:  ],
464: 1:  'info': [
464: 1:    '✅f(1) = 2',
464: 1:    '✅f(2) = 3',
464: 1:    '✅f(3) = 5',
464: 1:    '✅f(4) = 7',
464: 1:    '✅f(5) = 11',
464: 1:    '✅f(6) = 13',
464: 1:    '✅f(7) = 17',
464: 1:    '✅f(8) = 19',
464: 1:    '✅f(9) = 23',
464: 1:    '✅f(10) = 29',
464: 1:    '✅f(11) = 31',
464: 1:    '✅f(12) = 37',
464: 1:    '✅f(13) = 41',
464: 1:    '✅f(14) = 43',
464: 1:    '❌f(15) = ??? != 47'
464: 1:  ],
464: 1:  'level': 16,
464: 1:  'nextQuestion': '15',
464: 1:  'questions': [
464: 1:    '1',
464: 1:    '2',
464: 1:    '3',
464: 1:    '4',
464: 1:    '5',
464: 1:    '6',
464: 1:    '7',
464: 1:    '8',
464: 1:    '9',
464: 1:    '10',
464: 1:    '11',
464: 1:    '12',
464: 1:    '13',
464: 1:    '14',
464: 1:    '15'
464: 1:  ]
464: 1:}
464: 1:Scores: 56188
464: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47']')
464: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
465: 1:BoardData {
465: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
465: 1:  'expectedAnswer': '53',
465: 1:  'history': [
465: 1:    {
465: 1:      'answer': '2',
465: 1:      'question': '1',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '3',
465: 1:      'question': '2',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '5',
465: 1:      'question': '3',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '7',
465: 1:      'question': '4',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '11',
465: 1:      'question': '5',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '13',
465: 1:      'question': '6',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '17',
465: 1:      'question': '7',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '19',
465: 1:      'question': '8',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '23',
465: 1:      'question': '9',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '29',
465: 1:      'question': '10',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '31',
465: 1:      'question': '11',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '37',
465: 1:      'question': '12',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '41',
465: 1:      'question': '13',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '43',
465: 1:      'question': '14',
465: 1:      'valid': true
465: 1:    },
465: 1:    {
465: 1:      'answer': '47',
465: 1:      'question': '15',
465: 1:      'valid': true
465: 1:    }
465: 1:  ],
465: 1:  'info': [
465: 1:    '✅f(1) = 2',
465: 1:    '✅f(2) = 3',
465: 1:    '✅f(3) = 5',
465: 1:    '✅f(4) = 7',
465: 1:    '✅f(5) = 11',
465: 1:    '✅f(6) = 13',
465: 1:    '✅f(7) = 17',
465: 1:    '✅f(8) = 19',
465: 1:    '✅f(9) = 23',
465: 1:    '✅f(10) = 29',
465: 1:    '✅f(11) = 31',
465: 1:    '✅f(12) = 37',
465: 1:    '✅f(13) = 41',
465: 1:    '✅f(14) = 43',
465: 1:    '✅f(15) = 47',
465: 1:    '❌f(16) = ??? != 53'
465: 1:  ],
465: 1:  'level': 16,
465: 1:  'nextQuestion': '16',
465: 1:  'questions': [
465: 1:    '1',
465: 1:    '2',
465: 1:    '3',
465: 1:    '4',
465: 1:    '5',
465: 1:    '6',
465: 1:    '7',
465: 1:    '8',
465: 1:    '9',
465: 1:    '10',
465: 1:    '11',
465: 1:    '12',
465: 1:    '13',
465: 1:    '14',
465: 1:    '15',
465: 1:    '16'
465: 1:  ]
465: 1:}
465: 1:Scores: 56210
465: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53']')
465: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
466: 1:BoardData {
466: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
466: 1:  'expectedAnswer': '59',
466: 1:  'history': [
466: 1:    {
466: 1:      'answer': '2',
466: 1:      'question': '1',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '3',
466: 1:      'question': '2',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '5',
466: 1:      'question': '3',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '7',
466: 1:      'question': '4',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '11',
466: 1:      'question': '5',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '13',
466: 1:      'question': '6',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '17',
466: 1:      'question': '7',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '19',
466: 1:      'question': '8',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '23',
466: 1:      'question': '9',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '29',
466: 1:      'question': '10',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '31',
466: 1:      'question': '11',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '37',
466: 1:      'question': '12',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '41',
466: 1:      'question': '13',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '43',
466: 1:      'question': '14',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '47',
466: 1:      'question': '15',
466: 1:      'valid': true
466: 1:    },
466: 1:    {
466: 1:      'answer': '53',
466: 1:      'question': '16',
466: 1:      'valid': true
466: 1:    }
466: 1:  ],
466: 1:  'info': [
466: 1:    '✅f(1) = 2',
466: 1:    '✅f(2) = 3',
466: 1:    '✅f(3) = 5',
466: 1:    '✅f(4) = 7',
466: 1:    '✅f(5) = 11',
466: 1:    '✅f(6) = 13',
466: 1:    '✅f(7) = 17',
466: 1:    '✅f(8) = 19',
466: 1:    '✅f(9) = 23',
466: 1:    '✅f(10) = 29',
466: 1:    '✅f(11) = 31',
466: 1:    '✅f(12) = 37',
466: 1:    '✅f(13) = 41',
466: 1:    '✅f(14) = 43',
466: 1:    '✅f(15) = 47',
466: 1:    '✅f(16) = 53',
466: 1:    '❌f(17) = ??? != 59'
466: 1:  ],
466: 1:  'level': 16,
466: 1:  'nextQuestion': '17',
466: 1:  'questions': [
466: 1:    '1',
466: 1:    '2',
466: 1:    '3',
466: 1:    '4',
466: 1:    '5',
466: 1:    '6',
466: 1:    '7',
466: 1:    '8',
466: 1:    '9',
466: 1:    '10',
466: 1:    '11',
466: 1:    '12',
466: 1:    '13',
466: 1:    '14',
466: 1:    '15',
466: 1:    '16',
466: 1:    '17'
466: 1:  ]
466: 1:}
466: 1:Scores: 56232
466: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59']')
466: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
467: 1:BoardData {
467: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
467: 1:  'expectedAnswer': '61',
467: 1:  'history': [
467: 1:    {
467: 1:      'answer': '2',
467: 1:      'question': '1',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '3',
467: 1:      'question': '2',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '5',
467: 1:      'question': '3',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '7',
467: 1:      'question': '4',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '11',
467: 1:      'question': '5',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '13',
467: 1:      'question': '6',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '17',
467: 1:      'question': '7',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '19',
467: 1:      'question': '8',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '23',
467: 1:      'question': '9',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '29',
467: 1:      'question': '10',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '31',
467: 1:      'question': '11',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '37',
467: 1:      'question': '12',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '41',
467: 1:      'question': '13',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '43',
467: 1:      'question': '14',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '47',
467: 1:      'question': '15',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '53',
467: 1:      'question': '16',
467: 1:      'valid': true
467: 1:    },
467: 1:    {
467: 1:      'answer': '59',
467: 1:      'question': '17',
467: 1:      'valid': true
467: 1:    }
467: 1:  ],
467: 1:  'info': [
467: 1:    '✅f(1) = 2',
467: 1:    '✅f(2) = 3',
467: 1:    '✅f(3) = 5',
467: 1:    '✅f(4) = 7',
467: 1:    '✅f(5) = 11',
467: 1:    '✅f(6) = 13',
467: 1:    '✅f(7) = 17',
467: 1:    '✅f(8) = 19',
467: 1:    '✅f(9) = 23',
467: 1:    '✅f(10) = 29',
467: 1:    '✅f(11) = 31',
467: 1:    '✅f(12) = 37',
467: 1:    '✅f(13) = 41',
467: 1:    '✅f(14) = 43',
467: 1:    '✅f(15) = 47',
467: 1:    '✅f(16) = 53',
467: 1:    '✅f(17) = 59',
467: 1:    '❌f(18) = ??? != 61'
467: 1:  ],
467: 1:  'level': 16,
467: 1:  'nextQuestion': '18',
467: 1:  'questions': [
467: 1:    '1',
467: 1:    '2',
467: 1:    '3',
467: 1:    '4',
467: 1:    '5',
467: 1:    '6',
467: 1:    '7',
467: 1:    '8',
467: 1:    '9',
467: 1:    '10',
467: 1:    '11',
467: 1:    '12',
467: 1:    '13',
467: 1:    '14',
467: 1:    '15',
467: 1:    '16',
467: 1:    '17',
467: 1:    '18'
467: 1:  ]
467: 1:}
467: 1:Scores: 56254
467: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61']')
467: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
468: 1:BoardData {
468: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
468: 1:  'expectedAnswer': '67',
468: 1:  'history': [
468: 1:    {
468: 1:      'answer': '2',
468: 1:      'question': '1',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '3',
468: 1:      'question': '2',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '5',
468: 1:      'question': '3',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '7',
468: 1:      'question': '4',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '11',
468: 1:      'question': '5',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '13',
468: 1:      'question': '6',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '17',
468: 1:      'question': '7',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '19',
468: 1:      'question': '8',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '23',
468: 1:      'question': '9',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '29',
468: 1:      'question': '10',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '31',
468: 1:      'question': '11',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '37',
468: 1:      'question': '12',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '41',
468: 1:      'question': '13',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '43',
468: 1:      'question': '14',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '47',
468: 1:      'question': '15',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '53',
468: 1:      'question': '16',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '59',
468: 1:      'question': '17',
468: 1:      'valid': true
468: 1:    },
468: 1:    {
468: 1:      'answer': '61',
468: 1:      'question': '18',
468: 1:      'valid': true
468: 1:    }
468: 1:  ],
468: 1:  'info': [
468: 1:    '✅f(1) = 2',
468: 1:    '✅f(2) = 3',
468: 1:    '✅f(3) = 5',
468: 1:    '✅f(4) = 7',
468: 1:    '✅f(5) = 11',
468: 1:    '✅f(6) = 13',
468: 1:    '✅f(7) = 17',
468: 1:    '✅f(8) = 19',
468: 1:    '✅f(9) = 23',
468: 1:    '✅f(10) = 29',
468: 1:    '✅f(11) = 31',
468: 1:    '✅f(12) = 37',
468: 1:    '✅f(13) = 41',
468: 1:    '✅f(14) = 43',
468: 1:    '✅f(15) = 47',
468: 1:    '✅f(16) = 53',
468: 1:    '✅f(17) = 59',
468: 1:    '✅f(18) = 61',
468: 1:    '❌f(19) = ??? != 67'
468: 1:  ],
468: 1:  'level': 16,
468: 1:  'nextQuestion': '19',
468: 1:  'questions': [
468: 1:    '1',
468: 1:    '2',
468: 1:    '3',
468: 1:    '4',
468: 1:    '5',
468: 1:    '6',
468: 1:    '7',
468: 1:    '8',
468: 1:    '9',
468: 1:    '10',
468: 1:    '11',
468: 1:    '12',
468: 1:    '13',
468: 1:    '14',
468: 1:    '15',
468: 1:    '16',
468: 1:    '17',
468: 1:    '18',
468: 1:    '19'
468: 1:  ]
468: 1:}
468: 1:Scores: 56276
468: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67']')
468: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
469: 1:BoardData {
469: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
469: 1:  'expectedAnswer': '71',
469: 1:  'history': [
469: 1:    {
469: 1:      'answer': '2',
469: 1:      'question': '1',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '3',
469: 1:      'question': '2',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '5',
469: 1:      'question': '3',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '7',
469: 1:      'question': '4',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '11',
469: 1:      'question': '5',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '13',
469: 1:      'question': '6',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '17',
469: 1:      'question': '7',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '19',
469: 1:      'question': '8',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '23',
469: 1:      'question': '9',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '29',
469: 1:      'question': '10',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '31',
469: 1:      'question': '11',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '37',
469: 1:      'question': '12',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '41',
469: 1:      'question': '13',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '43',
469: 1:      'question': '14',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '47',
469: 1:      'question': '15',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '53',
469: 1:      'question': '16',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '59',
469: 1:      'question': '17',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '61',
469: 1:      'question': '18',
469: 1:      'valid': true
469: 1:    },
469: 1:    {
469: 1:      'answer': '67',
469: 1:      'question': '19',
469: 1:      'valid': true
469: 1:    }
469: 1:  ],
469: 1:  'info': [
469: 1:    '✅f(1) = 2',
469: 1:    '✅f(2) = 3',
469: 1:    '✅f(3) = 5',
469: 1:    '✅f(4) = 7',
469: 1:    '✅f(5) = 11',
469: 1:    '✅f(6) = 13',
469: 1:    '✅f(7) = 17',
469: 1:    '✅f(8) = 19',
469: 1:    '✅f(9) = 23',
469: 1:    '✅f(10) = 29',
469: 1:    '✅f(11) = 31',
469: 1:    '✅f(12) = 37',
469: 1:    '✅f(13) = 41',
469: 1:    '✅f(14) = 43',
469: 1:    '✅f(15) = 47',
469: 1:    '✅f(16) = 53',
469: 1:    '✅f(17) = 59',
469: 1:    '✅f(18) = 61',
469: 1:    '✅f(19) = 67',
469: 1:    '❌f(20) = ??? != 71'
469: 1:  ],
469: 1:  'level': 16,
469: 1:  'nextQuestion': '20',
469: 1:  'questions': [
469: 1:    '1',
469: 1:    '2',
469: 1:    '3',
469: 1:    '4',
469: 1:    '5',
469: 1:    '6',
469: 1:    '7',
469: 1:    '8',
469: 1:    '9',
469: 1:    '10',
469: 1:    '11',
469: 1:    '12',
469: 1:    '13',
469: 1:    '14',
469: 1:    '15',
469: 1:    '16',
469: 1:    '17',
469: 1:    '18',
469: 1:    '19',
469: 1:    '20'
469: 1:  ]
469: 1:}
469: 1:Scores: 56298
469: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71']')
469: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
470: 1:BoardData {
470: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
470: 1:  'expectedAnswer': '73',
470: 1:  'history': [
470: 1:    {
470: 1:      'answer': '2',
470: 1:      'question': '1',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '3',
470: 1:      'question': '2',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '5',
470: 1:      'question': '3',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '7',
470: 1:      'question': '4',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '11',
470: 1:      'question': '5',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '13',
470: 1:      'question': '6',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '17',
470: 1:      'question': '7',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '19',
470: 1:      'question': '8',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '23',
470: 1:      'question': '9',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '29',
470: 1:      'question': '10',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '31',
470: 1:      'question': '11',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '37',
470: 1:      'question': '12',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '41',
470: 1:      'question': '13',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '43',
470: 1:      'question': '14',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '47',
470: 1:      'question': '15',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '53',
470: 1:      'question': '16',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '59',
470: 1:      'question': '17',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '61',
470: 1:      'question': '18',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '67',
470: 1:      'question': '19',
470: 1:      'valid': true
470: 1:    },
470: 1:    {
470: 1:      'answer': '71',
470: 1:      'question': '20',
470: 1:      'valid': true
470: 1:    }
470: 1:  ],
470: 1:  'info': [
470: 1:    '✅f(1) = 2',
470: 1:    '✅f(2) = 3',
470: 1:    '✅f(3) = 5',
470: 1:    '✅f(4) = 7',
470: 1:    '✅f(5) = 11',
470: 1:    '✅f(6) = 13',
470: 1:    '✅f(7) = 17',
470: 1:    '✅f(8) = 19',
470: 1:    '✅f(9) = 23',
470: 1:    '✅f(10) = 29',
470: 1:    '✅f(11) = 31',
470: 1:    '✅f(12) = 37',
470: 1:    '✅f(13) = 41',
470: 1:    '✅f(14) = 43',
470: 1:    '✅f(15) = 47',
470: 1:    '✅f(16) = 53',
470: 1:    '✅f(17) = 59',
470: 1:    '✅f(18) = 61',
470: 1:    '✅f(19) = 67',
470: 1:    '✅f(20) = 71',
470: 1:    '❌f(21) = ??? != 73'
470: 1:  ],
470: 1:  'level': 16,
470: 1:  'nextQuestion': '21',
470: 1:  'questions': [
470: 1:    '1',
470: 1:    '2',
470: 1:    '3',
470: 1:    '4',
470: 1:    '5',
470: 1:    '6',
470: 1:    '7',
470: 1:    '8',
470: 1:    '9',
470: 1:    '10',
470: 1:    '11',
470: 1:    '12',
470: 1:    '13',
470: 1:    '14',
470: 1:    '15',
470: 1:    '16',
470: 1:    '17',
470: 1:    '18',
470: 1:    '19',
470: 1:    '20',
470: 1:    '21'
470: 1:  ]
470: 1:}
470: 1:Scores: 56320
470: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73']')
470: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
471: 1:BoardData {
471: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
471: 1:  'expectedAnswer': '79',
471: 1:  'history': [
471: 1:    {
471: 1:      'answer': '2',
471: 1:      'question': '1',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '3',
471: 1:      'question': '2',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '5',
471: 1:      'question': '3',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '7',
471: 1:      'question': '4',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '11',
471: 1:      'question': '5',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '13',
471: 1:      'question': '6',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '17',
471: 1:      'question': '7',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '19',
471: 1:      'question': '8',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '23',
471: 1:      'question': '9',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '29',
471: 1:      'question': '10',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '31',
471: 1:      'question': '11',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '37',
471: 1:      'question': '12',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '41',
471: 1:      'question': '13',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '43',
471: 1:      'question': '14',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '47',
471: 1:      'question': '15',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '53',
471: 1:      'question': '16',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '59',
471: 1:      'question': '17',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '61',
471: 1:      'question': '18',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '67',
471: 1:      'question': '19',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '71',
471: 1:      'question': '20',
471: 1:      'valid': true
471: 1:    },
471: 1:    {
471: 1:      'answer': '73',
471: 1:      'question': '21',
471: 1:      'valid': true
471: 1:    }
471: 1:  ],
471: 1:  'info': [
471: 1:    '✅f(1) = 2',
471: 1:    '✅f(2) = 3',
471: 1:    '✅f(3) = 5',
471: 1:    '✅f(4) = 7',
471: 1:    '✅f(5) = 11',
471: 1:    '✅f(6) = 13',
471: 1:    '✅f(7) = 17',
471: 1:    '✅f(8) = 19',
471: 1:    '✅f(9) = 23',
471: 1:    '✅f(10) = 29',
471: 1:    '✅f(11) = 31',
471: 1:    '✅f(12) = 37',
471: 1:    '✅f(13) = 41',
471: 1:    '✅f(14) = 43',
471: 1:    '✅f(15) = 47',
471: 1:    '✅f(16) = 53',
471: 1:    '✅f(17) = 59',
471: 1:    '✅f(18) = 61',
471: 1:    '✅f(19) = 67',
471: 1:    '✅f(20) = 71',
471: 1:    '✅f(21) = 73',
471: 1:    '❌f(22) = ??? != 79'
471: 1:  ],
471: 1:  'level': 16,
471: 1:  'nextQuestion': '22',
471: 1:  'questions': [
471: 1:    '1',
471: 1:    '2',
471: 1:    '3',
471: 1:    '4',
471: 1:    '5',
471: 1:    '6',
471: 1:    '7',
471: 1:    '8',
471: 1:    '9',
471: 1:    '10',
471: 1:    '11',
471: 1:    '12',
471: 1:    '13',
471: 1:    '14',
471: 1:    '15',
471: 1:    '16',
471: 1:    '17',
471: 1:    '18',
471: 1:    '19',
471: 1:    '20',
471: 1:    '21',
471: 1:    '22'
471: 1:  ]
471: 1:}
471: 1:Scores: 56342
471: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79']')
471: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
472: 1:BoardData {
472: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
472: 1:  'expectedAnswer': '83',
472: 1:  'history': [
472: 1:    {
472: 1:      'answer': '2',
472: 1:      'question': '1',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '3',
472: 1:      'question': '2',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '5',
472: 1:      'question': '3',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '7',
472: 1:      'question': '4',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '11',
472: 1:      'question': '5',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '13',
472: 1:      'question': '6',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '17',
472: 1:      'question': '7',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '19',
472: 1:      'question': '8',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '23',
472: 1:      'question': '9',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '29',
472: 1:      'question': '10',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '31',
472: 1:      'question': '11',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '37',
472: 1:      'question': '12',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '41',
472: 1:      'question': '13',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '43',
472: 1:      'question': '14',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '47',
472: 1:      'question': '15',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '53',
472: 1:      'question': '16',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '59',
472: 1:      'question': '17',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '61',
472: 1:      'question': '18',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '67',
472: 1:      'question': '19',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '71',
472: 1:      'question': '20',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '73',
472: 1:      'question': '21',
472: 1:      'valid': true
472: 1:    },
472: 1:    {
472: 1:      'answer': '79',
472: 1:      'question': '22',
472: 1:      'valid': true
472: 1:    }
472: 1:  ],
472: 1:  'info': [
472: 1:    '✅f(1) = 2',
472: 1:    '✅f(2) = 3',
472: 1:    '✅f(3) = 5',
472: 1:    '✅f(4) = 7',
472: 1:    '✅f(5) = 11',
472: 1:    '✅f(6) = 13',
472: 1:    '✅f(7) = 17',
472: 1:    '✅f(8) = 19',
472: 1:    '✅f(9) = 23',
472: 1:    '✅f(10) = 29',
472: 1:    '✅f(11) = 31',
472: 1:    '✅f(12) = 37',
472: 1:    '✅f(13) = 41',
472: 1:    '✅f(14) = 43',
472: 1:    '✅f(15) = 47',
472: 1:    '✅f(16) = 53',
472: 1:    '✅f(17) = 59',
472: 1:    '✅f(18) = 61',
472: 1:    '✅f(19) = 67',
472: 1:    '✅f(20) = 71',
472: 1:    '✅f(21) = 73',
472: 1:    '✅f(22) = 79',
472: 1:    '❌f(23) = ??? != 83'
472: 1:  ],
472: 1:  'level': 16,
472: 1:  'nextQuestion': '23',
472: 1:  'questions': [
472: 1:    '1',
472: 1:    '2',
472: 1:    '3',
472: 1:    '4',
472: 1:    '5',
472: 1:    '6',
472: 1:    '7',
472: 1:    '8',
472: 1:    '9',
472: 1:    '10',
472: 1:    '11',
472: 1:    '12',
472: 1:    '13',
472: 1:    '14',
472: 1:    '15',
472: 1:    '16',
472: 1:    '17',
472: 1:    '18',
472: 1:    '19',
472: 1:    '20',
472: 1:    '21',
472: 1:    '22',
472: 1:    '23'
472: 1:  ]
472: 1:}
472: 1:Scores: 56364
472: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83']')
472: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
473: 1:BoardData {
473: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
473: 1:  'expectedAnswer': '89',
473: 1:  'history': [
473: 1:    {
473: 1:      'answer': '2',
473: 1:      'question': '1',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '3',
473: 1:      'question': '2',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '5',
473: 1:      'question': '3',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '7',
473: 1:      'question': '4',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '11',
473: 1:      'question': '5',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '13',
473: 1:      'question': '6',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '17',
473: 1:      'question': '7',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '19',
473: 1:      'question': '8',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '23',
473: 1:      'question': '9',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '29',
473: 1:      'question': '10',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '31',
473: 1:      'question': '11',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '37',
473: 1:      'question': '12',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '41',
473: 1:      'question': '13',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '43',
473: 1:      'question': '14',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '47',
473: 1:      'question': '15',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '53',
473: 1:      'question': '16',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '59',
473: 1:      'question': '17',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '61',
473: 1:      'question': '18',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '67',
473: 1:      'question': '19',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '71',
473: 1:      'question': '20',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '73',
473: 1:      'question': '21',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '79',
473: 1:      'question': '22',
473: 1:      'valid': true
473: 1:    },
473: 1:    {
473: 1:      'answer': '83',
473: 1:      'question': '23',
473: 1:      'valid': true
473: 1:    }
473: 1:  ],
473: 1:  'info': [
473: 1:    '✅f(1) = 2',
473: 1:    '✅f(2) = 3',
473: 1:    '✅f(3) = 5',
473: 1:    '✅f(4) = 7',
473: 1:    '✅f(5) = 11',
473: 1:    '✅f(6) = 13',
473: 1:    '✅f(7) = 17',
473: 1:    '✅f(8) = 19',
473: 1:    '✅f(9) = 23',
473: 1:    '✅f(10) = 29',
473: 1:    '✅f(11) = 31',
473: 1:    '✅f(12) = 37',
473: 1:    '✅f(13) = 41',
473: 1:    '✅f(14) = 43',
473: 1:    '✅f(15) = 47',
473: 1:    '✅f(16) = 53',
473: 1:    '✅f(17) = 59',
473: 1:    '✅f(18) = 61',
473: 1:    '✅f(19) = 67',
473: 1:    '✅f(20) = 71',
473: 1:    '✅f(21) = 73',
473: 1:    '✅f(22) = 79',
473: 1:    '✅f(23) = 83',
473: 1:    '❌f(24) = ??? != 89'
473: 1:  ],
473: 1:  'level': 16,
473: 1:  'nextQuestion': '24',
473: 1:  'questions': [
473: 1:    '1',
473: 1:    '2',
473: 1:    '3',
473: 1:    '4',
473: 1:    '5',
473: 1:    '6',
473: 1:    '7',
473: 1:    '8',
473: 1:    '9',
473: 1:    '10',
473: 1:    '11',
473: 1:    '12',
473: 1:    '13',
473: 1:    '14',
473: 1:    '15',
473: 1:    '16',
473: 1:    '17',
473: 1:    '18',
473: 1:    '19',
473: 1:    '20',
473: 1:    '21',
473: 1:    '22',
473: 1:    '23',
473: 1:    '24'
473: 1:  ]
473: 1:}
473: 1:Scores: 56386
473: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83', '89']')
473: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
474: 1:BoardData {
474: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
474: 1:  'expectedAnswer': '97',
474: 1:  'history': [
474: 1:    {
474: 1:      'answer': '2',
474: 1:      'question': '1',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '3',
474: 1:      'question': '2',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '5',
474: 1:      'question': '3',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '7',
474: 1:      'question': '4',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '11',
474: 1:      'question': '5',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '13',
474: 1:      'question': '6',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '17',
474: 1:      'question': '7',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '19',
474: 1:      'question': '8',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '23',
474: 1:      'question': '9',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '29',
474: 1:      'question': '10',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '31',
474: 1:      'question': '11',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '37',
474: 1:      'question': '12',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '41',
474: 1:      'question': '13',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '43',
474: 1:      'question': '14',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '47',
474: 1:      'question': '15',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '53',
474: 1:      'question': '16',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '59',
474: 1:      'question': '17',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '61',
474: 1:      'question': '18',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '67',
474: 1:      'question': '19',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '71',
474: 1:      'question': '20',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '73',
474: 1:      'question': '21',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '79',
474: 1:      'question': '22',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '83',
474: 1:      'question': '23',
474: 1:      'valid': true
474: 1:    },
474: 1:    {
474: 1:      'answer': '89',
474: 1:      'question': '24',
474: 1:      'valid': true
474: 1:    }
474: 1:  ],
474: 1:  'info': [
474: 1:    '✅f(1) = 2',
474: 1:    '✅f(2) = 3',
474: 1:    '✅f(3) = 5',
474: 1:    '✅f(4) = 7',
474: 1:    '✅f(5) = 11',
474: 1:    '✅f(6) = 13',
474: 1:    '✅f(7) = 17',
474: 1:    '✅f(8) = 19',
474: 1:    '✅f(9) = 23',
474: 1:    '✅f(10) = 29',
474: 1:    '✅f(11) = 31',
474: 1:    '✅f(12) = 37',
474: 1:    '✅f(13) = 41',
474: 1:    '✅f(14) = 43',
474: 1:    '✅f(15) = 47',
474: 1:    '✅f(16) = 53',
474: 1:    '✅f(17) = 59',
474: 1:    '✅f(18) = 61',
474: 1:    '✅f(19) = 67',
474: 1:    '✅f(20) = 71',
474: 1:    '✅f(21) = 73',
474: 1:    '✅f(22) = 79',
474: 1:    '✅f(23) = 83',
474: 1:    '✅f(24) = 89',
474: 1:    '❌f(25) = ??? != 97'
474: 1:  ],
474: 1:  'level': 16,
474: 1:  'nextQuestion': '25',
474: 1:  'questions': [
474: 1:    '1',
474: 1:    '2',
474: 1:    '3',
474: 1:    '4',
474: 1:    '5',
474: 1:    '6',
474: 1:    '7',
474: 1:    '8',
474: 1:    '9',
474: 1:    '10',
474: 1:    '11',
474: 1:    '12',
474: 1:    '13',
474: 1:    '14',
474: 1:    '15',
474: 1:    '16',
474: 1:    '17',
474: 1:    '18',
474: 1:    '19',
474: 1:    '20',
474: 1:    '21',
474: 1:    '22',
474: 1:    '23',
474: 1:    '24',
474: 1:    '25'
474: 1:  ]
474: 1:}
474: 1:Scores: 56408
474: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83', '89', '97']')
474: 1:Fire Event: PassTest{complexity=55, testCount=25}
474: 1:Fire Event: NextAlgorithm{complexity=55, time=0}
------------------------------------------
475: 1:BoardData {
475: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
475: 1:  'history': [
475: 1:    {
475: 1:      'answer': '2',
475: 1:      'question': '1',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '3',
475: 1:      'question': '2',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '5',
475: 1:      'question': '3',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '7',
475: 1:      'question': '4',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '11',
475: 1:      'question': '5',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '13',
475: 1:      'question': '6',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '17',
475: 1:      'question': '7',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '19',
475: 1:      'question': '8',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '23',
475: 1:      'question': '9',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '29',
475: 1:      'question': '10',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '31',
475: 1:      'question': '11',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '37',
475: 1:      'question': '12',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '41',
475: 1:      'question': '13',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '43',
475: 1:      'question': '14',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '47',
475: 1:      'question': '15',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '53',
475: 1:      'question': '16',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '59',
475: 1:      'question': '17',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '61',
475: 1:      'question': '18',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '67',
475: 1:      'question': '19',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '71',
475: 1:      'question': '20',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '73',
475: 1:      'question': '21',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '79',
475: 1:      'question': '22',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '83',
475: 1:      'question': '23',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '89',
475: 1:      'question': '24',
475: 1:      'valid': true
475: 1:    },
475: 1:    {
475: 1:      'answer': '97',
475: 1:      'question': '25',
475: 1:      'valid': true
475: 1:    }
475: 1:  ],
475: 1:  'info': [
475: 1:    '✅f(1) = 2',
475: 1:    '✅f(2) = 3',
475: 1:    '✅f(3) = 5',
475: 1:    '✅f(4) = 7',
475: 1:    '✅f(5) = 11',
475: 1:    '✅f(6) = 13',
475: 1:    '✅f(7) = 17',
475: 1:    '✅f(8) = 19',
475: 1:    '✅f(9) = 23',
475: 1:    '✅f(10) = 29',
475: 1:    '✅f(11) = 31',
475: 1:    '✅f(12) = 37',
475: 1:    '✅f(13) = 41',
475: 1:    '✅f(14) = 43',
475: 1:    '✅f(15) = 47',
475: 1:    '✅f(16) = 53',
475: 1:    '✅f(17) = 59',
475: 1:    '✅f(18) = 61',
475: 1:    '✅f(19) = 67',
475: 1:    '✅f(20) = 71',
475: 1:    '✅f(21) = 73',
475: 1:    '✅f(22) = 79',
475: 1:    '✅f(23) = 83',
475: 1:    '✅f(24) = 89',
475: 1:    '✅f(25) = 97'
475: 1:  ],
475: 1:  'level': 16,
475: 1:  'questions': []
475: 1:}
475: 1:Scores: 63854
475: 1:Answer: message('StartNextLevel')
475: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
476: 1:BoardData {
476: 1:  'description': [
476: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
476: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
476: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
476: 1:  ],
476: 1:  'expectedAnswer': '15:3*5:FizzBuzz',
476: 1:  'history': [],
476: 1:  'info': ['❌f(1) = ??? != 15:3*5:FizzBuzz'],
476: 1:  'level': 17,
476: 1:  'nextQuestion': '1',
476: 1:  'questions': ['1']
476: 1:}
476: 1:Scores: 63854
476: 1:Answer: message('['15:3*5:FizzBuzz']')
476: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
477: 1:BoardData {
477: 1:  'description': [
477: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
477: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
477: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
477: 1:  ],
477: 1:  'expectedAnswer': '21:3*7:FizzMuzz',
477: 1:  'history': [{
477: 1:    'answer': '15:3*5:FizzBuzz',
477: 1:    'question': '1',
477: 1:    'valid': true
477: 1:  }],
477: 1:  'info': [
477: 1:    '✅f(1) = 15:3*5:FizzBuzz',
477: 1:    '❌f(2) = ??? != 21:3*7:FizzMuzz'
477: 1:  ],
477: 1:  'level': 17,
477: 1:  'nextQuestion': '2',
477: 1:  'questions': [
477: 1:    '1',
477: 1:    '2'
477: 1:  ]
477: 1:}
477: 1:Scores: 63875
477: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz']')
477: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
478: 1:BoardData {
478: 1:  'description': [
478: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
478: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
478: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
478: 1:  ],
478: 1:  'expectedAnswer': '33:3*11:FizzDuzz',
478: 1:  'history': [
478: 1:    {
478: 1:      'answer': '15:3*5:FizzBuzz',
478: 1:      'question': '1',
478: 1:      'valid': true
478: 1:    },
478: 1:    {
478: 1:      'answer': '21:3*7:FizzMuzz',
478: 1:      'question': '2',
478: 1:      'valid': true
478: 1:    }
478: 1:  ],
478: 1:  'info': [
478: 1:    '✅f(1) = 15:3*5:FizzBuzz',
478: 1:    '✅f(2) = 21:3*7:FizzMuzz',
478: 1:    '❌f(3) = ??? != 33:3*11:FizzDuzz'
478: 1:  ],
478: 1:  'level': 17,
478: 1:  'nextQuestion': '3',
478: 1:  'questions': [
478: 1:    '1',
478: 1:    '2',
478: 1:    '3'
478: 1:  ]
478: 1:}
478: 1:Scores: 63896
478: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz']')
478: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
479: 1:BoardData {
479: 1:  'description': [
479: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
479: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
479: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
479: 1:  ],
479: 1:  'expectedAnswer': '35:5*7:BuzzMuzz',
479: 1:  'history': [
479: 1:    {
479: 1:      'answer': '15:3*5:FizzBuzz',
479: 1:      'question': '1',
479: 1:      'valid': true
479: 1:    },
479: 1:    {
479: 1:      'answer': '21:3*7:FizzMuzz',
479: 1:      'question': '2',
479: 1:      'valid': true
479: 1:    },
479: 1:    {
479: 1:      'answer': '33:3*11:FizzDuzz',
479: 1:      'question': '3',
479: 1:      'valid': true
479: 1:    }
479: 1:  ],
479: 1:  'info': [
479: 1:    '✅f(1) = 15:3*5:FizzBuzz',
479: 1:    '✅f(2) = 21:3*7:FizzMuzz',
479: 1:    '✅f(3) = 33:3*11:FizzDuzz',
479: 1:    '❌f(4) = ??? != 35:5*7:BuzzMuzz'
479: 1:  ],
479: 1:  'level': 17,
479: 1:  'nextQuestion': '4',
479: 1:  'questions': [
479: 1:    '1',
479: 1:    '2',
479: 1:    '3',
479: 1:    '4'
479: 1:  ]
479: 1:}
479: 1:Scores: 63917
479: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz']')
479: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
480: 1:BoardData {
480: 1:  'description': [
480: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
480: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
480: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
480: 1:  ],
480: 1:  'expectedAnswer': '39:3*13:FizzCazz',
480: 1:  'history': [
480: 1:    {
480: 1:      'answer': '15:3*5:FizzBuzz',
480: 1:      'question': '1',
480: 1:      'valid': true
480: 1:    },
480: 1:    {
480: 1:      'answer': '21:3*7:FizzMuzz',
480: 1:      'question': '2',
480: 1:      'valid': true
480: 1:    },
480: 1:    {
480: 1:      'answer': '33:3*11:FizzDuzz',
480: 1:      'question': '3',
480: 1:      'valid': true
480: 1:    },
480: 1:    {
480: 1:      'answer': '35:5*7:BuzzMuzz',
480: 1:      'question': '4',
480: 1:      'valid': true
480: 1:    }
480: 1:  ],
480: 1:  'info': [
480: 1:    '✅f(1) = 15:3*5:FizzBuzz',
480: 1:    '✅f(2) = 21:3*7:FizzMuzz',
480: 1:    '✅f(3) = 33:3*11:FizzDuzz',
480: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
480: 1:    '❌f(5) = ??? != 39:3*13:FizzCazz'
480: 1:  ],
480: 1:  'level': 17,
480: 1:  'nextQuestion': '5',
480: 1:  'questions': [
480: 1:    '1',
480: 1:    '2',
480: 1:    '3',
480: 1:    '4',
480: 1:    '5'
480: 1:  ]
480: 1:}
480: 1:Scores: 63938
480: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz']')
480: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
481: 1:BoardData {
481: 1:  'description': [
481: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
481: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
481: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
481: 1:  ],
481: 1:  'expectedAnswer': '55:5*11:BuzzDuzz',
481: 1:  'history': [
481: 1:    {
481: 1:      'answer': '15:3*5:FizzBuzz',
481: 1:      'question': '1',
481: 1:      'valid': true
481: 1:    },
481: 1:    {
481: 1:      'answer': '21:3*7:FizzMuzz',
481: 1:      'question': '2',
481: 1:      'valid': true
481: 1:    },
481: 1:    {
481: 1:      'answer': '33:3*11:FizzDuzz',
481: 1:      'question': '3',
481: 1:      'valid': true
481: 1:    },
481: 1:    {
481: 1:      'answer': '35:5*7:BuzzMuzz',
481: 1:      'question': '4',
481: 1:      'valid': true
481: 1:    },
481: 1:    {
481: 1:      'answer': '39:3*13:FizzCazz',
481: 1:      'question': '5',
481: 1:      'valid': true
481: 1:    }
481: 1:  ],
481: 1:  'info': [
481: 1:    '✅f(1) = 15:3*5:FizzBuzz',
481: 1:    '✅f(2) = 21:3*7:FizzMuzz',
481: 1:    '✅f(3) = 33:3*11:FizzDuzz',
481: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
481: 1:    '✅f(5) = 39:3*13:FizzCazz',
481: 1:    '❌f(6) = ??? != 55:5*11:BuzzDuzz'
481: 1:  ],
481: 1:  'level': 17,
481: 1:  'nextQuestion': '6',
481: 1:  'questions': [
481: 1:    '1',
481: 1:    '2',
481: 1:    '3',
481: 1:    '4',
481: 1:    '5',
481: 1:    '6'
481: 1:  ]
481: 1:}
481: 1:Scores: 63959
481: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz']')
481: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
482: 1:BoardData {
482: 1:  'description': [
482: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
482: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
482: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
482: 1:  ],
482: 1:  'expectedAnswer': '65:5*13:BuzzCazz',
482: 1:  'history': [
482: 1:    {
482: 1:      'answer': '15:3*5:FizzBuzz',
482: 1:      'question': '1',
482: 1:      'valid': true
482: 1:    },
482: 1:    {
482: 1:      'answer': '21:3*7:FizzMuzz',
482: 1:      'question': '2',
482: 1:      'valid': true
482: 1:    },
482: 1:    {
482: 1:      'answer': '33:3*11:FizzDuzz',
482: 1:      'question': '3',
482: 1:      'valid': true
482: 1:    },
482: 1:    {
482: 1:      'answer': '35:5*7:BuzzMuzz',
482: 1:      'question': '4',
482: 1:      'valid': true
482: 1:    },
482: 1:    {
482: 1:      'answer': '39:3*13:FizzCazz',
482: 1:      'question': '5',
482: 1:      'valid': true
482: 1:    },
482: 1:    {
482: 1:      'answer': '55:5*11:BuzzDuzz',
482: 1:      'question': '6',
482: 1:      'valid': true
482: 1:    }
482: 1:  ],
482: 1:  'info': [
482: 1:    '✅f(1) = 15:3*5:FizzBuzz',
482: 1:    '✅f(2) = 21:3*7:FizzMuzz',
482: 1:    '✅f(3) = 33:3*11:FizzDuzz',
482: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
482: 1:    '✅f(5) = 39:3*13:FizzCazz',
482: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
482: 1:    '❌f(7) = ??? != 65:5*13:BuzzCazz'
482: 1:  ],
482: 1:  'level': 17,
482: 1:  'nextQuestion': '7',
482: 1:  'questions': [
482: 1:    '1',
482: 1:    '2',
482: 1:    '3',
482: 1:    '4',
482: 1:    '5',
482: 1:    '6',
482: 1:    '7'
482: 1:  ]
482: 1:}
482: 1:Scores: 63980
482: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz']')
482: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
483: 1:BoardData {
483: 1:  'description': [
483: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
483: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
483: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
483: 1:  ],
483: 1:  'expectedAnswer': '77:7*11:MuzzDuzz',
483: 1:  'history': [
483: 1:    {
483: 1:      'answer': '15:3*5:FizzBuzz',
483: 1:      'question': '1',
483: 1:      'valid': true
483: 1:    },
483: 1:    {
483: 1:      'answer': '21:3*7:FizzMuzz',
483: 1:      'question': '2',
483: 1:      'valid': true
483: 1:    },
483: 1:    {
483: 1:      'answer': '33:3*11:FizzDuzz',
483: 1:      'question': '3',
483: 1:      'valid': true
483: 1:    },
483: 1:    {
483: 1:      'answer': '35:5*7:BuzzMuzz',
483: 1:      'question': '4',
483: 1:      'valid': true
483: 1:    },
483: 1:    {
483: 1:      'answer': '39:3*13:FizzCazz',
483: 1:      'question': '5',
483: 1:      'valid': true
483: 1:    },
483: 1:    {
483: 1:      'answer': '55:5*11:BuzzDuzz',
483: 1:      'question': '6',
483: 1:      'valid': true
483: 1:    },
483: 1:    {
483: 1:      'answer': '65:5*13:BuzzCazz',
483: 1:      'question': '7',
483: 1:      'valid': true
483: 1:    }
483: 1:  ],
483: 1:  'info': [
483: 1:    '✅f(1) = 15:3*5:FizzBuzz',
483: 1:    '✅f(2) = 21:3*7:FizzMuzz',
483: 1:    '✅f(3) = 33:3*11:FizzDuzz',
483: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
483: 1:    '✅f(5) = 39:3*13:FizzCazz',
483: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
483: 1:    '✅f(7) = 65:5*13:BuzzCazz',
483: 1:    '❌f(8) = ??? != 77:7*11:MuzzDuzz'
483: 1:  ],
483: 1:  'level': 17,
483: 1:  'nextQuestion': '8',
483: 1:  'questions': [
483: 1:    '1',
483: 1:    '2',
483: 1:    '3',
483: 1:    '4',
483: 1:    '5',
483: 1:    '6',
483: 1:    '7',
483: 1:    '8'
483: 1:  ]
483: 1:}
483: 1:Scores: 64001
483: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz']')
483: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
484: 1:BoardData {
484: 1:  'description': [
484: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
484: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
484: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
484: 1:  ],
484: 1:  'expectedAnswer': '91:7*13:MuzzCazz',
484: 1:  'history': [
484: 1:    {
484: 1:      'answer': '15:3*5:FizzBuzz',
484: 1:      'question': '1',
484: 1:      'valid': true
484: 1:    },
484: 1:    {
484: 1:      'answer': '21:3*7:FizzMuzz',
484: 1:      'question': '2',
484: 1:      'valid': true
484: 1:    },
484: 1:    {
484: 1:      'answer': '33:3*11:FizzDuzz',
484: 1:      'question': '3',
484: 1:      'valid': true
484: 1:    },
484: 1:    {
484: 1:      'answer': '35:5*7:BuzzMuzz',
484: 1:      'question': '4',
484: 1:      'valid': true
484: 1:    },
484: 1:    {
484: 1:      'answer': '39:3*13:FizzCazz',
484: 1:      'question': '5',
484: 1:      'valid': true
484: 1:    },
484: 1:    {
484: 1:      'answer': '55:5*11:BuzzDuzz',
484: 1:      'question': '6',
484: 1:      'valid': true
484: 1:    },
484: 1:    {
484: 1:      'answer': '65:5*13:BuzzCazz',
484: 1:      'question': '7',
484: 1:      'valid': true
484: 1:    },
484: 1:    {
484: 1:      'answer': '77:7*11:MuzzDuzz',
484: 1:      'question': '8',
484: 1:      'valid': true
484: 1:    }
484: 1:  ],
484: 1:  'info': [
484: 1:    '✅f(1) = 15:3*5:FizzBuzz',
484: 1:    '✅f(2) = 21:3*7:FizzMuzz',
484: 1:    '✅f(3) = 33:3*11:FizzDuzz',
484: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
484: 1:    '✅f(5) = 39:3*13:FizzCazz',
484: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
484: 1:    '✅f(7) = 65:5*13:BuzzCazz',
484: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
484: 1:    '❌f(9) = ??? != 91:7*13:MuzzCazz'
484: 1:  ],
484: 1:  'level': 17,
484: 1:  'nextQuestion': '9',
484: 1:  'questions': [
484: 1:    '1',
484: 1:    '2',
484: 1:    '3',
484: 1:    '4',
484: 1:    '5',
484: 1:    '6',
484: 1:    '7',
484: 1:    '8',
484: 1:    '9'
484: 1:  ]
484: 1:}
484: 1:Scores: 64022
484: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz']')
484: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
485: 1:BoardData {
485: 1:  'description': [
485: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
485: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
485: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
485: 1:  ],
485: 1:  'expectedAnswer': '105:3*5*7:FizzBuzzMuzz',
485: 1:  'history': [
485: 1:    {
485: 1:      'answer': '15:3*5:FizzBuzz',
485: 1:      'question': '1',
485: 1:      'valid': true
485: 1:    },
485: 1:    {
485: 1:      'answer': '21:3*7:FizzMuzz',
485: 1:      'question': '2',
485: 1:      'valid': true
485: 1:    },
485: 1:    {
485: 1:      'answer': '33:3*11:FizzDuzz',
485: 1:      'question': '3',
485: 1:      'valid': true
485: 1:    },
485: 1:    {
485: 1:      'answer': '35:5*7:BuzzMuzz',
485: 1:      'question': '4',
485: 1:      'valid': true
485: 1:    },
485: 1:    {
485: 1:      'answer': '39:3*13:FizzCazz',
485: 1:      'question': '5',
485: 1:      'valid': true
485: 1:    },
485: 1:    {
485: 1:      'answer': '55:5*11:BuzzDuzz',
485: 1:      'question': '6',
485: 1:      'valid': true
485: 1:    },
485: 1:    {
485: 1:      'answer': '65:5*13:BuzzCazz',
485: 1:      'question': '7',
485: 1:      'valid': true
485: 1:    },
485: 1:    {
485: 1:      'answer': '77:7*11:MuzzDuzz',
485: 1:      'question': '8',
485: 1:      'valid': true
485: 1:    },
485: 1:    {
485: 1:      'answer': '91:7*13:MuzzCazz',
485: 1:      'question': '9',
485: 1:      'valid': true
485: 1:    }
485: 1:  ],
485: 1:  'info': [
485: 1:    '✅f(1) = 15:3*5:FizzBuzz',
485: 1:    '✅f(2) = 21:3*7:FizzMuzz',
485: 1:    '✅f(3) = 33:3*11:FizzDuzz',
485: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
485: 1:    '✅f(5) = 39:3*13:FizzCazz',
485: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
485: 1:    '✅f(7) = 65:5*13:BuzzCazz',
485: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
485: 1:    '✅f(9) = 91:7*13:MuzzCazz',
485: 1:    '❌f(10) = ??? != 105:3*5*7:FizzBuzzMuzz'
485: 1:  ],
485: 1:  'level': 17,
485: 1:  'nextQuestion': '10',
485: 1:  'questions': [
485: 1:    '1',
485: 1:    '2',
485: 1:    '3',
485: 1:    '4',
485: 1:    '5',
485: 1:    '6',
485: 1:    '7',
485: 1:    '8',
485: 1:    '9',
485: 1:    '10'
485: 1:  ]
485: 1:}
485: 1:Scores: 64043
485: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz']')
485: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
486: 1:BoardData {
486: 1:  'description': [
486: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
486: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
486: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
486: 1:  ],
486: 1:  'expectedAnswer': '143:11*13:DuzzCazz',
486: 1:  'history': [
486: 1:    {
486: 1:      'answer': '15:3*5:FizzBuzz',
486: 1:      'question': '1',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '21:3*7:FizzMuzz',
486: 1:      'question': '2',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '33:3*11:FizzDuzz',
486: 1:      'question': '3',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '35:5*7:BuzzMuzz',
486: 1:      'question': '4',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '39:3*13:FizzCazz',
486: 1:      'question': '5',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '55:5*11:BuzzDuzz',
486: 1:      'question': '6',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '65:5*13:BuzzCazz',
486: 1:      'question': '7',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '77:7*11:MuzzDuzz',
486: 1:      'question': '8',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '91:7*13:MuzzCazz',
486: 1:      'question': '9',
486: 1:      'valid': true
486: 1:    },
486: 1:    {
486: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
486: 1:      'question': '10',
486: 1:      'valid': true
486: 1:    }
486: 1:  ],
486: 1:  'info': [
486: 1:    '✅f(1) = 15:3*5:FizzBuzz',
486: 1:    '✅f(2) = 21:3*7:FizzMuzz',
486: 1:    '✅f(3) = 33:3*11:FizzDuzz',
486: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
486: 1:    '✅f(5) = 39:3*13:FizzCazz',
486: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
486: 1:    '✅f(7) = 65:5*13:BuzzCazz',
486: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
486: 1:    '✅f(9) = 91:7*13:MuzzCazz',
486: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
486: 1:    '❌f(11) = ??? != 143:11*13:DuzzCazz'
486: 1:  ],
486: 1:  'level': 17,
486: 1:  'nextQuestion': '11',
486: 1:  'questions': [
486: 1:    '1',
486: 1:    '2',
486: 1:    '3',
486: 1:    '4',
486: 1:    '5',
486: 1:    '6',
486: 1:    '7',
486: 1:    '8',
486: 1:    '9',
486: 1:    '10',
486: 1:    '11'
486: 1:  ]
486: 1:}
486: 1:Scores: 64064
486: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz']')
486: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
487: 1:BoardData {
487: 1:  'description': [
487: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
487: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
487: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
487: 1:  ],
487: 1:  'expectedAnswer': '165:3*5*11:FizzBuzzDuzz',
487: 1:  'history': [
487: 1:    {
487: 1:      'answer': '15:3*5:FizzBuzz',
487: 1:      'question': '1',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '21:3*7:FizzMuzz',
487: 1:      'question': '2',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '33:3*11:FizzDuzz',
487: 1:      'question': '3',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '35:5*7:BuzzMuzz',
487: 1:      'question': '4',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '39:3*13:FizzCazz',
487: 1:      'question': '5',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '55:5*11:BuzzDuzz',
487: 1:      'question': '6',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '65:5*13:BuzzCazz',
487: 1:      'question': '7',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '77:7*11:MuzzDuzz',
487: 1:      'question': '8',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '91:7*13:MuzzCazz',
487: 1:      'question': '9',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
487: 1:      'question': '10',
487: 1:      'valid': true
487: 1:    },
487: 1:    {
487: 1:      'answer': '143:11*13:DuzzCazz',
487: 1:      'question': '11',
487: 1:      'valid': true
487: 1:    }
487: 1:  ],
487: 1:  'info': [
487: 1:    '✅f(1) = 15:3*5:FizzBuzz',
487: 1:    '✅f(2) = 21:3*7:FizzMuzz',
487: 1:    '✅f(3) = 33:3*11:FizzDuzz',
487: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
487: 1:    '✅f(5) = 39:3*13:FizzCazz',
487: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
487: 1:    '✅f(7) = 65:5*13:BuzzCazz',
487: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
487: 1:    '✅f(9) = 91:7*13:MuzzCazz',
487: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
487: 1:    '✅f(11) = 143:11*13:DuzzCazz',
487: 1:    '❌f(12) = ??? != 165:3*5*11:FizzBuzzDuzz'
487: 1:  ],
487: 1:  'level': 17,
487: 1:  'nextQuestion': '12',
487: 1:  'questions': [
487: 1:    '1',
487: 1:    '2',
487: 1:    '3',
487: 1:    '4',
487: 1:    '5',
487: 1:    '6',
487: 1:    '7',
487: 1:    '8',
487: 1:    '9',
487: 1:    '10',
487: 1:    '11',
487: 1:    '12'
487: 1:  ]
487: 1:}
487: 1:Scores: 64085
487: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz']')
487: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
488: 1:BoardData {
488: 1:  'description': [
488: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
488: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
488: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
488: 1:  ],
488: 1:  'expectedAnswer': '195:3*5*13:FizzBuzzCazz',
488: 1:  'history': [
488: 1:    {
488: 1:      'answer': '15:3*5:FizzBuzz',
488: 1:      'question': '1',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '21:3*7:FizzMuzz',
488: 1:      'question': '2',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '33:3*11:FizzDuzz',
488: 1:      'question': '3',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '35:5*7:BuzzMuzz',
488: 1:      'question': '4',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '39:3*13:FizzCazz',
488: 1:      'question': '5',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '55:5*11:BuzzDuzz',
488: 1:      'question': '6',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '65:5*13:BuzzCazz',
488: 1:      'question': '7',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '77:7*11:MuzzDuzz',
488: 1:      'question': '8',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '91:7*13:MuzzCazz',
488: 1:      'question': '9',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
488: 1:      'question': '10',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '143:11*13:DuzzCazz',
488: 1:      'question': '11',
488: 1:      'valid': true
488: 1:    },
488: 1:    {
488: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
488: 1:      'question': '12',
488: 1:      'valid': true
488: 1:    }
488: 1:  ],
488: 1:  'info': [
488: 1:    '✅f(1) = 15:3*5:FizzBuzz',
488: 1:    '✅f(2) = 21:3*7:FizzMuzz',
488: 1:    '✅f(3) = 33:3*11:FizzDuzz',
488: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
488: 1:    '✅f(5) = 39:3*13:FizzCazz',
488: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
488: 1:    '✅f(7) = 65:5*13:BuzzCazz',
488: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
488: 1:    '✅f(9) = 91:7*13:MuzzCazz',
488: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
488: 1:    '✅f(11) = 143:11*13:DuzzCazz',
488: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
488: 1:    '❌f(13) = ??? != 195:3*5*13:FizzBuzzCazz'
488: 1:  ],
488: 1:  'level': 17,
488: 1:  'nextQuestion': '13',
488: 1:  'questions': [
488: 1:    '1',
488: 1:    '2',
488: 1:    '3',
488: 1:    '4',
488: 1:    '5',
488: 1:    '6',
488: 1:    '7',
488: 1:    '8',
488: 1:    '9',
488: 1:    '10',
488: 1:    '11',
488: 1:    '12',
488: 1:    '13'
488: 1:  ]
488: 1:}
488: 1:Scores: 64106
488: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz']')
488: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
489: 1:BoardData {
489: 1:  'description': [
489: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
489: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
489: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
489: 1:  ],
489: 1:  'expectedAnswer': '231:3*7*11:FizzMuzzDuzz',
489: 1:  'history': [
489: 1:    {
489: 1:      'answer': '15:3*5:FizzBuzz',
489: 1:      'question': '1',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '21:3*7:FizzMuzz',
489: 1:      'question': '2',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '33:3*11:FizzDuzz',
489: 1:      'question': '3',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '35:5*7:BuzzMuzz',
489: 1:      'question': '4',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '39:3*13:FizzCazz',
489: 1:      'question': '5',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '55:5*11:BuzzDuzz',
489: 1:      'question': '6',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '65:5*13:BuzzCazz',
489: 1:      'question': '7',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '77:7*11:MuzzDuzz',
489: 1:      'question': '8',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '91:7*13:MuzzCazz',
489: 1:      'question': '9',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
489: 1:      'question': '10',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '143:11*13:DuzzCazz',
489: 1:      'question': '11',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
489: 1:      'question': '12',
489: 1:      'valid': true
489: 1:    },
489: 1:    {
489: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
489: 1:      'question': '13',
489: 1:      'valid': true
489: 1:    }
489: 1:  ],
489: 1:  'info': [
489: 1:    '✅f(1) = 15:3*5:FizzBuzz',
489: 1:    '✅f(2) = 21:3*7:FizzMuzz',
489: 1:    '✅f(3) = 33:3*11:FizzDuzz',
489: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
489: 1:    '✅f(5) = 39:3*13:FizzCazz',
489: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
489: 1:    '✅f(7) = 65:5*13:BuzzCazz',
489: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
489: 1:    '✅f(9) = 91:7*13:MuzzCazz',
489: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
489: 1:    '✅f(11) = 143:11*13:DuzzCazz',
489: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
489: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
489: 1:    '❌f(14) = ??? != 231:3*7*11:FizzMuzzDuzz'
489: 1:  ],
489: 1:  'level': 17,
489: 1:  'nextQuestion': '14',
489: 1:  'questions': [
489: 1:    '1',
489: 1:    '2',
489: 1:    '3',
489: 1:    '4',
489: 1:    '5',
489: 1:    '6',
489: 1:    '7',
489: 1:    '8',
489: 1:    '9',
489: 1:    '10',
489: 1:    '11',
489: 1:    '12',
489: 1:    '13',
489: 1:    '14'
489: 1:  ]
489: 1:}
489: 1:Scores: 64127
489: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz']')
489: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
490: 1:BoardData {
490: 1:  'description': [
490: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
490: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
490: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
490: 1:  ],
490: 1:  'expectedAnswer': '273:3*7*13:FizzMuzzCazz',
490: 1:  'history': [
490: 1:    {
490: 1:      'answer': '15:3*5:FizzBuzz',
490: 1:      'question': '1',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '21:3*7:FizzMuzz',
490: 1:      'question': '2',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '33:3*11:FizzDuzz',
490: 1:      'question': '3',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '35:5*7:BuzzMuzz',
490: 1:      'question': '4',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '39:3*13:FizzCazz',
490: 1:      'question': '5',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '55:5*11:BuzzDuzz',
490: 1:      'question': '6',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '65:5*13:BuzzCazz',
490: 1:      'question': '7',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '77:7*11:MuzzDuzz',
490: 1:      'question': '8',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '91:7*13:MuzzCazz',
490: 1:      'question': '9',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
490: 1:      'question': '10',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '143:11*13:DuzzCazz',
490: 1:      'question': '11',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
490: 1:      'question': '12',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
490: 1:      'question': '13',
490: 1:      'valid': true
490: 1:    },
490: 1:    {
490: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
490: 1:      'question': '14',
490: 1:      'valid': true
490: 1:    }
490: 1:  ],
490: 1:  'info': [
490: 1:    '✅f(1) = 15:3*5:FizzBuzz',
490: 1:    '✅f(2) = 21:3*7:FizzMuzz',
490: 1:    '✅f(3) = 33:3*11:FizzDuzz',
490: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
490: 1:    '✅f(5) = 39:3*13:FizzCazz',
490: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
490: 1:    '✅f(7) = 65:5*13:BuzzCazz',
490: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
490: 1:    '✅f(9) = 91:7*13:MuzzCazz',
490: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
490: 1:    '✅f(11) = 143:11*13:DuzzCazz',
490: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
490: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
490: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
490: 1:    '❌f(15) = ??? != 273:3*7*13:FizzMuzzCazz'
490: 1:  ],
490: 1:  'level': 17,
490: 1:  'nextQuestion': '15',
490: 1:  'questions': [
490: 1:    '1',
490: 1:    '2',
490: 1:    '3',
490: 1:    '4',
490: 1:    '5',
490: 1:    '6',
490: 1:    '7',
490: 1:    '8',
490: 1:    '9',
490: 1:    '10',
490: 1:    '11',
490: 1:    '12',
490: 1:    '13',
490: 1:    '14',
490: 1:    '15'
490: 1:  ]
490: 1:}
490: 1:Scores: 64148
490: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz']')
490: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
491: 1:BoardData {
491: 1:  'description': [
491: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
491: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
491: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
491: 1:  ],
491: 1:  'expectedAnswer': '385:5*7*11:BuzzMuzzDuzz',
491: 1:  'history': [
491: 1:    {
491: 1:      'answer': '15:3*5:FizzBuzz',
491: 1:      'question': '1',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '21:3*7:FizzMuzz',
491: 1:      'question': '2',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '33:3*11:FizzDuzz',
491: 1:      'question': '3',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '35:5*7:BuzzMuzz',
491: 1:      'question': '4',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '39:3*13:FizzCazz',
491: 1:      'question': '5',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '55:5*11:BuzzDuzz',
491: 1:      'question': '6',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '65:5*13:BuzzCazz',
491: 1:      'question': '7',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '77:7*11:MuzzDuzz',
491: 1:      'question': '8',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '91:7*13:MuzzCazz',
491: 1:      'question': '9',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
491: 1:      'question': '10',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '143:11*13:DuzzCazz',
491: 1:      'question': '11',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
491: 1:      'question': '12',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
491: 1:      'question': '13',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
491: 1:      'question': '14',
491: 1:      'valid': true
491: 1:    },
491: 1:    {
491: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
491: 1:      'question': '15',
491: 1:      'valid': true
491: 1:    }
491: 1:  ],
491: 1:  'info': [
491: 1:    '✅f(1) = 15:3*5:FizzBuzz',
491: 1:    '✅f(2) = 21:3*7:FizzMuzz',
491: 1:    '✅f(3) = 33:3*11:FizzDuzz',
491: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
491: 1:    '✅f(5) = 39:3*13:FizzCazz',
491: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
491: 1:    '✅f(7) = 65:5*13:BuzzCazz',
491: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
491: 1:    '✅f(9) = 91:7*13:MuzzCazz',
491: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
491: 1:    '✅f(11) = 143:11*13:DuzzCazz',
491: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
491: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
491: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
491: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
491: 1:    '❌f(16) = ??? != 385:5*7*11:BuzzMuzzDuzz'
491: 1:  ],
491: 1:  'level': 17,
491: 1:  'nextQuestion': '16',
491: 1:  'questions': [
491: 1:    '1',
491: 1:    '2',
491: 1:    '3',
491: 1:    '4',
491: 1:    '5',
491: 1:    '6',
491: 1:    '7',
491: 1:    '8',
491: 1:    '9',
491: 1:    '10',
491: 1:    '11',
491: 1:    '12',
491: 1:    '13',
491: 1:    '14',
491: 1:    '15',
491: 1:    '16'
491: 1:  ]
491: 1:}
491: 1:Scores: 64169
491: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz']')
491: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
492: 1:BoardData {
492: 1:  'description': [
492: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
492: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
492: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
492: 1:  ],
492: 1:  'expectedAnswer': '429:3*11*13:FizzDuzzCazz',
492: 1:  'history': [
492: 1:    {
492: 1:      'answer': '15:3*5:FizzBuzz',
492: 1:      'question': '1',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '21:3*7:FizzMuzz',
492: 1:      'question': '2',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '33:3*11:FizzDuzz',
492: 1:      'question': '3',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '35:5*7:BuzzMuzz',
492: 1:      'question': '4',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '39:3*13:FizzCazz',
492: 1:      'question': '5',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '55:5*11:BuzzDuzz',
492: 1:      'question': '6',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '65:5*13:BuzzCazz',
492: 1:      'question': '7',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '77:7*11:MuzzDuzz',
492: 1:      'question': '8',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '91:7*13:MuzzCazz',
492: 1:      'question': '9',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
492: 1:      'question': '10',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '143:11*13:DuzzCazz',
492: 1:      'question': '11',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
492: 1:      'question': '12',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
492: 1:      'question': '13',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
492: 1:      'question': '14',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
492: 1:      'question': '15',
492: 1:      'valid': true
492: 1:    },
492: 1:    {
492: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
492: 1:      'question': '16',
492: 1:      'valid': true
492: 1:    }
492: 1:  ],
492: 1:  'info': [
492: 1:    '✅f(1) = 15:3*5:FizzBuzz',
492: 1:    '✅f(2) = 21:3*7:FizzMuzz',
492: 1:    '✅f(3) = 33:3*11:FizzDuzz',
492: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
492: 1:    '✅f(5) = 39:3*13:FizzCazz',
492: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
492: 1:    '✅f(7) = 65:5*13:BuzzCazz',
492: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
492: 1:    '✅f(9) = 91:7*13:MuzzCazz',
492: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
492: 1:    '✅f(11) = 143:11*13:DuzzCazz',
492: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
492: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
492: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
492: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
492: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
492: 1:    '❌f(17) = ??? != 429:3*11*13:FizzDuzzCazz'
492: 1:  ],
492: 1:  'level': 17,
492: 1:  'nextQuestion': '17',
492: 1:  'questions': [
492: 1:    '1',
492: 1:    '2',
492: 1:    '3',
492: 1:    '4',
492: 1:    '5',
492: 1:    '6',
492: 1:    '7',
492: 1:    '8',
492: 1:    '9',
492: 1:    '10',
492: 1:    '11',
492: 1:    '12',
492: 1:    '13',
492: 1:    '14',
492: 1:    '15',
492: 1:    '16',
492: 1:    '17'
492: 1:  ]
492: 1:}
492: 1:Scores: 64190
492: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz']')
492: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
493: 1:BoardData {
493: 1:  'description': [
493: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
493: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
493: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
493: 1:  ],
493: 1:  'expectedAnswer': '455:5*7*13:BuzzMuzzCazz',
493: 1:  'history': [
493: 1:    {
493: 1:      'answer': '15:3*5:FizzBuzz',
493: 1:      'question': '1',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '21:3*7:FizzMuzz',
493: 1:      'question': '2',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '33:3*11:FizzDuzz',
493: 1:      'question': '3',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '35:5*7:BuzzMuzz',
493: 1:      'question': '4',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '39:3*13:FizzCazz',
493: 1:      'question': '5',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '55:5*11:BuzzDuzz',
493: 1:      'question': '6',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '65:5*13:BuzzCazz',
493: 1:      'question': '7',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '77:7*11:MuzzDuzz',
493: 1:      'question': '8',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '91:7*13:MuzzCazz',
493: 1:      'question': '9',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
493: 1:      'question': '10',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '143:11*13:DuzzCazz',
493: 1:      'question': '11',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
493: 1:      'question': '12',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
493: 1:      'question': '13',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
493: 1:      'question': '14',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
493: 1:      'question': '15',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
493: 1:      'question': '16',
493: 1:      'valid': true
493: 1:    },
493: 1:    {
493: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
493: 1:      'question': '17',
493: 1:      'valid': true
493: 1:    }
493: 1:  ],
493: 1:  'info': [
493: 1:    '✅f(1) = 15:3*5:FizzBuzz',
493: 1:    '✅f(2) = 21:3*7:FizzMuzz',
493: 1:    '✅f(3) = 33:3*11:FizzDuzz',
493: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
493: 1:    '✅f(5) = 39:3*13:FizzCazz',
493: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
493: 1:    '✅f(7) = 65:5*13:BuzzCazz',
493: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
493: 1:    '✅f(9) = 91:7*13:MuzzCazz',
493: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
493: 1:    '✅f(11) = 143:11*13:DuzzCazz',
493: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
493: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
493: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
493: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
493: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
493: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
493: 1:    '❌f(18) = ??? != 455:5*7*13:BuzzMuzzCazz'
493: 1:  ],
493: 1:  'level': 17,
493: 1:  'nextQuestion': '18',
493: 1:  'questions': [
493: 1:    '1',
493: 1:    '2',
493: 1:    '3',
493: 1:    '4',
493: 1:    '5',
493: 1:    '6',
493: 1:    '7',
493: 1:    '8',
493: 1:    '9',
493: 1:    '10',
493: 1:    '11',
493: 1:    '12',
493: 1:    '13',
493: 1:    '14',
493: 1:    '15',
493: 1:    '16',
493: 1:    '17',
493: 1:    '18'
493: 1:  ]
493: 1:}
493: 1:Scores: 64211
493: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz']')
493: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
494: 1:BoardData {
494: 1:  'description': [
494: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
494: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
494: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
494: 1:  ],
494: 1:  'expectedAnswer': '715:5*11*13:BuzzDuzzCazz',
494: 1:  'history': [
494: 1:    {
494: 1:      'answer': '15:3*5:FizzBuzz',
494: 1:      'question': '1',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '21:3*7:FizzMuzz',
494: 1:      'question': '2',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '33:3*11:FizzDuzz',
494: 1:      'question': '3',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '35:5*7:BuzzMuzz',
494: 1:      'question': '4',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '39:3*13:FizzCazz',
494: 1:      'question': '5',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '55:5*11:BuzzDuzz',
494: 1:      'question': '6',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '65:5*13:BuzzCazz',
494: 1:      'question': '7',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '77:7*11:MuzzDuzz',
494: 1:      'question': '8',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '91:7*13:MuzzCazz',
494: 1:      'question': '9',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
494: 1:      'question': '10',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '143:11*13:DuzzCazz',
494: 1:      'question': '11',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
494: 1:      'question': '12',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
494: 1:      'question': '13',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
494: 1:      'question': '14',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
494: 1:      'question': '15',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
494: 1:      'question': '16',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
494: 1:      'question': '17',
494: 1:      'valid': true
494: 1:    },
494: 1:    {
494: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
494: 1:      'question': '18',
494: 1:      'valid': true
494: 1:    }
494: 1:  ],
494: 1:  'info': [
494: 1:    '✅f(1) = 15:3*5:FizzBuzz',
494: 1:    '✅f(2) = 21:3*7:FizzMuzz',
494: 1:    '✅f(3) = 33:3*11:FizzDuzz',
494: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
494: 1:    '✅f(5) = 39:3*13:FizzCazz',
494: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
494: 1:    '✅f(7) = 65:5*13:BuzzCazz',
494: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
494: 1:    '✅f(9) = 91:7*13:MuzzCazz',
494: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
494: 1:    '✅f(11) = 143:11*13:DuzzCazz',
494: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
494: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
494: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
494: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
494: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
494: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
494: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
494: 1:    '❌f(19) = ??? != 715:5*11*13:BuzzDuzzCazz'
494: 1:  ],
494: 1:  'level': 17,
494: 1:  'nextQuestion': '19',
494: 1:  'questions': [
494: 1:    '1',
494: 1:    '2',
494: 1:    '3',
494: 1:    '4',
494: 1:    '5',
494: 1:    '6',
494: 1:    '7',
494: 1:    '8',
494: 1:    '9',
494: 1:    '10',
494: 1:    '11',
494: 1:    '12',
494: 1:    '13',
494: 1:    '14',
494: 1:    '15',
494: 1:    '16',
494: 1:    '17',
494: 1:    '18',
494: 1:    '19'
494: 1:  ]
494: 1:}
494: 1:Scores: 64232
494: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz']')
494: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
495: 1:BoardData {
495: 1:  'description': [
495: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
495: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
495: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
495: 1:  ],
495: 1:  'expectedAnswer': '1001:7*11*13:MuzzDuzzCazz',
495: 1:  'history': [
495: 1:    {
495: 1:      'answer': '15:3*5:FizzBuzz',
495: 1:      'question': '1',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '21:3*7:FizzMuzz',
495: 1:      'question': '2',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '33:3*11:FizzDuzz',
495: 1:      'question': '3',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '35:5*7:BuzzMuzz',
495: 1:      'question': '4',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '39:3*13:FizzCazz',
495: 1:      'question': '5',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '55:5*11:BuzzDuzz',
495: 1:      'question': '6',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '65:5*13:BuzzCazz',
495: 1:      'question': '7',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '77:7*11:MuzzDuzz',
495: 1:      'question': '8',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '91:7*13:MuzzCazz',
495: 1:      'question': '9',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
495: 1:      'question': '10',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '143:11*13:DuzzCazz',
495: 1:      'question': '11',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
495: 1:      'question': '12',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
495: 1:      'question': '13',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
495: 1:      'question': '14',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
495: 1:      'question': '15',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
495: 1:      'question': '16',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
495: 1:      'question': '17',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
495: 1:      'question': '18',
495: 1:      'valid': true
495: 1:    },
495: 1:    {
495: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
495: 1:      'question': '19',
495: 1:      'valid': true
495: 1:    }
495: 1:  ],
495: 1:  'info': [
495: 1:    '✅f(1) = 15:3*5:FizzBuzz',
495: 1:    '✅f(2) = 21:3*7:FizzMuzz',
495: 1:    '✅f(3) = 33:3*11:FizzDuzz',
495: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
495: 1:    '✅f(5) = 39:3*13:FizzCazz',
495: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
495: 1:    '✅f(7) = 65:5*13:BuzzCazz',
495: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
495: 1:    '✅f(9) = 91:7*13:MuzzCazz',
495: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
495: 1:    '✅f(11) = 143:11*13:DuzzCazz',
495: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
495: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
495: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
495: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
495: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
495: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
495: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
495: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
495: 1:    '❌f(20) = ??? != 1001:7*11*13:MuzzDuzzCazz'
495: 1:  ],
495: 1:  'level': 17,
495: 1:  'nextQuestion': '20',
495: 1:  'questions': [
495: 1:    '1',
495: 1:    '2',
495: 1:    '3',
495: 1:    '4',
495: 1:    '5',
495: 1:    '6',
495: 1:    '7',
495: 1:    '8',
495: 1:    '9',
495: 1:    '10',
495: 1:    '11',
495: 1:    '12',
495: 1:    '13',
495: 1:    '14',
495: 1:    '15',
495: 1:    '16',
495: 1:    '17',
495: 1:    '18',
495: 1:    '19',
495: 1:    '20'
495: 1:  ]
495: 1:}
495: 1:Scores: 64253
495: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz']')
495: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
496: 1:BoardData {
496: 1:  'description': [
496: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
496: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
496: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
496: 1:  ],
496: 1:  'expectedAnswer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
496: 1:  'history': [
496: 1:    {
496: 1:      'answer': '15:3*5:FizzBuzz',
496: 1:      'question': '1',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '21:3*7:FizzMuzz',
496: 1:      'question': '2',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '33:3*11:FizzDuzz',
496: 1:      'question': '3',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '35:5*7:BuzzMuzz',
496: 1:      'question': '4',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '39:3*13:FizzCazz',
496: 1:      'question': '5',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '55:5*11:BuzzDuzz',
496: 1:      'question': '6',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '65:5*13:BuzzCazz',
496: 1:      'question': '7',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '77:7*11:MuzzDuzz',
496: 1:      'question': '8',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '91:7*13:MuzzCazz',
496: 1:      'question': '9',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
496: 1:      'question': '10',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '143:11*13:DuzzCazz',
496: 1:      'question': '11',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
496: 1:      'question': '12',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
496: 1:      'question': '13',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
496: 1:      'question': '14',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
496: 1:      'question': '15',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
496: 1:      'question': '16',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
496: 1:      'question': '17',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
496: 1:      'question': '18',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
496: 1:      'question': '19',
496: 1:      'valid': true
496: 1:    },
496: 1:    {
496: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
496: 1:      'question': '20',
496: 1:      'valid': true
496: 1:    }
496: 1:  ],
496: 1:  'info': [
496: 1:    '✅f(1) = 15:3*5:FizzBuzz',
496: 1:    '✅f(2) = 21:3*7:FizzMuzz',
496: 1:    '✅f(3) = 33:3*11:FizzDuzz',
496: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
496: 1:    '✅f(5) = 39:3*13:FizzCazz',
496: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
496: 1:    '✅f(7) = 65:5*13:BuzzCazz',
496: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
496: 1:    '✅f(9) = 91:7*13:MuzzCazz',
496: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
496: 1:    '✅f(11) = 143:11*13:DuzzCazz',
496: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
496: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
496: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
496: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
496: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
496: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
496: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
496: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
496: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
496: 1:    '❌f(21) = ??? != 1155:3*5*7*11:FizzBuzzMuzzDuzz'
496: 1:  ],
496: 1:  'level': 17,
496: 1:  'nextQuestion': '21',
496: 1:  'questions': [
496: 1:    '1',
496: 1:    '2',
496: 1:    '3',
496: 1:    '4',
496: 1:    '5',
496: 1:    '6',
496: 1:    '7',
496: 1:    '8',
496: 1:    '9',
496: 1:    '10',
496: 1:    '11',
496: 1:    '12',
496: 1:    '13',
496: 1:    '14',
496: 1:    '15',
496: 1:    '16',
496: 1:    '17',
496: 1:    '18',
496: 1:    '19',
496: 1:    '20',
496: 1:    '21'
496: 1:  ]
496: 1:}
496: 1:Scores: 64274
496: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz']')
496: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
497: 1:BoardData {
497: 1:  'description': [
497: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
497: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
497: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
497: 1:  ],
497: 1:  'expectedAnswer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
497: 1:  'history': [
497: 1:    {
497: 1:      'answer': '15:3*5:FizzBuzz',
497: 1:      'question': '1',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '21:3*7:FizzMuzz',
497: 1:      'question': '2',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '33:3*11:FizzDuzz',
497: 1:      'question': '3',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '35:5*7:BuzzMuzz',
497: 1:      'question': '4',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '39:3*13:FizzCazz',
497: 1:      'question': '5',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '55:5*11:BuzzDuzz',
497: 1:      'question': '6',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '65:5*13:BuzzCazz',
497: 1:      'question': '7',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '77:7*11:MuzzDuzz',
497: 1:      'question': '8',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '91:7*13:MuzzCazz',
497: 1:      'question': '9',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
497: 1:      'question': '10',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '143:11*13:DuzzCazz',
497: 1:      'question': '11',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
497: 1:      'question': '12',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
497: 1:      'question': '13',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
497: 1:      'question': '14',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
497: 1:      'question': '15',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
497: 1:      'question': '16',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
497: 1:      'question': '17',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
497: 1:      'question': '18',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
497: 1:      'question': '19',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
497: 1:      'question': '20',
497: 1:      'valid': true
497: 1:    },
497: 1:    {
497: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
497: 1:      'question': '21',
497: 1:      'valid': true
497: 1:    }
497: 1:  ],
497: 1:  'info': [
497: 1:    '✅f(1) = 15:3*5:FizzBuzz',
497: 1:    '✅f(2) = 21:3*7:FizzMuzz',
497: 1:    '✅f(3) = 33:3*11:FizzDuzz',
497: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
497: 1:    '✅f(5) = 39:3*13:FizzCazz',
497: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
497: 1:    '✅f(7) = 65:5*13:BuzzCazz',
497: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
497: 1:    '✅f(9) = 91:7*13:MuzzCazz',
497: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
497: 1:    '✅f(11) = 143:11*13:DuzzCazz',
497: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
497: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
497: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
497: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
497: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
497: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
497: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
497: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
497: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
497: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
497: 1:    '❌f(22) = ??? != 1365:3*5*7*13:FizzBuzzMuzzCazz'
497: 1:  ],
497: 1:  'level': 17,
497: 1:  'nextQuestion': '22',
497: 1:  'questions': [
497: 1:    '1',
497: 1:    '2',
497: 1:    '3',
497: 1:    '4',
497: 1:    '5',
497: 1:    '6',
497: 1:    '7',
497: 1:    '8',
497: 1:    '9',
497: 1:    '10',
497: 1:    '11',
497: 1:    '12',
497: 1:    '13',
497: 1:    '14',
497: 1:    '15',
497: 1:    '16',
497: 1:    '17',
497: 1:    '18',
497: 1:    '19',
497: 1:    '20',
497: 1:    '21',
497: 1:    '22'
497: 1:  ]
497: 1:}
497: 1:Scores: 64295
497: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz']')
497: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
498: 1:BoardData {
498: 1:  'description': [
498: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
498: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
498: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
498: 1:  ],
498: 1:  'expectedAnswer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
498: 1:  'history': [
498: 1:    {
498: 1:      'answer': '15:3*5:FizzBuzz',
498: 1:      'question': '1',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '21:3*7:FizzMuzz',
498: 1:      'question': '2',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '33:3*11:FizzDuzz',
498: 1:      'question': '3',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '35:5*7:BuzzMuzz',
498: 1:      'question': '4',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '39:3*13:FizzCazz',
498: 1:      'question': '5',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '55:5*11:BuzzDuzz',
498: 1:      'question': '6',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '65:5*13:BuzzCazz',
498: 1:      'question': '7',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '77:7*11:MuzzDuzz',
498: 1:      'question': '8',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '91:7*13:MuzzCazz',
498: 1:      'question': '9',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
498: 1:      'question': '10',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '143:11*13:DuzzCazz',
498: 1:      'question': '11',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
498: 1:      'question': '12',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
498: 1:      'question': '13',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
498: 1:      'question': '14',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
498: 1:      'question': '15',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
498: 1:      'question': '16',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
498: 1:      'question': '17',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
498: 1:      'question': '18',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
498: 1:      'question': '19',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
498: 1:      'question': '20',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
498: 1:      'question': '21',
498: 1:      'valid': true
498: 1:    },
498: 1:    {
498: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
498: 1:      'question': '22',
498: 1:      'valid': true
498: 1:    }
498: 1:  ],
498: 1:  'info': [
498: 1:    '✅f(1) = 15:3*5:FizzBuzz',
498: 1:    '✅f(2) = 21:3*7:FizzMuzz',
498: 1:    '✅f(3) = 33:3*11:FizzDuzz',
498: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
498: 1:    '✅f(5) = 39:3*13:FizzCazz',
498: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
498: 1:    '✅f(7) = 65:5*13:BuzzCazz',
498: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
498: 1:    '✅f(9) = 91:7*13:MuzzCazz',
498: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
498: 1:    '✅f(11) = 143:11*13:DuzzCazz',
498: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
498: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
498: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
498: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
498: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
498: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
498: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
498: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
498: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
498: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
498: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
498: 1:    '❌f(23) = ??? != 2145:3*5*11*13:FizzBuzzDuzzCazz'
498: 1:  ],
498: 1:  'level': 17,
498: 1:  'nextQuestion': '23',
498: 1:  'questions': [
498: 1:    '1',
498: 1:    '2',
498: 1:    '3',
498: 1:    '4',
498: 1:    '5',
498: 1:    '6',
498: 1:    '7',
498: 1:    '8',
498: 1:    '9',
498: 1:    '10',
498: 1:    '11',
498: 1:    '12',
498: 1:    '13',
498: 1:    '14',
498: 1:    '15',
498: 1:    '16',
498: 1:    '17',
498: 1:    '18',
498: 1:    '19',
498: 1:    '20',
498: 1:    '21',
498: 1:    '22',
498: 1:    '23'
498: 1:  ]
498: 1:}
498: 1:Scores: 64316
498: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz', '2145:3*5*11*13:FizzBuzzDuzzCazz']')
498: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
499: 1:BoardData {
499: 1:  'description': [
499: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
499: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
499: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
499: 1:  ],
499: 1:  'expectedAnswer': '3003:3*7*11*13:FizzMuzzDuzzCazz',
499: 1:  'history': [
499: 1:    {
499: 1:      'answer': '15:3*5:FizzBuzz',
499: 1:      'question': '1',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '21:3*7:FizzMuzz',
499: 1:      'question': '2',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '33:3*11:FizzDuzz',
499: 1:      'question': '3',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '35:5*7:BuzzMuzz',
499: 1:      'question': '4',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '39:3*13:FizzCazz',
499: 1:      'question': '5',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '55:5*11:BuzzDuzz',
499: 1:      'question': '6',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '65:5*13:BuzzCazz',
499: 1:      'question': '7',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '77:7*11:MuzzDuzz',
499: 1:      'question': '8',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '91:7*13:MuzzCazz',
499: 1:      'question': '9',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
499: 1:      'question': '10',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '143:11*13:DuzzCazz',
499: 1:      'question': '11',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
499: 1:      'question': '12',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
499: 1:      'question': '13',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
499: 1:      'question': '14',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
499: 1:      'question': '15',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
499: 1:      'question': '16',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
499: 1:      'question': '17',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
499: 1:      'question': '18',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
499: 1:      'question': '19',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
499: 1:      'question': '20',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
499: 1:      'question': '21',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
499: 1:      'question': '22',
499: 1:      'valid': true
499: 1:    },
499: 1:    {
499: 1:      'answer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
499: 1:      'question': '23',
499: 1:      'valid': true
499: 1:    }
499: 1:  ],
499: 1:  'info': [
499: 1:    '✅f(1) = 15:3*5:FizzBuzz',
499: 1:    '✅f(2) = 21:3*7:FizzMuzz',
499: 1:    '✅f(3) = 33:3*11:FizzDuzz',
499: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
499: 1:    '✅f(5) = 39:3*13:FizzCazz',
499: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
499: 1:    '✅f(7) = 65:5*13:BuzzCazz',
499: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
499: 1:    '✅f(9) = 91:7*13:MuzzCazz',
499: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
499: 1:    '✅f(11) = 143:11*13:DuzzCazz',
499: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
499: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
499: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
499: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
499: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
499: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
499: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
499: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
499: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
499: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
499: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
499: 1:    '✅f(23) = 2145:3*5*11*13:FizzBuzzDuzzCazz',
499: 1:    '❌f(24) = ??? != 3003:3*7*11*13:FizzMuzzDuzzCazz'
499: 1:  ],
499: 1:  'level': 17,
499: 1:  'nextQuestion': '24',
499: 1:  'questions': [
499: 1:    '1',
499: 1:    '2',
499: 1:    '3',
499: 1:    '4',
499: 1:    '5',
499: 1:    '6',
499: 1:    '7',
499: 1:    '8',
499: 1:    '9',
499: 1:    '10',
499: 1:    '11',
499: 1:    '12',
499: 1:    '13',
499: 1:    '14',
499: 1:    '15',
499: 1:    '16',
499: 1:    '17',
499: 1:    '18',
499: 1:    '19',
499: 1:    '20',
499: 1:    '21',
499: 1:    '22',
499: 1:    '23',
499: 1:    '24'
499: 1:  ]
499: 1:}
499: 1:Scores: 64337
499: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz', '2145:3*5*11*13:FizzBuzzDuzzCazz', '3003:3*7*11*13:FizzMuzzDuzzCazz']')
499: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
500: 1:BoardData {
500: 1:  'description': [
500: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
500: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
500: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
500: 1:  ],
500: 1:  'expectedAnswer': '5005:5*7*11*13:BuzzMuzzDuzzCazz',
500: 1:  'history': [
500: 1:    {
500: 1:      'answer': '15:3*5:FizzBuzz',
500: 1:      'question': '1',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '21:3*7:FizzMuzz',
500: 1:      'question': '2',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '33:3*11:FizzDuzz',
500: 1:      'question': '3',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '35:5*7:BuzzMuzz',
500: 1:      'question': '4',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '39:3*13:FizzCazz',
500: 1:      'question': '5',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '55:5*11:BuzzDuzz',
500: 1:      'question': '6',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '65:5*13:BuzzCazz',
500: 1:      'question': '7',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '77:7*11:MuzzDuzz',
500: 1:      'question': '8',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '91:7*13:MuzzCazz',
500: 1:      'question': '9',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
500: 1:      'question': '10',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '143:11*13:DuzzCazz',
500: 1:      'question': '11',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
500: 1:      'question': '12',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
500: 1:      'question': '13',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
500: 1:      'question': '14',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
500: 1:      'question': '15',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
500: 1:      'question': '16',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
500: 1:      'question': '17',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
500: 1:      'question': '18',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
500: 1:      'question': '19',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
500: 1:      'question': '20',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
500: 1:      'question': '21',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
500: 1:      'question': '22',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
500: 1:      'question': '23',
500: 1:      'valid': true
500: 1:    },
500: 1:    {
500: 1:      'answer': '3003:3*7*11*13:FizzMuzzDuzzCazz',
500: 1:      'question': '24',
500: 1:      'valid': true
500: 1:    }
500: 1:  ],
500: 1:  'info': [
500: 1:    '✅f(1) = 15:3*5:FizzBuzz',
500: 1:    '✅f(2) = 21:3*7:FizzMuzz',
500: 1:    '✅f(3) = 33:3*11:FizzDuzz',
500: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
500: 1:    '✅f(5) = 39:3*13:FizzCazz',
500: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
500: 1:    '✅f(7) = 65:5*13:BuzzCazz',
500: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
500: 1:    '✅f(9) = 91:7*13:MuzzCazz',
500: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
500: 1:    '✅f(11) = 143:11*13:DuzzCazz',
500: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
500: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
500: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
500: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
500: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
500: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
500: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
500: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
500: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
500: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
500: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
500: 1:    '✅f(23) = 2145:3*5*11*13:FizzBuzzDuzzCazz',
500: 1:    '✅f(24) = 3003:3*7*11*13:FizzMuzzDuzzCazz',
500: 1:    '❌f(25) = ??? != 5005:5*7*11*13:BuzzMuzzDuzzCazz'
500: 1:  ],
500: 1:  'level': 17,
500: 1:  'nextQuestion': '25',
500: 1:  'questions': [
500: 1:    '1',
500: 1:    '2',
500: 1:    '3',
500: 1:    '4',
500: 1:    '5',
500: 1:    '6',
500: 1:    '7',
500: 1:    '8',
500: 1:    '9',
500: 1:    '10',
500: 1:    '11',
500: 1:    '12',
500: 1:    '13',
500: 1:    '14',
500: 1:    '15',
500: 1:    '16',
500: 1:    '17',
500: 1:    '18',
500: 1:    '19',
500: 1:    '20',
500: 1:    '21',
500: 1:    '22',
500: 1:    '23',
500: 1:    '24',
500: 1:    '25'
500: 1:  ]
500: 1:}
500: 1:Scores: 64358
500: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz', '2145:3*5*11*13:FizzBuzzDuzzCazz', '3003:3*7*11*13:FizzMuzzDuzzCazz', '5005:5*7*11*13:BuzzMuzzDuzzCazz']')
500: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
501: 1:BoardData {
501: 1:  'description': [
501: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
501: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
501: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
501: 1:  ],
501: 1:  'expectedAnswer': '15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz',
501: 1:  'history': [
501: 1:    {
501: 1:      'answer': '15:3*5:FizzBuzz',
501: 1:      'question': '1',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '21:3*7:FizzMuzz',
501: 1:      'question': '2',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '33:3*11:FizzDuzz',
501: 1:      'question': '3',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '35:5*7:BuzzMuzz',
501: 1:      'question': '4',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '39:3*13:FizzCazz',
501: 1:      'question': '5',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '55:5*11:BuzzDuzz',
501: 1:      'question': '6',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '65:5*13:BuzzCazz',
501: 1:      'question': '7',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '77:7*11:MuzzDuzz',
501: 1:      'question': '8',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '91:7*13:MuzzCazz',
501: 1:      'question': '9',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
501: 1:      'question': '10',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '143:11*13:DuzzCazz',
501: 1:      'question': '11',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
501: 1:      'question': '12',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
501: 1:      'question': '13',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
501: 1:      'question': '14',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
501: 1:      'question': '15',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
501: 1:      'question': '16',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
501: 1:      'question': '17',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
501: 1:      'question': '18',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
501: 1:      'question': '19',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
501: 1:      'question': '20',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
501: 1:      'question': '21',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
501: 1:      'question': '22',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
501: 1:      'question': '23',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '3003:3*7*11*13:FizzMuzzDuzzCazz',
501: 1:      'question': '24',
501: 1:      'valid': true
501: 1:    },
501: 1:    {
501: 1:      'answer': '5005:5*7*11*13:BuzzMuzzDuzzCazz',
501: 1:      'question': '25',
501: 1:      'valid': true
501: 1:    }
501: 1:  ],
501: 1:  'info': [
501: 1:    '✅f(1) = 15:3*5:FizzBuzz',
501: 1:    '✅f(2) = 21:3*7:FizzMuzz',
501: 1:    '✅f(3) = 33:3*11:FizzDuzz',
501: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
501: 1:    '✅f(5) = 39:3*13:FizzCazz',
501: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
501: 1:    '✅f(7) = 65:5*13:BuzzCazz',
501: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
501: 1:    '✅f(9) = 91:7*13:MuzzCazz',
501: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
501: 1:    '✅f(11) = 143:11*13:DuzzCazz',
501: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
501: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
501: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
501: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
501: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
501: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
501: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
501: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
501: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
501: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
501: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
501: 1:    '✅f(23) = 2145:3*5*11*13:FizzBuzzDuzzCazz',
501: 1:    '✅f(24) = 3003:3*7*11*13:FizzMuzzDuzzCazz',
501: 1:    '✅f(25) = 5005:5*7*11*13:BuzzMuzzDuzzCazz',
501: 1:    '❌f(26) = ??? != 15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
501: 1:  ],
501: 1:  'level': 17,
501: 1:  'nextQuestion': '26',
501: 1:  'questions': [
501: 1:    '1',
501: 1:    '2',
501: 1:    '3',
501: 1:    '4',
501: 1:    '5',
501: 1:    '6',
501: 1:    '7',
501: 1:    '8',
501: 1:    '9',
501: 1:    '10',
501: 1:    '11',
501: 1:    '12',
501: 1:    '13',
501: 1:    '14',
501: 1:    '15',
501: 1:    '16',
501: 1:    '17',
501: 1:    '18',
501: 1:    '19',
501: 1:    '20',
501: 1:    '21',
501: 1:    '22',
501: 1:    '23',
501: 1:    '24',
501: 1:    '25',
501: 1:    '26'
501: 1:  ]
501: 1:}
501: 1:Scores: 64379
501: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz', '2145:3*5*11*13:FizzBuzzDuzzCazz', '3003:3*7*11*13:FizzMuzzDuzzCazz', '5005:5*7*11*13:BuzzMuzzDuzzCazz', '15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz']')
501: 1:Fire Event: PassTest{complexity=57, testCount=27}
------------------------------------------
502: 1:BoardData {
502: 1:  'description': [
502: 1:    'Write a js function that takes an integer index as input and returns a string in the format 'number:divisors:fizzBuzz', where 'number' is the nth positive integer that has at least two distinct dividers [3, 5, 7, 9, 13] and is divisible by them without a rest, 'divisors' is a separated by '*' list of the distinct prime factors of 'number', and 'fizzBuzz' is the result of calling a function 'fizzBuzz(number)'. If the input index is less than or equal to 0 or greater than or equal to 25, return 'none'.',
502: 1:    'JavaScript program:\nfunction fizzBuzz(number) {\n    const divisors = [3, 5, 7, 11, 13];\n    const strings = ['Fizz', 'Buzz', 'Muzz', 'Duzz', 'Cazz'];\n    let str = '';\n    for (let i = 0; i < divisors.length; i++) {\n        if (number % divisors[i] === 0) {\n            str += strings[i];\n        }\n    }\n    return str || number.toString();\n}',
502: 1:    'For example:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n10=>105:3*5*7:FizzBuzzMuzz\n12=>165:3*5*11:FizzBuzzDuzz\n13=>195:3*5*13:FizzBuzzCazz\n21=>1155:3*5*7*11:FizzBuzzMuzzDuzz\n23=>2145:3*5*11*13:FizzBuzzDuzzCazz\n24=>3003:3*7*11*13:FizzMuzzDuzzCazz\n26=>15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz'
502: 1:  ],
502: 1:  'expectedAnswer': 'none',
502: 1:  'history': [
502: 1:    {
502: 1:      'answer': '15:3*5:FizzBuzz',
502: 1:      'question': '1',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '21:3*7:FizzMuzz',
502: 1:      'question': '2',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '33:3*11:FizzDuzz',
502: 1:      'question': '3',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '35:5*7:BuzzMuzz',
502: 1:      'question': '4',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '39:3*13:FizzCazz',
502: 1:      'question': '5',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '55:5*11:BuzzDuzz',
502: 1:      'question': '6',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '65:5*13:BuzzCazz',
502: 1:      'question': '7',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '77:7*11:MuzzDuzz',
502: 1:      'question': '8',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '91:7*13:MuzzCazz',
502: 1:      'question': '9',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
502: 1:      'question': '10',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '143:11*13:DuzzCazz',
502: 1:      'question': '11',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
502: 1:      'question': '12',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
502: 1:      'question': '13',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
502: 1:      'question': '14',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
502: 1:      'question': '15',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
502: 1:      'question': '16',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
502: 1:      'question': '17',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
502: 1:      'question': '18',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
502: 1:      'question': '19',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
502: 1:      'question': '20',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
502: 1:      'question': '21',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
502: 1:      'question': '22',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
502: 1:      'question': '23',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '3003:3*7*11*13:FizzMuzzDuzzCazz',
502: 1:      'question': '24',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '5005:5*7*11*13:BuzzMuzzDuzzCazz',
502: 1:      'question': '25',
502: 1:      'valid': true
502: 1:    },
502: 1:    {
502: 1:      'answer': '15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz',
502: 1:      'question': '26',
502: 1:      'valid': true
502: 1:    }
502: 1:  ],
502: 1:  'info': [
502: 1:    '✅f(1) = 15:3*5:FizzBuzz',
502: 1:    '✅f(2) = 21:3*7:FizzMuzz',
502: 1:    '✅f(3) = 33:3*11:FizzDuzz',
502: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
502: 1:    '✅f(5) = 39:3*13:FizzCazz',
502: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
502: 1:    '✅f(7) = 65:5*13:BuzzCazz',
502: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
502: 1:    '✅f(9) = 91:7*13:MuzzCazz',
502: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
502: 1:    '✅f(11) = 143:11*13:DuzzCazz',
502: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
502: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
502: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
502: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
502: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
502: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
502: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
502: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
502: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
502: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
502: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
502: 1:    '✅f(23) = 2145:3*5*11*13:FizzBuzzDuzzCazz',
502: 1:    '✅f(24) = 3003:3*7*11*13:FizzMuzzDuzzCazz',
502: 1:    '✅f(25) = 5005:5*7*11*13:BuzzMuzzDuzzCazz',
502: 1:    '✅f(26) = 15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz',
502: 1:    '❌f(27) = ??? != none'
502: 1:  ],
502: 1:  'level': 17,
502: 1:  'nextQuestion': '27',
502: 1:  'questions': [
502: 1:    '1',
502: 1:    '2',
502: 1:    '3',
502: 1:    '4',
502: 1:    '5',
502: 1:    '6',
502: 1:    '7',
502: 1:    '8',
502: 1:    '9',
502: 1:    '10',
502: 1:    '11',
502: 1:    '12',
502: 1:    '13',
502: 1:    '14',
502: 1:    '15',
502: 1:    '16',
502: 1:    '17',
502: 1:    '18',
502: 1:    '19',
502: 1:    '20',
502: 1:    '21',
502: 1:    '22',
502: 1:    '23',
502: 1:    '24',
502: 1:    '25',
502: 1:    '26',
502: 1:    '27'
502: 1:  ]
502: 1:}
502: 1:Scores: 64400
502: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz', '2145:3*5*11*13:FizzBuzzDuzzCazz', '3003:3*7*11*13:FizzMuzzDuzzCazz', '5005:5*7*11*13:BuzzMuzzDuzzCazz', '15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz', 'none']')
502: 1:Fire Event: PassTest{complexity=57, testCount=27}
502: 1:Fire Event: NextAlgorithm{complexity=57, time=0}
------------------------------------------
503: 1:BoardData {
503: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
503: 1:  'history': [
503: 1:    {
503: 1:      'answer': '15:3*5:FizzBuzz',
503: 1:      'question': '1',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '21:3*7:FizzMuzz',
503: 1:      'question': '2',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '33:3*11:FizzDuzz',
503: 1:      'question': '3',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '35:5*7:BuzzMuzz',
503: 1:      'question': '4',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '39:3*13:FizzCazz',
503: 1:      'question': '5',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '55:5*11:BuzzDuzz',
503: 1:      'question': '6',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '65:5*13:BuzzCazz',
503: 1:      'question': '7',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '77:7*11:MuzzDuzz',
503: 1:      'question': '8',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '91:7*13:MuzzCazz',
503: 1:      'question': '9',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
503: 1:      'question': '10',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '143:11*13:DuzzCazz',
503: 1:      'question': '11',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
503: 1:      'question': '12',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
503: 1:      'question': '13',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
503: 1:      'question': '14',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
503: 1:      'question': '15',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
503: 1:      'question': '16',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
503: 1:      'question': '17',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
503: 1:      'question': '18',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
503: 1:      'question': '19',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
503: 1:      'question': '20',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
503: 1:      'question': '21',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
503: 1:      'question': '22',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
503: 1:      'question': '23',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '3003:3*7*11*13:FizzMuzzDuzzCazz',
503: 1:      'question': '24',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '5005:5*7*11*13:BuzzMuzzDuzzCazz',
503: 1:      'question': '25',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': '15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz',
503: 1:      'question': '26',
503: 1:      'valid': true
503: 1:    },
503: 1:    {
503: 1:      'answer': 'none',
503: 1:      'question': '27',
503: 1:      'valid': true
503: 1:    }
503: 1:  ],
503: 1:  'info': [
503: 1:    '✅f(1) = 15:3*5:FizzBuzz',
503: 1:    '✅f(2) = 21:3*7:FizzMuzz',
503: 1:    '✅f(3) = 33:3*11:FizzDuzz',
503: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
503: 1:    '✅f(5) = 39:3*13:FizzCazz',
503: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
503: 1:    '✅f(7) = 65:5*13:BuzzCazz',
503: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
503: 1:    '✅f(9) = 91:7*13:MuzzCazz',
503: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
503: 1:    '✅f(11) = 143:11*13:DuzzCazz',
503: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
503: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
503: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
503: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
503: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
503: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
503: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
503: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
503: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
503: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
503: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
503: 1:    '✅f(23) = 2145:3*5*11*13:FizzBuzzDuzzCazz',
503: 1:    '✅f(24) = 3003:3*7*11*13:FizzMuzzDuzzCazz',
503: 1:    '✅f(25) = 5005:5*7*11*13:BuzzMuzzDuzzCazz',
503: 1:    '✅f(26) = 15015:3*5*7*11*13:FizzBuzzMuzzDuzzCazz',
503: 1:    '✅f(27) = none'
503: 1:  ],
503: 1:  'level': 17,
503: 1:  'questions': []
503: 1:}
503: 1:Scores: 72115
503: 1:Answer: message('StartNextLevel')
503: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
504: 1:BoardData {
504: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
504: 1:  'expectedAnswer': '0.5',
504: 1:  'history': [],
504: 1:  'info': ['❌f(1, 2) = ??? != 0.5'],
504: 1:  'level': 18,
504: 1:  'nextQuestion': '1, 2',
504: 1:  'questions': ['1, 2']
504: 1:}
504: 1:Scores: 72115
504: 1:Answer: message('['0.5']')
504: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
505: 1:BoardData {
505: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
505: 1:  'expectedAnswer': '1',
505: 1:  'history': [{
505: 1:    'answer': '0.5',
505: 1:    'question': '1, 2',
505: 1:    'valid': true
505: 1:  }],
505: 1:  'info': [
505: 1:    '✅f(1, 2) = 0.5',
505: 1:    '❌f(1, 1) = ??? != 1'
505: 1:  ],
505: 1:  'level': 18,
505: 1:  'nextQuestion': '1, 1',
505: 1:  'questions': [
505: 1:    '1, 2',
505: 1:    '1, 1'
505: 1:  ]
505: 1:}
505: 1:Scores: 72136
505: 1:Answer: message('['0.5', '1']')
505: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
506: 1:BoardData {
506: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
506: 1:  'expectedAnswer': '1',
506: 1:  'history': [
506: 1:    {
506: 1:      'answer': '0.5',
506: 1:      'question': '1, 2',
506: 1:      'valid': true
506: 1:    },
506: 1:    {
506: 1:      'answer': '1',
506: 1:      'question': '1, 1',
506: 1:      'valid': true
506: 1:    }
506: 1:  ],
506: 1:  'info': [
506: 1:    '✅f(1, 2) = 0.5',
506: 1:    '✅f(1, 1) = 1',
506: 1:    '❌f(5, 5) = ??? != 1'
506: 1:  ],
506: 1:  'level': 18,
506: 1:  'nextQuestion': '5, 5',
506: 1:  'questions': [
506: 1:    '1, 2',
506: 1:    '1, 1',
506: 1:    '5, 5'
506: 1:  ]
506: 1:}
506: 1:Scores: 72157
506: 1:Answer: message('['0.5', '1', '1']')
506: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
507: 1:BoardData {
507: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
507: 1:  'expectedAnswer': '11',
507: 1:  'history': [
507: 1:    {
507: 1:      'answer': '0.5',
507: 1:      'question': '1, 2',
507: 1:      'valid': true
507: 1:    },
507: 1:    {
507: 1:      'answer': '1',
507: 1:      'question': '1, 1',
507: 1:      'valid': true
507: 1:    },
507: 1:    {
507: 1:      'answer': '1',
507: 1:      'question': '5, 5',
507: 1:      'valid': true
507: 1:    }
507: 1:  ],
507: 1:  'info': [
507: 1:    '✅f(1, 2) = 0.5',
507: 1:    '✅f(1, 1) = 1',
507: 1:    '✅f(5, 5) = 1',
507: 1:    '❌f(55, 5) = ??? != 11'
507: 1:  ],
507: 1:  'level': 18,
507: 1:  'nextQuestion': '55, 5',
507: 1:  'questions': [
507: 1:    '1, 2',
507: 1:    '1, 1',
507: 1:    '5, 5',
507: 1:    '55, 5'
507: 1:  ]
507: 1:}
507: 1:Scores: 72178
507: 1:Answer: message('['0.5', '1', '1', '11']')
507: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
508: 1:BoardData {
508: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
508: 1:  'expectedAnswer': '1.25',
508: 1:  'history': [
508: 1:    {
508: 1:      'answer': '0.5',
508: 1:      'question': '1, 2',
508: 1:      'valid': true
508: 1:    },
508: 1:    {
508: 1:      'answer': '1',
508: 1:      'question': '1, 1',
508: 1:      'valid': true
508: 1:    },
508: 1:    {
508: 1:      'answer': '1',
508: 1:      'question': '5, 5',
508: 1:      'valid': true
508: 1:    },
508: 1:    {
508: 1:      'answer': '11',
508: 1:      'question': '55, 5',
508: 1:      'valid': true
508: 1:    }
508: 1:  ],
508: 1:  'info': [
508: 1:    '✅f(1, 2) = 0.5',
508: 1:    '✅f(1, 1) = 1',
508: 1:    '✅f(5, 5) = 1',
508: 1:    '✅f(55, 5) = 11',
508: 1:    '❌f(55, 44) = ??? != 1.25'
508: 1:  ],
508: 1:  'level': 18,
508: 1:  'nextQuestion': '55, 44',
508: 1:  'questions': [
508: 1:    '1, 2',
508: 1:    '1, 1',
508: 1:    '5, 5',
508: 1:    '55, 5',
508: 1:    '55, 44'
508: 1:  ]
508: 1:}
508: 1:Scores: 72199
508: 1:Answer: message('['0.5', '1', '1', '11', '1.25']')
508: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
509: 1:BoardData {
509: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
509: 1:  'expectedAnswer': '0',
509: 1:  'history': [
509: 1:    {
509: 1:      'answer': '0.5',
509: 1:      'question': '1, 2',
509: 1:      'valid': true
509: 1:    },
509: 1:    {
509: 1:      'answer': '1',
509: 1:      'question': '1, 1',
509: 1:      'valid': true
509: 1:    },
509: 1:    {
509: 1:      'answer': '1',
509: 1:      'question': '5, 5',
509: 1:      'valid': true
509: 1:    },
509: 1:    {
509: 1:      'answer': '11',
509: 1:      'question': '55, 5',
509: 1:      'valid': true
509: 1:    },
509: 1:    {
509: 1:      'answer': '1.25',
509: 1:      'question': '55, 44',
509: 1:      'valid': true
509: 1:    }
509: 1:  ],
509: 1:  'info': [
509: 1:    '✅f(1, 2) = 0.5',
509: 1:    '✅f(1, 1) = 1',
509: 1:    '✅f(5, 5) = 1',
509: 1:    '✅f(55, 5) = 11',
509: 1:    '✅f(55, 44) = 1.25',
509: 1:    '❌f(0, 56) = ??? != 0'
509: 1:  ],
509: 1:  'level': 18,
509: 1:  'nextQuestion': '0, 56',
509: 1:  'questions': [
509: 1:    '1, 2',
509: 1:    '1, 1',
509: 1:    '5, 5',
509: 1:    '55, 5',
509: 1:    '55, 44',
509: 1:    '0, 56'
509: 1:  ]
509: 1:}
509: 1:Scores: 72220
509: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0']')
509: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
510: 1:BoardData {
510: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
510: 1:  'expectedAnswer': '56',
510: 1:  'history': [
510: 1:    {
510: 1:      'answer': '0.5',
510: 1:      'question': '1, 2',
510: 1:      'valid': true
510: 1:    },
510: 1:    {
510: 1:      'answer': '1',
510: 1:      'question': '1, 1',
510: 1:      'valid': true
510: 1:    },
510: 1:    {
510: 1:      'answer': '1',
510: 1:      'question': '5, 5',
510: 1:      'valid': true
510: 1:    },
510: 1:    {
510: 1:      'answer': '11',
510: 1:      'question': '55, 5',
510: 1:      'valid': true
510: 1:    },
510: 1:    {
510: 1:      'answer': '1.25',
510: 1:      'question': '55, 44',
510: 1:      'valid': true
510: 1:    },
510: 1:    {
510: 1:      'answer': '0',
510: 1:      'question': '0, 56',
510: 1:      'valid': true
510: 1:    }
510: 1:  ],
510: 1:  'info': [
510: 1:    '✅f(1, 2) = 0.5',
510: 1:    '✅f(1, 1) = 1',
510: 1:    '✅f(5, 5) = 1',
510: 1:    '✅f(55, 5) = 11',
510: 1:    '✅f(55, 44) = 1.25',
510: 1:    '✅f(0, 56) = 0',
510: 1:    '❌f(56, 1) = ??? != 56'
510: 1:  ],
510: 1:  'level': 18,
510: 1:  'nextQuestion': '56, 1',
510: 1:  'questions': [
510: 1:    '1, 2',
510: 1:    '1, 1',
510: 1:    '5, 5',
510: 1:    '55, 5',
510: 1:    '55, 44',
510: 1:    '0, 56',
510: 1:    '56, 1'
510: 1:  ]
510: 1:}
510: 1:Scores: 72241
510: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56']')
510: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
511: 1:BoardData {
511: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
511: 1:  'expectedAnswer': '-0.5',
511: 1:  'history': [
511: 1:    {
511: 1:      'answer': '0.5',
511: 1:      'question': '1, 2',
511: 1:      'valid': true
511: 1:    },
511: 1:    {
511: 1:      'answer': '1',
511: 1:      'question': '1, 1',
511: 1:      'valid': true
511: 1:    },
511: 1:    {
511: 1:      'answer': '1',
511: 1:      'question': '5, 5',
511: 1:      'valid': true
511: 1:    },
511: 1:    {
511: 1:      'answer': '11',
511: 1:      'question': '55, 5',
511: 1:      'valid': true
511: 1:    },
511: 1:    {
511: 1:      'answer': '1.25',
511: 1:      'question': '55, 44',
511: 1:      'valid': true
511: 1:    },
511: 1:    {
511: 1:      'answer': '0',
511: 1:      'question': '0, 56',
511: 1:      'valid': true
511: 1:    },
511: 1:    {
511: 1:      'answer': '56',
511: 1:      'question': '56, 1',
511: 1:      'valid': true
511: 1:    }
511: 1:  ],
511: 1:  'info': [
511: 1:    '✅f(1, 2) = 0.5',
511: 1:    '✅f(1, 1) = 1',
511: 1:    '✅f(5, 5) = 1',
511: 1:    '✅f(55, 5) = 11',
511: 1:    '✅f(55, 44) = 1.25',
511: 1:    '✅f(0, 56) = 0',
511: 1:    '✅f(56, 1) = 56',
511: 1:    '❌f(1, -2) = ??? != -0.5'
511: 1:  ],
511: 1:  'level': 18,
511: 1:  'nextQuestion': '1, -2',
511: 1:  'questions': [
511: 1:    '1, 2',
511: 1:    '1, 1',
511: 1:    '5, 5',
511: 1:    '55, 5',
511: 1:    '55, 44',
511: 1:    '0, 56',
511: 1:    '56, 1',
511: 1:    '1, -2'
511: 1:  ]
511: 1:}
511: 1:Scores: 72262
511: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5']')
511: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
512: 1:BoardData {
512: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
512: 1:  'expectedAnswer': '-0.5',
512: 1:  'history': [
512: 1:    {
512: 1:      'answer': '0.5',
512: 1:      'question': '1, 2',
512: 1:      'valid': true
512: 1:    },
512: 1:    {
512: 1:      'answer': '1',
512: 1:      'question': '1, 1',
512: 1:      'valid': true
512: 1:    },
512: 1:    {
512: 1:      'answer': '1',
512: 1:      'question': '5, 5',
512: 1:      'valid': true
512: 1:    },
512: 1:    {
512: 1:      'answer': '11',
512: 1:      'question': '55, 5',
512: 1:      'valid': true
512: 1:    },
512: 1:    {
512: 1:      'answer': '1.25',
512: 1:      'question': '55, 44',
512: 1:      'valid': true
512: 1:    },
512: 1:    {
512: 1:      'answer': '0',
512: 1:      'question': '0, 56',
512: 1:      'valid': true
512: 1:    },
512: 1:    {
512: 1:      'answer': '56',
512: 1:      'question': '56, 1',
512: 1:      'valid': true
512: 1:    },
512: 1:    {
512: 1:      'answer': '-0.5',
512: 1:      'question': '1, -2',
512: 1:      'valid': true
512: 1:    }
512: 1:  ],
512: 1:  'info': [
512: 1:    '✅f(1, 2) = 0.5',
512: 1:    '✅f(1, 1) = 1',
512: 1:    '✅f(5, 5) = 1',
512: 1:    '✅f(55, 5) = 11',
512: 1:    '✅f(55, 44) = 1.25',
512: 1:    '✅f(0, 56) = 0',
512: 1:    '✅f(56, 1) = 56',
512: 1:    '✅f(1, -2) = -0.5',
512: 1:    '❌f(-1, 2) = ??? != -0.5'
512: 1:  ],
512: 1:  'level': 18,
512: 1:  'nextQuestion': '-1, 2',
512: 1:  'questions': [
512: 1:    '1, 2',
512: 1:    '1, 1',
512: 1:    '5, 5',
512: 1:    '55, 5',
512: 1:    '55, 44',
512: 1:    '0, 56',
512: 1:    '56, 1',
512: 1:    '1, -2',
512: 1:    '-1, 2'
512: 1:  ]
512: 1:}
512: 1:Scores: 72283
512: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5']')
512: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
513: 1:BoardData {
513: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
513: 1:  'expectedAnswer': '0.5',
513: 1:  'history': [
513: 1:    {
513: 1:      'answer': '0.5',
513: 1:      'question': '1, 2',
513: 1:      'valid': true
513: 1:    },
513: 1:    {
513: 1:      'answer': '1',
513: 1:      'question': '1, 1',
513: 1:      'valid': true
513: 1:    },
513: 1:    {
513: 1:      'answer': '1',
513: 1:      'question': '5, 5',
513: 1:      'valid': true
513: 1:    },
513: 1:    {
513: 1:      'answer': '11',
513: 1:      'question': '55, 5',
513: 1:      'valid': true
513: 1:    },
513: 1:    {
513: 1:      'answer': '1.25',
513: 1:      'question': '55, 44',
513: 1:      'valid': true
513: 1:    },
513: 1:    {
513: 1:      'answer': '0',
513: 1:      'question': '0, 56',
513: 1:      'valid': true
513: 1:    },
513: 1:    {
513: 1:      'answer': '56',
513: 1:      'question': '56, 1',
513: 1:      'valid': true
513: 1:    },
513: 1:    {
513: 1:      'answer': '-0.5',
513: 1:      'question': '1, -2',
513: 1:      'valid': true
513: 1:    },
513: 1:    {
513: 1:      'answer': '-0.5',
513: 1:      'question': '-1, 2',
513: 1:      'valid': true
513: 1:    }
513: 1:  ],
513: 1:  'info': [
513: 1:    '✅f(1, 2) = 0.5',
513: 1:    '✅f(1, 1) = 1',
513: 1:    '✅f(5, 5) = 1',
513: 1:    '✅f(55, 5) = 11',
513: 1:    '✅f(55, 44) = 1.25',
513: 1:    '✅f(0, 56) = 0',
513: 1:    '✅f(56, 1) = 56',
513: 1:    '✅f(1, -2) = -0.5',
513: 1:    '✅f(-1, 2) = -0.5',
513: 1:    '❌f(-1, -2) = ??? != 0.5'
513: 1:  ],
513: 1:  'level': 18,
513: 1:  'nextQuestion': '-1, -2',
513: 1:  'questions': [
513: 1:    '1, 2',
513: 1:    '1, 1',
513: 1:    '5, 5',
513: 1:    '55, 5',
513: 1:    '55, 44',
513: 1:    '0, 56',
513: 1:    '56, 1',
513: 1:    '1, -2',
513: 1:    '-1, 2',
513: 1:    '-1, -2'
513: 1:  ]
513: 1:}
513: 1:Scores: 72304
513: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5']')
513: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
514: 1:BoardData {
514: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
514: 1:  'expectedAnswer': '0.001',
514: 1:  'history': [
514: 1:    {
514: 1:      'answer': '0.5',
514: 1:      'question': '1, 2',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '1',
514: 1:      'question': '1, 1',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '1',
514: 1:      'question': '5, 5',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '11',
514: 1:      'question': '55, 5',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '1.25',
514: 1:      'question': '55, 44',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '0',
514: 1:      'question': '0, 56',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '56',
514: 1:      'question': '56, 1',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '-0.5',
514: 1:      'question': '1, -2',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '-0.5',
514: 1:      'question': '-1, 2',
514: 1:      'valid': true
514: 1:    },
514: 1:    {
514: 1:      'answer': '0.5',
514: 1:      'question': '-1, -2',
514: 1:      'valid': true
514: 1:    }
514: 1:  ],
514: 1:  'info': [
514: 1:    '✅f(1, 2) = 0.5',
514: 1:    '✅f(1, 1) = 1',
514: 1:    '✅f(5, 5) = 1',
514: 1:    '✅f(55, 5) = 11',
514: 1:    '✅f(55, 44) = 1.25',
514: 1:    '✅f(0, 56) = 0',
514: 1:    '✅f(56, 1) = 56',
514: 1:    '✅f(1, -2) = -0.5',
514: 1:    '✅f(-1, 2) = -0.5',
514: 1:    '✅f(-1, -2) = 0.5',
514: 1:    '❌f(1, 1000) = ??? != 0.001'
514: 1:  ],
514: 1:  'level': 18,
514: 1:  'nextQuestion': '1, 1000',
514: 1:  'questions': [
514: 1:    '1, 2',
514: 1:    '1, 1',
514: 1:    '5, 5',
514: 1:    '55, 5',
514: 1:    '55, 44',
514: 1:    '0, 56',
514: 1:    '56, 1',
514: 1:    '1, -2',
514: 1:    '-1, 2',
514: 1:    '-1, -2',
514: 1:    '1, 1000'
514: 1:  ]
514: 1:}
514: 1:Scores: 72325
514: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001']')
514: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
515: 1:BoardData {
515: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
515: 1:  'expectedAnswer': '1.2(4)',
515: 1:  'history': [
515: 1:    {
515: 1:      'answer': '0.5',
515: 1:      'question': '1, 2',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '1',
515: 1:      'question': '1, 1',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '1',
515: 1:      'question': '5, 5',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '11',
515: 1:      'question': '55, 5',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '1.25',
515: 1:      'question': '55, 44',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '0',
515: 1:      'question': '0, 56',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '56',
515: 1:      'question': '56, 1',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '-0.5',
515: 1:      'question': '1, -2',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '-0.5',
515: 1:      'question': '-1, 2',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '0.5',
515: 1:      'question': '-1, -2',
515: 1:      'valid': true
515: 1:    },
515: 1:    {
515: 1:      'answer': '0.001',
515: 1:      'question': '1, 1000',
515: 1:      'valid': true
515: 1:    }
515: 1:  ],
515: 1:  'info': [
515: 1:    '✅f(1, 2) = 0.5',
515: 1:    '✅f(1, 1) = 1',
515: 1:    '✅f(5, 5) = 1',
515: 1:    '✅f(55, 5) = 11',
515: 1:    '✅f(55, 44) = 1.25',
515: 1:    '✅f(0, 56) = 0',
515: 1:    '✅f(56, 1) = 56',
515: 1:    '✅f(1, -2) = -0.5',
515: 1:    '✅f(-1, 2) = -0.5',
515: 1:    '✅f(-1, -2) = 0.5',
515: 1:    '✅f(1, 1000) = 0.001',
515: 1:    '❌f(56, 45) = ??? != 1.2(4)'
515: 1:  ],
515: 1:  'level': 18,
515: 1:  'nextQuestion': '56, 45',
515: 1:  'questions': [
515: 1:    '1, 2',
515: 1:    '1, 1',
515: 1:    '5, 5',
515: 1:    '55, 5',
515: 1:    '55, 44',
515: 1:    '0, 56',
515: 1:    '56, 1',
515: 1:    '1, -2',
515: 1:    '-1, 2',
515: 1:    '-1, -2',
515: 1:    '1, 1000',
515: 1:    '56, 45'
515: 1:  ]
515: 1:}
515: 1:Scores: 72346
515: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)']')
515: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
516: 1:BoardData {
516: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
516: 1:  'expectedAnswer': '1.00(90)',
516: 1:  'history': [
516: 1:    {
516: 1:      'answer': '0.5',
516: 1:      'question': '1, 2',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '1',
516: 1:      'question': '1, 1',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '1',
516: 1:      'question': '5, 5',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '11',
516: 1:      'question': '55, 5',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '1.25',
516: 1:      'question': '55, 44',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '0',
516: 1:      'question': '0, 56',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '56',
516: 1:      'question': '56, 1',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '-0.5',
516: 1:      'question': '1, -2',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '-0.5',
516: 1:      'question': '-1, 2',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '0.5',
516: 1:      'question': '-1, -2',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '0.001',
516: 1:      'question': '1, 1000',
516: 1:      'valid': true
516: 1:    },
516: 1:    {
516: 1:      'answer': '1.2(4)',
516: 1:      'question': '56, 45',
516: 1:      'valid': true
516: 1:    }
516: 1:  ],
516: 1:  'info': [
516: 1:    '✅f(1, 2) = 0.5',
516: 1:    '✅f(1, 1) = 1',
516: 1:    '✅f(5, 5) = 1',
516: 1:    '✅f(55, 5) = 11',
516: 1:    '✅f(55, 44) = 1.25',
516: 1:    '✅f(0, 56) = 0',
516: 1:    '✅f(56, 1) = 56',
516: 1:    '✅f(1, -2) = -0.5',
516: 1:    '✅f(-1, 2) = -0.5',
516: 1:    '✅f(-1, -2) = 0.5',
516: 1:    '✅f(1, 1000) = 0.001',
516: 1:    '✅f(56, 45) = 1.2(4)',
516: 1:    '❌f(111, 110) = ??? != 1.00(90)'
516: 1:  ],
516: 1:  'level': 18,
516: 1:  'nextQuestion': '111, 110',
516: 1:  'questions': [
516: 1:    '1, 2',
516: 1:    '1, 1',
516: 1:    '5, 5',
516: 1:    '55, 5',
516: 1:    '55, 44',
516: 1:    '0, 56',
516: 1:    '56, 1',
516: 1:    '1, -2',
516: 1:    '-1, 2',
516: 1:    '-1, -2',
516: 1:    '1, 1000',
516: 1:    '56, 45',
516: 1:    '111, 110'
516: 1:  ]
516: 1:}
516: 1:Scores: 72367
516: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)']')
516: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
517: 1:BoardData {
517: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
517: 1:  'expectedAnswer': '10.0(90)',
517: 1:  'history': [
517: 1:    {
517: 1:      'answer': '0.5',
517: 1:      'question': '1, 2',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '1',
517: 1:      'question': '1, 1',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '1',
517: 1:      'question': '5, 5',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '11',
517: 1:      'question': '55, 5',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '1.25',
517: 1:      'question': '55, 44',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '0',
517: 1:      'question': '0, 56',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '56',
517: 1:      'question': '56, 1',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '-0.5',
517: 1:      'question': '1, -2',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '-0.5',
517: 1:      'question': '-1, 2',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '0.5',
517: 1:      'question': '-1, -2',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '0.001',
517: 1:      'question': '1, 1000',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '1.2(4)',
517: 1:      'question': '56, 45',
517: 1:      'valid': true
517: 1:    },
517: 1:    {
517: 1:      'answer': '1.00(90)',
517: 1:      'question': '111, 110',
517: 1:      'valid': true
517: 1:    }
517: 1:  ],
517: 1:  'info': [
517: 1:    '✅f(1, 2) = 0.5',
517: 1:    '✅f(1, 1) = 1',
517: 1:    '✅f(5, 5) = 1',
517: 1:    '✅f(55, 5) = 11',
517: 1:    '✅f(55, 44) = 1.25',
517: 1:    '✅f(0, 56) = 0',
517: 1:    '✅f(56, 1) = 56',
517: 1:    '✅f(1, -2) = -0.5',
517: 1:    '✅f(-1, 2) = -0.5',
517: 1:    '✅f(-1, -2) = 0.5',
517: 1:    '✅f(1, 1000) = 0.001',
517: 1:    '✅f(56, 45) = 1.2(4)',
517: 1:    '✅f(111, 110) = 1.00(90)',
517: 1:    '❌f(111, 11) = ??? != 10.0(90)'
517: 1:  ],
517: 1:  'level': 18,
517: 1:  'nextQuestion': '111, 11',
517: 1:  'questions': [
517: 1:    '1, 2',
517: 1:    '1, 1',
517: 1:    '5, 5',
517: 1:    '55, 5',
517: 1:    '55, 44',
517: 1:    '0, 56',
517: 1:    '56, 1',
517: 1:    '1, -2',
517: 1:    '-1, 2',
517: 1:    '-1, -2',
517: 1:    '1, 1000',
517: 1:    '56, 45',
517: 1:    '111, 110',
517: 1:    '111, 11'
517: 1:  ]
517: 1:}
517: 1:Scores: 72388
517: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)']')
517: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
518: 1:BoardData {
518: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
518: 1:  'expectedAnswer': '1010.0(90)',
518: 1:  'history': [
518: 1:    {
518: 1:      'answer': '0.5',
518: 1:      'question': '1, 2',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '1',
518: 1:      'question': '1, 1',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '1',
518: 1:      'question': '5, 5',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '11',
518: 1:      'question': '55, 5',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '1.25',
518: 1:      'question': '55, 44',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '0',
518: 1:      'question': '0, 56',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '56',
518: 1:      'question': '56, 1',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '-0.5',
518: 1:      'question': '1, -2',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '-0.5',
518: 1:      'question': '-1, 2',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '0.5',
518: 1:      'question': '-1, -2',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '0.001',
518: 1:      'question': '1, 1000',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '1.2(4)',
518: 1:      'question': '56, 45',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '1.00(90)',
518: 1:      'question': '111, 110',
518: 1:      'valid': true
518: 1:    },
518: 1:    {
518: 1:      'answer': '10.0(90)',
518: 1:      'question': '111, 11',
518: 1:      'valid': true
518: 1:    }
518: 1:  ],
518: 1:  'info': [
518: 1:    '✅f(1, 2) = 0.5',
518: 1:    '✅f(1, 1) = 1',
518: 1:    '✅f(5, 5) = 1',
518: 1:    '✅f(55, 5) = 11',
518: 1:    '✅f(55, 44) = 1.25',
518: 1:    '✅f(0, 56) = 0',
518: 1:    '✅f(56, 1) = 56',
518: 1:    '✅f(1, -2) = -0.5',
518: 1:    '✅f(-1, 2) = -0.5',
518: 1:    '✅f(-1, -2) = 0.5',
518: 1:    '✅f(1, 1000) = 0.001',
518: 1:    '✅f(56, 45) = 1.2(4)',
518: 1:    '✅f(111, 110) = 1.00(90)',
518: 1:    '✅f(111, 11) = 10.0(90)',
518: 1:    '❌f(11111, 11) = ??? != 1010.0(90)'
518: 1:  ],
518: 1:  'level': 18,
518: 1:  'nextQuestion': '11111, 11',
518: 1:  'questions': [
518: 1:    '1, 2',
518: 1:    '1, 1',
518: 1:    '5, 5',
518: 1:    '55, 5',
518: 1:    '55, 44',
518: 1:    '0, 56',
518: 1:    '56, 1',
518: 1:    '1, -2',
518: 1:    '-1, 2',
518: 1:    '-1, -2',
518: 1:    '1, 1000',
518: 1:    '56, 45',
518: 1:    '111, 110',
518: 1:    '111, 11',
518: 1:    '11111, 11'
518: 1:  ]
518: 1:}
518: 1:Scores: 72409
518: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)']')
518: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
519: 1:BoardData {
519: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
519: 1:  'expectedAnswer': '0.0(495)',
519: 1:  'history': [
519: 1:    {
519: 1:      'answer': '0.5',
519: 1:      'question': '1, 2',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '1',
519: 1:      'question': '1, 1',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '1',
519: 1:      'question': '5, 5',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '11',
519: 1:      'question': '55, 5',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '1.25',
519: 1:      'question': '55, 44',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '0',
519: 1:      'question': '0, 56',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '56',
519: 1:      'question': '56, 1',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '-0.5',
519: 1:      'question': '1, -2',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '-0.5',
519: 1:      'question': '-1, 2',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '0.5',
519: 1:      'question': '-1, -2',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '0.001',
519: 1:      'question': '1, 1000',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '1.2(4)',
519: 1:      'question': '56, 45',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '1.00(90)',
519: 1:      'question': '111, 110',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '10.0(90)',
519: 1:      'question': '111, 11',
519: 1:      'valid': true
519: 1:    },
519: 1:    {
519: 1:      'answer': '1010.0(90)',
519: 1:      'question': '11111, 11',
519: 1:      'valid': true
519: 1:    }
519: 1:  ],
519: 1:  'info': [
519: 1:    '✅f(1, 2) = 0.5',
519: 1:    '✅f(1, 1) = 1',
519: 1:    '✅f(5, 5) = 1',
519: 1:    '✅f(55, 5) = 11',
519: 1:    '✅f(55, 44) = 1.25',
519: 1:    '✅f(0, 56) = 0',
519: 1:    '✅f(56, 1) = 56',
519: 1:    '✅f(1, -2) = -0.5',
519: 1:    '✅f(-1, 2) = -0.5',
519: 1:    '✅f(-1, -2) = 0.5',
519: 1:    '✅f(1, 1000) = 0.001',
519: 1:    '✅f(56, 45) = 1.2(4)',
519: 1:    '✅f(111, 110) = 1.00(90)',
519: 1:    '✅f(111, 11) = 10.0(90)',
519: 1:    '✅f(11111, 11) = 1010.0(90)',
519: 1:    '❌f(-11, -222) = ??? != 0.0(495)'
519: 1:  ],
519: 1:  'level': 18,
519: 1:  'nextQuestion': '-11, -222',
519: 1:  'questions': [
519: 1:    '1, 2',
519: 1:    '1, 1',
519: 1:    '5, 5',
519: 1:    '55, 5',
519: 1:    '55, 44',
519: 1:    '0, 56',
519: 1:    '56, 1',
519: 1:    '1, -2',
519: 1:    '-1, 2',
519: 1:    '-1, -2',
519: 1:    '1, 1000',
519: 1:    '56, 45',
519: 1:    '111, 110',
519: 1:    '111, 11',
519: 1:    '11111, 11',
519: 1:    '-11, -222'
519: 1:  ]
519: 1:}
519: 1:Scores: 72430
519: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)']')
519: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
520: 1:BoardData {
520: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
520: 1:  'expectedAnswer': '-5.0(45)',
520: 1:  'history': [
520: 1:    {
520: 1:      'answer': '0.5',
520: 1:      'question': '1, 2',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '1',
520: 1:      'question': '1, 1',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '1',
520: 1:      'question': '5, 5',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '11',
520: 1:      'question': '55, 5',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '1.25',
520: 1:      'question': '55, 44',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '0',
520: 1:      'question': '0, 56',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '56',
520: 1:      'question': '56, 1',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '-0.5',
520: 1:      'question': '1, -2',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '-0.5',
520: 1:      'question': '-1, 2',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '0.5',
520: 1:      'question': '-1, -2',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '0.001',
520: 1:      'question': '1, 1000',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '1.2(4)',
520: 1:      'question': '56, 45',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '1.00(90)',
520: 1:      'question': '111, 110',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '10.0(90)',
520: 1:      'question': '111, 11',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '1010.0(90)',
520: 1:      'question': '11111, 11',
520: 1:      'valid': true
520: 1:    },
520: 1:    {
520: 1:      'answer': '0.0(495)',
520: 1:      'question': '-11, -222',
520: 1:      'valid': true
520: 1:    }
520: 1:  ],
520: 1:  'info': [
520: 1:    '✅f(1, 2) = 0.5',
520: 1:    '✅f(1, 1) = 1',
520: 1:    '✅f(5, 5) = 1',
520: 1:    '✅f(55, 5) = 11',
520: 1:    '✅f(55, 44) = 1.25',
520: 1:    '✅f(0, 56) = 0',
520: 1:    '✅f(56, 1) = 56',
520: 1:    '✅f(1, -2) = -0.5',
520: 1:    '✅f(-1, 2) = -0.5',
520: 1:    '✅f(-1, -2) = 0.5',
520: 1:    '✅f(1, 1000) = 0.001',
520: 1:    '✅f(56, 45) = 1.2(4)',
520: 1:    '✅f(111, 110) = 1.00(90)',
520: 1:    '✅f(111, 11) = 10.0(90)',
520: 1:    '✅f(11111, 11) = 1010.0(90)',
520: 1:    '✅f(-11, -222) = 0.0(495)',
520: 1:    '❌f(111, -22) = ??? != -5.0(45)'
520: 1:  ],
520: 1:  'level': 18,
520: 1:  'nextQuestion': '111, -22',
520: 1:  'questions': [
520: 1:    '1, 2',
520: 1:    '1, 1',
520: 1:    '5, 5',
520: 1:    '55, 5',
520: 1:    '55, 44',
520: 1:    '0, 56',
520: 1:    '56, 1',
520: 1:    '1, -2',
520: 1:    '-1, 2',
520: 1:    '-1, -2',
520: 1:    '1, 1000',
520: 1:    '56, 45',
520: 1:    '111, 110',
520: 1:    '111, 11',
520: 1:    '11111, 11',
520: 1:    '-11, -222',
520: 1:    '111, -22'
520: 1:  ]
520: 1:}
520: 1:Scores: 72451
520: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)']')
520: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
521: 1:BoardData {
521: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
521: 1:  'expectedAnswer': '0.000(3)',
521: 1:  'history': [
521: 1:    {
521: 1:      'answer': '0.5',
521: 1:      'question': '1, 2',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '1',
521: 1:      'question': '1, 1',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '1',
521: 1:      'question': '5, 5',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '11',
521: 1:      'question': '55, 5',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '1.25',
521: 1:      'question': '55, 44',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '0',
521: 1:      'question': '0, 56',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '56',
521: 1:      'question': '56, 1',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '-0.5',
521: 1:      'question': '1, -2',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '-0.5',
521: 1:      'question': '-1, 2',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '0.5',
521: 1:      'question': '-1, -2',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '0.001',
521: 1:      'question': '1, 1000',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '1.2(4)',
521: 1:      'question': '56, 45',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '1.00(90)',
521: 1:      'question': '111, 110',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '10.0(90)',
521: 1:      'question': '111, 11',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '1010.0(90)',
521: 1:      'question': '11111, 11',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '0.0(495)',
521: 1:      'question': '-11, -222',
521: 1:      'valid': true
521: 1:    },
521: 1:    {
521: 1:      'answer': '-5.0(45)',
521: 1:      'question': '111, -22',
521: 1:      'valid': true
521: 1:    }
521: 1:  ],
521: 1:  'info': [
521: 1:    '✅f(1, 2) = 0.5',
521: 1:    '✅f(1, 1) = 1',
521: 1:    '✅f(5, 5) = 1',
521: 1:    '✅f(55, 5) = 11',
521: 1:    '✅f(55, 44) = 1.25',
521: 1:    '✅f(0, 56) = 0',
521: 1:    '✅f(56, 1) = 56',
521: 1:    '✅f(1, -2) = -0.5',
521: 1:    '✅f(-1, 2) = -0.5',
521: 1:    '✅f(-1, -2) = 0.5',
521: 1:    '✅f(1, 1000) = 0.001',
521: 1:    '✅f(56, 45) = 1.2(4)',
521: 1:    '✅f(111, 110) = 1.00(90)',
521: 1:    '✅f(111, 11) = 10.0(90)',
521: 1:    '✅f(11111, 11) = 1010.0(90)',
521: 1:    '✅f(-11, -222) = 0.0(495)',
521: 1:    '✅f(111, -22) = -5.0(45)',
521: 1:    '❌f(1, 3000) = ??? != 0.000(3)'
521: 1:  ],
521: 1:  'level': 18,
521: 1:  'nextQuestion': '1, 3000',
521: 1:  'questions': [
521: 1:    '1, 2',
521: 1:    '1, 1',
521: 1:    '5, 5',
521: 1:    '55, 5',
521: 1:    '55, 44',
521: 1:    '0, 56',
521: 1:    '56, 1',
521: 1:    '1, -2',
521: 1:    '-1, 2',
521: 1:    '-1, -2',
521: 1:    '1, 1000',
521: 1:    '56, 45',
521: 1:    '111, 110',
521: 1:    '111, 11',
521: 1:    '11111, 11',
521: 1:    '-11, -222',
521: 1:    '111, -22',
521: 1:    '1, 3000'
521: 1:  ]
521: 1:}
521: 1:Scores: 72472
521: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)']')
521: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
522: 1:BoardData {
522: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
522: 1:  'expectedAnswer': '1.1(153846)',
522: 1:  'history': [
522: 1:    {
522: 1:      'answer': '0.5',
522: 1:      'question': '1, 2',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '1',
522: 1:      'question': '1, 1',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '1',
522: 1:      'question': '5, 5',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '11',
522: 1:      'question': '55, 5',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '1.25',
522: 1:      'question': '55, 44',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '0',
522: 1:      'question': '0, 56',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '56',
522: 1:      'question': '56, 1',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '-0.5',
522: 1:      'question': '1, -2',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '-0.5',
522: 1:      'question': '-1, 2',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '0.5',
522: 1:      'question': '-1, -2',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '0.001',
522: 1:      'question': '1, 1000',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '1.2(4)',
522: 1:      'question': '56, 45',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '1.00(90)',
522: 1:      'question': '111, 110',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '10.0(90)',
522: 1:      'question': '111, 11',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '1010.0(90)',
522: 1:      'question': '11111, 11',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '0.0(495)',
522: 1:      'question': '-11, -222',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '-5.0(45)',
522: 1:      'question': '111, -22',
522: 1:      'valid': true
522: 1:    },
522: 1:    {
522: 1:      'answer': '0.000(3)',
522: 1:      'question': '1, 3000',
522: 1:      'valid': true
522: 1:    }
522: 1:  ],
522: 1:  'info': [
522: 1:    '✅f(1, 2) = 0.5',
522: 1:    '✅f(1, 1) = 1',
522: 1:    '✅f(5, 5) = 1',
522: 1:    '✅f(55, 5) = 11',
522: 1:    '✅f(55, 44) = 1.25',
522: 1:    '✅f(0, 56) = 0',
522: 1:    '✅f(56, 1) = 56',
522: 1:    '✅f(1, -2) = -0.5',
522: 1:    '✅f(-1, 2) = -0.5',
522: 1:    '✅f(-1, -2) = 0.5',
522: 1:    '✅f(1, 1000) = 0.001',
522: 1:    '✅f(56, 45) = 1.2(4)',
522: 1:    '✅f(111, 110) = 1.00(90)',
522: 1:    '✅f(111, 11) = 10.0(90)',
522: 1:    '✅f(11111, 11) = 1010.0(90)',
522: 1:    '✅f(-11, -222) = 0.0(495)',
522: 1:    '✅f(111, -22) = -5.0(45)',
522: 1:    '✅f(1, 3000) = 0.000(3)',
522: 1:    '❌f(87, 78) = ??? != 1.1(153846)'
522: 1:  ],
522: 1:  'level': 18,
522: 1:  'nextQuestion': '87, 78',
522: 1:  'questions': [
522: 1:    '1, 2',
522: 1:    '1, 1',
522: 1:    '5, 5',
522: 1:    '55, 5',
522: 1:    '55, 44',
522: 1:    '0, 56',
522: 1:    '56, 1',
522: 1:    '1, -2',
522: 1:    '-1, 2',
522: 1:    '-1, -2',
522: 1:    '1, 1000',
522: 1:    '56, 45',
522: 1:    '111, 110',
522: 1:    '111, 11',
522: 1:    '11111, 11',
522: 1:    '-11, -222',
522: 1:    '111, -22',
522: 1:    '1, 3000',
522: 1:    '87, 78'
522: 1:  ]
522: 1:}
522: 1:Scores: 72493
522: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)']')
522: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
523: 1:BoardData {
523: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
523: 1:  'expectedAnswer': '0.803(571428)',
523: 1:  'history': [
523: 1:    {
523: 1:      'answer': '0.5',
523: 1:      'question': '1, 2',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '1',
523: 1:      'question': '1, 1',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '1',
523: 1:      'question': '5, 5',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '11',
523: 1:      'question': '55, 5',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '1.25',
523: 1:      'question': '55, 44',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '0',
523: 1:      'question': '0, 56',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '56',
523: 1:      'question': '56, 1',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '-0.5',
523: 1:      'question': '1, -2',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '-0.5',
523: 1:      'question': '-1, 2',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '0.5',
523: 1:      'question': '-1, -2',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '0.001',
523: 1:      'question': '1, 1000',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '1.2(4)',
523: 1:      'question': '56, 45',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '1.00(90)',
523: 1:      'question': '111, 110',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '10.0(90)',
523: 1:      'question': '111, 11',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '1010.0(90)',
523: 1:      'question': '11111, 11',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '0.0(495)',
523: 1:      'question': '-11, -222',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '-5.0(45)',
523: 1:      'question': '111, -22',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '0.000(3)',
523: 1:      'question': '1, 3000',
523: 1:      'valid': true
523: 1:    },
523: 1:    {
523: 1:      'answer': '1.1(153846)',
523: 1:      'question': '87, 78',
523: 1:      'valid': true
523: 1:    }
523: 1:  ],
523: 1:  'info': [
523: 1:    '✅f(1, 2) = 0.5',
523: 1:    '✅f(1, 1) = 1',
523: 1:    '✅f(5, 5) = 1',
523: 1:    '✅f(55, 5) = 11',
523: 1:    '✅f(55, 44) = 1.25',
523: 1:    '✅f(0, 56) = 0',
523: 1:    '✅f(56, 1) = 56',
523: 1:    '✅f(1, -2) = -0.5',
523: 1:    '✅f(-1, 2) = -0.5',
523: 1:    '✅f(-1, -2) = 0.5',
523: 1:    '✅f(1, 1000) = 0.001',
523: 1:    '✅f(56, 45) = 1.2(4)',
523: 1:    '✅f(111, 110) = 1.00(90)',
523: 1:    '✅f(111, 11) = 10.0(90)',
523: 1:    '✅f(11111, 11) = 1010.0(90)',
523: 1:    '✅f(-11, -222) = 0.0(495)',
523: 1:    '✅f(111, -22) = -5.0(45)',
523: 1:    '✅f(1, 3000) = 0.000(3)',
523: 1:    '✅f(87, 78) = 1.1(153846)',
523: 1:    '❌f(45, 56) = ??? != 0.803(571428)'
523: 1:  ],
523: 1:  'level': 18,
523: 1:  'nextQuestion': '45, 56',
523: 1:  'questions': [
523: 1:    '1, 2',
523: 1:    '1, 1',
523: 1:    '5, 5',
523: 1:    '55, 5',
523: 1:    '55, 44',
523: 1:    '0, 56',
523: 1:    '56, 1',
523: 1:    '1, -2',
523: 1:    '-1, 2',
523: 1:    '-1, -2',
523: 1:    '1, 1000',
523: 1:    '56, 45',
523: 1:    '111, 110',
523: 1:    '111, 11',
523: 1:    '11111, 11',
523: 1:    '-11, -222',
523: 1:    '111, -22',
523: 1:    '1, 3000',
523: 1:    '87, 78',
523: 1:    '45, 56'
523: 1:  ]
523: 1:}
523: 1:Scores: 72514
523: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)']')
523: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
524: 1:BoardData {
524: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
524: 1:  'expectedAnswer': '1.(593984962406015037)',
524: 1:  'history': [
524: 1:    {
524: 1:      'answer': '0.5',
524: 1:      'question': '1, 2',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '1',
524: 1:      'question': '1, 1',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '1',
524: 1:      'question': '5, 5',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '11',
524: 1:      'question': '55, 5',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '1.25',
524: 1:      'question': '55, 44',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '0',
524: 1:      'question': '0, 56',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '56',
524: 1:      'question': '56, 1',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '-0.5',
524: 1:      'question': '1, -2',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '-0.5',
524: 1:      'question': '-1, 2',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '0.5',
524: 1:      'question': '-1, -2',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '0.001',
524: 1:      'question': '1, 1000',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '1.2(4)',
524: 1:      'question': '56, 45',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '1.00(90)',
524: 1:      'question': '111, 110',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '10.0(90)',
524: 1:      'question': '111, 11',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '1010.0(90)',
524: 1:      'question': '11111, 11',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '0.0(495)',
524: 1:      'question': '-11, -222',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '-5.0(45)',
524: 1:      'question': '111, -22',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '0.000(3)',
524: 1:      'question': '1, 3000',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '1.1(153846)',
524: 1:      'question': '87, 78',
524: 1:      'valid': true
524: 1:    },
524: 1:    {
524: 1:      'answer': '0.803(571428)',
524: 1:      'question': '45, 56',
524: 1:      'valid': true
524: 1:    }
524: 1:  ],
524: 1:  'info': [
524: 1:    '✅f(1, 2) = 0.5',
524: 1:    '✅f(1, 1) = 1',
524: 1:    '✅f(5, 5) = 1',
524: 1:    '✅f(55, 5) = 11',
524: 1:    '✅f(55, 44) = 1.25',
524: 1:    '✅f(0, 56) = 0',
524: 1:    '✅f(56, 1) = 56',
524: 1:    '✅f(1, -2) = -0.5',
524: 1:    '✅f(-1, 2) = -0.5',
524: 1:    '✅f(-1, -2) = 0.5',
524: 1:    '✅f(1, 1000) = 0.001',
524: 1:    '✅f(56, 45) = 1.2(4)',
524: 1:    '✅f(111, 110) = 1.00(90)',
524: 1:    '✅f(111, 11) = 10.0(90)',
524: 1:    '✅f(11111, 11) = 1010.0(90)',
524: 1:    '✅f(-11, -222) = 0.0(495)',
524: 1:    '✅f(111, -22) = -5.0(45)',
524: 1:    '✅f(1, 3000) = 0.000(3)',
524: 1:    '✅f(87, 78) = 1.1(153846)',
524: 1:    '✅f(45, 56) = 0.803(571428)',
524: 1:    '❌f(212, 133) = ??? != 1.(593984962406015037)'
524: 1:  ],
524: 1:  'level': 18,
524: 1:  'nextQuestion': '212, 133',
524: 1:  'questions': [
524: 1:    '1, 2',
524: 1:    '1, 1',
524: 1:    '5, 5',
524: 1:    '55, 5',
524: 1:    '55, 44',
524: 1:    '0, 56',
524: 1:    '56, 1',
524: 1:    '1, -2',
524: 1:    '-1, 2',
524: 1:    '-1, -2',
524: 1:    '1, 1000',
524: 1:    '56, 45',
524: 1:    '111, 110',
524: 1:    '111, 11',
524: 1:    '11111, 11',
524: 1:    '-11, -222',
524: 1:    '111, -22',
524: 1:    '1, 3000',
524: 1:    '87, 78',
524: 1:    '45, 56',
524: 1:    '212, 133'
524: 1:  ]
524: 1:}
524: 1:Scores: 72535
524: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)']')
524: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
525: 1:BoardData {
525: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
525: 1:  'expectedAnswer': '96.6(1739130434782608695652)',
525: 1:  'history': [
525: 1:    {
525: 1:      'answer': '0.5',
525: 1:      'question': '1, 2',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '1',
525: 1:      'question': '1, 1',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '1',
525: 1:      'question': '5, 5',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '11',
525: 1:      'question': '55, 5',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '1.25',
525: 1:      'question': '55, 44',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '0',
525: 1:      'question': '0, 56',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '56',
525: 1:      'question': '56, 1',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '-0.5',
525: 1:      'question': '1, -2',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '-0.5',
525: 1:      'question': '-1, 2',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '0.5',
525: 1:      'question': '-1, -2',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '0.001',
525: 1:      'question': '1, 1000',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '1.2(4)',
525: 1:      'question': '56, 45',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '1.00(90)',
525: 1:      'question': '111, 110',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '10.0(90)',
525: 1:      'question': '111, 11',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '1010.0(90)',
525: 1:      'question': '11111, 11',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '0.0(495)',
525: 1:      'question': '-11, -222',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '-5.0(45)',
525: 1:      'question': '111, -22',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '0.000(3)',
525: 1:      'question': '1, 3000',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '1.1(153846)',
525: 1:      'question': '87, 78',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '0.803(571428)',
525: 1:      'question': '45, 56',
525: 1:      'valid': true
525: 1:    },
525: 1:    {
525: 1:      'answer': '1.(593984962406015037)',
525: 1:      'question': '212, 133',
525: 1:      'valid': true
525: 1:    }
525: 1:  ],
525: 1:  'info': [
525: 1:    '✅f(1, 2) = 0.5',
525: 1:    '✅f(1, 1) = 1',
525: 1:    '✅f(5, 5) = 1',
525: 1:    '✅f(55, 5) = 11',
525: 1:    '✅f(55, 44) = 1.25',
525: 1:    '✅f(0, 56) = 0',
525: 1:    '✅f(56, 1) = 56',
525: 1:    '✅f(1, -2) = -0.5',
525: 1:    '✅f(-1, 2) = -0.5',
525: 1:    '✅f(-1, -2) = 0.5',
525: 1:    '✅f(1, 1000) = 0.001',
525: 1:    '✅f(56, 45) = 1.2(4)',
525: 1:    '✅f(111, 110) = 1.00(90)',
525: 1:    '✅f(111, 11) = 10.0(90)',
525: 1:    '✅f(11111, 11) = 1010.0(90)',
525: 1:    '✅f(-11, -222) = 0.0(495)',
525: 1:    '✅f(111, -22) = -5.0(45)',
525: 1:    '✅f(1, 3000) = 0.000(3)',
525: 1:    '✅f(87, 78) = 1.1(153846)',
525: 1:    '✅f(45, 56) = 0.803(571428)',
525: 1:    '✅f(212, 133) = 1.(593984962406015037)',
525: 1:    '❌f(11111, 115) = ??? != 96.6(1739130434782608695652)'
525: 1:  ],
525: 1:  'level': 18,
525: 1:  'nextQuestion': '11111, 115',
525: 1:  'questions': [
525: 1:    '1, 2',
525: 1:    '1, 1',
525: 1:    '5, 5',
525: 1:    '55, 5',
525: 1:    '55, 44',
525: 1:    '0, 56',
525: 1:    '56, 1',
525: 1:    '1, -2',
525: 1:    '-1, 2',
525: 1:    '-1, -2',
525: 1:    '1, 1000',
525: 1:    '56, 45',
525: 1:    '111, 110',
525: 1:    '111, 11',
525: 1:    '11111, 11',
525: 1:    '-11, -222',
525: 1:    '111, -22',
525: 1:    '1, 3000',
525: 1:    '87, 78',
525: 1:    '45, 56',
525: 1:    '212, 133',
525: 1:    '11111, 115'
525: 1:  ]
525: 1:}
525: 1:Scores: 72556
525: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)']')
525: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
526: 1:BoardData {
526: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
526: 1:  'expectedAnswer': '0.3(5652173913043478260869)',
526: 1:  'history': [
526: 1:    {
526: 1:      'answer': '0.5',
526: 1:      'question': '1, 2',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '1',
526: 1:      'question': '1, 1',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '1',
526: 1:      'question': '5, 5',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '11',
526: 1:      'question': '55, 5',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '1.25',
526: 1:      'question': '55, 44',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '0',
526: 1:      'question': '0, 56',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '56',
526: 1:      'question': '56, 1',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '-0.5',
526: 1:      'question': '1, -2',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '-0.5',
526: 1:      'question': '-1, 2',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '0.5',
526: 1:      'question': '-1, -2',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '0.001',
526: 1:      'question': '1, 1000',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '1.2(4)',
526: 1:      'question': '56, 45',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '1.00(90)',
526: 1:      'question': '111, 110',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '10.0(90)',
526: 1:      'question': '111, 11',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '1010.0(90)',
526: 1:      'question': '11111, 11',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '0.0(495)',
526: 1:      'question': '-11, -222',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '-5.0(45)',
526: 1:      'question': '111, -22',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '0.000(3)',
526: 1:      'question': '1, 3000',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '1.1(153846)',
526: 1:      'question': '87, 78',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '0.803(571428)',
526: 1:      'question': '45, 56',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '1.(593984962406015037)',
526: 1:      'question': '212, 133',
526: 1:      'valid': true
526: 1:    },
526: 1:    {
526: 1:      'answer': '96.6(1739130434782608695652)',
526: 1:      'question': '11111, 115',
526: 1:      'valid': true
526: 1:    }
526: 1:  ],
526: 1:  'info': [
526: 1:    '✅f(1, 2) = 0.5',
526: 1:    '✅f(1, 1) = 1',
526: 1:    '✅f(5, 5) = 1',
526: 1:    '✅f(55, 5) = 11',
526: 1:    '✅f(55, 44) = 1.25',
526: 1:    '✅f(0, 56) = 0',
526: 1:    '✅f(56, 1) = 56',
526: 1:    '✅f(1, -2) = -0.5',
526: 1:    '✅f(-1, 2) = -0.5',
526: 1:    '✅f(-1, -2) = 0.5',
526: 1:    '✅f(1, 1000) = 0.001',
526: 1:    '✅f(56, 45) = 1.2(4)',
526: 1:    '✅f(111, 110) = 1.00(90)',
526: 1:    '✅f(111, 11) = 10.0(90)',
526: 1:    '✅f(11111, 11) = 1010.0(90)',
526: 1:    '✅f(-11, -222) = 0.0(495)',
526: 1:    '✅f(111, -22) = -5.0(45)',
526: 1:    '✅f(1, 3000) = 0.000(3)',
526: 1:    '✅f(87, 78) = 1.1(153846)',
526: 1:    '✅f(45, 56) = 0.803(571428)',
526: 1:    '✅f(212, 133) = 1.(593984962406015037)',
526: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
526: 1:    '❌f(123, 345) = ??? != 0.3(5652173913043478260869)'
526: 1:  ],
526: 1:  'level': 18,
526: 1:  'nextQuestion': '123, 345',
526: 1:  'questions': [
526: 1:    '1, 2',
526: 1:    '1, 1',
526: 1:    '5, 5',
526: 1:    '55, 5',
526: 1:    '55, 44',
526: 1:    '0, 56',
526: 1:    '56, 1',
526: 1:    '1, -2',
526: 1:    '-1, 2',
526: 1:    '-1, -2',
526: 1:    '1, 1000',
526: 1:    '56, 45',
526: 1:    '111, 110',
526: 1:    '111, 11',
526: 1:    '11111, 11',
526: 1:    '-11, -222',
526: 1:    '111, -22',
526: 1:    '1, 3000',
526: 1:    '87, 78',
526: 1:    '45, 56',
526: 1:    '212, 133',
526: 1:    '11111, 115',
526: 1:    '123, 345'
526: 1:  ]
526: 1:}
526: 1:Scores: 72577
526: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)']')
526: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
527: 1:BoardData {
527: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
527: 1:  'expectedAnswer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
527: 1:  'history': [
527: 1:    {
527: 1:      'answer': '0.5',
527: 1:      'question': '1, 2',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '1',
527: 1:      'question': '1, 1',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '1',
527: 1:      'question': '5, 5',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '11',
527: 1:      'question': '55, 5',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '1.25',
527: 1:      'question': '55, 44',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '0',
527: 1:      'question': '0, 56',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '56',
527: 1:      'question': '56, 1',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '-0.5',
527: 1:      'question': '1, -2',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '-0.5',
527: 1:      'question': '-1, 2',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '0.5',
527: 1:      'question': '-1, -2',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '0.001',
527: 1:      'question': '1, 1000',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '1.2(4)',
527: 1:      'question': '56, 45',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '1.00(90)',
527: 1:      'question': '111, 110',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '10.0(90)',
527: 1:      'question': '111, 11',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '1010.0(90)',
527: 1:      'question': '11111, 11',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '0.0(495)',
527: 1:      'question': '-11, -222',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '-5.0(45)',
527: 1:      'question': '111, -22',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '0.000(3)',
527: 1:      'question': '1, 3000',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '1.1(153846)',
527: 1:      'question': '87, 78',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '0.803(571428)',
527: 1:      'question': '45, 56',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '1.(593984962406015037)',
527: 1:      'question': '212, 133',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '96.6(1739130434782608695652)',
527: 1:      'question': '11111, 115',
527: 1:      'valid': true
527: 1:    },
527: 1:    {
527: 1:      'answer': '0.3(5652173913043478260869)',
527: 1:      'question': '123, 345',
527: 1:      'valid': true
527: 1:    }
527: 1:  ],
527: 1:  'info': [
527: 1:    '✅f(1, 2) = 0.5',
527: 1:    '✅f(1, 1) = 1',
527: 1:    '✅f(5, 5) = 1',
527: 1:    '✅f(55, 5) = 11',
527: 1:    '✅f(55, 44) = 1.25',
527: 1:    '✅f(0, 56) = 0',
527: 1:    '✅f(56, 1) = 56',
527: 1:    '✅f(1, -2) = -0.5',
527: 1:    '✅f(-1, 2) = -0.5',
527: 1:    '✅f(-1, -2) = 0.5',
527: 1:    '✅f(1, 1000) = 0.001',
527: 1:    '✅f(56, 45) = 1.2(4)',
527: 1:    '✅f(111, 110) = 1.00(90)',
527: 1:    '✅f(111, 11) = 10.0(90)',
527: 1:    '✅f(11111, 11) = 1010.0(90)',
527: 1:    '✅f(-11, -222) = 0.0(495)',
527: 1:    '✅f(111, -22) = -5.0(45)',
527: 1:    '✅f(1, 3000) = 0.000(3)',
527: 1:    '✅f(87, 78) = 1.1(153846)',
527: 1:    '✅f(45, 56) = 0.803(571428)',
527: 1:    '✅f(212, 133) = 1.(593984962406015037)',
527: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
527: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
527: 1:    '❌f(66666666, 77727777) = ??? != 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484'
527: 1:  ],
527: 1:  'level': 18,
527: 1:  'nextQuestion': '66666666, 77727777',
527: 1:  'questions': [
527: 1:    '1, 2',
527: 1:    '1, 1',
527: 1:    '5, 5',
527: 1:    '55, 5',
527: 1:    '55, 44',
527: 1:    '0, 56',
527: 1:    '56, 1',
527: 1:    '1, -2',
527: 1:    '-1, 2',
527: 1:    '-1, -2',
527: 1:    '1, 1000',
527: 1:    '56, 45',
527: 1:    '111, 110',
527: 1:    '111, 11',
527: 1:    '11111, 11',
527: 1:    '-11, -222',
527: 1:    '111, -22',
527: 1:    '1, 3000',
527: 1:    '87, 78',
527: 1:    '45, 56',
527: 1:    '212, 133',
527: 1:    '11111, 115',
527: 1:    '123, 345',
527: 1:    '66666666, 77727777'
527: 1:  ]
527: 1:}
527: 1:Scores: 72598
527: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484']')
527: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
528: 1:BoardData {
528: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
528: 1:  'expectedAnswer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
528: 1:  'history': [
528: 1:    {
528: 1:      'answer': '0.5',
528: 1:      'question': '1, 2',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '1',
528: 1:      'question': '1, 1',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '1',
528: 1:      'question': '5, 5',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '11',
528: 1:      'question': '55, 5',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '1.25',
528: 1:      'question': '55, 44',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '0',
528: 1:      'question': '0, 56',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '56',
528: 1:      'question': '56, 1',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '-0.5',
528: 1:      'question': '1, -2',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '-0.5',
528: 1:      'question': '-1, 2',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '0.5',
528: 1:      'question': '-1, -2',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '0.001',
528: 1:      'question': '1, 1000',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '1.2(4)',
528: 1:      'question': '56, 45',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '1.00(90)',
528: 1:      'question': '111, 110',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '10.0(90)',
528: 1:      'question': '111, 11',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '1010.0(90)',
528: 1:      'question': '11111, 11',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '0.0(495)',
528: 1:      'question': '-11, -222',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '-5.0(45)',
528: 1:      'question': '111, -22',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '0.000(3)',
528: 1:      'question': '1, 3000',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '1.1(153846)',
528: 1:      'question': '87, 78',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '0.803(571428)',
528: 1:      'question': '45, 56',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '1.(593984962406015037)',
528: 1:      'question': '212, 133',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '96.6(1739130434782608695652)',
528: 1:      'question': '11111, 115',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '0.3(5652173913043478260869)',
528: 1:      'question': '123, 345',
528: 1:      'valid': true
528: 1:    },
528: 1:    {
528: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
528: 1:      'question': '66666666, 77727777',
528: 1:      'valid': true
528: 1:    }
528: 1:  ],
528: 1:  'info': [
528: 1:    '✅f(1, 2) = 0.5',
528: 1:    '✅f(1, 1) = 1',
528: 1:    '✅f(5, 5) = 1',
528: 1:    '✅f(55, 5) = 11',
528: 1:    '✅f(55, 44) = 1.25',
528: 1:    '✅f(0, 56) = 0',
528: 1:    '✅f(56, 1) = 56',
528: 1:    '✅f(1, -2) = -0.5',
528: 1:    '✅f(-1, 2) = -0.5',
528: 1:    '✅f(-1, -2) = 0.5',
528: 1:    '✅f(1, 1000) = 0.001',
528: 1:    '✅f(56, 45) = 1.2(4)',
528: 1:    '✅f(111, 110) = 1.00(90)',
528: 1:    '✅f(111, 11) = 10.0(90)',
528: 1:    '✅f(11111, 11) = 1010.0(90)',
528: 1:    '✅f(-11, -222) = 0.0(495)',
528: 1:    '✅f(111, -22) = -5.0(45)',
528: 1:    '✅f(1, 3000) = 0.000(3)',
528: 1:    '✅f(87, 78) = 1.1(153846)',
528: 1:    '✅f(45, 56) = 0.803(571428)',
528: 1:    '✅f(212, 133) = 1.(593984962406015037)',
528: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
528: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
528: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
528: 1:    '❌f(666666660, 77727777) = ??? != 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847'
528: 1:  ],
528: 1:  'level': 18,
528: 1:  'nextQuestion': '666666660, 77727777',
528: 1:  'questions': [
528: 1:    '1, 2',
528: 1:    '1, 1',
528: 1:    '5, 5',
528: 1:    '55, 5',
528: 1:    '55, 44',
528: 1:    '0, 56',
528: 1:    '56, 1',
528: 1:    '1, -2',
528: 1:    '-1, 2',
528: 1:    '-1, -2',
528: 1:    '1, 1000',
528: 1:    '56, 45',
528: 1:    '111, 110',
528: 1:    '111, 11',
528: 1:    '11111, 11',
528: 1:    '-11, -222',
528: 1:    '111, -22',
528: 1:    '1, 3000',
528: 1:    '87, 78',
528: 1:    '45, 56',
528: 1:    '212, 133',
528: 1:    '11111, 115',
528: 1:    '123, 345',
528: 1:    '66666666, 77727777',
528: 1:    '666666660, 77727777'
528: 1:  ]
528: 1:}
528: 1:Scores: 72619
528: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847']')
528: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
529: 1:BoardData {
529: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
529: 1:  'expectedAnswer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
529: 1:  'history': [
529: 1:    {
529: 1:      'answer': '0.5',
529: 1:      'question': '1, 2',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '1',
529: 1:      'question': '1, 1',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '1',
529: 1:      'question': '5, 5',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '11',
529: 1:      'question': '55, 5',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '1.25',
529: 1:      'question': '55, 44',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '0',
529: 1:      'question': '0, 56',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '56',
529: 1:      'question': '56, 1',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '-0.5',
529: 1:      'question': '1, -2',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '-0.5',
529: 1:      'question': '-1, 2',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '0.5',
529: 1:      'question': '-1, -2',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '0.001',
529: 1:      'question': '1, 1000',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '1.2(4)',
529: 1:      'question': '56, 45',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '1.00(90)',
529: 1:      'question': '111, 110',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '10.0(90)',
529: 1:      'question': '111, 11',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '1010.0(90)',
529: 1:      'question': '11111, 11',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '0.0(495)',
529: 1:      'question': '-11, -222',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '-5.0(45)',
529: 1:      'question': '111, -22',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '0.000(3)',
529: 1:      'question': '1, 3000',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '1.1(153846)',
529: 1:      'question': '87, 78',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '0.803(571428)',
529: 1:      'question': '45, 56',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '1.(593984962406015037)',
529: 1:      'question': '212, 133',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '96.6(1739130434782608695652)',
529: 1:      'question': '11111, 115',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '0.3(5652173913043478260869)',
529: 1:      'question': '123, 345',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
529: 1:      'question': '66666666, 77727777',
529: 1:      'valid': true
529: 1:    },
529: 1:    {
529: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
529: 1:      'question': '666666660, 77727777',
529: 1:      'valid': true
529: 1:    }
529: 1:  ],
529: 1:  'info': [
529: 1:    '✅f(1, 2) = 0.5',
529: 1:    '✅f(1, 1) = 1',
529: 1:    '✅f(5, 5) = 1',
529: 1:    '✅f(55, 5) = 11',
529: 1:    '✅f(55, 44) = 1.25',
529: 1:    '✅f(0, 56) = 0',
529: 1:    '✅f(56, 1) = 56',
529: 1:    '✅f(1, -2) = -0.5',
529: 1:    '✅f(-1, 2) = -0.5',
529: 1:    '✅f(-1, -2) = 0.5',
529: 1:    '✅f(1, 1000) = 0.001',
529: 1:    '✅f(56, 45) = 1.2(4)',
529: 1:    '✅f(111, 110) = 1.00(90)',
529: 1:    '✅f(111, 11) = 10.0(90)',
529: 1:    '✅f(11111, 11) = 1010.0(90)',
529: 1:    '✅f(-11, -222) = 0.0(495)',
529: 1:    '✅f(111, -22) = -5.0(45)',
529: 1:    '✅f(1, 3000) = 0.000(3)',
529: 1:    '✅f(87, 78) = 1.1(153846)',
529: 1:    '✅f(45, 56) = 0.803(571428)',
529: 1:    '✅f(212, 133) = 1.(593984962406015037)',
529: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
529: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
529: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
529: 1:    '✅f(666666660, 77727777) = 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
529: 1:    '❌f(666666660, 7772777) = ??? != 85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713'
529: 1:  ],
529: 1:  'level': 18,
529: 1:  'nextQuestion': '666666660, 7772777',
529: 1:  'questions': [
529: 1:    '1, 2',
529: 1:    '1, 1',
529: 1:    '5, 5',
529: 1:    '55, 5',
529: 1:    '55, 44',
529: 1:    '0, 56',
529: 1:    '56, 1',
529: 1:    '1, -2',
529: 1:    '-1, 2',
529: 1:    '-1, -2',
529: 1:    '1, 1000',
529: 1:    '56, 45',
529: 1:    '111, 110',
529: 1:    '111, 11',
529: 1:    '11111, 11',
529: 1:    '-11, -222',
529: 1:    '111, -22',
529: 1:    '1, 3000',
529: 1:    '87, 78',
529: 1:    '45, 56',
529: 1:    '212, 133',
529: 1:    '11111, 115',
529: 1:    '123, 345',
529: 1:    '66666666, 77727777',
529: 1:    '666666660, 77727777',
529: 1:    '666666660, 7772777'
529: 1:  ]
529: 1:}
529: 1:Scores: 72640
529: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713']')
529: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
530: 1:BoardData {
530: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
530: 1:  'expectedAnswer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
530: 1:  'history': [
530: 1:    {
530: 1:      'answer': '0.5',
530: 1:      'question': '1, 2',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '1',
530: 1:      'question': '1, 1',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '1',
530: 1:      'question': '5, 5',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '11',
530: 1:      'question': '55, 5',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '1.25',
530: 1:      'question': '55, 44',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '0',
530: 1:      'question': '0, 56',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '56',
530: 1:      'question': '56, 1',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '-0.5',
530: 1:      'question': '1, -2',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '-0.5',
530: 1:      'question': '-1, 2',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '0.5',
530: 1:      'question': '-1, -2',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '0.001',
530: 1:      'question': '1, 1000',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '1.2(4)',
530: 1:      'question': '56, 45',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '1.00(90)',
530: 1:      'question': '111, 110',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '10.0(90)',
530: 1:      'question': '111, 11',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '1010.0(90)',
530: 1:      'question': '11111, 11',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '0.0(495)',
530: 1:      'question': '-11, -222',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '-5.0(45)',
530: 1:      'question': '111, -22',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '0.000(3)',
530: 1:      'question': '1, 3000',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '1.1(153846)',
530: 1:      'question': '87, 78',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '0.803(571428)',
530: 1:      'question': '45, 56',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '1.(593984962406015037)',
530: 1:      'question': '212, 133',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '96.6(1739130434782608695652)',
530: 1:      'question': '11111, 115',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '0.3(5652173913043478260869)',
530: 1:      'question': '123, 345',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
530: 1:      'question': '66666666, 77727777',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
530: 1:      'question': '666666660, 77727777',
530: 1:      'valid': true
530: 1:    },
530: 1:    {
530: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
530: 1:      'question': '666666660, 7772777',
530: 1:      'valid': true
530: 1:    }
530: 1:  ],
530: 1:  'info': [
530: 1:    '✅f(1, 2) = 0.5',
530: 1:    '✅f(1, 1) = 1',
530: 1:    '✅f(5, 5) = 1',
530: 1:    '✅f(55, 5) = 11',
530: 1:    '✅f(55, 44) = 1.25',
530: 1:    '✅f(0, 56) = 0',
530: 1:    '✅f(56, 1) = 56',
530: 1:    '✅f(1, -2) = -0.5',
530: 1:    '✅f(-1, 2) = -0.5',
530: 1:    '✅f(-1, -2) = 0.5',
530: 1:    '✅f(1, 1000) = 0.001',
530: 1:    '✅f(56, 45) = 1.2(4)',
530: 1:    '✅f(111, 110) = 1.00(90)',
530: 1:    '✅f(111, 11) = 10.0(90)',
530: 1:    '✅f(11111, 11) = 1010.0(90)',
530: 1:    '✅f(-11, -222) = 0.0(495)',
530: 1:    '✅f(111, -22) = -5.0(45)',
530: 1:    '✅f(1, 3000) = 0.000(3)',
530: 1:    '✅f(87, 78) = 1.1(153846)',
530: 1:    '✅f(45, 56) = 0.803(571428)',
530: 1:    '✅f(212, 133) = 1.(593984962406015037)',
530: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
530: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
530: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
530: 1:    '✅f(666666660, 77727777) = 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
530: 1:    '✅f(666666660, 7772777) = 85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
530: 1:    '❌f(100, 97) = ??? != 1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)'
530: 1:  ],
530: 1:  'level': 18,
530: 1:  'nextQuestion': '100, 97',
530: 1:  'questions': [
530: 1:    '1, 2',
530: 1:    '1, 1',
530: 1:    '5, 5',
530: 1:    '55, 5',
530: 1:    '55, 44',
530: 1:    '0, 56',
530: 1:    '56, 1',
530: 1:    '1, -2',
530: 1:    '-1, 2',
530: 1:    '-1, -2',
530: 1:    '1, 1000',
530: 1:    '56, 45',
530: 1:    '111, 110',
530: 1:    '111, 11',
530: 1:    '11111, 11',
530: 1:    '-11, -222',
530: 1:    '111, -22',
530: 1:    '1, 3000',
530: 1:    '87, 78',
530: 1:    '45, 56',
530: 1:    '212, 133',
530: 1:    '11111, 115',
530: 1:    '123, 345',
530: 1:    '66666666, 77727777',
530: 1:    '666666660, 77727777',
530: 1:    '666666660, 7772777',
530: 1:    '100, 97'
530: 1:  ]
530: 1:}
530: 1:Scores: 72661
530: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713', '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)']')
530: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
531: 1:BoardData {
531: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
531: 1:  'expectedAnswer': 'Div by zero error!',
531: 1:  'history': [
531: 1:    {
531: 1:      'answer': '0.5',
531: 1:      'question': '1, 2',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1',
531: 1:      'question': '1, 1',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1',
531: 1:      'question': '5, 5',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '11',
531: 1:      'question': '55, 5',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1.25',
531: 1:      'question': '55, 44',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '0',
531: 1:      'question': '0, 56',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '56',
531: 1:      'question': '56, 1',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '-0.5',
531: 1:      'question': '1, -2',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '-0.5',
531: 1:      'question': '-1, 2',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '0.5',
531: 1:      'question': '-1, -2',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '0.001',
531: 1:      'question': '1, 1000',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1.2(4)',
531: 1:      'question': '56, 45',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1.00(90)',
531: 1:      'question': '111, 110',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '10.0(90)',
531: 1:      'question': '111, 11',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1010.0(90)',
531: 1:      'question': '11111, 11',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '0.0(495)',
531: 1:      'question': '-11, -222',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '-5.0(45)',
531: 1:      'question': '111, -22',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '0.000(3)',
531: 1:      'question': '1, 3000',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1.1(153846)',
531: 1:      'question': '87, 78',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '0.803(571428)',
531: 1:      'question': '45, 56',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1.(593984962406015037)',
531: 1:      'question': '212, 133',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '96.6(1739130434782608695652)',
531: 1:      'question': '11111, 115',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '0.3(5652173913043478260869)',
531: 1:      'question': '123, 345',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
531: 1:      'question': '66666666, 77727777',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
531: 1:      'question': '666666660, 77727777',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
531: 1:      'question': '666666660, 7772777',
531: 1:      'valid': true
531: 1:    },
531: 1:    {
531: 1:      'answer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
531: 1:      'question': '100, 97',
531: 1:      'valid': true
531: 1:    }
531: 1:  ],
531: 1:  'info': [
531: 1:    '✅f(1, 2) = 0.5',
531: 1:    '✅f(1, 1) = 1',
531: 1:    '✅f(5, 5) = 1',
531: 1:    '✅f(55, 5) = 11',
531: 1:    '✅f(55, 44) = 1.25',
531: 1:    '✅f(0, 56) = 0',
531: 1:    '✅f(56, 1) = 56',
531: 1:    '✅f(1, -2) = -0.5',
531: 1:    '✅f(-1, 2) = -0.5',
531: 1:    '✅f(-1, -2) = 0.5',
531: 1:    '✅f(1, 1000) = 0.001',
531: 1:    '✅f(56, 45) = 1.2(4)',
531: 1:    '✅f(111, 110) = 1.00(90)',
531: 1:    '✅f(111, 11) = 10.0(90)',
531: 1:    '✅f(11111, 11) = 1010.0(90)',
531: 1:    '✅f(-11, -222) = 0.0(495)',
531: 1:    '✅f(111, -22) = -5.0(45)',
531: 1:    '✅f(1, 3000) = 0.000(3)',
531: 1:    '✅f(87, 78) = 1.1(153846)',
531: 1:    '✅f(45, 56) = 0.803(571428)',
531: 1:    '✅f(212, 133) = 1.(593984962406015037)',
531: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
531: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
531: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
531: 1:    '✅f(666666660, 77727777) = 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
531: 1:    '✅f(666666660, 7772777) = 85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
531: 1:    '✅f(100, 97) = 1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
531: 1:    '❌f(999, 0) = ??? != Div by zero error!'
531: 1:  ],
531: 1:  'level': 18,
531: 1:  'nextQuestion': '999, 0',
531: 1:  'questions': [
531: 1:    '1, 2',
531: 1:    '1, 1',
531: 1:    '5, 5',
531: 1:    '55, 5',
531: 1:    '55, 44',
531: 1:    '0, 56',
531: 1:    '56, 1',
531: 1:    '1, -2',
531: 1:    '-1, 2',
531: 1:    '-1, -2',
531: 1:    '1, 1000',
531: 1:    '56, 45',
531: 1:    '111, 110',
531: 1:    '111, 11',
531: 1:    '11111, 11',
531: 1:    '-11, -222',
531: 1:    '111, -22',
531: 1:    '1, 3000',
531: 1:    '87, 78',
531: 1:    '45, 56',
531: 1:    '212, 133',
531: 1:    '11111, 115',
531: 1:    '123, 345',
531: 1:    '66666666, 77727777',
531: 1:    '666666660, 77727777',
531: 1:    '666666660, 7772777',
531: 1:    '100, 97',
531: 1:    '999, 0'
531: 1:  ]
531: 1:}
531: 1:Scores: 72682
531: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713', '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)', 'Div by zero error!']')
531: 1:Fire Event: PassTest{complexity=60, testCount=28}
531: 1:Fire Event: NextAlgorithm{complexity=60, time=0}
------------------------------------------
532: 1:BoardData {
532: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
532: 1:  'history': [
532: 1:    {
532: 1:      'answer': '0.5',
532: 1:      'question': '1, 2',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1',
532: 1:      'question': '1, 1',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1',
532: 1:      'question': '5, 5',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '11',
532: 1:      'question': '55, 5',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1.25',
532: 1:      'question': '55, 44',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '0',
532: 1:      'question': '0, 56',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '56',
532: 1:      'question': '56, 1',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '-0.5',
532: 1:      'question': '1, -2',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '-0.5',
532: 1:      'question': '-1, 2',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '0.5',
532: 1:      'question': '-1, -2',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '0.001',
532: 1:      'question': '1, 1000',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1.2(4)',
532: 1:      'question': '56, 45',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1.00(90)',
532: 1:      'question': '111, 110',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '10.0(90)',
532: 1:      'question': '111, 11',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1010.0(90)',
532: 1:      'question': '11111, 11',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '0.0(495)',
532: 1:      'question': '-11, -222',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '-5.0(45)',
532: 1:      'question': '111, -22',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '0.000(3)',
532: 1:      'question': '1, 3000',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1.1(153846)',
532: 1:      'question': '87, 78',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '0.803(571428)',
532: 1:      'question': '45, 56',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1.(593984962406015037)',
532: 1:      'question': '212, 133',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '96.6(1739130434782608695652)',
532: 1:      'question': '11111, 115',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '0.3(5652173913043478260869)',
532: 1:      'question': '123, 345',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
532: 1:      'question': '66666666, 77727777',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
532: 1:      'question': '666666660, 77727777',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
532: 1:      'question': '666666660, 7772777',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
532: 1:      'question': '100, 97',
532: 1:      'valid': true
532: 1:    },
532: 1:    {
532: 1:      'answer': 'Div by zero error!',
532: 1:      'question': '999, 0',
532: 1:      'valid': true
532: 1:    }
532: 1:  ],
532: 1:  'info': [
532: 1:    '✅f(1, 2) = 0.5',
532: 1:    '✅f(1, 1) = 1',
532: 1:    '✅f(5, 5) = 1',
532: 1:    '✅f(55, 5) = 11',
532: 1:    '✅f(55, 44) = 1.25',
532: 1:    '✅f(0, 56) = 0',
532: 1:    '✅f(56, 1) = 56',
532: 1:    '✅f(1, -2) = -0.5',
532: 1:    '✅f(-1, 2) = -0.5',
532: 1:    '✅f(-1, -2) = 0.5',
532: 1:    '✅f(1, 1000) = 0.001',
532: 1:    '✅f(56, 45) = 1.2(4)',
532: 1:    '✅f(111, 110) = 1.00(90)',
532: 1:    '✅f(111, 11) = 10.0(90)',
532: 1:    '✅f(11111, 11) = 1010.0(90)',
532: 1:    '✅f(-11, -222) = 0.0(495)',
532: 1:    '✅f(111, -22) = -5.0(45)',
532: 1:    '✅f(1, 3000) = 0.000(3)',
532: 1:    '✅f(87, 78) = 1.1(153846)',
532: 1:    '✅f(45, 56) = 0.803(571428)',
532: 1:    '✅f(212, 133) = 1.(593984962406015037)',
532: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
532: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
532: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
532: 1:    '✅f(666666660, 77727777) = 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
532: 1:    '✅f(666666660, 7772777) = 85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
532: 1:    '✅f(100, 97) = 1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
532: 1:    '✅f(999, 0) = Div by zero error!'
532: 1:  ],
532: 1:  'level': 18,
532: 1:  'questions': []
532: 1:}
532: 1:Scores: 80802
532: 1:Answer: message('StartNextLevel')
532: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
533: 1:BoardData {
533: 1:  'description': ['No more Levels. You win!'],
533: 1:  'history': [],
533: 1:  'info': [],
533: 1:  'level': 19,
533: 1:  'questions': []
533: 1:}
533: 1:Scores: 80802
533: 1:Answer: message('StartNextLevel')
------------------------------------------
534: 1:BoardData {
534: 1:  'description': ['No more Levels. You win!'],
534: 1:  'history': [],
534: 1:  'info': [],
534: 1:  'level': 19,
534: 1:  'questions': []
534: 1:}
534: 1:Scores: 80802
534: 1:Answer: message('StartNextLevel')
------------------------------------------
535: 1:BoardData {
535: 1:  'description': ['No more Levels. You win!'],
535: 1:  'history': [],
535: 1:  'info': [],
535: 1:  'level': 19,
535: 1:  'questions': []
535: 1:}
535: 1:Scores: 80802
535: 1:Answer: message('StartNextLevel')
------------------------------------------
536: 1:BoardData {
536: 1:  'description': ['No more Levels. You win!'],
536: 1:  'history': [],
536: 1:  'info': [],
536: 1:  'level': 19,
536: 1:  'questions': []
536: 1:}
536: 1:Scores: 80802
536: 1:Answer: message('StartNextLevel')
------------------------------------------
537: 1:BoardData {
537: 1:  'description': ['No more Levels. You win!'],
537: 1:  'history': [],
537: 1:  'info': [],
537: 1:  'level': 19,
537: 1:  'questions': []
537: 1:}
537: 1:Scores: 80802
537: 1:Answer: message('StartNextLevel')
------------------------------------------
538: 1:BoardData {
538: 1:  'description': ['No more Levels. You win!'],
538: 1:  'history': [],
538: 1:  'info': [],
538: 1:  'level': 19,
538: 1:  'questions': []
538: 1:}
538: 1:Scores: 80802
538: 1:Answer: message('StartNextLevel')
------------------------------------------
539: 1:BoardData {
539: 1:  'description': ['No more Levels. You win!'],
539: 1:  'history': [],
539: 1:  'info': [],
539: 1:  'level': 19,
539: 1:  'questions': []
539: 1:}
539: 1:Scores: 80802
539: 1:Answer: message('StartNextLevel')
------------------------------------------
540: 1:BoardData {
540: 1:  'description': ['No more Levels. You win!'],
540: 1:  'history': [],
540: 1:  'info': [],
540: 1:  'level': 19,
540: 1:  'questions': []
540: 1:}
540: 1:Scores: 80802
540: 1:Answer: message('StartNextLevel')
------------------------------------------
541: 1:BoardData {
541: 1:  'description': ['No more Levels. You win!'],
541: 1:  'history': [],
541: 1:  'info': [],
541: 1:  'level': 19,
541: 1:  'questions': []
541: 1:}
541: 1:Scores: 80802
541: 1:Answer: message('StartNextLevel')
------------------------------------------
542: 1:BoardData {
542: 1:  'description': ['No more Levels. You win!'],
542: 1:  'history': [],
542: 1:  'info': [],
542: 1:  'level': 19,
542: 1:  'questions': []
542: 1:}
542: 1:Scores: 80802
542: 1:Answer: message('StartNextLevel')
------------------------------------------
543: 1:BoardData {
543: 1:  'description': ['No more Levels. You win!'],
543: 1:  'history': [],
543: 1:  'info': [],
543: 1:  'level': 19,
543: 1:  'questions': []
543: 1:}
543: 1:Scores: 80802
543: 1:Answer: message('StartNextLevel')
------------------------------------------
544: 1:BoardData {
544: 1:  'description': ['No more Levels. You win!'],
544: 1:  'history': [],
544: 1:  'info': [],
544: 1:  'level': 19,
544: 1:  'questions': []
544: 1:}
544: 1:Scores: 80802
544: 1:Answer: message('StartNextLevel')
------------------------------------------
545: 1:BoardData {
545: 1:  'description': ['No more Levels. You win!'],
545: 1:  'history': [],
545: 1:  'info': [],
545: 1:  'level': 19,
545: 1:  'questions': []
545: 1:}
545: 1:Scores: 80802
545: 1:Answer: message('StartNextLevel')
------------------------------------------
546: 1:BoardData {
546: 1:  'description': ['No more Levels. You win!'],
546: 1:  'history': [],
546: 1:  'info': [],
546: 1:  'level': 19,
546: 1:  'questions': []
546: 1:}
546: 1:Scores: 80802
546: 1:Answer: message('StartNextLevel')
------------------------------------------
547: 1:BoardData {
547: 1:  'description': ['No more Levels. You win!'],
547: 1:  'history': [],
547: 1:  'info': [],
547: 1:  'level': 19,
547: 1:  'questions': []
547: 1:}
547: 1:Scores: 80802
547: 1:Answer: message('StartNextLevel')
------------------------------------------
548: 1:BoardData {
548: 1:  'description': ['No more Levels. You win!'],
548: 1:  'history': [],
548: 1:  'info': [],
548: 1:  'level': 19,
548: 1:  'questions': []
548: 1:}
548: 1:Scores: 80802
548: 1:Answer: message('StartNextLevel')
------------------------------------------
549: 1:BoardData {
549: 1:  'description': ['No more Levels. You win!'],
549: 1:  'history': [],
549: 1:  'info': [],
549: 1:  'level': 19,
549: 1:  'questions': []
549: 1:}
549: 1:Scores: 80802
549: 1:Answer: message('StartNextLevel')
------------------------------------------
550: 1:BoardData {
550: 1:  'description': ['No more Levels. You win!'],
550: 1:  'history': [],
550: 1:  'info': [],
550: 1:  'level': 19,
550: 1:  'questions': []
550: 1:}
550: 1:Scores: 80802
550: 1:Answer: message('StartNextLevel')
------------------------------------------
551: 1:BoardData {
551: 1:  'description': ['No more Levels. You win!'],
551: 1:  'history': [],
551: 1:  'info': [],
551: 1:  'level': 19,
551: 1:  'questions': []
551: 1:}
551: 1:Scores: 80802
551: 1:Answer: message('StartNextLevel')
------------------------------------------
552: 1:BoardData {
552: 1:  'description': ['No more Levels. You win!'],
552: 1:  'history': [],
552: 1:  'info': [],
552: 1:  'level': 19,
552: 1:  'questions': []
552: 1:}
552: 1:Scores: 80802
552: 1:Answer: message('StartNextLevel')
------------------------------------------
553: 1:BoardData {
553: 1:  'description': ['No more Levels. You win!'],
553: 1:  'history': [],
553: 1:  'info': [],
553: 1:  'level': 19,
553: 1:  'questions': []
553: 1:}
553: 1:Scores: 80802
553: 1:Answer: message('StartNextLevel')
------------------------------------------
554: 1:BoardData {
554: 1:  'description': ['No more Levels. You win!'],
554: 1:  'history': [],
554: 1:  'info': [],
554: 1:  'level': 19,
554: 1:  'questions': []
554: 1:}
554: 1:Scores: 80802
554: 1:Answer: message('StartNextLevel')
------------------------------------------
555: 1:BoardData {
555: 1:  'description': ['No more Levels. You win!'],
555: 1:  'history': [],
555: 1:  'info': [],
555: 1:  'level': 19,
555: 1:  'questions': []
555: 1:}
555: 1:Scores: 80802
555: 1:Answer: message('StartNextLevel')
------------------------------------------
556: 1:BoardData {
556: 1:  'description': ['No more Levels. You win!'],
556: 1:  'history': [],
556: 1:  'info': [],
556: 1:  'level': 19,
556: 1:  'questions': []
556: 1:}
556: 1:Scores: 80802
556: 1:Answer: message('StartNextLevel')
------------------------------------------
557: 1:BoardData {
557: 1:  'description': ['No more Levels. You win!'],
557: 1:  'history': [],
557: 1:  'info': [],
557: 1:  'level': 19,
557: 1:  'questions': []
557: 1:}
557: 1:Scores: 80802
557: 1:Answer: message('StartNextLevel')
------------------------------------------
558: 1:BoardData {
558: 1:  'description': ['No more Levels. You win!'],
558: 1:  'history': [],
558: 1:  'info': [],
558: 1:  'level': 19,
558: 1:  'questions': []
558: 1:}
558: 1:Scores: 80802
558: 1:Answer: message('StartNextLevel')
------------------------------------------
559: 1:BoardData {
559: 1:  'description': ['No more Levels. You win!'],
559: 1:  'history': [],
559: 1:  'info': [],
559: 1:  'level': 19,
559: 1:  'questions': []
559: 1:}
559: 1:Scores: 80802
559: 1:Answer: message('StartNextLevel')
------------------------------------------
560: 1:BoardData {
560: 1:  'description': ['No more Levels. You win!'],
560: 1:  'history': [],
560: 1:  'info': [],
560: 1:  'level': 19,
560: 1:  'questions': []
560: 1:}
560: 1:Scores: 80802
560: 1:Answer: message('StartNextLevel')
------------------------------------------
561: 1:BoardData {
561: 1:  'description': ['No more Levels. You win!'],
561: 1:  'history': [],
561: 1:  'info': [],
561: 1:  'level': 19,
561: 1:  'questions': []
561: 1:}
561: 1:Scores: 80802
561: 1:Answer: message('StartNextLevel')
------------------------------------------
562: 1:BoardData {
562: 1:  'description': ['No more Levels. You win!'],
562: 1:  'history': [],
562: 1:  'info': [],
562: 1:  'level': 19,
562: 1:  'questions': []
562: 1:}
562: 1:Scores: 80802
562: 1:Answer: message('StartNextLevel')
------------------------------------------
563: 1:BoardData {
563: 1:  'description': ['No more Levels. You win!'],
563: 1:  'history': [],
563: 1:  'info': [],
563: 1:  'level': 19,
563: 1:  'questions': []
563: 1:}
563: 1:Scores: 80802
563: 1:Answer: message('StartNextLevel')
------------------------------------------
564: 1:BoardData {
564: 1:  'description': ['No more Levels. You win!'],
564: 1:  'history': [],
564: 1:  'info': [],
564: 1:  'level': 19,
564: 1:  'questions': []
564: 1:}
564: 1:Scores: 80802
564: 1:Answer: message('StartNextLevel')
------------------------------------------
565: 1:BoardData {
565: 1:  'description': ['No more Levels. You win!'],
565: 1:  'history': [],
565: 1:  'info': [],
565: 1:  'level': 19,
565: 1:  'questions': []
565: 1:}
565: 1:Scores: 80802
565: 1:Answer: message('StartNextLevel')
------------------------------------------
566: 1:BoardData {
566: 1:  'description': ['No more Levels. You win!'],
566: 1:  'history': [],
566: 1:  'info': [],
566: 1:  'level': 19,
566: 1:  'questions': []
566: 1:}
566: 1:Scores: 80802
566: 1:Answer: message('StartNextLevel')
------------------------------------------
567: 1:BoardData {
567: 1:  'description': ['No more Levels. You win!'],
567: 1:  'history': [],
567: 1:  'info': [],
567: 1:  'level': 19,
567: 1:  'questions': []
567: 1:}
567: 1:Scores: 80802
567: 1:Answer: message('StartNextLevel')
------------------------------------------
568: 1:BoardData {
568: 1:  'description': ['No more Levels. You win!'],
568: 1:  'history': [],
568: 1:  'info': [],
568: 1:  'level': 19,
568: 1:  'questions': []
568: 1:}
568: 1:Scores: 80802
568: 1:Answer: message('StartNextLevel')
------------------------------------------
569: 1:BoardData {
569: 1:  'description': ['No more Levels. You win!'],
569: 1:  'history': [],
569: 1:  'info': [],
569: 1:  'level': 19,
569: 1:  'questions': []
569: 1:}
569: 1:Scores: 80802
569: 1:Answer: message('StartNextLevel')
------------------------------------------
570: 1:BoardData {
570: 1:  'description': ['No more Levels. You win!'],
570: 1:  'history': [],
570: 1:  'info': [],
570: 1:  'level': 19,
570: 1:  'questions': []
570: 1:}
570: 1:Scores: 80802
570: 1:Answer: message('StartNextLevel')
------------------------------------------
571: 1:BoardData {
571: 1:  'description': ['No more Levels. You win!'],
571: 1:  'history': [],
571: 1:  'info': [],
571: 1:  'level': 19,
571: 1:  'questions': []
571: 1:}
571: 1:Scores: 80802
571: 1:Answer: message('StartNextLevel')
------------------------------------------
572: 1:BoardData {
572: 1:  'description': ['No more Levels. You win!'],
572: 1:  'history': [],
572: 1:  'info': [],
572: 1:  'level': 19,
572: 1:  'questions': []
572: 1:}
572: 1:Scores: 80802
572: 1:Answer: message('StartNextLevel')
------------------------------------------
573: 1:BoardData {
573: 1:  'description': ['No more Levels. You win!'],
573: 1:  'history': [],
573: 1:  'info': [],
573: 1:  'level': 19,
573: 1:  'questions': []
573: 1:}
573: 1:Scores: 80802
573: 1:Answer: message('StartNextLevel')
------------------------------------------
574: 1:BoardData {
574: 1:  'description': ['No more Levels. You win!'],
574: 1:  'history': [],
574: 1:  'info': [],
574: 1:  'level': 19,
574: 1:  'questions': []
574: 1:}
574: 1:Scores: 80802
574: 1:Answer: message('StartNextLevel')
------------------------------------------
575: 1:BoardData {
575: 1:  'description': ['No more Levels. You win!'],
575: 1:  'history': [],
575: 1:  'info': [],
575: 1:  'level': 19,
575: 1:  'questions': []
575: 1:}
575: 1:Scores: 80802
575: 1:Answer: message('StartNextLevel')
------------------------------------------
576: 1:BoardData {
576: 1:  'description': ['No more Levels. You win!'],
576: 1:  'history': [],
576: 1:  'info': [],
576: 1:  'level': 19,
576: 1:  'questions': []
576: 1:}
576: 1:Scores: 80802
576: 1:Answer: message('StartNextLevel')
------------------------------------------
577: 1:BoardData {
577: 1:  'description': ['No more Levels. You win!'],
577: 1:  'history': [],
577: 1:  'info': [],
577: 1:  'level': 19,
577: 1:  'questions': []
577: 1:}
577: 1:Scores: 80802
577: 1:Answer: message('StartNextLevel')
------------------------------------------
578: 1:BoardData {
578: 1:  'description': ['No more Levels. You win!'],
578: 1:  'history': [],
578: 1:  'info': [],
578: 1:  'level': 19,
578: 1:  'questions': []
578: 1:}
578: 1:Scores: 80802
578: 1:Answer: message('StartNextLevel')
------------------------------------------
579: 1:BoardData {
579: 1:  'description': ['No more Levels. You win!'],
579: 1:  'history': [],
579: 1:  'info': [],
579: 1:  'level': 19,
579: 1:  'questions': []
579: 1:}
579: 1:Scores: 80802
579: 1:Answer: message('StartNextLevel')
------------------------------------------
580: 1:BoardData {
580: 1:  'description': ['No more Levels. You win!'],
580: 1:  'history': [],
580: 1:  'info': [],
580: 1:  'level': 19,
580: 1:  'questions': []
580: 1:}
580: 1:Scores: 80802
580: 1:Answer: message('StartNextLevel')
------------------------------------------
581: 1:BoardData {
581: 1:  'description': ['No more Levels. You win!'],
581: 1:  'history': [],
581: 1:  'info': [],
581: 1:  'level': 19,
581: 1:  'questions': []
581: 1:}
581: 1:Scores: 80802
581: 1:Answer: message('StartNextLevel')
------------------------------------------
582: 1:BoardData {
582: 1:  'description': ['No more Levels. You win!'],
582: 1:  'history': [],
582: 1:  'info': [],
582: 1:  'level': 19,
582: 1:  'questions': []
582: 1:}
582: 1:Scores: 80802
582: 1:Answer: message('StartNextLevel')
------------------------------------------
583: 1:BoardData {
583: 1:  'description': ['No more Levels. You win!'],
583: 1:  'history': [],
583: 1:  'info': [],
583: 1:  'level': 19,
583: 1:  'questions': []
583: 1:}
583: 1:Scores: 80802
583: 1:Answer: message('StartNextLevel')
------------------------------------------
584: 1:BoardData {
584: 1:  'description': ['No more Levels. You win!'],
584: 1:  'history': [],
584: 1:  'info': [],
584: 1:  'level': 19,
584: 1:  'questions': []
584: 1:}
584: 1:Scores: 80802
584: 1:Answer: message('StartNextLevel')
------------------------------------------
585: 1:BoardData {
585: 1:  'description': ['No more Levels. You win!'],
585: 1:  'history': [],
585: 1:  'info': [],
585: 1:  'level': 19,
585: 1:  'questions': []
585: 1:}
585: 1:Scores: 80802
585: 1:Answer: message('StartNextLevel')
------------------------------------------
586: 1:BoardData {
586: 1:  'description': ['No more Levels. You win!'],
586: 1:  'history': [],
586: 1:  'info': [],
586: 1:  'level': 19,
586: 1:  'questions': []
586: 1:}
586: 1:Scores: 80802
586: 1:Answer: message('StartNextLevel')
------------------------------------------
587: 1:BoardData {
587: 1:  'description': ['No more Levels. You win!'],
587: 1:  'history': [],
587: 1:  'info': [],
587: 1:  'level': 19,
587: 1:  'questions': []
587: 1:}
587: 1:Scores: 80802
587: 1:Answer: message('StartNextLevel')
------------------------------------------
588: 1:BoardData {
588: 1:  'description': ['No more Levels. You win!'],
588: 1:  'history': [],
588: 1:  'info': [],
588: 1:  'level': 19,
588: 1:  'questions': []
588: 1:}
588: 1:Scores: 80802
588: 1:Answer: message('StartNextLevel')
------------------------------------------
589: 1:BoardData {
589: 1:  'description': ['No more Levels. You win!'],
589: 1:  'history': [],
589: 1:  'info': [],
589: 1:  'level': 19,
589: 1:  'questions': []
589: 1:}
589: 1:Scores: 80802
589: 1:Answer: message('StartNextLevel')
------------------------------------------
590: 1:BoardData {
590: 1:  'description': ['No more Levels. You win!'],
590: 1:  'history': [],
590: 1:  'info': [],
590: 1:  'level': 19,
590: 1:  'questions': []
590: 1:}
590: 1:Scores: 80802
590: 1:Answer: message('StartNextLevel')
------------------------------------------
591: 1:BoardData {
591: 1:  'description': ['No more Levels. You win!'],
591: 1:  'history': [],
591: 1:  'info': [],
591: 1:  'level': 19,
591: 1:  'questions': []
591: 1:}
591: 1:Scores: 80802
591: 1:Answer: message('StartNextLevel')
------------------------------------------
592: 1:BoardData {
592: 1:  'description': ['No more Levels. You win!'],
592: 1:  'history': [],
592: 1:  'info': [],
592: 1:  'level': 19,
592: 1:  'questions': []
592: 1:}
592: 1:Scores: 80802
592: 1:Answer: message('StartNextLevel')
------------------------------------------
593: 1:BoardData {
593: 1:  'description': ['No more Levels. You win!'],
593: 1:  'history': [],
593: 1:  'info': [],
593: 1:  'level': 19,
593: 1:  'questions': []
593: 1:}
593: 1:Scores: 80802
593: 1:Answer: message('StartNextLevel')
------------------------------------------
594: 1:BoardData {
594: 1:  'description': ['No more Levels. You win!'],
594: 1:  'history': [],
594: 1:  'info': [],
594: 1:  'level': 19,
594: 1:  'questions': []
594: 1:}
594: 1:Scores: 80802
594: 1:Answer: message('StartNextLevel')
------------------------------------------
595: 1:BoardData {
595: 1:  'description': ['No more Levels. You win!'],
595: 1:  'history': [],
595: 1:  'info': [],
595: 1:  'level': 19,
595: 1:  'questions': []
595: 1:}
595: 1:Scores: 80802
595: 1:Answer: message('StartNextLevel')
------------------------------------------
596: 1:BoardData {
596: 1:  'description': ['No more Levels. You win!'],
596: 1:  'history': [],
596: 1:  'info': [],
596: 1:  'level': 19,
596: 1:  'questions': []
596: 1:}
596: 1:Scores: 80802
596: 1:Answer: message('StartNextLevel')
------------------------------------------
597: 1:BoardData {
597: 1:  'description': ['No more Levels. You win!'],
597: 1:  'history': [],
597: 1:  'info': [],
597: 1:  'level': 19,
597: 1:  'questions': []
597: 1:}
597: 1:Scores: 80802
597: 1:Answer: message('StartNextLevel')
------------------------------------------
598: 1:BoardData {
598: 1:  'description': ['No more Levels. You win!'],
598: 1:  'history': [],
598: 1:  'info': [],
598: 1:  'level': 19,
598: 1:  'questions': []
598: 1:}
598: 1:Scores: 80802
598: 1:Answer: message('StartNextLevel')
------------------------------------------
599: 1:BoardData {
599: 1:  'description': ['No more Levels. You win!'],
599: 1:  'history': [],
599: 1:  'info': [],
599: 1:  'level': 19,
599: 1:  'questions': []
599: 1:}
599: 1:Scores: 80802
599: 1:Answer: message('StartNextLevel')
------------------------------------------
600: 1:BoardData {
600: 1:  'description': ['No more Levels. You win!'],
600: 1:  'history': [],
600: 1:  'info': [],
600: 1:  'level': 19,
600: 1:  'questions': []
600: 1:}
600: 1:Scores: 80802
600: 1:Answer: message('StartNextLevel')
------------------------------------------
601: 1:BoardData {
601: 1:  'description': ['No more Levels. You win!'],
601: 1:  'history': [],
601: 1:  'info': [],
601: 1:  'level': 19,
601: 1:  'questions': []
601: 1:}
601: 1:Scores: 80802
601: 1:Answer: message('StartNextLevel')
------------------------------------------
602: 1:BoardData {
602: 1:  'description': ['No more Levels. You win!'],
602: 1:  'history': [],
602: 1:  'info': [],
602: 1:  'level': 19,
602: 1:  'questions': []
602: 1:}
602: 1:Scores: 80802
602: 1:Answer: message('StartNextLevel')
------------------------------------------
603: 1:BoardData {
603: 1:  'description': ['No more Levels. You win!'],
603: 1:  'history': [],
603: 1:  'info': [],
603: 1:  'level': 19,
603: 1:  'questions': []
603: 1:}
603: 1:Scores: 80802
603: 1:Answer: message('StartNextLevel')
------------------------------------------
604: 1:BoardData {
604: 1:  'description': ['No more Levels. You win!'],
604: 1:  'history': [],
604: 1:  'info': [],
604: 1:  'level': 19,
604: 1:  'questions': []
604: 1:}
604: 1:Scores: 80802
604: 1:Answer: message('StartNextLevel')
------------------------------------------
605: 1:BoardData {
605: 1:  'description': ['No more Levels. You win!'],
605: 1:  'history': [],
605: 1:  'info': [],
605: 1:  'level': 19,
605: 1:  'questions': []
605: 1:}
605: 1:Scores: 80802
605: 1:Answer: message('StartNextLevel')
------------------------------------------
606: 1:BoardData {
606: 1:  'description': ['No more Levels. You win!'],
606: 1:  'history': [],
606: 1:  'info': [],
606: 1:  'level': 19,
606: 1:  'questions': []
606: 1:}
606: 1:Scores: 80802
606: 1:Answer: message('StartNextLevel')
------------------------------------------
607: 1:BoardData {
607: 1:  'description': ['No more Levels. You win!'],
607: 1:  'history': [],
607: 1:  'info': [],
607: 1:  'level': 19,
607: 1:  'questions': []
607: 1:}
607: 1:Scores: 80802
607: 1:Answer: message('StartNextLevel')
------------------------------------------
608: 1:BoardData {
608: 1:  'description': ['No more Levels. You win!'],
608: 1:  'history': [],
608: 1:  'info': [],
608: 1:  'level': 19,
608: 1:  'questions': []
608: 1:}
608: 1:Scores: 80802
608: 1:Answer: message('StartNextLevel')
------------------------------------------
609: 1:BoardData {
609: 1:  'description': ['No more Levels. You win!'],
609: 1:  'history': [],
609: 1:  'info': [],
609: 1:  'level': 19,
609: 1:  'questions': []
609: 1:}
609: 1:Scores: 80802
609: 1:Answer: message('StartNextLevel')
------------------------------------------
610: 1:BoardData {
610: 1:  'description': ['No more Levels. You win!'],
610: 1:  'history': [],
610: 1:  'info': [],
610: 1:  'level': 19,
610: 1:  'questions': []
610: 1:}
610: 1:Scores: 80802
610: 1:Answer: message('StartNextLevel')
------------------------------------------
611: 1:BoardData {
611: 1:  'description': ['No more Levels. You win!'],
611: 1:  'history': [],
611: 1:  'info': [],
611: 1:  'level': 19,
611: 1:  'questions': []
611: 1:}
611: 1:Scores: 80802
611: 1:Answer: message('StartNextLevel')
------------------------------------------
612: 1:BoardData {
612: 1:  'description': ['No more Levels. You win!'],
612: 1:  'history': [],
612: 1:  'info': [],
612: 1:  'level': 19,
612: 1:  'questions': []
612: 1:}
612: 1:Scores: 80802
612: 1:Answer: message('StartNextLevel')
------------------------------------------
613: 1:BoardData {
613: 1:  'description': ['No more Levels. You win!'],
613: 1:  'history': [],
613: 1:  'info': [],
613: 1:  'level': 19,
613: 1:  'questions': []
613: 1:}
613: 1:Scores: 80802
613: 1:Answer: message('StartNextLevel')
------------------------------------------
614: 1:BoardData {
614: 1:  'description': ['No more Levels. You win!'],
614: 1:  'history': [],
614: 1:  'info': [],
614: 1:  'level': 19,
614: 1:  'questions': []
614: 1:}
614: 1:Scores: 80802
614: 1:Answer: message('StartNextLevel')
------------------------------------------
615: 1:BoardData {
615: 1:  'description': ['No more Levels. You win!'],
615: 1:  'history': [],
615: 1:  'info': [],
615: 1:  'level': 19,
615: 1:  'questions': []
615: 1:}
615: 1:Scores: 80802
615: 1:Answer: message('StartNextLevel')
------------------------------------------
616: 1:BoardData {
616: 1:  'description': ['No more Levels. You win!'],
616: 1:  'history': [],
616: 1:  'info': [],
616: 1:  'level': 19,
616: 1:  'questions': []
616: 1:}
616: 1:Scores: 80802
616: 1:Answer: message('StartNextLevel')
------------------------------------------
617: 1:BoardData {
617: 1:  'description': ['No more Levels. You win!'],
617: 1:  'history': [],
617: 1:  'info': [],
617: 1:  'level': 19,
617: 1:  'questions': []
617: 1:}
617: 1:Scores: 80802
617: 1:Answer: message('StartNextLevel')
------------------------------------------
618: 1:BoardData {
618: 1:  'description': ['No more Levels. You win!'],
618: 1:  'history': [],
618: 1:  'info': [],
618: 1:  'level': 19,
618: 1:  'questions': []
618: 1:}
618: 1:Scores: 80802
618: 1:Answer: message('StartNextLevel')
------------------------------------------
619: 1:BoardData {
619: 1:  'description': ['No more Levels. You win!'],
619: 1:  'history': [],
619: 1:  'info': [],
619: 1:  'level': 19,
619: 1:  'questions': []
619: 1:}
619: 1:Scores: 80802
619: 1:Answer: message('StartNextLevel')
------------------------------------------
620: 1:BoardData {
620: 1:  'description': ['No more Levels. You win!'],
620: 1:  'history': [],
620: 1:  'info': [],
620: 1:  'level': 19,
620: 1:  'questions': []
620: 1:}
620: 1:Scores: 80802
620: 1:Answer: message('StartNextLevel')
------------------------------------------
621: 1:BoardData {
621: 1:  'description': ['No more Levels. You win!'],
621: 1:  'history': [],
621: 1:  'info': [],
621: 1:  'level': 19,
621: 1:  'questions': []
621: 1:}
621: 1:Scores: 80802
621: 1:Answer: message('StartNextLevel')
------------------------------------------
622: 1:BoardData {
622: 1:  'description': ['No more Levels. You win!'],
622: 1:  'history': [],
622: 1:  'info': [],
622: 1:  'level': 19,
622: 1:  'questions': []
622: 1:}
622: 1:Scores: 80802
622: 1:Answer: message('StartNextLevel')
------------------------------------------
623: 1:BoardData {
623: 1:  'description': ['No more Levels. You win!'],
623: 1:  'history': [],
623: 1:  'info': [],
623: 1:  'level': 19,
623: 1:  'questions': []
623: 1:}
623: 1:Scores: 80802
623: 1:Answer: message('StartNextLevel')
------------------------------------------
624: 1:BoardData {
624: 1:  'description': ['No more Levels. You win!'],
624: 1:  'history': [],
624: 1:  'info': [],
624: 1:  'level': 19,
624: 1:  'questions': []
624: 1:}
624: 1:Scores: 80802
624: 1:Answer: message('StartNextLevel')
------------------------------------------
625: 1:BoardData {
625: 1:  'description': ['No more Levels. You win!'],
625: 1:  'history': [],
625: 1:  'info': [],
625: 1:  'level': 19,
625: 1:  'questions': []
625: 1:}
625: 1:Scores: 80802
625: 1:Answer: message('StartNextLevel')
------------------------------------------
626: 1:BoardData {
626: 1:  'description': ['No more Levels. You win!'],
626: 1:  'history': [],
626: 1:  'info': [],
626: 1:  'level': 19,
626: 1:  'questions': []
626: 1:}
626: 1:Scores: 80802
626: 1:Answer: message('StartNextLevel')
------------------------------------------
627: 1:BoardData {
627: 1:  'description': ['No more Levels. You win!'],
627: 1:  'history': [],
627: 1:  'info': [],
627: 1:  'level': 19,
627: 1:  'questions': []
627: 1:}
627: 1:Scores: 80802
627: 1:Answer: message('StartNextLevel')
------------------------------------------
628: 1:BoardData {
628: 1:  'description': ['No more Levels. You win!'],
628: 1:  'history': [],
628: 1:  'info': [],
628: 1:  'level': 19,
628: 1:  'questions': []
628: 1:}
628: 1:Scores: 80802
628: 1:Answer: message('StartNextLevel')
------------------------------------------
629: 1:BoardData {
629: 1:  'description': ['No more Levels. You win!'],
629: 1:  'history': [],
629: 1:  'info': [],
629: 1:  'level': 19,
629: 1:  'questions': []
629: 1:}
629: 1:Scores: 80802
629: 1:Answer: message('StartNextLevel')
------------------------------------------
630: 1:BoardData {
630: 1:  'description': ['No more Levels. You win!'],
630: 1:  'history': [],
630: 1:  'info': [],
630: 1:  'level': 19,
630: 1:  'questions': []
630: 1:}
630: 1:Scores: 80802
630: 1:Answer: message('StartNextLevel')
------------------------------------------
631: 1:BoardData {
631: 1:  'description': ['No more Levels. You win!'],
631: 1:  'history': [],
631: 1:  'info': [],
631: 1:  'level': 19,
631: 1:  'questions': []
631: 1:}
631: 1:Scores: 80802
631: 1:Answer: message('StartNextLevel')
------------------------------------------
632: 1:BoardData {
632: 1:  'description': ['No more Levels. You win!'],
632: 1:  'history': [],
632: 1:  'info': [],
632: 1:  'level': 19,
632: 1:  'questions': []
632: 1:}
632: 1:Scores: 80802
632: 1:Answer: message('StartNextLevel')
------------------------------------------
633: 1:BoardData {
633: 1:  'description': ['No more Levels. You win!'],
633: 1:  'history': [],
633: 1:  'info': [],
633: 1:  'level': 19,
633: 1:  'questions': []
633: 1:}
633: 1:Scores: 80802
633: 1:Answer: message('StartNextLevel')
------------------------------------------
634: 1:BoardData {
634: 1:  'description': ['No more Levels. You win!'],
634: 1:  'history': [],
634: 1:  'info': [],
634: 1:  'level': 19,
634: 1:  'questions': []
634: 1:}
634: 1:Scores: 80802
634: 1:Answer: message('StartNextLevel')
------------------------------------------
635: 1:BoardData {
635: 1:  'description': ['No more Levels. You win!'],
635: 1:  'history': [],
635: 1:  'info': [],
635: 1:  'level': 19,
635: 1:  'questions': []
635: 1:}
635: 1:Scores: 80802
635: 1:Answer: message('StartNextLevel')
------------------------------------------
636: 1:BoardData {
636: 1:  'description': ['No more Levels. You win!'],
636: 1:  'history': [],
636: 1:  'info': [],
636: 1:  'level': 19,
636: 1:  'questions': []
636: 1:}
636: 1:Scores: 80802
636: 1:Answer: message('StartNextLevel')
------------------------------------------
637: 1:BoardData {
637: 1:  'description': ['No more Levels. You win!'],
637: 1:  'history': [],
637: 1:  'info': [],
637: 1:  'level': 19,
637: 1:  'questions': []
637: 1:}
637: 1:Scores: 80802
637: 1:Answer: message('StartNextLevel')
------------------------------------------
638: 1:BoardData {
638: 1:  'description': ['No more Levels. You win!'],
638: 1:  'history': [],
638: 1:  'info': [],
638: 1:  'level': 19,
638: 1:  'questions': []
638: 1:}
638: 1:Scores: 80802
638: 1:Answer: message('StartNextLevel')
------------------------------------------
639: 1:BoardData {
639: 1:  'description': ['No more Levels. You win!'],
639: 1:  'history': [],
639: 1:  'info': [],
639: 1:  'level': 19,
639: 1:  'questions': []
639: 1:}
639: 1:Scores: 80802
639: 1:Answer: message('StartNextLevel')
------------------------------------------
640: 1:BoardData {
640: 1:  'description': ['No more Levels. You win!'],
640: 1:  'history': [],
640: 1:  'info': [],
640: 1:  'level': 19,
640: 1:  'questions': []
640: 1:}
640: 1:Scores: 80802
640: 1:Answer: message('StartNextLevel')
------------------------------------------
641: 1:BoardData {
641: 1:  'description': ['No more Levels. You win!'],
641: 1:  'history': [],
641: 1:  'info': [],
641: 1:  'level': 19,
641: 1:  'questions': []
641: 1:}
641: 1:Scores: 80802
641: 1:Answer: message('StartNextLevel')
------------------------------------------
642: 1:BoardData {
642: 1:  'description': ['No more Levels. You win!'],
642: 1:  'history': [],
642: 1:  'info': [],
642: 1:  'level': 19,
642: 1:  'questions': []
642: 1:}
642: 1:Scores: 80802
642: 1:Answer: message('StartNextLevel')
------------------------------------------
643: 1:BoardData {
643: 1:  'description': ['No more Levels. You win!'],
643: 1:  'history': [],
643: 1:  'info': [],
643: 1:  'level': 19,
643: 1:  'questions': []
643: 1:}
643: 1:Scores: 80802
643: 1:Answer: message('StartNextLevel')
------------------------------------------
644: 1:BoardData {
644: 1:  'description': ['No more Levels. You win!'],
644: 1:  'history': [],
644: 1:  'info': [],
644: 1:  'level': 19,
644: 1:  'questions': []
644: 1:}
644: 1:Scores: 80802
644: 1:Answer: message('StartNextLevel')
------------------------------------------
645: 1:BoardData {
645: 1:  'description': ['No more Levels. You win!'],
645: 1:  'history': [],
645: 1:  'info': [],
645: 1:  'level': 19,
645: 1:  'questions': []
645: 1:}
645: 1:Scores: 80802
645: 1:Answer: message('StartNextLevel')
------------------------------------------
646: 1:BoardData {
646: 1:  'description': ['No more Levels. You win!'],
646: 1:  'history': [],
646: 1:  'info': [],
646: 1:  'level': 19,
646: 1:  'questions': []
646: 1:}
646: 1:Scores: 80802
646: 1:Answer: message('StartNextLevel')
------------------------------------------
647: 1:BoardData {
647: 1:  'description': ['No more Levels. You win!'],
647: 1:  'history': [],
647: 1:  'info': [],
647: 1:  'level': 19,
647: 1:  'questions': []
647: 1:}
647: 1:Scores: 80802
647: 1:Answer: message('StartNextLevel')
------------------------------------------
648: 1:BoardData {
648: 1:  'description': ['No more Levels. You win!'],
648: 1:  'history': [],
648: 1:  'info': [],
648: 1:  'level': 19,
648: 1:  'questions': []
648: 1:}
648: 1:Scores: 80802
648: 1:Answer: message('StartNextLevel')
------------------------------------------
649: 1:BoardData {
649: 1:  'description': ['No more Levels. You win!'],
649: 1:  'history': [],
649: 1:  'info': [],
649: 1:  'level': 19,
649: 1:  'questions': []
649: 1:}
649: 1:Scores: 80802
649: 1:Answer: message('StartNextLevel')
------------------------------------------
650: 1:BoardData {
650: 1:  'description': ['No more Levels. You win!'],
650: 1:  'history': [],
650: 1:  'info': [],
650: 1:  'level': 19,
650: 1:  'questions': []
650: 1:}
650: 1:Scores: 80802
650: 1:Answer: message('StartNextLevel')
------------------------------------------
651: 1:BoardData {
651: 1:  'description': ['No more Levels. You win!'],
651: 1:  'history': [],
651: 1:  'info': [],
651: 1:  'level': 19,
651: 1:  'questions': []
651: 1:}
651: 1:Scores: 80802
651: 1:Answer: message('StartNextLevel')
------------------------------------------
652: 1:BoardData {
652: 1:  'description': ['No more Levels. You win!'],
652: 1:  'history': [],
652: 1:  'info': [],
652: 1:  'level': 19,
652: 1:  'questions': []
652: 1:}
652: 1:Scores: 80802
652: 1:Answer: message('StartNextLevel')
------------------------------------------
653: 1:BoardData {
653: 1:  'description': ['No more Levels. You win!'],
653: 1:  'history': [],
653: 1:  'info': [],
653: 1:  'level': 19,
653: 1:  'questions': []
653: 1:}
653: 1:Scores: 80802
653: 1:Answer: message('StartNextLevel')
------------------------------------------
654: 1:BoardData {
654: 1:  'description': ['No more Levels. You win!'],
654: 1:  'history': [],
654: 1:  'info': [],
654: 1:  'level': 19,
654: 1:  'questions': []
654: 1:}
654: 1:Scores: 80802
654: 1:Answer: message('StartNextLevel')
------------------------------------------
655: 1:BoardData {
655: 1:  'description': ['No more Levels. You win!'],
655: 1:  'history': [],
655: 1:  'info': [],
655: 1:  'level': 19,
655: 1:  'questions': []
655: 1:}
655: 1:Scores: 80802
655: 1:Answer: message('StartNextLevel')
------------------------------------------
656: 1:BoardData {
656: 1:  'description': ['No more Levels. You win!'],
656: 1:  'history': [],
656: 1:  'info': [],
656: 1:  'level': 19,
656: 1:  'questions': []
656: 1:}
656: 1:Scores: 80802
656: 1:Answer: message('StartNextLevel')
------------------------------------------
657: 1:BoardData {
657: 1:  'description': ['No more Levels. You win!'],
657: 1:  'history': [],
657: 1:  'info': [],
657: 1:  'level': 19,
657: 1:  'questions': []
657: 1:}
657: 1:Scores: 80802
657: 1:Answer: message('StartNextLevel')
------------------------------------------
658: 1:BoardData {
658: 1:  'description': ['No more Levels. You win!'],
658: 1:  'history': [],
658: 1:  'info': [],
658: 1:  'level': 19,
658: 1:  'questions': []
658: 1:}
658: 1:Scores: 80802
658: 1:Answer: message('StartNextLevel')
------------------------------------------
659: 1:BoardData {
659: 1:  'description': ['No more Levels. You win!'],
659: 1:  'history': [],
659: 1:  'info': [],
659: 1:  'level': 19,
659: 1:  'questions': []
659: 1:}
659: 1:Scores: 80802
659: 1:Answer: message('StartNextLevel')
------------------------------------------
660: 1:BoardData {
660: 1:  'description': ['No more Levels. You win!'],
660: 1:  'history': [],
660: 1:  'info': [],
660: 1:  'level': 19,
660: 1:  'questions': []
660: 1:}
660: 1:Scores: 80802
660: 1:Answer: message('StartNextLevel')
------------------------------------------
661: 1:BoardData {
661: 1:  'description': ['No more Levels. You win!'],
661: 1:  'history': [],
661: 1:  'info': [],
661: 1:  'level': 19,
661: 1:  'questions': []
661: 1:}
661: 1:Scores: 80802
661: 1:Answer: message('StartNextLevel')
------------------------------------------
662: 1:BoardData {
662: 1:  'description': ['No more Levels. You win!'],
662: 1:  'history': [],
662: 1:  'info': [],
662: 1:  'level': 19,
662: 1:  'questions': []
662: 1:}
662: 1:Scores: 80802
662: 1:Answer: message('StartNextLevel')
------------------------------------------
663: 1:BoardData {
663: 1:  'description': ['No more Levels. You win!'],
663: 1:  'history': [],
663: 1:  'info': [],
663: 1:  'level': 19,
663: 1:  'questions': []
663: 1:}
663: 1:Scores: 80802
663: 1:Answer: message('StartNextLevel')
------------------------------------------
664: 1:BoardData {
664: 1:  'description': ['No more Levels. You win!'],
664: 1:  'history': [],
664: 1:  'info': [],
664: 1:  'level': 19,
664: 1:  'questions': []
664: 1:}
664: 1:Scores: 80802
664: 1:Answer: message('StartNextLevel')
------------------------------------------
665: 1:BoardData {
665: 1:  'description': ['No more Levels. You win!'],
665: 1:  'history': [],
665: 1:  'info': [],
665: 1:  'level': 19,
665: 1:  'questions': []
665: 1:}
665: 1:Scores: 80802
665: 1:Answer: message('StartNextLevel')
------------------------------------------
666: 1:BoardData {
666: 1:  'description': ['No more Levels. You win!'],
666: 1:  'history': [],
666: 1:  'info': [],
666: 1:  'level': 19,
666: 1:  'questions': []
666: 1:}
666: 1:Scores: 80802
666: 1:Answer: message('StartNextLevel')
------------------------------------------
667: 1:BoardData {
667: 1:  'description': ['No more Levels. You win!'],
667: 1:  'history': [],
667: 1:  'info': [],
667: 1:  'level': 19,
667: 1:  'questions': []
667: 1:}
667: 1:Scores: 80802
667: 1:Answer: message('StartNextLevel')
------------------------------------------
668: 1:BoardData {
668: 1:  'description': ['No more Levels. You win!'],
668: 1:  'history': [],
668: 1:  'info': [],
668: 1:  'level': 19,
668: 1:  'questions': []
668: 1:}
668: 1:Scores: 80802
668: 1:Answer: message('StartNextLevel')
------------------------------------------
669: 1:BoardData {
669: 1:  'description': ['No more Levels. You win!'],
669: 1:  'history': [],
669: 1:  'info': [],
669: 1:  'level': 19,
669: 1:  'questions': []
669: 1:}
669: 1:Scores: 80802
669: 1:Answer: message('StartNextLevel')
------------------------------------------
670: 1:BoardData {
670: 1:  'description': ['No more Levels. You win!'],
670: 1:  'history': [],
670: 1:  'info': [],
670: 1:  'level': 19,
670: 1:  'questions': []
670: 1:}
670: 1:Scores: 80802
670: 1:Answer: message('StartNextLevel')
------------------------------------------
671: 1:BoardData {
671: 1:  'description': ['No more Levels. You win!'],
671: 1:  'history': [],
671: 1:  'info': [],
671: 1:  'level': 19,
671: 1:  'questions': []
671: 1:}
671: 1:Scores: 80802
671: 1:Answer: message('StartNextLevel')
------------------------------------------
672: 1:BoardData {
672: 1:  'description': ['No more Levels. You win!'],
672: 1:  'history': [],
672: 1:  'info': [],
672: 1:  'level': 19,
672: 1:  'questions': []
672: 1:}
672: 1:Scores: 80802
672: 1:Answer: message('StartNextLevel')
------------------------------------------
673: 1:BoardData {
673: 1:  'description': ['No more Levels. You win!'],
673: 1:  'history': [],
673: 1:  'info': [],
673: 1:  'level': 19,
673: 1:  'questions': []
673: 1:}
673: 1:Scores: 80802
673: 1:Answer: message('StartNextLevel')
------------------------------------------
674: 1:BoardData {
674: 1:  'description': ['No more Levels. You win!'],
674: 1:  'history': [],
674: 1:  'info': [],
674: 1:  'level': 19,
674: 1:  'questions': []
674: 1:}
674: 1:Scores: 80802
674: 1:Answer: message('StartNextLevel')
------------------------------------------
675: 1:BoardData {
675: 1:  'description': ['No more Levels. You win!'],
675: 1:  'history': [],
675: 1:  'info': [],
675: 1:  'level': 19,
675: 1:  'questions': []
675: 1:}
675: 1:Scores: 80802
675: 1:Answer: message('StartNextLevel')
------------------------------------------
676: 1:BoardData {
676: 1:  'description': ['No more Levels. You win!'],
676: 1:  'history': [],
676: 1:  'info': [],
676: 1:  'level': 19,
676: 1:  'questions': []
676: 1:}
676: 1:Scores: 80802
676: 1:Answer: message('StartNextLevel')
------------------------------------------
677: 1:BoardData {
677: 1:  'description': ['No more Levels. You win!'],
677: 1:  'history': [],
677: 1:  'info': [],
677: 1:  'level': 19,
677: 1:  'questions': []
677: 1:}
677: 1:Scores: 80802
677: 1:Answer: message('StartNextLevel')
------------------------------------------
678: 1:BoardData {
678: 1:  'description': ['No more Levels. You win!'],
678: 1:  'history': [],
678: 1:  'info': [],
678: 1:  'level': 19,
678: 1:  'questions': []
678: 1:}
678: 1:Scores: 80802
678: 1:Answer: message('StartNextLevel')
------------------------------------------
679: 1:BoardData {
679: 1:  'description': ['No more Levels. You win!'],
679: 1:  'history': [],
679: 1:  'info': [],
679: 1:  'level': 19,
679: 1:  'questions': []
679: 1:}
679: 1:Scores: 80802
679: 1:Answer: message('StartNextLevel')
------------------------------------------
680: 1:BoardData {
680: 1:  'description': ['No more Levels. You win!'],
680: 1:  'history': [],
680: 1:  'info': [],
680: 1:  'level': 19,
680: 1:  'questions': []
680: 1:}
680: 1:Scores: 80802
680: 1:Answer: message('StartNextLevel')
------------------------------------------
681: 1:BoardData {
681: 1:  'description': ['No more Levels. You win!'],
681: 1:  'history': [],
681: 1:  'info': [],
681: 1:  'level': 19,
681: 1:  'questions': []
681: 1:}
681: 1:Scores: 80802
681: 1:Answer: message('StartNextLevel')
------------------------------------------
682: 1:BoardData {
682: 1:  'description': ['No more Levels. You win!'],
682: 1:  'history': [],
682: 1:  'info': [],
682: 1:  'level': 19,
682: 1:  'questions': []
682: 1:}
682: 1:Scores: 80802
682: 1:Answer: message('StartNextLevel')
------------------------------------------
683: 1:BoardData {
683: 1:  'description': ['No more Levels. You win!'],
683: 1:  'history': [],
683: 1:  'info': [],
683: 1:  'level': 19,
683: 1:  'questions': []
683: 1:}
683: 1:Scores: 80802
683: 1:Answer: message('StartNextLevel')
------------------------------------------
684: 1:BoardData {
684: 1:  'description': ['No more Levels. You win!'],
684: 1:  'history': [],
684: 1:  'info': [],
684: 1:  'level': 19,
684: 1:  'questions': []
684: 1:}
684: 1:Scores: 80802
684: 1:Answer: message('StartNextLevel')
------------------------------------------
685: 1:BoardData {
685: 1:  'description': ['No more Levels. You win!'],
685: 1:  'history': [],
685: 1:  'info': [],
685: 1:  'level': 19,
685: 1:  'questions': []
685: 1:}
685: 1:Scores: 80802
685: 1:Answer: message('StartNextLevel')
------------------------------------------
686: 1:BoardData {
686: 1:  'description': ['No more Levels. You win!'],
686: 1:  'history': [],
686: 1:  'info': [],
686: 1:  'level': 19,
686: 1:  'questions': []
686: 1:}
686: 1:Scores: 80802
686: 1:Answer: message('StartNextLevel')
------------------------------------------
687: 1:BoardData {
687: 1:  'description': ['No more Levels. You win!'],
687: 1:  'history': [],
687: 1:  'info': [],
687: 1:  'level': 19,
687: 1:  'questions': []
687: 1:}
687: 1:Scores: 80802
687: 1:Answer: message('StartNextLevel')
------------------------------------------
688: 1:BoardData {
688: 1:  'description': ['No more Levels. You win!'],
688: 1:  'history': [],
688: 1:  'info': [],
688: 1:  'level': 19,
688: 1:  'questions': []
688: 1:}
688: 1:Scores: 80802
688: 1:Answer: message('StartNextLevel')
------------------------------------------
689: 1:BoardData {
689: 1:  'description': ['No more Levels. You win!'],
689: 1:  'history': [],
689: 1:  'info': [],
689: 1:  'level': 19,
689: 1:  'questions': []
689: 1:}
689: 1:Scores: 80802
689: 1:Answer: message('StartNextLevel')
------------------------------------------
690: 1:BoardData {
690: 1:  'description': ['No more Levels. You win!'],
690: 1:  'history': [],
690: 1:  'info': [],
690: 1:  'level': 19,
690: 1:  'questions': []
690: 1:}
690: 1:Scores: 80802
690: 1:Answer: message('StartNextLevel')
------------------------------------------
691: 1:BoardData {
691: 1:  'description': ['No more Levels. You win!'],
691: 1:  'history': [],
691: 1:  'info': [],
691: 1:  'level': 19,
691: 1:  'questions': []
691: 1:}
691: 1:Scores: 80802
691: 1:Answer: message('StartNextLevel')
------------------------------------------
692: 1:BoardData {
692: 1:  'description': ['No more Levels. You win!'],
692: 1:  'history': [],
692: 1:  'info': [],
692: 1:  'level': 19,
692: 1:  'questions': []
692: 1:}
692: 1:Scores: 80802
692: 1:Answer: message('StartNextLevel')
------------------------------------------
693: 1:BoardData {
693: 1:  'description': ['No more Levels. You win!'],
693: 1:  'history': [],
693: 1:  'info': [],
693: 1:  'level': 19,
693: 1:  'questions': []
693: 1:}
693: 1:Scores: 80802
693: 1:Answer: message('StartNextLevel')
------------------------------------------
694: 1:BoardData {
694: 1:  'description': ['No more Levels. You win!'],
694: 1:  'history': [],
694: 1:  'info': [],
694: 1:  'level': 19,
694: 1:  'questions': []
694: 1:}
694: 1:Scores: 80802
694: 1:Answer: message('StartNextLevel')
------------------------------------------
695: 1:BoardData {
695: 1:  'description': ['No more Levels. You win!'],
695: 1:  'history': [],
695: 1:  'info': [],
695: 1:  'level': 19,
695: 1:  'questions': []
695: 1:}
695: 1:Scores: 80802
695: 1:Answer: message('StartNextLevel')
------------------------------------------
696: 1:BoardData {
696: 1:  'description': ['No more Levels. You win!'],
696: 1:  'history': [],
696: 1:  'info': [],
696: 1:  'level': 19,
696: 1:  'questions': []
696: 1:}
696: 1:Scores: 80802
696: 1:Answer: message('StartNextLevel')
------------------------------------------
697: 1:BoardData {
697: 1:  'description': ['No more Levels. You win!'],
697: 1:  'history': [],
697: 1:  'info': [],
697: 1:  'level': 19,
697: 1:  'questions': []
697: 1:}
697: 1:Scores: 80802
697: 1:Answer: message('StartNextLevel')
------------------------------------------
698: 1:BoardData {
698: 1:  'description': ['No more Levels. You win!'],
698: 1:  'history': [],
698: 1:  'info': [],
698: 1:  'level': 19,
698: 1:  'questions': []
698: 1:}
698: 1:Scores: 80802
698: 1:Answer: message('StartNextLevel')
------------------------------------------
699: 1:BoardData {
699: 1:  'description': ['No more Levels. You win!'],
699: 1:  'history': [],
699: 1:  'info': [],
699: 1:  'level': 19,
699: 1:  'questions': []
699: 1:}
699: 1:Scores: 80802
699: 1:Answer: message('StartNextLevel')
------------------------------------------
700: 1:BoardData {
700: 1:  'description': ['No more Levels. You win!'],
700: 1:  'history': [],
700: 1:  'info': [],
700: 1:  'level': 19,
700: 1:  'questions': []
700: 1:}
700: 1:Scores: 80802
700: 1:Answer: message('StartNextLevel')
------------------------------------------
701: 1:BoardData {
701: 1:  'description': ['No more Levels. You win!'],
701: 1:  'history': [],
701: 1:  'info': [],
701: 1:  'level': 19,
701: 1:  'questions': []
701: 1:}
701: 1:Scores: 80802
701: 1:Answer: message('StartNextLevel')
------------------------------------------
702: 1:BoardData {
702: 1:  'description': ['No more Levels. You win!'],
702: 1:  'history': [],
702: 1:  'info': [],
702: 1:  'level': 19,
702: 1:  'questions': []
702: 1:}
702: 1:Scores: 80802
702: 1:Answer: message('StartNextLevel')
------------------------------------------
703: 1:BoardData {
703: 1:  'description': ['No more Levels. You win!'],
703: 1:  'history': [],
703: 1:  'info': [],
703: 1:  'level': 19,
703: 1:  'questions': []
703: 1:}
703: 1:Scores: 80802
703: 1:Answer: message('StartNextLevel')
------------------------------------------
704: 1:BoardData {
704: 1:  'description': ['No more Levels. You win!'],
704: 1:  'history': [],
704: 1:  'info': [],
704: 1:  'level': 19,
704: 1:  'questions': []
704: 1:}
704: 1:Scores: 80802
704: 1:Answer: message('StartNextLevel')
------------------------------------------
705: 1:BoardData {
705: 1:  'description': ['No more Levels. You win!'],
705: 1:  'history': [],
705: 1:  'info': [],
705: 1:  'level': 19,
705: 1:  'questions': []
705: 1:}
705: 1:Scores: 80802
705: 1:Answer: message('StartNextLevel')
------------------------------------------
706: 1:BoardData {
706: 1:  'description': ['No more Levels. You win!'],
706: 1:  'history': [],
706: 1:  'info': [],
706: 1:  'level': 19,
706: 1:  'questions': []
706: 1:}
706: 1:Scores: 80802
706: 1:Answer: message('StartNextLevel')
------------------------------------------
707: 1:BoardData {
707: 1:  'description': ['No more Levels. You win!'],
707: 1:  'history': [],
707: 1:  'info': [],
707: 1:  'level': 19,
707: 1:  'questions': []
707: 1:}
707: 1:Scores: 80802
707: 1:Answer: message('StartNextLevel')
------------------------------------------
708: 1:BoardData {
708: 1:  'description': ['No more Levels. You win!'],
708: 1:  'history': [],
708: 1:  'info': [],
708: 1:  'level': 19,
708: 1:  'questions': []
708: 1:}
708: 1:Scores: 80802
708: 1:Answer: message('StartNextLevel')
------------------------------------------
709: 1:BoardData {
709: 1:  'description': ['No more Levels. You win!'],
709: 1:  'history': [],
709: 1:  'info': [],
709: 1:  'level': 19,
709: 1:  'questions': []
709: 1:}
709: 1:Scores: 80802
709: 1:Answer: message('StartNextLevel')
------------------------------------------
710: 1:BoardData {
710: 1:  'description': ['No more Levels. You win!'],
710: 1:  'history': [],
710: 1:  'info': [],
710: 1:  'level': 19,
710: 1:  'questions': []
710: 1:}
710: 1:Scores: 80802
710: 1:Answer: message('StartNextLevel')
------------------------------------------
711: 1:BoardData {
711: 1:  'description': ['No more Levels. You win!'],
711: 1:  'history': [],
711: 1:  'info': [],
711: 1:  'level': 19,
711: 1:  'questions': []
711: 1:}
711: 1:Scores: 80802
711: 1:Answer: message('StartNextLevel')
------------------------------------------
712: 1:BoardData {
712: 1:  'description': ['No more Levels. You win!'],
712: 1:  'history': [],
712: 1:  'info': [],
712: 1:  'level': 19,
712: 1:  'questions': []
712: 1:}
712: 1:Scores: 80802
712: 1:Answer: message('StartNextLevel')
------------------------------------------
713: 1:BoardData {
713: 1:  'description': ['No more Levels. You win!'],
713: 1:  'history': [],
713: 1:  'info': [],
713: 1:  'level': 19,
713: 1:  'questions': []
713: 1:}
713: 1:Scores: 80802
713: 1:Answer: message('StartNextLevel')
------------------------------------------
714: 1:BoardData {
714: 1:  'description': ['No more Levels. You win!'],
714: 1:  'history': [],
714: 1:  'info': [],
714: 1:  'level': 19,
714: 1:  'questions': []
714: 1:}
714: 1:Scores: 80802
714: 1:Answer: message('StartNextLevel')
------------------------------------------
715: 1:BoardData {
715: 1:  'description': ['No more Levels. You win!'],
715: 1:  'history': [],
715: 1:  'info': [],
715: 1:  'level': 19,
715: 1:  'questions': []
715: 1:}
715: 1:Scores: 80802
715: 1:Answer: message('StartNextLevel')
------------------------------------------
716: 1:BoardData {
716: 1:  'description': ['No more Levels. You win!'],
716: 1:  'history': [],
716: 1:  'info': [],
716: 1:  'level': 19,
716: 1:  'questions': []
716: 1:}
716: 1:Scores: 80802
716: 1:Answer: message('StartNextLevel')
------------------------------------------
717: 1:BoardData {
717: 1:  'description': ['No more Levels. You win!'],
717: 1:  'history': [],
717: 1:  'info': [],
717: 1:  'level': 19,
717: 1:  'questions': []
717: 1:}
717: 1:Scores: 80802
717: 1:Answer: message('StartNextLevel')
------------------------------------------
718: 1:BoardData {
718: 1:  'description': ['No more Levels. You win!'],
718: 1:  'history': [],
718: 1:  'info': [],
718: 1:  'level': 19,
718: 1:  'questions': []
718: 1:}
718: 1:Scores: 80802
718: 1:Answer: message('StartNextLevel')
------------------------------------------
719: 1:BoardData {
719: 1:  'description': ['No more Levels. You win!'],
719: 1:  'history': [],
719: 1:  'info': [],
719: 1:  'level': 19,
719: 1:  'questions': []
719: 1:}
719: 1:Scores: 80802
719: 1:Answer: message('StartNextLevel')
------------------------------------------
720: 1:BoardData {
720: 1:  'description': ['No more Levels. You win!'],
720: 1:  'history': [],
720: 1:  'info': [],
720: 1:  'level': 19,
720: 1:  'questions': []
720: 1:}
720: 1:Scores: 80802
720: 1:Answer: message('StartNextLevel')
------------------------------------------
721: 1:BoardData {
721: 1:  'description': ['No more Levels. You win!'],
721: 1:  'history': [],
721: 1:  'info': [],
721: 1:  'level': 19,
721: 1:  'questions': []
721: 1:}
721: 1:Scores: 80802
721: 1:Answer: message('StartNextLevel')
------------------------------------------
722: 1:BoardData {
722: 1:  'description': ['No more Levels. You win!'],
722: 1:  'history': [],
722: 1:  'info': [],
722: 1:  'level': 19,
722: 1:  'questions': []
722: 1:}
722: 1:Scores: 80802
722: 1:Answer: message('StartNextLevel')
------------------------------------------
723: 1:BoardData {
723: 1:  'description': ['No more Levels. You win!'],
723: 1:  'history': [],
723: 1:  'info': [],
723: 1:  'level': 19,
723: 1:  'questions': []
723: 1:}
723: 1:Scores: 80802
723: 1:Answer: message('StartNextLevel')
------------------------------------------
724: 1:BoardData {
724: 1:  'description': ['No more Levels. You win!'],
724: 1:  'history': [],
724: 1:  'info': [],
724: 1:  'level': 19,
724: 1:  'questions': []
724: 1:}
724: 1:Scores: 80802
724: 1:Answer: message('StartNextLevel')
------------------------------------------
725: 1:BoardData {
725: 1:  'description': ['No more Levels. You win!'],
725: 1:  'history': [],
725: 1:  'info': [],
725: 1:  'level': 19,
725: 1:  'questions': []
725: 1:}
725: 1:Scores: 80802
725: 1:Answer: message('StartNextLevel')
------------------------------------------
726: 1:BoardData {
726: 1:  'description': ['No more Levels. You win!'],
726: 1:  'history': [],
726: 1:  'info': [],
726: 1:  'level': 19,
726: 1:  'questions': []
726: 1:}
726: 1:Scores: 80802
726: 1:Answer: message('StartNextLevel')
------------------------------------------
727: 1:BoardData {
727: 1:  'description': ['No more Levels. You win!'],
727: 1:  'history': [],
727: 1:  'info': [],
727: 1:  'level': 19,
727: 1:  'questions': []
727: 1:}
727: 1:Scores: 80802
727: 1:Answer: message('StartNextLevel')
------------------------------------------
728: 1:BoardData {
728: 1:  'description': ['No more Levels. You win!'],
728: 1:  'history': [],
728: 1:  'info': [],
728: 1:  'level': 19,
728: 1:  'questions': []
728: 1:}
728: 1:Scores: 80802
728: 1:Answer: message('StartNextLevel')
------------------------------------------
729: 1:BoardData {
729: 1:  'description': ['No more Levels. You win!'],
729: 1:  'history': [],
729: 1:  'info': [],
729: 1:  'level': 19,
729: 1:  'questions': []
729: 1:}
729: 1:Scores: 80802
729: 1:Answer: message('StartNextLevel')
------------------------------------------
730: 1:BoardData {
730: 1:  'description': ['No more Levels. You win!'],
730: 1:  'history': [],
730: 1:  'info': [],
730: 1:  'level': 19,
730: 1:  'questions': []
730: 1:}
730: 1:Scores: 80802
730: 1:Answer: message('StartNextLevel')
------------------------------------------
731: 1:BoardData {
731: 1:  'description': ['No more Levels. You win!'],
731: 1:  'history': [],
731: 1:  'info': [],
731: 1:  'level': 19,
731: 1:  'questions': []
731: 1:}
731: 1:Scores: 80802
731: 1:Answer: message('StartNextLevel')
------------------------------------------
732: 1:BoardData {
732: 1:  'description': ['No more Levels. You win!'],
732: 1:  'history': [],
732: 1:  'info': [],
732: 1:  'level': 19,
732: 1:  'questions': []
732: 1:}
732: 1:Scores: 80802
732: 1:Answer: message('StartNextLevel')
------------------------------------------
733: 1:BoardData {
733: 1:  'description': ['No more Levels. You win!'],
733: 1:  'history': [],
733: 1:  'info': [],
733: 1:  'level': 19,
733: 1:  'questions': []
733: 1:}
733: 1:Scores: 80802
733: 1:Answer: message('StartNextLevel')
------------------------------------------
734: 1:BoardData {
734: 1:  'description': ['No more Levels. You win!'],
734: 1:  'history': [],
734: 1:  'info': [],
734: 1:  'level': 19,
734: 1:  'questions': []
734: 1:}
734: 1:Scores: 80802
734: 1:Answer: message('StartNextLevel')
------------------------------------------
735: 1:BoardData {
735: 1:  'description': ['No more Levels. You win!'],
735: 1:  'history': [],
735: 1:  'info': [],
735: 1:  'level': 19,
735: 1:  'questions': []
735: 1:}
735: 1:Scores: 80802
735: 1:Answer: message('StartNextLevel')
------------------------------------------
736: 1:BoardData {
736: 1:  'description': ['No more Levels. You win!'],
736: 1:  'history': [],
736: 1:  'info': [],
736: 1:  'level': 19,
736: 1:  'questions': []
736: 1:}
736: 1:Scores: 80802
736: 1:Answer: message('StartNextLevel')
------------------------------------------
737: 1:BoardData {
737: 1:  'description': ['No more Levels. You win!'],
737: 1:  'history': [],
737: 1:  'info': [],
737: 1:  'level': 19,
737: 1:  'questions': []
737: 1:}
737: 1:Scores: 80802
737: 1:Answer: message('StartNextLevel')
------------------------------------------
738: 1:BoardData {
738: 1:  'description': ['No more Levels. You win!'],
738: 1:  'history': [],
738: 1:  'info': [],
738: 1:  'level': 19,
738: 1:  'questions': []
738: 1:}
738: 1:Scores: 80802
738: 1:Answer: message('StartNextLevel')
------------------------------------------
739: 1:BoardData {
739: 1:  'description': ['No more Levels. You win!'],
739: 1:  'history': [],
739: 1:  'info': [],
739: 1:  'level': 19,
739: 1:  'questions': []
739: 1:}
739: 1:Scores: 80802
739: 1:Answer: message('StartNextLevel')
------------------------------------------
740: 1:BoardData {
740: 1:  'description': ['No more Levels. You win!'],
740: 1:  'history': [],
740: 1:  'info': [],
740: 1:  'level': 19,
740: 1:  'questions': []
740: 1:}
740: 1:Scores: 80802
740: 1:Answer: message('StartNextLevel')
------------------------------------------
741: 1:BoardData {
741: 1:  'description': ['No more Levels. You win!'],
741: 1:  'history': [],
741: 1:  'info': [],
741: 1:  'level': 19,
741: 1:  'questions': []
741: 1:}
741: 1:Scores: 80802
741: 1:Answer: message('StartNextLevel')
------------------------------------------
742: 1:BoardData {
742: 1:  'description': ['No more Levels. You win!'],
742: 1:  'history': [],
742: 1:  'info': [],
742: 1:  'level': 19,
742: 1:  'questions': []
742: 1:}
742: 1:Scores: 80802
742: 1:Answer: message('StartNextLevel')
------------------------------------------
743: 1:BoardData {
743: 1:  'description': ['No more Levels. You win!'],
743: 1:  'history': [],
743: 1:  'info': [],
743: 1:  'level': 19,
743: 1:  'questions': []
743: 1:}
743: 1:Scores: 80802
743: 1:Answer: message('StartNextLevel')
------------------------------------------
744: 1:BoardData {
744: 1:  'description': ['No more Levels. You win!'],
744: 1:  'history': [],
744: 1:  'info': [],
744: 1:  'level': 19,
744: 1:  'questions': []
744: 1:}
744: 1:Scores: 80802
744: 1:Answer: message('StartNextLevel')
------------------------------------------
745: 1:BoardData {
745: 1:  'description': ['No more Levels. You win!'],
745: 1:  'history': [],
745: 1:  'info': [],
745: 1:  'level': 19,
745: 1:  'questions': []
745: 1:}
745: 1:Scores: 80802
745: 1:Answer: message('StartNextLevel')
------------------------------------------
746: 1:BoardData {
746: 1:  'description': ['No more Levels. You win!'],
746: 1:  'history': [],
746: 1:  'info': [],
746: 1:  'level': 19,
746: 1:  'questions': []
746: 1:}
746: 1:Scores: 80802
746: 1:Answer: message('StartNextLevel')
------------------------------------------
747: 1:BoardData {
747: 1:  'description': ['No more Levels. You win!'],
747: 1:  'history': [],
747: 1:  'info': [],
747: 1:  'level': 19,
747: 1:  'questions': []
747: 1:}
747: 1:Scores: 80802
747: 1:Answer: message('StartNextLevel')
------------------------------------------
748: 1:BoardData {
748: 1:  'description': ['No more Levels. You win!'],
748: 1:  'history': [],
748: 1:  'info': [],
748: 1:  'level': 19,
748: 1:  'questions': []
748: 1:}
748: 1:Scores: 80802
748: 1:Answer: message('StartNextLevel')
------------------------------------------
749: 1:BoardData {
749: 1:  'description': ['No more Levels. You win!'],
749: 1:  'history': [],
749: 1:  'info': [],
749: 1:  'level': 19,
749: 1:  'questions': []
749: 1:}
749: 1:Scores: 80802
749: 1:Answer: message('StartNextLevel')
------------------------------------------
750: 1:BoardData {
750: 1:  'description': ['No more Levels. You win!'],
750: 1:  'history': [],
750: 1:  'info': [],
750: 1:  'level': 19,
750: 1:  'questions': []
750: 1:}
750: 1:Scores: 80802
750: 1:Answer: message('StartNextLevel')
------------------------------------------
751: 1:BoardData {
751: 1:  'description': ['No more Levels. You win!'],
751: 1:  'history': [],
751: 1:  'info': [],
751: 1:  'level': 19,
751: 1:  'questions': []
751: 1:}
751: 1:Scores: 80802
751: 1:Answer: message('StartNextLevel')
------------------------------------------
752: 1:BoardData {
752: 1:  'description': ['No more Levels. You win!'],
752: 1:  'history': [],
752: 1:  'info': [],
752: 1:  'level': 19,
752: 1:  'questions': []
752: 1:}
752: 1:Scores: 80802
752: 1:Answer: message('StartNextLevel')
------------------------------------------
753: 1:BoardData {
753: 1:  'description': ['No more Levels. You win!'],
753: 1:  'history': [],
753: 1:  'info': [],
753: 1:  'level': 19,
753: 1:  'questions': []
753: 1:}
753: 1:Scores: 80802
753: 1:Answer: message('StartNextLevel')
------------------------------------------
754: 1:BoardData {
754: 1:  'description': ['No more Levels. You win!'],
754: 1:  'history': [],
754: 1:  'info': [],
754: 1:  'level': 19,
754: 1:  'questions': []
754: 1:}
754: 1:Scores: 80802
754: 1:Answer: message('StartNextLevel')
------------------------------------------
755: 1:BoardData {
755: 1:  'description': ['No more Levels. You win!'],
755: 1:  'history': [],
755: 1:  'info': [],
755: 1:  'level': 19,
755: 1:  'questions': []
755: 1:}
755: 1:Scores: 80802
755: 1:Answer: message('StartNextLevel')
------------------------------------------
756: 1:BoardData {
756: 1:  'description': ['No more Levels. You win!'],
756: 1:  'history': [],
756: 1:  'info': [],
756: 1:  'level': 19,
756: 1:  'questions': []
756: 1:}
756: 1:Scores: 80802
756: 1:Answer: message('StartNextLevel')
------------------------------------------
757: 1:BoardData {
757: 1:  'description': ['No more Levels. You win!'],
757: 1:  'history': [],
757: 1:  'info': [],
757: 1:  'level': 19,
757: 1:  'questions': []
757: 1:}
757: 1:Scores: 80802
757: 1:Answer: message('StartNextLevel')
------------------------------------------
758: 1:BoardData {
758: 1:  'description': ['No more Levels. You win!'],
758: 1:  'history': [],
758: 1:  'info': [],
758: 1:  'level': 19,
758: 1:  'questions': []
758: 1:}
758: 1:Scores: 80802
758: 1:Answer: message('StartNextLevel')
------------------------------------------
759: 1:BoardData {
759: 1:  'description': ['No more Levels. You win!'],
759: 1:  'history': [],
759: 1:  'info': [],
759: 1:  'level': 19,
759: 1:  'questions': []
759: 1:}
759: 1:Scores: 80802
759: 1:Answer: message('StartNextLevel')
------------------------------------------
760: 1:BoardData {
760: 1:  'description': ['No more Levels. You win!'],
760: 1:  'history': [],
760: 1:  'info': [],
760: 1:  'level': 19,
760: 1:  'questions': []
760: 1:}
760: 1:Scores: 80802
760: 1:Answer: message('StartNextLevel')
------------------------------------------
761: 1:BoardData {
761: 1:  'description': ['No more Levels. You win!'],
761: 1:  'history': [],
761: 1:  'info': [],
761: 1:  'level': 19,
761: 1:  'questions': []
761: 1:}
761: 1:Scores: 80802
761: 1:Answer: message('StartNextLevel')
------------------------------------------
762: 1:BoardData {
762: 1:  'description': ['No more Levels. You win!'],
762: 1:  'history': [],
762: 1:  'info': [],
762: 1:  'level': 19,
762: 1:  'questions': []
762: 1:}
762: 1:Scores: 80802
762: 1:Answer: message('StartNextLevel')
------------------------------------------
763: 1:BoardData {
763: 1:  'description': ['No more Levels. You win!'],
763: 1:  'history': [],
763: 1:  'info': [],
763: 1:  'level': 19,
763: 1:  'questions': []
763: 1:}
763: 1:Scores: 80802
763: 1:Answer: message('StartNextLevel')
------------------------------------------
764: 1:BoardData {
764: 1:  'description': ['No more Levels. You win!'],
764: 1:  'history': [],
764: 1:  'info': [],
764: 1:  'level': 19,
764: 1:  'questions': []
764: 1:}
764: 1:Scores: 80802
764: 1:Answer: message('StartNextLevel')
------------------------------------------
765: 1:BoardData {
765: 1:  'description': ['No more Levels. You win!'],
765: 1:  'history': [],
765: 1:  'info': [],
765: 1:  'level': 19,
765: 1:  'questions': []
765: 1:}
765: 1:Scores: 80802
765: 1:Answer: message('StartNextLevel')
------------------------------------------
766: 1:BoardData {
766: 1:  'description': ['No more Levels. You win!'],
766: 1:  'history': [],
766: 1:  'info': [],
766: 1:  'level': 19,
766: 1:  'questions': []
766: 1:}
766: 1:Scores: 80802
766: 1:Answer: message('StartNextLevel')
------------------------------------------
767: 1:BoardData {
767: 1:  'description': ['No more Levels. You win!'],
767: 1:  'history': [],
767: 1:  'info': [],
767: 1:  'level': 19,
767: 1:  'questions': []
767: 1:}
767: 1:Scores: 80802
767: 1:Answer: message('StartNextLevel')
------------------------------------------
768: 1:BoardData {
768: 1:  'description': ['No more Levels. You win!'],
768: 1:  'history': [],
768: 1:  'info': [],
768: 1:  'level': 19,
768: 1:  'questions': []
768: 1:}
768: 1:Scores: 80802
768: 1:Answer: message('StartNextLevel')
------------------------------------------
769: 1:BoardData {
769: 1:  'description': ['No more Levels. You win!'],
769: 1:  'history': [],
769: 1:  'info': [],
769: 1:  'level': 19,
769: 1:  'questions': []
769: 1:}
769: 1:Scores: 80802
769: 1:Answer: message('StartNextLevel')
------------------------------------------
770: 1:BoardData {
770: 1:  'description': ['No more Levels. You win!'],
770: 1:  'history': [],
770: 1:  'info': [],
770: 1:  'level': 19,
770: 1:  'questions': []
770: 1:}
770: 1:Scores: 80802
770: 1:Answer: message('StartNextLevel')
------------------------------------------
771: 1:BoardData {
771: 1:  'description': ['No more Levels. You win!'],
771: 1:  'history': [],
771: 1:  'info': [],
771: 1:  'level': 19,
771: 1:  'questions': []
771: 1:}
771: 1:Scores: 80802
771: 1:Answer: message('StartNextLevel')
------------------------------------------
772: 1:BoardData {
772: 1:  'description': ['No more Levels. You win!'],
772: 1:  'history': [],
772: 1:  'info': [],
772: 1:  'level': 19,
772: 1:  'questions': []
772: 1:}
772: 1:Scores: 80802
772: 1:Answer: message('StartNextLevel')
------------------------------------------
773: 1:BoardData {
773: 1:  'description': ['No more Levels. You win!'],
773: 1:  'history': [],
773: 1:  'info': [],
773: 1:  'level': 19,
773: 1:  'questions': []
773: 1:}
773: 1:Scores: 80802
773: 1:Answer: message('StartNextLevel')
------------------------------------------
774: 1:BoardData {
774: 1:  'description': ['No more Levels. You win!'],
774: 1:  'history': [],
774: 1:  'info': [],
774: 1:  'level': 19,
774: 1:  'questions': []
774: 1:}
774: 1:Scores: 80802
774: 1:Answer: message('StartNextLevel')
------------------------------------------
775: 1:BoardData {
775: 1:  'description': ['No more Levels. You win!'],
775: 1:  'history': [],
775: 1:  'info': [],
775: 1:  'level': 19,
775: 1:  'questions': []
775: 1:}
775: 1:Scores: 80802
775: 1:Answer: message('StartNextLevel')
------------------------------------------
776: 1:BoardData {
776: 1:  'description': ['No more Levels. You win!'],
776: 1:  'history': [],
776: 1:  'info': [],
776: 1:  'level': 19,
776: 1:  'questions': []
776: 1:}
776: 1:Scores: 80802
776: 1:Answer: message('StartNextLevel')
------------------------------------------
777: 1:BoardData {
777: 1:  'description': ['No more Levels. You win!'],
777: 1:  'history': [],
777: 1:  'info': [],
777: 1:  'level': 19,
777: 1:  'questions': []
777: 1:}
777: 1:Scores: 80802
777: 1:Answer: message('StartNextLevel')
------------------------------------------
778: 1:BoardData {
778: 1:  'description': ['No more Levels. You win!'],
778: 1:  'history': [],
778: 1:  'info': [],
778: 1:  'level': 19,
778: 1:  'questions': []
778: 1:}
778: 1:Scores: 80802
778: 1:Answer: message('StartNextLevel')
------------------------------------------
779: 1:BoardData {
779: 1:  'description': ['No more Levels. You win!'],
779: 1:  'history': [],
779: 1:  'info': [],
779: 1:  'level': 19,
779: 1:  'questions': []
779: 1:}
779: 1:Scores: 80802
779: 1:Answer: message('StartNextLevel')
------------------------------------------
780: 1:BoardData {
780: 1:  'description': ['No more Levels. You win!'],
780: 1:  'history': [],
780: 1:  'info': [],
780: 1:  'level': 19,
780: 1:  'questions': []
780: 1:}
780: 1:Scores: 80802
780: 1:Answer: message('StartNextLevel')
------------------------------------------
781: 1:BoardData {
781: 1:  'description': ['No more Levels. You win!'],
781: 1:  'history': [],
781: 1:  'info': [],
781: 1:  'level': 19,
781: 1:  'questions': []
781: 1:}
781: 1:Scores: 80802
781: 1:Answer: message('StartNextLevel')
------------------------------------------
782: 1:BoardData {
782: 1:  'description': ['No more Levels. You win!'],
782: 1:  'history': [],
782: 1:  'info': [],
782: 1:  'level': 19,
782: 1:  'questions': []
782: 1:}
782: 1:Scores: 80802
782: 1:Answer: message('StartNextLevel')
------------------------------------------
783: 1:BoardData {
783: 1:  'description': ['No more Levels. You win!'],
783: 1:  'history': [],
783: 1:  'info': [],
783: 1:  'level': 19,
783: 1:  'questions': []
783: 1:}
783: 1:Scores: 80802
783: 1:Answer: message('StartNextLevel')
------------------------------------------
784: 1:BoardData {
784: 1:  'description': ['No more Levels. You win!'],
784: 1:  'history': [],
784: 1:  'info': [],
784: 1:  'level': 19,
784: 1:  'questions': []
784: 1:}
784: 1:Scores: 80802
784: 1:Answer: message('StartNextLevel')
------------------------------------------
785: 1:BoardData {
785: 1:  'description': ['No more Levels. You win!'],
785: 1:  'history': [],
785: 1:  'info': [],
785: 1:  'level': 19,
785: 1:  'questions': []
785: 1:}
785: 1:Scores: 80802
785: 1:Answer: message('StartNextLevel')
------------------------------------------
786: 1:BoardData {
786: 1:  'description': ['No more Levels. You win!'],
786: 1:  'history': [],
786: 1:  'info': [],
786: 1:  'level': 19,
786: 1:  'questions': []
786: 1:}
786: 1:Scores: 80802
786: 1:Answer: message('StartNextLevel')
------------------------------------------
787: 1:BoardData {
787: 1:  'description': ['No more Levels. You win!'],
787: 1:  'history': [],
787: 1:  'info': [],
787: 1:  'level': 19,
787: 1:  'questions': []
787: 1:}
787: 1:Scores: 80802
787: 1:Answer: message('StartNextLevel')
------------------------------------------
788: 1:BoardData {
788: 1:  'description': ['No more Levels. You win!'],
788: 1:  'history': [],
788: 1:  'info': [],
788: 1:  'level': 19,
788: 1:  'questions': []
788: 1:}
788: 1:Scores: 80802
788: 1:Answer: message('StartNextLevel')
------------------------------------------
789: 1:BoardData {
789: 1:  'description': ['No more Levels. You win!'],
789: 1:  'history': [],
789: 1:  'info': [],
789: 1:  'level': 19,
789: 1:  'questions': []
789: 1:}
789: 1:Scores: 80802
789: 1:Answer: message('StartNextLevel')
------------------------------------------
790: 1:BoardData {
790: 1:  'description': ['No more Levels. You win!'],
790: 1:  'history': [],
790: 1:  'info': [],
790: 1:  'level': 19,
790: 1:  'questions': []
790: 1:}
790: 1:Scores: 80802
790: 1:Answer: message('StartNextLevel')
------------------------------------------
791: 1:BoardData {
791: 1:  'description': ['No more Levels. You win!'],
791: 1:  'history': [],
791: 1:  'info': [],
791: 1:  'level': 19,
791: 1:  'questions': []
791: 1:}
791: 1:Scores: 80802
791: 1:Answer: message('StartNextLevel')
------------------------------------------
792: 1:BoardData {
792: 1:  'description': ['No more Levels. You win!'],
792: 1:  'history': [],
792: 1:  'info': [],
792: 1:  'level': 19,
792: 1:  'questions': []
792: 1:}
792: 1:Scores: 80802
792: 1:Answer: message('StartNextLevel')
------------------------------------------
793: 1:BoardData {
793: 1:  'description': ['No more Levels. You win!'],
793: 1:  'history': [],
793: 1:  'info': [],
793: 1:  'level': 19,
793: 1:  'questions': []
793: 1:}
793: 1:Scores: 80802
793: 1:Answer: message('StartNextLevel')
------------------------------------------
794: 1:BoardData {
794: 1:  'description': ['No more Levels. You win!'],
794: 1:  'history': [],
794: 1:  'info': [],
794: 1:  'level': 19,
794: 1:  'questions': []
794: 1:}
794: 1:Scores: 80802
794: 1:Answer: message('StartNextLevel')
------------------------------------------
795: 1:BoardData {
795: 1:  'description': ['No more Levels. You win!'],
795: 1:  'history': [],
795: 1:  'info': [],
795: 1:  'level': 19,
795: 1:  'questions': []
795: 1:}
795: 1:Scores: 80802
795: 1:Answer: message('StartNextLevel')
------------------------------------------
796: 1:BoardData {
796: 1:  'description': ['No more Levels. You win!'],
796: 1:  'history': [],
796: 1:  'info': [],
796: 1:  'level': 19,
796: 1:  'questions': []
796: 1:}
796: 1:Scores: 80802
796: 1:Answer: message('StartNextLevel')
------------------------------------------
797: 1:BoardData {
797: 1:  'description': ['No more Levels. You win!'],
797: 1:  'history': [],
797: 1:  'info': [],
797: 1:  'level': 19,
797: 1:  'questions': []
797: 1:}
797: 1:Scores: 80802
797: 1:Answer: message('StartNextLevel')
------------------------------------------
798: 1:BoardData {
798: 1:  'description': ['No more Levels. You win!'],
798: 1:  'history': [],
798: 1:  'info': [],
798: 1:  'level': 19,
798: 1:  'questions': []
798: 1:}
798: 1:Scores: 80802
798: 1:Answer: message('StartNextLevel')
------------------------------------------
799: 1:BoardData {
799: 1:  'description': ['No more Levels. You win!'],
799: 1:  'history': [],
799: 1:  'info': [],
799: 1:  'level': 19,
799: 1:  'questions': []
799: 1:}
799: 1:Scores: 80802
799: 1:Answer: message('StartNextLevel')
------------------------------------------
800: 1:BoardData {
800: 1:  'description': ['No more Levels. You win!'],
800: 1:  'history': [],
800: 1:  'info': [],
800: 1:  'level': 19,
800: 1:  'questions': []
800: 1:}
800: 1:Scores: 80802
800: 1:Answer: message('StartNextLevel')
------------------------------------------
801: 1:BoardData {
801: 1:  'description': ['No more Levels. You win!'],
801: 1:  'history': [],
801: 1:  'info': [],
801: 1:  'level': 19,
801: 1:  'questions': []
801: 1:}
801: 1:Scores: 80802
801: 1:Answer: message('StartNextLevel')
------------------------------------------
802: 1:BoardData {
802: 1:  'description': ['No more Levels. You win!'],
802: 1:  'history': [],
802: 1:  'info': [],
802: 1:  'level': 19,
802: 1:  'questions': []
802: 1:}
802: 1:Scores: 80802
802: 1:Answer: message('StartNextLevel')
------------------------------------------
803: 1:BoardData {
803: 1:  'description': ['No more Levels. You win!'],
803: 1:  'history': [],
803: 1:  'info': [],
803: 1:  'level': 19,
803: 1:  'questions': []
803: 1:}
803: 1:Scores: 80802
803: 1:Answer: message('StartNextLevel')
------------------------------------------
804: 1:BoardData {
804: 1:  'description': ['No more Levels. You win!'],
804: 1:  'history': [],
804: 1:  'info': [],
804: 1:  'level': 19,
804: 1:  'questions': []
804: 1:}
804: 1:Scores: 80802
804: 1:Answer: message('StartNextLevel')
------------------------------------------
805: 1:BoardData {
805: 1:  'description': ['No more Levels. You win!'],
805: 1:  'history': [],
805: 1:  'info': [],
805: 1:  'level': 19,
805: 1:  'questions': []
805: 1:}
805: 1:Scores: 80802
805: 1:Answer: message('StartNextLevel')
------------------------------------------
806: 1:BoardData {
806: 1:  'description': ['No more Levels. You win!'],
806: 1:  'history': [],
806: 1:  'info': [],
806: 1:  'level': 19,
806: 1:  'questions': []
806: 1:}
806: 1:Scores: 80802
806: 1:Answer: message('StartNextLevel')
------------------------------------------
807: 1:BoardData {
807: 1:  'description': ['No more Levels. You win!'],
807: 1:  'history': [],
807: 1:  'info': [],
807: 1:  'level': 19,
807: 1:  'questions': []
807: 1:}
807: 1:Scores: 80802
807: 1:Answer: message('StartNextLevel')
------------------------------------------
808: 1:BoardData {
808: 1:  'description': ['No more Levels. You win!'],
808: 1:  'history': [],
808: 1:  'info': [],
808: 1:  'level': 19,
808: 1:  'questions': []
808: 1:}
808: 1:Scores: 80802
808: 1:Answer: message('StartNextLevel')
------------------------------------------
809: 1:BoardData {
809: 1:  'description': ['No more Levels. You win!'],
809: 1:  'history': [],
809: 1:  'info': [],
809: 1:  'level': 19,
809: 1:  'questions': []
809: 1:}
809: 1:Scores: 80802
809: 1:Answer: message('StartNextLevel')
------------------------------------------
810: 1:BoardData {
810: 1:  'description': ['No more Levels. You win!'],
810: 1:  'history': [],
810: 1:  'info': [],
810: 1:  'level': 19,
810: 1:  'questions': []
810: 1:}
810: 1:Scores: 80802
810: 1:Answer: message('StartNextLevel')
------------------------------------------
811: 1:BoardData {
811: 1:  'description': ['No more Levels. You win!'],
811: 1:  'history': [],
811: 1:  'info': [],
811: 1:  'level': 19,
811: 1:  'questions': []
811: 1:}
811: 1:Scores: 80802
811: 1:Answer: message('StartNextLevel')
------------------------------------------
812: 1:BoardData {
812: 1:  'description': ['No more Levels. You win!'],
812: 1:  'history': [],
812: 1:  'info': [],
812: 1:  'level': 19,
812: 1:  'questions': []
812: 1:}
812: 1:Scores: 80802
812: 1:Answer: message('StartNextLevel')
------------------------------------------
813: 1:BoardData {
813: 1:  'description': ['No more Levels. You win!'],
813: 1:  'history': [],
813: 1:  'info': [],
813: 1:  'level': 19,
813: 1:  'questions': []
813: 1:}
813: 1:Scores: 80802
813: 1:Answer: message('StartNextLevel')
------------------------------------------
814: 1:BoardData {
814: 1:  'description': ['No more Levels. You win!'],
814: 1:  'history': [],
814: 1:  'info': [],
814: 1:  'level': 19,
814: 1:  'questions': []
814: 1:}
814: 1:Scores: 80802
814: 1:Answer: message('StartNextLevel')
------------------------------------------
815: 1:BoardData {
815: 1:  'description': ['No more Levels. You win!'],
815: 1:  'history': [],
815: 1:  'info': [],
815: 1:  'level': 19,
815: 1:  'questions': []
815: 1:}
815: 1:Scores: 80802
815: 1:Answer: message('StartNextLevel')
------------------------------------------
816: 1:BoardData {
816: 1:  'description': ['No more Levels. You win!'],
816: 1:  'history': [],
816: 1:  'info': [],
816: 1:  'level': 19,
816: 1:  'questions': []
816: 1:}
816: 1:Scores: 80802
816: 1:Answer: message('StartNextLevel')
------------------------------------------
817: 1:BoardData {
817: 1:  'description': ['No more Levels. You win!'],
817: 1:  'history': [],
817: 1:  'info': [],
817: 1:  'level': 19,
817: 1:  'questions': []
817: 1:}
817: 1:Scores: 80802
817: 1:Answer: message('StartNextLevel')
------------------------------------------
818: 1:BoardData {
818: 1:  'description': ['No more Levels. You win!'],
818: 1:  'history': [],
818: 1:  'info': [],
818: 1:  'level': 19,
818: 1:  'questions': []
818: 1:}
818: 1:Scores: 80802
818: 1:Answer: message('StartNextLevel')
------------------------------------------
819: 1:BoardData {
819: 1:  'description': ['No more Levels. You win!'],
819: 1:  'history': [],
819: 1:  'info': [],
819: 1:  'level': 19,
819: 1:  'questions': []
819: 1:}
819: 1:Scores: 80802
819: 1:Answer: message('StartNextLevel')
------------------------------------------
820: 1:BoardData {
820: 1:  'description': ['No more Levels. You win!'],
820: 1:  'history': [],
820: 1:  'info': [],
820: 1:  'level': 19,
820: 1:  'questions': []
820: 1:}
820: 1:Scores: 80802
820: 1:Answer: message('StartNextLevel')
------------------------------------------
821: 1:BoardData {
821: 1:  'description': ['No more Levels. You win!'],
821: 1:  'history': [],
821: 1:  'info': [],
821: 1:  'level': 19,
821: 1:  'questions': []
821: 1:}
821: 1:Scores: 80802
821: 1:Answer: message('StartNextLevel')
------------------------------------------
822: 1:BoardData {
822: 1:  'description': ['No more Levels. You win!'],
822: 1:  'history': [],
822: 1:  'info': [],
822: 1:  'level': 19,
822: 1:  'questions': []
822: 1:}
822: 1:Scores: 80802
822: 1:Answer: message('StartNextLevel')
------------------------------------------
823: 1:BoardData {
823: 1:  'description': ['No more Levels. You win!'],
823: 1:  'history': [],
823: 1:  'info': [],
823: 1:  'level': 19,
823: 1:  'questions': []
823: 1:}
823: 1:Scores: 80802
823: 1:Answer: message('StartNextLevel')
------------------------------------------
824: 1:BoardData {
824: 1:  'description': ['No more Levels. You win!'],
824: 1:  'history': [],
824: 1:  'info': [],
824: 1:  'level': 19,
824: 1:  'questions': []
824: 1:}
824: 1:Scores: 80802
824: 1:Answer: message('StartNextLevel')
------------------------------------------
825: 1:BoardData {
825: 1:  'description': ['No more Levels. You win!'],
825: 1:  'history': [],
825: 1:  'info': [],
825: 1:  'level': 19,
825: 1:  'questions': []
825: 1:}
825: 1:Scores: 80802
825: 1:Answer: message('StartNextLevel')
------------------------------------------
826: 1:BoardData {
826: 1:  'description': ['No more Levels. You win!'],
826: 1:  'history': [],
826: 1:  'info': [],
826: 1:  'level': 19,
826: 1:  'questions': []
826: 1:}
826: 1:Scores: 80802
826: 1:Answer: message('StartNextLevel')
------------------------------------------
827: 1:BoardData {
827: 1:  'description': ['No more Levels. You win!'],
827: 1:  'history': [],
827: 1:  'info': [],
827: 1:  'level': 19,
827: 1:  'questions': []
827: 1:}
827: 1:Scores: 80802
827: 1:Answer: message('StartNextLevel')
------------------------------------------
828: 1:BoardData {
828: 1:  'description': ['No more Levels. You win!'],
828: 1:  'history': [],
828: 1:  'info': [],
828: 1:  'level': 19,
828: 1:  'questions': []
828: 1:}
828: 1:Scores: 80802
828: 1:Answer: message('StartNextLevel')
------------------------------------------
829: 1:BoardData {
829: 1:  'description': ['No more Levels. You win!'],
829: 1:  'history': [],
829: 1:  'info': [],
829: 1:  'level': 19,
829: 1:  'questions': []
829: 1:}
829: 1:Scores: 80802
829: 1:Answer: message('StartNextLevel')
------------------------------------------
830: 1:BoardData {
830: 1:  'description': ['No more Levels. You win!'],
830: 1:  'history': [],
830: 1:  'info': [],
830: 1:  'level': 19,
830: 1:  'questions': []
830: 1:}
830: 1:Scores: 80802
830: 1:Answer: message('StartNextLevel')
------------------------------------------
831: 1:BoardData {
831: 1:  'description': ['No more Levels. You win!'],
831: 1:  'history': [],
831: 1:  'info': [],
831: 1:  'level': 19,
831: 1:  'questions': []
831: 1:}
831: 1:Scores: 80802
831: 1:Answer: message('StartNextLevel')
------------------------------------------
832: 1:BoardData {
832: 1:  'description': ['No more Levels. You win!'],
832: 1:  'history': [],
832: 1:  'info': [],
832: 1:  'level': 19,
832: 1:  'questions': []
832: 1:}
832: 1:Scores: 80802
832: 1:Answer: message('StartNextLevel')
------------------------------------------
833: 1:BoardData {
833: 1:  'description': ['No more Levels. You win!'],
833: 1:  'history': [],
833: 1:  'info': [],
833: 1:  'level': 19,
833: 1:  'questions': []
833: 1:}
833: 1:Scores: 80802
833: 1:Answer: message('StartNextLevel')
------------------------------------------
834: 1:BoardData {
834: 1:  'description': ['No more Levels. You win!'],
834: 1:  'history': [],
834: 1:  'info': [],
834: 1:  'level': 19,
834: 1:  'questions': []
834: 1:}
834: 1:Scores: 80802
834: 1:Answer: message('StartNextLevel')
------------------------------------------
835: 1:BoardData {
835: 1:  'description': ['No more Levels. You win!'],
835: 1:  'history': [],
835: 1:  'info': [],
835: 1:  'level': 19,
835: 1:  'questions': []
835: 1:}
835: 1:Scores: 80802
835: 1:Answer: message('StartNextLevel')
------------------------------------------
836: 1:BoardData {
836: 1:  'description': ['No more Levels. You win!'],
836: 1:  'history': [],
836: 1:  'info': [],
836: 1:  'level': 19,
836: 1:  'questions': []
836: 1:}
836: 1:Scores: 80802
836: 1:Answer: message('StartNextLevel')
------------------------------------------
837: 1:BoardData {
837: 1:  'description': ['No more Levels. You win!'],
837: 1:  'history': [],
837: 1:  'info': [],
837: 1:  'level': 19,
837: 1:  'questions': []
837: 1:}
837: 1:Scores: 80802
837: 1:Answer: message('StartNextLevel')
------------------------------------------
838: 1:BoardData {
838: 1:  'description': ['No more Levels. You win!'],
838: 1:  'history': [],
838: 1:  'info': [],
838: 1:  'level': 19,
838: 1:  'questions': []
838: 1:}
838: 1:Scores: 80802
838: 1:Answer: message('StartNextLevel')
------------------------------------------
839: 1:BoardData {
839: 1:  'description': ['No more Levels. You win!'],
839: 1:  'history': [],
839: 1:  'info': [],
839: 1:  'level': 19,
839: 1:  'questions': []
839: 1:}
839: 1:Scores: 80802
839: 1:Answer: message('StartNextLevel')
------------------------------------------
840: 1:BoardData {
840: 1:  'description': ['No more Levels. You win!'],
840: 1:  'history': [],
840: 1:  'info': [],
840: 1:  'level': 19,
840: 1:  'questions': []
840: 1:}
840: 1:Scores: 80802
840: 1:Answer: message('StartNextLevel')
------------------------------------------
841: 1:BoardData {
841: 1:  'description': ['No more Levels. You win!'],
841: 1:  'history': [],
841: 1:  'info': [],
841: 1:  'level': 19,
841: 1:  'questions': []
841: 1:}
841: 1:Scores: 80802
841: 1:Answer: message('StartNextLevel')
------------------------------------------
842: 1:BoardData {
842: 1:  'description': ['No more Levels. You win!'],
842: 1:  'history': [],
842: 1:  'info': [],
842: 1:  'level': 19,
842: 1:  'questions': []
842: 1:}
842: 1:Scores: 80802
842: 1:Answer: message('StartNextLevel')
------------------------------------------
843: 1:BoardData {
843: 1:  'description': ['No more Levels. You win!'],
843: 1:  'history': [],
843: 1:  'info': [],
843: 1:  'level': 19,
843: 1:  'questions': []
843: 1:}
843: 1:Scores: 80802
843: 1:Answer: message('StartNextLevel')
------------------------------------------
844: 1:BoardData {
844: 1:  'description': ['No more Levels. You win!'],
844: 1:  'history': [],
844: 1:  'info': [],
844: 1:  'level': 19,
844: 1:  'questions': []
844: 1:}
844: 1:Scores: 80802
844: 1:Answer: message('StartNextLevel')
------------------------------------------
845: 1:BoardData {
845: 1:  'description': ['No more Levels. You win!'],
845: 1:  'history': [],
845: 1:  'info': [],
845: 1:  'level': 19,
845: 1:  'questions': []
845: 1:}
845: 1:Scores: 80802
845: 1:Answer: message('StartNextLevel')
------------------------------------------
846: 1:BoardData {
846: 1:  'description': ['No more Levels. You win!'],
846: 1:  'history': [],
846: 1:  'info': [],
846: 1:  'level': 19,
846: 1:  'questions': []
846: 1:}
846: 1:Scores: 80802
846: 1:Answer: message('StartNextLevel')
------------------------------------------
847: 1:BoardData {
847: 1:  'description': ['No more Levels. You win!'],
847: 1:  'history': [],
847: 1:  'info': [],
847: 1:  'level': 19,
847: 1:  'questions': []
847: 1:}
847: 1:Scores: 80802
847: 1:Answer: message('StartNextLevel')
------------------------------------------
848: 1:BoardData {
848: 1:  'description': ['No more Levels. You win!'],
848: 1:  'history': [],
848: 1:  'info': [],
848: 1:  'level': 19,
848: 1:  'questions': []
848: 1:}
848: 1:Scores: 80802
848: 1:Answer: message('StartNextLevel')
------------------------------------------
849: 1:BoardData {
849: 1:  'description': ['No more Levels. You win!'],
849: 1:  'history': [],
849: 1:  'info': [],
849: 1:  'level': 19,
849: 1:  'questions': []
849: 1:}
849: 1:Scores: 80802
849: 1:Answer: message('StartNextLevel')
------------------------------------------
850: 1:BoardData {
850: 1:  'description': ['No more Levels. You win!'],
850: 1:  'history': [],
850: 1:  'info': [],
850: 1:  'level': 19,
850: 1:  'questions': []
850: 1:}
850: 1:Scores: 80802
850: 1:Answer: message('StartNextLevel')
------------------------------------------
851: 1:BoardData {
851: 1:  'description': ['No more Levels. You win!'],
851: 1:  'history': [],
851: 1:  'info': [],
851: 1:  'level': 19,
851: 1:  'questions': []
851: 1:}
851: 1:Scores: 80802
851: 1:Answer: message('StartNextLevel')
------------------------------------------
852: 1:BoardData {
852: 1:  'description': ['No more Levels. You win!'],
852: 1:  'history': [],
852: 1:  'info': [],
852: 1:  'level': 19,
852: 1:  'questions': []
852: 1:}
852: 1:Scores: 80802
852: 1:Answer: message('StartNextLevel')
------------------------------------------
853: 1:BoardData {
853: 1:  'description': ['No more Levels. You win!'],
853: 1:  'history': [],
853: 1:  'info': [],
853: 1:  'level': 19,
853: 1:  'questions': []
853: 1:}
853: 1:Scores: 80802
853: 1:Answer: message('StartNextLevel')
------------------------------------------
854: 1:BoardData {
854: 1:  'description': ['No more Levels. You win!'],
854: 1:  'history': [],
854: 1:  'info': [],
854: 1:  'level': 19,
854: 1:  'questions': []
854: 1:}
854: 1:Scores: 80802
854: 1:Answer: message('StartNextLevel')
------------------------------------------
855: 1:BoardData {
855: 1:  'description': ['No more Levels. You win!'],
855: 1:  'history': [],
855: 1:  'info': [],
855: 1:  'level': 19,
855: 1:  'questions': []
855: 1:}
855: 1:Scores: 80802
855: 1:Answer: message('StartNextLevel')
------------------------------------------
856: 1:BoardData {
856: 1:  'description': ['No more Levels. You win!'],
856: 1:  'history': [],
856: 1:  'info': [],
856: 1:  'level': 19,
856: 1:  'questions': []
856: 1:}
856: 1:Scores: 80802
856: 1:Answer: message('StartNextLevel')
------------------------------------------
857: 1:BoardData {
857: 1:  'description': ['No more Levels. You win!'],
857: 1:  'history': [],
857: 1:  'info': [],
857: 1:  'level': 19,
857: 1:  'questions': []
857: 1:}
857: 1:Scores: 80802
857: 1:Answer: message('StartNextLevel')
------------------------------------------
858: 1:BoardData {
858: 1:  'description': ['No more Levels. You win!'],
858: 1:  'history': [],
858: 1:  'info': [],
858: 1:  'level': 19,
858: 1:  'questions': []
858: 1:}
858: 1:Scores: 80802
858: 1:Answer: message('StartNextLevel')
------------------------------------------
859: 1:BoardData {
859: 1:  'description': ['No more Levels. You win!'],
859: 1:  'history': [],
859: 1:  'info': [],
859: 1:  'level': 19,
859: 1:  'questions': []
859: 1:}
859: 1:Scores: 80802
859: 1:Answer: message('StartNextLevel')
------------------------------------------
860: 1:BoardData {
860: 1:  'description': ['No more Levels. You win!'],
860: 1:  'history': [],
860: 1:  'info': [],
860: 1:  'level': 19,
860: 1:  'questions': []
860: 1:}
860: 1:Scores: 80802
860: 1:Answer: message('StartNextLevel')
------------------------------------------
861: 1:BoardData {
861: 1:  'description': ['No more Levels. You win!'],
861: 1:  'history': [],
861: 1:  'info': [],
861: 1:  'level': 19,
861: 1:  'questions': []
861: 1:}
861: 1:Scores: 80802
861: 1:Answer: message('StartNextLevel')
------------------------------------------
862: 1:BoardData {
862: 1:  'description': ['No more Levels. You win!'],
862: 1:  'history': [],
862: 1:  'info': [],
862: 1:  'level': 19,
862: 1:  'questions': []
862: 1:}
862: 1:Scores: 80802
862: 1:Answer: message('StartNextLevel')
------------------------------------------
863: 1:BoardData {
863: 1:  'description': ['No more Levels. You win!'],
863: 1:  'history': [],
863: 1:  'info': [],
863: 1:  'level': 19,
863: 1:  'questions': []
863: 1:}
863: 1:Scores: 80802
863: 1:Answer: message('StartNextLevel')
------------------------------------------
864: 1:BoardData {
864: 1:  'description': ['No more Levels. You win!'],
864: 1:  'history': [],
864: 1:  'info': [],
864: 1:  'level': 19,
864: 1:  'questions': []
864: 1:}
864: 1:Scores: 80802
864: 1:Answer: message('StartNextLevel')
------------------------------------------
865: 1:BoardData {
865: 1:  'description': ['No more Levels. You win!'],
865: 1:  'history': [],
865: 1:  'info': [],
865: 1:  'level': 19,
865: 1:  'questions': []
865: 1:}
865: 1:Scores: 80802
865: 1:Answer: message('StartNextLevel')
------------------------------------------
866: 1:BoardData {
866: 1:  'description': ['No more Levels. You win!'],
866: 1:  'history': [],
866: 1:  'info': [],
866: 1:  'level': 19,
866: 1:  'questions': []
866: 1:}
866: 1:Scores: 80802
866: 1:Answer: message('StartNextLevel')
------------------------------------------
867: 1:BoardData {
867: 1:  'description': ['No more Levels. You win!'],
867: 1:  'history': [],
867: 1:  'info': [],
867: 1:  'level': 19,
867: 1:  'questions': []
867: 1:}
867: 1:Scores: 80802
867: 1:Answer: message('StartNextLevel')
------------------------------------------
868: 1:BoardData {
868: 1:  'description': ['No more Levels. You win!'],
868: 1:  'history': [],
868: 1:  'info': [],
868: 1:  'level': 19,
868: 1:  'questions': []
868: 1:}
868: 1:Scores: 80802
868: 1:Answer: message('StartNextLevel')
------------------------------------------
869: 1:BoardData {
869: 1:  'description': ['No more Levels. You win!'],
869: 1:  'history': [],
869: 1:  'info': [],
869: 1:  'level': 19,
869: 1:  'questions': []
869: 1:}
869: 1:Scores: 80802
869: 1:Answer: message('StartNextLevel')
------------------------------------------
870: 1:BoardData {
870: 1:  'description': ['No more Levels. You win!'],
870: 1:  'history': [],
870: 1:  'info': [],
870: 1:  'level': 19,
870: 1:  'questions': []
870: 1:}
870: 1:Scores: 80802
870: 1:Answer: message('StartNextLevel')
------------------------------------------
871: 1:BoardData {
871: 1:  'description': ['No more Levels. You win!'],
871: 1:  'history': [],
871: 1:  'info': [],
871: 1:  'level': 19,
871: 1:  'questions': []
871: 1:}
871: 1:Scores: 80802
871: 1:Answer: message('StartNextLevel')
------------------------------------------
872: 1:BoardData {
872: 1:  'description': ['No more Levels. You win!'],
872: 1:  'history': [],
872: 1:  'info': [],
872: 1:  'level': 19,
872: 1:  'questions': []
872: 1:}
872: 1:Scores: 80802
872: 1:Answer: message('StartNextLevel')
------------------------------------------
873: 1:BoardData {
873: 1:  'description': ['No more Levels. You win!'],
873: 1:  'history': [],
873: 1:  'info': [],
873: 1:  'level': 19,
873: 1:  'questions': []
873: 1:}
873: 1:Scores: 80802
873: 1:Answer: message('StartNextLevel')
------------------------------------------
874: 1:BoardData {
874: 1:  'description': ['No more Levels. You win!'],
874: 1:  'history': [],
874: 1:  'info': [],
874: 1:  'level': 19,
874: 1:  'questions': []
874: 1:}
874: 1:Scores: 80802
874: 1:Answer: message('StartNextLevel')
------------------------------------------
875: 1:BoardData {
875: 1:  'description': ['No more Levels. You win!'],
875: 1:  'history': [],
875: 1:  'info': [],
875: 1:  'level': 19,
875: 1:  'questions': []
875: 1:}
875: 1:Scores: 80802
875: 1:Answer: message('StartNextLevel')
------------------------------------------
876: 1:BoardData {
876: 1:  'description': ['No more Levels. You win!'],
876: 1:  'history': [],
876: 1:  'info': [],
876: 1:  'level': 19,
876: 1:  'questions': []
876: 1:}
876: 1:Scores: 80802
876: 1:Answer: message('StartNextLevel')
------------------------------------------
877: 1:BoardData {
877: 1:  'description': ['No more Levels. You win!'],
877: 1:  'history': [],
877: 1:  'info': [],
877: 1:  'level': 19,
877: 1:  'questions': []
877: 1:}
877: 1:Scores: 80802
877: 1:Answer: message('StartNextLevel')
------------------------------------------
878: 1:BoardData {
878: 1:  'description': ['No more Levels. You win!'],
878: 1:  'history': [],
878: 1:  'info': [],
878: 1:  'level': 19,
878: 1:  'questions': []
878: 1:}
878: 1:Scores: 80802
878: 1:Answer: message('StartNextLevel')
------------------------------------------
879: 1:BoardData {
879: 1:  'description': ['No more Levels. You win!'],
879: 1:  'history': [],
879: 1:  'info': [],
879: 1:  'level': 19,
879: 1:  'questions': []
879: 1:}
879: 1:Scores: 80802
879: 1:Answer: message('StartNextLevel')
------------------------------------------
880: 1:BoardData {
880: 1:  'description': ['No more Levels. You win!'],
880: 1:  'history': [],
880: 1:  'info': [],
880: 1:  'level': 19,
880: 1:  'questions': []
880: 1:}
880: 1:Scores: 80802
880: 1:Answer: message('StartNextLevel')
------------------------------------------
881: 1:BoardData {
881: 1:  'description': ['No more Levels. You win!'],
881: 1:  'history': [],
881: 1:  'info': [],
881: 1:  'level': 19,
881: 1:  'questions': []
881: 1:}
881: 1:Scores: 80802
881: 1:Answer: message('StartNextLevel')
------------------------------------------
882: 1:BoardData {
882: 1:  'description': ['No more Levels. You win!'],
882: 1:  'history': [],
882: 1:  'info': [],
882: 1:  'level': 19,
882: 1:  'questions': []
882: 1:}
882: 1:Scores: 80802
882: 1:Answer: message('StartNextLevel')
------------------------------------------
883: 1:BoardData {
883: 1:  'description': ['No more Levels. You win!'],
883: 1:  'history': [],
883: 1:  'info': [],
883: 1:  'level': 19,
883: 1:  'questions': []
883: 1:}
883: 1:Scores: 80802
883: 1:Answer: message('StartNextLevel')
------------------------------------------
884: 1:BoardData {
884: 1:  'description': ['No more Levels. You win!'],
884: 1:  'history': [],
884: 1:  'info': [],
884: 1:  'level': 19,
884: 1:  'questions': []
884: 1:}
884: 1:Scores: 80802
884: 1:Answer: message('StartNextLevel')
------------------------------------------
885: 1:BoardData {
885: 1:  'description': ['No more Levels. You win!'],
885: 1:  'history': [],
885: 1:  'info': [],
885: 1:  'level': 19,
885: 1:  'questions': []
885: 1:}
885: 1:Scores: 80802
885: 1:Answer: message('StartNextLevel')
------------------------------------------
886: 1:BoardData {
886: 1:  'description': ['No more Levels. You win!'],
886: 1:  'history': [],
886: 1:  'info': [],
886: 1:  'level': 19,
886: 1:  'questions': []
886: 1:}
886: 1:Scores: 80802
886: 1:Answer: message('StartNextLevel')
------------------------------------------
887: 1:BoardData {
887: 1:  'description': ['No more Levels. You win!'],
887: 1:  'history': [],
887: 1:  'info': [],
887: 1:  'level': 19,
887: 1:  'questions': []
887: 1:}
887: 1:Scores: 80802
887: 1:Answer: message('StartNextLevel')
------------------------------------------
888: 1:BoardData {
888: 1:  'description': ['No more Levels. You win!'],
888: 1:  'history': [],
888: 1:  'info': [],
888: 1:  'level': 19,
888: 1:  'questions': []
888: 1:}
888: 1:Scores: 80802
888: 1:Answer: message('StartNextLevel')
------------------------------------------
889: 1:BoardData {
889: 1:  'description': ['No more Levels. You win!'],
889: 1:  'history': [],
889: 1:  'info': [],
889: 1:  'level': 19,
889: 1:  'questions': []
889: 1:}
889: 1:Scores: 80802
889: 1:Answer: message('StartNextLevel')
------------------------------------------
890: 1:BoardData {
890: 1:  'description': ['No more Levels. You win!'],
890: 1:  'history': [],
890: 1:  'info': [],
890: 1:  'level': 19,
890: 1:  'questions': []
890: 1:}
890: 1:Scores: 80802
890: 1:Answer: message('StartNextLevel')
------------------------------------------
891: 1:BoardData {
891: 1:  'description': ['No more Levels. You win!'],
891: 1:  'history': [],
891: 1:  'info': [],
891: 1:  'level': 19,
891: 1:  'questions': []
891: 1:}
891: 1:Scores: 80802
891: 1:Answer: message('StartNextLevel')
------------------------------------------
892: 1:BoardData {
892: 1:  'description': ['No more Levels. You win!'],
892: 1:  'history': [],
892: 1:  'info': [],
892: 1:  'level': 19,
892: 1:  'questions': []
892: 1:}
892: 1:Scores: 80802
892: 1:Answer: message('StartNextLevel')
------------------------------------------
893: 1:BoardData {
893: 1:  'description': ['No more Levels. You win!'],
893: 1:  'history': [],
893: 1:  'info': [],
893: 1:  'level': 19,
893: 1:  'questions': []
893: 1:}
893: 1:Scores: 80802
893: 1:Answer: message('StartNextLevel')
------------------------------------------
894: 1:BoardData {
894: 1:  'description': ['No more Levels. You win!'],
894: 1:  'history': [],
894: 1:  'info': [],
894: 1:  'level': 19,
894: 1:  'questions': []
894: 1:}
894: 1:Scores: 80802
894: 1:Answer: message('StartNextLevel')
------------------------------------------
895: 1:BoardData {
895: 1:  'description': ['No more Levels. You win!'],
895: 1:  'history': [],
895: 1:  'info': [],
895: 1:  'level': 19,
895: 1:  'questions': []
895: 1:}
895: 1:Scores: 80802
895: 1:Answer: message('StartNextLevel')
------------------------------------------
896: 1:BoardData {
896: 1:  'description': ['No more Levels. You win!'],
896: 1:  'history': [],
896: 1:  'info': [],
896: 1:  'level': 19,
896: 1:  'questions': []
896: 1:}
896: 1:Scores: 80802
896: 1:Answer: message('StartNextLevel')
------------------------------------------
897: 1:BoardData {
897: 1:  'description': ['No more Levels. You win!'],
897: 1:  'history': [],
897: 1:  'info': [],
897: 1:  'level': 19,
897: 1:  'questions': []
897: 1:}
897: 1:Scores: 80802
897: 1:Answer: message('StartNextLevel')
------------------------------------------
898: 1:BoardData {
898: 1:  'description': ['No more Levels. You win!'],
898: 1:  'history': [],
898: 1:  'info': [],
898: 1:  'level': 19,
898: 1:  'questions': []
898: 1:}
898: 1:Scores: 80802
898: 1:Answer: message('StartNextLevel')
------------------------------------------
899: 1:BoardData {
899: 1:  'description': ['No more Levels. You win!'],
899: 1:  'history': [],
899: 1:  'info': [],
899: 1:  'level': 19,
899: 1:  'questions': []
899: 1:}
899: 1:Scores: 80802
899: 1:Answer: message('StartNextLevel')
------------------------------------------
900: 1:BoardData {
900: 1:  'description': ['No more Levels. You win!'],
900: 1:  'history': [],
900: 1:  'info': [],
900: 1:  'level': 19,
900: 1:  'questions': []
900: 1:}
900: 1:Scores: 80802
900: 1:Answer: message('StartNextLevel')
------------------------------------------
901: 1:BoardData {
901: 1:  'description': ['No more Levels. You win!'],
901: 1:  'history': [],
901: 1:  'info': [],
901: 1:  'level': 19,
901: 1:  'questions': []
901: 1:}
901: 1:Scores: 80802
901: 1:Answer: message('StartNextLevel')
------------------------------------------
902: 1:BoardData {
902: 1:  'description': ['No more Levels. You win!'],
902: 1:  'history': [],
902: 1:  'info': [],
902: 1:  'level': 19,
902: 1:  'questions': []
902: 1:}
902: 1:Scores: 80802
902: 1:Answer: message('StartNextLevel')
------------------------------------------
903: 1:BoardData {
903: 1:  'description': ['No more Levels. You win!'],
903: 1:  'history': [],
903: 1:  'info': [],
903: 1:  'level': 19,
903: 1:  'questions': []
903: 1:}
903: 1:Scores: 80802
903: 1:Answer: message('StartNextLevel')
------------------------------------------
904: 1:BoardData {
904: 1:  'description': ['No more Levels. You win!'],
904: 1:  'history': [],
904: 1:  'info': [],
904: 1:  'level': 19,
904: 1:  'questions': []
904: 1:}
904: 1:Scores: 80802
904: 1:Answer: message('StartNextLevel')
------------------------------------------
905: 1:BoardData {
905: 1:  'description': ['No more Levels. You win!'],
905: 1:  'history': [],
905: 1:  'info': [],
905: 1:  'level': 19,
905: 1:  'questions': []
905: 1:}
905: 1:Scores: 80802
905: 1:Answer: message('StartNextLevel')
------------------------------------------
906: 1:BoardData {
906: 1:  'description': ['No more Levels. You win!'],
906: 1:  'history': [],
906: 1:  'info': [],
906: 1:  'level': 19,
906: 1:  'questions': []
906: 1:}
906: 1:Scores: 80802
906: 1:Answer: message('StartNextLevel')
------------------------------------------
907: 1:BoardData {
907: 1:  'description': ['No more Levels. You win!'],
907: 1:  'history': [],
907: 1:  'info': [],
907: 1:  'level': 19,
907: 1:  'questions': []
907: 1:}
907: 1:Scores: 80802
907: 1:Answer: message('StartNextLevel')
------------------------------------------
908: 1:BoardData {
908: 1:  'description': ['No more Levels. You win!'],
908: 1:  'history': [],
908: 1:  'info': [],
908: 1:  'level': 19,
908: 1:  'questions': []
908: 1:}
908: 1:Scores: 80802
908: 1:Answer: message('StartNextLevel')
------------------------------------------
909: 1:BoardData {
909: 1:  'description': ['No more Levels. You win!'],
909: 1:  'history': [],
909: 1:  'info': [],
909: 1:  'level': 19,
909: 1:  'questions': []
909: 1:}
909: 1:Scores: 80802
909: 1:Answer: message('StartNextLevel')
------------------------------------------
910: 1:BoardData {
910: 1:  'description': ['No more Levels. You win!'],
910: 1:  'history': [],
910: 1:  'info': [],
910: 1:  'level': 19,
910: 1:  'questions': []
910: 1:}
910: 1:Scores: 80802
910: 1:Answer: message('StartNextLevel')
------------------------------------------
911: 1:BoardData {
911: 1:  'description': ['No more Levels. You win!'],
911: 1:  'history': [],
911: 1:  'info': [],
911: 1:  'level': 19,
911: 1:  'questions': []
911: 1:}
911: 1:Scores: 80802
911: 1:Answer: message('StartNextLevel')
------------------------------------------
912: 1:BoardData {
912: 1:  'description': ['No more Levels. You win!'],
912: 1:  'history': [],
912: 1:  'info': [],
912: 1:  'level': 19,
912: 1:  'questions': []
912: 1:}
912: 1:Scores: 80802
912: 1:Answer: message('StartNextLevel')
------------------------------------------
913: 1:BoardData {
913: 1:  'description': ['No more Levels. You win!'],
913: 1:  'history': [],
913: 1:  'info': [],
913: 1:  'level': 19,
913: 1:  'questions': []
913: 1:}
913: 1:Scores: 80802
913: 1:Answer: message('StartNextLevel')
------------------------------------------
914: 1:BoardData {
914: 1:  'description': ['No more Levels. You win!'],
914: 1:  'history': [],
914: 1:  'info': [],
914: 1:  'level': 19,
914: 1:  'questions': []
914: 1:}
914: 1:Scores: 80802
914: 1:Answer: message('StartNextLevel')
------------------------------------------
915: 1:BoardData {
915: 1:  'description': ['No more Levels. You win!'],
915: 1:  'history': [],
915: 1:  'info': [],
915: 1:  'level': 19,
915: 1:  'questions': []
915: 1:}
915: 1:Scores: 80802
915: 1:Answer: message('StartNextLevel')
------------------------------------------
916: 1:BoardData {
916: 1:  'description': ['No more Levels. You win!'],
916: 1:  'history': [],
916: 1:  'info': [],
916: 1:  'level': 19,
916: 1:  'questions': []
916: 1:}
916: 1:Scores: 80802
916: 1:Answer: message('StartNextLevel')
------------------------------------------
917: 1:BoardData {
917: 1:  'description': ['No more Levels. You win!'],
917: 1:  'history': [],
917: 1:  'info': [],
917: 1:  'level': 19,
917: 1:  'questions': []
917: 1:}
917: 1:Scores: 80802
917: 1:Answer: message('StartNextLevel')
------------------------------------------
918: 1:BoardData {
918: 1:  'description': ['No more Levels. You win!'],
918: 1:  'history': [],
918: 1:  'info': [],
918: 1:  'level': 19,
918: 1:  'questions': []
918: 1:}
918: 1:Scores: 80802
918: 1:Answer: message('StartNextLevel')
------------------------------------------
919: 1:BoardData {
919: 1:  'description': ['No more Levels. You win!'],
919: 1:  'history': [],
919: 1:  'info': [],
919: 1:  'level': 19,
919: 1:  'questions': []
919: 1:}
919: 1:Scores: 80802
919: 1:Answer: message('StartNextLevel')
------------------------------------------
920: 1:BoardData {
920: 1:  'description': ['No more Levels. You win!'],
920: 1:  'history': [],
920: 1:  'info': [],
920: 1:  'level': 19,
920: 1:  'questions': []
920: 1:}
920: 1:Scores: 80802
920: 1:Answer: message('StartNextLevel')
------------------------------------------
921: 1:BoardData {
921: 1:  'description': ['No more Levels. You win!'],
921: 1:  'history': [],
921: 1:  'info': [],
921: 1:  'level': 19,
921: 1:  'questions': []
921: 1:}
921: 1:Scores: 80802
921: 1:Answer: message('StartNextLevel')
------------------------------------------
922: 1:BoardData {
922: 1:  'description': ['No more Levels. You win!'],
922: 1:  'history': [],
922: 1:  'info': [],
922: 1:  'level': 19,
922: 1:  'questions': []
922: 1:}
922: 1:Scores: 80802
922: 1:Answer: message('StartNextLevel')
------------------------------------------
923: 1:BoardData {
923: 1:  'description': ['No more Levels. You win!'],
923: 1:  'history': [],
923: 1:  'info': [],
923: 1:  'level': 19,
923: 1:  'questions': []
923: 1:}
923: 1:Scores: 80802
923: 1:Answer: message('StartNextLevel')
------------------------------------------
924: 1:BoardData {
924: 1:  'description': ['No more Levels. You win!'],
924: 1:  'history': [],
924: 1:  'info': [],
924: 1:  'level': 19,
924: 1:  'questions': []
924: 1:}
924: 1:Scores: 80802
924: 1:Answer: message('StartNextLevel')
------------------------------------------
925: 1:BoardData {
925: 1:  'description': ['No more Levels. You win!'],
925: 1:  'history': [],
925: 1:  'info': [],
925: 1:  'level': 19,
925: 1:  'questions': []
925: 1:}
925: 1:Scores: 80802
925: 1:Answer: message('StartNextLevel')
------------------------------------------
926: 1:BoardData {
926: 1:  'description': ['No more Levels. You win!'],
926: 1:  'history': [],
926: 1:  'info': [],
926: 1:  'level': 19,
926: 1:  'questions': []
926: 1:}
926: 1:Scores: 80802
926: 1:Answer: message('StartNextLevel')
------------------------------------------
927: 1:BoardData {
927: 1:  'description': ['No more Levels. You win!'],
927: 1:  'history': [],
927: 1:  'info': [],
927: 1:  'level': 19,
927: 1:  'questions': []
927: 1:}
927: 1:Scores: 80802
927: 1:Answer: message('StartNextLevel')
------------------------------------------
928: 1:BoardData {
928: 1:  'description': ['No more Levels. You win!'],
928: 1:  'history': [],
928: 1:  'info': [],
928: 1:  'level': 19,
928: 1:  'questions': []
928: 1:}
928: 1:Scores: 80802
928: 1:Answer: message('StartNextLevel')
------------------------------------------
929: 1:BoardData {
929: 1:  'description': ['No more Levels. You win!'],
929: 1:  'history': [],
929: 1:  'info': [],
929: 1:  'level': 19,
929: 1:  'questions': []
929: 1:}
929: 1:Scores: 80802
929: 1:Answer: message('StartNextLevel')
------------------------------------------
930: 1:BoardData {
930: 1:  'description': ['No more Levels. You win!'],
930: 1:  'history': [],
930: 1:  'info': [],
930: 1:  'level': 19,
930: 1:  'questions': []
930: 1:}
930: 1:Scores: 80802
930: 1:Answer: message('StartNextLevel')
------------------------------------------
931: 1:BoardData {
931: 1:  'description': ['No more Levels. You win!'],
931: 1:  'history': [],
931: 1:  'info': [],
931: 1:  'level': 19,
931: 1:  'questions': []
931: 1:}
931: 1:Scores: 80802
931: 1:Answer: message('StartNextLevel')
------------------------------------------
932: 1:BoardData {
932: 1:  'description': ['No more Levels. You win!'],
932: 1:  'history': [],
932: 1:  'info': [],
932: 1:  'level': 19,
932: 1:  'questions': []
932: 1:}
932: 1:Scores: 80802
932: 1:Answer: message('StartNextLevel')
------------------------------------------
933: 1:BoardData {
933: 1:  'description': ['No more Levels. You win!'],
933: 1:  'history': [],
933: 1:  'info': [],
933: 1:  'level': 19,
933: 1:  'questions': []
933: 1:}
933: 1:Scores: 80802
933: 1:Answer: message('StartNextLevel')
------------------------------------------
934: 1:BoardData {
934: 1:  'description': ['No more Levels. You win!'],
934: 1:  'history': [],
934: 1:  'info': [],
934: 1:  'level': 19,
934: 1:  'questions': []
934: 1:}
934: 1:Scores: 80802
934: 1:Answer: message('StartNextLevel')
------------------------------------------
935: 1:BoardData {
935: 1:  'description': ['No more Levels. You win!'],
935: 1:  'history': [],
935: 1:  'info': [],
935: 1:  'level': 19,
935: 1:  'questions': []
935: 1:}
935: 1:Scores: 80802
935: 1:Answer: message('StartNextLevel')
------------------------------------------
936: 1:BoardData {
936: 1:  'description': ['No more Levels. You win!'],
936: 1:  'history': [],
936: 1:  'info': [],
936: 1:  'level': 19,
936: 1:  'questions': []
936: 1:}
936: 1:Scores: 80802
936: 1:Answer: message('StartNextLevel')
------------------------------------------
937: 1:BoardData {
937: 1:  'description': ['No more Levels. You win!'],
937: 1:  'history': [],
937: 1:  'info': [],
937: 1:  'level': 19,
937: 1:  'questions': []
937: 1:}
937: 1:Scores: 80802
937: 1:Answer: message('StartNextLevel')
------------------------------------------
938: 1:BoardData {
938: 1:  'description': ['No more Levels. You win!'],
938: 1:  'history': [],
938: 1:  'info': [],
938: 1:  'level': 19,
938: 1:  'questions': []
938: 1:}
938: 1:Scores: 80802
938: 1:Answer: message('StartNextLevel')
------------------------------------------
939: 1:BoardData {
939: 1:  'description': ['No more Levels. You win!'],
939: 1:  'history': [],
939: 1:  'info': [],
939: 1:  'level': 19,
939: 1:  'questions': []
939: 1:}
939: 1:Scores: 80802
939: 1:Answer: message('StartNextLevel')
------------------------------------------
940: 1:BoardData {
940: 1:  'description': ['No more Levels. You win!'],
940: 1:  'history': [],
940: 1:  'info': [],
940: 1:  'level': 19,
940: 1:  'questions': []
940: 1:}
940: 1:Scores: 80802
940: 1:Answer: message('StartNextLevel')
------------------------------------------
941: 1:BoardData {
941: 1:  'description': ['No more Levels. You win!'],
941: 1:  'history': [],
941: 1:  'info': [],
941: 1:  'level': 19,
941: 1:  'questions': []
941: 1:}
941: 1:Scores: 80802
941: 1:Answer: message('StartNextLevel')
------------------------------------------
942: 1:BoardData {
942: 1:  'description': ['No more Levels. You win!'],
942: 1:  'history': [],
942: 1:  'info': [],
942: 1:  'level': 19,
942: 1:  'questions': []
942: 1:}
942: 1:Scores: 80802
942: 1:Answer: message('StartNextLevel')
------------------------------------------
943: 1:BoardData {
943: 1:  'description': ['No more Levels. You win!'],
943: 1:  'history': [],
943: 1:  'info': [],
943: 1:  'level': 19,
943: 1:  'questions': []
943: 1:}
943: 1:Scores: 80802
943: 1:Answer: message('StartNextLevel')
------------------------------------------
944: 1:BoardData {
944: 1:  'description': ['No more Levels. You win!'],
944: 1:  'history': [],
944: 1:  'info': [],
944: 1:  'level': 19,
944: 1:  'questions': []
944: 1:}
944: 1:Scores: 80802
944: 1:Answer: message('StartNextLevel')
------------------------------------------
945: 1:BoardData {
945: 1:  'description': ['No more Levels. You win!'],
945: 1:  'history': [],
945: 1:  'info': [],
945: 1:  'level': 19,
945: 1:  'questions': []
945: 1:}
945: 1:Scores: 80802
945: 1:Answer: message('StartNextLevel')
------------------------------------------
946: 1:BoardData {
946: 1:  'description': ['No more Levels. You win!'],
946: 1:  'history': [],
946: 1:  'info': [],
946: 1:  'level': 19,
946: 1:  'questions': []
946: 1:}
946: 1:Scores: 80802
946: 1:Answer: message('StartNextLevel')
------------------------------------------
947: 1:BoardData {
947: 1:  'description': ['No more Levels. You win!'],
947: 1:  'history': [],
947: 1:  'info': [],
947: 1:  'level': 19,
947: 1:  'questions': []
947: 1:}
947: 1:Scores: 80802
947: 1:Answer: message('StartNextLevel')
------------------------------------------
948: 1:BoardData {
948: 1:  'description': ['No more Levels. You win!'],
948: 1:  'history': [],
948: 1:  'info': [],
948: 1:  'level': 19,
948: 1:  'questions': []
948: 1:}
948: 1:Scores: 80802
948: 1:Answer: message('StartNextLevel')
------------------------------------------
949: 1:BoardData {
949: 1:  'description': ['No more Levels. You win!'],
949: 1:  'history': [],
949: 1:  'info': [],
949: 1:  'level': 19,
949: 1:  'questions': []
949: 1:}
949: 1:Scores: 80802
949: 1:Answer: message('StartNextLevel')
------------------------------------------
950: 1:BoardData {
950: 1:  'description': ['No more Levels. You win!'],
950: 1:  'history': [],
950: 1:  'info': [],
950: 1:  'level': 19,
950: 1:  'questions': []
950: 1:}
950: 1:Scores: 80802
950: 1:Answer: message('StartNextLevel')
------------------------------------------
951: 1:BoardData {
951: 1:  'description': ['No more Levels. You win!'],
951: 1:  'history': [],
951: 1:  'info': [],
951: 1:  'level': 19,
951: 1:  'questions': []
951: 1:}
951: 1:Scores: 80802
951: 1:Answer: message('StartNextLevel')
------------------------------------------
952: 1:BoardData {
952: 1:  'description': ['No more Levels. You win!'],
952: 1:  'history': [],
952: 1:  'info': [],
952: 1:  'level': 19,
952: 1:  'questions': []
952: 1:}
952: 1:Scores: 80802
952: 1:Answer: message('StartNextLevel')
------------------------------------------
953: 1:BoardData {
953: 1:  'description': ['No more Levels. You win!'],
953: 1:  'history': [],
953: 1:  'info': [],
953: 1:  'level': 19,
953: 1:  'questions': []
953: 1:}
953: 1:Scores: 80802
953: 1:Answer: message('StartNextLevel')
------------------------------------------
954: 1:BoardData {
954: 1:  'description': ['No more Levels. You win!'],
954: 1:  'history': [],
954: 1:  'info': [],
954: 1:  'level': 19,
954: 1:  'questions': []
954: 1:}
954: 1:Scores: 80802
954: 1:Answer: message('StartNextLevel')
------------------------------------------
955: 1:BoardData {
955: 1:  'description': ['No more Levels. You win!'],
955: 1:  'history': [],
955: 1:  'info': [],
955: 1:  'level': 19,
955: 1:  'questions': []
955: 1:}
955: 1:Scores: 80802
955: 1:Answer: message('StartNextLevel')
------------------------------------------
956: 1:BoardData {
956: 1:  'description': ['No more Levels. You win!'],
956: 1:  'history': [],
956: 1:  'info': [],
956: 1:  'level': 19,
956: 1:  'questions': []
956: 1:}
956: 1:Scores: 80802
956: 1:Answer: message('StartNextLevel')
------------------------------------------
957: 1:BoardData {
957: 1:  'description': ['No more Levels. You win!'],
957: 1:  'history': [],
957: 1:  'info': [],
957: 1:  'level': 19,
957: 1:  'questions': []
957: 1:}
957: 1:Scores: 80802
957: 1:Answer: message('StartNextLevel')
------------------------------------------
958: 1:BoardData {
958: 1:  'description': ['No more Levels. You win!'],
958: 1:  'history': [],
958: 1:  'info': [],
958: 1:  'level': 19,
958: 1:  'questions': []
958: 1:}
958: 1:Scores: 80802
958: 1:Answer: message('StartNextLevel')
------------------------------------------
959: 1:BoardData {
959: 1:  'description': ['No more Levels. You win!'],
959: 1:  'history': [],
959: 1:  'info': [],
959: 1:  'level': 19,
959: 1:  'questions': []
959: 1:}
959: 1:Scores: 80802
959: 1:Answer: message('StartNextLevel')
------------------------------------------
960: 1:BoardData {
960: 1:  'description': ['No more Levels. You win!'],
960: 1:  'history': [],
960: 1:  'info': [],
960: 1:  'level': 19,
960: 1:  'questions': []
960: 1:}
960: 1:Scores: 80802
960: 1:Answer: message('StartNextLevel')
------------------------------------------
961: 1:BoardData {
961: 1:  'description': ['No more Levels. You win!'],
961: 1:  'history': [],
961: 1:  'info': [],
961: 1:  'level': 19,
961: 1:  'questions': []
961: 1:}
961: 1:Scores: 80802
961: 1:Answer: message('StartNextLevel')
------------------------------------------
962: 1:BoardData {
962: 1:  'description': ['No more Levels. You win!'],
962: 1:  'history': [],
962: 1:  'info': [],
962: 1:  'level': 19,
962: 1:  'questions': []
962: 1:}
962: 1:Scores: 80802
962: 1:Answer: message('StartNextLevel')
------------------------------------------
963: 1:BoardData {
963: 1:  'description': ['No more Levels. You win!'],
963: 1:  'history': [],
963: 1:  'info': [],
963: 1:  'level': 19,
963: 1:  'questions': []
963: 1:}
963: 1:Scores: 80802
963: 1:Answer: message('StartNextLevel')
------------------------------------------
964: 1:BoardData {
964: 1:  'description': ['No more Levels. You win!'],
964: 1:  'history': [],
964: 1:  'info': [],
964: 1:  'level': 19,
964: 1:  'questions': []
964: 1:}
964: 1:Scores: 80802
964: 1:Answer: message('StartNextLevel')
------------------------------------------
965: 1:BoardData {
965: 1:  'description': ['No more Levels. You win!'],
965: 1:  'history': [],
965: 1:  'info': [],
965: 1:  'level': 19,
965: 1:  'questions': []
965: 1:}
965: 1:Scores: 80802
965: 1:Answer: message('StartNextLevel')
------------------------------------------
966: 1:BoardData {
966: 1:  'description': ['No more Levels. You win!'],
966: 1:  'history': [],
966: 1:  'info': [],
966: 1:  'level': 19,
966: 1:  'questions': []
966: 1:}
966: 1:Scores: 80802
966: 1:Answer: message('StartNextLevel')
------------------------------------------
967: 1:BoardData {
967: 1:  'description': ['No more Levels. You win!'],
967: 1:  'history': [],
967: 1:  'info': [],
967: 1:  'level': 19,
967: 1:  'questions': []
967: 1:}
967: 1:Scores: 80802
967: 1:Answer: message('StartNextLevel')
------------------------------------------
968: 1:BoardData {
968: 1:  'description': ['No more Levels. You win!'],
968: 1:  'history': [],
968: 1:  'info': [],
968: 1:  'level': 19,
968: 1:  'questions': []
968: 1:}
968: 1:Scores: 80802
968: 1:Answer: message('StartNextLevel')
------------------------------------------
969: 1:BoardData {
969: 1:  'description': ['No more Levels. You win!'],
969: 1:  'history': [],
969: 1:  'info': [],
969: 1:  'level': 19,
969: 1:  'questions': []
969: 1:}
969: 1:Scores: 80802
969: 1:Answer: message('StartNextLevel')
------------------------------------------
970: 1:BoardData {
970: 1:  'description': ['No more Levels. You win!'],
970: 1:  'history': [],
970: 1:  'info': [],
970: 1:  'level': 19,
970: 1:  'questions': []
970: 1:}
970: 1:Scores: 80802
970: 1:Answer: message('StartNextLevel')
------------------------------------------
971: 1:BoardData {
971: 1:  'description': ['No more Levels. You win!'],
971: 1:  'history': [],
971: 1:  'info': [],
971: 1:  'level': 19,
971: 1:  'questions': []
971: 1:}
971: 1:Scores: 80802
971: 1:Answer: message('StartNextLevel')
------------------------------------------
972: 1:BoardData {
972: 1:  'description': ['No more Levels. You win!'],
972: 1:  'history': [],
972: 1:  'info': [],
972: 1:  'level': 19,
972: 1:  'questions': []
972: 1:}
972: 1:Scores: 80802
972: 1:Answer: message('StartNextLevel')
------------------------------------------
973: 1:BoardData {
973: 1:  'description': ['No more Levels. You win!'],
973: 1:  'history': [],
973: 1:  'info': [],
973: 1:  'level': 19,
973: 1:  'questions': []
973: 1:}
973: 1:Scores: 80802
973: 1:Answer: message('StartNextLevel')
------------------------------------------
974: 1:BoardData {
974: 1:  'description': ['No more Levels. You win!'],
974: 1:  'history': [],
974: 1:  'info': [],
974: 1:  'level': 19,
974: 1:  'questions': []
974: 1:}
974: 1:Scores: 80802
974: 1:Answer: message('StartNextLevel')
------------------------------------------
975: 1:BoardData {
975: 1:  'description': ['No more Levels. You win!'],
975: 1:  'history': [],
975: 1:  'info': [],
975: 1:  'level': 19,
975: 1:  'questions': []
975: 1:}
975: 1:Scores: 80802
975: 1:Answer: message('StartNextLevel')
------------------------------------------
976: 1:BoardData {
976: 1:  'description': ['No more Levels. You win!'],
976: 1:  'history': [],
976: 1:  'info': [],
976: 1:  'level': 19,
976: 1:  'questions': []
976: 1:}
976: 1:Scores: 80802
976: 1:Answer: message('StartNextLevel')
------------------------------------------
977: 1:BoardData {
977: 1:  'description': ['No more Levels. You win!'],
977: 1:  'history': [],
977: 1:  'info': [],
977: 1:  'level': 19,
977: 1:  'questions': []
977: 1:}
977: 1:Scores: 80802
977: 1:Answer: message('StartNextLevel')
------------------------------------------
978: 1:BoardData {
978: 1:  'description': ['No more Levels. You win!'],
978: 1:  'history': [],
978: 1:  'info': [],
978: 1:  'level': 19,
978: 1:  'questions': []
978: 1:}
978: 1:Scores: 80802
978: 1:Answer: message('StartNextLevel')
------------------------------------------
979: 1:BoardData {
979: 1:  'description': ['No more Levels. You win!'],
979: 1:  'history': [],
979: 1:  'info': [],
979: 1:  'level': 19,
979: 1:  'questions': []
979: 1:}
979: 1:Scores: 80802
979: 1:Answer: message('StartNextLevel')
------------------------------------------
980: 1:BoardData {
980: 1:  'description': ['No more Levels. You win!'],
980: 1:  'history': [],
980: 1:  'info': [],
980: 1:  'level': 19,
980: 1:  'questions': []
980: 1:}
980: 1:Scores: 80802
980: 1:Answer: message('StartNextLevel')
------------------------------------------
981: 1:BoardData {
981: 1:  'description': ['No more Levels. You win!'],
981: 1:  'history': [],
981: 1:  'info': [],
981: 1:  'level': 19,
981: 1:  'questions': []
981: 1:}
981: 1:Scores: 80802
981: 1:Answer: message('StartNextLevel')
------------------------------------------
982: 1:BoardData {
982: 1:  'description': ['No more Levels. You win!'],
982: 1:  'history': [],
982: 1:  'info': [],
982: 1:  'level': 19,
982: 1:  'questions': []
982: 1:}
982: 1:Scores: 80802
982: 1:Answer: message('StartNextLevel')
------------------------------------------
983: 1:BoardData {
983: 1:  'description': ['No more Levels. You win!'],
983: 1:  'history': [],
983: 1:  'info': [],
983: 1:  'level': 19,
983: 1:  'questions': []
983: 1:}
983: 1:Scores: 80802
983: 1:Answer: message('StartNextLevel')
------------------------------------------
984: 1:BoardData {
984: 1:  'description': ['No more Levels. You win!'],
984: 1:  'history': [],
984: 1:  'info': [],
984: 1:  'level': 19,
984: 1:  'questions': []
984: 1:}
984: 1:Scores: 80802
984: 1:Answer: message('StartNextLevel')
------------------------------------------
985: 1:BoardData {
985: 1:  'description': ['No more Levels. You win!'],
985: 1:  'history': [],
985: 1:  'info': [],
985: 1:  'level': 19,
985: 1:  'questions': []
985: 1:}
985: 1:Scores: 80802
985: 1:Answer: message('StartNextLevel')
------------------------------------------
986: 1:BoardData {
986: 1:  'description': ['No more Levels. You win!'],
986: 1:  'history': [],
986: 1:  'info': [],
986: 1:  'level': 19,
986: 1:  'questions': []
986: 1:}
986: 1:Scores: 80802
986: 1:Answer: message('StartNextLevel')
------------------------------------------
987: 1:BoardData {
987: 1:  'description': ['No more Levels. You win!'],
987: 1:  'history': [],
987: 1:  'info': [],
987: 1:  'level': 19,
987: 1:  'questions': []
987: 1:}
987: 1:Scores: 80802
987: 1:Answer: message('StartNextLevel')
------------------------------------------
988: 1:BoardData {
988: 1:  'description': ['No more Levels. You win!'],
988: 1:  'history': [],
988: 1:  'info': [],
988: 1:  'level': 19,
988: 1:  'questions': []
988: 1:}
988: 1:Scores: 80802
988: 1:Answer: message('StartNextLevel')
------------------------------------------
989: 1:BoardData {
989: 1:  'description': ['No more Levels. You win!'],
989: 1:  'history': [],
989: 1:  'info': [],
989: 1:  'level': 19,
989: 1:  'questions': []
989: 1:}
989: 1:Scores: 80802
989: 1:Answer: message('StartNextLevel')
------------------------------------------
990: 1:BoardData {
990: 1:  'description': ['No more Levels. You win!'],
990: 1:  'history': [],
990: 1:  'info': [],
990: 1:  'level': 19,
990: 1:  'questions': []
990: 1:}
990: 1:Scores: 80802
990: 1:Answer: message('StartNextLevel')
------------------------------------------
991: 1:BoardData {
991: 1:  'description': ['No more Levels. You win!'],
991: 1:  'history': [],
991: 1:  'info': [],
991: 1:  'level': 19,
991: 1:  'questions': []
991: 1:}
991: 1:Scores: 80802
991: 1:Answer: message('StartNextLevel')
------------------------------------------
992: 1:BoardData {
992: 1:  'description': ['No more Levels. You win!'],
992: 1:  'history': [],
992: 1:  'info': [],
992: 1:  'level': 19,
992: 1:  'questions': []
992: 1:}
992: 1:Scores: 80802
992: 1:Answer: message('StartNextLevel')
------------------------------------------
993: 1:BoardData {
993: 1:  'description': ['No more Levels. You win!'],
993: 1:  'history': [],
993: 1:  'info': [],
993: 1:  'level': 19,
993: 1:  'questions': []
993: 1:}
993: 1:Scores: 80802
993: 1:Answer: message('StartNextLevel')
------------------------------------------
994: 1:BoardData {
994: 1:  'description': ['No more Levels. You win!'],
994: 1:  'history': [],
994: 1:  'info': [],
994: 1:  'level': 19,
994: 1:  'questions': []
994: 1:}
994: 1:Scores: 80802
994: 1:Answer: message('StartNextLevel')
------------------------------------------
995: 1:BoardData {
995: 1:  'description': ['No more Levels. You win!'],
995: 1:  'history': [],
995: 1:  'info': [],
995: 1:  'level': 19,
995: 1:  'questions': []
995: 1:}
995: 1:Scores: 80802
995: 1:Answer: message('StartNextLevel')
------------------------------------------
996: 1:BoardData {
996: 1:  'description': ['No more Levels. You win!'],
996: 1:  'history': [],
996: 1:  'info': [],
996: 1:  'level': 19,
996: 1:  'questions': []
996: 1:}
996: 1:Scores: 80802
996: 1:Answer: message('StartNextLevel')
------------------------------------------
997: 1:BoardData {
997: 1:  'description': ['No more Levels. You win!'],
997: 1:  'history': [],
997: 1:  'info': [],
997: 1:  'level': 19,
997: 1:  'questions': []
997: 1:}
997: 1:Scores: 80802
997: 1:Answer: message('StartNextLevel')
------------------------------------------
998: 1:BoardData {
998: 1:  'description': ['No more Levels. You win!'],
998: 1:  'history': [],
998: 1:  'info': [],
998: 1:  'level': 19,
998: 1:  'questions': []
998: 1:}
998: 1:Scores: 80802
998: 1:Answer: message('StartNextLevel')
------------------------------------------
999: 1:BoardData {
999: 1:  'description': ['No more Levels. You win!'],
999: 1:  'history': [],
999: 1:  'info': [],
999: 1:  'level': 19,
999: 1:  'questions': []
999: 1:}
999: 1:Scores: 80802
999: 1:Answer: message('StartNextLevel')
------------------------------------------
1000: 1:BoardData {
1000: 1:  'description': ['No more Levels. You win!'],
1000: 1:  'history': [],
1000: 1:  'info': [],
1000: 1:  'level': 19,
1000: 1:  'questions': []
1000: 1:}
1000: 1:Scores: 80802
1000: 1:Answer: message('StartNextLevel')
------------------------------------------