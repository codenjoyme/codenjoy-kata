1: 1:BoardData {
1: 1:  'description': [
1: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
1: 1:    'Please write js method.',
1: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
1: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
1: 1:  ],
1: 1:  'expectedAnswer': 'world',
1: 1:  'history': [],
1: 1:  'level': 0,
1: 1:  'nextQuestion': 'hello',
1: 1:  'questions': ['hello']
1: 1:}
1: 1:Scores: 0
1: 1:Answer: message('['world']')
1: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
2: 1:BoardData {
2: 1:  'description': [
2: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
2: 1:    'Please write js method.',
2: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
2: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
2: 1:  ],
2: 1:  'expectedAnswer': 'hello',
2: 1:  'history': [{
2: 1:    'answer': 'world',
2: 1:    'question': 'hello',
2: 1:    'valid': true
2: 1:  }],
2: 1:  'level': 0,
2: 1:  'nextQuestion': 'world',
2: 1:  'questions': [
2: 1:    'hello',
2: 1:    'world'
2: 1:  ]
2: 1:}
2: 1:Scores: 1
2: 1:Answer: message('['world', 'hello']')
2: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
3: 1:BoardData {
3: 1:  'description': [
3: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
3: 1:    'Please write js method.',
3: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
3: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
3: 1:  ],
3: 1:  'expectedAnswer': 'qwe',
3: 1:  'history': [
3: 1:    {
3: 1:      'answer': 'world',
3: 1:      'question': 'hello',
3: 1:      'valid': true
3: 1:    },
3: 1:    {
3: 1:      'answer': 'hello',
3: 1:      'question': 'world',
3: 1:      'valid': true
3: 1:    }
3: 1:  ],
3: 1:  'level': 0,
3: 1:  'nextQuestion': 'qwe',
3: 1:  'questions': [
3: 1:    'hello',
3: 1:    'world',
3: 1:    'qwe'
3: 1:  ]
3: 1:}
3: 1:Scores: 2
3: 1:Answer: message('['world', 'hello', 'qwe']')
3: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
4: 1:BoardData {
4: 1:  'description': [
4: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
4: 1:    'Please write js method.',
4: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
4: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
4: 1:  ],
4: 1:  'expectedAnswer': 'asd',
4: 1:  'history': [
4: 1:    {
4: 1:      'answer': 'world',
4: 1:      'question': 'hello',
4: 1:      'valid': true
4: 1:    },
4: 1:    {
4: 1:      'answer': 'hello',
4: 1:      'question': 'world',
4: 1:      'valid': true
4: 1:    },
4: 1:    {
4: 1:      'answer': 'qwe',
4: 1:      'question': 'qwe',
4: 1:      'valid': true
4: 1:    }
4: 1:  ],
4: 1:  'level': 0,
4: 1:  'nextQuestion': 'asd',
4: 1:  'questions': [
4: 1:    'hello',
4: 1:    'world',
4: 1:    'qwe',
4: 1:    'asd'
4: 1:  ]
4: 1:}
4: 1:Scores: 3
4: 1:Answer: message('['world', 'hello', 'qwe', 'asd']')
4: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
5: 1:BoardData {
5: 1:  'description': [
5: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
5: 1:    'Please write js method.',
5: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
5: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
5: 1:  ],
5: 1:  'expectedAnswer': 'zxc',
5: 1:  'history': [
5: 1:    {
5: 1:      'answer': 'world',
5: 1:      'question': 'hello',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'hello',
5: 1:      'question': 'world',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'qwe',
5: 1:      'question': 'qwe',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'asd',
5: 1:      'question': 'asd',
5: 1:      'valid': true
5: 1:    }
5: 1:  ],
5: 1:  'level': 0,
5: 1:  'nextQuestion': 'zxc',
5: 1:  'questions': [
5: 1:    'hello',
5: 1:    'world',
5: 1:    'qwe',
5: 1:    'asd',
5: 1:    'zxc'
5: 1:  ]
5: 1:}
5: 1:Scores: 4
5: 1:Answer: message('['world', 'hello', 'qwe', 'asd', 'zxc']')
5: 1:Fire Event: PassTest{complexity=0, testCount=5}
5: 1:Fire Event: NextAlgorithm{complexity=0, time=0}
------------------------------------------
6: 1:BoardData {
6: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
6: 1:  'history': [
6: 1:    {
6: 1:      'answer': 'world',
6: 1:      'question': 'hello',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'hello',
6: 1:      'question': 'world',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'qwe',
6: 1:      'question': 'qwe',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'asd',
6: 1:      'question': 'asd',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'zxc',
6: 1:      'question': 'zxc',
6: 1:      'valid': true
6: 1:    }
6: 1:  ],
6: 1:  'level': 0,
6: 1:  'questions': []
6: 1:}
6: 1:Scores: 5
6: 1:Answer: message('StartNextLevel')
6: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
7: 1:BoardData {
7: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
7: 1:  'expectedAnswer': '1',
7: 1:  'history': [],
7: 1:  'level': 1,
7: 1:  'nextQuestion': '1',
7: 1:  'questions': ['1']
7: 1:}
7: 1:Scores: 5
7: 1:Answer: message('['1']')
7: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
8: 1:BoardData {
8: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
8: 1:  'expectedAnswer': '2',
8: 1:  'history': [{
8: 1:    'answer': '1',
8: 1:    'question': '1',
8: 1:    'valid': true
8: 1:  }],
8: 1:  'level': 1,
8: 1:  'nextQuestion': '2',
8: 1:  'questions': [
8: 1:    '1',
8: 1:    '2'
8: 1:  ]
8: 1:}
8: 1:Scores: 7
8: 1:Answer: message('['1', '2']')
8: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
9: 1:BoardData {
9: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
9: 1:  'expectedAnswer': 'Fizz',
9: 1:  'history': [
9: 1:    {
9: 1:      'answer': '1',
9: 1:      'question': '1',
9: 1:      'valid': true
9: 1:    },
9: 1:    {
9: 1:      'answer': '2',
9: 1:      'question': '2',
9: 1:      'valid': true
9: 1:    }
9: 1:  ],
9: 1:  'level': 1,
9: 1:  'nextQuestion': '3',
9: 1:  'questions': [
9: 1:    '1',
9: 1:    '2',
9: 1:    '3'
9: 1:  ]
9: 1:}
9: 1:Scores: 9
9: 1:Answer: message('['1', '2', 'Fizz']')
9: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
10: 1:BoardData {
10: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
10: 1:  'expectedAnswer': '4',
10: 1:  'history': [
10: 1:    {
10: 1:      'answer': '1',
10: 1:      'question': '1',
10: 1:      'valid': true
10: 1:    },
10: 1:    {
10: 1:      'answer': '2',
10: 1:      'question': '2',
10: 1:      'valid': true
10: 1:    },
10: 1:    {
10: 1:      'answer': 'Fizz',
10: 1:      'question': '3',
10: 1:      'valid': true
10: 1:    }
10: 1:  ],
10: 1:  'level': 1,
10: 1:  'nextQuestion': '4',
10: 1:  'questions': [
10: 1:    '1',
10: 1:    '2',
10: 1:    '3',
10: 1:    '4'
10: 1:  ]
10: 1:}
10: 1:Scores: 11
10: 1:Answer: message('['1', '2', 'Fizz', '4']')
10: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
11: 1:BoardData {
11: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
11: 1:  'expectedAnswer': 'Buzz',
11: 1:  'history': [
11: 1:    {
11: 1:      'answer': '1',
11: 1:      'question': '1',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': '2',
11: 1:      'question': '2',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': 'Fizz',
11: 1:      'question': '3',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': '4',
11: 1:      'question': '4',
11: 1:      'valid': true
11: 1:    }
11: 1:  ],
11: 1:  'level': 1,
11: 1:  'nextQuestion': '5',
11: 1:  'questions': [
11: 1:    '1',
11: 1:    '2',
11: 1:    '3',
11: 1:    '4',
11: 1:    '5'
11: 1:  ]
11: 1:}
11: 1:Scores: 13
11: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz']')
11: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
12: 1:BoardData {
12: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
12: 1:  'expectedAnswer': 'Fizz',
12: 1:  'history': [
12: 1:    {
12: 1:      'answer': '1',
12: 1:      'question': '1',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': '2',
12: 1:      'question': '2',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': 'Fizz',
12: 1:      'question': '3',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': '4',
12: 1:      'question': '4',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': 'Buzz',
12: 1:      'question': '5',
12: 1:      'valid': true
12: 1:    }
12: 1:  ],
12: 1:  'level': 1,
12: 1:  'nextQuestion': '6',
12: 1:  'questions': [
12: 1:    '1',
12: 1:    '2',
12: 1:    '3',
12: 1:    '4',
12: 1:    '5',
12: 1:    '6'
12: 1:  ]
12: 1:}
12: 1:Scores: 15
12: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz']')
12: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
13: 1:BoardData {
13: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
13: 1:  'expectedAnswer': '7',
13: 1:  'history': [
13: 1:    {
13: 1:      'answer': '1',
13: 1:      'question': '1',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': '2',
13: 1:      'question': '2',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Fizz',
13: 1:      'question': '3',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': '4',
13: 1:      'question': '4',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Buzz',
13: 1:      'question': '5',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Fizz',
13: 1:      'question': '6',
13: 1:      'valid': true
13: 1:    }
13: 1:  ],
13: 1:  'level': 1,
13: 1:  'nextQuestion': '7',
13: 1:  'questions': [
13: 1:    '1',
13: 1:    '2',
13: 1:    '3',
13: 1:    '4',
13: 1:    '5',
13: 1:    '6',
13: 1:    '7'
13: 1:  ]
13: 1:}
13: 1:Scores: 17
13: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7']')
13: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
14: 1:BoardData {
14: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
14: 1:  'expectedAnswer': '8',
14: 1:  'history': [
14: 1:    {
14: 1:      'answer': '1',
14: 1:      'question': '1',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': '2',
14: 1:      'question': '2',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Fizz',
14: 1:      'question': '3',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': '4',
14: 1:      'question': '4',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Buzz',
14: 1:      'question': '5',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Fizz',
14: 1:      'question': '6',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': '7',
14: 1:      'question': '7',
14: 1:      'valid': true
14: 1:    }
14: 1:  ],
14: 1:  'level': 1,
14: 1:  'nextQuestion': '8',
14: 1:  'questions': [
14: 1:    '1',
14: 1:    '2',
14: 1:    '3',
14: 1:    '4',
14: 1:    '5',
14: 1:    '6',
14: 1:    '7',
14: 1:    '8'
14: 1:  ]
14: 1:}
14: 1:Scores: 19
14: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8']')
14: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
15: 1:BoardData {
15: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
15: 1:  'expectedAnswer': 'Fizz',
15: 1:  'history': [
15: 1:    {
15: 1:      'answer': '1',
15: 1:      'question': '1',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '2',
15: 1:      'question': '2',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Fizz',
15: 1:      'question': '3',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '4',
15: 1:      'question': '4',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Buzz',
15: 1:      'question': '5',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Fizz',
15: 1:      'question': '6',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '7',
15: 1:      'question': '7',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '8',
15: 1:      'question': '8',
15: 1:      'valid': true
15: 1:    }
15: 1:  ],
15: 1:  'level': 1,
15: 1:  'nextQuestion': '9',
15: 1:  'questions': [
15: 1:    '1',
15: 1:    '2',
15: 1:    '3',
15: 1:    '4',
15: 1:    '5',
15: 1:    '6',
15: 1:    '7',
15: 1:    '8',
15: 1:    '9'
15: 1:  ]
15: 1:}
15: 1:Scores: 21
15: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz']')
15: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
16: 1:BoardData {
16: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
16: 1:  'expectedAnswer': 'Buzz',
16: 1:  'history': [
16: 1:    {
16: 1:      'answer': '1',
16: 1:      'question': '1',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '2',
16: 1:      'question': '2',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '3',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '4',
16: 1:      'question': '4',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Buzz',
16: 1:      'question': '5',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '6',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '7',
16: 1:      'question': '7',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '8',
16: 1:      'question': '8',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '9',
16: 1:      'valid': true
16: 1:    }
16: 1:  ],
16: 1:  'level': 1,
16: 1:  'nextQuestion': '10',
16: 1:  'questions': [
16: 1:    '1',
16: 1:    '2',
16: 1:    '3',
16: 1:    '4',
16: 1:    '5',
16: 1:    '6',
16: 1:    '7',
16: 1:    '8',
16: 1:    '9',
16: 1:    '10'
16: 1:  ]
16: 1:}
16: 1:Scores: 23
16: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz']')
16: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
17: 1:BoardData {
17: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
17: 1:  'expectedAnswer': '11',
17: 1:  'history': [
17: 1:    {
17: 1:      'answer': '1',
17: 1:      'question': '1',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '2',
17: 1:      'question': '2',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '3',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '4',
17: 1:      'question': '4',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Buzz',
17: 1:      'question': '5',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '6',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '7',
17: 1:      'question': '7',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '8',
17: 1:      'question': '8',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '9',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Buzz',
17: 1:      'question': '10',
17: 1:      'valid': true
17: 1:    }
17: 1:  ],
17: 1:  'level': 1,
17: 1:  'nextQuestion': '11',
17: 1:  'questions': [
17: 1:    '1',
17: 1:    '2',
17: 1:    '3',
17: 1:    '4',
17: 1:    '5',
17: 1:    '6',
17: 1:    '7',
17: 1:    '8',
17: 1:    '9',
17: 1:    '10',
17: 1:    '11'
17: 1:  ]
17: 1:}
17: 1:Scores: 25
17: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11']')
17: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
18: 1:BoardData {
18: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
18: 1:  'expectedAnswer': 'Fizz',
18: 1:  'history': [
18: 1:    {
18: 1:      'answer': '1',
18: 1:      'question': '1',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '2',
18: 1:      'question': '2',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '3',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '4',
18: 1:      'question': '4',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Buzz',
18: 1:      'question': '5',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '6',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '7',
18: 1:      'question': '7',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '8',
18: 1:      'question': '8',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '9',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Buzz',
18: 1:      'question': '10',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '11',
18: 1:      'question': '11',
18: 1:      'valid': true
18: 1:    }
18: 1:  ],
18: 1:  'level': 1,
18: 1:  'nextQuestion': '12',
18: 1:  'questions': [
18: 1:    '1',
18: 1:    '2',
18: 1:    '3',
18: 1:    '4',
18: 1:    '5',
18: 1:    '6',
18: 1:    '7',
18: 1:    '8',
18: 1:    '9',
18: 1:    '10',
18: 1:    '11',
18: 1:    '12'
18: 1:  ]
18: 1:}
18: 1:Scores: 27
18: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz']')
18: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
19: 1:BoardData {
19: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
19: 1:  'expectedAnswer': '13',
19: 1:  'history': [
19: 1:    {
19: 1:      'answer': '1',
19: 1:      'question': '1',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '2',
19: 1:      'question': '2',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '3',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '4',
19: 1:      'question': '4',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Buzz',
19: 1:      'question': '5',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '6',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '7',
19: 1:      'question': '7',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '8',
19: 1:      'question': '8',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '9',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Buzz',
19: 1:      'question': '10',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '11',
19: 1:      'question': '11',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '12',
19: 1:      'valid': true
19: 1:    }
19: 1:  ],
19: 1:  'level': 1,
19: 1:  'nextQuestion': '13',
19: 1:  'questions': [
19: 1:    '1',
19: 1:    '2',
19: 1:    '3',
19: 1:    '4',
19: 1:    '5',
19: 1:    '6',
19: 1:    '7',
19: 1:    '8',
19: 1:    '9',
19: 1:    '10',
19: 1:    '11',
19: 1:    '12',
19: 1:    '13'
19: 1:  ]
19: 1:}
19: 1:Scores: 29
19: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13']')
19: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
20: 1:BoardData {
20: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
20: 1:  'expectedAnswer': '14',
20: 1:  'history': [
20: 1:    {
20: 1:      'answer': '1',
20: 1:      'question': '1',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '2',
20: 1:      'question': '2',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '3',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '4',
20: 1:      'question': '4',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Buzz',
20: 1:      'question': '5',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '6',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '7',
20: 1:      'question': '7',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '8',
20: 1:      'question': '8',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '9',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Buzz',
20: 1:      'question': '10',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '11',
20: 1:      'question': '11',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '12',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '13',
20: 1:      'question': '13',
20: 1:      'valid': true
20: 1:    }
20: 1:  ],
20: 1:  'level': 1,
20: 1:  'nextQuestion': '14',
20: 1:  'questions': [
20: 1:    '1',
20: 1:    '2',
20: 1:    '3',
20: 1:    '4',
20: 1:    '5',
20: 1:    '6',
20: 1:    '7',
20: 1:    '8',
20: 1:    '9',
20: 1:    '10',
20: 1:    '11',
20: 1:    '12',
20: 1:    '13',
20: 1:    '14'
20: 1:  ]
20: 1:}
20: 1:Scores: 31
20: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14']')
20: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
21: 1:BoardData {
21: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
21: 1:  'expectedAnswer': 'FizzBuzz',
21: 1:  'history': [
21: 1:    {
21: 1:      'answer': '1',
21: 1:      'question': '1',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '2',
21: 1:      'question': '2',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '3',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '4',
21: 1:      'question': '4',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Buzz',
21: 1:      'question': '5',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '6',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '7',
21: 1:      'question': '7',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '8',
21: 1:      'question': '8',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '9',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Buzz',
21: 1:      'question': '10',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '11',
21: 1:      'question': '11',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '12',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '13',
21: 1:      'question': '13',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '14',
21: 1:      'question': '14',
21: 1:      'valid': true
21: 1:    }
21: 1:  ],
21: 1:  'level': 1,
21: 1:  'nextQuestion': '15',
21: 1:  'questions': [
21: 1:    '1',
21: 1:    '2',
21: 1:    '3',
21: 1:    '4',
21: 1:    '5',
21: 1:    '6',
21: 1:    '7',
21: 1:    '8',
21: 1:    '9',
21: 1:    '10',
21: 1:    '11',
21: 1:    '12',
21: 1:    '13',
21: 1:    '14',
21: 1:    '15'
21: 1:  ]
21: 1:}
21: 1:Scores: 33
21: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz']')
21: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
22: 1:BoardData {
22: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
22: 1:  'expectedAnswer': '16',
22: 1:  'history': [
22: 1:    {
22: 1:      'answer': '1',
22: 1:      'question': '1',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '2',
22: 1:      'question': '2',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '3',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '4',
22: 1:      'question': '4',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Buzz',
22: 1:      'question': '5',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '6',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '7',
22: 1:      'question': '7',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '8',
22: 1:      'question': '8',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '9',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Buzz',
22: 1:      'question': '10',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '11',
22: 1:      'question': '11',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '12',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '13',
22: 1:      'question': '13',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '14',
22: 1:      'question': '14',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'FizzBuzz',
22: 1:      'question': '15',
22: 1:      'valid': true
22: 1:    }
22: 1:  ],
22: 1:  'level': 1,
22: 1:  'nextQuestion': '16',
22: 1:  'questions': [
22: 1:    '1',
22: 1:    '2',
22: 1:    '3',
22: 1:    '4',
22: 1:    '5',
22: 1:    '6',
22: 1:    '7',
22: 1:    '8',
22: 1:    '9',
22: 1:    '10',
22: 1:    '11',
22: 1:    '12',
22: 1:    '13',
22: 1:    '14',
22: 1:    '15',
22: 1:    '16'
22: 1:  ]
22: 1:}
22: 1:Scores: 35
22: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16']')
22: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
23: 1:BoardData {
23: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
23: 1:  'expectedAnswer': '17',
23: 1:  'history': [
23: 1:    {
23: 1:      'answer': '1',
23: 1:      'question': '1',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '2',
23: 1:      'question': '2',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '3',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '4',
23: 1:      'question': '4',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Buzz',
23: 1:      'question': '5',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '6',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '7',
23: 1:      'question': '7',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '8',
23: 1:      'question': '8',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '9',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Buzz',
23: 1:      'question': '10',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '11',
23: 1:      'question': '11',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '12',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '13',
23: 1:      'question': '13',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '14',
23: 1:      'question': '14',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'FizzBuzz',
23: 1:      'question': '15',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '16',
23: 1:      'question': '16',
23: 1:      'valid': true
23: 1:    }
23: 1:  ],
23: 1:  'level': 1,
23: 1:  'nextQuestion': '17',
23: 1:  'questions': [
23: 1:    '1',
23: 1:    '2',
23: 1:    '3',
23: 1:    '4',
23: 1:    '5',
23: 1:    '6',
23: 1:    '7',
23: 1:    '8',
23: 1:    '9',
23: 1:    '10',
23: 1:    '11',
23: 1:    '12',
23: 1:    '13',
23: 1:    '14',
23: 1:    '15',
23: 1:    '16',
23: 1:    '17'
23: 1:  ]
23: 1:}
23: 1:Scores: 37
23: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17']')
23: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
24: 1:BoardData {
24: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
24: 1:  'expectedAnswer': 'Fizz',
24: 1:  'history': [
24: 1:    {
24: 1:      'answer': '1',
24: 1:      'question': '1',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '2',
24: 1:      'question': '2',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '3',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '4',
24: 1:      'question': '4',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Buzz',
24: 1:      'question': '5',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '6',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '7',
24: 1:      'question': '7',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '8',
24: 1:      'question': '8',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '9',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Buzz',
24: 1:      'question': '10',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '11',
24: 1:      'question': '11',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '12',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '13',
24: 1:      'question': '13',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '14',
24: 1:      'question': '14',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'FizzBuzz',
24: 1:      'question': '15',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '16',
24: 1:      'question': '16',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '17',
24: 1:      'question': '17',
24: 1:      'valid': true
24: 1:    }
24: 1:  ],
24: 1:  'level': 1,
24: 1:  'nextQuestion': '18',
24: 1:  'questions': [
24: 1:    '1',
24: 1:    '2',
24: 1:    '3',
24: 1:    '4',
24: 1:    '5',
24: 1:    '6',
24: 1:    '7',
24: 1:    '8',
24: 1:    '9',
24: 1:    '10',
24: 1:    '11',
24: 1:    '12',
24: 1:    '13',
24: 1:    '14',
24: 1:    '15',
24: 1:    '16',
24: 1:    '17',
24: 1:    '18'
24: 1:  ]
24: 1:}
24: 1:Scores: 39
24: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17', 'Fizz']')
24: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
25: 1:BoardData {
25: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
25: 1:  'expectedAnswer': '19',
25: 1:  'history': [
25: 1:    {
25: 1:      'answer': '1',
25: 1:      'question': '1',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '2',
25: 1:      'question': '2',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '3',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '4',
25: 1:      'question': '4',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Buzz',
25: 1:      'question': '5',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '6',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '7',
25: 1:      'question': '7',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '8',
25: 1:      'question': '8',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '9',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Buzz',
25: 1:      'question': '10',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '11',
25: 1:      'question': '11',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '12',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '13',
25: 1:      'question': '13',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '14',
25: 1:      'question': '14',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'FizzBuzz',
25: 1:      'question': '15',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '16',
25: 1:      'question': '16',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '17',
25: 1:      'question': '17',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '18',
25: 1:      'valid': true
25: 1:    }
25: 1:  ],
25: 1:  'level': 1,
25: 1:  'nextQuestion': '19',
25: 1:  'questions': [
25: 1:    '1',
25: 1:    '2',
25: 1:    '3',
25: 1:    '4',
25: 1:    '5',
25: 1:    '6',
25: 1:    '7',
25: 1:    '8',
25: 1:    '9',
25: 1:    '10',
25: 1:    '11',
25: 1:    '12',
25: 1:    '13',
25: 1:    '14',
25: 1:    '15',
25: 1:    '16',
25: 1:    '17',
25: 1:    '18',
25: 1:    '19'
25: 1:  ]
25: 1:}
25: 1:Scores: 41
25: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17', 'Fizz', '19']')
25: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
26: 1:BoardData {
26: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
26: 1:  'expectedAnswer': 'Buzz',
26: 1:  'history': [
26: 1:    {
26: 1:      'answer': '1',
26: 1:      'question': '1',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '2',
26: 1:      'question': '2',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '3',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '4',
26: 1:      'question': '4',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Buzz',
26: 1:      'question': '5',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '6',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '7',
26: 1:      'question': '7',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '8',
26: 1:      'question': '8',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '9',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Buzz',
26: 1:      'question': '10',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '11',
26: 1:      'question': '11',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '12',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '13',
26: 1:      'question': '13',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '14',
26: 1:      'question': '14',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'FizzBuzz',
26: 1:      'question': '15',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '16',
26: 1:      'question': '16',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '17',
26: 1:      'question': '17',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '18',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '19',
26: 1:      'question': '19',
26: 1:      'valid': true
26: 1:    }
26: 1:  ],
26: 1:  'level': 1,
26: 1:  'nextQuestion': '20',
26: 1:  'questions': [
26: 1:    '1',
26: 1:    '2',
26: 1:    '3',
26: 1:    '4',
26: 1:    '5',
26: 1:    '6',
26: 1:    '7',
26: 1:    '8',
26: 1:    '9',
26: 1:    '10',
26: 1:    '11',
26: 1:    '12',
26: 1:    '13',
26: 1:    '14',
26: 1:    '15',
26: 1:    '16',
26: 1:    '17',
26: 1:    '18',
26: 1:    '19',
26: 1:    '20'
26: 1:  ]
26: 1:}
26: 1:Scores: 43
26: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17', 'Fizz', '19', 'Buzz']')
26: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
27: 1:BoardData {
27: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
27: 1:  'expectedAnswer': 'Fizz',
27: 1:  'history': [
27: 1:    {
27: 1:      'answer': '1',
27: 1:      'question': '1',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '2',
27: 1:      'question': '2',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '3',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '4',
27: 1:      'question': '4',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Buzz',
27: 1:      'question': '5',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '6',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '7',
27: 1:      'question': '7',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '8',
27: 1:      'question': '8',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '9',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Buzz',
27: 1:      'question': '10',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '11',
27: 1:      'question': '11',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '12',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '13',
27: 1:      'question': '13',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '14',
27: 1:      'question': '14',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'FizzBuzz',
27: 1:      'question': '15',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '16',
27: 1:      'question': '16',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '17',
27: 1:      'question': '17',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '18',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '19',
27: 1:      'question': '19',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Buzz',
27: 1:      'question': '20',
27: 1:      'valid': true
27: 1:    }
27: 1:  ],
27: 1:  'level': 1,
27: 1:  'nextQuestion': '21',
27: 1:  'questions': [
27: 1:    '1',
27: 1:    '2',
27: 1:    '3',
27: 1:    '4',
27: 1:    '5',
27: 1:    '6',
27: 1:    '7',
27: 1:    '8',
27: 1:    '9',
27: 1:    '10',
27: 1:    '11',
27: 1:    '12',
27: 1:    '13',
27: 1:    '14',
27: 1:    '15',
27: 1:    '16',
27: 1:    '17',
27: 1:    '18',
27: 1:    '19',
27: 1:    '20',
27: 1:    '21'
27: 1:  ]
27: 1:}
27: 1:Scores: 45
27: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17', 'Fizz', '19', 'Buzz', 'Fizz']')
27: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
28: 1:BoardData {
28: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
28: 1:  'expectedAnswer': '22',
28: 1:  'history': [
28: 1:    {
28: 1:      'answer': '1',
28: 1:      'question': '1',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '2',
28: 1:      'question': '2',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '3',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '4',
28: 1:      'question': '4',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Buzz',
28: 1:      'question': '5',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '6',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '7',
28: 1:      'question': '7',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '8',
28: 1:      'question': '8',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '9',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Buzz',
28: 1:      'question': '10',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '11',
28: 1:      'question': '11',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '12',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '13',
28: 1:      'question': '13',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '14',
28: 1:      'question': '14',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzBuzz',
28: 1:      'question': '15',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '16',
28: 1:      'question': '16',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '17',
28: 1:      'question': '17',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '18',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '19',
28: 1:      'question': '19',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Buzz',
28: 1:      'question': '20',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '21',
28: 1:      'valid': true
28: 1:    }
28: 1:  ],
28: 1:  'level': 1,
28: 1:  'nextQuestion': '22',
28: 1:  'questions': [
28: 1:    '1',
28: 1:    '2',
28: 1:    '3',
28: 1:    '4',
28: 1:    '5',
28: 1:    '6',
28: 1:    '7',
28: 1:    '8',
28: 1:    '9',
28: 1:    '10',
28: 1:    '11',
28: 1:    '12',
28: 1:    '13',
28: 1:    '14',
28: 1:    '15',
28: 1:    '16',
28: 1:    '17',
28: 1:    '18',
28: 1:    '19',
28: 1:    '20',
28: 1:    '21',
28: 1:    '22'
28: 1:  ]
28: 1:}
28: 1:Scores: 47
28: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17', 'Fizz', '19', 'Buzz', 'Fizz', '22']')
28: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
29: 1:BoardData {
29: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
29: 1:  'expectedAnswer': '23',
29: 1:  'history': [
29: 1:    {
29: 1:      'answer': '1',
29: 1:      'question': '1',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '2',
29: 1:      'question': '2',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '3',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '4',
29: 1:      'question': '4',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Buzz',
29: 1:      'question': '5',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '6',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '7',
29: 1:      'question': '7',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '8',
29: 1:      'question': '8',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '9',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Buzz',
29: 1:      'question': '10',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '11',
29: 1:      'question': '11',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '12',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '13',
29: 1:      'question': '13',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '14',
29: 1:      'question': '14',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzBuzz',
29: 1:      'question': '15',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '16',
29: 1:      'question': '16',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '17',
29: 1:      'question': '17',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '18',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '19',
29: 1:      'question': '19',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Buzz',
29: 1:      'question': '20',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '21',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '22',
29: 1:      'question': '22',
29: 1:      'valid': true
29: 1:    }
29: 1:  ],
29: 1:  'level': 1,
29: 1:  'nextQuestion': '23',
29: 1:  'questions': [
29: 1:    '1',
29: 1:    '2',
29: 1:    '3',
29: 1:    '4',
29: 1:    '5',
29: 1:    '6',
29: 1:    '7',
29: 1:    '8',
29: 1:    '9',
29: 1:    '10',
29: 1:    '11',
29: 1:    '12',
29: 1:    '13',
29: 1:    '14',
29: 1:    '15',
29: 1:    '16',
29: 1:    '17',
29: 1:    '18',
29: 1:    '19',
29: 1:    '20',
29: 1:    '21',
29: 1:    '22',
29: 1:    '23'
29: 1:  ]
29: 1:}
29: 1:Scores: 49
29: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17', 'Fizz', '19', 'Buzz', 'Fizz', '22', '23']')
29: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
30: 1:BoardData {
30: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
30: 1:  'expectedAnswer': 'Fizz',
30: 1:  'history': [
30: 1:    {
30: 1:      'answer': '1',
30: 1:      'question': '1',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '2',
30: 1:      'question': '2',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '3',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '4',
30: 1:      'question': '4',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Buzz',
30: 1:      'question': '5',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '6',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '7',
30: 1:      'question': '7',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '8',
30: 1:      'question': '8',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '9',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Buzz',
30: 1:      'question': '10',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '11',
30: 1:      'question': '11',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '12',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '13',
30: 1:      'question': '13',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '14',
30: 1:      'question': '14',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzBuzz',
30: 1:      'question': '15',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '16',
30: 1:      'question': '16',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '17',
30: 1:      'question': '17',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '18',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '19',
30: 1:      'question': '19',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Buzz',
30: 1:      'question': '20',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '21',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '22',
30: 1:      'question': '22',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '23',
30: 1:      'question': '23',
30: 1:      'valid': true
30: 1:    }
30: 1:  ],
30: 1:  'level': 1,
30: 1:  'nextQuestion': '24',
30: 1:  'questions': [
30: 1:    '1',
30: 1:    '2',
30: 1:    '3',
30: 1:    '4',
30: 1:    '5',
30: 1:    '6',
30: 1:    '7',
30: 1:    '8',
30: 1:    '9',
30: 1:    '10',
30: 1:    '11',
30: 1:    '12',
30: 1:    '13',
30: 1:    '14',
30: 1:    '15',
30: 1:    '16',
30: 1:    '17',
30: 1:    '18',
30: 1:    '19',
30: 1:    '20',
30: 1:    '21',
30: 1:    '22',
30: 1:    '23',
30: 1:    '24'
30: 1:  ]
30: 1:}
30: 1:Scores: 51
30: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17', 'Fizz', '19', 'Buzz', 'Fizz', '22', '23', 'Fizz']')
30: 1:Fire Event: PassTest{complexity=5, testCount=25}
------------------------------------------
31: 1:BoardData {
31: 1:  'description': ['Write a method that takes one int argument and that returns a String. For those numbers that are divisible by 3, the method should return 'Fizz', for those numbers divisible by 5 it should return 'Buzz', for those numbers divisible by both 3 and 5 - 'FizzBuzz', and for all others - the number itself.'],
31: 1:  'expectedAnswer': 'Buzz',
31: 1:  'history': [
31: 1:    {
31: 1:      'answer': '1',
31: 1:      'question': '1',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '2',
31: 1:      'question': '2',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '3',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '4',
31: 1:      'question': '4',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Buzz',
31: 1:      'question': '5',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '6',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '7',
31: 1:      'question': '7',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '8',
31: 1:      'question': '8',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '9',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Buzz',
31: 1:      'question': '10',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '11',
31: 1:      'question': '11',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '12',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '13',
31: 1:      'question': '13',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '14',
31: 1:      'question': '14',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzBuzz',
31: 1:      'question': '15',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '16',
31: 1:      'question': '16',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '17',
31: 1:      'question': '17',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '18',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '19',
31: 1:      'question': '19',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Buzz',
31: 1:      'question': '20',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '21',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '22',
31: 1:      'question': '22',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '23',
31: 1:      'question': '23',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '24',
31: 1:      'valid': true
31: 1:    }
31: 1:  ],
31: 1:  'level': 1,
31: 1:  'nextQuestion': '25',
31: 1:  'questions': [
31: 1:    '1',
31: 1:    '2',
31: 1:    '3',
31: 1:    '4',
31: 1:    '5',
31: 1:    '6',
31: 1:    '7',
31: 1:    '8',
31: 1:    '9',
31: 1:    '10',
31: 1:    '11',
31: 1:    '12',
31: 1:    '13',
31: 1:    '14',
31: 1:    '15',
31: 1:    '16',
31: 1:    '17',
31: 1:    '18',
31: 1:    '19',
31: 1:    '20',
31: 1:    '21',
31: 1:    '22',
31: 1:    '23',
31: 1:    '24',
31: 1:    '25'
31: 1:  ]
31: 1:}
31: 1:Scores: 53
31: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', '7', '8', 'Fizz', 'Buzz', '11', 'Fizz', '13', '14', 'FizzBuzz', '16', '17', 'Fizz', '19', 'Buzz', 'Fizz', '22', '23', 'Fizz', 'Buzz']')
31: 1:Fire Event: PassTest{complexity=5, testCount=25}
31: 1:Fire Event: NextAlgorithm{complexity=5, time=0}
------------------------------------------
32: 1:BoardData {
32: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
32: 1:  'history': [
32: 1:    {
32: 1:      'answer': '1',
32: 1:      'question': '1',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '2',
32: 1:      'question': '2',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '3',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '4',
32: 1:      'question': '4',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Buzz',
32: 1:      'question': '5',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '6',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '7',
32: 1:      'question': '7',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '8',
32: 1:      'question': '8',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '9',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Buzz',
32: 1:      'question': '10',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '11',
32: 1:      'question': '11',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '12',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '13',
32: 1:      'question': '13',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '14',
32: 1:      'question': '14',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzBuzz',
32: 1:      'question': '15',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '16',
32: 1:      'question': '16',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '17',
32: 1:      'question': '17',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '18',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '19',
32: 1:      'question': '19',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Buzz',
32: 1:      'question': '20',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '21',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '22',
32: 1:      'question': '22',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '23',
32: 1:      'question': '23',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '24',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Buzz',
32: 1:      'question': '25',
32: 1:      'valid': true
32: 1:    }
32: 1:  ],
32: 1:  'level': 1,
32: 1:  'questions': []
32: 1:}
32: 1:Scores: 729
32: 1:Answer: message('StartNextLevel')
32: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
33: 1:BoardData {
33: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
33: 1:  'expectedAnswer': '0',
33: 1:  'history': [],
33: 1:  'level': 2,
33: 1:  'nextQuestion': '1',
33: 1:  'questions': ['1']
33: 1:}
33: 1:Scores: 729
33: 1:Answer: message('['0']')
33: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
34: 1:BoardData {
34: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
34: 1:  'expectedAnswer': '4',
34: 1:  'history': [{
34: 1:    'answer': '0',
34: 1:    'question': '1',
34: 1:    'valid': true
34: 1:  }],
34: 1:  'level': 2,
34: 1:  'nextQuestion': '2',
34: 1:  'questions': [
34: 1:    '1',
34: 1:    '2'
34: 1:  ]
34: 1:}
34: 1:Scores: 733
34: 1:Answer: message('['0', '4']')
34: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
35: 1:BoardData {
35: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
35: 1:  'expectedAnswer': '22',
35: 1:  'history': [
35: 1:    {
35: 1:      'answer': '0',
35: 1:      'question': '1',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '4',
35: 1:      'question': '2',
35: 1:      'valid': true
35: 1:    }
35: 1:  ],
35: 1:  'level': 2,
35: 1:  'nextQuestion': '3',
35: 1:  'questions': [
35: 1:    '1',
35: 1:    '2',
35: 1:    '3'
35: 1:  ]
35: 1:}
35: 1:Scores: 737
35: 1:Answer: message('['0', '4', '22']')
35: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
36: 1:BoardData {
36: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
36: 1:  'expectedAnswer': '70',
36: 1:  'history': [
36: 1:    {
36: 1:      'answer': '0',
36: 1:      'question': '1',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '4',
36: 1:      'question': '2',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '22',
36: 1:      'question': '3',
36: 1:      'valid': true
36: 1:    }
36: 1:  ],
36: 1:  'level': 2,
36: 1:  'nextQuestion': '4',
36: 1:  'questions': [
36: 1:    '1',
36: 1:    '2',
36: 1:    '3',
36: 1:    '4'
36: 1:  ]
36: 1:}
36: 1:Scores: 741
36: 1:Answer: message('['0', '4', '22', '70']')
36: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
37: 1:BoardData {
37: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
37: 1:  'expectedAnswer': '170',
37: 1:  'history': [
37: 1:    {
37: 1:      'answer': '0',
37: 1:      'question': '1',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '4',
37: 1:      'question': '2',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '22',
37: 1:      'question': '3',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '70',
37: 1:      'question': '4',
37: 1:      'valid': true
37: 1:    }
37: 1:  ],
37: 1:  'level': 2,
37: 1:  'nextQuestion': '5',
37: 1:  'questions': [
37: 1:    '1',
37: 1:    '2',
37: 1:    '3',
37: 1:    '4',
37: 1:    '5'
37: 1:  ]
37: 1:}
37: 1:Scores: 745
37: 1:Answer: message('['0', '4', '22', '70', '170']')
37: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
38: 1:BoardData {
38: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
38: 1:  'expectedAnswer': '350',
38: 1:  'history': [
38: 1:    {
38: 1:      'answer': '0',
38: 1:      'question': '1',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '4',
38: 1:      'question': '2',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '22',
38: 1:      'question': '3',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '70',
38: 1:      'question': '4',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '170',
38: 1:      'question': '5',
38: 1:      'valid': true
38: 1:    }
38: 1:  ],
38: 1:  'level': 2,
38: 1:  'nextQuestion': '6',
38: 1:  'questions': [
38: 1:    '1',
38: 1:    '2',
38: 1:    '3',
38: 1:    '4',
38: 1:    '5',
38: 1:    '6'
38: 1:  ]
38: 1:}
38: 1:Scores: 749
38: 1:Answer: message('['0', '4', '22', '70', '170', '350']')
38: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
39: 1:BoardData {
39: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
39: 1:  'expectedAnswer': '644',
39: 1:  'history': [
39: 1:    {
39: 1:      'answer': '0',
39: 1:      'question': '1',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '4',
39: 1:      'question': '2',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '22',
39: 1:      'question': '3',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '70',
39: 1:      'question': '4',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '170',
39: 1:      'question': '5',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '350',
39: 1:      'question': '6',
39: 1:      'valid': true
39: 1:    }
39: 1:  ],
39: 1:  'level': 2,
39: 1:  'nextQuestion': '7',
39: 1:  'questions': [
39: 1:    '1',
39: 1:    '2',
39: 1:    '3',
39: 1:    '4',
39: 1:    '5',
39: 1:    '6',
39: 1:    '7'
39: 1:  ]
39: 1:}
39: 1:Scores: 753
39: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644']')
39: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
40: 1:BoardData {
40: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
40: 1:  'expectedAnswer': '1092',
40: 1:  'history': [
40: 1:    {
40: 1:      'answer': '0',
40: 1:      'question': '1',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '4',
40: 1:      'question': '2',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '22',
40: 1:      'question': '3',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '70',
40: 1:      'question': '4',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '170',
40: 1:      'question': '5',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '350',
40: 1:      'question': '6',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '644',
40: 1:      'question': '7',
40: 1:      'valid': true
40: 1:    }
40: 1:  ],
40: 1:  'level': 2,
40: 1:  'nextQuestion': '8',
40: 1:  'questions': [
40: 1:    '1',
40: 1:    '2',
40: 1:    '3',
40: 1:    '4',
40: 1:    '5',
40: 1:    '6',
40: 1:    '7',
40: 1:    '8'
40: 1:  ]
40: 1:}
40: 1:Scores: 757
40: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092']')
40: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
41: 1:BoardData {
41: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
41: 1:  'expectedAnswer': '1740',
41: 1:  'history': [
41: 1:    {
41: 1:      'answer': '0',
41: 1:      'question': '1',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '4',
41: 1:      'question': '2',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '22',
41: 1:      'question': '3',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '70',
41: 1:      'question': '4',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '170',
41: 1:      'question': '5',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '350',
41: 1:      'question': '6',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '644',
41: 1:      'question': '7',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '1092',
41: 1:      'question': '8',
41: 1:      'valid': true
41: 1:    }
41: 1:  ],
41: 1:  'level': 2,
41: 1:  'nextQuestion': '9',
41: 1:  'questions': [
41: 1:    '1',
41: 1:    '2',
41: 1:    '3',
41: 1:    '4',
41: 1:    '5',
41: 1:    '6',
41: 1:    '7',
41: 1:    '8',
41: 1:    '9'
41: 1:  ]
41: 1:}
41: 1:Scores: 761
41: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740']')
41: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
42: 1:BoardData {
42: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
42: 1:  'expectedAnswer': '2640',
42: 1:  'history': [
42: 1:    {
42: 1:      'answer': '0',
42: 1:      'question': '1',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '4',
42: 1:      'question': '2',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '22',
42: 1:      'question': '3',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '70',
42: 1:      'question': '4',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '170',
42: 1:      'question': '5',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '350',
42: 1:      'question': '6',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '644',
42: 1:      'question': '7',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '1092',
42: 1:      'question': '8',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '1740',
42: 1:      'question': '9',
42: 1:      'valid': true
42: 1:    }
42: 1:  ],
42: 1:  'level': 2,
42: 1:  'nextQuestion': '10',
42: 1:  'questions': [
42: 1:    '1',
42: 1:    '2',
42: 1:    '3',
42: 1:    '4',
42: 1:    '5',
42: 1:    '6',
42: 1:    '7',
42: 1:    '8',
42: 1:    '9',
42: 1:    '10'
42: 1:  ]
42: 1:}
42: 1:Scores: 765
42: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640']')
42: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
43: 1:BoardData {
43: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
43: 1:  'expectedAnswer': '3850',
43: 1:  'history': [
43: 1:    {
43: 1:      'answer': '0',
43: 1:      'question': '1',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '4',
43: 1:      'question': '2',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '22',
43: 1:      'question': '3',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '70',
43: 1:      'question': '4',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '170',
43: 1:      'question': '5',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '350',
43: 1:      'question': '6',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '644',
43: 1:      'question': '7',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '1092',
43: 1:      'question': '8',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '1740',
43: 1:      'question': '9',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '2640',
43: 1:      'question': '10',
43: 1:      'valid': true
43: 1:    }
43: 1:  ],
43: 1:  'level': 2,
43: 1:  'nextQuestion': '11',
43: 1:  'questions': [
43: 1:    '1',
43: 1:    '2',
43: 1:    '3',
43: 1:    '4',
43: 1:    '5',
43: 1:    '6',
43: 1:    '7',
43: 1:    '8',
43: 1:    '9',
43: 1:    '10',
43: 1:    '11'
43: 1:  ]
43: 1:}
43: 1:Scores: 769
43: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850']')
43: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
44: 1:BoardData {
44: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
44: 1:  'expectedAnswer': '5434',
44: 1:  'history': [
44: 1:    {
44: 1:      'answer': '0',
44: 1:      'question': '1',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '4',
44: 1:      'question': '2',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '22',
44: 1:      'question': '3',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '70',
44: 1:      'question': '4',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '170',
44: 1:      'question': '5',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '350',
44: 1:      'question': '6',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '644',
44: 1:      'question': '7',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '1092',
44: 1:      'question': '8',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '1740',
44: 1:      'question': '9',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '2640',
44: 1:      'question': '10',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '3850',
44: 1:      'question': '11',
44: 1:      'valid': true
44: 1:    }
44: 1:  ],
44: 1:  'level': 2,
44: 1:  'nextQuestion': '12',
44: 1:  'questions': [
44: 1:    '1',
44: 1:    '2',
44: 1:    '3',
44: 1:    '4',
44: 1:    '5',
44: 1:    '6',
44: 1:    '7',
44: 1:    '8',
44: 1:    '9',
44: 1:    '10',
44: 1:    '11',
44: 1:    '12'
44: 1:  ]
44: 1:}
44: 1:Scores: 773
44: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434']')
44: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
45: 1:BoardData {
45: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
45: 1:  'expectedAnswer': '7462',
45: 1:  'history': [
45: 1:    {
45: 1:      'answer': '0',
45: 1:      'question': '1',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '4',
45: 1:      'question': '2',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '22',
45: 1:      'question': '3',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '70',
45: 1:      'question': '4',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '170',
45: 1:      'question': '5',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '350',
45: 1:      'question': '6',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '644',
45: 1:      'question': '7',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '1092',
45: 1:      'question': '8',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '1740',
45: 1:      'question': '9',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '2640',
45: 1:      'question': '10',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '3850',
45: 1:      'question': '11',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '5434',
45: 1:      'question': '12',
45: 1:      'valid': true
45: 1:    }
45: 1:  ],
45: 1:  'level': 2,
45: 1:  'nextQuestion': '13',
45: 1:  'questions': [
45: 1:    '1',
45: 1:    '2',
45: 1:    '3',
45: 1:    '4',
45: 1:    '5',
45: 1:    '6',
45: 1:    '7',
45: 1:    '8',
45: 1:    '9',
45: 1:    '10',
45: 1:    '11',
45: 1:    '12',
45: 1:    '13'
45: 1:  ]
45: 1:}
45: 1:Scores: 777
45: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462']')
45: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
46: 1:BoardData {
46: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
46: 1:  'expectedAnswer': '10010',
46: 1:  'history': [
46: 1:    {
46: 1:      'answer': '0',
46: 1:      'question': '1',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '4',
46: 1:      'question': '2',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '22',
46: 1:      'question': '3',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '70',
46: 1:      'question': '4',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '170',
46: 1:      'question': '5',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '350',
46: 1:      'question': '6',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '644',
46: 1:      'question': '7',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '1092',
46: 1:      'question': '8',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '1740',
46: 1:      'question': '9',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '2640',
46: 1:      'question': '10',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '3850',
46: 1:      'question': '11',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '5434',
46: 1:      'question': '12',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '7462',
46: 1:      'question': '13',
46: 1:      'valid': true
46: 1:    }
46: 1:  ],
46: 1:  'level': 2,
46: 1:  'nextQuestion': '14',
46: 1:  'questions': [
46: 1:    '1',
46: 1:    '2',
46: 1:    '3',
46: 1:    '4',
46: 1:    '5',
46: 1:    '6',
46: 1:    '7',
46: 1:    '8',
46: 1:    '9',
46: 1:    '10',
46: 1:    '11',
46: 1:    '12',
46: 1:    '13',
46: 1:    '14'
46: 1:  ]
46: 1:}
46: 1:Scores: 781
46: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010']')
46: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
47: 1:BoardData {
47: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
47: 1:  'expectedAnswer': '13160',
47: 1:  'history': [
47: 1:    {
47: 1:      'answer': '0',
47: 1:      'question': '1',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '4',
47: 1:      'question': '2',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '22',
47: 1:      'question': '3',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '70',
47: 1:      'question': '4',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '170',
47: 1:      'question': '5',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '350',
47: 1:      'question': '6',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '644',
47: 1:      'question': '7',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '1092',
47: 1:      'question': '8',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '1740',
47: 1:      'question': '9',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '2640',
47: 1:      'question': '10',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '3850',
47: 1:      'question': '11',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '5434',
47: 1:      'question': '12',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '7462',
47: 1:      'question': '13',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '10010',
47: 1:      'question': '14',
47: 1:      'valid': true
47: 1:    }
47: 1:  ],
47: 1:  'level': 2,
47: 1:  'nextQuestion': '15',
47: 1:  'questions': [
47: 1:    '1',
47: 1:    '2',
47: 1:    '3',
47: 1:    '4',
47: 1:    '5',
47: 1:    '6',
47: 1:    '7',
47: 1:    '8',
47: 1:    '9',
47: 1:    '10',
47: 1:    '11',
47: 1:    '12',
47: 1:    '13',
47: 1:    '14',
47: 1:    '15'
47: 1:  ]
47: 1:}
47: 1:Scores: 785
47: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160']')
47: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
48: 1:BoardData {
48: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
48: 1:  'expectedAnswer': '17000',
48: 1:  'history': [
48: 1:    {
48: 1:      'answer': '0',
48: 1:      'question': '1',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '4',
48: 1:      'question': '2',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '22',
48: 1:      'question': '3',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '70',
48: 1:      'question': '4',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '170',
48: 1:      'question': '5',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '350',
48: 1:      'question': '6',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '644',
48: 1:      'question': '7',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '1092',
48: 1:      'question': '8',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '1740',
48: 1:      'question': '9',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '2640',
48: 1:      'question': '10',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '3850',
48: 1:      'question': '11',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '5434',
48: 1:      'question': '12',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '7462',
48: 1:      'question': '13',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '10010',
48: 1:      'question': '14',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '13160',
48: 1:      'question': '15',
48: 1:      'valid': true
48: 1:    }
48: 1:  ],
48: 1:  'level': 2,
48: 1:  'nextQuestion': '16',
48: 1:  'questions': [
48: 1:    '1',
48: 1:    '2',
48: 1:    '3',
48: 1:    '4',
48: 1:    '5',
48: 1:    '6',
48: 1:    '7',
48: 1:    '8',
48: 1:    '9',
48: 1:    '10',
48: 1:    '11',
48: 1:    '12',
48: 1:    '13',
48: 1:    '14',
48: 1:    '15',
48: 1:    '16'
48: 1:  ]
48: 1:}
48: 1:Scores: 789
48: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000']')
48: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
49: 1:BoardData {
49: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
49: 1:  'expectedAnswer': '21624',
49: 1:  'history': [
49: 1:    {
49: 1:      'answer': '0',
49: 1:      'question': '1',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '4',
49: 1:      'question': '2',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '22',
49: 1:      'question': '3',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '70',
49: 1:      'question': '4',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '170',
49: 1:      'question': '5',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '350',
49: 1:      'question': '6',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '644',
49: 1:      'question': '7',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '1092',
49: 1:      'question': '8',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '1740',
49: 1:      'question': '9',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '2640',
49: 1:      'question': '10',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '3850',
49: 1:      'question': '11',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '5434',
49: 1:      'question': '12',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '7462',
49: 1:      'question': '13',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '10010',
49: 1:      'question': '14',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '13160',
49: 1:      'question': '15',
49: 1:      'valid': true
49: 1:    },
49: 1:    {
49: 1:      'answer': '17000',
49: 1:      'question': '16',
49: 1:      'valid': true
49: 1:    }
49: 1:  ],
49: 1:  'level': 2,
49: 1:  'nextQuestion': '17',
49: 1:  'questions': [
49: 1:    '1',
49: 1:    '2',
49: 1:    '3',
49: 1:    '4',
49: 1:    '5',
49: 1:    '6',
49: 1:    '7',
49: 1:    '8',
49: 1:    '9',
49: 1:    '10',
49: 1:    '11',
49: 1:    '12',
49: 1:    '13',
49: 1:    '14',
49: 1:    '15',
49: 1:    '16',
49: 1:    '17'
49: 1:  ]
49: 1:}
49: 1:Scores: 793
49: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624']')
49: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
50: 1:BoardData {
50: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
50: 1:  'expectedAnswer': '27132',
50: 1:  'history': [
50: 1:    {
50: 1:      'answer': '0',
50: 1:      'question': '1',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '4',
50: 1:      'question': '2',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '22',
50: 1:      'question': '3',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '70',
50: 1:      'question': '4',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '170',
50: 1:      'question': '5',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '350',
50: 1:      'question': '6',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '644',
50: 1:      'question': '7',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '1092',
50: 1:      'question': '8',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '1740',
50: 1:      'question': '9',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '2640',
50: 1:      'question': '10',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '3850',
50: 1:      'question': '11',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '5434',
50: 1:      'question': '12',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '7462',
50: 1:      'question': '13',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '10010',
50: 1:      'question': '14',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '13160',
50: 1:      'question': '15',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '17000',
50: 1:      'question': '16',
50: 1:      'valid': true
50: 1:    },
50: 1:    {
50: 1:      'answer': '21624',
50: 1:      'question': '17',
50: 1:      'valid': true
50: 1:    }
50: 1:  ],
50: 1:  'level': 2,
50: 1:  'nextQuestion': '18',
50: 1:  'questions': [
50: 1:    '1',
50: 1:    '2',
50: 1:    '3',
50: 1:    '4',
50: 1:    '5',
50: 1:    '6',
50: 1:    '7',
50: 1:    '8',
50: 1:    '9',
50: 1:    '10',
50: 1:    '11',
50: 1:    '12',
50: 1:    '13',
50: 1:    '14',
50: 1:    '15',
50: 1:    '16',
50: 1:    '17',
50: 1:    '18'
50: 1:  ]
50: 1:}
50: 1:Scores: 797
50: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132']')
50: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
51: 1:BoardData {
51: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
51: 1:  'expectedAnswer': '33630',
51: 1:  'history': [
51: 1:    {
51: 1:      'answer': '0',
51: 1:      'question': '1',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '4',
51: 1:      'question': '2',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '22',
51: 1:      'question': '3',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '70',
51: 1:      'question': '4',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '170',
51: 1:      'question': '5',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '350',
51: 1:      'question': '6',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '644',
51: 1:      'question': '7',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '1092',
51: 1:      'question': '8',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '1740',
51: 1:      'question': '9',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '2640',
51: 1:      'question': '10',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '3850',
51: 1:      'question': '11',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '5434',
51: 1:      'question': '12',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '7462',
51: 1:      'question': '13',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '10010',
51: 1:      'question': '14',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '13160',
51: 1:      'question': '15',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '17000',
51: 1:      'question': '16',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '21624',
51: 1:      'question': '17',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '27132',
51: 1:      'question': '18',
51: 1:      'valid': true
51: 1:    }
51: 1:  ],
51: 1:  'level': 2,
51: 1:  'nextQuestion': '19',
51: 1:  'questions': [
51: 1:    '1',
51: 1:    '2',
51: 1:    '3',
51: 1:    '4',
51: 1:    '5',
51: 1:    '6',
51: 1:    '7',
51: 1:    '8',
51: 1:    '9',
51: 1:    '10',
51: 1:    '11',
51: 1:    '12',
51: 1:    '13',
51: 1:    '14',
51: 1:    '15',
51: 1:    '16',
51: 1:    '17',
51: 1:    '18',
51: 1:    '19'
51: 1:  ]
51: 1:}
51: 1:Scores: 801
51: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630']')
51: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
52: 1:BoardData {
52: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
52: 1:  'expectedAnswer': '41230',
52: 1:  'history': [
52: 1:    {
52: 1:      'answer': '0',
52: 1:      'question': '1',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '4',
52: 1:      'question': '2',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '22',
52: 1:      'question': '3',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '70',
52: 1:      'question': '4',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '170',
52: 1:      'question': '5',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '350',
52: 1:      'question': '6',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '644',
52: 1:      'question': '7',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '1092',
52: 1:      'question': '8',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '1740',
52: 1:      'question': '9',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '2640',
52: 1:      'question': '10',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '3850',
52: 1:      'question': '11',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '5434',
52: 1:      'question': '12',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '7462',
52: 1:      'question': '13',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '10010',
52: 1:      'question': '14',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '13160',
52: 1:      'question': '15',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '17000',
52: 1:      'question': '16',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '21624',
52: 1:      'question': '17',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '27132',
52: 1:      'question': '18',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '33630',
52: 1:      'question': '19',
52: 1:      'valid': true
52: 1:    }
52: 1:  ],
52: 1:  'level': 2,
52: 1:  'nextQuestion': '20',
52: 1:  'questions': [
52: 1:    '1',
52: 1:    '2',
52: 1:    '3',
52: 1:    '4',
52: 1:    '5',
52: 1:    '6',
52: 1:    '7',
52: 1:    '8',
52: 1:    '9',
52: 1:    '10',
52: 1:    '11',
52: 1:    '12',
52: 1:    '13',
52: 1:    '14',
52: 1:    '15',
52: 1:    '16',
52: 1:    '17',
52: 1:    '18',
52: 1:    '19',
52: 1:    '20'
52: 1:  ]
52: 1:}
52: 1:Scores: 805
52: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230']')
52: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
53: 1:BoardData {
53: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
53: 1:  'expectedAnswer': '50050',
53: 1:  'history': [
53: 1:    {
53: 1:      'answer': '0',
53: 1:      'question': '1',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '4',
53: 1:      'question': '2',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '22',
53: 1:      'question': '3',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '70',
53: 1:      'question': '4',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '170',
53: 1:      'question': '5',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '350',
53: 1:      'question': '6',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '644',
53: 1:      'question': '7',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '1092',
53: 1:      'question': '8',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '1740',
53: 1:      'question': '9',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '2640',
53: 1:      'question': '10',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '3850',
53: 1:      'question': '11',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '5434',
53: 1:      'question': '12',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '7462',
53: 1:      'question': '13',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '10010',
53: 1:      'question': '14',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '13160',
53: 1:      'question': '15',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '17000',
53: 1:      'question': '16',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '21624',
53: 1:      'question': '17',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '27132',
53: 1:      'question': '18',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '33630',
53: 1:      'question': '19',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '41230',
53: 1:      'question': '20',
53: 1:      'valid': true
53: 1:    }
53: 1:  ],
53: 1:  'level': 2,
53: 1:  'nextQuestion': '21',
53: 1:  'questions': [
53: 1:    '1',
53: 1:    '2',
53: 1:    '3',
53: 1:    '4',
53: 1:    '5',
53: 1:    '6',
53: 1:    '7',
53: 1:    '8',
53: 1:    '9',
53: 1:    '10',
53: 1:    '11',
53: 1:    '12',
53: 1:    '13',
53: 1:    '14',
53: 1:    '15',
53: 1:    '16',
53: 1:    '17',
53: 1:    '18',
53: 1:    '19',
53: 1:    '20',
53: 1:    '21'
53: 1:  ]
53: 1:}
53: 1:Scores: 809
53: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050']')
53: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
54: 1:BoardData {
54: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
54: 1:  'expectedAnswer': '60214',
54: 1:  'history': [
54: 1:    {
54: 1:      'answer': '0',
54: 1:      'question': '1',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '4',
54: 1:      'question': '2',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '22',
54: 1:      'question': '3',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '70',
54: 1:      'question': '4',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '170',
54: 1:      'question': '5',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '350',
54: 1:      'question': '6',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '644',
54: 1:      'question': '7',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '1092',
54: 1:      'question': '8',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '1740',
54: 1:      'question': '9',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '2640',
54: 1:      'question': '10',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '3850',
54: 1:      'question': '11',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '5434',
54: 1:      'question': '12',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '7462',
54: 1:      'question': '13',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '10010',
54: 1:      'question': '14',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '13160',
54: 1:      'question': '15',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '17000',
54: 1:      'question': '16',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '21624',
54: 1:      'question': '17',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '27132',
54: 1:      'question': '18',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '33630',
54: 1:      'question': '19',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '41230',
54: 1:      'question': '20',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '50050',
54: 1:      'question': '21',
54: 1:      'valid': true
54: 1:    }
54: 1:  ],
54: 1:  'level': 2,
54: 1:  'nextQuestion': '22',
54: 1:  'questions': [
54: 1:    '1',
54: 1:    '2',
54: 1:    '3',
54: 1:    '4',
54: 1:    '5',
54: 1:    '6',
54: 1:    '7',
54: 1:    '8',
54: 1:    '9',
54: 1:    '10',
54: 1:    '11',
54: 1:    '12',
54: 1:    '13',
54: 1:    '14',
54: 1:    '15',
54: 1:    '16',
54: 1:    '17',
54: 1:    '18',
54: 1:    '19',
54: 1:    '20',
54: 1:    '21',
54: 1:    '22'
54: 1:  ]
54: 1:}
54: 1:Scores: 813
54: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214']')
54: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
55: 1:BoardData {
55: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
55: 1:  'expectedAnswer': '71852',
55: 1:  'history': [
55: 1:    {
55: 1:      'answer': '0',
55: 1:      'question': '1',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '4',
55: 1:      'question': '2',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '22',
55: 1:      'question': '3',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '70',
55: 1:      'question': '4',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '170',
55: 1:      'question': '5',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '350',
55: 1:      'question': '6',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '644',
55: 1:      'question': '7',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '1092',
55: 1:      'question': '8',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '1740',
55: 1:      'question': '9',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '2640',
55: 1:      'question': '10',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '3850',
55: 1:      'question': '11',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '5434',
55: 1:      'question': '12',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '7462',
55: 1:      'question': '13',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '10010',
55: 1:      'question': '14',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '13160',
55: 1:      'question': '15',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '17000',
55: 1:      'question': '16',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '21624',
55: 1:      'question': '17',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '27132',
55: 1:      'question': '18',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '33630',
55: 1:      'question': '19',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '41230',
55: 1:      'question': '20',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '50050',
55: 1:      'question': '21',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '60214',
55: 1:      'question': '22',
55: 1:      'valid': true
55: 1:    }
55: 1:  ],
55: 1:  'level': 2,
55: 1:  'nextQuestion': '23',
55: 1:  'questions': [
55: 1:    '1',
55: 1:    '2',
55: 1:    '3',
55: 1:    '4',
55: 1:    '5',
55: 1:    '6',
55: 1:    '7',
55: 1:    '8',
55: 1:    '9',
55: 1:    '10',
55: 1:    '11',
55: 1:    '12',
55: 1:    '13',
55: 1:    '14',
55: 1:    '15',
55: 1:    '16',
55: 1:    '17',
55: 1:    '18',
55: 1:    '19',
55: 1:    '20',
55: 1:    '21',
55: 1:    '22',
55: 1:    '23'
55: 1:  ]
55: 1:}
55: 1:Scores: 817
55: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852']')
55: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
56: 1:BoardData {
56: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
56: 1:  'expectedAnswer': '85100',
56: 1:  'history': [
56: 1:    {
56: 1:      'answer': '0',
56: 1:      'question': '1',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '4',
56: 1:      'question': '2',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '22',
56: 1:      'question': '3',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '70',
56: 1:      'question': '4',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '170',
56: 1:      'question': '5',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '350',
56: 1:      'question': '6',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '644',
56: 1:      'question': '7',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '1092',
56: 1:      'question': '8',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '1740',
56: 1:      'question': '9',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '2640',
56: 1:      'question': '10',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '3850',
56: 1:      'question': '11',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '5434',
56: 1:      'question': '12',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '7462',
56: 1:      'question': '13',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '10010',
56: 1:      'question': '14',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '13160',
56: 1:      'question': '15',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '17000',
56: 1:      'question': '16',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '21624',
56: 1:      'question': '17',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '27132',
56: 1:      'question': '18',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '33630',
56: 1:      'question': '19',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '41230',
56: 1:      'question': '20',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '50050',
56: 1:      'question': '21',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '60214',
56: 1:      'question': '22',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '71852',
56: 1:      'question': '23',
56: 1:      'valid': true
56: 1:    }
56: 1:  ],
56: 1:  'level': 2,
56: 1:  'nextQuestion': '24',
56: 1:  'questions': [
56: 1:    '1',
56: 1:    '2',
56: 1:    '3',
56: 1:    '4',
56: 1:    '5',
56: 1:    '6',
56: 1:    '7',
56: 1:    '8',
56: 1:    '9',
56: 1:    '10',
56: 1:    '11',
56: 1:    '12',
56: 1:    '13',
56: 1:    '14',
56: 1:    '15',
56: 1:    '16',
56: 1:    '17',
56: 1:    '18',
56: 1:    '19',
56: 1:    '20',
56: 1:    '21',
56: 1:    '22',
56: 1:    '23',
56: 1:    '24'
56: 1:  ]
56: 1:}
56: 1:Scores: 821
56: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852', '85100']')
56: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
57: 1:BoardData {
57: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
57: 1:  'expectedAnswer': '100100',
57: 1:  'history': [
57: 1:    {
57: 1:      'answer': '0',
57: 1:      'question': '1',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '4',
57: 1:      'question': '2',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '22',
57: 1:      'question': '3',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '70',
57: 1:      'question': '4',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '170',
57: 1:      'question': '5',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '350',
57: 1:      'question': '6',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '644',
57: 1:      'question': '7',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '1092',
57: 1:      'question': '8',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '1740',
57: 1:      'question': '9',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '2640',
57: 1:      'question': '10',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '3850',
57: 1:      'question': '11',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '5434',
57: 1:      'question': '12',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '7462',
57: 1:      'question': '13',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '10010',
57: 1:      'question': '14',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '13160',
57: 1:      'question': '15',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '17000',
57: 1:      'question': '16',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '21624',
57: 1:      'question': '17',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '27132',
57: 1:      'question': '18',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '33630',
57: 1:      'question': '19',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '41230',
57: 1:      'question': '20',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '50050',
57: 1:      'question': '21',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '60214',
57: 1:      'question': '22',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '71852',
57: 1:      'question': '23',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '85100',
57: 1:      'question': '24',
57: 1:      'valid': true
57: 1:    }
57: 1:  ],
57: 1:  'level': 2,
57: 1:  'nextQuestion': '25',
57: 1:  'questions': [
57: 1:    '1',
57: 1:    '2',
57: 1:    '3',
57: 1:    '4',
57: 1:    '5',
57: 1:    '6',
57: 1:    '7',
57: 1:    '8',
57: 1:    '9',
57: 1:    '10',
57: 1:    '11',
57: 1:    '12',
57: 1:    '13',
57: 1:    '14',
57: 1:    '15',
57: 1:    '16',
57: 1:    '17',
57: 1:    '18',
57: 1:    '19',
57: 1:    '20',
57: 1:    '21',
57: 1:    '22',
57: 1:    '23',
57: 1:    '24',
57: 1:    '25'
57: 1:  ]
57: 1:}
57: 1:Scores: 825
57: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852', '85100', '100100']')
57: 1:Fire Event: PassTest{complexity=10, testCount=25}
57: 1:Fire Event: NextAlgorithm{complexity=10, time=0}
------------------------------------------
58: 1:BoardData {
58: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
58: 1:  'history': [
58: 1:    {
58: 1:      'answer': '0',
58: 1:      'question': '1',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '4',
58: 1:      'question': '2',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '22',
58: 1:      'question': '3',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '70',
58: 1:      'question': '4',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '170',
58: 1:      'question': '5',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '350',
58: 1:      'question': '6',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '644',
58: 1:      'question': '7',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '1092',
58: 1:      'question': '8',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '1740',
58: 1:      'question': '9',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '2640',
58: 1:      'question': '10',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '3850',
58: 1:      'question': '11',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '5434',
58: 1:      'question': '12',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '7462',
58: 1:      'question': '13',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '10010',
58: 1:      'question': '14',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '13160',
58: 1:      'question': '15',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '17000',
58: 1:      'question': '16',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '21624',
58: 1:      'question': '17',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '27132',
58: 1:      'question': '18',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '33630',
58: 1:      'question': '19',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '41230',
58: 1:      'question': '20',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '50050',
58: 1:      'question': '21',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '60214',
58: 1:      'question': '22',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '71852',
58: 1:      'question': '23',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '85100',
58: 1:      'question': '24',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '100100',
58: 1:      'question': '25',
58: 1:      'valid': true
58: 1:    }
58: 1:  ],
58: 1:  'level': 2,
58: 1:  'questions': []
58: 1:}
58: 1:Scores: 2178
58: 1:Answer: message('StartNextLevel')
58: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
59: 1:BoardData {
59: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
59: 1:  'expectedAnswer': '1',
59: 1:  'history': [],
59: 1:  'level': 3,
59: 1:  'nextQuestion': '0',
59: 1:  'questions': ['0']
59: 1:}
59: 1:Scores: 2178
59: 1:Answer: message('['1']')
59: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
60: 1:BoardData {
60: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
60: 1:  'expectedAnswer': '0',
60: 1:  'history': [{
60: 1:    'answer': '1',
60: 1:    'question': '0',
60: 1:    'valid': true
60: 1:  }],
60: 1:  'level': 3,
60: 1:  'nextQuestion': '1',
60: 1:  'questions': [
60: 1:    '0',
60: 1:    '1'
60: 1:  ]
60: 1:}
60: 1:Scores: 2182
60: 1:Answer: message('['1', '0']')
60: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
61: 1:BoardData {
61: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
61: 1:  'expectedAnswer': '3',
61: 1:  'history': [
61: 1:    {
61: 1:      'answer': '1',
61: 1:      'question': '0',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '0',
61: 1:      'question': '1',
61: 1:      'valid': true
61: 1:    }
61: 1:  ],
61: 1:  'level': 3,
61: 1:  'nextQuestion': '2',
61: 1:  'questions': [
61: 1:    '0',
61: 1:    '1',
61: 1:    '2'
61: 1:  ]
61: 1:}
61: 1:Scores: 2186
61: 1:Answer: message('['1', '0', '3']')
61: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
62: 1:BoardData {
62: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
62: 1:  'expectedAnswer': '2',
62: 1:  'history': [
62: 1:    {
62: 1:      'answer': '1',
62: 1:      'question': '0',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '0',
62: 1:      'question': '1',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '3',
62: 1:      'question': '2',
62: 1:      'valid': true
62: 1:    }
62: 1:  ],
62: 1:  'level': 3,
62: 1:  'nextQuestion': '3',
62: 1:  'questions': [
62: 1:    '0',
62: 1:    '1',
62: 1:    '2',
62: 1:    '3'
62: 1:  ]
62: 1:}
62: 1:Scores: 2190
62: 1:Answer: message('['1', '0', '3', '2']')
62: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
63: 1:BoardData {
63: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
63: 1:  'expectedAnswer': '4',
63: 1:  'history': [
63: 1:    {
63: 1:      'answer': '1',
63: 1:      'question': '0',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '0',
63: 1:      'question': '1',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '3',
63: 1:      'question': '2',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '2',
63: 1:      'question': '3',
63: 1:      'valid': true
63: 1:    }
63: 1:  ],
63: 1:  'level': 3,
63: 1:  'nextQuestion': '5',
63: 1:  'questions': [
63: 1:    '0',
63: 1:    '1',
63: 1:    '2',
63: 1:    '3',
63: 1:    '5'
63: 1:  ]
63: 1:}
63: 1:Scores: 2194
63: 1:Answer: message('['1', '0', '3', '2', '4']')
63: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
64: 1:BoardData {
64: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
64: 1:  'expectedAnswer': '6',
64: 1:  'history': [
64: 1:    {
64: 1:      'answer': '1',
64: 1:      'question': '0',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '0',
64: 1:      'question': '1',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '3',
64: 1:      'question': '2',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '2',
64: 1:      'question': '3',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '4',
64: 1:      'question': '5',
64: 1:      'valid': true
64: 1:    }
64: 1:  ],
64: 1:  'level': 3,
64: 1:  'nextQuestion': '7',
64: 1:  'questions': [
64: 1:    '0',
64: 1:    '1',
64: 1:    '2',
64: 1:    '3',
64: 1:    '5',
64: 1:    '7'
64: 1:  ]
64: 1:}
64: 1:Scores: 2198
64: 1:Answer: message('['1', '0', '3', '2', '4', '6']')
64: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
65: 1:BoardData {
65: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
65: 1:  'expectedAnswer': '8',
65: 1:  'history': [
65: 1:    {
65: 1:      'answer': '1',
65: 1:      'question': '0',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '0',
65: 1:      'question': '1',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '3',
65: 1:      'question': '2',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '2',
65: 1:      'question': '3',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '4',
65: 1:      'question': '5',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '6',
65: 1:      'question': '7',
65: 1:      'valid': true
65: 1:    }
65: 1:  ],
65: 1:  'level': 3,
65: 1:  'nextQuestion': '9',
65: 1:  'questions': [
65: 1:    '0',
65: 1:    '1',
65: 1:    '2',
65: 1:    '3',
65: 1:    '5',
65: 1:    '7',
65: 1:    '9'
65: 1:  ]
65: 1:}
65: 1:Scores: 2202
65: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8']')
65: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
66: 1:BoardData {
66: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
66: 1:  'expectedAnswer': '10',
66: 1:  'history': [
66: 1:    {
66: 1:      'answer': '1',
66: 1:      'question': '0',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '0',
66: 1:      'question': '1',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '3',
66: 1:      'question': '2',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '2',
66: 1:      'question': '3',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '4',
66: 1:      'question': '5',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '6',
66: 1:      'question': '7',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '8',
66: 1:      'question': '9',
66: 1:      'valid': true
66: 1:    }
66: 1:  ],
66: 1:  'level': 3,
66: 1:  'nextQuestion': '11',
66: 1:  'questions': [
66: 1:    '0',
66: 1:    '1',
66: 1:    '2',
66: 1:    '3',
66: 1:    '5',
66: 1:    '7',
66: 1:    '9',
66: 1:    '11'
66: 1:  ]
66: 1:}
66: 1:Scores: 2206
66: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10']')
66: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
67: 1:BoardData {
67: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
67: 1:  'expectedAnswer': '15',
67: 1:  'history': [
67: 1:    {
67: 1:      'answer': '1',
67: 1:      'question': '0',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '0',
67: 1:      'question': '1',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '3',
67: 1:      'question': '2',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '2',
67: 1:      'question': '3',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '4',
67: 1:      'question': '5',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '6',
67: 1:      'question': '7',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '8',
67: 1:      'question': '9',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '10',
67: 1:      'question': '11',
67: 1:      'valid': true
67: 1:    }
67: 1:  ],
67: 1:  'level': 3,
67: 1:  'nextQuestion': '14',
67: 1:  'questions': [
67: 1:    '0',
67: 1:    '1',
67: 1:    '2',
67: 1:    '3',
67: 1:    '5',
67: 1:    '7',
67: 1:    '9',
67: 1:    '11',
67: 1:    '14'
67: 1:  ]
67: 1:}
67: 1:Scores: 2210
67: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15']')
67: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
68: 1:BoardData {
68: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
68: 1:  'expectedAnswer': '16',
68: 1:  'history': [
68: 1:    {
68: 1:      'answer': '1',
68: 1:      'question': '0',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '0',
68: 1:      'question': '1',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '3',
68: 1:      'question': '2',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '2',
68: 1:      'question': '3',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '4',
68: 1:      'question': '5',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '6',
68: 1:      'question': '7',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '8',
68: 1:      'question': '9',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '10',
68: 1:      'question': '11',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '15',
68: 1:      'question': '14',
68: 1:      'valid': true
68: 1:    }
68: 1:  ],
68: 1:  'level': 3,
68: 1:  'nextQuestion': '17',
68: 1:  'questions': [
68: 1:    '0',
68: 1:    '1',
68: 1:    '2',
68: 1:    '3',
68: 1:    '5',
68: 1:    '7',
68: 1:    '9',
68: 1:    '11',
68: 1:    '14',
68: 1:    '17'
68: 1:  ]
68: 1:}
68: 1:Scores: 2214
68: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16']')
68: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
69: 1:BoardData {
69: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
69: 1:  'expectedAnswer': '21',
69: 1:  'history': [
69: 1:    {
69: 1:      'answer': '1',
69: 1:      'question': '0',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '0',
69: 1:      'question': '1',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '3',
69: 1:      'question': '2',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '2',
69: 1:      'question': '3',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '4',
69: 1:      'question': '5',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '6',
69: 1:      'question': '7',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '8',
69: 1:      'question': '9',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '10',
69: 1:      'question': '11',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '15',
69: 1:      'question': '14',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '16',
69: 1:      'question': '17',
69: 1:      'valid': true
69: 1:    }
69: 1:  ],
69: 1:  'level': 3,
69: 1:  'nextQuestion': '20',
69: 1:  'questions': [
69: 1:    '0',
69: 1:    '1',
69: 1:    '2',
69: 1:    '3',
69: 1:    '5',
69: 1:    '7',
69: 1:    '9',
69: 1:    '11',
69: 1:    '14',
69: 1:    '17',
69: 1:    '20'
69: 1:  ]
69: 1:}
69: 1:Scores: 2218
69: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21']')
69: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
70: 1:BoardData {
70: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
70: 1:  'expectedAnswer': '22',
70: 1:  'history': [
70: 1:    {
70: 1:      'answer': '1',
70: 1:      'question': '0',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '0',
70: 1:      'question': '1',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '3',
70: 1:      'question': '2',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '2',
70: 1:      'question': '3',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '4',
70: 1:      'question': '5',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '6',
70: 1:      'question': '7',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '8',
70: 1:      'question': '9',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '10',
70: 1:      'question': '11',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '15',
70: 1:      'question': '14',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '16',
70: 1:      'question': '17',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '21',
70: 1:      'question': '20',
70: 1:      'valid': true
70: 1:    }
70: 1:  ],
70: 1:  'level': 3,
70: 1:  'nextQuestion': '23',
70: 1:  'questions': [
70: 1:    '0',
70: 1:    '1',
70: 1:    '2',
70: 1:    '3',
70: 1:    '5',
70: 1:    '7',
70: 1:    '9',
70: 1:    '11',
70: 1:    '14',
70: 1:    '17',
70: 1:    '20',
70: 1:    '23'
70: 1:  ]
70: 1:}
70: 1:Scores: 2222
70: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22']')
70: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
71: 1:BoardData {
71: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
71: 1:  'expectedAnswer': '27',
71: 1:  'history': [
71: 1:    {
71: 1:      'answer': '1',
71: 1:      'question': '0',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '0',
71: 1:      'question': '1',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '3',
71: 1:      'question': '2',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '2',
71: 1:      'question': '3',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '4',
71: 1:      'question': '5',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '6',
71: 1:      'question': '7',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '8',
71: 1:      'question': '9',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '10',
71: 1:      'question': '11',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '15',
71: 1:      'question': '14',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '16',
71: 1:      'question': '17',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '21',
71: 1:      'question': '20',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '22',
71: 1:      'question': '23',
71: 1:      'valid': true
71: 1:    }
71: 1:  ],
71: 1:  'level': 3,
71: 1:  'nextQuestion': '26',
71: 1:  'questions': [
71: 1:    '0',
71: 1:    '1',
71: 1:    '2',
71: 1:    '3',
71: 1:    '5',
71: 1:    '7',
71: 1:    '9',
71: 1:    '11',
71: 1:    '14',
71: 1:    '17',
71: 1:    '20',
71: 1:    '23',
71: 1:    '26'
71: 1:  ]
71: 1:}
71: 1:Scores: 2226
71: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27']')
71: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
72: 1:BoardData {
72: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
72: 1:  'expectedAnswer': '28',
72: 1:  'history': [
72: 1:    {
72: 1:      'answer': '1',
72: 1:      'question': '0',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '0',
72: 1:      'question': '1',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '3',
72: 1:      'question': '2',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '2',
72: 1:      'question': '3',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '4',
72: 1:      'question': '5',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '6',
72: 1:      'question': '7',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '8',
72: 1:      'question': '9',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '10',
72: 1:      'question': '11',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '15',
72: 1:      'question': '14',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '16',
72: 1:      'question': '17',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '21',
72: 1:      'question': '20',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '22',
72: 1:      'question': '23',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '27',
72: 1:      'question': '26',
72: 1:      'valid': true
72: 1:    }
72: 1:  ],
72: 1:  'level': 3,
72: 1:  'nextQuestion': '29',
72: 1:  'questions': [
72: 1:    '0',
72: 1:    '1',
72: 1:    '2',
72: 1:    '3',
72: 1:    '5',
72: 1:    '7',
72: 1:    '9',
72: 1:    '11',
72: 1:    '14',
72: 1:    '17',
72: 1:    '20',
72: 1:    '23',
72: 1:    '26',
72: 1:    '29'
72: 1:  ]
72: 1:}
72: 1:Scores: 2230
72: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28']')
72: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
73: 1:BoardData {
73: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
73: 1:  'expectedAnswer': '32',
73: 1:  'history': [
73: 1:    {
73: 1:      'answer': '1',
73: 1:      'question': '0',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '0',
73: 1:      'question': '1',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '3',
73: 1:      'question': '2',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '2',
73: 1:      'question': '3',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '4',
73: 1:      'question': '5',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '6',
73: 1:      'question': '7',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '8',
73: 1:      'question': '9',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '10',
73: 1:      'question': '11',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '15',
73: 1:      'question': '14',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '16',
73: 1:      'question': '17',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '21',
73: 1:      'question': '20',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '22',
73: 1:      'question': '23',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '27',
73: 1:      'question': '26',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '28',
73: 1:      'question': '29',
73: 1:      'valid': true
73: 1:    }
73: 1:  ],
73: 1:  'level': 3,
73: 1:  'nextQuestion': '33',
73: 1:  'questions': [
73: 1:    '0',
73: 1:    '1',
73: 1:    '2',
73: 1:    '3',
73: 1:    '5',
73: 1:    '7',
73: 1:    '9',
73: 1:    '11',
73: 1:    '14',
73: 1:    '17',
73: 1:    '20',
73: 1:    '23',
73: 1:    '26',
73: 1:    '29',
73: 1:    '33'
73: 1:  ]
73: 1:}
73: 1:Scores: 2234
73: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32']')
73: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
74: 1:BoardData {
74: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
74: 1:  'expectedAnswer': '36',
74: 1:  'history': [
74: 1:    {
74: 1:      'answer': '1',
74: 1:      'question': '0',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '0',
74: 1:      'question': '1',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '3',
74: 1:      'question': '2',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '2',
74: 1:      'question': '3',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '4',
74: 1:      'question': '5',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '6',
74: 1:      'question': '7',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '8',
74: 1:      'question': '9',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '10',
74: 1:      'question': '11',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '15',
74: 1:      'question': '14',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '16',
74: 1:      'question': '17',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '21',
74: 1:      'question': '20',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '22',
74: 1:      'question': '23',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '27',
74: 1:      'question': '26',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '28',
74: 1:      'question': '29',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '32',
74: 1:      'question': '33',
74: 1:      'valid': true
74: 1:    }
74: 1:  ],
74: 1:  'level': 3,
74: 1:  'nextQuestion': '37',
74: 1:  'questions': [
74: 1:    '0',
74: 1:    '1',
74: 1:    '2',
74: 1:    '3',
74: 1:    '5',
74: 1:    '7',
74: 1:    '9',
74: 1:    '11',
74: 1:    '14',
74: 1:    '17',
74: 1:    '20',
74: 1:    '23',
74: 1:    '26',
74: 1:    '29',
74: 1:    '33',
74: 1:    '37'
74: 1:  ]
74: 1:}
74: 1:Scores: 2238
74: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36']')
74: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
75: 1:BoardData {
75: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
75: 1:  'expectedAnswer': '40',
75: 1:  'history': [
75: 1:    {
75: 1:      'answer': '1',
75: 1:      'question': '0',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '0',
75: 1:      'question': '1',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '3',
75: 1:      'question': '2',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '2',
75: 1:      'question': '3',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '4',
75: 1:      'question': '5',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '6',
75: 1:      'question': '7',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '8',
75: 1:      'question': '9',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '10',
75: 1:      'question': '11',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '15',
75: 1:      'question': '14',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '16',
75: 1:      'question': '17',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '21',
75: 1:      'question': '20',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '22',
75: 1:      'question': '23',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '27',
75: 1:      'question': '26',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '28',
75: 1:      'question': '29',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '32',
75: 1:      'question': '33',
75: 1:      'valid': true
75: 1:    },
75: 1:    {
75: 1:      'answer': '36',
75: 1:      'question': '37',
75: 1:      'valid': true
75: 1:    }
75: 1:  ],
75: 1:  'level': 3,
75: 1:  'nextQuestion': '41',
75: 1:  'questions': [
75: 1:    '0',
75: 1:    '1',
75: 1:    '2',
75: 1:    '3',
75: 1:    '5',
75: 1:    '7',
75: 1:    '9',
75: 1:    '11',
75: 1:    '14',
75: 1:    '17',
75: 1:    '20',
75: 1:    '23',
75: 1:    '26',
75: 1:    '29',
75: 1:    '33',
75: 1:    '37',
75: 1:    '41'
75: 1:  ]
75: 1:}
75: 1:Scores: 2242
75: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40']')
75: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
76: 1:BoardData {
76: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
76: 1:  'expectedAnswer': '44',
76: 1:  'history': [
76: 1:    {
76: 1:      'answer': '1',
76: 1:      'question': '0',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '0',
76: 1:      'question': '1',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '3',
76: 1:      'question': '2',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '2',
76: 1:      'question': '3',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '4',
76: 1:      'question': '5',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '6',
76: 1:      'question': '7',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '8',
76: 1:      'question': '9',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '10',
76: 1:      'question': '11',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '15',
76: 1:      'question': '14',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '16',
76: 1:      'question': '17',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '21',
76: 1:      'question': '20',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '22',
76: 1:      'question': '23',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '27',
76: 1:      'question': '26',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '28',
76: 1:      'question': '29',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '32',
76: 1:      'question': '33',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '36',
76: 1:      'question': '37',
76: 1:      'valid': true
76: 1:    },
76: 1:    {
76: 1:      'answer': '40',
76: 1:      'question': '41',
76: 1:      'valid': true
76: 1:    }
76: 1:  ],
76: 1:  'level': 3,
76: 1:  'nextQuestion': '45',
76: 1:  'questions': [
76: 1:    '0',
76: 1:    '1',
76: 1:    '2',
76: 1:    '3',
76: 1:    '5',
76: 1:    '7',
76: 1:    '9',
76: 1:    '11',
76: 1:    '14',
76: 1:    '17',
76: 1:    '20',
76: 1:    '23',
76: 1:    '26',
76: 1:    '29',
76: 1:    '33',
76: 1:    '37',
76: 1:    '41',
76: 1:    '45'
76: 1:  ]
76: 1:}
76: 1:Scores: 2246
76: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44']')
76: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
77: 1:BoardData {
77: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
77: 1:  'expectedAnswer': '51',
77: 1:  'history': [
77: 1:    {
77: 1:      'answer': '1',
77: 1:      'question': '0',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '0',
77: 1:      'question': '1',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '3',
77: 1:      'question': '2',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '2',
77: 1:      'question': '3',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '4',
77: 1:      'question': '5',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '6',
77: 1:      'question': '7',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '8',
77: 1:      'question': '9',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '10',
77: 1:      'question': '11',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '15',
77: 1:      'question': '14',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '16',
77: 1:      'question': '17',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '21',
77: 1:      'question': '20',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '22',
77: 1:      'question': '23',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '27',
77: 1:      'question': '26',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '28',
77: 1:      'question': '29',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '32',
77: 1:      'question': '33',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '36',
77: 1:      'question': '37',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '40',
77: 1:      'question': '41',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '44',
77: 1:      'question': '45',
77: 1:      'valid': true
77: 1:    }
77: 1:  ],
77: 1:  'level': 3,
77: 1:  'nextQuestion': '50',
77: 1:  'questions': [
77: 1:    '0',
77: 1:    '1',
77: 1:    '2',
77: 1:    '3',
77: 1:    '5',
77: 1:    '7',
77: 1:    '9',
77: 1:    '11',
77: 1:    '14',
77: 1:    '17',
77: 1:    '20',
77: 1:    '23',
77: 1:    '26',
77: 1:    '29',
77: 1:    '33',
77: 1:    '37',
77: 1:    '41',
77: 1:    '45',
77: 1:    '50'
77: 1:  ]
77: 1:}
77: 1:Scores: 2250
77: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51']')
77: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
78: 1:BoardData {
78: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
78: 1:  'expectedAnswer': '54',
78: 1:  'history': [
78: 1:    {
78: 1:      'answer': '1',
78: 1:      'question': '0',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '0',
78: 1:      'question': '1',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '3',
78: 1:      'question': '2',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '2',
78: 1:      'question': '3',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '4',
78: 1:      'question': '5',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '6',
78: 1:      'question': '7',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '8',
78: 1:      'question': '9',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '10',
78: 1:      'question': '11',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '15',
78: 1:      'question': '14',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '16',
78: 1:      'question': '17',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '21',
78: 1:      'question': '20',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '22',
78: 1:      'question': '23',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '27',
78: 1:      'question': '26',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '28',
78: 1:      'question': '29',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '32',
78: 1:      'question': '33',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '36',
78: 1:      'question': '37',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '40',
78: 1:      'question': '41',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '44',
78: 1:      'question': '45',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '51',
78: 1:      'question': '50',
78: 1:      'valid': true
78: 1:    }
78: 1:  ],
78: 1:  'level': 3,
78: 1:  'nextQuestion': '55',
78: 1:  'questions': [
78: 1:    '0',
78: 1:    '1',
78: 1:    '2',
78: 1:    '3',
78: 1:    '5',
78: 1:    '7',
78: 1:    '9',
78: 1:    '11',
78: 1:    '14',
78: 1:    '17',
78: 1:    '20',
78: 1:    '23',
78: 1:    '26',
78: 1:    '29',
78: 1:    '33',
78: 1:    '37',
78: 1:    '41',
78: 1:    '45',
78: 1:    '50',
78: 1:    '55'
78: 1:  ]
78: 1:}
78: 1:Scores: 2254
78: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54']')
78: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
79: 1:BoardData {
79: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
79: 1:  'expectedAnswer': '61',
79: 1:  'history': [
79: 1:    {
79: 1:      'answer': '1',
79: 1:      'question': '0',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '0',
79: 1:      'question': '1',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '3',
79: 1:      'question': '2',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '2',
79: 1:      'question': '3',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '4',
79: 1:      'question': '5',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '6',
79: 1:      'question': '7',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '8',
79: 1:      'question': '9',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '10',
79: 1:      'question': '11',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '15',
79: 1:      'question': '14',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '16',
79: 1:      'question': '17',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '21',
79: 1:      'question': '20',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '22',
79: 1:      'question': '23',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '27',
79: 1:      'question': '26',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '28',
79: 1:      'question': '29',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '32',
79: 1:      'question': '33',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '36',
79: 1:      'question': '37',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '40',
79: 1:      'question': '41',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '44',
79: 1:      'question': '45',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '51',
79: 1:      'question': '50',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '54',
79: 1:      'question': '55',
79: 1:      'valid': true
79: 1:    }
79: 1:  ],
79: 1:  'level': 3,
79: 1:  'nextQuestion': '60',
79: 1:  'questions': [
79: 1:    '0',
79: 1:    '1',
79: 1:    '2',
79: 1:    '3',
79: 1:    '5',
79: 1:    '7',
79: 1:    '9',
79: 1:    '11',
79: 1:    '14',
79: 1:    '17',
79: 1:    '20',
79: 1:    '23',
79: 1:    '26',
79: 1:    '29',
79: 1:    '33',
79: 1:    '37',
79: 1:    '41',
79: 1:    '45',
79: 1:    '50',
79: 1:    '55',
79: 1:    '60'
79: 1:  ]
79: 1:}
79: 1:Scores: 2258
79: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61']')
79: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
80: 1:BoardData {
80: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
80: 1:  'expectedAnswer': '64',
80: 1:  'history': [
80: 1:    {
80: 1:      'answer': '1',
80: 1:      'question': '0',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '0',
80: 1:      'question': '1',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '3',
80: 1:      'question': '2',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '2',
80: 1:      'question': '3',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '4',
80: 1:      'question': '5',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '6',
80: 1:      'question': '7',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '8',
80: 1:      'question': '9',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '10',
80: 1:      'question': '11',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '15',
80: 1:      'question': '14',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '16',
80: 1:      'question': '17',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '21',
80: 1:      'question': '20',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '22',
80: 1:      'question': '23',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '27',
80: 1:      'question': '26',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '28',
80: 1:      'question': '29',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '32',
80: 1:      'question': '33',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '36',
80: 1:      'question': '37',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '40',
80: 1:      'question': '41',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '44',
80: 1:      'question': '45',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '51',
80: 1:      'question': '50',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '54',
80: 1:      'question': '55',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '61',
80: 1:      'question': '60',
80: 1:      'valid': true
80: 1:    }
80: 1:  ],
80: 1:  'level': 3,
80: 1:  'nextQuestion': '65',
80: 1:  'questions': [
80: 1:    '0',
80: 1:    '1',
80: 1:    '2',
80: 1:    '3',
80: 1:    '5',
80: 1:    '7',
80: 1:    '9',
80: 1:    '11',
80: 1:    '14',
80: 1:    '17',
80: 1:    '20',
80: 1:    '23',
80: 1:    '26',
80: 1:    '29',
80: 1:    '33',
80: 1:    '37',
80: 1:    '41',
80: 1:    '45',
80: 1:    '50',
80: 1:    '55',
80: 1:    '60',
80: 1:    '65'
80: 1:  ]
80: 1:}
80: 1:Scores: 2262
80: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64']')
80: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
81: 1:BoardData {
81: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
81: 1:  'expectedAnswer': '71',
81: 1:  'history': [
81: 1:    {
81: 1:      'answer': '1',
81: 1:      'question': '0',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '0',
81: 1:      'question': '1',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '3',
81: 1:      'question': '2',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '2',
81: 1:      'question': '3',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '4',
81: 1:      'question': '5',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '6',
81: 1:      'question': '7',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '8',
81: 1:      'question': '9',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '10',
81: 1:      'question': '11',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '15',
81: 1:      'question': '14',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '16',
81: 1:      'question': '17',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '21',
81: 1:      'question': '20',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '22',
81: 1:      'question': '23',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '27',
81: 1:      'question': '26',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '28',
81: 1:      'question': '29',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '32',
81: 1:      'question': '33',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '36',
81: 1:      'question': '37',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '40',
81: 1:      'question': '41',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '44',
81: 1:      'question': '45',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '51',
81: 1:      'question': '50',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '54',
81: 1:      'question': '55',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '61',
81: 1:      'question': '60',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '64',
81: 1:      'question': '65',
81: 1:      'valid': true
81: 1:    }
81: 1:  ],
81: 1:  'level': 3,
81: 1:  'nextQuestion': '70',
81: 1:  'questions': [
81: 1:    '0',
81: 1:    '1',
81: 1:    '2',
81: 1:    '3',
81: 1:    '5',
81: 1:    '7',
81: 1:    '9',
81: 1:    '11',
81: 1:    '14',
81: 1:    '17',
81: 1:    '20',
81: 1:    '23',
81: 1:    '26',
81: 1:    '29',
81: 1:    '33',
81: 1:    '37',
81: 1:    '41',
81: 1:    '45',
81: 1:    '50',
81: 1:    '55',
81: 1:    '60',
81: 1:    '65',
81: 1:    '70'
81: 1:  ]
81: 1:}
81: 1:Scores: 2266
81: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71']')
81: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
82: 1:BoardData {
82: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
82: 1:  'expectedAnswer': '74',
82: 1:  'history': [
82: 1:    {
82: 1:      'answer': '1',
82: 1:      'question': '0',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '0',
82: 1:      'question': '1',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '3',
82: 1:      'question': '2',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '2',
82: 1:      'question': '3',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '4',
82: 1:      'question': '5',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '6',
82: 1:      'question': '7',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '8',
82: 1:      'question': '9',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '10',
82: 1:      'question': '11',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '15',
82: 1:      'question': '14',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '16',
82: 1:      'question': '17',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '21',
82: 1:      'question': '20',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '22',
82: 1:      'question': '23',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '27',
82: 1:      'question': '26',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '28',
82: 1:      'question': '29',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '32',
82: 1:      'question': '33',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '36',
82: 1:      'question': '37',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '40',
82: 1:      'question': '41',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '44',
82: 1:      'question': '45',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '51',
82: 1:      'question': '50',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '54',
82: 1:      'question': '55',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '61',
82: 1:      'question': '60',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '64',
82: 1:      'question': '65',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '71',
82: 1:      'question': '70',
82: 1:      'valid': true
82: 1:    }
82: 1:  ],
82: 1:  'level': 3,
82: 1:  'nextQuestion': '75',
82: 1:  'questions': [
82: 1:    '0',
82: 1:    '1',
82: 1:    '2',
82: 1:    '3',
82: 1:    '5',
82: 1:    '7',
82: 1:    '9',
82: 1:    '11',
82: 1:    '14',
82: 1:    '17',
82: 1:    '20',
82: 1:    '23',
82: 1:    '26',
82: 1:    '29',
82: 1:    '33',
82: 1:    '37',
82: 1:    '41',
82: 1:    '45',
82: 1:    '50',
82: 1:    '55',
82: 1:    '60',
82: 1:    '65',
82: 1:    '70',
82: 1:    '75'
82: 1:  ]
82: 1:}
82: 1:Scores: 2270
82: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74']')
82: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
83: 1:BoardData {
83: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
83: 1:  'expectedAnswer': '80',
83: 1:  'history': [
83: 1:    {
83: 1:      'answer': '1',
83: 1:      'question': '0',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '0',
83: 1:      'question': '1',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '3',
83: 1:      'question': '2',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '2',
83: 1:      'question': '3',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '4',
83: 1:      'question': '5',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '6',
83: 1:      'question': '7',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '8',
83: 1:      'question': '9',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '10',
83: 1:      'question': '11',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '15',
83: 1:      'question': '14',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '16',
83: 1:      'question': '17',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '21',
83: 1:      'question': '20',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '22',
83: 1:      'question': '23',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '27',
83: 1:      'question': '26',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '28',
83: 1:      'question': '29',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '32',
83: 1:      'question': '33',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '36',
83: 1:      'question': '37',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '40',
83: 1:      'question': '41',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '44',
83: 1:      'question': '45',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '51',
83: 1:      'question': '50',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '54',
83: 1:      'question': '55',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '61',
83: 1:      'question': '60',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '64',
83: 1:      'question': '65',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '71',
83: 1:      'question': '70',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '74',
83: 1:      'question': '75',
83: 1:      'valid': true
83: 1:    }
83: 1:  ],
83: 1:  'level': 3,
83: 1:  'nextQuestion': '81',
83: 1:  'questions': [
83: 1:    '0',
83: 1:    '1',
83: 1:    '2',
83: 1:    '3',
83: 1:    '5',
83: 1:    '7',
83: 1:    '9',
83: 1:    '11',
83: 1:    '14',
83: 1:    '17',
83: 1:    '20',
83: 1:    '23',
83: 1:    '26',
83: 1:    '29',
83: 1:    '33',
83: 1:    '37',
83: 1:    '41',
83: 1:    '45',
83: 1:    '50',
83: 1:    '55',
83: 1:    '60',
83: 1:    '65',
83: 1:    '70',
83: 1:    '75',
83: 1:    '81'
83: 1:  ]
83: 1:}
83: 1:Scores: 2274
83: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74', '80']')
83: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
84: 1:BoardData {
84: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
84: 1:  'expectedAnswer': '86',
84: 1:  'history': [
84: 1:    {
84: 1:      'answer': '1',
84: 1:      'question': '0',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '0',
84: 1:      'question': '1',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '3',
84: 1:      'question': '2',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '2',
84: 1:      'question': '3',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '4',
84: 1:      'question': '5',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '6',
84: 1:      'question': '7',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '8',
84: 1:      'question': '9',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '10',
84: 1:      'question': '11',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '15',
84: 1:      'question': '14',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '16',
84: 1:      'question': '17',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '21',
84: 1:      'question': '20',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '22',
84: 1:      'question': '23',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '27',
84: 1:      'question': '26',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '28',
84: 1:      'question': '29',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '32',
84: 1:      'question': '33',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '36',
84: 1:      'question': '37',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '40',
84: 1:      'question': '41',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '44',
84: 1:      'question': '45',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '51',
84: 1:      'question': '50',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '54',
84: 1:      'question': '55',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '61',
84: 1:      'question': '60',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '64',
84: 1:      'question': '65',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '71',
84: 1:      'question': '70',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '74',
84: 1:      'question': '75',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '80',
84: 1:      'question': '81',
84: 1:      'valid': true
84: 1:    }
84: 1:  ],
84: 1:  'level': 3,
84: 1:  'nextQuestion': '87',
84: 1:  'questions': [
84: 1:    '0',
84: 1:    '1',
84: 1:    '2',
84: 1:    '3',
84: 1:    '5',
84: 1:    '7',
84: 1:    '9',
84: 1:    '11',
84: 1:    '14',
84: 1:    '17',
84: 1:    '20',
84: 1:    '23',
84: 1:    '26',
84: 1:    '29',
84: 1:    '33',
84: 1:    '37',
84: 1:    '41',
84: 1:    '45',
84: 1:    '50',
84: 1:    '55',
84: 1:    '60',
84: 1:    '65',
84: 1:    '70',
84: 1:    '75',
84: 1:    '81',
84: 1:    '87'
84: 1:  ]
84: 1:}
84: 1:Scores: 2278
84: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74', '80', '86']')
84: 1:Fire Event: PassTest{complexity=11, testCount=26}
84: 1:Fire Event: NextAlgorithm{complexity=11, time=0}
------------------------------------------
85: 1:BoardData {
85: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
85: 1:  'history': [
85: 1:    {
85: 1:      'answer': '1',
85: 1:      'question': '0',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '0',
85: 1:      'question': '1',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '3',
85: 1:      'question': '2',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '2',
85: 1:      'question': '3',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '4',
85: 1:      'question': '5',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '6',
85: 1:      'question': '7',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '8',
85: 1:      'question': '9',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '10',
85: 1:      'question': '11',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '15',
85: 1:      'question': '14',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '16',
85: 1:      'question': '17',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '21',
85: 1:      'question': '20',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '22',
85: 1:      'question': '23',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '27',
85: 1:      'question': '26',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '28',
85: 1:      'question': '29',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '32',
85: 1:      'question': '33',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '36',
85: 1:      'question': '37',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '40',
85: 1:      'question': '41',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '44',
85: 1:      'question': '45',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '51',
85: 1:      'question': '50',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '54',
85: 1:      'question': '55',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '61',
85: 1:      'question': '60',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '64',
85: 1:      'question': '65',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '71',
85: 1:      'question': '70',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '74',
85: 1:      'question': '75',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '80',
85: 1:      'question': '81',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '86',
85: 1:      'question': '87',
85: 1:      'valid': true
85: 1:    }
85: 1:  ],
85: 1:  'level': 3,
85: 1:  'questions': []
85: 1:}
85: 1:Scores: 3766
85: 1:Answer: message('StartNextLevel')
85: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
86: 1:BoardData {
86: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
86: 1:  'expectedAnswer': 'cab',
86: 1:  'history': [],
86: 1:  'level': 4,
86: 1:  'nextQuestion': 'abc',
86: 1:  'questions': ['abc']
86: 1:}
86: 1:Scores: 3766
86: 1:Answer: message('['cab']')
86: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
87: 1:BoardData {
87: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
87: 1:  'expectedAnswer': 'dca',
87: 1:  'history': [{
87: 1:    'answer': 'cab',
87: 1:    'question': 'abc',
87: 1:    'valid': true
87: 1:  }],
87: 1:  'level': 4,
87: 1:  'nextQuestion': 'cad',
87: 1:  'questions': [
87: 1:    'abc',
87: 1:    'cad'
87: 1:  ]
87: 1:}
87: 1:Scores: 3771
87: 1:Answer: message('['cab', 'dca']')
87: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
88: 1:BoardData {
88: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
88: 1:  'expectedAnswer': 'das',
88: 1:  'history': [
88: 1:    {
88: 1:      'answer': 'cab',
88: 1:      'question': 'abc',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': 'dca',
88: 1:      'question': 'cad',
88: 1:      'valid': true
88: 1:    }
88: 1:  ],
88: 1:  'level': 4,
88: 1:  'nextQuestion': 'asd',
88: 1:  'questions': [
88: 1:    'abc',
88: 1:    'cad',
88: 1:    'asd'
88: 1:  ]
88: 1:}
88: 1:Scores: 3776
88: 1:Answer: message('['cab', 'dca', 'das']')
88: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
89: 1:BoardData {
89: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
89: 1:  'expectedAnswer': 'zxy',
89: 1:  'history': [
89: 1:    {
89: 1:      'answer': 'cab',
89: 1:      'question': 'abc',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': 'dca',
89: 1:      'question': 'cad',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': 'das',
89: 1:      'question': 'asd',
89: 1:      'valid': true
89: 1:    }
89: 1:  ],
89: 1:  'level': 4,
89: 1:  'nextQuestion': 'xyz',
89: 1:  'questions': [
89: 1:    'abc',
89: 1:    'cad',
89: 1:    'asd',
89: 1:    'xyz'
89: 1:  ]
89: 1:}
89: 1:Scores: 3781
89: 1:Answer: message('['cab', 'dca', 'das', 'zxy']')
89: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
90: 1:BoardData {
90: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
90: 1:  'expectedAnswer': 'aaa',
90: 1:  'history': [
90: 1:    {
90: 1:      'answer': 'cab',
90: 1:      'question': 'abc',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': 'dca',
90: 1:      'question': 'cad',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': 'das',
90: 1:      'question': 'asd',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': 'zxy',
90: 1:      'question': 'xyz',
90: 1:      'valid': true
90: 1:    }
90: 1:  ],
90: 1:  'level': 4,
90: 1:  'nextQuestion': 'aaa',
90: 1:  'questions': [
90: 1:    'abc',
90: 1:    'cad',
90: 1:    'asd',
90: 1:    'xyz',
90: 1:    'aaa'
90: 1:  ]
90: 1:}
90: 1:Scores: 3786
90: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa']')
90: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
91: 1:BoardData {
91: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
91: 1:  'expectedAnswer': '312',
91: 1:  'history': [
91: 1:    {
91: 1:      'answer': 'cab',
91: 1:      'question': 'abc',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': 'dca',
91: 1:      'question': 'cad',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': 'das',
91: 1:      'question': 'asd',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': 'zxy',
91: 1:      'question': 'xyz',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': 'aaa',
91: 1:      'question': 'aaa',
91: 1:      'valid': true
91: 1:    }
91: 1:  ],
91: 1:  'level': 4,
91: 1:  'nextQuestion': '123',
91: 1:  'questions': [
91: 1:    'abc',
91: 1:    'cad',
91: 1:    'asd',
91: 1:    'xyz',
91: 1:    'aaa',
91: 1:    '123'
91: 1:  ]
91: 1:}
91: 1:Scores: 3791
91: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312']')
91: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
92: 1:BoardData {
92: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
92: 1:  'expectedAnswer': 'fdE',
92: 1:  'history': [
92: 1:    {
92: 1:      'answer': 'cab',
92: 1:      'question': 'abc',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': 'dca',
92: 1:      'question': 'cad',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': 'das',
92: 1:      'question': 'asd',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': 'zxy',
92: 1:      'question': 'xyz',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': 'aaa',
92: 1:      'question': 'aaa',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '312',
92: 1:      'question': '123',
92: 1:      'valid': true
92: 1:    }
92: 1:  ],
92: 1:  'level': 4,
92: 1:  'nextQuestion': 'dEf',
92: 1:  'questions': [
92: 1:    'abc',
92: 1:    'cad',
92: 1:    'asd',
92: 1:    'xyz',
92: 1:    'aaa',
92: 1:    '123',
92: 1:    'dEf'
92: 1:  ]
92: 1:}
92: 1:Scores: 3796
92: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE']')
92: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
93: 1:BoardData {
93: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
93: 1:  'expectedAnswer': 'czx',
93: 1:  'history': [
93: 1:    {
93: 1:      'answer': 'cab',
93: 1:      'question': 'abc',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': 'dca',
93: 1:      'question': 'cad',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': 'das',
93: 1:      'question': 'asd',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': 'zxy',
93: 1:      'question': 'xyz',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': 'aaa',
93: 1:      'question': 'aaa',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '312',
93: 1:      'question': '123',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': 'fdE',
93: 1:      'question': 'dEf',
93: 1:      'valid': true
93: 1:    }
93: 1:  ],
93: 1:  'level': 4,
93: 1:  'nextQuestion': 'zxc',
93: 1:  'questions': [
93: 1:    'abc',
93: 1:    'cad',
93: 1:    'asd',
93: 1:    'xyz',
93: 1:    'aaa',
93: 1:    '123',
93: 1:    'dEf',
93: 1:    'zxc'
93: 1:  ]
93: 1:}
93: 1:Scores: 3801
93: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx']')
93: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
94: 1:BoardData {
94: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
94: 1:  'expectedAnswer': 'eqw',
94: 1:  'history': [
94: 1:    {
94: 1:      'answer': 'cab',
94: 1:      'question': 'abc',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': 'dca',
94: 1:      'question': 'cad',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': 'das',
94: 1:      'question': 'asd',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': 'zxy',
94: 1:      'question': 'xyz',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': 'aaa',
94: 1:      'question': 'aaa',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '312',
94: 1:      'question': '123',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': 'fdE',
94: 1:      'question': 'dEf',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': 'czx',
94: 1:      'question': 'zxc',
94: 1:      'valid': true
94: 1:    }
94: 1:  ],
94: 1:  'level': 4,
94: 1:  'nextQuestion': 'qwe',
94: 1:  'questions': [
94: 1:    'abc',
94: 1:    'cad',
94: 1:    'asd',
94: 1:    'xyz',
94: 1:    'aaa',
94: 1:    '123',
94: 1:    'dEf',
94: 1:    'zxc',
94: 1:    'qwe'
94: 1:  ]
94: 1:}
94: 1:Scores: 3806
94: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw']')
94: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
95: 1:BoardData {
95: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
95: 1:  'expectedAnswer': 'yrt',
95: 1:  'history': [
95: 1:    {
95: 1:      'answer': 'cab',
95: 1:      'question': 'abc',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': 'dca',
95: 1:      'question': 'cad',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': 'das',
95: 1:      'question': 'asd',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': 'zxy',
95: 1:      'question': 'xyz',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': 'aaa',
95: 1:      'question': 'aaa',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '312',
95: 1:      'question': '123',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': 'fdE',
95: 1:      'question': 'dEf',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': 'czx',
95: 1:      'question': 'zxc',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': 'eqw',
95: 1:      'question': 'qwe',
95: 1:      'valid': true
95: 1:    }
95: 1:  ],
95: 1:  'level': 4,
95: 1:  'nextQuestion': 'rty',
95: 1:  'questions': [
95: 1:    'abc',
95: 1:    'cad',
95: 1:    'asd',
95: 1:    'xyz',
95: 1:    'aaa',
95: 1:    '123',
95: 1:    'dEf',
95: 1:    'zxc',
95: 1:    'qwe',
95: 1:    'rty'
95: 1:  ]
95: 1:}
95: 1:Scores: 3811
95: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt']')
95: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
96: 1:BoardData {
96: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
96: 1:  'expectedAnswer': 'bmn',
96: 1:  'history': [
96: 1:    {
96: 1:      'answer': 'cab',
96: 1:      'question': 'abc',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': 'dca',
96: 1:      'question': 'cad',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': 'das',
96: 1:      'question': 'asd',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': 'zxy',
96: 1:      'question': 'xyz',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': 'aaa',
96: 1:      'question': 'aaa',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '312',
96: 1:      'question': '123',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': 'fdE',
96: 1:      'question': 'dEf',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': 'czx',
96: 1:      'question': 'zxc',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': 'eqw',
96: 1:      'question': 'qwe',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': 'yrt',
96: 1:      'question': 'rty',
96: 1:      'valid': true
96: 1:    }
96: 1:  ],
96: 1:  'level': 4,
96: 1:  'nextQuestion': 'mnb',
96: 1:  'questions': [
96: 1:    'abc',
96: 1:    'cad',
96: 1:    'asd',
96: 1:    'xyz',
96: 1:    'aaa',
96: 1:    '123',
96: 1:    'dEf',
96: 1:    'zxc',
96: 1:    'qwe',
96: 1:    'rty',
96: 1:    'mnb'
96: 1:  ]
96: 1:}
96: 1:Scores: 3816
96: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn']')
96: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
97: 1:BoardData {
97: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
97: 1:  'expectedAnswer': 'nvb',
97: 1:  'history': [
97: 1:    {
97: 1:      'answer': 'cab',
97: 1:      'question': 'abc',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'dca',
97: 1:      'question': 'cad',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'das',
97: 1:      'question': 'asd',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'zxy',
97: 1:      'question': 'xyz',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'aaa',
97: 1:      'question': 'aaa',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '312',
97: 1:      'question': '123',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'fdE',
97: 1:      'question': 'dEf',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'czx',
97: 1:      'question': 'zxc',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'eqw',
97: 1:      'question': 'qwe',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'yrt',
97: 1:      'question': 'rty',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': 'bmn',
97: 1:      'question': 'mnb',
97: 1:      'valid': true
97: 1:    }
97: 1:  ],
97: 1:  'level': 4,
97: 1:  'nextQuestion': 'vbn',
97: 1:  'questions': [
97: 1:    'abc',
97: 1:    'cad',
97: 1:    'asd',
97: 1:    'xyz',
97: 1:    'aaa',
97: 1:    '123',
97: 1:    'dEf',
97: 1:    'zxc',
97: 1:    'qwe',
97: 1:    'rty',
97: 1:    'mnb',
97: 1:    'vbn'
97: 1:  ]
97: 1:}
97: 1:Scores: 3821
97: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb']')
97: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
98: 1:BoardData {
98: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
98: 1:  'expectedAnswer': 'hfg',
98: 1:  'history': [
98: 1:    {
98: 1:      'answer': 'cab',
98: 1:      'question': 'abc',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'dca',
98: 1:      'question': 'cad',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'das',
98: 1:      'question': 'asd',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'zxy',
98: 1:      'question': 'xyz',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'aaa',
98: 1:      'question': 'aaa',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '312',
98: 1:      'question': '123',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'fdE',
98: 1:      'question': 'dEf',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'czx',
98: 1:      'question': 'zxc',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'eqw',
98: 1:      'question': 'qwe',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'yrt',
98: 1:      'question': 'rty',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'bmn',
98: 1:      'question': 'mnb',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': 'nvb',
98: 1:      'question': 'vbn',
98: 1:      'valid': true
98: 1:    }
98: 1:  ],
98: 1:  'level': 4,
98: 1:  'nextQuestion': 'fgh',
98: 1:  'questions': [
98: 1:    'abc',
98: 1:    'cad',
98: 1:    'asd',
98: 1:    'xyz',
98: 1:    'aaa',
98: 1:    '123',
98: 1:    'dEf',
98: 1:    'zxc',
98: 1:    'qwe',
98: 1:    'rty',
98: 1:    'mnb',
98: 1:    'vbn',
98: 1:    'fgh'
98: 1:  ]
98: 1:}
98: 1:Scores: 3826
98: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg']')
98: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
99: 1:BoardData {
99: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
99: 1:  'expectedAnswer': 'kij',
99: 1:  'history': [
99: 1:    {
99: 1:      'answer': 'cab',
99: 1:      'question': 'abc',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'dca',
99: 1:      'question': 'cad',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'das',
99: 1:      'question': 'asd',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'zxy',
99: 1:      'question': 'xyz',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'aaa',
99: 1:      'question': 'aaa',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '312',
99: 1:      'question': '123',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'fdE',
99: 1:      'question': 'dEf',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'czx',
99: 1:      'question': 'zxc',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'eqw',
99: 1:      'question': 'qwe',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'yrt',
99: 1:      'question': 'rty',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'bmn',
99: 1:      'question': 'mnb',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'nvb',
99: 1:      'question': 'vbn',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': 'hfg',
99: 1:      'question': 'fgh',
99: 1:      'valid': true
99: 1:    }
99: 1:  ],
99: 1:  'level': 4,
99: 1:  'nextQuestion': 'ijk',
99: 1:  'questions': [
99: 1:    'abc',
99: 1:    'cad',
99: 1:    'asd',
99: 1:    'xyz',
99: 1:    'aaa',
99: 1:    '123',
99: 1:    'dEf',
99: 1:    'zxc',
99: 1:    'qwe',
99: 1:    'rty',
99: 1:    'mnb',
99: 1:    'vbn',
99: 1:    'fgh',
99: 1:    'ijk'
99: 1:  ]
99: 1:}
99: 1:Scores: 3831
99: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij']')
99: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
100: 1:BoardData {
100: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
100: 1:  'expectedAnswer': 'nlm',
100: 1:  'history': [
100: 1:    {
100: 1:      'answer': 'cab',
100: 1:      'question': 'abc',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'dca',
100: 1:      'question': 'cad',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'das',
100: 1:      'question': 'asd',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'zxy',
100: 1:      'question': 'xyz',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'aaa',
100: 1:      'question': 'aaa',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '312',
100: 1:      'question': '123',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'fdE',
100: 1:      'question': 'dEf',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'czx',
100: 1:      'question': 'zxc',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'eqw',
100: 1:      'question': 'qwe',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'yrt',
100: 1:      'question': 'rty',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'bmn',
100: 1:      'question': 'mnb',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'nvb',
100: 1:      'question': 'vbn',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'hfg',
100: 1:      'question': 'fgh',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': 'kij',
100: 1:      'question': 'ijk',
100: 1:      'valid': true
100: 1:    }
100: 1:  ],
100: 1:  'level': 4,
100: 1:  'nextQuestion': 'lmn',
100: 1:  'questions': [
100: 1:    'abc',
100: 1:    'cad',
100: 1:    'asd',
100: 1:    'xyz',
100: 1:    'aaa',
100: 1:    '123',
100: 1:    'dEf',
100: 1:    'zxc',
100: 1:    'qwe',
100: 1:    'rty',
100: 1:    'mnb',
100: 1:    'vbn',
100: 1:    'fgh',
100: 1:    'ijk',
100: 1:    'lmn'
100: 1:  ]
100: 1:}
100: 1:Scores: 3836
100: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm']')
100: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
101: 1:BoardData {
101: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
101: 1:  'expectedAnswer': 'rpq',
101: 1:  'history': [
101: 1:    {
101: 1:      'answer': 'cab',
101: 1:      'question': 'abc',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'dca',
101: 1:      'question': 'cad',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'das',
101: 1:      'question': 'asd',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'zxy',
101: 1:      'question': 'xyz',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'aaa',
101: 1:      'question': 'aaa',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': '312',
101: 1:      'question': '123',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'fdE',
101: 1:      'question': 'dEf',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'czx',
101: 1:      'question': 'zxc',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'eqw',
101: 1:      'question': 'qwe',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'yrt',
101: 1:      'question': 'rty',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'bmn',
101: 1:      'question': 'mnb',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'nvb',
101: 1:      'question': 'vbn',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'hfg',
101: 1:      'question': 'fgh',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'kij',
101: 1:      'question': 'ijk',
101: 1:      'valid': true
101: 1:    },
101: 1:    {
101: 1:      'answer': 'nlm',
101: 1:      'question': 'lmn',
101: 1:      'valid': true
101: 1:    }
101: 1:  ],
101: 1:  'level': 4,
101: 1:  'nextQuestion': 'pqr',
101: 1:  'questions': [
101: 1:    'abc',
101: 1:    'cad',
101: 1:    'asd',
101: 1:    'xyz',
101: 1:    'aaa',
101: 1:    '123',
101: 1:    'dEf',
101: 1:    'zxc',
101: 1:    'qwe',
101: 1:    'rty',
101: 1:    'mnb',
101: 1:    'vbn',
101: 1:    'fgh',
101: 1:    'ijk',
101: 1:    'lmn',
101: 1:    'pqr'
101: 1:  ]
101: 1:}
101: 1:Scores: 3841
101: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq']')
101: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
102: 1:BoardData {
102: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
102: 1:  'expectedAnswer': 'ust',
102: 1:  'history': [
102: 1:    {
102: 1:      'answer': 'cab',
102: 1:      'question': 'abc',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'dca',
102: 1:      'question': 'cad',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'das',
102: 1:      'question': 'asd',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'zxy',
102: 1:      'question': 'xyz',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'aaa',
102: 1:      'question': 'aaa',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': '312',
102: 1:      'question': '123',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'fdE',
102: 1:      'question': 'dEf',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'czx',
102: 1:      'question': 'zxc',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'eqw',
102: 1:      'question': 'qwe',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'yrt',
102: 1:      'question': 'rty',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'bmn',
102: 1:      'question': 'mnb',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'nvb',
102: 1:      'question': 'vbn',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'hfg',
102: 1:      'question': 'fgh',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'kij',
102: 1:      'question': 'ijk',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'nlm',
102: 1:      'question': 'lmn',
102: 1:      'valid': true
102: 1:    },
102: 1:    {
102: 1:      'answer': 'rpq',
102: 1:      'question': 'pqr',
102: 1:      'valid': true
102: 1:    }
102: 1:  ],
102: 1:  'level': 4,
102: 1:  'nextQuestion': 'stu',
102: 1:  'questions': [
102: 1:    'abc',
102: 1:    'cad',
102: 1:    'asd',
102: 1:    'xyz',
102: 1:    'aaa',
102: 1:    '123',
102: 1:    'dEf',
102: 1:    'zxc',
102: 1:    'qwe',
102: 1:    'rty',
102: 1:    'mnb',
102: 1:    'vbn',
102: 1:    'fgh',
102: 1:    'ijk',
102: 1:    'lmn',
102: 1:    'pqr',
102: 1:    'stu'
102: 1:  ]
102: 1:}
102: 1:Scores: 3846
102: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust']')
102: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
103: 1:BoardData {
103: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
103: 1:  'expectedAnswer': 'ywx',
103: 1:  'history': [
103: 1:    {
103: 1:      'answer': 'cab',
103: 1:      'question': 'abc',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'dca',
103: 1:      'question': 'cad',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'das',
103: 1:      'question': 'asd',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'zxy',
103: 1:      'question': 'xyz',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'aaa',
103: 1:      'question': 'aaa',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': '312',
103: 1:      'question': '123',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'fdE',
103: 1:      'question': 'dEf',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'czx',
103: 1:      'question': 'zxc',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'eqw',
103: 1:      'question': 'qwe',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'yrt',
103: 1:      'question': 'rty',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'bmn',
103: 1:      'question': 'mnb',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'nvb',
103: 1:      'question': 'vbn',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'hfg',
103: 1:      'question': 'fgh',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'kij',
103: 1:      'question': 'ijk',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'nlm',
103: 1:      'question': 'lmn',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'rpq',
103: 1:      'question': 'pqr',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': 'ust',
103: 1:      'question': 'stu',
103: 1:      'valid': true
103: 1:    }
103: 1:  ],
103: 1:  'level': 4,
103: 1:  'nextQuestion': 'wxy',
103: 1:  'questions': [
103: 1:    'abc',
103: 1:    'cad',
103: 1:    'asd',
103: 1:    'xyz',
103: 1:    'aaa',
103: 1:    '123',
103: 1:    'dEf',
103: 1:    'zxc',
103: 1:    'qwe',
103: 1:    'rty',
103: 1:    'mnb',
103: 1:    'vbn',
103: 1:    'fgh',
103: 1:    'ijk',
103: 1:    'lmn',
103: 1:    'pqr',
103: 1:    'stu',
103: 1:    'wxy'
103: 1:  ]
103: 1:}
103: 1:Scores: 3851
103: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx']')
103: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
104: 1:BoardData {
104: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
104: 1:  'expectedAnswer': '222',
104: 1:  'history': [
104: 1:    {
104: 1:      'answer': 'cab',
104: 1:      'question': 'abc',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'dca',
104: 1:      'question': 'cad',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'das',
104: 1:      'question': 'asd',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'zxy',
104: 1:      'question': 'xyz',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'aaa',
104: 1:      'question': 'aaa',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': '312',
104: 1:      'question': '123',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'fdE',
104: 1:      'question': 'dEf',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'czx',
104: 1:      'question': 'zxc',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'eqw',
104: 1:      'question': 'qwe',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'yrt',
104: 1:      'question': 'rty',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'bmn',
104: 1:      'question': 'mnb',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'nvb',
104: 1:      'question': 'vbn',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'hfg',
104: 1:      'question': 'fgh',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'kij',
104: 1:      'question': 'ijk',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'nlm',
104: 1:      'question': 'lmn',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'rpq',
104: 1:      'question': 'pqr',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'ust',
104: 1:      'question': 'stu',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': 'ywx',
104: 1:      'question': 'wxy',
104: 1:      'valid': true
104: 1:    }
104: 1:  ],
104: 1:  'level': 4,
104: 1:  'nextQuestion': '222',
104: 1:  'questions': [
104: 1:    'abc',
104: 1:    'cad',
104: 1:    'asd',
104: 1:    'xyz',
104: 1:    'aaa',
104: 1:    '123',
104: 1:    'dEf',
104: 1:    'zxc',
104: 1:    'qwe',
104: 1:    'rty',
104: 1:    'mnb',
104: 1:    'vbn',
104: 1:    'fgh',
104: 1:    'ijk',
104: 1:    'lmn',
104: 1:    'pqr',
104: 1:    'stu',
104: 1:    'wxy',
104: 1:    '222'
104: 1:  ]
104: 1:}
104: 1:Scores: 3856
104: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222']')
104: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
105: 1:BoardData {
105: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
105: 1:  'expectedAnswer': '978',
105: 1:  'history': [
105: 1:    {
105: 1:      'answer': 'cab',
105: 1:      'question': 'abc',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'dca',
105: 1:      'question': 'cad',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'das',
105: 1:      'question': 'asd',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'zxy',
105: 1:      'question': 'xyz',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'aaa',
105: 1:      'question': 'aaa',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': '312',
105: 1:      'question': '123',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'fdE',
105: 1:      'question': 'dEf',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'czx',
105: 1:      'question': 'zxc',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'eqw',
105: 1:      'question': 'qwe',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'yrt',
105: 1:      'question': 'rty',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'bmn',
105: 1:      'question': 'mnb',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'nvb',
105: 1:      'question': 'vbn',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'hfg',
105: 1:      'question': 'fgh',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'kij',
105: 1:      'question': 'ijk',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'nlm',
105: 1:      'question': 'lmn',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'rpq',
105: 1:      'question': 'pqr',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'ust',
105: 1:      'question': 'stu',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': 'ywx',
105: 1:      'question': 'wxy',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': '222',
105: 1:      'question': '222',
105: 1:      'valid': true
105: 1:    }
105: 1:  ],
105: 1:  'level': 4,
105: 1:  'nextQuestion': '789',
105: 1:  'questions': [
105: 1:    'abc',
105: 1:    'cad',
105: 1:    'asd',
105: 1:    'xyz',
105: 1:    'aaa',
105: 1:    '123',
105: 1:    'dEf',
105: 1:    'zxc',
105: 1:    'qwe',
105: 1:    'rty',
105: 1:    'mnb',
105: 1:    'vbn',
105: 1:    'fgh',
105: 1:    'ijk',
105: 1:    'lmn',
105: 1:    'pqr',
105: 1:    'stu',
105: 1:    'wxy',
105: 1:    '222',
105: 1:    '789'
105: 1:  ]
105: 1:}
105: 1:Scores: 3861
105: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222', '978']')
105: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
106: 1:BoardData {
106: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
106: 1:  'expectedAnswer': '009',
106: 1:  'history': [
106: 1:    {
106: 1:      'answer': 'cab',
106: 1:      'question': 'abc',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'dca',
106: 1:      'question': 'cad',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'das',
106: 1:      'question': 'asd',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'zxy',
106: 1:      'question': 'xyz',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'aaa',
106: 1:      'question': 'aaa',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': '312',
106: 1:      'question': '123',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'fdE',
106: 1:      'question': 'dEf',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'czx',
106: 1:      'question': 'zxc',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'eqw',
106: 1:      'question': 'qwe',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'yrt',
106: 1:      'question': 'rty',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'bmn',
106: 1:      'question': 'mnb',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'nvb',
106: 1:      'question': 'vbn',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'hfg',
106: 1:      'question': 'fgh',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'kij',
106: 1:      'question': 'ijk',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'nlm',
106: 1:      'question': 'lmn',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'rpq',
106: 1:      'question': 'pqr',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'ust',
106: 1:      'question': 'stu',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': 'ywx',
106: 1:      'question': 'wxy',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': '222',
106: 1:      'question': '222',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': '978',
106: 1:      'question': '789',
106: 1:      'valid': true
106: 1:    }
106: 1:  ],
106: 1:  'level': 4,
106: 1:  'nextQuestion': '090',
106: 1:  'questions': [
106: 1:    'abc',
106: 1:    'cad',
106: 1:    'asd',
106: 1:    'xyz',
106: 1:    'aaa',
106: 1:    '123',
106: 1:    'dEf',
106: 1:    'zxc',
106: 1:    'qwe',
106: 1:    'rty',
106: 1:    'mnb',
106: 1:    'vbn',
106: 1:    'fgh',
106: 1:    'ijk',
106: 1:    'lmn',
106: 1:    'pqr',
106: 1:    'stu',
106: 1:    'wxy',
106: 1:    '222',
106: 1:    '789',
106: 1:    '090'
106: 1:  ]
106: 1:}
106: 1:Scores: 3866
106: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222', '978', '009']')
106: 1:Fire Event: PassTest{complexity=12, testCount=21}
106: 1:Fire Event: NextAlgorithm{complexity=12, time=0}
------------------------------------------
107: 1:BoardData {
107: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
107: 1:  'history': [
107: 1:    {
107: 1:      'answer': 'cab',
107: 1:      'question': 'abc',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'dca',
107: 1:      'question': 'cad',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'das',
107: 1:      'question': 'asd',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'zxy',
107: 1:      'question': 'xyz',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'aaa',
107: 1:      'question': 'aaa',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '312',
107: 1:      'question': '123',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'fdE',
107: 1:      'question': 'dEf',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'czx',
107: 1:      'question': 'zxc',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'eqw',
107: 1:      'question': 'qwe',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'yrt',
107: 1:      'question': 'rty',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'bmn',
107: 1:      'question': 'mnb',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'nvb',
107: 1:      'question': 'vbn',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'hfg',
107: 1:      'question': 'fgh',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'kij',
107: 1:      'question': 'ijk',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'nlm',
107: 1:      'question': 'lmn',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'rpq',
107: 1:      'question': 'pqr',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'ust',
107: 1:      'question': 'stu',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': 'ywx',
107: 1:      'question': 'wxy',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '222',
107: 1:      'question': '222',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '978',
107: 1:      'question': '789',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '009',
107: 1:      'question': '090',
107: 1:      'valid': true
107: 1:    }
107: 1:  ],
107: 1:  'level': 4,
107: 1:  'questions': []
107: 1:}
107: 1:Scores: 5490
107: 1:Answer: message('StartNextLevel')
107: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
108: 1:BoardData {
108: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
108: 1:  'expectedAnswer': '222',
108: 1:  'history': [],
108: 1:  'level': 5,
108: 1:  'nextQuestion': '111',
108: 1:  'questions': ['111']
108: 1:}
108: 1:Scores: 5490
108: 1:Answer: message('['222']')
108: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
109: 1:BoardData {
109: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
109: 1:  'expectedAnswer': '333',
109: 1:  'history': [{
109: 1:    'answer': '222',
109: 1:    'question': '111',
109: 1:    'valid': true
109: 1:  }],
109: 1:  'level': 5,
109: 1:  'nextQuestion': '222',
109: 1:  'questions': [
109: 1:    '111',
109: 1:    '222'
109: 1:  ]
109: 1:}
109: 1:Scores: 5500
109: 1:Answer: message('['222', '333']')
109: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
110: 1:BoardData {
110: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
110: 1:  'expectedAnswer': '444',
110: 1:  'history': [
110: 1:    {
110: 1:      'answer': '222',
110: 1:      'question': '111',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '333',
110: 1:      'question': '222',
110: 1:      'valid': true
110: 1:    }
110: 1:  ],
110: 1:  'level': 5,
110: 1:  'nextQuestion': '333',
110: 1:  'questions': [
110: 1:    '111',
110: 1:    '222',
110: 1:    '333'
110: 1:  ]
110: 1:}
110: 1:Scores: 5510
110: 1:Answer: message('['222', '333', '444']')
110: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
111: 1:BoardData {
111: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
111: 1:  'expectedAnswer': '555',
111: 1:  'history': [
111: 1:    {
111: 1:      'answer': '222',
111: 1:      'question': '111',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '333',
111: 1:      'question': '222',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '444',
111: 1:      'question': '333',
111: 1:      'valid': true
111: 1:    }
111: 1:  ],
111: 1:  'level': 5,
111: 1:  'nextQuestion': '444',
111: 1:  'questions': [
111: 1:    '111',
111: 1:    '222',
111: 1:    '333',
111: 1:    '444'
111: 1:  ]
111: 1:}
111: 1:Scores: 5520
111: 1:Answer: message('['222', '333', '444', '555']')
111: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
112: 1:BoardData {
112: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
112: 1:  'expectedAnswer': '666',
112: 1:  'history': [
112: 1:    {
112: 1:      'answer': '222',
112: 1:      'question': '111',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '333',
112: 1:      'question': '222',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '444',
112: 1:      'question': '333',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '555',
112: 1:      'question': '444',
112: 1:      'valid': true
112: 1:    }
112: 1:  ],
112: 1:  'level': 5,
112: 1:  'nextQuestion': '555',
112: 1:  'questions': [
112: 1:    '111',
112: 1:    '222',
112: 1:    '333',
112: 1:    '444',
112: 1:    '555'
112: 1:  ]
112: 1:}
112: 1:Scores: 5530
112: 1:Answer: message('['222', '333', '444', '555', '666']')
112: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
113: 1:BoardData {
113: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
113: 1:  'expectedAnswer': '121',
113: 1:  'history': [
113: 1:    {
113: 1:      'answer': '222',
113: 1:      'question': '111',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '333',
113: 1:      'question': '222',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '444',
113: 1:      'question': '333',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '555',
113: 1:      'question': '444',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '666',
113: 1:      'question': '555',
113: 1:      'valid': true
113: 1:    }
113: 1:  ],
113: 1:  'level': 5,
113: 1:  'nextQuestion': '100',
113: 1:  'questions': [
113: 1:    '111',
113: 1:    '222',
113: 1:    '333',
113: 1:    '444',
113: 1:    '555',
113: 1:    '100'
113: 1:  ]
113: 1:}
113: 1:Scores: 5540
113: 1:Answer: message('['222', '333', '444', '555', '666', '121']')
113: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
114: 1:BoardData {
114: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
114: 1:  'expectedAnswer': '423',
114: 1:  'history': [
114: 1:    {
114: 1:      'answer': '222',
114: 1:      'question': '111',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '333',
114: 1:      'question': '222',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '444',
114: 1:      'question': '333',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '555',
114: 1:      'question': '444',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '666',
114: 1:      'question': '555',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '121',
114: 1:      'question': '100',
114: 1:      'valid': true
114: 1:    }
114: 1:  ],
114: 1:  'level': 5,
114: 1:  'nextQuestion': '123',
114: 1:  'questions': [
114: 1:    '111',
114: 1:    '222',
114: 1:    '333',
114: 1:    '444',
114: 1:    '555',
114: 1:    '100',
114: 1:    '123'
114: 1:  ]
114: 1:}
114: 1:Scores: 5550
114: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423']')
114: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
115: 1:BoardData {
115: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
115: 1:  'expectedAnswer': '000',
115: 1:  'history': [
115: 1:    {
115: 1:      'answer': '222',
115: 1:      'question': '111',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '333',
115: 1:      'question': '222',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '444',
115: 1:      'question': '333',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '555',
115: 1:      'question': '444',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '666',
115: 1:      'question': '555',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '121',
115: 1:      'question': '100',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '423',
115: 1:      'question': '123',
115: 1:      'valid': true
115: 1:    }
115: 1:  ],
115: 1:  'level': 5,
115: 1:  'nextQuestion': '999',
115: 1:  'questions': [
115: 1:    '111',
115: 1:    '222',
115: 1:    '333',
115: 1:    '444',
115: 1:    '555',
115: 1:    '100',
115: 1:    '123',
115: 1:    '999'
115: 1:  ]
115: 1:}
115: 1:Scores: 5560
115: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000']')
115: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
116: 1:BoardData {
116: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
116: 1:  'expectedAnswer': '089',
116: 1:  'history': [
116: 1:    {
116: 1:      'answer': '222',
116: 1:      'question': '111',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '333',
116: 1:      'question': '222',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '444',
116: 1:      'question': '333',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '555',
116: 1:      'question': '444',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '666',
116: 1:      'question': '555',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '121',
116: 1:      'question': '100',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '423',
116: 1:      'question': '123',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '000',
116: 1:      'question': '999',
116: 1:      'valid': true
116: 1:    }
116: 1:  ],
116: 1:  'level': 5,
116: 1:  'nextQuestion': '789',
116: 1:  'questions': [
116: 1:    '111',
116: 1:    '222',
116: 1:    '333',
116: 1:    '444',
116: 1:    '555',
116: 1:    '100',
116: 1:    '123',
116: 1:    '999',
116: 1:    '789'
116: 1:  ]
116: 1:}
116: 1:Scores: 5570
116: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089']')
116: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
117: 1:BoardData {
117: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
117: 1:  'expectedAnswer': '111',
117: 1:  'history': [
117: 1:    {
117: 1:      'answer': '222',
117: 1:      'question': '111',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '333',
117: 1:      'question': '222',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '444',
117: 1:      'question': '333',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '555',
117: 1:      'question': '444',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '666',
117: 1:      'question': '555',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '121',
117: 1:      'question': '100',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '423',
117: 1:      'question': '123',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '000',
117: 1:      'question': '999',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '089',
117: 1:      'question': '789',
117: 1:      'valid': true
117: 1:    }
117: 1:  ],
117: 1:  'level': 5,
117: 1:  'nextQuestion': '000',
117: 1:  'questions': [
117: 1:    '111',
117: 1:    '222',
117: 1:    '333',
117: 1:    '444',
117: 1:    '555',
117: 1:    '100',
117: 1:    '123',
117: 1:    '999',
117: 1:    '789',
117: 1:    '000'
117: 1:  ]
117: 1:}
117: 1:Scores: 5580
117: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111']')
117: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
118: 1:BoardData {
118: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
118: 1:  'expectedAnswer': '001',
118: 1:  'history': [
118: 1:    {
118: 1:      'answer': '222',
118: 1:      'question': '111',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '333',
118: 1:      'question': '222',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '444',
118: 1:      'question': '333',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '555',
118: 1:      'question': '444',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '666',
118: 1:      'question': '555',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '121',
118: 1:      'question': '100',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '423',
118: 1:      'question': '123',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '000',
118: 1:      'question': '999',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '089',
118: 1:      'question': '789',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '111',
118: 1:      'question': '000',
118: 1:      'valid': true
118: 1:    }
118: 1:  ],
118: 1:  'level': 5,
118: 1:  'nextQuestion': '909',
118: 1:  'questions': [
118: 1:    '111',
118: 1:    '222',
118: 1:    '333',
118: 1:    '444',
118: 1:    '555',
118: 1:    '100',
118: 1:    '123',
118: 1:    '999',
118: 1:    '789',
118: 1:    '000',
118: 1:    '909'
118: 1:  ]
118: 1:}
118: 1:Scores: 5590
118: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111', '001']')
118: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
119: 1:BoardData {
119: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
119: 1:  'expectedAnswer': '110',
119: 1:  'history': [
119: 1:    {
119: 1:      'answer': '222',
119: 1:      'question': '111',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '333',
119: 1:      'question': '222',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '444',
119: 1:      'question': '333',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '555',
119: 1:      'question': '444',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '666',
119: 1:      'question': '555',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '121',
119: 1:      'question': '100',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '423',
119: 1:      'question': '123',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '000',
119: 1:      'question': '999',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '089',
119: 1:      'question': '789',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '111',
119: 1:      'question': '000',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '001',
119: 1:      'question': '909',
119: 1:      'valid': true
119: 1:    }
119: 1:  ],
119: 1:  'level': 5,
119: 1:  'nextQuestion': '090',
119: 1:  'questions': [
119: 1:    '111',
119: 1:    '222',
119: 1:    '333',
119: 1:    '444',
119: 1:    '555',
119: 1:    '100',
119: 1:    '123',
119: 1:    '999',
119: 1:    '789',
119: 1:    '000',
119: 1:    '909',
119: 1:    '090'
119: 1:  ]
119: 1:}
119: 1:Scores: 5600
119: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111', '001', '110']')
119: 1:Fire Event: PassTest{complexity=13, testCount=12}
119: 1:Fire Event: NextAlgorithm{complexity=13, time=0}
------------------------------------------
120: 1:BoardData {
120: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
120: 1:  'history': [
120: 1:    {
120: 1:      'answer': '222',
120: 1:      'question': '111',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '333',
120: 1:      'question': '222',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '444',
120: 1:      'question': '333',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '555',
120: 1:      'question': '444',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '666',
120: 1:      'question': '555',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '121',
120: 1:      'question': '100',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '423',
120: 1:      'question': '123',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '000',
120: 1:      'question': '999',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '089',
120: 1:      'question': '789',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '111',
120: 1:      'question': '000',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '001',
120: 1:      'question': '909',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '110',
120: 1:      'question': '090',
120: 1:      'valid': true
120: 1:    }
120: 1:  ],
120: 1:  'level': 5,
120: 1:  'questions': []
120: 1:}
120: 1:Scores: 7364
120: 1:Answer: message('StartNextLevel')
120: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
121: 1:BoardData {
121: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
121: 1:  'expectedAnswer': '101',
121: 1:  'history': [],
121: 1:  'level': 6,
121: 1:  'nextQuestion': '1',
121: 1:  'questions': ['1']
121: 1:}
121: 1:Scores: 7364
121: 1:Answer: message('['101']')
121: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
122: 1:BoardData {
122: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
122: 1:  'expectedAnswer': '112',
122: 1:  'history': [{
122: 1:    'answer': '101',
122: 1:    'question': '1',
122: 1:    'valid': true
122: 1:  }],
122: 1:  'level': 6,
122: 1:  'nextQuestion': '2',
122: 1:  'questions': [
122: 1:    '1',
122: 1:    '2'
122: 1:  ]
122: 1:}
122: 1:Scores: 7370
122: 1:Answer: message('['101', '112']')
122: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
123: 1:BoardData {
123: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
123: 1:  'expectedAnswer': '131',
123: 1:  'history': [
123: 1:    {
123: 1:      'answer': '101',
123: 1:      'question': '1',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '112',
123: 1:      'question': '2',
123: 1:      'valid': true
123: 1:    }
123: 1:  ],
123: 1:  'level': 6,
123: 1:  'nextQuestion': '3',
123: 1:  'questions': [
123: 1:    '1',
123: 1:    '2',
123: 1:    '3'
123: 1:  ]
123: 1:}
123: 1:Scores: 7376
123: 1:Answer: message('['101', '112', '131']')
123: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
124: 1:BoardData {
124: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
124: 1:  'expectedAnswer': '415',
124: 1:  'history': [
124: 1:    {
124: 1:      'answer': '101',
124: 1:      'question': '1',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '112',
124: 1:      'question': '2',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '131',
124: 1:      'question': '3',
124: 1:      'valid': true
124: 1:    }
124: 1:  ],
124: 1:  'level': 6,
124: 1:  'nextQuestion': '4',
124: 1:  'questions': [
124: 1:    '1',
124: 1:    '2',
124: 1:    '3',
124: 1:    '4'
124: 1:  ]
124: 1:}
124: 1:Scores: 7382
124: 1:Answer: message('['101', '112', '131', '415']')
124: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
125: 1:BoardData {
125: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
125: 1:  'expectedAnswer': '161',
125: 1:  'history': [
125: 1:    {
125: 1:      'answer': '101',
125: 1:      'question': '1',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '112',
125: 1:      'question': '2',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '131',
125: 1:      'question': '3',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '415',
125: 1:      'question': '4',
125: 1:      'valid': true
125: 1:    }
125: 1:  ],
125: 1:  'level': 6,
125: 1:  'nextQuestion': '5',
125: 1:  'questions': [
125: 1:    '1',
125: 1:    '2',
125: 1:    '3',
125: 1:    '4',
125: 1:    '5'
125: 1:  ]
125: 1:}
125: 1:Scores: 7388
125: 1:Answer: message('['101', '112', '131', '415', '161']')
125: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
126: 1:BoardData {
126: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
126: 1:  'expectedAnswer': '718',
126: 1:  'history': [
126: 1:    {
126: 1:      'answer': '101',
126: 1:      'question': '1',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '112',
126: 1:      'question': '2',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '131',
126: 1:      'question': '3',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '415',
126: 1:      'question': '4',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '161',
126: 1:      'question': '5',
126: 1:      'valid': true
126: 1:    }
126: 1:  ],
126: 1:  'level': 6,
126: 1:  'nextQuestion': '6',
126: 1:  'questions': [
126: 1:    '1',
126: 1:    '2',
126: 1:    '3',
126: 1:    '4',
126: 1:    '5',
126: 1:    '6'
126: 1:  ]
126: 1:}
126: 1:Scores: 7394
126: 1:Answer: message('['101', '112', '131', '415', '161', '718']')
126: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
127: 1:BoardData {
127: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
127: 1:  'expectedAnswer': '192',
127: 1:  'history': [
127: 1:    {
127: 1:      'answer': '101',
127: 1:      'question': '1',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '112',
127: 1:      'question': '2',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '131',
127: 1:      'question': '3',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '415',
127: 1:      'question': '4',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '161',
127: 1:      'question': '5',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '718',
127: 1:      'question': '6',
127: 1:      'valid': true
127: 1:    }
127: 1:  ],
127: 1:  'level': 6,
127: 1:  'nextQuestion': '7',
127: 1:  'questions': [
127: 1:    '1',
127: 1:    '2',
127: 1:    '3',
127: 1:    '4',
127: 1:    '5',
127: 1:    '6',
127: 1:    '7'
127: 1:  ]
127: 1:}
127: 1:Scores: 7400
127: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192']')
127: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
128: 1:BoardData {
128: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
128: 1:  'expectedAnswer': '021',
128: 1:  'history': [
128: 1:    {
128: 1:      'answer': '101',
128: 1:      'question': '1',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '112',
128: 1:      'question': '2',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '131',
128: 1:      'question': '3',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '415',
128: 1:      'question': '4',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '161',
128: 1:      'question': '5',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '718',
128: 1:      'question': '6',
128: 1:      'valid': true
128: 1:    },
128: 1:    {
128: 1:      'answer': '192',
128: 1:      'question': '7',
128: 1:      'valid': true
128: 1:    }
128: 1:  ],
128: 1:  'level': 6,
128: 1:  'nextQuestion': '8',
128: 1:  'questions': [
128: 1:    '1',
128: 1:    '2',
128: 1:    '3',
128: 1:    '4',
128: 1:    '5',
128: 1:    '6',
128: 1:    '7',
128: 1:    '8'
128: 1:  ]
128: 1:}
128: 1:Scores: 7406
128: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021']')
128: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
129: 1:BoardData {
129: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
129: 1:  'expectedAnswer': '222',
129: 1:  'history': [
129: 1:    {
129: 1:      'answer': '101',
129: 1:      'question': '1',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '112',
129: 1:      'question': '2',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '131',
129: 1:      'question': '3',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '415',
129: 1:      'question': '4',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '161',
129: 1:      'question': '5',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '718',
129: 1:      'question': '6',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '192',
129: 1:      'question': '7',
129: 1:      'valid': true
129: 1:    },
129: 1:    {
129: 1:      'answer': '021',
129: 1:      'question': '8',
129: 1:      'valid': true
129: 1:    }
129: 1:  ],
129: 1:  'level': 6,
129: 1:  'nextQuestion': '9',
129: 1:  'questions': [
129: 1:    '1',
129: 1:    '2',
129: 1:    '3',
129: 1:    '4',
129: 1:    '5',
129: 1:    '6',
129: 1:    '7',
129: 1:    '8',
129: 1:    '9'
129: 1:  ]
129: 1:}
129: 1:Scores: 7412
129: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222']')
129: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
130: 1:BoardData {
130: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
130: 1:  'expectedAnswer': '324',
130: 1:  'history': [
130: 1:    {
130: 1:      'answer': '101',
130: 1:      'question': '1',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '112',
130: 1:      'question': '2',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '131',
130: 1:      'question': '3',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '415',
130: 1:      'question': '4',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '161',
130: 1:      'question': '5',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '718',
130: 1:      'question': '6',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '192',
130: 1:      'question': '7',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '021',
130: 1:      'question': '8',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': '222',
130: 1:      'question': '9',
130: 1:      'valid': true
130: 1:    }
130: 1:  ],
130: 1:  'level': 6,
130: 1:  'nextQuestion': '10',
130: 1:  'questions': [
130: 1:    '1',
130: 1:    '2',
130: 1:    '3',
130: 1:    '4',
130: 1:    '5',
130: 1:    '6',
130: 1:    '7',
130: 1:    '8',
130: 1:    '9',
130: 1:    '10'
130: 1:  ]
130: 1:}
130: 1:Scores: 7418
130: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324']')
130: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
131: 1:BoardData {
131: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
131: 1:  'expectedAnswer': '252',
131: 1:  'history': [
131: 1:    {
131: 1:      'answer': '101',
131: 1:      'question': '1',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '112',
131: 1:      'question': '2',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '131',
131: 1:      'question': '3',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '415',
131: 1:      'question': '4',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '161',
131: 1:      'question': '5',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '718',
131: 1:      'question': '6',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '192',
131: 1:      'question': '7',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '021',
131: 1:      'question': '8',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '222',
131: 1:      'question': '9',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': '324',
131: 1:      'question': '10',
131: 1:      'valid': true
131: 1:    }
131: 1:  ],
131: 1:  'level': 6,
131: 1:  'nextQuestion': '11',
131: 1:  'questions': [
131: 1:    '1',
131: 1:    '2',
131: 1:    '3',
131: 1:    '4',
131: 1:    '5',
131: 1:    '6',
131: 1:    '7',
131: 1:    '8',
131: 1:    '9',
131: 1:    '10',
131: 1:    '11'
131: 1:  ]
131: 1:}
131: 1:Scores: 7424
131: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252']')
131: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
132: 1:BoardData {
132: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
132: 1:  'expectedAnswer': '627',
132: 1:  'history': [
132: 1:    {
132: 1:      'answer': '101',
132: 1:      'question': '1',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '112',
132: 1:      'question': '2',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '131',
132: 1:      'question': '3',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '415',
132: 1:      'question': '4',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '161',
132: 1:      'question': '5',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '718',
132: 1:      'question': '6',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '192',
132: 1:      'question': '7',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '021',
132: 1:      'question': '8',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '222',
132: 1:      'question': '9',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '324',
132: 1:      'question': '10',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': '252',
132: 1:      'question': '11',
132: 1:      'valid': true
132: 1:    }
132: 1:  ],
132: 1:  'level': 6,
132: 1:  'nextQuestion': '12',
132: 1:  'questions': [
132: 1:    '1',
132: 1:    '2',
132: 1:    '3',
132: 1:    '4',
132: 1:    '5',
132: 1:    '6',
132: 1:    '7',
132: 1:    '8',
132: 1:    '9',
132: 1:    '10',
132: 1:    '11',
132: 1:    '12'
132: 1:  ]
132: 1:}
132: 1:Scores: 7430
132: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627']')
132: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
133: 1:BoardData {
133: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
133: 1:  'expectedAnswer': '282',
133: 1:  'history': [
133: 1:    {
133: 1:      'answer': '101',
133: 1:      'question': '1',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '112',
133: 1:      'question': '2',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '131',
133: 1:      'question': '3',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '415',
133: 1:      'question': '4',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '161',
133: 1:      'question': '5',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '718',
133: 1:      'question': '6',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '192',
133: 1:      'question': '7',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '021',
133: 1:      'question': '8',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '222',
133: 1:      'question': '9',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '324',
133: 1:      'question': '10',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '252',
133: 1:      'question': '11',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': '627',
133: 1:      'question': '12',
133: 1:      'valid': true
133: 1:    }
133: 1:  ],
133: 1:  'level': 6,
133: 1:  'nextQuestion': '13',
133: 1:  'questions': [
133: 1:    '1',
133: 1:    '2',
133: 1:    '3',
133: 1:    '4',
133: 1:    '5',
133: 1:    '6',
133: 1:    '7',
133: 1:    '8',
133: 1:    '9',
133: 1:    '10',
133: 1:    '11',
133: 1:    '12',
133: 1:    '13'
133: 1:  ]
133: 1:}
133: 1:Scores: 7436
133: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282']')
133: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
134: 1:BoardData {
134: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
134: 1:  'expectedAnswer': '930',
134: 1:  'history': [
134: 1:    {
134: 1:      'answer': '101',
134: 1:      'question': '1',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '112',
134: 1:      'question': '2',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '131',
134: 1:      'question': '3',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '415',
134: 1:      'question': '4',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '161',
134: 1:      'question': '5',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '718',
134: 1:      'question': '6',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '192',
134: 1:      'question': '7',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '021',
134: 1:      'question': '8',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '222',
134: 1:      'question': '9',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '324',
134: 1:      'question': '10',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '252',
134: 1:      'question': '11',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '627',
134: 1:      'question': '12',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '282',
134: 1:      'question': '13',
134: 1:      'valid': true
134: 1:    }
134: 1:  ],
134: 1:  'level': 6,
134: 1:  'nextQuestion': '14',
134: 1:  'questions': [
134: 1:    '1',
134: 1:    '2',
134: 1:    '3',
134: 1:    '4',
134: 1:    '5',
134: 1:    '6',
134: 1:    '7',
134: 1:    '8',
134: 1:    '9',
134: 1:    '10',
134: 1:    '11',
134: 1:    '12',
134: 1:    '13',
134: 1:    '14'
134: 1:  ]
134: 1:}
134: 1:Scores: 7442
134: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930']')
134: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
135: 1:BoardData {
135: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
135: 1:  'expectedAnswer': '313',
135: 1:  'history': [
135: 1:    {
135: 1:      'answer': '101',
135: 1:      'question': '1',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '112',
135: 1:      'question': '2',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '131',
135: 1:      'question': '3',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '415',
135: 1:      'question': '4',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '161',
135: 1:      'question': '5',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '718',
135: 1:      'question': '6',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '192',
135: 1:      'question': '7',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '021',
135: 1:      'question': '8',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '222',
135: 1:      'question': '9',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '324',
135: 1:      'question': '10',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '252',
135: 1:      'question': '11',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '627',
135: 1:      'question': '12',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '282',
135: 1:      'question': '13',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '930',
135: 1:      'question': '14',
135: 1:      'valid': true
135: 1:    }
135: 1:  ],
135: 1:  'level': 6,
135: 1:  'nextQuestion': '15',
135: 1:  'questions': [
135: 1:    '1',
135: 1:    '2',
135: 1:    '3',
135: 1:    '4',
135: 1:    '5',
135: 1:    '6',
135: 1:    '7',
135: 1:    '8',
135: 1:    '9',
135: 1:    '10',
135: 1:    '11',
135: 1:    '12',
135: 1:    '13',
135: 1:    '14',
135: 1:    '15'
135: 1:  ]
135: 1:}
135: 1:Scores: 7448
135: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313']')
135: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
136: 1:BoardData {
136: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
136: 1:  'expectedAnswer': '233',
136: 1:  'history': [
136: 1:    {
136: 1:      'answer': '101',
136: 1:      'question': '1',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '112',
136: 1:      'question': '2',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '131',
136: 1:      'question': '3',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '415',
136: 1:      'question': '4',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '161',
136: 1:      'question': '5',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '718',
136: 1:      'question': '6',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '192',
136: 1:      'question': '7',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '021',
136: 1:      'question': '8',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '222',
136: 1:      'question': '9',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '324',
136: 1:      'question': '10',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '252',
136: 1:      'question': '11',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '627',
136: 1:      'question': '12',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '282',
136: 1:      'question': '13',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '930',
136: 1:      'question': '14',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '313',
136: 1:      'question': '15',
136: 1:      'valid': true
136: 1:    }
136: 1:  ],
136: 1:  'level': 6,
136: 1:  'nextQuestion': '16',
136: 1:  'questions': [
136: 1:    '1',
136: 1:    '2',
136: 1:    '3',
136: 1:    '4',
136: 1:    '5',
136: 1:    '6',
136: 1:    '7',
136: 1:    '8',
136: 1:    '9',
136: 1:    '10',
136: 1:    '11',
136: 1:    '12',
136: 1:    '13',
136: 1:    '14',
136: 1:    '15',
136: 1:    '16'
136: 1:  ]
136: 1:}
136: 1:Scores: 7454
136: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233']')
136: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
137: 1:BoardData {
137: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
137: 1:  'expectedAnswer': '343',
137: 1:  'history': [
137: 1:    {
137: 1:      'answer': '101',
137: 1:      'question': '1',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '112',
137: 1:      'question': '2',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '131',
137: 1:      'question': '3',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '415',
137: 1:      'question': '4',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '161',
137: 1:      'question': '5',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '718',
137: 1:      'question': '6',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '192',
137: 1:      'question': '7',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '021',
137: 1:      'question': '8',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '222',
137: 1:      'question': '9',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '324',
137: 1:      'question': '10',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '252',
137: 1:      'question': '11',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '627',
137: 1:      'question': '12',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '282',
137: 1:      'question': '13',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '930',
137: 1:      'question': '14',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '313',
137: 1:      'question': '15',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '233',
137: 1:      'question': '16',
137: 1:      'valid': true
137: 1:    }
137: 1:  ],
137: 1:  'level': 6,
137: 1:  'nextQuestion': '17',
137: 1:  'questions': [
137: 1:    '1',
137: 1:    '2',
137: 1:    '3',
137: 1:    '4',
137: 1:    '5',
137: 1:    '6',
137: 1:    '7',
137: 1:    '8',
137: 1:    '9',
137: 1:    '10',
137: 1:    '11',
137: 1:    '12',
137: 1:    '13',
137: 1:    '14',
137: 1:    '15',
137: 1:    '16',
137: 1:    '17'
137: 1:  ]
137: 1:}
137: 1:Scores: 7460
137: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343']')
137: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
138: 1:BoardData {
138: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
138: 1:  'expectedAnswer': '536',
138: 1:  'history': [
138: 1:    {
138: 1:      'answer': '101',
138: 1:      'question': '1',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '112',
138: 1:      'question': '2',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '131',
138: 1:      'question': '3',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '415',
138: 1:      'question': '4',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '161',
138: 1:      'question': '5',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '718',
138: 1:      'question': '6',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '192',
138: 1:      'question': '7',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '021',
138: 1:      'question': '8',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '222',
138: 1:      'question': '9',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '324',
138: 1:      'question': '10',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '252',
138: 1:      'question': '11',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '627',
138: 1:      'question': '12',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '282',
138: 1:      'question': '13',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '930',
138: 1:      'question': '14',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '313',
138: 1:      'question': '15',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '233',
138: 1:      'question': '16',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '343',
138: 1:      'question': '17',
138: 1:      'valid': true
138: 1:    }
138: 1:  ],
138: 1:  'level': 6,
138: 1:  'nextQuestion': '18',
138: 1:  'questions': [
138: 1:    '1',
138: 1:    '2',
138: 1:    '3',
138: 1:    '4',
138: 1:    '5',
138: 1:    '6',
138: 1:    '7',
138: 1:    '8',
138: 1:    '9',
138: 1:    '10',
138: 1:    '11',
138: 1:    '12',
138: 1:    '13',
138: 1:    '14',
138: 1:    '15',
138: 1:    '16',
138: 1:    '17',
138: 1:    '18'
138: 1:  ]
138: 1:}
138: 1:Scores: 7466
138: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536']')
138: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
139: 1:BoardData {
139: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
139: 1:  'expectedAnswer': '373',
139: 1:  'history': [
139: 1:    {
139: 1:      'answer': '101',
139: 1:      'question': '1',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '112',
139: 1:      'question': '2',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '131',
139: 1:      'question': '3',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '415',
139: 1:      'question': '4',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '161',
139: 1:      'question': '5',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '718',
139: 1:      'question': '6',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '192',
139: 1:      'question': '7',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '021',
139: 1:      'question': '8',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '222',
139: 1:      'question': '9',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '324',
139: 1:      'question': '10',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '252',
139: 1:      'question': '11',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '627',
139: 1:      'question': '12',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '282',
139: 1:      'question': '13',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '930',
139: 1:      'question': '14',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '313',
139: 1:      'question': '15',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '233',
139: 1:      'question': '16',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '343',
139: 1:      'question': '17',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '536',
139: 1:      'question': '18',
139: 1:      'valid': true
139: 1:    }
139: 1:  ],
139: 1:  'level': 6,
139: 1:  'nextQuestion': '19',
139: 1:  'questions': [
139: 1:    '1',
139: 1:    '2',
139: 1:    '3',
139: 1:    '4',
139: 1:    '5',
139: 1:    '6',
139: 1:    '7',
139: 1:    '8',
139: 1:    '9',
139: 1:    '10',
139: 1:    '11',
139: 1:    '12',
139: 1:    '13',
139: 1:    '14',
139: 1:    '15',
139: 1:    '16',
139: 1:    '17',
139: 1:    '18',
139: 1:    '19'
139: 1:  ]
139: 1:}
139: 1:Scores: 7472
139: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373']')
139: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
140: 1:BoardData {
140: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
140: 1:  'expectedAnswer': '839',
140: 1:  'history': [
140: 1:    {
140: 1:      'answer': '101',
140: 1:      'question': '1',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '112',
140: 1:      'question': '2',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '131',
140: 1:      'question': '3',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '415',
140: 1:      'question': '4',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '161',
140: 1:      'question': '5',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '718',
140: 1:      'question': '6',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '192',
140: 1:      'question': '7',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '021',
140: 1:      'question': '8',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '222',
140: 1:      'question': '9',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '324',
140: 1:      'question': '10',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '252',
140: 1:      'question': '11',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '627',
140: 1:      'question': '12',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '282',
140: 1:      'question': '13',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '930',
140: 1:      'question': '14',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '313',
140: 1:      'question': '15',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '233',
140: 1:      'question': '16',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '343',
140: 1:      'question': '17',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '536',
140: 1:      'question': '18',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '373',
140: 1:      'question': '19',
140: 1:      'valid': true
140: 1:    }
140: 1:  ],
140: 1:  'level': 6,
140: 1:  'nextQuestion': '20',
140: 1:  'questions': [
140: 1:    '1',
140: 1:    '2',
140: 1:    '3',
140: 1:    '4',
140: 1:    '5',
140: 1:    '6',
140: 1:    '7',
140: 1:    '8',
140: 1:    '9',
140: 1:    '10',
140: 1:    '11',
140: 1:    '12',
140: 1:    '13',
140: 1:    '14',
140: 1:    '15',
140: 1:    '16',
140: 1:    '17',
140: 1:    '18',
140: 1:    '19',
140: 1:    '20'
140: 1:  ]
140: 1:}
140: 1:Scores: 7478
140: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839']')
140: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
141: 1:BoardData {
141: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
141: 1:  'expectedAnswer': '404',
141: 1:  'history': [
141: 1:    {
141: 1:      'answer': '101',
141: 1:      'question': '1',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '112',
141: 1:      'question': '2',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '131',
141: 1:      'question': '3',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '415',
141: 1:      'question': '4',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '161',
141: 1:      'question': '5',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '718',
141: 1:      'question': '6',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '192',
141: 1:      'question': '7',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '021',
141: 1:      'question': '8',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '222',
141: 1:      'question': '9',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '324',
141: 1:      'question': '10',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '252',
141: 1:      'question': '11',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '627',
141: 1:      'question': '12',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '282',
141: 1:      'question': '13',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '930',
141: 1:      'question': '14',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '313',
141: 1:      'question': '15',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '233',
141: 1:      'question': '16',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '343',
141: 1:      'question': '17',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '536',
141: 1:      'question': '18',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '373',
141: 1:      'question': '19',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '839',
141: 1:      'question': '20',
141: 1:      'valid': true
141: 1:    }
141: 1:  ],
141: 1:  'level': 6,
141: 1:  'nextQuestion': '21',
141: 1:  'questions': [
141: 1:    '1',
141: 1:    '2',
141: 1:    '3',
141: 1:    '4',
141: 1:    '5',
141: 1:    '6',
141: 1:    '7',
141: 1:    '8',
141: 1:    '9',
141: 1:    '10',
141: 1:    '11',
141: 1:    '12',
141: 1:    '13',
141: 1:    '14',
141: 1:    '15',
141: 1:    '16',
141: 1:    '17',
141: 1:    '18',
141: 1:    '19',
141: 1:    '20',
141: 1:    '21'
141: 1:  ]
141: 1:}
141: 1:Scores: 7484
141: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404']')
141: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
142: 1:BoardData {
142: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
142: 1:  'expectedAnswer': '142',
142: 1:  'history': [
142: 1:    {
142: 1:      'answer': '101',
142: 1:      'question': '1',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '112',
142: 1:      'question': '2',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '131',
142: 1:      'question': '3',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '415',
142: 1:      'question': '4',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '161',
142: 1:      'question': '5',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '718',
142: 1:      'question': '6',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '192',
142: 1:      'question': '7',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '021',
142: 1:      'question': '8',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '222',
142: 1:      'question': '9',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '324',
142: 1:      'question': '10',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '252',
142: 1:      'question': '11',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '627',
142: 1:      'question': '12',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '282',
142: 1:      'question': '13',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '930',
142: 1:      'question': '14',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '313',
142: 1:      'question': '15',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '233',
142: 1:      'question': '16',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '343',
142: 1:      'question': '17',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '536',
142: 1:      'question': '18',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '373',
142: 1:      'question': '19',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '839',
142: 1:      'question': '20',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '404',
142: 1:      'question': '21',
142: 1:      'valid': true
142: 1:    }
142: 1:  ],
142: 1:  'level': 6,
142: 1:  'nextQuestion': '22',
142: 1:  'questions': [
142: 1:    '1',
142: 1:    '2',
142: 1:    '3',
142: 1:    '4',
142: 1:    '5',
142: 1:    '6',
142: 1:    '7',
142: 1:    '8',
142: 1:    '9',
142: 1:    '10',
142: 1:    '11',
142: 1:    '12',
142: 1:    '13',
142: 1:    '14',
142: 1:    '15',
142: 1:    '16',
142: 1:    '17',
142: 1:    '18',
142: 1:    '19',
142: 1:    '20',
142: 1:    '21',
142: 1:    '22'
142: 1:  ]
142: 1:}
142: 1:Scores: 7490
142: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142']')
142: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
143: 1:BoardData {
143: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
143: 1:  'expectedAnswer': '434',
143: 1:  'history': [
143: 1:    {
143: 1:      'answer': '101',
143: 1:      'question': '1',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '112',
143: 1:      'question': '2',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '131',
143: 1:      'question': '3',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '415',
143: 1:      'question': '4',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '161',
143: 1:      'question': '5',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '718',
143: 1:      'question': '6',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '192',
143: 1:      'question': '7',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '021',
143: 1:      'question': '8',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '222',
143: 1:      'question': '9',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '324',
143: 1:      'question': '10',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '252',
143: 1:      'question': '11',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '627',
143: 1:      'question': '12',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '282',
143: 1:      'question': '13',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '930',
143: 1:      'question': '14',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '313',
143: 1:      'question': '15',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '233',
143: 1:      'question': '16',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '343',
143: 1:      'question': '17',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '536',
143: 1:      'question': '18',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '373',
143: 1:      'question': '19',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '839',
143: 1:      'question': '20',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '404',
143: 1:      'question': '21',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '142',
143: 1:      'question': '22',
143: 1:      'valid': true
143: 1:    }
143: 1:  ],
143: 1:  'level': 6,
143: 1:  'nextQuestion': '23',
143: 1:  'questions': [
143: 1:    '1',
143: 1:    '2',
143: 1:    '3',
143: 1:    '4',
143: 1:    '5',
143: 1:    '6',
143: 1:    '7',
143: 1:    '8',
143: 1:    '9',
143: 1:    '10',
143: 1:    '11',
143: 1:    '12',
143: 1:    '13',
143: 1:    '14',
143: 1:    '15',
143: 1:    '16',
143: 1:    '17',
143: 1:    '18',
143: 1:    '19',
143: 1:    '20',
143: 1:    '21',
143: 1:    '22',
143: 1:    '23'
143: 1:  ]
143: 1:}
143: 1:Scores: 7496
143: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434']')
143: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
144: 1:BoardData {
144: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
144: 1:  'expectedAnswer': '445',
144: 1:  'history': [
144: 1:    {
144: 1:      'answer': '101',
144: 1:      'question': '1',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '112',
144: 1:      'question': '2',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '131',
144: 1:      'question': '3',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '415',
144: 1:      'question': '4',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '161',
144: 1:      'question': '5',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '718',
144: 1:      'question': '6',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '192',
144: 1:      'question': '7',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '021',
144: 1:      'question': '8',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '222',
144: 1:      'question': '9',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '324',
144: 1:      'question': '10',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '252',
144: 1:      'question': '11',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '627',
144: 1:      'question': '12',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '282',
144: 1:      'question': '13',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '930',
144: 1:      'question': '14',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '313',
144: 1:      'question': '15',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '233',
144: 1:      'question': '16',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '343',
144: 1:      'question': '17',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '536',
144: 1:      'question': '18',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '373',
144: 1:      'question': '19',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '839',
144: 1:      'question': '20',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '404',
144: 1:      'question': '21',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '142',
144: 1:      'question': '22',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '434',
144: 1:      'question': '23',
144: 1:      'valid': true
144: 1:    }
144: 1:  ],
144: 1:  'level': 6,
144: 1:  'nextQuestion': '24',
144: 1:  'questions': [
144: 1:    '1',
144: 1:    '2',
144: 1:    '3',
144: 1:    '4',
144: 1:    '5',
144: 1:    '6',
144: 1:    '7',
144: 1:    '8',
144: 1:    '9',
144: 1:    '10',
144: 1:    '11',
144: 1:    '12',
144: 1:    '13',
144: 1:    '14',
144: 1:    '15',
144: 1:    '16',
144: 1:    '17',
144: 1:    '18',
144: 1:    '19',
144: 1:    '20',
144: 1:    '21',
144: 1:    '22',
144: 1:    '23',
144: 1:    '24'
144: 1:  ]
144: 1:}
144: 1:Scores: 7502
144: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434', '445']')
144: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
145: 1:BoardData {
145: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
145: 1:  'expectedAnswer': '464',
145: 1:  'history': [
145: 1:    {
145: 1:      'answer': '101',
145: 1:      'question': '1',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '112',
145: 1:      'question': '2',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '131',
145: 1:      'question': '3',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '415',
145: 1:      'question': '4',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '161',
145: 1:      'question': '5',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '718',
145: 1:      'question': '6',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '192',
145: 1:      'question': '7',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '021',
145: 1:      'question': '8',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '222',
145: 1:      'question': '9',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '324',
145: 1:      'question': '10',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '252',
145: 1:      'question': '11',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '627',
145: 1:      'question': '12',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '282',
145: 1:      'question': '13',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '930',
145: 1:      'question': '14',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '313',
145: 1:      'question': '15',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '233',
145: 1:      'question': '16',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '343',
145: 1:      'question': '17',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '536',
145: 1:      'question': '18',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '373',
145: 1:      'question': '19',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '839',
145: 1:      'question': '20',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '404',
145: 1:      'question': '21',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '142',
145: 1:      'question': '22',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '434',
145: 1:      'question': '23',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '445',
145: 1:      'question': '24',
145: 1:      'valid': true
145: 1:    }
145: 1:  ],
145: 1:  'level': 6,
145: 1:  'nextQuestion': '25',
145: 1:  'questions': [
145: 1:    '1',
145: 1:    '2',
145: 1:    '3',
145: 1:    '4',
145: 1:    '5',
145: 1:    '6',
145: 1:    '7',
145: 1:    '8',
145: 1:    '9',
145: 1:    '10',
145: 1:    '11',
145: 1:    '12',
145: 1:    '13',
145: 1:    '14',
145: 1:    '15',
145: 1:    '16',
145: 1:    '17',
145: 1:    '18',
145: 1:    '19',
145: 1:    '20',
145: 1:    '21',
145: 1:    '22',
145: 1:    '23',
145: 1:    '24',
145: 1:    '25'
145: 1:  ]
145: 1:}
145: 1:Scores: 7508
145: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434', '445', '464']')
145: 1:Fire Event: PassTest{complexity=15, testCount=25}
145: 1:Fire Event: NextAlgorithm{complexity=15, time=0}
------------------------------------------
146: 1:BoardData {
146: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
146: 1:  'history': [
146: 1:    {
146: 1:      'answer': '101',
146: 1:      'question': '1',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '112',
146: 1:      'question': '2',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '131',
146: 1:      'question': '3',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '415',
146: 1:      'question': '4',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '161',
146: 1:      'question': '5',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '718',
146: 1:      'question': '6',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '192',
146: 1:      'question': '7',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '021',
146: 1:      'question': '8',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '222',
146: 1:      'question': '9',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '324',
146: 1:      'question': '10',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '252',
146: 1:      'question': '11',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '627',
146: 1:      'question': '12',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '282',
146: 1:      'question': '13',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '930',
146: 1:      'question': '14',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '313',
146: 1:      'question': '15',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '233',
146: 1:      'question': '16',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '343',
146: 1:      'question': '17',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '536',
146: 1:      'question': '18',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '373',
146: 1:      'question': '19',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '839',
146: 1:      'question': '20',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '404',
146: 1:      'question': '21',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '142',
146: 1:      'question': '22',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '434',
146: 1:      'question': '23',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '445',
146: 1:      'question': '24',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '464',
146: 1:      'question': '25',
146: 1:      'valid': true
146: 1:    }
146: 1:  ],
146: 1:  'level': 6,
146: 1:  'questions': []
146: 1:}
146: 1:Scores: 9538
146: 1:Answer: message('StartNextLevel')
146: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
147: 1:BoardData {
147: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
147: 1:  'expectedAnswer': '1',
147: 1:  'history': [],
147: 1:  'level': 7,
147: 1:  'nextQuestion': '1',
147: 1:  'questions': ['1']
147: 1:}
147: 1:Scores: 9538
147: 1:Answer: message('['1']')
147: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
148: 1:BoardData {
148: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
148: 1:  'expectedAnswer': '1',
148: 1:  'history': [{
148: 1:    'answer': '1',
148: 1:    'question': '1',
148: 1:    'valid': true
148: 1:  }],
148: 1:  'level': 7,
148: 1:  'nextQuestion': '2',
148: 1:  'questions': [
148: 1:    '1',
148: 1:    '2'
148: 1:  ]
148: 1:}
148: 1:Scores: 9546
148: 1:Answer: message('['1', '1']')
148: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
149: 1:BoardData {
149: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
149: 1:  'expectedAnswer': '2',
149: 1:  'history': [
149: 1:    {
149: 1:      'answer': '1',
149: 1:      'question': '1',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '1',
149: 1:      'question': '2',
149: 1:      'valid': true
149: 1:    }
149: 1:  ],
149: 1:  'level': 7,
149: 1:  'nextQuestion': '3',
149: 1:  'questions': [
149: 1:    '1',
149: 1:    '2',
149: 1:    '3'
149: 1:  ]
149: 1:}
149: 1:Scores: 9554
149: 1:Answer: message('['1', '1', '2']')
149: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
150: 1:BoardData {
150: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
150: 1:  'expectedAnswer': '3',
150: 1:  'history': [
150: 1:    {
150: 1:      'answer': '1',
150: 1:      'question': '1',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '1',
150: 1:      'question': '2',
150: 1:      'valid': true
150: 1:    },
150: 1:    {
150: 1:      'answer': '2',
150: 1:      'question': '3',
150: 1:      'valid': true
150: 1:    }
150: 1:  ],
150: 1:  'level': 7,
150: 1:  'nextQuestion': '4',
150: 1:  'questions': [
150: 1:    '1',
150: 1:    '2',
150: 1:    '3',
150: 1:    '4'
150: 1:  ]
150: 1:}
150: 1:Scores: 9562
150: 1:Answer: message('['1', '1', '2', '3']')
150: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
151: 1:BoardData {
151: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
151: 1:  'expectedAnswer': '5',
151: 1:  'history': [
151: 1:    {
151: 1:      'answer': '1',
151: 1:      'question': '1',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '1',
151: 1:      'question': '2',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '2',
151: 1:      'question': '3',
151: 1:      'valid': true
151: 1:    },
151: 1:    {
151: 1:      'answer': '3',
151: 1:      'question': '4',
151: 1:      'valid': true
151: 1:    }
151: 1:  ],
151: 1:  'level': 7,
151: 1:  'nextQuestion': '5',
151: 1:  'questions': [
151: 1:    '1',
151: 1:    '2',
151: 1:    '3',
151: 1:    '4',
151: 1:    '5'
151: 1:  ]
151: 1:}
151: 1:Scores: 9570
151: 1:Answer: message('['1', '1', '2', '3', '5']')
151: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
152: 1:BoardData {
152: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
152: 1:  'expectedAnswer': '8',
152: 1:  'history': [
152: 1:    {
152: 1:      'answer': '1',
152: 1:      'question': '1',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '1',
152: 1:      'question': '2',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '2',
152: 1:      'question': '3',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '3',
152: 1:      'question': '4',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '5',
152: 1:      'question': '5',
152: 1:      'valid': true
152: 1:    }
152: 1:  ],
152: 1:  'level': 7,
152: 1:  'nextQuestion': '6',
152: 1:  'questions': [
152: 1:    '1',
152: 1:    '2',
152: 1:    '3',
152: 1:    '4',
152: 1:    '5',
152: 1:    '6'
152: 1:  ]
152: 1:}
152: 1:Scores: 9578
152: 1:Answer: message('['1', '1', '2', '3', '5', '8']')
152: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
153: 1:BoardData {
153: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
153: 1:  'expectedAnswer': '13',
153: 1:  'history': [
153: 1:    {
153: 1:      'answer': '1',
153: 1:      'question': '1',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '1',
153: 1:      'question': '2',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '2',
153: 1:      'question': '3',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '3',
153: 1:      'question': '4',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '5',
153: 1:      'question': '5',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '8',
153: 1:      'question': '6',
153: 1:      'valid': true
153: 1:    }
153: 1:  ],
153: 1:  'level': 7,
153: 1:  'nextQuestion': '7',
153: 1:  'questions': [
153: 1:    '1',
153: 1:    '2',
153: 1:    '3',
153: 1:    '4',
153: 1:    '5',
153: 1:    '6',
153: 1:    '7'
153: 1:  ]
153: 1:}
153: 1:Scores: 9586
153: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13']')
153: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
154: 1:BoardData {
154: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
154: 1:  'expectedAnswer': '21',
154: 1:  'history': [
154: 1:    {
154: 1:      'answer': '1',
154: 1:      'question': '1',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '1',
154: 1:      'question': '2',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '2',
154: 1:      'question': '3',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '3',
154: 1:      'question': '4',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '5',
154: 1:      'question': '5',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '8',
154: 1:      'question': '6',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '13',
154: 1:      'question': '7',
154: 1:      'valid': true
154: 1:    }
154: 1:  ],
154: 1:  'level': 7,
154: 1:  'nextQuestion': '8',
154: 1:  'questions': [
154: 1:    '1',
154: 1:    '2',
154: 1:    '3',
154: 1:    '4',
154: 1:    '5',
154: 1:    '6',
154: 1:    '7',
154: 1:    '8'
154: 1:  ]
154: 1:}
154: 1:Scores: 9594
154: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21']')
154: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
155: 1:BoardData {
155: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
155: 1:  'expectedAnswer': '34',
155: 1:  'history': [
155: 1:    {
155: 1:      'answer': '1',
155: 1:      'question': '1',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '1',
155: 1:      'question': '2',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '2',
155: 1:      'question': '3',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '3',
155: 1:      'question': '4',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '5',
155: 1:      'question': '5',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '8',
155: 1:      'question': '6',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '13',
155: 1:      'question': '7',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '21',
155: 1:      'question': '8',
155: 1:      'valid': true
155: 1:    }
155: 1:  ],
155: 1:  'level': 7,
155: 1:  'nextQuestion': '9',
155: 1:  'questions': [
155: 1:    '1',
155: 1:    '2',
155: 1:    '3',
155: 1:    '4',
155: 1:    '5',
155: 1:    '6',
155: 1:    '7',
155: 1:    '8',
155: 1:    '9'
155: 1:  ]
155: 1:}
155: 1:Scores: 9602
155: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34']')
155: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
156: 1:BoardData {
156: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
156: 1:  'expectedAnswer': '55',
156: 1:  'history': [
156: 1:    {
156: 1:      'answer': '1',
156: 1:      'question': '1',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '1',
156: 1:      'question': '2',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '2',
156: 1:      'question': '3',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '3',
156: 1:      'question': '4',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '5',
156: 1:      'question': '5',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '8',
156: 1:      'question': '6',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '13',
156: 1:      'question': '7',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '21',
156: 1:      'question': '8',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '34',
156: 1:      'question': '9',
156: 1:      'valid': true
156: 1:    }
156: 1:  ],
156: 1:  'level': 7,
156: 1:  'nextQuestion': '10',
156: 1:  'questions': [
156: 1:    '1',
156: 1:    '2',
156: 1:    '3',
156: 1:    '4',
156: 1:    '5',
156: 1:    '6',
156: 1:    '7',
156: 1:    '8',
156: 1:    '9',
156: 1:    '10'
156: 1:  ]
156: 1:}
156: 1:Scores: 9610
156: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55']')
156: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
157: 1:BoardData {
157: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
157: 1:  'expectedAnswer': '89',
157: 1:  'history': [
157: 1:    {
157: 1:      'answer': '1',
157: 1:      'question': '1',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '1',
157: 1:      'question': '2',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '2',
157: 1:      'question': '3',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '3',
157: 1:      'question': '4',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '5',
157: 1:      'question': '5',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '8',
157: 1:      'question': '6',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '13',
157: 1:      'question': '7',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '21',
157: 1:      'question': '8',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '34',
157: 1:      'question': '9',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '55',
157: 1:      'question': '10',
157: 1:      'valid': true
157: 1:    }
157: 1:  ],
157: 1:  'level': 7,
157: 1:  'nextQuestion': '11',
157: 1:  'questions': [
157: 1:    '1',
157: 1:    '2',
157: 1:    '3',
157: 1:    '4',
157: 1:    '5',
157: 1:    '6',
157: 1:    '7',
157: 1:    '8',
157: 1:    '9',
157: 1:    '10',
157: 1:    '11'
157: 1:  ]
157: 1:}
157: 1:Scores: 9618
157: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89']')
157: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
158: 1:BoardData {
158: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
158: 1:  'expectedAnswer': '144',
158: 1:  'history': [
158: 1:    {
158: 1:      'answer': '1',
158: 1:      'question': '1',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '1',
158: 1:      'question': '2',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '2',
158: 1:      'question': '3',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '3',
158: 1:      'question': '4',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '5',
158: 1:      'question': '5',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '8',
158: 1:      'question': '6',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '13',
158: 1:      'question': '7',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '21',
158: 1:      'question': '8',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '34',
158: 1:      'question': '9',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '55',
158: 1:      'question': '10',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '89',
158: 1:      'question': '11',
158: 1:      'valid': true
158: 1:    }
158: 1:  ],
158: 1:  'level': 7,
158: 1:  'nextQuestion': '12',
158: 1:  'questions': [
158: 1:    '1',
158: 1:    '2',
158: 1:    '3',
158: 1:    '4',
158: 1:    '5',
158: 1:    '6',
158: 1:    '7',
158: 1:    '8',
158: 1:    '9',
158: 1:    '10',
158: 1:    '11',
158: 1:    '12'
158: 1:  ]
158: 1:}
158: 1:Scores: 9626
158: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144']')
158: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
159: 1:BoardData {
159: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
159: 1:  'expectedAnswer': '233',
159: 1:  'history': [
159: 1:    {
159: 1:      'answer': '1',
159: 1:      'question': '1',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '1',
159: 1:      'question': '2',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '2',
159: 1:      'question': '3',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '3',
159: 1:      'question': '4',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '5',
159: 1:      'question': '5',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '8',
159: 1:      'question': '6',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '13',
159: 1:      'question': '7',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '21',
159: 1:      'question': '8',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '34',
159: 1:      'question': '9',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '55',
159: 1:      'question': '10',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '89',
159: 1:      'question': '11',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '144',
159: 1:      'question': '12',
159: 1:      'valid': true
159: 1:    }
159: 1:  ],
159: 1:  'level': 7,
159: 1:  'nextQuestion': '13',
159: 1:  'questions': [
159: 1:    '1',
159: 1:    '2',
159: 1:    '3',
159: 1:    '4',
159: 1:    '5',
159: 1:    '6',
159: 1:    '7',
159: 1:    '8',
159: 1:    '9',
159: 1:    '10',
159: 1:    '11',
159: 1:    '12',
159: 1:    '13'
159: 1:  ]
159: 1:}
159: 1:Scores: 9634
159: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233']')
159: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
160: 1:BoardData {
160: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
160: 1:  'expectedAnswer': '377',
160: 1:  'history': [
160: 1:    {
160: 1:      'answer': '1',
160: 1:      'question': '1',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '1',
160: 1:      'question': '2',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '2',
160: 1:      'question': '3',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '3',
160: 1:      'question': '4',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '5',
160: 1:      'question': '5',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '8',
160: 1:      'question': '6',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '13',
160: 1:      'question': '7',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '21',
160: 1:      'question': '8',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '34',
160: 1:      'question': '9',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '55',
160: 1:      'question': '10',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '89',
160: 1:      'question': '11',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '144',
160: 1:      'question': '12',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '233',
160: 1:      'question': '13',
160: 1:      'valid': true
160: 1:    }
160: 1:  ],
160: 1:  'level': 7,
160: 1:  'nextQuestion': '14',
160: 1:  'questions': [
160: 1:    '1',
160: 1:    '2',
160: 1:    '3',
160: 1:    '4',
160: 1:    '5',
160: 1:    '6',
160: 1:    '7',
160: 1:    '8',
160: 1:    '9',
160: 1:    '10',
160: 1:    '11',
160: 1:    '12',
160: 1:    '13',
160: 1:    '14'
160: 1:  ]
160: 1:}
160: 1:Scores: 9642
160: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377']')
160: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
161: 1:BoardData {
161: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
161: 1:  'expectedAnswer': '610',
161: 1:  'history': [
161: 1:    {
161: 1:      'answer': '1',
161: 1:      'question': '1',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '1',
161: 1:      'question': '2',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '2',
161: 1:      'question': '3',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '3',
161: 1:      'question': '4',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '5',
161: 1:      'question': '5',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '8',
161: 1:      'question': '6',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '13',
161: 1:      'question': '7',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '21',
161: 1:      'question': '8',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '34',
161: 1:      'question': '9',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '55',
161: 1:      'question': '10',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '89',
161: 1:      'question': '11',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '144',
161: 1:      'question': '12',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '233',
161: 1:      'question': '13',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '377',
161: 1:      'question': '14',
161: 1:      'valid': true
161: 1:    }
161: 1:  ],
161: 1:  'level': 7,
161: 1:  'nextQuestion': '15',
161: 1:  'questions': [
161: 1:    '1',
161: 1:    '2',
161: 1:    '3',
161: 1:    '4',
161: 1:    '5',
161: 1:    '6',
161: 1:    '7',
161: 1:    '8',
161: 1:    '9',
161: 1:    '10',
161: 1:    '11',
161: 1:    '12',
161: 1:    '13',
161: 1:    '14',
161: 1:    '15'
161: 1:  ]
161: 1:}
161: 1:Scores: 9650
161: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610']')
161: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
162: 1:BoardData {
162: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
162: 1:  'expectedAnswer': '987',
162: 1:  'history': [
162: 1:    {
162: 1:      'answer': '1',
162: 1:      'question': '1',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '1',
162: 1:      'question': '2',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '2',
162: 1:      'question': '3',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '3',
162: 1:      'question': '4',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '5',
162: 1:      'question': '5',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '8',
162: 1:      'question': '6',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '13',
162: 1:      'question': '7',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '21',
162: 1:      'question': '8',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '34',
162: 1:      'question': '9',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '55',
162: 1:      'question': '10',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '89',
162: 1:      'question': '11',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '144',
162: 1:      'question': '12',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '233',
162: 1:      'question': '13',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '377',
162: 1:      'question': '14',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '610',
162: 1:      'question': '15',
162: 1:      'valid': true
162: 1:    }
162: 1:  ],
162: 1:  'level': 7,
162: 1:  'nextQuestion': '16',
162: 1:  'questions': [
162: 1:    '1',
162: 1:    '2',
162: 1:    '3',
162: 1:    '4',
162: 1:    '5',
162: 1:    '6',
162: 1:    '7',
162: 1:    '8',
162: 1:    '9',
162: 1:    '10',
162: 1:    '11',
162: 1:    '12',
162: 1:    '13',
162: 1:    '14',
162: 1:    '15',
162: 1:    '16'
162: 1:  ]
162: 1:}
162: 1:Scores: 9658
162: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987']')
162: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
163: 1:BoardData {
163: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
163: 1:  'expectedAnswer': '1597',
163: 1:  'history': [
163: 1:    {
163: 1:      'answer': '1',
163: 1:      'question': '1',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '1',
163: 1:      'question': '2',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '2',
163: 1:      'question': '3',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '3',
163: 1:      'question': '4',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '5',
163: 1:      'question': '5',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '8',
163: 1:      'question': '6',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '13',
163: 1:      'question': '7',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '21',
163: 1:      'question': '8',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '34',
163: 1:      'question': '9',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '55',
163: 1:      'question': '10',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '89',
163: 1:      'question': '11',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '144',
163: 1:      'question': '12',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '233',
163: 1:      'question': '13',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '377',
163: 1:      'question': '14',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '610',
163: 1:      'question': '15',
163: 1:      'valid': true
163: 1:    },
163: 1:    {
163: 1:      'answer': '987',
163: 1:      'question': '16',
163: 1:      'valid': true
163: 1:    }
163: 1:  ],
163: 1:  'level': 7,
163: 1:  'nextQuestion': '17',
163: 1:  'questions': [
163: 1:    '1',
163: 1:    '2',
163: 1:    '3',
163: 1:    '4',
163: 1:    '5',
163: 1:    '6',
163: 1:    '7',
163: 1:    '8',
163: 1:    '9',
163: 1:    '10',
163: 1:    '11',
163: 1:    '12',
163: 1:    '13',
163: 1:    '14',
163: 1:    '15',
163: 1:    '16',
163: 1:    '17'
163: 1:  ]
163: 1:}
163: 1:Scores: 9666
163: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597']')
163: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
164: 1:BoardData {
164: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
164: 1:  'expectedAnswer': '2584',
164: 1:  'history': [
164: 1:    {
164: 1:      'answer': '1',
164: 1:      'question': '1',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '1',
164: 1:      'question': '2',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '2',
164: 1:      'question': '3',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '3',
164: 1:      'question': '4',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '5',
164: 1:      'question': '5',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '8',
164: 1:      'question': '6',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '13',
164: 1:      'question': '7',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '21',
164: 1:      'question': '8',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '34',
164: 1:      'question': '9',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '55',
164: 1:      'question': '10',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '89',
164: 1:      'question': '11',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '144',
164: 1:      'question': '12',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '233',
164: 1:      'question': '13',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '377',
164: 1:      'question': '14',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '610',
164: 1:      'question': '15',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '987',
164: 1:      'question': '16',
164: 1:      'valid': true
164: 1:    },
164: 1:    {
164: 1:      'answer': '1597',
164: 1:      'question': '17',
164: 1:      'valid': true
164: 1:    }
164: 1:  ],
164: 1:  'level': 7,
164: 1:  'nextQuestion': '18',
164: 1:  'questions': [
164: 1:    '1',
164: 1:    '2',
164: 1:    '3',
164: 1:    '4',
164: 1:    '5',
164: 1:    '6',
164: 1:    '7',
164: 1:    '8',
164: 1:    '9',
164: 1:    '10',
164: 1:    '11',
164: 1:    '12',
164: 1:    '13',
164: 1:    '14',
164: 1:    '15',
164: 1:    '16',
164: 1:    '17',
164: 1:    '18'
164: 1:  ]
164: 1:}
164: 1:Scores: 9674
164: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584']')
164: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
165: 1:BoardData {
165: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
165: 1:  'expectedAnswer': '4181',
165: 1:  'history': [
165: 1:    {
165: 1:      'answer': '1',
165: 1:      'question': '1',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '1',
165: 1:      'question': '2',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '2',
165: 1:      'question': '3',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '3',
165: 1:      'question': '4',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '5',
165: 1:      'question': '5',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '8',
165: 1:      'question': '6',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '13',
165: 1:      'question': '7',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '21',
165: 1:      'question': '8',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '34',
165: 1:      'question': '9',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '55',
165: 1:      'question': '10',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '89',
165: 1:      'question': '11',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '144',
165: 1:      'question': '12',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '233',
165: 1:      'question': '13',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '377',
165: 1:      'question': '14',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '610',
165: 1:      'question': '15',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '987',
165: 1:      'question': '16',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '1597',
165: 1:      'question': '17',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '2584',
165: 1:      'question': '18',
165: 1:      'valid': true
165: 1:    }
165: 1:  ],
165: 1:  'level': 7,
165: 1:  'nextQuestion': '19',
165: 1:  'questions': [
165: 1:    '1',
165: 1:    '2',
165: 1:    '3',
165: 1:    '4',
165: 1:    '5',
165: 1:    '6',
165: 1:    '7',
165: 1:    '8',
165: 1:    '9',
165: 1:    '10',
165: 1:    '11',
165: 1:    '12',
165: 1:    '13',
165: 1:    '14',
165: 1:    '15',
165: 1:    '16',
165: 1:    '17',
165: 1:    '18',
165: 1:    '19'
165: 1:  ]
165: 1:}
165: 1:Scores: 9682
165: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181']')
165: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
166: 1:BoardData {
166: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
166: 1:  'expectedAnswer': '6765',
166: 1:  'history': [
166: 1:    {
166: 1:      'answer': '1',
166: 1:      'question': '1',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '1',
166: 1:      'question': '2',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '2',
166: 1:      'question': '3',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '3',
166: 1:      'question': '4',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '5',
166: 1:      'question': '5',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '8',
166: 1:      'question': '6',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '13',
166: 1:      'question': '7',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '21',
166: 1:      'question': '8',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '34',
166: 1:      'question': '9',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '55',
166: 1:      'question': '10',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '89',
166: 1:      'question': '11',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '144',
166: 1:      'question': '12',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '233',
166: 1:      'question': '13',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '377',
166: 1:      'question': '14',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '610',
166: 1:      'question': '15',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '987',
166: 1:      'question': '16',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '1597',
166: 1:      'question': '17',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '2584',
166: 1:      'question': '18',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '4181',
166: 1:      'question': '19',
166: 1:      'valid': true
166: 1:    }
166: 1:  ],
166: 1:  'level': 7,
166: 1:  'nextQuestion': '20',
166: 1:  'questions': [
166: 1:    '1',
166: 1:    '2',
166: 1:    '3',
166: 1:    '4',
166: 1:    '5',
166: 1:    '6',
166: 1:    '7',
166: 1:    '8',
166: 1:    '9',
166: 1:    '10',
166: 1:    '11',
166: 1:    '12',
166: 1:    '13',
166: 1:    '14',
166: 1:    '15',
166: 1:    '16',
166: 1:    '17',
166: 1:    '18',
166: 1:    '19',
166: 1:    '20'
166: 1:  ]
166: 1:}
166: 1:Scores: 9690
166: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765']')
166: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
167: 1:BoardData {
167: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
167: 1:  'expectedAnswer': '10946',
167: 1:  'history': [
167: 1:    {
167: 1:      'answer': '1',
167: 1:      'question': '1',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '1',
167: 1:      'question': '2',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '2',
167: 1:      'question': '3',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '3',
167: 1:      'question': '4',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '5',
167: 1:      'question': '5',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '8',
167: 1:      'question': '6',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '13',
167: 1:      'question': '7',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '21',
167: 1:      'question': '8',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '34',
167: 1:      'question': '9',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '55',
167: 1:      'question': '10',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '89',
167: 1:      'question': '11',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '144',
167: 1:      'question': '12',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '233',
167: 1:      'question': '13',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '377',
167: 1:      'question': '14',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '610',
167: 1:      'question': '15',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '987',
167: 1:      'question': '16',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '1597',
167: 1:      'question': '17',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '2584',
167: 1:      'question': '18',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '4181',
167: 1:      'question': '19',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '6765',
167: 1:      'question': '20',
167: 1:      'valid': true
167: 1:    }
167: 1:  ],
167: 1:  'level': 7,
167: 1:  'nextQuestion': '21',
167: 1:  'questions': [
167: 1:    '1',
167: 1:    '2',
167: 1:    '3',
167: 1:    '4',
167: 1:    '5',
167: 1:    '6',
167: 1:    '7',
167: 1:    '8',
167: 1:    '9',
167: 1:    '10',
167: 1:    '11',
167: 1:    '12',
167: 1:    '13',
167: 1:    '14',
167: 1:    '15',
167: 1:    '16',
167: 1:    '17',
167: 1:    '18',
167: 1:    '19',
167: 1:    '20',
167: 1:    '21'
167: 1:  ]
167: 1:}
167: 1:Scores: 9698
167: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946']')
167: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
168: 1:BoardData {
168: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
168: 1:  'expectedAnswer': '17711',
168: 1:  'history': [
168: 1:    {
168: 1:      'answer': '1',
168: 1:      'question': '1',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '1',
168: 1:      'question': '2',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '2',
168: 1:      'question': '3',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '3',
168: 1:      'question': '4',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '5',
168: 1:      'question': '5',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '8',
168: 1:      'question': '6',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '13',
168: 1:      'question': '7',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '21',
168: 1:      'question': '8',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '34',
168: 1:      'question': '9',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '55',
168: 1:      'question': '10',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '89',
168: 1:      'question': '11',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '144',
168: 1:      'question': '12',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '233',
168: 1:      'question': '13',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '377',
168: 1:      'question': '14',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '610',
168: 1:      'question': '15',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '987',
168: 1:      'question': '16',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '1597',
168: 1:      'question': '17',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '2584',
168: 1:      'question': '18',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '4181',
168: 1:      'question': '19',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '6765',
168: 1:      'question': '20',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '10946',
168: 1:      'question': '21',
168: 1:      'valid': true
168: 1:    }
168: 1:  ],
168: 1:  'level': 7,
168: 1:  'nextQuestion': '22',
168: 1:  'questions': [
168: 1:    '1',
168: 1:    '2',
168: 1:    '3',
168: 1:    '4',
168: 1:    '5',
168: 1:    '6',
168: 1:    '7',
168: 1:    '8',
168: 1:    '9',
168: 1:    '10',
168: 1:    '11',
168: 1:    '12',
168: 1:    '13',
168: 1:    '14',
168: 1:    '15',
168: 1:    '16',
168: 1:    '17',
168: 1:    '18',
168: 1:    '19',
168: 1:    '20',
168: 1:    '21',
168: 1:    '22'
168: 1:  ]
168: 1:}
168: 1:Scores: 9706
168: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711']')
168: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
169: 1:BoardData {
169: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
169: 1:  'expectedAnswer': '28657',
169: 1:  'history': [
169: 1:    {
169: 1:      'answer': '1',
169: 1:      'question': '1',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '1',
169: 1:      'question': '2',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '2',
169: 1:      'question': '3',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '3',
169: 1:      'question': '4',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '5',
169: 1:      'question': '5',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '8',
169: 1:      'question': '6',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '13',
169: 1:      'question': '7',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '21',
169: 1:      'question': '8',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '34',
169: 1:      'question': '9',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '55',
169: 1:      'question': '10',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '89',
169: 1:      'question': '11',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '144',
169: 1:      'question': '12',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '233',
169: 1:      'question': '13',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '377',
169: 1:      'question': '14',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '610',
169: 1:      'question': '15',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '987',
169: 1:      'question': '16',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '1597',
169: 1:      'question': '17',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '2584',
169: 1:      'question': '18',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '4181',
169: 1:      'question': '19',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '6765',
169: 1:      'question': '20',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '10946',
169: 1:      'question': '21',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '17711',
169: 1:      'question': '22',
169: 1:      'valid': true
169: 1:    }
169: 1:  ],
169: 1:  'level': 7,
169: 1:  'nextQuestion': '23',
169: 1:  'questions': [
169: 1:    '1',
169: 1:    '2',
169: 1:    '3',
169: 1:    '4',
169: 1:    '5',
169: 1:    '6',
169: 1:    '7',
169: 1:    '8',
169: 1:    '9',
169: 1:    '10',
169: 1:    '11',
169: 1:    '12',
169: 1:    '13',
169: 1:    '14',
169: 1:    '15',
169: 1:    '16',
169: 1:    '17',
169: 1:    '18',
169: 1:    '19',
169: 1:    '20',
169: 1:    '21',
169: 1:    '22',
169: 1:    '23'
169: 1:  ]
169: 1:}
169: 1:Scores: 9714
169: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657']')
169: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
170: 1:BoardData {
170: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
170: 1:  'expectedAnswer': '46368',
170: 1:  'history': [
170: 1:    {
170: 1:      'answer': '1',
170: 1:      'question': '1',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '1',
170: 1:      'question': '2',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '2',
170: 1:      'question': '3',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '3',
170: 1:      'question': '4',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '5',
170: 1:      'question': '5',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '8',
170: 1:      'question': '6',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '13',
170: 1:      'question': '7',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '21',
170: 1:      'question': '8',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '34',
170: 1:      'question': '9',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '55',
170: 1:      'question': '10',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '89',
170: 1:      'question': '11',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '144',
170: 1:      'question': '12',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '233',
170: 1:      'question': '13',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '377',
170: 1:      'question': '14',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '610',
170: 1:      'question': '15',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '987',
170: 1:      'question': '16',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '1597',
170: 1:      'question': '17',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '2584',
170: 1:      'question': '18',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '4181',
170: 1:      'question': '19',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '6765',
170: 1:      'question': '20',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '10946',
170: 1:      'question': '21',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '17711',
170: 1:      'question': '22',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '28657',
170: 1:      'question': '23',
170: 1:      'valid': true
170: 1:    }
170: 1:  ],
170: 1:  'level': 7,
170: 1:  'nextQuestion': '24',
170: 1:  'questions': [
170: 1:    '1',
170: 1:    '2',
170: 1:    '3',
170: 1:    '4',
170: 1:    '5',
170: 1:    '6',
170: 1:    '7',
170: 1:    '8',
170: 1:    '9',
170: 1:    '10',
170: 1:    '11',
170: 1:    '12',
170: 1:    '13',
170: 1:    '14',
170: 1:    '15',
170: 1:    '16',
170: 1:    '17',
170: 1:    '18',
170: 1:    '19',
170: 1:    '20',
170: 1:    '21',
170: 1:    '22',
170: 1:    '23',
170: 1:    '24'
170: 1:  ]
170: 1:}
170: 1:Scores: 9722
170: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657', '46368']')
170: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
171: 1:BoardData {
171: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
171: 1:  'expectedAnswer': '75025',
171: 1:  'history': [
171: 1:    {
171: 1:      'answer': '1',
171: 1:      'question': '1',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '1',
171: 1:      'question': '2',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '2',
171: 1:      'question': '3',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '3',
171: 1:      'question': '4',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '5',
171: 1:      'question': '5',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '8',
171: 1:      'question': '6',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '13',
171: 1:      'question': '7',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '21',
171: 1:      'question': '8',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '34',
171: 1:      'question': '9',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '55',
171: 1:      'question': '10',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '89',
171: 1:      'question': '11',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '144',
171: 1:      'question': '12',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '233',
171: 1:      'question': '13',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '377',
171: 1:      'question': '14',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '610',
171: 1:      'question': '15',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '987',
171: 1:      'question': '16',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '1597',
171: 1:      'question': '17',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '2584',
171: 1:      'question': '18',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '4181',
171: 1:      'question': '19',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '6765',
171: 1:      'question': '20',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '10946',
171: 1:      'question': '21',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '17711',
171: 1:      'question': '22',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '28657',
171: 1:      'question': '23',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '46368',
171: 1:      'question': '24',
171: 1:      'valid': true
171: 1:    }
171: 1:  ],
171: 1:  'level': 7,
171: 1:  'nextQuestion': '25',
171: 1:  'questions': [
171: 1:    '1',
171: 1:    '2',
171: 1:    '3',
171: 1:    '4',
171: 1:    '5',
171: 1:    '6',
171: 1:    '7',
171: 1:    '8',
171: 1:    '9',
171: 1:    '10',
171: 1:    '11',
171: 1:    '12',
171: 1:    '13',
171: 1:    '14',
171: 1:    '15',
171: 1:    '16',
171: 1:    '17',
171: 1:    '18',
171: 1:    '19',
171: 1:    '20',
171: 1:    '21',
171: 1:    '22',
171: 1:    '23',
171: 1:    '24',
171: 1:    '25'
171: 1:  ]
171: 1:}
171: 1:Scores: 9730
171: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657', '46368', '75025']')
171: 1:Fire Event: PassTest{complexity=20, testCount=25}
171: 1:Fire Event: NextAlgorithm{complexity=20, time=0}
------------------------------------------
172: 1:BoardData {
172: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
172: 1:  'history': [
172: 1:    {
172: 1:      'answer': '1',
172: 1:      'question': '1',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '1',
172: 1:      'question': '2',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '2',
172: 1:      'question': '3',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '3',
172: 1:      'question': '4',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '5',
172: 1:      'question': '5',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '8',
172: 1:      'question': '6',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '13',
172: 1:      'question': '7',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '21',
172: 1:      'question': '8',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '34',
172: 1:      'question': '9',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '55',
172: 1:      'question': '10',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '89',
172: 1:      'question': '11',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '144',
172: 1:      'question': '12',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '233',
172: 1:      'question': '13',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '377',
172: 1:      'question': '14',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '610',
172: 1:      'question': '15',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '987',
172: 1:      'question': '16',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '1597',
172: 1:      'question': '17',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '2584',
172: 1:      'question': '18',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '4181',
172: 1:      'question': '19',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '6765',
172: 1:      'question': '20',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '10946',
172: 1:      'question': '21',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '17711',
172: 1:      'question': '22',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '28657',
172: 1:      'question': '23',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '46368',
172: 1:      'question': '24',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '75025',
172: 1:      'question': '25',
172: 1:      'valid': true
172: 1:    }
172: 1:  ],
172: 1:  'level': 7,
172: 1:  'questions': []
172: 1:}
172: 1:Scores: 12437
172: 1:Answer: message('StartNextLevel')
172: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
173: 1:BoardData {
173: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
173: 1:  'expectedAnswer': '[1]',
173: 1:  'history': [],
173: 1:  'level': 8,
173: 1:  'nextQuestion': '1',
173: 1:  'questions': ['1']
173: 1:}
173: 1:Scores: 12437
173: 1:Answer: message('['[1]']')
173: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
174: 1:BoardData {
174: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
174: 1:  'expectedAnswer': '[2]',
174: 1:  'history': [{
174: 1:    'answer': '[1]',
174: 1:    'question': '1',
174: 1:    'valid': true
174: 1:  }],
174: 1:  'level': 8,
174: 1:  'nextQuestion': '2',
174: 1:  'questions': [
174: 1:    '1',
174: 1:    '2'
174: 1:  ]
174: 1:}
174: 1:Scores: 12447
174: 1:Answer: message('['[1]', '[2]']')
174: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
175: 1:BoardData {
175: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
175: 1:  'expectedAnswer': '[3]',
175: 1:  'history': [
175: 1:    {
175: 1:      'answer': '[1]',
175: 1:      'question': '1',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '[2]',
175: 1:      'question': '2',
175: 1:      'valid': true
175: 1:    }
175: 1:  ],
175: 1:  'level': 8,
175: 1:  'nextQuestion': '3',
175: 1:  'questions': [
175: 1:    '1',
175: 1:    '2',
175: 1:    '3'
175: 1:  ]
175: 1:}
175: 1:Scores: 12457
175: 1:Answer: message('['[1]', '[2]', '[3]']')
175: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
176: 1:BoardData {
176: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
176: 1:  'expectedAnswer': '[2,2]',
176: 1:  'history': [
176: 1:    {
176: 1:      'answer': '[1]',
176: 1:      'question': '1',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '[2]',
176: 1:      'question': '2',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '[3]',
176: 1:      'question': '3',
176: 1:      'valid': true
176: 1:    }
176: 1:  ],
176: 1:  'level': 8,
176: 1:  'nextQuestion': '4',
176: 1:  'questions': [
176: 1:    '1',
176: 1:    '2',
176: 1:    '3',
176: 1:    '4'
176: 1:  ]
176: 1:}
176: 1:Scores: 12467
176: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]']')
176: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
177: 1:BoardData {
177: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
177: 1:  'expectedAnswer': '[5]',
177: 1:  'history': [
177: 1:    {
177: 1:      'answer': '[1]',
177: 1:      'question': '1',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '[2]',
177: 1:      'question': '2',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '[3]',
177: 1:      'question': '3',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '[2,2]',
177: 1:      'question': '4',
177: 1:      'valid': true
177: 1:    }
177: 1:  ],
177: 1:  'level': 8,
177: 1:  'nextQuestion': '5',
177: 1:  'questions': [
177: 1:    '1',
177: 1:    '2',
177: 1:    '3',
177: 1:    '4',
177: 1:    '5'
177: 1:  ]
177: 1:}
177: 1:Scores: 12477
177: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]']')
177: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
178: 1:BoardData {
178: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
178: 1:  'expectedAnswer': '[2,3]',
178: 1:  'history': [
178: 1:    {
178: 1:      'answer': '[1]',
178: 1:      'question': '1',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '[2]',
178: 1:      'question': '2',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '[3]',
178: 1:      'question': '3',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '[2,2]',
178: 1:      'question': '4',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '[5]',
178: 1:      'question': '5',
178: 1:      'valid': true
178: 1:    }
178: 1:  ],
178: 1:  'level': 8,
178: 1:  'nextQuestion': '6',
178: 1:  'questions': [
178: 1:    '1',
178: 1:    '2',
178: 1:    '3',
178: 1:    '4',
178: 1:    '5',
178: 1:    '6'
178: 1:  ]
178: 1:}
178: 1:Scores: 12487
178: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]']')
178: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
179: 1:BoardData {
179: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
179: 1:  'expectedAnswer': '[7]',
179: 1:  'history': [
179: 1:    {
179: 1:      'answer': '[1]',
179: 1:      'question': '1',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '[2]',
179: 1:      'question': '2',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '[3]',
179: 1:      'question': '3',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '[2,2]',
179: 1:      'question': '4',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '[5]',
179: 1:      'question': '5',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '[2,3]',
179: 1:      'question': '6',
179: 1:      'valid': true
179: 1:    }
179: 1:  ],
179: 1:  'level': 8,
179: 1:  'nextQuestion': '7',
179: 1:  'questions': [
179: 1:    '1',
179: 1:    '2',
179: 1:    '3',
179: 1:    '4',
179: 1:    '5',
179: 1:    '6',
179: 1:    '7'
179: 1:  ]
179: 1:}
179: 1:Scores: 12497
179: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]']')
179: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
180: 1:BoardData {
180: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
180: 1:  'expectedAnswer': '[2,2,2]',
180: 1:  'history': [
180: 1:    {
180: 1:      'answer': '[1]',
180: 1:      'question': '1',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '[2]',
180: 1:      'question': '2',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '[3]',
180: 1:      'question': '3',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '[2,2]',
180: 1:      'question': '4',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '[5]',
180: 1:      'question': '5',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '[2,3]',
180: 1:      'question': '6',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '[7]',
180: 1:      'question': '7',
180: 1:      'valid': true
180: 1:    }
180: 1:  ],
180: 1:  'level': 8,
180: 1:  'nextQuestion': '8',
180: 1:  'questions': [
180: 1:    '1',
180: 1:    '2',
180: 1:    '3',
180: 1:    '4',
180: 1:    '5',
180: 1:    '6',
180: 1:    '7',
180: 1:    '8'
180: 1:  ]
180: 1:}
180: 1:Scores: 12507
180: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]']')
180: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
181: 1:BoardData {
181: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
181: 1:  'expectedAnswer': '[3,3]',
181: 1:  'history': [
181: 1:    {
181: 1:      'answer': '[1]',
181: 1:      'question': '1',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '[2]',
181: 1:      'question': '2',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '[3]',
181: 1:      'question': '3',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '[2,2]',
181: 1:      'question': '4',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '[5]',
181: 1:      'question': '5',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '[2,3]',
181: 1:      'question': '6',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '[7]',
181: 1:      'question': '7',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '[2,2,2]',
181: 1:      'question': '8',
181: 1:      'valid': true
181: 1:    }
181: 1:  ],
181: 1:  'level': 8,
181: 1:  'nextQuestion': '9',
181: 1:  'questions': [
181: 1:    '1',
181: 1:    '2',
181: 1:    '3',
181: 1:    '4',
181: 1:    '5',
181: 1:    '6',
181: 1:    '7',
181: 1:    '8',
181: 1:    '9'
181: 1:  ]
181: 1:}
181: 1:Scores: 12517
181: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]']')
181: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
182: 1:BoardData {
182: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
182: 1:  'expectedAnswer': '[2,5]',
182: 1:  'history': [
182: 1:    {
182: 1:      'answer': '[1]',
182: 1:      'question': '1',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '[2]',
182: 1:      'question': '2',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '[3]',
182: 1:      'question': '3',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '[2,2]',
182: 1:      'question': '4',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '[5]',
182: 1:      'question': '5',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '[2,3]',
182: 1:      'question': '6',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '[7]',
182: 1:      'question': '7',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '[2,2,2]',
182: 1:      'question': '8',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '[3,3]',
182: 1:      'question': '9',
182: 1:      'valid': true
182: 1:    }
182: 1:  ],
182: 1:  'level': 8,
182: 1:  'nextQuestion': '10',
182: 1:  'questions': [
182: 1:    '1',
182: 1:    '2',
182: 1:    '3',
182: 1:    '4',
182: 1:    '5',
182: 1:    '6',
182: 1:    '7',
182: 1:    '8',
182: 1:    '9',
182: 1:    '10'
182: 1:  ]
182: 1:}
182: 1:Scores: 12527
182: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]']')
182: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
183: 1:BoardData {
183: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
183: 1:  'expectedAnswer': '[11]',
183: 1:  'history': [
183: 1:    {
183: 1:      'answer': '[1]',
183: 1:      'question': '1',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[2]',
183: 1:      'question': '2',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[3]',
183: 1:      'question': '3',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[2,2]',
183: 1:      'question': '4',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[5]',
183: 1:      'question': '5',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[2,3]',
183: 1:      'question': '6',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[7]',
183: 1:      'question': '7',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[2,2,2]',
183: 1:      'question': '8',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[3,3]',
183: 1:      'question': '9',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '[2,5]',
183: 1:      'question': '10',
183: 1:      'valid': true
183: 1:    }
183: 1:  ],
183: 1:  'level': 8,
183: 1:  'nextQuestion': '11',
183: 1:  'questions': [
183: 1:    '1',
183: 1:    '2',
183: 1:    '3',
183: 1:    '4',
183: 1:    '5',
183: 1:    '6',
183: 1:    '7',
183: 1:    '8',
183: 1:    '9',
183: 1:    '10',
183: 1:    '11'
183: 1:  ]
183: 1:}
183: 1:Scores: 12537
183: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]']')
183: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
184: 1:BoardData {
184: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
184: 1:  'expectedAnswer': '[2,2,3]',
184: 1:  'history': [
184: 1:    {
184: 1:      'answer': '[1]',
184: 1:      'question': '1',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[2]',
184: 1:      'question': '2',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[3]',
184: 1:      'question': '3',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[2,2]',
184: 1:      'question': '4',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[5]',
184: 1:      'question': '5',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[2,3]',
184: 1:      'question': '6',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[7]',
184: 1:      'question': '7',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[2,2,2]',
184: 1:      'question': '8',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[3,3]',
184: 1:      'question': '9',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[2,5]',
184: 1:      'question': '10',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '[11]',
184: 1:      'question': '11',
184: 1:      'valid': true
184: 1:    }
184: 1:  ],
184: 1:  'level': 8,
184: 1:  'nextQuestion': '12',
184: 1:  'questions': [
184: 1:    '1',
184: 1:    '2',
184: 1:    '3',
184: 1:    '4',
184: 1:    '5',
184: 1:    '6',
184: 1:    '7',
184: 1:    '8',
184: 1:    '9',
184: 1:    '10',
184: 1:    '11',
184: 1:    '12'
184: 1:  ]
184: 1:}
184: 1:Scores: 12547
184: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]']')
184: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
185: 1:BoardData {
185: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
185: 1:  'expectedAnswer': '[13]',
185: 1:  'history': [
185: 1:    {
185: 1:      'answer': '[1]',
185: 1:      'question': '1',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[2]',
185: 1:      'question': '2',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[3]',
185: 1:      'question': '3',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[2,2]',
185: 1:      'question': '4',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[5]',
185: 1:      'question': '5',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[2,3]',
185: 1:      'question': '6',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[7]',
185: 1:      'question': '7',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[2,2,2]',
185: 1:      'question': '8',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[3,3]',
185: 1:      'question': '9',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[2,5]',
185: 1:      'question': '10',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[11]',
185: 1:      'question': '11',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '[2,2,3]',
185: 1:      'question': '12',
185: 1:      'valid': true
185: 1:    }
185: 1:  ],
185: 1:  'level': 8,
185: 1:  'nextQuestion': '13',
185: 1:  'questions': [
185: 1:    '1',
185: 1:    '2',
185: 1:    '3',
185: 1:    '4',
185: 1:    '5',
185: 1:    '6',
185: 1:    '7',
185: 1:    '8',
185: 1:    '9',
185: 1:    '10',
185: 1:    '11',
185: 1:    '12',
185: 1:    '13'
185: 1:  ]
185: 1:}
185: 1:Scores: 12557
185: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]']')
185: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
186: 1:BoardData {
186: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
186: 1:  'expectedAnswer': '[2,7]',
186: 1:  'history': [
186: 1:    {
186: 1:      'answer': '[1]',
186: 1:      'question': '1',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[2]',
186: 1:      'question': '2',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[3]',
186: 1:      'question': '3',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[2,2]',
186: 1:      'question': '4',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[5]',
186: 1:      'question': '5',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[2,3]',
186: 1:      'question': '6',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[7]',
186: 1:      'question': '7',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[2,2,2]',
186: 1:      'question': '8',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[3,3]',
186: 1:      'question': '9',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[2,5]',
186: 1:      'question': '10',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[11]',
186: 1:      'question': '11',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[2,2,3]',
186: 1:      'question': '12',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '[13]',
186: 1:      'question': '13',
186: 1:      'valid': true
186: 1:    }
186: 1:  ],
186: 1:  'level': 8,
186: 1:  'nextQuestion': '14',
186: 1:  'questions': [
186: 1:    '1',
186: 1:    '2',
186: 1:    '3',
186: 1:    '4',
186: 1:    '5',
186: 1:    '6',
186: 1:    '7',
186: 1:    '8',
186: 1:    '9',
186: 1:    '10',
186: 1:    '11',
186: 1:    '12',
186: 1:    '13',
186: 1:    '14'
186: 1:  ]
186: 1:}
186: 1:Scores: 12567
186: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]']')
186: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
187: 1:BoardData {
187: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
187: 1:  'expectedAnswer': '[3,5]',
187: 1:  'history': [
187: 1:    {
187: 1:      'answer': '[1]',
187: 1:      'question': '1',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[2]',
187: 1:      'question': '2',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[3]',
187: 1:      'question': '3',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[2,2]',
187: 1:      'question': '4',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[5]',
187: 1:      'question': '5',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[2,3]',
187: 1:      'question': '6',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[7]',
187: 1:      'question': '7',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[2,2,2]',
187: 1:      'question': '8',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[3,3]',
187: 1:      'question': '9',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[2,5]',
187: 1:      'question': '10',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[11]',
187: 1:      'question': '11',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[2,2,3]',
187: 1:      'question': '12',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[13]',
187: 1:      'question': '13',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '[2,7]',
187: 1:      'question': '14',
187: 1:      'valid': true
187: 1:    }
187: 1:  ],
187: 1:  'level': 8,
187: 1:  'nextQuestion': '15',
187: 1:  'questions': [
187: 1:    '1',
187: 1:    '2',
187: 1:    '3',
187: 1:    '4',
187: 1:    '5',
187: 1:    '6',
187: 1:    '7',
187: 1:    '8',
187: 1:    '9',
187: 1:    '10',
187: 1:    '11',
187: 1:    '12',
187: 1:    '13',
187: 1:    '14',
187: 1:    '15'
187: 1:  ]
187: 1:}
187: 1:Scores: 12577
187: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]']')
187: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
188: 1:BoardData {
188: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
188: 1:  'expectedAnswer': '[2,2,2,2]',
188: 1:  'history': [
188: 1:    {
188: 1:      'answer': '[1]',
188: 1:      'question': '1',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[2]',
188: 1:      'question': '2',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[3]',
188: 1:      'question': '3',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[2,2]',
188: 1:      'question': '4',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[5]',
188: 1:      'question': '5',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[2,3]',
188: 1:      'question': '6',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[7]',
188: 1:      'question': '7',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[2,2,2]',
188: 1:      'question': '8',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[3,3]',
188: 1:      'question': '9',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[2,5]',
188: 1:      'question': '10',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[11]',
188: 1:      'question': '11',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[2,2,3]',
188: 1:      'question': '12',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[13]',
188: 1:      'question': '13',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[2,7]',
188: 1:      'question': '14',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '[3,5]',
188: 1:      'question': '15',
188: 1:      'valid': true
188: 1:    }
188: 1:  ],
188: 1:  'level': 8,
188: 1:  'nextQuestion': '16',
188: 1:  'questions': [
188: 1:    '1',
188: 1:    '2',
188: 1:    '3',
188: 1:    '4',
188: 1:    '5',
188: 1:    '6',
188: 1:    '7',
188: 1:    '8',
188: 1:    '9',
188: 1:    '10',
188: 1:    '11',
188: 1:    '12',
188: 1:    '13',
188: 1:    '14',
188: 1:    '15',
188: 1:    '16'
188: 1:  ]
188: 1:}
188: 1:Scores: 12587
188: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]']')
188: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
189: 1:BoardData {
189: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
189: 1:  'expectedAnswer': '[17]',
189: 1:  'history': [
189: 1:    {
189: 1:      'answer': '[1]',
189: 1:      'question': '1',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[2]',
189: 1:      'question': '2',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[3]',
189: 1:      'question': '3',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[2,2]',
189: 1:      'question': '4',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[5]',
189: 1:      'question': '5',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[2,3]',
189: 1:      'question': '6',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[7]',
189: 1:      'question': '7',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[2,2,2]',
189: 1:      'question': '8',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[3,3]',
189: 1:      'question': '9',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[2,5]',
189: 1:      'question': '10',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[11]',
189: 1:      'question': '11',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[2,2,3]',
189: 1:      'question': '12',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[13]',
189: 1:      'question': '13',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[2,7]',
189: 1:      'question': '14',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[3,5]',
189: 1:      'question': '15',
189: 1:      'valid': true
189: 1:    },
189: 1:    {
189: 1:      'answer': '[2,2,2,2]',
189: 1:      'question': '16',
189: 1:      'valid': true
189: 1:    }
189: 1:  ],
189: 1:  'level': 8,
189: 1:  'nextQuestion': '17',
189: 1:  'questions': [
189: 1:    '1',
189: 1:    '2',
189: 1:    '3',
189: 1:    '4',
189: 1:    '5',
189: 1:    '6',
189: 1:    '7',
189: 1:    '8',
189: 1:    '9',
189: 1:    '10',
189: 1:    '11',
189: 1:    '12',
189: 1:    '13',
189: 1:    '14',
189: 1:    '15',
189: 1:    '16',
189: 1:    '17'
189: 1:  ]
189: 1:}
189: 1:Scores: 12597
189: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]']')
189: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
190: 1:BoardData {
190: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
190: 1:  'expectedAnswer': '[2,3,3]',
190: 1:  'history': [
190: 1:    {
190: 1:      'answer': '[1]',
190: 1:      'question': '1',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[2]',
190: 1:      'question': '2',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[3]',
190: 1:      'question': '3',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[2,2]',
190: 1:      'question': '4',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[5]',
190: 1:      'question': '5',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[2,3]',
190: 1:      'question': '6',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[7]',
190: 1:      'question': '7',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[2,2,2]',
190: 1:      'question': '8',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[3,3]',
190: 1:      'question': '9',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[2,5]',
190: 1:      'question': '10',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[11]',
190: 1:      'question': '11',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[2,2,3]',
190: 1:      'question': '12',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[13]',
190: 1:      'question': '13',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[2,7]',
190: 1:      'question': '14',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[3,5]',
190: 1:      'question': '15',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[2,2,2,2]',
190: 1:      'question': '16',
190: 1:      'valid': true
190: 1:    },
190: 1:    {
190: 1:      'answer': '[17]',
190: 1:      'question': '17',
190: 1:      'valid': true
190: 1:    }
190: 1:  ],
190: 1:  'level': 8,
190: 1:  'nextQuestion': '18',
190: 1:  'questions': [
190: 1:    '1',
190: 1:    '2',
190: 1:    '3',
190: 1:    '4',
190: 1:    '5',
190: 1:    '6',
190: 1:    '7',
190: 1:    '8',
190: 1:    '9',
190: 1:    '10',
190: 1:    '11',
190: 1:    '12',
190: 1:    '13',
190: 1:    '14',
190: 1:    '15',
190: 1:    '16',
190: 1:    '17',
190: 1:    '18'
190: 1:  ]
190: 1:}
190: 1:Scores: 12607
190: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]']')
190: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
191: 1:BoardData {
191: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
191: 1:  'expectedAnswer': '[19]',
191: 1:  'history': [
191: 1:    {
191: 1:      'answer': '[1]',
191: 1:      'question': '1',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2]',
191: 1:      'question': '2',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[3]',
191: 1:      'question': '3',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2,2]',
191: 1:      'question': '4',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[5]',
191: 1:      'question': '5',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2,3]',
191: 1:      'question': '6',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[7]',
191: 1:      'question': '7',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2,2,2]',
191: 1:      'question': '8',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[3,3]',
191: 1:      'question': '9',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2,5]',
191: 1:      'question': '10',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[11]',
191: 1:      'question': '11',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2,2,3]',
191: 1:      'question': '12',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[13]',
191: 1:      'question': '13',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2,7]',
191: 1:      'question': '14',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[3,5]',
191: 1:      'question': '15',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2,2,2,2]',
191: 1:      'question': '16',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[17]',
191: 1:      'question': '17',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '[2,3,3]',
191: 1:      'question': '18',
191: 1:      'valid': true
191: 1:    }
191: 1:  ],
191: 1:  'level': 8,
191: 1:  'nextQuestion': '19',
191: 1:  'questions': [
191: 1:    '1',
191: 1:    '2',
191: 1:    '3',
191: 1:    '4',
191: 1:    '5',
191: 1:    '6',
191: 1:    '7',
191: 1:    '8',
191: 1:    '9',
191: 1:    '10',
191: 1:    '11',
191: 1:    '12',
191: 1:    '13',
191: 1:    '14',
191: 1:    '15',
191: 1:    '16',
191: 1:    '17',
191: 1:    '18',
191: 1:    '19'
191: 1:  ]
191: 1:}
191: 1:Scores: 12617
191: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]']')
191: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
192: 1:BoardData {
192: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
192: 1:  'expectedAnswer': '[2,2,5]',
192: 1:  'history': [
192: 1:    {
192: 1:      'answer': '[1]',
192: 1:      'question': '1',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2]',
192: 1:      'question': '2',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[3]',
192: 1:      'question': '3',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2,2]',
192: 1:      'question': '4',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[5]',
192: 1:      'question': '5',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2,3]',
192: 1:      'question': '6',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[7]',
192: 1:      'question': '7',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2,2,2]',
192: 1:      'question': '8',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[3,3]',
192: 1:      'question': '9',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2,5]',
192: 1:      'question': '10',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[11]',
192: 1:      'question': '11',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2,2,3]',
192: 1:      'question': '12',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[13]',
192: 1:      'question': '13',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2,7]',
192: 1:      'question': '14',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[3,5]',
192: 1:      'question': '15',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2,2,2,2]',
192: 1:      'question': '16',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[17]',
192: 1:      'question': '17',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[2,3,3]',
192: 1:      'question': '18',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '[19]',
192: 1:      'question': '19',
192: 1:      'valid': true
192: 1:    }
192: 1:  ],
192: 1:  'level': 8,
192: 1:  'nextQuestion': '20',
192: 1:  'questions': [
192: 1:    '1',
192: 1:    '2',
192: 1:    '3',
192: 1:    '4',
192: 1:    '5',
192: 1:    '6',
192: 1:    '7',
192: 1:    '8',
192: 1:    '9',
192: 1:    '10',
192: 1:    '11',
192: 1:    '12',
192: 1:    '13',
192: 1:    '14',
192: 1:    '15',
192: 1:    '16',
192: 1:    '17',
192: 1:    '18',
192: 1:    '19',
192: 1:    '20'
192: 1:  ]
192: 1:}
192: 1:Scores: 12627
192: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]']')
192: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
193: 1:BoardData {
193: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
193: 1:  'expectedAnswer': '[3,7]',
193: 1:  'history': [
193: 1:    {
193: 1:      'answer': '[1]',
193: 1:      'question': '1',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2]',
193: 1:      'question': '2',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[3]',
193: 1:      'question': '3',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,2]',
193: 1:      'question': '4',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[5]',
193: 1:      'question': '5',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,3]',
193: 1:      'question': '6',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[7]',
193: 1:      'question': '7',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,2,2]',
193: 1:      'question': '8',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[3,3]',
193: 1:      'question': '9',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,5]',
193: 1:      'question': '10',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[11]',
193: 1:      'question': '11',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,2,3]',
193: 1:      'question': '12',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[13]',
193: 1:      'question': '13',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,7]',
193: 1:      'question': '14',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[3,5]',
193: 1:      'question': '15',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,2,2,2]',
193: 1:      'question': '16',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[17]',
193: 1:      'question': '17',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,3,3]',
193: 1:      'question': '18',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[19]',
193: 1:      'question': '19',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '[2,2,5]',
193: 1:      'question': '20',
193: 1:      'valid': true
193: 1:    }
193: 1:  ],
193: 1:  'level': 8,
193: 1:  'nextQuestion': '21',
193: 1:  'questions': [
193: 1:    '1',
193: 1:    '2',
193: 1:    '3',
193: 1:    '4',
193: 1:    '5',
193: 1:    '6',
193: 1:    '7',
193: 1:    '8',
193: 1:    '9',
193: 1:    '10',
193: 1:    '11',
193: 1:    '12',
193: 1:    '13',
193: 1:    '14',
193: 1:    '15',
193: 1:    '16',
193: 1:    '17',
193: 1:    '18',
193: 1:    '19',
193: 1:    '20',
193: 1:    '21'
193: 1:  ]
193: 1:}
193: 1:Scores: 12637
193: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]']')
193: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
194: 1:BoardData {
194: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
194: 1:  'expectedAnswer': '[2,11]',
194: 1:  'history': [
194: 1:    {
194: 1:      'answer': '[1]',
194: 1:      'question': '1',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2]',
194: 1:      'question': '2',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[3]',
194: 1:      'question': '3',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,2]',
194: 1:      'question': '4',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[5]',
194: 1:      'question': '5',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,3]',
194: 1:      'question': '6',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[7]',
194: 1:      'question': '7',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,2,2]',
194: 1:      'question': '8',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[3,3]',
194: 1:      'question': '9',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,5]',
194: 1:      'question': '10',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[11]',
194: 1:      'question': '11',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,2,3]',
194: 1:      'question': '12',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[13]',
194: 1:      'question': '13',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,7]',
194: 1:      'question': '14',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[3,5]',
194: 1:      'question': '15',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,2,2,2]',
194: 1:      'question': '16',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[17]',
194: 1:      'question': '17',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,3,3]',
194: 1:      'question': '18',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[19]',
194: 1:      'question': '19',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[2,2,5]',
194: 1:      'question': '20',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '[3,7]',
194: 1:      'question': '21',
194: 1:      'valid': true
194: 1:    }
194: 1:  ],
194: 1:  'level': 8,
194: 1:  'nextQuestion': '22',
194: 1:  'questions': [
194: 1:    '1',
194: 1:    '2',
194: 1:    '3',
194: 1:    '4',
194: 1:    '5',
194: 1:    '6',
194: 1:    '7',
194: 1:    '8',
194: 1:    '9',
194: 1:    '10',
194: 1:    '11',
194: 1:    '12',
194: 1:    '13',
194: 1:    '14',
194: 1:    '15',
194: 1:    '16',
194: 1:    '17',
194: 1:    '18',
194: 1:    '19',
194: 1:    '20',
194: 1:    '21',
194: 1:    '22'
194: 1:  ]
194: 1:}
194: 1:Scores: 12647
194: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]']')
194: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
195: 1:BoardData {
195: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
195: 1:  'expectedAnswer': '[23]',
195: 1:  'history': [
195: 1:    {
195: 1:      'answer': '[1]',
195: 1:      'question': '1',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2]',
195: 1:      'question': '2',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[3]',
195: 1:      'question': '3',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,2]',
195: 1:      'question': '4',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[5]',
195: 1:      'question': '5',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,3]',
195: 1:      'question': '6',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[7]',
195: 1:      'question': '7',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,2,2]',
195: 1:      'question': '8',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[3,3]',
195: 1:      'question': '9',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,5]',
195: 1:      'question': '10',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[11]',
195: 1:      'question': '11',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,2,3]',
195: 1:      'question': '12',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[13]',
195: 1:      'question': '13',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,7]',
195: 1:      'question': '14',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[3,5]',
195: 1:      'question': '15',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,2,2,2]',
195: 1:      'question': '16',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[17]',
195: 1:      'question': '17',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,3,3]',
195: 1:      'question': '18',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[19]',
195: 1:      'question': '19',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,2,5]',
195: 1:      'question': '20',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[3,7]',
195: 1:      'question': '21',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '[2,11]',
195: 1:      'question': '22',
195: 1:      'valid': true
195: 1:    }
195: 1:  ],
195: 1:  'level': 8,
195: 1:  'nextQuestion': '23',
195: 1:  'questions': [
195: 1:    '1',
195: 1:    '2',
195: 1:    '3',
195: 1:    '4',
195: 1:    '5',
195: 1:    '6',
195: 1:    '7',
195: 1:    '8',
195: 1:    '9',
195: 1:    '10',
195: 1:    '11',
195: 1:    '12',
195: 1:    '13',
195: 1:    '14',
195: 1:    '15',
195: 1:    '16',
195: 1:    '17',
195: 1:    '18',
195: 1:    '19',
195: 1:    '20',
195: 1:    '21',
195: 1:    '22',
195: 1:    '23'
195: 1:  ]
195: 1:}
195: 1:Scores: 12657
195: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]']')
195: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
196: 1:BoardData {
196: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
196: 1:  'expectedAnswer': '[2,2,2,3]',
196: 1:  'history': [
196: 1:    {
196: 1:      'answer': '[1]',
196: 1:      'question': '1',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2]',
196: 1:      'question': '2',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[3]',
196: 1:      'question': '3',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,2]',
196: 1:      'question': '4',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[5]',
196: 1:      'question': '5',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,3]',
196: 1:      'question': '6',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[7]',
196: 1:      'question': '7',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,2,2]',
196: 1:      'question': '8',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[3,3]',
196: 1:      'question': '9',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,5]',
196: 1:      'question': '10',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[11]',
196: 1:      'question': '11',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,2,3]',
196: 1:      'question': '12',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[13]',
196: 1:      'question': '13',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,7]',
196: 1:      'question': '14',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[3,5]',
196: 1:      'question': '15',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,2,2,2]',
196: 1:      'question': '16',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[17]',
196: 1:      'question': '17',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,3,3]',
196: 1:      'question': '18',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[19]',
196: 1:      'question': '19',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,2,5]',
196: 1:      'question': '20',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[3,7]',
196: 1:      'question': '21',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[2,11]',
196: 1:      'question': '22',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '[23]',
196: 1:      'question': '23',
196: 1:      'valid': true
196: 1:    }
196: 1:  ],
196: 1:  'level': 8,
196: 1:  'nextQuestion': '24',
196: 1:  'questions': [
196: 1:    '1',
196: 1:    '2',
196: 1:    '3',
196: 1:    '4',
196: 1:    '5',
196: 1:    '6',
196: 1:    '7',
196: 1:    '8',
196: 1:    '9',
196: 1:    '10',
196: 1:    '11',
196: 1:    '12',
196: 1:    '13',
196: 1:    '14',
196: 1:    '15',
196: 1:    '16',
196: 1:    '17',
196: 1:    '18',
196: 1:    '19',
196: 1:    '20',
196: 1:    '21',
196: 1:    '22',
196: 1:    '23',
196: 1:    '24'
196: 1:  ]
196: 1:}
196: 1:Scores: 12667
196: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]', '[2,2,2,3]']')
196: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
197: 1:BoardData {
197: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
197: 1:  'expectedAnswer': '[5,5]',
197: 1:  'history': [
197: 1:    {
197: 1:      'answer': '[1]',
197: 1:      'question': '1',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2]',
197: 1:      'question': '2',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[3]',
197: 1:      'question': '3',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,2]',
197: 1:      'question': '4',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[5]',
197: 1:      'question': '5',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,3]',
197: 1:      'question': '6',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[7]',
197: 1:      'question': '7',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,2,2]',
197: 1:      'question': '8',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[3,3]',
197: 1:      'question': '9',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,5]',
197: 1:      'question': '10',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[11]',
197: 1:      'question': '11',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,2,3]',
197: 1:      'question': '12',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[13]',
197: 1:      'question': '13',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,7]',
197: 1:      'question': '14',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[3,5]',
197: 1:      'question': '15',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,2,2,2]',
197: 1:      'question': '16',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[17]',
197: 1:      'question': '17',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,3,3]',
197: 1:      'question': '18',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[19]',
197: 1:      'question': '19',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,2,5]',
197: 1:      'question': '20',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[3,7]',
197: 1:      'question': '21',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,11]',
197: 1:      'question': '22',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[23]',
197: 1:      'question': '23',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '[2,2,2,3]',
197: 1:      'question': '24',
197: 1:      'valid': true
197: 1:    }
197: 1:  ],
197: 1:  'level': 8,
197: 1:  'nextQuestion': '25',
197: 1:  'questions': [
197: 1:    '1',
197: 1:    '2',
197: 1:    '3',
197: 1:    '4',
197: 1:    '5',
197: 1:    '6',
197: 1:    '7',
197: 1:    '8',
197: 1:    '9',
197: 1:    '10',
197: 1:    '11',
197: 1:    '12',
197: 1:    '13',
197: 1:    '14',
197: 1:    '15',
197: 1:    '16',
197: 1:    '17',
197: 1:    '18',
197: 1:    '19',
197: 1:    '20',
197: 1:    '21',
197: 1:    '22',
197: 1:    '23',
197: 1:    '24',
197: 1:    '25'
197: 1:  ]
197: 1:}
197: 1:Scores: 12677
197: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]', '[2,2,2,3]', '[5,5]']')
197: 1:Fire Event: PassTest{complexity=25, testCount=25}
197: 1:Fire Event: NextAlgorithm{complexity=25, time=0}
------------------------------------------
198: 1:BoardData {
198: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
198: 1:  'history': [
198: 1:    {
198: 1:      'answer': '[1]',
198: 1:      'question': '1',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2]',
198: 1:      'question': '2',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[3]',
198: 1:      'question': '3',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,2]',
198: 1:      'question': '4',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[5]',
198: 1:      'question': '5',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,3]',
198: 1:      'question': '6',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[7]',
198: 1:      'question': '7',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,2,2]',
198: 1:      'question': '8',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[3,3]',
198: 1:      'question': '9',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,5]',
198: 1:      'question': '10',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[11]',
198: 1:      'question': '11',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,2,3]',
198: 1:      'question': '12',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[13]',
198: 1:      'question': '13',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,7]',
198: 1:      'question': '14',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[3,5]',
198: 1:      'question': '15',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,2,2,2]',
198: 1:      'question': '16',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[17]',
198: 1:      'question': '17',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,3,3]',
198: 1:      'question': '18',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[19]',
198: 1:      'question': '19',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,2,5]',
198: 1:      'question': '20',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[3,7]',
198: 1:      'question': '21',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,11]',
198: 1:      'question': '22',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[23]',
198: 1:      'question': '23',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[2,2,2,3]',
198: 1:      'question': '24',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '[5,5]',
198: 1:      'question': '25',
198: 1:      'valid': true
198: 1:    }
198: 1:  ],
198: 1:  'level': 8,
198: 1:  'questions': []
198: 1:}
198: 1:Scores: 16061
198: 1:Answer: message('StartNextLevel')
198: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
199: 1:BoardData {
199: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
199: 1:  'expectedAnswer': '2',
199: 1:  'history': [],
199: 1:  'level': 9,
199: 1:  'nextQuestion': '1',
199: 1:  'questions': ['1']
199: 1:}
199: 1:Scores: 16061
199: 1:Answer: message('['2']')
199: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
200: 1:BoardData {
200: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
200: 1:  'expectedAnswer': '4',
200: 1:  'history': [{
200: 1:    'answer': '2',
200: 1:    'question': '1',
200: 1:    'valid': true
200: 1:  }],
200: 1:  'level': 9,
200: 1:  'nextQuestion': '2',
200: 1:  'questions': [
200: 1:    '1',
200: 1:    '2'
200: 1:  ]
200: 1:}
200: 1:Scores: 16073
200: 1:Answer: message('['2', '4']')
200: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
201: 1:BoardData {
201: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
201: 1:  'expectedAnswer': '8',
201: 1:  'history': [
201: 1:    {
201: 1:      'answer': '2',
201: 1:      'question': '1',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '4',
201: 1:      'question': '2',
201: 1:      'valid': true
201: 1:    }
201: 1:  ],
201: 1:  'level': 9,
201: 1:  'nextQuestion': '3',
201: 1:  'questions': [
201: 1:    '1',
201: 1:    '2',
201: 1:    '3'
201: 1:  ]
201: 1:}
201: 1:Scores: 16085
201: 1:Answer: message('['2', '4', '8']')
201: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
202: 1:BoardData {
202: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
202: 1:  'expectedAnswer': '7',
202: 1:  'history': [
202: 1:    {
202: 1:      'answer': '2',
202: 1:      'question': '1',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '4',
202: 1:      'question': '2',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '8',
202: 1:      'question': '3',
202: 1:      'valid': true
202: 1:    }
202: 1:  ],
202: 1:  'level': 9,
202: 1:  'nextQuestion': '4',
202: 1:  'questions': [
202: 1:    '1',
202: 1:    '2',
202: 1:    '3',
202: 1:    '4'
202: 1:  ]
202: 1:}
202: 1:Scores: 16097
202: 1:Answer: message('['2', '4', '8', '7']')
202: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
203: 1:BoardData {
203: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
203: 1:  'expectedAnswer': '5',
203: 1:  'history': [
203: 1:    {
203: 1:      'answer': '2',
203: 1:      'question': '1',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '4',
203: 1:      'question': '2',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '8',
203: 1:      'question': '3',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '7',
203: 1:      'question': '4',
203: 1:      'valid': true
203: 1:    }
203: 1:  ],
203: 1:  'level': 9,
203: 1:  'nextQuestion': '5',
203: 1:  'questions': [
203: 1:    '1',
203: 1:    '2',
203: 1:    '3',
203: 1:    '4',
203: 1:    '5'
203: 1:  ]
203: 1:}
203: 1:Scores: 16109
203: 1:Answer: message('['2', '4', '8', '7', '5']')
203: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
204: 1:BoardData {
204: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
204: 1:  'expectedAnswer': '10',
204: 1:  'history': [
204: 1:    {
204: 1:      'answer': '2',
204: 1:      'question': '1',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '4',
204: 1:      'question': '2',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '8',
204: 1:      'question': '3',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '7',
204: 1:      'question': '4',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '5',
204: 1:      'question': '5',
204: 1:      'valid': true
204: 1:    }
204: 1:  ],
204: 1:  'level': 9,
204: 1:  'nextQuestion': '6',
204: 1:  'questions': [
204: 1:    '1',
204: 1:    '2',
204: 1:    '3',
204: 1:    '4',
204: 1:    '5',
204: 1:    '6'
204: 1:  ]
204: 1:}
204: 1:Scores: 16121
204: 1:Answer: message('['2', '4', '8', '7', '5', '10']')
204: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
205: 1:BoardData {
205: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
205: 1:  'expectedAnswer': '11',
205: 1:  'history': [
205: 1:    {
205: 1:      'answer': '2',
205: 1:      'question': '1',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '4',
205: 1:      'question': '2',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '8',
205: 1:      'question': '3',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '7',
205: 1:      'question': '4',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '5',
205: 1:      'question': '5',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '10',
205: 1:      'question': '6',
205: 1:      'valid': true
205: 1:    }
205: 1:  ],
205: 1:  'level': 9,
205: 1:  'nextQuestion': '7',
205: 1:  'questions': [
205: 1:    '1',
205: 1:    '2',
205: 1:    '3',
205: 1:    '4',
205: 1:    '5',
205: 1:    '6',
205: 1:    '7'
205: 1:  ]
205: 1:}
205: 1:Scores: 16133
205: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11']')
205: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
206: 1:BoardData {
206: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
206: 1:  'expectedAnswer': '13',
206: 1:  'history': [
206: 1:    {
206: 1:      'answer': '2',
206: 1:      'question': '1',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '4',
206: 1:      'question': '2',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '8',
206: 1:      'question': '3',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '7',
206: 1:      'question': '4',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '5',
206: 1:      'question': '5',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '10',
206: 1:      'question': '6',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '11',
206: 1:      'question': '7',
206: 1:      'valid': true
206: 1:    }
206: 1:  ],
206: 1:  'level': 9,
206: 1:  'nextQuestion': '8',
206: 1:  'questions': [
206: 1:    '1',
206: 1:    '2',
206: 1:    '3',
206: 1:    '4',
206: 1:    '5',
206: 1:    '6',
206: 1:    '7',
206: 1:    '8'
206: 1:  ]
206: 1:}
206: 1:Scores: 16145
206: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13']')
206: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
207: 1:BoardData {
207: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
207: 1:  'expectedAnswer': '8',
207: 1:  'history': [
207: 1:    {
207: 1:      'answer': '2',
207: 1:      'question': '1',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '4',
207: 1:      'question': '2',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '8',
207: 1:      'question': '3',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '7',
207: 1:      'question': '4',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '5',
207: 1:      'question': '5',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '10',
207: 1:      'question': '6',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '11',
207: 1:      'question': '7',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '13',
207: 1:      'question': '8',
207: 1:      'valid': true
207: 1:    }
207: 1:  ],
207: 1:  'level': 9,
207: 1:  'nextQuestion': '9',
207: 1:  'questions': [
207: 1:    '1',
207: 1:    '2',
207: 1:    '3',
207: 1:    '4',
207: 1:    '5',
207: 1:    '6',
207: 1:    '7',
207: 1:    '8',
207: 1:    '9'
207: 1:  ]
207: 1:}
207: 1:Scores: 16157
207: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8']')
207: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
208: 1:BoardData {
208: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
208: 1:  'expectedAnswer': '7',
208: 1:  'history': [
208: 1:    {
208: 1:      'answer': '2',
208: 1:      'question': '1',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '4',
208: 1:      'question': '2',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '8',
208: 1:      'question': '3',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '7',
208: 1:      'question': '4',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '5',
208: 1:      'question': '5',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '10',
208: 1:      'question': '6',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '11',
208: 1:      'question': '7',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '13',
208: 1:      'question': '8',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '8',
208: 1:      'question': '9',
208: 1:      'valid': true
208: 1:    }
208: 1:  ],
208: 1:  'level': 9,
208: 1:  'nextQuestion': '10',
208: 1:  'questions': [
208: 1:    '1',
208: 1:    '2',
208: 1:    '3',
208: 1:    '4',
208: 1:    '5',
208: 1:    '6',
208: 1:    '7',
208: 1:    '8',
208: 1:    '9',
208: 1:    '10'
208: 1:  ]
208: 1:}
208: 1:Scores: 16169
208: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7']')
208: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
209: 1:BoardData {
209: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
209: 1:  'expectedAnswer': '14',
209: 1:  'history': [
209: 1:    {
209: 1:      'answer': '2',
209: 1:      'question': '1',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '4',
209: 1:      'question': '2',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '8',
209: 1:      'question': '3',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '7',
209: 1:      'question': '4',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '5',
209: 1:      'question': '5',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '10',
209: 1:      'question': '6',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '11',
209: 1:      'question': '7',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '13',
209: 1:      'question': '8',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '8',
209: 1:      'question': '9',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '7',
209: 1:      'question': '10',
209: 1:      'valid': true
209: 1:    }
209: 1:  ],
209: 1:  'level': 9,
209: 1:  'nextQuestion': '11',
209: 1:  'questions': [
209: 1:    '1',
209: 1:    '2',
209: 1:    '3',
209: 1:    '4',
209: 1:    '5',
209: 1:    '6',
209: 1:    '7',
209: 1:    '8',
209: 1:    '9',
209: 1:    '10',
209: 1:    '11'
209: 1:  ]
209: 1:}
209: 1:Scores: 16181
209: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14']')
209: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
210: 1:BoardData {
210: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
210: 1:  'expectedAnswer': '19',
210: 1:  'history': [
210: 1:    {
210: 1:      'answer': '2',
210: 1:      'question': '1',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '4',
210: 1:      'question': '2',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '8',
210: 1:      'question': '3',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '7',
210: 1:      'question': '4',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '5',
210: 1:      'question': '5',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '10',
210: 1:      'question': '6',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '11',
210: 1:      'question': '7',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '13',
210: 1:      'question': '8',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '8',
210: 1:      'question': '9',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '7',
210: 1:      'question': '10',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '14',
210: 1:      'question': '11',
210: 1:      'valid': true
210: 1:    }
210: 1:  ],
210: 1:  'level': 9,
210: 1:  'nextQuestion': '12',
210: 1:  'questions': [
210: 1:    '1',
210: 1:    '2',
210: 1:    '3',
210: 1:    '4',
210: 1:    '5',
210: 1:    '6',
210: 1:    '7',
210: 1:    '8',
210: 1:    '9',
210: 1:    '10',
210: 1:    '11',
210: 1:    '12'
210: 1:  ]
210: 1:}
210: 1:Scores: 16193
210: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19']')
210: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
211: 1:BoardData {
211: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
211: 1:  'expectedAnswer': '20',
211: 1:  'history': [
211: 1:    {
211: 1:      'answer': '2',
211: 1:      'question': '1',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '4',
211: 1:      'question': '2',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '8',
211: 1:      'question': '3',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '7',
211: 1:      'question': '4',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '5',
211: 1:      'question': '5',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '10',
211: 1:      'question': '6',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '11',
211: 1:      'question': '7',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '13',
211: 1:      'question': '8',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '8',
211: 1:      'question': '9',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '7',
211: 1:      'question': '10',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '14',
211: 1:      'question': '11',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '19',
211: 1:      'question': '12',
211: 1:      'valid': true
211: 1:    }
211: 1:  ],
211: 1:  'level': 9,
211: 1:  'nextQuestion': '13',
211: 1:  'questions': [
211: 1:    '1',
211: 1:    '2',
211: 1:    '3',
211: 1:    '4',
211: 1:    '5',
211: 1:    '6',
211: 1:    '7',
211: 1:    '8',
211: 1:    '9',
211: 1:    '10',
211: 1:    '11',
211: 1:    '12',
211: 1:    '13'
211: 1:  ]
211: 1:}
211: 1:Scores: 16205
211: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20']')
211: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
212: 1:BoardData {
212: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
212: 1:  'expectedAnswer': '22',
212: 1:  'history': [
212: 1:    {
212: 1:      'answer': '2',
212: 1:      'question': '1',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '4',
212: 1:      'question': '2',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '8',
212: 1:      'question': '3',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '7',
212: 1:      'question': '4',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '5',
212: 1:      'question': '5',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '10',
212: 1:      'question': '6',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '11',
212: 1:      'question': '7',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '13',
212: 1:      'question': '8',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '8',
212: 1:      'question': '9',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '7',
212: 1:      'question': '10',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '14',
212: 1:      'question': '11',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '19',
212: 1:      'question': '12',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '20',
212: 1:      'question': '13',
212: 1:      'valid': true
212: 1:    }
212: 1:  ],
212: 1:  'level': 9,
212: 1:  'nextQuestion': '14',
212: 1:  'questions': [
212: 1:    '1',
212: 1:    '2',
212: 1:    '3',
212: 1:    '4',
212: 1:    '5',
212: 1:    '6',
212: 1:    '7',
212: 1:    '8',
212: 1:    '9',
212: 1:    '10',
212: 1:    '11',
212: 1:    '12',
212: 1:    '13',
212: 1:    '14'
212: 1:  ]
212: 1:}
212: 1:Scores: 16217
212: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22']')
212: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
213: 1:BoardData {
213: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
213: 1:  'expectedAnswer': '26',
213: 1:  'history': [
213: 1:    {
213: 1:      'answer': '2',
213: 1:      'question': '1',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '4',
213: 1:      'question': '2',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '8',
213: 1:      'question': '3',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '7',
213: 1:      'question': '4',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '5',
213: 1:      'question': '5',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '10',
213: 1:      'question': '6',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '11',
213: 1:      'question': '7',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '13',
213: 1:      'question': '8',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '8',
213: 1:      'question': '9',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '7',
213: 1:      'question': '10',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '14',
213: 1:      'question': '11',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '19',
213: 1:      'question': '12',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '20',
213: 1:      'question': '13',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '22',
213: 1:      'question': '14',
213: 1:      'valid': true
213: 1:    }
213: 1:  ],
213: 1:  'level': 9,
213: 1:  'nextQuestion': '15',
213: 1:  'questions': [
213: 1:    '1',
213: 1:    '2',
213: 1:    '3',
213: 1:    '4',
213: 1:    '5',
213: 1:    '6',
213: 1:    '7',
213: 1:    '8',
213: 1:    '9',
213: 1:    '10',
213: 1:    '11',
213: 1:    '12',
213: 1:    '13',
213: 1:    '14',
213: 1:    '15'
213: 1:  ]
213: 1:}
213: 1:Scores: 16229
213: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26']')
213: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
214: 1:BoardData {
214: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
214: 1:  'expectedAnswer': '25',
214: 1:  'history': [
214: 1:    {
214: 1:      'answer': '2',
214: 1:      'question': '1',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '4',
214: 1:      'question': '2',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '8',
214: 1:      'question': '3',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '7',
214: 1:      'question': '4',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '5',
214: 1:      'question': '5',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '10',
214: 1:      'question': '6',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '11',
214: 1:      'question': '7',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '13',
214: 1:      'question': '8',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '8',
214: 1:      'question': '9',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '7',
214: 1:      'question': '10',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '14',
214: 1:      'question': '11',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '19',
214: 1:      'question': '12',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '20',
214: 1:      'question': '13',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '22',
214: 1:      'question': '14',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '26',
214: 1:      'question': '15',
214: 1:      'valid': true
214: 1:    }
214: 1:  ],
214: 1:  'level': 9,
214: 1:  'nextQuestion': '16',
214: 1:  'questions': [
214: 1:    '1',
214: 1:    '2',
214: 1:    '3',
214: 1:    '4',
214: 1:    '5',
214: 1:    '6',
214: 1:    '7',
214: 1:    '8',
214: 1:    '9',
214: 1:    '10',
214: 1:    '11',
214: 1:    '12',
214: 1:    '13',
214: 1:    '14',
214: 1:    '15',
214: 1:    '16'
214: 1:  ]
214: 1:}
214: 1:Scores: 16241
214: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25']')
214: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
215: 1:BoardData {
215: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
215: 1:  'expectedAnswer': '14',
215: 1:  'history': [
215: 1:    {
215: 1:      'answer': '2',
215: 1:      'question': '1',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '4',
215: 1:      'question': '2',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '8',
215: 1:      'question': '3',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '7',
215: 1:      'question': '4',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '5',
215: 1:      'question': '5',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '10',
215: 1:      'question': '6',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '11',
215: 1:      'question': '7',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '13',
215: 1:      'question': '8',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '8',
215: 1:      'question': '9',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '7',
215: 1:      'question': '10',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '14',
215: 1:      'question': '11',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '19',
215: 1:      'question': '12',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '20',
215: 1:      'question': '13',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '22',
215: 1:      'question': '14',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '26',
215: 1:      'question': '15',
215: 1:      'valid': true
215: 1:    },
215: 1:    {
215: 1:      'answer': '25',
215: 1:      'question': '16',
215: 1:      'valid': true
215: 1:    }
215: 1:  ],
215: 1:  'level': 9,
215: 1:  'nextQuestion': '17',
215: 1:  'questions': [
215: 1:    '1',
215: 1:    '2',
215: 1:    '3',
215: 1:    '4',
215: 1:    '5',
215: 1:    '6',
215: 1:    '7',
215: 1:    '8',
215: 1:    '9',
215: 1:    '10',
215: 1:    '11',
215: 1:    '12',
215: 1:    '13',
215: 1:    '14',
215: 1:    '15',
215: 1:    '16',
215: 1:    '17'
215: 1:  ]
215: 1:}
215: 1:Scores: 16253
215: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14']')
215: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
216: 1:BoardData {
216: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
216: 1:  'expectedAnswer': '19',
216: 1:  'history': [
216: 1:    {
216: 1:      'answer': '2',
216: 1:      'question': '1',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '4',
216: 1:      'question': '2',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '8',
216: 1:      'question': '3',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '7',
216: 1:      'question': '4',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '5',
216: 1:      'question': '5',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '10',
216: 1:      'question': '6',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '11',
216: 1:      'question': '7',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '13',
216: 1:      'question': '8',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '8',
216: 1:      'question': '9',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '7',
216: 1:      'question': '10',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '14',
216: 1:      'question': '11',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '19',
216: 1:      'question': '12',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '20',
216: 1:      'question': '13',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '22',
216: 1:      'question': '14',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '26',
216: 1:      'question': '15',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '25',
216: 1:      'question': '16',
216: 1:      'valid': true
216: 1:    },
216: 1:    {
216: 1:      'answer': '14',
216: 1:      'question': '17',
216: 1:      'valid': true
216: 1:    }
216: 1:  ],
216: 1:  'level': 9,
216: 1:  'nextQuestion': '18',
216: 1:  'questions': [
216: 1:    '1',
216: 1:    '2',
216: 1:    '3',
216: 1:    '4',
216: 1:    '5',
216: 1:    '6',
216: 1:    '7',
216: 1:    '8',
216: 1:    '9',
216: 1:    '10',
216: 1:    '11',
216: 1:    '12',
216: 1:    '13',
216: 1:    '14',
216: 1:    '15',
216: 1:    '16',
216: 1:    '17',
216: 1:    '18'
216: 1:  ]
216: 1:}
216: 1:Scores: 16265
216: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19']')
216: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
217: 1:BoardData {
217: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
217: 1:  'expectedAnswer': '29',
217: 1:  'history': [
217: 1:    {
217: 1:      'answer': '2',
217: 1:      'question': '1',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '4',
217: 1:      'question': '2',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '8',
217: 1:      'question': '3',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '7',
217: 1:      'question': '4',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '5',
217: 1:      'question': '5',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '10',
217: 1:      'question': '6',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '11',
217: 1:      'question': '7',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '13',
217: 1:      'question': '8',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '8',
217: 1:      'question': '9',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '7',
217: 1:      'question': '10',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '14',
217: 1:      'question': '11',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '19',
217: 1:      'question': '12',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '20',
217: 1:      'question': '13',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '22',
217: 1:      'question': '14',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '26',
217: 1:      'question': '15',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '25',
217: 1:      'question': '16',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '14',
217: 1:      'question': '17',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '19',
217: 1:      'question': '18',
217: 1:      'valid': true
217: 1:    }
217: 1:  ],
217: 1:  'level': 9,
217: 1:  'nextQuestion': '19',
217: 1:  'questions': [
217: 1:    '1',
217: 1:    '2',
217: 1:    '3',
217: 1:    '4',
217: 1:    '5',
217: 1:    '6',
217: 1:    '7',
217: 1:    '8',
217: 1:    '9',
217: 1:    '10',
217: 1:    '11',
217: 1:    '12',
217: 1:    '13',
217: 1:    '14',
217: 1:    '15',
217: 1:    '16',
217: 1:    '17',
217: 1:    '18',
217: 1:    '19'
217: 1:  ]
217: 1:}
217: 1:Scores: 16277
217: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29']')
217: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
218: 1:BoardData {
218: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
218: 1:  'expectedAnswer': '31',
218: 1:  'history': [
218: 1:    {
218: 1:      'answer': '2',
218: 1:      'question': '1',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '4',
218: 1:      'question': '2',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '8',
218: 1:      'question': '3',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '7',
218: 1:      'question': '4',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '5',
218: 1:      'question': '5',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '10',
218: 1:      'question': '6',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '11',
218: 1:      'question': '7',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '13',
218: 1:      'question': '8',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '8',
218: 1:      'question': '9',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '7',
218: 1:      'question': '10',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '14',
218: 1:      'question': '11',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '19',
218: 1:      'question': '12',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '20',
218: 1:      'question': '13',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '22',
218: 1:      'question': '14',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '26',
218: 1:      'question': '15',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '25',
218: 1:      'question': '16',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '14',
218: 1:      'question': '17',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '19',
218: 1:      'question': '18',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '29',
218: 1:      'question': '19',
218: 1:      'valid': true
218: 1:    }
218: 1:  ],
218: 1:  'level': 9,
218: 1:  'nextQuestion': '20',
218: 1:  'questions': [
218: 1:    '1',
218: 1:    '2',
218: 1:    '3',
218: 1:    '4',
218: 1:    '5',
218: 1:    '6',
218: 1:    '7',
218: 1:    '8',
218: 1:    '9',
218: 1:    '10',
218: 1:    '11',
218: 1:    '12',
218: 1:    '13',
218: 1:    '14',
218: 1:    '15',
218: 1:    '16',
218: 1:    '17',
218: 1:    '18',
218: 1:    '19',
218: 1:    '20'
218: 1:  ]
218: 1:}
218: 1:Scores: 16289
218: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31']')
218: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
219: 1:BoardData {
219: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
219: 1:  'expectedAnswer': '26',
219: 1:  'history': [
219: 1:    {
219: 1:      'answer': '2',
219: 1:      'question': '1',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '4',
219: 1:      'question': '2',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '8',
219: 1:      'question': '3',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '7',
219: 1:      'question': '4',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '5',
219: 1:      'question': '5',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '10',
219: 1:      'question': '6',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '11',
219: 1:      'question': '7',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '13',
219: 1:      'question': '8',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '8',
219: 1:      'question': '9',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '7',
219: 1:      'question': '10',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '14',
219: 1:      'question': '11',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '19',
219: 1:      'question': '12',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '20',
219: 1:      'question': '13',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '22',
219: 1:      'question': '14',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '26',
219: 1:      'question': '15',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '25',
219: 1:      'question': '16',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '14',
219: 1:      'question': '17',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '19',
219: 1:      'question': '18',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '29',
219: 1:      'question': '19',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '31',
219: 1:      'question': '20',
219: 1:      'valid': true
219: 1:    }
219: 1:  ],
219: 1:  'level': 9,
219: 1:  'nextQuestion': '21',
219: 1:  'questions': [
219: 1:    '1',
219: 1:    '2',
219: 1:    '3',
219: 1:    '4',
219: 1:    '5',
219: 1:    '6',
219: 1:    '7',
219: 1:    '8',
219: 1:    '9',
219: 1:    '10',
219: 1:    '11',
219: 1:    '12',
219: 1:    '13',
219: 1:    '14',
219: 1:    '15',
219: 1:    '16',
219: 1:    '17',
219: 1:    '18',
219: 1:    '19',
219: 1:    '20',
219: 1:    '21'
219: 1:  ]
219: 1:}
219: 1:Scores: 16301
219: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26']')
219: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
220: 1:BoardData {
220: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
220: 1:  'expectedAnswer': '25',
220: 1:  'history': [
220: 1:    {
220: 1:      'answer': '2',
220: 1:      'question': '1',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '4',
220: 1:      'question': '2',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '8',
220: 1:      'question': '3',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '7',
220: 1:      'question': '4',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '5',
220: 1:      'question': '5',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '10',
220: 1:      'question': '6',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '11',
220: 1:      'question': '7',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '13',
220: 1:      'question': '8',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '8',
220: 1:      'question': '9',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '7',
220: 1:      'question': '10',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '14',
220: 1:      'question': '11',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '19',
220: 1:      'question': '12',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '20',
220: 1:      'question': '13',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '22',
220: 1:      'question': '14',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '26',
220: 1:      'question': '15',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '25',
220: 1:      'question': '16',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '14',
220: 1:      'question': '17',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '19',
220: 1:      'question': '18',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '29',
220: 1:      'question': '19',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '31',
220: 1:      'question': '20',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '26',
220: 1:      'question': '21',
220: 1:      'valid': true
220: 1:    }
220: 1:  ],
220: 1:  'level': 9,
220: 1:  'nextQuestion': '22',
220: 1:  'questions': [
220: 1:    '1',
220: 1:    '2',
220: 1:    '3',
220: 1:    '4',
220: 1:    '5',
220: 1:    '6',
220: 1:    '7',
220: 1:    '8',
220: 1:    '9',
220: 1:    '10',
220: 1:    '11',
220: 1:    '12',
220: 1:    '13',
220: 1:    '14',
220: 1:    '15',
220: 1:    '16',
220: 1:    '17',
220: 1:    '18',
220: 1:    '19',
220: 1:    '20',
220: 1:    '21',
220: 1:    '22'
220: 1:  ]
220: 1:}
220: 1:Scores: 16313
220: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25']')
220: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
221: 1:BoardData {
221: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
221: 1:  'expectedAnswer': '41',
221: 1:  'history': [
221: 1:    {
221: 1:      'answer': '2',
221: 1:      'question': '1',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '4',
221: 1:      'question': '2',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '8',
221: 1:      'question': '3',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '7',
221: 1:      'question': '4',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '5',
221: 1:      'question': '5',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '10',
221: 1:      'question': '6',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '11',
221: 1:      'question': '7',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '13',
221: 1:      'question': '8',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '8',
221: 1:      'question': '9',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '7',
221: 1:      'question': '10',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '14',
221: 1:      'question': '11',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '19',
221: 1:      'question': '12',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '20',
221: 1:      'question': '13',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '22',
221: 1:      'question': '14',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '26',
221: 1:      'question': '15',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '25',
221: 1:      'question': '16',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '14',
221: 1:      'question': '17',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '19',
221: 1:      'question': '18',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '29',
221: 1:      'question': '19',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '31',
221: 1:      'question': '20',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '26',
221: 1:      'question': '21',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '25',
221: 1:      'question': '22',
221: 1:      'valid': true
221: 1:    }
221: 1:  ],
221: 1:  'level': 9,
221: 1:  'nextQuestion': '23',
221: 1:  'questions': [
221: 1:    '1',
221: 1:    '2',
221: 1:    '3',
221: 1:    '4',
221: 1:    '5',
221: 1:    '6',
221: 1:    '7',
221: 1:    '8',
221: 1:    '9',
221: 1:    '10',
221: 1:    '11',
221: 1:    '12',
221: 1:    '13',
221: 1:    '14',
221: 1:    '15',
221: 1:    '16',
221: 1:    '17',
221: 1:    '18',
221: 1:    '19',
221: 1:    '20',
221: 1:    '21',
221: 1:    '22',
221: 1:    '23'
221: 1:  ]
221: 1:}
221: 1:Scores: 16325
221: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41']')
221: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
222: 1:BoardData {
222: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
222: 1:  'expectedAnswer': '37',
222: 1:  'history': [
222: 1:    {
222: 1:      'answer': '2',
222: 1:      'question': '1',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '4',
222: 1:      'question': '2',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '8',
222: 1:      'question': '3',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '7',
222: 1:      'question': '4',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '5',
222: 1:      'question': '5',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '10',
222: 1:      'question': '6',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '11',
222: 1:      'question': '7',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '13',
222: 1:      'question': '8',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '8',
222: 1:      'question': '9',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '7',
222: 1:      'question': '10',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '14',
222: 1:      'question': '11',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '19',
222: 1:      'question': '12',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '20',
222: 1:      'question': '13',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '22',
222: 1:      'question': '14',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '26',
222: 1:      'question': '15',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '25',
222: 1:      'question': '16',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '14',
222: 1:      'question': '17',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '19',
222: 1:      'question': '18',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '29',
222: 1:      'question': '19',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '31',
222: 1:      'question': '20',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '26',
222: 1:      'question': '21',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '25',
222: 1:      'question': '22',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '41',
222: 1:      'question': '23',
222: 1:      'valid': true
222: 1:    }
222: 1:  ],
222: 1:  'level': 9,
222: 1:  'nextQuestion': '24',
222: 1:  'questions': [
222: 1:    '1',
222: 1:    '2',
222: 1:    '3',
222: 1:    '4',
222: 1:    '5',
222: 1:    '6',
222: 1:    '7',
222: 1:    '8',
222: 1:    '9',
222: 1:    '10',
222: 1:    '11',
222: 1:    '12',
222: 1:    '13',
222: 1:    '14',
222: 1:    '15',
222: 1:    '16',
222: 1:    '17',
222: 1:    '18',
222: 1:    '19',
222: 1:    '20',
222: 1:    '21',
222: 1:    '22',
222: 1:    '23',
222: 1:    '24'
222: 1:  ]
222: 1:}
222: 1:Scores: 16337
222: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41', '37']')
222: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
223: 1:BoardData {
223: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
223: 1:  'expectedAnswer': '29',
223: 1:  'history': [
223: 1:    {
223: 1:      'answer': '2',
223: 1:      'question': '1',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '4',
223: 1:      'question': '2',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '8',
223: 1:      'question': '3',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '7',
223: 1:      'question': '4',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '5',
223: 1:      'question': '5',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '10',
223: 1:      'question': '6',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '11',
223: 1:      'question': '7',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '13',
223: 1:      'question': '8',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '8',
223: 1:      'question': '9',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '7',
223: 1:      'question': '10',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '14',
223: 1:      'question': '11',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '19',
223: 1:      'question': '12',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '20',
223: 1:      'question': '13',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '22',
223: 1:      'question': '14',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '26',
223: 1:      'question': '15',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '25',
223: 1:      'question': '16',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '14',
223: 1:      'question': '17',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '19',
223: 1:      'question': '18',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '29',
223: 1:      'question': '19',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '31',
223: 1:      'question': '20',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '26',
223: 1:      'question': '21',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '25',
223: 1:      'question': '22',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '41',
223: 1:      'question': '23',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '37',
223: 1:      'question': '24',
223: 1:      'valid': true
223: 1:    }
223: 1:  ],
223: 1:  'level': 9,
223: 1:  'nextQuestion': '25',
223: 1:  'questions': [
223: 1:    '1',
223: 1:    '2',
223: 1:    '3',
223: 1:    '4',
223: 1:    '5',
223: 1:    '6',
223: 1:    '7',
223: 1:    '8',
223: 1:    '9',
223: 1:    '10',
223: 1:    '11',
223: 1:    '12',
223: 1:    '13',
223: 1:    '14',
223: 1:    '15',
223: 1:    '16',
223: 1:    '17',
223: 1:    '18',
223: 1:    '19',
223: 1:    '20',
223: 1:    '21',
223: 1:    '22',
223: 1:    '23',
223: 1:    '24',
223: 1:    '25'
223: 1:  ]
223: 1:}
223: 1:Scores: 16349
223: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41', '37', '29']')
223: 1:Fire Event: PassTest{complexity=30, testCount=25}
223: 1:Fire Event: NextAlgorithm{complexity=30, time=0}
------------------------------------------
224: 1:BoardData {
224: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
224: 1:  'history': [
224: 1:    {
224: 1:      'answer': '2',
224: 1:      'question': '1',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '4',
224: 1:      'question': '2',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '8',
224: 1:      'question': '3',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '7',
224: 1:      'question': '4',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '5',
224: 1:      'question': '5',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '10',
224: 1:      'question': '6',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '11',
224: 1:      'question': '7',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '13',
224: 1:      'question': '8',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '8',
224: 1:      'question': '9',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '7',
224: 1:      'question': '10',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '14',
224: 1:      'question': '11',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '19',
224: 1:      'question': '12',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '20',
224: 1:      'question': '13',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '22',
224: 1:      'question': '14',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '26',
224: 1:      'question': '15',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '25',
224: 1:      'question': '16',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '14',
224: 1:      'question': '17',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '19',
224: 1:      'question': '18',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '29',
224: 1:      'question': '19',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '31',
224: 1:      'question': '20',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '26',
224: 1:      'question': '21',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '25',
224: 1:      'question': '22',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '41',
224: 1:      'question': '23',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '37',
224: 1:      'question': '24',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '29',
224: 1:      'question': '25',
224: 1:      'valid': true
224: 1:    }
224: 1:  ],
224: 1:  'level': 9,
224: 1:  'questions': []
224: 1:}
224: 1:Scores: 20410
224: 1:Answer: message('StartNextLevel')
224: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
225: 1:BoardData {
225: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
225: 1:  'expectedAnswer': 'true',
225: 1:  'history': [],
225: 1:  'level': 10,
225: 1:  'nextQuestion': '0, 1, 5',
225: 1:  'questions': ['0, 1, 5']
225: 1:}
225: 1:Scores: 20410
225: 1:Answer: message('['true']')
225: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
226: 1:BoardData {
226: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
226: 1:  'expectedAnswer': 'true',
226: 1:  'history': [{
226: 1:    'answer': 'true',
226: 1:    'question': '0, 1, 5',
226: 1:    'valid': true
226: 1:  }],
226: 1:  'level': 10,
226: 1:  'nextQuestion': '1, 0, 1',
226: 1:  'questions': [
226: 1:    '0, 1, 5',
226: 1:    '1, 0, 1'
226: 1:  ]
226: 1:}
226: 1:Scores: 20417
226: 1:Answer: message('['true', 'true']')
226: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
227: 1:BoardData {
227: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
227: 1:  'expectedAnswer': 'false',
227: 1:  'history': [
227: 1:    {
227: 1:      'answer': 'true',
227: 1:      'question': '0, 1, 5',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': 'true',
227: 1:      'question': '1, 0, 1',
227: 1:      'valid': true
227: 1:    }
227: 1:  ],
227: 1:  'level': 10,
227: 1:  'nextQuestion': '1, 0, 2',
227: 1:  'questions': [
227: 1:    '0, 1, 5',
227: 1:    '1, 0, 1',
227: 1:    '1, 0, 2'
227: 1:  ]
227: 1:}
227: 1:Scores: 20424
227: 1:Answer: message('['true', 'true', 'false']')
227: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
228: 1:BoardData {
228: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
228: 1:  'expectedAnswer': 'true',
228: 1:  'history': [
228: 1:    {
228: 1:      'answer': 'true',
228: 1:      'question': '0, 1, 5',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': 'true',
228: 1:      'question': '1, 0, 1',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': 'false',
228: 1:      'question': '1, 0, 2',
228: 1:      'valid': true
228: 1:    }
228: 1:  ],
228: 1:  'level': 10,
228: 1:  'nextQuestion': '3, 1, 7',
228: 1:  'questions': [
228: 1:    '0, 1, 5',
228: 1:    '1, 0, 1',
228: 1:    '1, 0, 2',
228: 1:    '3, 1, 7'
228: 1:  ]
228: 1:}
228: 1:Scores: 20431
228: 1:Answer: message('['true', 'true', 'false', 'true']')
228: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
229: 1:BoardData {
229: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
229: 1:  'expectedAnswer': 'true',
229: 1:  'history': [
229: 1:    {
229: 1:      'answer': 'true',
229: 1:      'question': '0, 1, 5',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': 'true',
229: 1:      'question': '1, 0, 1',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': 'false',
229: 1:      'question': '1, 0, 2',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': 'true',
229: 1:      'question': '3, 1, 7',
229: 1:      'valid': true
229: 1:    }
229: 1:  ],
229: 1:  'level': 10,
229: 1:  'nextQuestion': '4, 2, 14',
229: 1:  'questions': [
229: 1:    '0, 1, 5',
229: 1:    '1, 0, 1',
229: 1:    '1, 0, 2',
229: 1:    '3, 1, 7',
229: 1:    '4, 2, 14'
229: 1:  ]
229: 1:}
229: 1:Scores: 20438
229: 1:Answer: message('['true', 'true', 'false', 'true', 'true']')
229: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
230: 1:BoardData {
230: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
230: 1:  'expectedAnswer': 'false',
230: 1:  'history': [
230: 1:    {
230: 1:      'answer': 'true',
230: 1:      'question': '0, 1, 5',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': 'true',
230: 1:      'question': '1, 0, 1',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': 'false',
230: 1:      'question': '1, 0, 2',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': 'true',
230: 1:      'question': '3, 1, 7',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': 'true',
230: 1:      'question': '4, 2, 14',
230: 1:      'valid': true
230: 1:    }
230: 1:  ],
230: 1:  'level': 10,
230: 1:  'nextQuestion': '3, 2, 14',
230: 1:  'questions': [
230: 1:    '0, 1, 5',
230: 1:    '1, 0, 1',
230: 1:    '1, 0, 2',
230: 1:    '3, 1, 7',
230: 1:    '4, 2, 14',
230: 1:    '3, 2, 14'
230: 1:  ]
230: 1:}
230: 1:Scores: 20445
230: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false']')
230: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
231: 1:BoardData {
231: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
231: 1:  'expectedAnswer': 'true',
231: 1:  'history': [
231: 1:    {
231: 1:      'answer': 'true',
231: 1:      'question': '0, 1, 5',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': 'true',
231: 1:      'question': '1, 0, 1',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': 'false',
231: 1:      'question': '1, 0, 2',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': 'true',
231: 1:      'question': '3, 1, 7',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': 'true',
231: 1:      'question': '4, 2, 14',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': 'false',
231: 1:      'question': '3, 2, 14',
231: 1:      'valid': true
231: 1:    }
231: 1:  ],
231: 1:  'level': 10,
231: 1:  'nextQuestion': '0, 2, 5',
231: 1:  'questions': [
231: 1:    '0, 1, 5',
231: 1:    '1, 0, 1',
231: 1:    '1, 0, 2',
231: 1:    '3, 1, 7',
231: 1:    '4, 2, 14',
231: 1:    '3, 2, 14',
231: 1:    '0, 2, 5'
231: 1:  ]
231: 1:}
231: 1:Scores: 20452
231: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true']')
231: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
232: 1:BoardData {
232: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
232: 1:  'expectedAnswer': 'true',
232: 1:  'history': [
232: 1:    {
232: 1:      'answer': 'true',
232: 1:      'question': '0, 1, 5',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': 'true',
232: 1:      'question': '1, 0, 1',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': 'false',
232: 1:      'question': '1, 0, 2',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': 'true',
232: 1:      'question': '3, 1, 7',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': 'true',
232: 1:      'question': '4, 2, 14',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': 'false',
232: 1:      'question': '3, 2, 14',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': 'true',
232: 1:      'question': '0, 2, 5',
232: 1:      'valid': true
232: 1:    }
232: 1:  ],
232: 1:  'level': 10,
232: 1:  'nextQuestion': '3, 1, 6',
232: 1:  'questions': [
232: 1:    '0, 1, 5',
232: 1:    '1, 0, 1',
232: 1:    '1, 0, 2',
232: 1:    '3, 1, 7',
232: 1:    '4, 2, 14',
232: 1:    '3, 2, 14',
232: 1:    '0, 2, 5',
232: 1:    '3, 1, 6'
232: 1:  ]
232: 1:}
232: 1:Scores: 20459
232: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true']')
232: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
233: 1:BoardData {
233: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
233: 1:  'expectedAnswer': 'false',
233: 1:  'history': [
233: 1:    {
233: 1:      'answer': 'true',
233: 1:      'question': '0, 1, 5',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': 'true',
233: 1:      'question': '1, 0, 1',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': 'false',
233: 1:      'question': '1, 0, 2',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': 'true',
233: 1:      'question': '3, 1, 7',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': 'true',
233: 1:      'question': '4, 2, 14',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': 'false',
233: 1:      'question': '3, 2, 14',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': 'true',
233: 1:      'question': '0, 2, 5',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': 'true',
233: 1:      'question': '3, 1, 6',
233: 1:      'valid': true
233: 1:    }
233: 1:  ],
233: 1:  'level': 10,
233: 1:  'nextQuestion': '3, 1, 9',
233: 1:  'questions': [
233: 1:    '0, 1, 5',
233: 1:    '1, 0, 1',
233: 1:    '1, 0, 2',
233: 1:    '3, 1, 7',
233: 1:    '4, 2, 14',
233: 1:    '3, 2, 14',
233: 1:    '0, 2, 5',
233: 1:    '3, 1, 6',
233: 1:    '3, 1, 9'
233: 1:  ]
233: 1:}
233: 1:Scores: 20466
233: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false']')
233: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
234: 1:BoardData {
234: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
234: 1:  'expectedAnswer': 'false',
234: 1:  'history': [
234: 1:    {
234: 1:      'answer': 'true',
234: 1:      'question': '0, 1, 5',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': 'true',
234: 1:      'question': '1, 0, 1',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': 'false',
234: 1:      'question': '1, 0, 2',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': 'true',
234: 1:      'question': '3, 1, 7',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': 'true',
234: 1:      'question': '4, 2, 14',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': 'false',
234: 1:      'question': '3, 2, 14',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': 'true',
234: 1:      'question': '0, 2, 5',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': 'true',
234: 1:      'question': '3, 1, 6',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': 'false',
234: 1:      'question': '3, 1, 9',
234: 1:      'valid': true
234: 1:    }
234: 1:  ],
234: 1:  'level': 10,
234: 1:  'nextQuestion': '3, 2, 9',
234: 1:  'questions': [
234: 1:    '0, 1, 5',
234: 1:    '1, 0, 1',
234: 1:    '1, 0, 2',
234: 1:    '3, 1, 7',
234: 1:    '4, 2, 14',
234: 1:    '3, 2, 14',
234: 1:    '0, 2, 5',
234: 1:    '3, 1, 6',
234: 1:    '3, 1, 9',
234: 1:    '3, 2, 9'
234: 1:  ]
234: 1:}
234: 1:Scores: 20473
234: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false']')
234: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
235: 1:BoardData {
235: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
235: 1:  'expectedAnswer': 'true',
235: 1:  'history': [
235: 1:    {
235: 1:      'answer': 'true',
235: 1:      'question': '0, 1, 5',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'true',
235: 1:      'question': '1, 0, 1',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'false',
235: 1:      'question': '1, 0, 2',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'true',
235: 1:      'question': '3, 1, 7',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'true',
235: 1:      'question': '4, 2, 14',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'false',
235: 1:      'question': '3, 2, 14',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'true',
235: 1:      'question': '0, 2, 5',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'true',
235: 1:      'question': '3, 1, 6',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'false',
235: 1:      'question': '3, 1, 9',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': 'false',
235: 1:      'question': '3, 2, 9',
235: 1:      'valid': true
235: 1:    }
235: 1:  ],
235: 1:  'level': 10,
235: 1:  'nextQuestion': '10, 10, 0',
235: 1:  'questions': [
235: 1:    '0, 1, 5',
235: 1:    '1, 0, 1',
235: 1:    '1, 0, 2',
235: 1:    '3, 1, 7',
235: 1:    '4, 2, 14',
235: 1:    '3, 2, 14',
235: 1:    '0, 2, 5',
235: 1:    '3, 1, 6',
235: 1:    '3, 1, 9',
235: 1:    '3, 2, 9',
235: 1:    '10, 10, 0'
235: 1:  ]
235: 1:}
235: 1:Scores: 20480
235: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
235: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
236: 1:BoardData {
236: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
236: 1:  'expectedAnswer': 'false',
236: 1:  'history': [
236: 1:    {
236: 1:      'answer': 'true',
236: 1:      'question': '0, 1, 5',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'true',
236: 1:      'question': '1, 0, 1',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'false',
236: 1:      'question': '1, 0, 2',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'true',
236: 1:      'question': '3, 1, 7',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'true',
236: 1:      'question': '4, 2, 14',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'false',
236: 1:      'question': '3, 2, 14',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'true',
236: 1:      'question': '0, 2, 5',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'true',
236: 1:      'question': '3, 1, 6',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'false',
236: 1:      'question': '3, 1, 9',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'false',
236: 1:      'question': '3, 2, 9',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': 'true',
236: 1:      'question': '10, 10, 0',
236: 1:      'valid': true
236: 1:    }
236: 1:  ],
236: 1:  'level': 10,
236: 1:  'nextQuestion': '0, 0, 1',
236: 1:  'questions': [
236: 1:    '0, 1, 5',
236: 1:    '1, 0, 1',
236: 1:    '1, 0, 2',
236: 1:    '3, 1, 7',
236: 1:    '4, 2, 14',
236: 1:    '3, 2, 14',
236: 1:    '0, 2, 5',
236: 1:    '3, 1, 6',
236: 1:    '3, 1, 9',
236: 1:    '3, 2, 9',
236: 1:    '10, 10, 0',
236: 1:    '0, 0, 1'
236: 1:  ]
236: 1:}
236: 1:Scores: 20487
236: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false']')
236: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
237: 1:BoardData {
237: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
237: 1:  'expectedAnswer': 'false',
237: 1:  'history': [
237: 1:    {
237: 1:      'answer': 'true',
237: 1:      'question': '0, 1, 5',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'true',
237: 1:      'question': '1, 0, 1',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'false',
237: 1:      'question': '1, 0, 2',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'true',
237: 1:      'question': '3, 1, 7',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'true',
237: 1:      'question': '4, 2, 14',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'false',
237: 1:      'question': '3, 2, 14',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'true',
237: 1:      'question': '0, 2, 5',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'true',
237: 1:      'question': '3, 1, 6',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'false',
237: 1:      'question': '3, 1, 9',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'false',
237: 1:      'question': '3, 2, 9',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'true',
237: 1:      'question': '10, 10, 0',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': 'false',
237: 1:      'question': '0, 0, 1',
237: 1:      'valid': true
237: 1:    }
237: 1:  ],
237: 1:  'level': 10,
237: 1:  'nextQuestion': '0, 1, 1',
237: 1:  'questions': [
237: 1:    '0, 1, 5',
237: 1:    '1, 0, 1',
237: 1:    '1, 0, 2',
237: 1:    '3, 1, 7',
237: 1:    '4, 2, 14',
237: 1:    '3, 2, 14',
237: 1:    '0, 2, 5',
237: 1:    '3, 1, 6',
237: 1:    '3, 1, 9',
237: 1:    '3, 2, 9',
237: 1:    '10, 10, 0',
237: 1:    '0, 0, 1',
237: 1:    '0, 1, 1'
237: 1:  ]
237: 1:}
237: 1:Scores: 20494
237: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false']')
237: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
238: 1:BoardData {
238: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
238: 1:  'expectedAnswer': 'false',
238: 1:  'history': [
238: 1:    {
238: 1:      'answer': 'true',
238: 1:      'question': '0, 1, 5',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'true',
238: 1:      'question': '1, 0, 1',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'false',
238: 1:      'question': '1, 0, 2',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'true',
238: 1:      'question': '3, 1, 7',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'true',
238: 1:      'question': '4, 2, 14',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'false',
238: 1:      'question': '3, 2, 14',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'true',
238: 1:      'question': '0, 2, 5',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'true',
238: 1:      'question': '3, 1, 6',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'false',
238: 1:      'question': '3, 1, 9',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'false',
238: 1:      'question': '3, 2, 9',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'true',
238: 1:      'question': '10, 10, 0',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'false',
238: 1:      'question': '0, 0, 1',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': 'false',
238: 1:      'question': '0, 1, 1',
238: 1:      'valid': true
238: 1:    }
238: 1:  ],
238: 1:  'level': 10,
238: 1:  'nextQuestion': '0, 0, 2',
238: 1:  'questions': [
238: 1:    '0, 1, 5',
238: 1:    '1, 0, 1',
238: 1:    '1, 0, 2',
238: 1:    '3, 1, 7',
238: 1:    '4, 2, 14',
238: 1:    '3, 2, 14',
238: 1:    '0, 2, 5',
238: 1:    '3, 1, 6',
238: 1:    '3, 1, 9',
238: 1:    '3, 2, 9',
238: 1:    '10, 10, 0',
238: 1:    '0, 0, 1',
238: 1:    '0, 1, 1',
238: 1:    '0, 0, 2'
238: 1:  ]
238: 1:}
238: 1:Scores: 20501
238: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false']')
238: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
239: 1:BoardData {
239: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
239: 1:  'expectedAnswer': 'true',
239: 1:  'history': [
239: 1:    {
239: 1:      'answer': 'true',
239: 1:      'question': '0, 1, 5',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'true',
239: 1:      'question': '1, 0, 1',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'false',
239: 1:      'question': '1, 0, 2',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'true',
239: 1:      'question': '3, 1, 7',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'true',
239: 1:      'question': '4, 2, 14',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'false',
239: 1:      'question': '3, 2, 14',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'true',
239: 1:      'question': '0, 2, 5',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'true',
239: 1:      'question': '3, 1, 6',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'false',
239: 1:      'question': '3, 1, 9',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'false',
239: 1:      'question': '3, 2, 9',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'true',
239: 1:      'question': '10, 10, 0',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'false',
239: 1:      'question': '0, 0, 1',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'false',
239: 1:      'question': '0, 1, 1',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': 'false',
239: 1:      'question': '0, 0, 2',
239: 1:      'valid': true
239: 1:    }
239: 1:  ],
239: 1:  'level': 10,
239: 1:  'nextQuestion': '2, 0, 2',
239: 1:  'questions': [
239: 1:    '0, 1, 5',
239: 1:    '1, 0, 1',
239: 1:    '1, 0, 2',
239: 1:    '3, 1, 7',
239: 1:    '4, 2, 14',
239: 1:    '3, 2, 14',
239: 1:    '0, 2, 5',
239: 1:    '3, 1, 6',
239: 1:    '3, 1, 9',
239: 1:    '3, 2, 9',
239: 1:    '10, 10, 0',
239: 1:    '0, 0, 1',
239: 1:    '0, 1, 1',
239: 1:    '0, 0, 2',
239: 1:    '2, 0, 2'
239: 1:  ]
239: 1:}
239: 1:Scores: 20508
239: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true']')
239: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
240: 1:BoardData {
240: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
240: 1:  'expectedAnswer': 'false',
240: 1:  'history': [
240: 1:    {
240: 1:      'answer': 'true',
240: 1:      'question': '0, 1, 5',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'true',
240: 1:      'question': '1, 0, 1',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'false',
240: 1:      'question': '1, 0, 2',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'true',
240: 1:      'question': '3, 1, 7',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'true',
240: 1:      'question': '4, 2, 14',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'false',
240: 1:      'question': '3, 2, 14',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'true',
240: 1:      'question': '0, 2, 5',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'true',
240: 1:      'question': '3, 1, 6',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'false',
240: 1:      'question': '3, 1, 9',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'false',
240: 1:      'question': '3, 2, 9',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'true',
240: 1:      'question': '10, 10, 0',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'false',
240: 1:      'question': '0, 0, 1',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'false',
240: 1:      'question': '0, 1, 1',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'false',
240: 1:      'question': '0, 0, 2',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': 'true',
240: 1:      'question': '2, 0, 2',
240: 1:      'valid': true
240: 1:    }
240: 1:  ],
240: 1:  'level': 10,
240: 1:  'nextQuestion': '0, 1, 2',
240: 1:  'questions': [
240: 1:    '0, 1, 5',
240: 1:    '1, 0, 1',
240: 1:    '1, 0, 2',
240: 1:    '3, 1, 7',
240: 1:    '4, 2, 14',
240: 1:    '3, 2, 14',
240: 1:    '0, 2, 5',
240: 1:    '3, 1, 6',
240: 1:    '3, 1, 9',
240: 1:    '3, 2, 9',
240: 1:    '10, 10, 0',
240: 1:    '0, 0, 1',
240: 1:    '0, 1, 1',
240: 1:    '0, 0, 2',
240: 1:    '2, 0, 2',
240: 1:    '0, 1, 2'
240: 1:  ]
240: 1:}
240: 1:Scores: 20515
240: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false']')
240: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
241: 1:BoardData {
241: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
241: 1:  'expectedAnswer': 'false',
241: 1:  'history': [
241: 1:    {
241: 1:      'answer': 'true',
241: 1:      'question': '0, 1, 5',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'true',
241: 1:      'question': '1, 0, 1',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'false',
241: 1:      'question': '1, 0, 2',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'true',
241: 1:      'question': '3, 1, 7',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'true',
241: 1:      'question': '4, 2, 14',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'false',
241: 1:      'question': '3, 2, 14',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'true',
241: 1:      'question': '0, 2, 5',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'true',
241: 1:      'question': '3, 1, 6',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'false',
241: 1:      'question': '3, 1, 9',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'false',
241: 1:      'question': '3, 2, 9',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'true',
241: 1:      'question': '10, 10, 0',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'false',
241: 1:      'question': '0, 0, 1',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'false',
241: 1:      'question': '0, 1, 1',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'false',
241: 1:      'question': '0, 0, 2',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'true',
241: 1:      'question': '2, 0, 2',
241: 1:      'valid': true
241: 1:    },
241: 1:    {
241: 1:      'answer': 'false',
241: 1:      'question': '0, 1, 2',
241: 1:      'valid': true
241: 1:    }
241: 1:  ],
241: 1:  'level': 10,
241: 1:  'nextQuestion': '1, 1, 2',
241: 1:  'questions': [
241: 1:    '0, 1, 5',
241: 1:    '1, 0, 1',
241: 1:    '1, 0, 2',
241: 1:    '3, 1, 7',
241: 1:    '4, 2, 14',
241: 1:    '3, 2, 14',
241: 1:    '0, 2, 5',
241: 1:    '3, 1, 6',
241: 1:    '3, 1, 9',
241: 1:    '3, 2, 9',
241: 1:    '10, 10, 0',
241: 1:    '0, 0, 1',
241: 1:    '0, 1, 1',
241: 1:    '0, 0, 2',
241: 1:    '2, 0, 2',
241: 1:    '0, 1, 2',
241: 1:    '1, 1, 2'
241: 1:  ]
241: 1:}
241: 1:Scores: 20522
241: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false']')
241: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
242: 1:BoardData {
242: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
242: 1:  'expectedAnswer': 'false',
242: 1:  'history': [
242: 1:    {
242: 1:      'answer': 'true',
242: 1:      'question': '0, 1, 5',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'true',
242: 1:      'question': '1, 0, 1',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '1, 0, 2',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'true',
242: 1:      'question': '3, 1, 7',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'true',
242: 1:      'question': '4, 2, 14',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '3, 2, 14',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'true',
242: 1:      'question': '0, 2, 5',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'true',
242: 1:      'question': '3, 1, 6',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '3, 1, 9',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '3, 2, 9',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'true',
242: 1:      'question': '10, 10, 0',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '0, 0, 1',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '0, 1, 1',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '0, 0, 2',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'true',
242: 1:      'question': '2, 0, 2',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '0, 1, 2',
242: 1:      'valid': true
242: 1:    },
242: 1:    {
242: 1:      'answer': 'false',
242: 1:      'question': '1, 1, 2',
242: 1:      'valid': true
242: 1:    }
242: 1:  ],
242: 1:  'level': 10,
242: 1:  'nextQuestion': '2, 1, 3',
242: 1:  'questions': [
242: 1:    '0, 1, 5',
242: 1:    '1, 0, 1',
242: 1:    '1, 0, 2',
242: 1:    '3, 1, 7',
242: 1:    '4, 2, 14',
242: 1:    '3, 2, 14',
242: 1:    '0, 2, 5',
242: 1:    '3, 1, 6',
242: 1:    '3, 1, 9',
242: 1:    '3, 2, 9',
242: 1:    '10, 10, 0',
242: 1:    '0, 0, 1',
242: 1:    '0, 1, 1',
242: 1:    '0, 0, 2',
242: 1:    '2, 0, 2',
242: 1:    '0, 1, 2',
242: 1:    '1, 1, 2',
242: 1:    '2, 1, 3'
242: 1:  ]
242: 1:}
242: 1:Scores: 20529
242: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false']')
242: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
243: 1:BoardData {
243: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
243: 1:  'expectedAnswer': 'false',
243: 1:  'history': [
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '0, 1, 5',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '1, 0, 1',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '1, 0, 2',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '3, 1, 7',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '4, 2, 14',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '3, 2, 14',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '0, 2, 5',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '3, 1, 6',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '3, 1, 9',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '3, 2, 9',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '10, 10, 0',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '0, 0, 1',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '0, 1, 1',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '0, 0, 2',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'true',
243: 1:      'question': '2, 0, 2',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '0, 1, 2',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '1, 1, 2',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': 'false',
243: 1:      'question': '2, 1, 3',
243: 1:      'valid': true
243: 1:    }
243: 1:  ],
243: 1:  'level': 10,
243: 1:  'nextQuestion': '3, 1, 4',
243: 1:  'questions': [
243: 1:    '0, 1, 5',
243: 1:    '1, 0, 1',
243: 1:    '1, 0, 2',
243: 1:    '3, 1, 7',
243: 1:    '4, 2, 14',
243: 1:    '3, 2, 14',
243: 1:    '0, 2, 5',
243: 1:    '3, 1, 6',
243: 1:    '3, 1, 9',
243: 1:    '3, 2, 9',
243: 1:    '10, 10, 0',
243: 1:    '0, 0, 1',
243: 1:    '0, 1, 1',
243: 1:    '0, 0, 2',
243: 1:    '2, 0, 2',
243: 1:    '0, 1, 2',
243: 1:    '1, 1, 2',
243: 1:    '2, 1, 3',
243: 1:    '3, 1, 4'
243: 1:  ]
243: 1:}
243: 1:Scores: 20536
243: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false']')
243: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
244: 1:BoardData {
244: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
244: 1:  'expectedAnswer': 'true',
244: 1:  'history': [
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '0, 1, 5',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '1, 0, 1',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '1, 0, 2',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '3, 1, 7',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '4, 2, 14',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '3, 2, 14',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '0, 2, 5',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '3, 1, 6',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '3, 1, 9',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '3, 2, 9',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '10, 10, 0',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '0, 0, 1',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '0, 1, 1',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '0, 0, 2',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'true',
244: 1:      'question': '2, 0, 2',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '0, 1, 2',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '1, 1, 2',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '2, 1, 3',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': 'false',
244: 1:      'question': '3, 1, 4',
244: 1:      'valid': true
244: 1:    }
244: 1:  ],
244: 1:  'level': 10,
244: 1:  'nextQuestion': '2, 1, 1',
244: 1:  'questions': [
244: 1:    '0, 1, 5',
244: 1:    '1, 0, 1',
244: 1:    '1, 0, 2',
244: 1:    '3, 1, 7',
244: 1:    '4, 2, 14',
244: 1:    '3, 2, 14',
244: 1:    '0, 2, 5',
244: 1:    '3, 1, 6',
244: 1:    '3, 1, 9',
244: 1:    '3, 2, 9',
244: 1:    '10, 10, 0',
244: 1:    '0, 0, 1',
244: 1:    '0, 1, 1',
244: 1:    '0, 0, 2',
244: 1:    '2, 0, 2',
244: 1:    '0, 1, 2',
244: 1:    '1, 1, 2',
244: 1:    '2, 1, 3',
244: 1:    '3, 1, 4',
244: 1:    '2, 1, 1'
244: 1:  ]
244: 1:}
244: 1:Scores: 20543
244: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true']')
244: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
245: 1:BoardData {
245: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
245: 1:  'expectedAnswer': 'true',
245: 1:  'history': [
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '0, 1, 5',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '1, 0, 1',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '1, 0, 2',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '3, 1, 7',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '4, 2, 14',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '3, 2, 14',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '0, 2, 5',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '3, 1, 6',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '3, 1, 9',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '3, 2, 9',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '10, 10, 0',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '0, 0, 1',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '0, 1, 1',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '0, 0, 2',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '2, 0, 2',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '0, 1, 2',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '1, 1, 2',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '2, 1, 3',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'false',
245: 1:      'question': '3, 1, 4',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': 'true',
245: 1:      'question': '2, 1, 1',
245: 1:      'valid': true
245: 1:    }
245: 1:  ],
245: 1:  'level': 10,
245: 1:  'nextQuestion': '2, 2, 6',
245: 1:  'questions': [
245: 1:    '0, 1, 5',
245: 1:    '1, 0, 1',
245: 1:    '1, 0, 2',
245: 1:    '3, 1, 7',
245: 1:    '4, 2, 14',
245: 1:    '3, 2, 14',
245: 1:    '0, 2, 5',
245: 1:    '3, 1, 6',
245: 1:    '3, 1, 9',
245: 1:    '3, 2, 9',
245: 1:    '10, 10, 0',
245: 1:    '0, 0, 1',
245: 1:    '0, 1, 1',
245: 1:    '0, 0, 2',
245: 1:    '2, 0, 2',
245: 1:    '0, 1, 2',
245: 1:    '1, 1, 2',
245: 1:    '2, 1, 3',
245: 1:    '3, 1, 4',
245: 1:    '2, 1, 1',
245: 1:    '2, 2, 6'
245: 1:  ]
245: 1:}
245: 1:Scores: 20550
245: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true']')
245: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
246: 1:BoardData {
246: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
246: 1:  'expectedAnswer': 'true',
246: 1:  'history': [
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '0, 1, 5',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '1, 0, 1',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '1, 0, 2',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '3, 1, 7',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '4, 2, 14',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '3, 2, 14',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '0, 2, 5',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '3, 1, 6',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '3, 1, 9',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '3, 2, 9',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '10, 10, 0',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '0, 0, 1',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '0, 1, 1',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '0, 0, 2',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '2, 0, 2',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '0, 1, 2',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '1, 1, 2',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '2, 1, 3',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'false',
246: 1:      'question': '3, 1, 4',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '2, 1, 1',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': 'true',
246: 1:      'question': '2, 2, 6',
246: 1:      'valid': true
246: 1:    }
246: 1:  ],
246: 1:  'level': 10,
246: 1:  'nextQuestion': '6, 1, 11',
246: 1:  'questions': [
246: 1:    '0, 1, 5',
246: 1:    '1, 0, 1',
246: 1:    '1, 0, 2',
246: 1:    '3, 1, 7',
246: 1:    '4, 2, 14',
246: 1:    '3, 2, 14',
246: 1:    '0, 2, 5',
246: 1:    '3, 1, 6',
246: 1:    '3, 1, 9',
246: 1:    '3, 2, 9',
246: 1:    '10, 10, 0',
246: 1:    '0, 0, 1',
246: 1:    '0, 1, 1',
246: 1:    '0, 0, 2',
246: 1:    '2, 0, 2',
246: 1:    '0, 1, 2',
246: 1:    '1, 1, 2',
246: 1:    '2, 1, 3',
246: 1:    '3, 1, 4',
246: 1:    '2, 1, 1',
246: 1:    '2, 2, 6',
246: 1:    '6, 1, 11'
246: 1:  ]
246: 1:}
246: 1:Scores: 20557
246: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true']')
246: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
247: 1:BoardData {
247: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
247: 1:  'expectedAnswer': 'true',
247: 1:  'history': [
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '0, 1, 5',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '1, 0, 1',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '1, 0, 2',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '3, 1, 7',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '4, 2, 14',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '3, 2, 14',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '0, 2, 5',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '3, 1, 6',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '3, 1, 9',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '3, 2, 9',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '10, 10, 0',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '0, 0, 1',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '0, 1, 1',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '0, 0, 2',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '2, 0, 2',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '0, 1, 2',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '1, 1, 2',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '2, 1, 3',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'false',
247: 1:      'question': '3, 1, 4',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '2, 1, 1',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '2, 2, 6',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': 'true',
247: 1:      'question': '6, 1, 11',
247: 1:      'valid': true
247: 1:    }
247: 1:  ],
247: 1:  'level': 10,
247: 1:  'nextQuestion': '5, 0, 1',
247: 1:  'questions': [
247: 1:    '0, 1, 5',
247: 1:    '1, 0, 1',
247: 1:    '1, 0, 2',
247: 1:    '3, 1, 7',
247: 1:    '4, 2, 14',
247: 1:    '3, 2, 14',
247: 1:    '0, 2, 5',
247: 1:    '3, 1, 6',
247: 1:    '3, 1, 9',
247: 1:    '3, 2, 9',
247: 1:    '10, 10, 0',
247: 1:    '0, 0, 1',
247: 1:    '0, 1, 1',
247: 1:    '0, 0, 2',
247: 1:    '2, 0, 2',
247: 1:    '0, 1, 2',
247: 1:    '1, 1, 2',
247: 1:    '2, 1, 3',
247: 1:    '3, 1, 4',
247: 1:    '2, 1, 1',
247: 1:    '2, 2, 6',
247: 1:    '6, 1, 11',
247: 1:    '5, 0, 1'
247: 1:  ]
247: 1:}
247: 1:Scores: 20564
247: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true']')
247: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
248: 1:BoardData {
248: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
248: 1:  'expectedAnswer': 'true',
248: 1:  'history': [
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '0, 1, 5',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '1, 0, 1',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '1, 0, 2',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '3, 1, 7',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '4, 2, 14',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '3, 2, 14',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '0, 2, 5',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '3, 1, 6',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '3, 1, 9',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '3, 2, 9',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '10, 10, 0',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '0, 0, 1',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '0, 1, 1',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '0, 0, 2',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '2, 0, 2',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '0, 1, 2',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '1, 1, 2',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '2, 1, 3',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'false',
248: 1:      'question': '3, 1, 4',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '2, 1, 1',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '2, 2, 6',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '6, 1, 11',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': 'true',
248: 1:      'question': '5, 0, 1',
248: 1:      'valid': true
248: 1:    }
248: 1:  ],
248: 1:  'level': 10,
248: 1:  'nextQuestion': '3, 1, 8',
248: 1:  'questions': [
248: 1:    '0, 1, 5',
248: 1:    '1, 0, 1',
248: 1:    '1, 0, 2',
248: 1:    '3, 1, 7',
248: 1:    '4, 2, 14',
248: 1:    '3, 2, 14',
248: 1:    '0, 2, 5',
248: 1:    '3, 1, 6',
248: 1:    '3, 1, 9',
248: 1:    '3, 2, 9',
248: 1:    '10, 10, 0',
248: 1:    '0, 0, 1',
248: 1:    '0, 1, 1',
248: 1:    '0, 0, 2',
248: 1:    '2, 0, 2',
248: 1:    '0, 1, 2',
248: 1:    '1, 1, 2',
248: 1:    '2, 1, 3',
248: 1:    '3, 1, 4',
248: 1:    '2, 1, 1',
248: 1:    '2, 2, 6',
248: 1:    '6, 1, 11',
248: 1:    '5, 0, 1',
248: 1:    '3, 1, 8'
248: 1:  ]
248: 1:}
248: 1:Scores: 20571
248: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true']')
248: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
249: 1:BoardData {
249: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
249: 1:  'expectedAnswer': 'true',
249: 1:  'history': [
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '0, 1, 5',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '1, 0, 1',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '1, 0, 2',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '3, 1, 7',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '4, 2, 14',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '3, 2, 14',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '0, 2, 5',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '3, 1, 6',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '3, 1, 9',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '3, 2, 9',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '10, 10, 0',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '0, 0, 1',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '0, 1, 1',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '0, 0, 2',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '2, 0, 2',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '0, 1, 2',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '1, 1, 2',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '2, 1, 3',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'false',
249: 1:      'question': '3, 1, 4',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '2, 1, 1',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '2, 2, 6',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '6, 1, 11',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '5, 0, 1',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': 'true',
249: 1:      'question': '3, 1, 8',
249: 1:      'valid': true
249: 1:    }
249: 1:  ],
249: 1:  'level': 10,
249: 1:  'nextQuestion': '3, 2, 10',
249: 1:  'questions': [
249: 1:    '0, 1, 5',
249: 1:    '1, 0, 1',
249: 1:    '1, 0, 2',
249: 1:    '3, 1, 7',
249: 1:    '4, 2, 14',
249: 1:    '3, 2, 14',
249: 1:    '0, 2, 5',
249: 1:    '3, 1, 6',
249: 1:    '3, 1, 9',
249: 1:    '3, 2, 9',
249: 1:    '10, 10, 0',
249: 1:    '0, 0, 1',
249: 1:    '0, 1, 1',
249: 1:    '0, 0, 2',
249: 1:    '2, 0, 2',
249: 1:    '0, 1, 2',
249: 1:    '1, 1, 2',
249: 1:    '2, 1, 3',
249: 1:    '3, 1, 4',
249: 1:    '2, 1, 1',
249: 1:    '2, 2, 6',
249: 1:    '6, 1, 11',
249: 1:    '5, 0, 1',
249: 1:    '3, 1, 8',
249: 1:    '3, 2, 10'
249: 1:  ]
249: 1:}
249: 1:Scores: 20578
249: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true']')
249: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
250: 1:BoardData {
250: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
250: 1:  'expectedAnswer': 'true',
250: 1:  'history': [
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '0, 1, 5',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '1, 0, 1',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '1, 0, 2',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '3, 1, 7',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '4, 2, 14',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '3, 2, 14',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '0, 2, 5',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '3, 1, 6',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '3, 1, 9',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '3, 2, 9',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '10, 10, 0',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '0, 0, 1',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '0, 1, 1',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '0, 0, 2',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '2, 0, 2',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '0, 1, 2',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '1, 1, 2',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '2, 1, 3',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'false',
250: 1:      'question': '3, 1, 4',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '2, 1, 1',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '2, 2, 6',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '6, 1, 11',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '5, 0, 1',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '3, 1, 8',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': 'true',
250: 1:      'question': '3, 2, 10',
250: 1:      'valid': true
250: 1:    }
250: 1:  ],
250: 1:  'level': 10,
250: 1:  'nextQuestion': '3, 2, 8',
250: 1:  'questions': [
250: 1:    '0, 1, 5',
250: 1:    '1, 0, 1',
250: 1:    '1, 0, 2',
250: 1:    '3, 1, 7',
250: 1:    '4, 2, 14',
250: 1:    '3, 2, 14',
250: 1:    '0, 2, 5',
250: 1:    '3, 1, 6',
250: 1:    '3, 1, 9',
250: 1:    '3, 2, 9',
250: 1:    '10, 10, 0',
250: 1:    '0, 0, 1',
250: 1:    '0, 1, 1',
250: 1:    '0, 0, 2',
250: 1:    '2, 0, 2',
250: 1:    '0, 1, 2',
250: 1:    '1, 1, 2',
250: 1:    '2, 1, 3',
250: 1:    '3, 1, 4',
250: 1:    '2, 1, 1',
250: 1:    '2, 2, 6',
250: 1:    '6, 1, 11',
250: 1:    '5, 0, 1',
250: 1:    '3, 1, 8',
250: 1:    '3, 2, 10',
250: 1:    '3, 2, 8'
250: 1:  ]
250: 1:}
250: 1:Scores: 20585
250: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true']')
250: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
251: 1:BoardData {
251: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
251: 1:  'expectedAnswer': 'false',
251: 1:  'history': [
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '0, 1, 5',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '1, 0, 1',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '1, 0, 2',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '3, 1, 7',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '4, 2, 14',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '3, 2, 14',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '0, 2, 5',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '3, 1, 6',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '3, 1, 9',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '3, 2, 9',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '10, 10, 0',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '0, 0, 1',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '0, 1, 1',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '0, 0, 2',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '2, 0, 2',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '0, 1, 2',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '1, 1, 2',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '2, 1, 3',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'false',
251: 1:      'question': '3, 1, 4',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '2, 1, 1',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '2, 2, 6',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '6, 1, 11',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '5, 0, 1',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '3, 1, 8',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '3, 2, 10',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': 'true',
251: 1:      'question': '3, 2, 8',
251: 1:      'valid': true
251: 1:    }
251: 1:  ],
251: 1:  'level': 10,
251: 1:  'nextQuestion': '6, 0, 11',
251: 1:  'questions': [
251: 1:    '0, 1, 5',
251: 1:    '1, 0, 1',
251: 1:    '1, 0, 2',
251: 1:    '3, 1, 7',
251: 1:    '4, 2, 14',
251: 1:    '3, 2, 14',
251: 1:    '0, 2, 5',
251: 1:    '3, 1, 6',
251: 1:    '3, 1, 9',
251: 1:    '3, 2, 9',
251: 1:    '10, 10, 0',
251: 1:    '0, 0, 1',
251: 1:    '0, 1, 1',
251: 1:    '0, 0, 2',
251: 1:    '2, 0, 2',
251: 1:    '0, 1, 2',
251: 1:    '1, 1, 2',
251: 1:    '2, 1, 3',
251: 1:    '3, 1, 4',
251: 1:    '2, 1, 1',
251: 1:    '2, 2, 6',
251: 1:    '6, 1, 11',
251: 1:    '5, 0, 1',
251: 1:    '3, 1, 8',
251: 1:    '3, 2, 10',
251: 1:    '3, 2, 8',
251: 1:    '6, 0, 11'
251: 1:  ]
251: 1:}
251: 1:Scores: 20592
251: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false']')
251: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
252: 1:BoardData {
252: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
252: 1:  'expectedAnswer': 'true',
252: 1:  'history': [
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '0, 1, 5',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '1, 0, 1',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '1, 0, 2',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '3, 1, 7',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '4, 2, 14',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '3, 2, 14',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '0, 2, 5',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '3, 1, 6',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '3, 1, 9',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '3, 2, 9',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '10, 10, 0',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '0, 0, 1',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '0, 1, 1',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '0, 0, 2',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '2, 0, 2',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '0, 1, 2',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '1, 1, 2',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '2, 1, 3',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '3, 1, 4',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '2, 1, 1',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '2, 2, 6',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '6, 1, 11',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '5, 0, 1',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '3, 1, 8',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '3, 2, 10',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'true',
252: 1:      'question': '3, 2, 8',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': 'false',
252: 1:      'question': '6, 0, 11',
252: 1:      'valid': true
252: 1:    }
252: 1:  ],
252: 1:  'level': 10,
252: 1:  'nextQuestion': '1, 4, 11',
252: 1:  'questions': [
252: 1:    '0, 1, 5',
252: 1:    '1, 0, 1',
252: 1:    '1, 0, 2',
252: 1:    '3, 1, 7',
252: 1:    '4, 2, 14',
252: 1:    '3, 2, 14',
252: 1:    '0, 2, 5',
252: 1:    '3, 1, 6',
252: 1:    '3, 1, 9',
252: 1:    '3, 2, 9',
252: 1:    '10, 10, 0',
252: 1:    '0, 0, 1',
252: 1:    '0, 1, 1',
252: 1:    '0, 0, 2',
252: 1:    '2, 0, 2',
252: 1:    '0, 1, 2',
252: 1:    '1, 1, 2',
252: 1:    '2, 1, 3',
252: 1:    '3, 1, 4',
252: 1:    '2, 1, 1',
252: 1:    '2, 2, 6',
252: 1:    '6, 1, 11',
252: 1:    '5, 0, 1',
252: 1:    '3, 1, 8',
252: 1:    '3, 2, 10',
252: 1:    '3, 2, 8',
252: 1:    '6, 0, 11',
252: 1:    '1, 4, 11'
252: 1:  ]
252: 1:}
252: 1:Scores: 20599
252: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true']')
252: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
253: 1:BoardData {
253: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
253: 1:  'expectedAnswer': 'true',
253: 1:  'history': [
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '0, 1, 5',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '1, 0, 1',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '1, 0, 2',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '3, 1, 7',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '4, 2, 14',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '3, 2, 14',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '0, 2, 5',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '3, 1, 6',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '3, 1, 9',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '3, 2, 9',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '10, 10, 0',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '0, 0, 1',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '0, 1, 1',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '0, 0, 2',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '2, 0, 2',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '0, 1, 2',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '1, 1, 2',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '2, 1, 3',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '3, 1, 4',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '2, 1, 1',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '2, 2, 6',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '6, 1, 11',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '5, 0, 1',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '3, 1, 8',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '3, 2, 10',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '3, 2, 8',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'false',
253: 1:      'question': '6, 0, 11',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': 'true',
253: 1:      'question': '1, 4, 11',
253: 1:      'valid': true
253: 1:    }
253: 1:  ],
253: 1:  'level': 10,
253: 1:  'nextQuestion': '0, 3, 10',
253: 1:  'questions': [
253: 1:    '0, 1, 5',
253: 1:    '1, 0, 1',
253: 1:    '1, 0, 2',
253: 1:    '3, 1, 7',
253: 1:    '4, 2, 14',
253: 1:    '3, 2, 14',
253: 1:    '0, 2, 5',
253: 1:    '3, 1, 6',
253: 1:    '3, 1, 9',
253: 1:    '3, 2, 9',
253: 1:    '10, 10, 0',
253: 1:    '0, 0, 1',
253: 1:    '0, 1, 1',
253: 1:    '0, 0, 2',
253: 1:    '2, 0, 2',
253: 1:    '0, 1, 2',
253: 1:    '1, 1, 2',
253: 1:    '2, 1, 3',
253: 1:    '3, 1, 4',
253: 1:    '2, 1, 1',
253: 1:    '2, 2, 6',
253: 1:    '6, 1, 11',
253: 1:    '5, 0, 1',
253: 1:    '3, 1, 8',
253: 1:    '3, 2, 10',
253: 1:    '3, 2, 8',
253: 1:    '6, 0, 11',
253: 1:    '1, 4, 11',
253: 1:    '0, 3, 10'
253: 1:  ]
253: 1:}
253: 1:Scores: 20606
253: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true']')
253: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
254: 1:BoardData {
254: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
254: 1:  'expectedAnswer': 'false',
254: 1:  'history': [
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '0, 1, 5',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '1, 0, 1',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '1, 0, 2',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '3, 1, 7',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '4, 2, 14',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '3, 2, 14',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '0, 2, 5',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '3, 1, 6',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '3, 1, 9',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '3, 2, 9',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '10, 10, 0',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '0, 0, 1',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '0, 1, 1',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '0, 0, 2',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '2, 0, 2',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '0, 1, 2',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '1, 1, 2',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '2, 1, 3',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '3, 1, 4',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '2, 1, 1',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '2, 2, 6',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '6, 1, 11',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '5, 0, 1',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '3, 1, 8',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '3, 2, 10',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '3, 2, 8',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'false',
254: 1:      'question': '6, 0, 11',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '1, 4, 11',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': 'true',
254: 1:      'question': '0, 3, 10',
254: 1:      'valid': true
254: 1:    }
254: 1:  ],
254: 1:  'level': 10,
254: 1:  'nextQuestion': '1, 4, 12',
254: 1:  'questions': [
254: 1:    '0, 1, 5',
254: 1:    '1, 0, 1',
254: 1:    '1, 0, 2',
254: 1:    '3, 1, 7',
254: 1:    '4, 2, 14',
254: 1:    '3, 2, 14',
254: 1:    '0, 2, 5',
254: 1:    '3, 1, 6',
254: 1:    '3, 1, 9',
254: 1:    '3, 2, 9',
254: 1:    '10, 10, 0',
254: 1:    '0, 0, 1',
254: 1:    '0, 1, 1',
254: 1:    '0, 0, 2',
254: 1:    '2, 0, 2',
254: 1:    '0, 1, 2',
254: 1:    '1, 1, 2',
254: 1:    '2, 1, 3',
254: 1:    '3, 1, 4',
254: 1:    '2, 1, 1',
254: 1:    '2, 2, 6',
254: 1:    '6, 1, 11',
254: 1:    '5, 0, 1',
254: 1:    '3, 1, 8',
254: 1:    '3, 2, 10',
254: 1:    '3, 2, 8',
254: 1:    '6, 0, 11',
254: 1:    '1, 4, 11',
254: 1:    '0, 3, 10',
254: 1:    '1, 4, 12'
254: 1:  ]
254: 1:}
254: 1:Scores: 20613
254: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false']')
254: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
255: 1:BoardData {
255: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
255: 1:  'expectedAnswer': 'false',
255: 1:  'history': [
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '0, 1, 5',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '1, 0, 1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '1, 0, 2',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '3, 1, 7',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '4, 2, 14',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '3, 2, 14',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '0, 2, 5',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '3, 1, 6',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '3, 1, 9',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '3, 2, 9',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '10, 10, 0',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '0, 0, 1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '0, 1, 1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '0, 0, 2',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '2, 0, 2',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '0, 1, 2',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '1, 1, 2',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '2, 1, 3',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '3, 1, 4',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '2, 1, 1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '2, 2, 6',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '6, 1, 11',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '5, 0, 1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '3, 1, 8',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '3, 2, 10',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '3, 2, 8',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '6, 0, 11',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '1, 4, 11',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'true',
255: 1:      'question': '0, 3, 10',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': 'false',
255: 1:      'question': '1, 4, 12',
255: 1:      'valid': true
255: 1:    }
255: 1:  ],
255: 1:  'level': 10,
255: 1:  'nextQuestion': '1, 1, 7',
255: 1:  'questions': [
255: 1:    '0, 1, 5',
255: 1:    '1, 0, 1',
255: 1:    '1, 0, 2',
255: 1:    '3, 1, 7',
255: 1:    '4, 2, 14',
255: 1:    '3, 2, 14',
255: 1:    '0, 2, 5',
255: 1:    '3, 1, 6',
255: 1:    '3, 1, 9',
255: 1:    '3, 2, 9',
255: 1:    '10, 10, 0',
255: 1:    '0, 0, 1',
255: 1:    '0, 1, 1',
255: 1:    '0, 0, 2',
255: 1:    '2, 0, 2',
255: 1:    '0, 1, 2',
255: 1:    '1, 1, 2',
255: 1:    '2, 1, 3',
255: 1:    '3, 1, 4',
255: 1:    '2, 1, 1',
255: 1:    '2, 2, 6',
255: 1:    '6, 1, 11',
255: 1:    '5, 0, 1',
255: 1:    '3, 1, 8',
255: 1:    '3, 2, 10',
255: 1:    '3, 2, 8',
255: 1:    '6, 0, 11',
255: 1:    '1, 4, 11',
255: 1:    '0, 3, 10',
255: 1:    '1, 4, 12',
255: 1:    '1, 1, 7'
255: 1:  ]
255: 1:}
255: 1:Scores: 20620
255: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false']')
255: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
256: 1:BoardData {
256: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
256: 1:  'expectedAnswer': 'true',
256: 1:  'history': [
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '0, 1, 5',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '1, 0, 1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '1, 0, 2',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '3, 1, 7',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '4, 2, 14',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '3, 2, 14',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '0, 2, 5',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '3, 1, 6',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '3, 1, 9',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '3, 2, 9',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '10, 10, 0',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '0, 0, 1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '0, 1, 1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '0, 0, 2',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '2, 0, 2',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '0, 1, 2',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '1, 1, 2',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '2, 1, 3',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '3, 1, 4',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '2, 1, 1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '2, 2, 6',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '6, 1, 11',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '5, 0, 1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '3, 1, 8',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '3, 2, 10',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '3, 2, 8',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '6, 0, 11',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '1, 4, 11',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'true',
256: 1:      'question': '0, 3, 10',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '1, 4, 12',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': 'false',
256: 1:      'question': '1, 1, 7',
256: 1:      'valid': true
256: 1:    }
256: 1:  ],
256: 1:  'level': 10,
256: 1:  'nextQuestion': '2, 1, 7',
256: 1:  'questions': [
256: 1:    '0, 1, 5',
256: 1:    '1, 0, 1',
256: 1:    '1, 0, 2',
256: 1:    '3, 1, 7',
256: 1:    '4, 2, 14',
256: 1:    '3, 2, 14',
256: 1:    '0, 2, 5',
256: 1:    '3, 1, 6',
256: 1:    '3, 1, 9',
256: 1:    '3, 2, 9',
256: 1:    '10, 10, 0',
256: 1:    '0, 0, 1',
256: 1:    '0, 1, 1',
256: 1:    '0, 0, 2',
256: 1:    '2, 0, 2',
256: 1:    '0, 1, 2',
256: 1:    '1, 1, 2',
256: 1:    '2, 1, 3',
256: 1:    '3, 1, 4',
256: 1:    '2, 1, 1',
256: 1:    '2, 2, 6',
256: 1:    '6, 1, 11',
256: 1:    '5, 0, 1',
256: 1:    '3, 1, 8',
256: 1:    '3, 2, 10',
256: 1:    '3, 2, 8',
256: 1:    '6, 0, 11',
256: 1:    '1, 4, 11',
256: 1:    '0, 3, 10',
256: 1:    '1, 4, 12',
256: 1:    '1, 1, 7',
256: 1:    '2, 1, 7'
256: 1:  ]
256: 1:}
256: 1:Scores: 20627
256: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
256: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
257: 1:BoardData {
257: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
257: 1:  'expectedAnswer': 'true',
257: 1:  'history': [
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '0, 1, 5',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '1, 0, 1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '1, 0, 2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '3, 1, 7',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '4, 2, 14',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '3, 2, 14',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '0, 2, 5',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '3, 1, 6',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '3, 1, 9',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '3, 2, 9',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '10, 10, 0',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '0, 0, 1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '0, 1, 1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '0, 0, 2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '2, 0, 2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '0, 1, 2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '1, 1, 2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '2, 1, 3',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '3, 1, 4',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '2, 1, 1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '2, 2, 6',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '6, 1, 11',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '5, 0, 1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '3, 1, 8',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '3, 2, 10',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '3, 2, 8',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '6, 0, 11',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '1, 4, 11',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '0, 3, 10',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '1, 4, 12',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'false',
257: 1:      'question': '1, 1, 7',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': 'true',
257: 1:      'question': '2, 1, 7',
257: 1:      'valid': true
257: 1:    }
257: 1:  ],
257: 1:  'level': 10,
257: 1:  'nextQuestion': '7, 1, 11',
257: 1:  'questions': [
257: 1:    '0, 1, 5',
257: 1:    '1, 0, 1',
257: 1:    '1, 0, 2',
257: 1:    '3, 1, 7',
257: 1:    '4, 2, 14',
257: 1:    '3, 2, 14',
257: 1:    '0, 2, 5',
257: 1:    '3, 1, 6',
257: 1:    '3, 1, 9',
257: 1:    '3, 2, 9',
257: 1:    '10, 10, 0',
257: 1:    '0, 0, 1',
257: 1:    '0, 1, 1',
257: 1:    '0, 0, 2',
257: 1:    '2, 0, 2',
257: 1:    '0, 1, 2',
257: 1:    '1, 1, 2',
257: 1:    '2, 1, 3',
257: 1:    '3, 1, 4',
257: 1:    '2, 1, 1',
257: 1:    '2, 2, 6',
257: 1:    '6, 1, 11',
257: 1:    '5, 0, 1',
257: 1:    '3, 1, 8',
257: 1:    '3, 2, 10',
257: 1:    '3, 2, 8',
257: 1:    '6, 0, 11',
257: 1:    '1, 4, 11',
257: 1:    '0, 3, 10',
257: 1:    '1, 4, 12',
257: 1:    '1, 1, 7',
257: 1:    '2, 1, 7',
257: 1:    '7, 1, 11'
257: 1:  ]
257: 1:}
257: 1:Scores: 20634
257: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true']')
257: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
258: 1:BoardData {
258: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
258: 1:  'expectedAnswer': 'true',
258: 1:  'history': [
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '0, 1, 5',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '1, 0, 1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '1, 0, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '3, 1, 7',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '4, 2, 14',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '3, 2, 14',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '0, 2, 5',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '3, 1, 6',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '3, 1, 9',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '3, 2, 9',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '10, 10, 0',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '0, 0, 1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '0, 1, 1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '0, 0, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '2, 0, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '0, 1, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '1, 1, 2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '2, 1, 3',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '3, 1, 4',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '2, 1, 1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '2, 2, 6',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '6, 1, 11',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '5, 0, 1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '3, 1, 8',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '3, 2, 10',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '3, 2, 8',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '6, 0, 11',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '1, 4, 11',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '0, 3, 10',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '1, 4, 12',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'false',
258: 1:      'question': '1, 1, 7',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '2, 1, 7',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': 'true',
258: 1:      'question': '7, 1, 11',
258: 1:      'valid': true
258: 1:    }
258: 1:  ],
258: 1:  'level': 10,
258: 1:  'nextQuestion': '7, 1, 8',
258: 1:  'questions': [
258: 1:    '0, 1, 5',
258: 1:    '1, 0, 1',
258: 1:    '1, 0, 2',
258: 1:    '3, 1, 7',
258: 1:    '4, 2, 14',
258: 1:    '3, 2, 14',
258: 1:    '0, 2, 5',
258: 1:    '3, 1, 6',
258: 1:    '3, 1, 9',
258: 1:    '3, 2, 9',
258: 1:    '10, 10, 0',
258: 1:    '0, 0, 1',
258: 1:    '0, 1, 1',
258: 1:    '0, 0, 2',
258: 1:    '2, 0, 2',
258: 1:    '0, 1, 2',
258: 1:    '1, 1, 2',
258: 1:    '2, 1, 3',
258: 1:    '3, 1, 4',
258: 1:    '2, 1, 1',
258: 1:    '2, 2, 6',
258: 1:    '6, 1, 11',
258: 1:    '5, 0, 1',
258: 1:    '3, 1, 8',
258: 1:    '3, 2, 10',
258: 1:    '3, 2, 8',
258: 1:    '6, 0, 11',
258: 1:    '1, 4, 11',
258: 1:    '0, 3, 10',
258: 1:    '1, 4, 12',
258: 1:    '1, 1, 7',
258: 1:    '2, 1, 7',
258: 1:    '7, 1, 11',
258: 1:    '7, 1, 8'
258: 1:  ]
258: 1:}
258: 1:Scores: 20641
258: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true']')
258: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
259: 1:BoardData {
259: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
259: 1:  'expectedAnswer': 'false',
259: 1:  'history': [
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '0, 1, 5',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '1, 0, 1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '1, 0, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '3, 1, 7',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '4, 2, 14',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '3, 2, 14',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '0, 2, 5',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '3, 1, 6',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '3, 1, 9',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '3, 2, 9',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '10, 10, 0',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '0, 0, 1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '0, 1, 1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '0, 0, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '2, 0, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '0, 1, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '1, 1, 2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '2, 1, 3',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '3, 1, 4',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '2, 1, 1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '2, 2, 6',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '6, 1, 11',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '5, 0, 1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '3, 1, 8',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '3, 2, 10',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '3, 2, 8',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '6, 0, 11',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '1, 4, 11',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '0, 3, 10',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '1, 4, 12',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'false',
259: 1:      'question': '1, 1, 7',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '2, 1, 7',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '7, 1, 11',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': 'true',
259: 1:      'question': '7, 1, 8',
259: 1:      'valid': true
259: 1:    }
259: 1:  ],
259: 1:  'level': 10,
259: 1:  'nextQuestion': '7, 1, 13',
259: 1:  'questions': [
259: 1:    '0, 1, 5',
259: 1:    '1, 0, 1',
259: 1:    '1, 0, 2',
259: 1:    '3, 1, 7',
259: 1:    '4, 2, 14',
259: 1:    '3, 2, 14',
259: 1:    '0, 2, 5',
259: 1:    '3, 1, 6',
259: 1:    '3, 1, 9',
259: 1:    '3, 2, 9',
259: 1:    '10, 10, 0',
259: 1:    '0, 0, 1',
259: 1:    '0, 1, 1',
259: 1:    '0, 0, 2',
259: 1:    '2, 0, 2',
259: 1:    '0, 1, 2',
259: 1:    '1, 1, 2',
259: 1:    '2, 1, 3',
259: 1:    '3, 1, 4',
259: 1:    '2, 1, 1',
259: 1:    '2, 2, 6',
259: 1:    '6, 1, 11',
259: 1:    '5, 0, 1',
259: 1:    '3, 1, 8',
259: 1:    '3, 2, 10',
259: 1:    '3, 2, 8',
259: 1:    '6, 0, 11',
259: 1:    '1, 4, 11',
259: 1:    '0, 3, 10',
259: 1:    '1, 4, 12',
259: 1:    '1, 1, 7',
259: 1:    '2, 1, 7',
259: 1:    '7, 1, 11',
259: 1:    '7, 1, 8',
259: 1:    '7, 1, 13'
259: 1:  ]
259: 1:}
259: 1:Scores: 20648
259: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false']')
259: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
260: 1:BoardData {
260: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
260: 1:  'expectedAnswer': 'true',
260: 1:  'history': [
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '0, 1, 5',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '1, 0, 1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '1, 0, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '3, 1, 7',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '4, 2, 14',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '3, 2, 14',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '0, 2, 5',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '3, 1, 6',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '3, 1, 9',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '3, 2, 9',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '10, 10, 0',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '0, 0, 1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '0, 1, 1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '0, 0, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '2, 0, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '0, 1, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '1, 1, 2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '2, 1, 3',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '3, 1, 4',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '2, 1, 1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '2, 2, 6',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '6, 1, 11',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '5, 0, 1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '3, 1, 8',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '3, 2, 10',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '3, 2, 8',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '6, 0, 11',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '1, 4, 11',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '0, 3, 10',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '1, 4, 12',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '1, 1, 7',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '2, 1, 7',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '7, 1, 11',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'true',
260: 1:      'question': '7, 1, 8',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': 'false',
260: 1:      'question': '7, 1, 13',
260: 1:      'valid': true
260: 1:    }
260: 1:  ],
260: 1:  'level': 10,
260: 1:  'nextQuestion': '43, 1, 46',
260: 1:  'questions': [
260: 1:    '0, 1, 5',
260: 1:    '1, 0, 1',
260: 1:    '1, 0, 2',
260: 1:    '3, 1, 7',
260: 1:    '4, 2, 14',
260: 1:    '3, 2, 14',
260: 1:    '0, 2, 5',
260: 1:    '3, 1, 6',
260: 1:    '3, 1, 9',
260: 1:    '3, 2, 9',
260: 1:    '10, 10, 0',
260: 1:    '0, 0, 1',
260: 1:    '0, 1, 1',
260: 1:    '0, 0, 2',
260: 1:    '2, 0, 2',
260: 1:    '0, 1, 2',
260: 1:    '1, 1, 2',
260: 1:    '2, 1, 3',
260: 1:    '3, 1, 4',
260: 1:    '2, 1, 1',
260: 1:    '2, 2, 6',
260: 1:    '6, 1, 11',
260: 1:    '5, 0, 1',
260: 1:    '3, 1, 8',
260: 1:    '3, 2, 10',
260: 1:    '3, 2, 8',
260: 1:    '6, 0, 11',
260: 1:    '1, 4, 11',
260: 1:    '0, 3, 10',
260: 1:    '1, 4, 12',
260: 1:    '1, 1, 7',
260: 1:    '2, 1, 7',
260: 1:    '7, 1, 11',
260: 1:    '7, 1, 8',
260: 1:    '7, 1, 13',
260: 1:    '43, 1, 46'
260: 1:  ]
260: 1:}
260: 1:Scores: 20655
260: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true']')
260: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
261: 1:BoardData {
261: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
261: 1:  'expectedAnswer': 'false',
261: 1:  'history': [
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '0, 1, 5',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '1, 0, 1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '1, 0, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '3, 1, 7',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '4, 2, 14',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '3, 2, 14',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '0, 2, 5',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '3, 1, 6',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '3, 1, 9',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '3, 2, 9',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '10, 10, 0',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '0, 0, 1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '0, 1, 1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '0, 0, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '2, 0, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '0, 1, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '1, 1, 2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '2, 1, 3',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '3, 1, 4',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '2, 1, 1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '2, 2, 6',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '6, 1, 11',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '5, 0, 1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '3, 1, 8',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '3, 2, 10',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '3, 2, 8',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '6, 0, 11',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '1, 4, 11',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '0, 3, 10',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '1, 4, 12',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '1, 1, 7',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '2, 1, 7',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '7, 1, 11',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '7, 1, 8',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'false',
261: 1:      'question': '7, 1, 13',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': 'true',
261: 1:      'question': '43, 1, 46',
261: 1:      'valid': true
261: 1:    }
261: 1:  ],
261: 1:  'level': 10,
261: 1:  'nextQuestion': '40, 1, 46',
261: 1:  'questions': [
261: 1:    '0, 1, 5',
261: 1:    '1, 0, 1',
261: 1:    '1, 0, 2',
261: 1:    '3, 1, 7',
261: 1:    '4, 2, 14',
261: 1:    '3, 2, 14',
261: 1:    '0, 2, 5',
261: 1:    '3, 1, 6',
261: 1:    '3, 1, 9',
261: 1:    '3, 2, 9',
261: 1:    '10, 10, 0',
261: 1:    '0, 0, 1',
261: 1:    '0, 1, 1',
261: 1:    '0, 0, 2',
261: 1:    '2, 0, 2',
261: 1:    '0, 1, 2',
261: 1:    '1, 1, 2',
261: 1:    '2, 1, 3',
261: 1:    '3, 1, 4',
261: 1:    '2, 1, 1',
261: 1:    '2, 2, 6',
261: 1:    '6, 1, 11',
261: 1:    '5, 0, 1',
261: 1:    '3, 1, 8',
261: 1:    '3, 2, 10',
261: 1:    '3, 2, 8',
261: 1:    '6, 0, 11',
261: 1:    '1, 4, 11',
261: 1:    '0, 3, 10',
261: 1:    '1, 4, 12',
261: 1:    '1, 1, 7',
261: 1:    '2, 1, 7',
261: 1:    '7, 1, 11',
261: 1:    '7, 1, 8',
261: 1:    '7, 1, 13',
261: 1:    '43, 1, 46',
261: 1:    '40, 1, 46'
261: 1:  ]
261: 1:}
261: 1:Scores: 20662
261: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false']')
261: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
262: 1:BoardData {
262: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
262: 1:  'expectedAnswer': 'true',
262: 1:  'history': [
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '0, 1, 5',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '1, 0, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '1, 0, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '3, 1, 7',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '4, 2, 14',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '3, 2, 14',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '0, 2, 5',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '3, 1, 6',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '3, 1, 9',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '3, 2, 9',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '10, 10, 0',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '0, 0, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '0, 1, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '0, 0, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '2, 0, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '0, 1, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '1, 1, 2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '2, 1, 3',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '3, 1, 4',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '2, 1, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '2, 2, 6',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '6, 1, 11',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '5, 0, 1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '3, 1, 8',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '3, 2, 10',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '3, 2, 8',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '6, 0, 11',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '1, 4, 11',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '0, 3, 10',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '1, 4, 12',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '1, 1, 7',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '2, 1, 7',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '7, 1, 11',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '7, 1, 8',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '7, 1, 13',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'true',
262: 1:      'question': '43, 1, 46',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': 'false',
262: 1:      'question': '40, 1, 46',
262: 1:      'valid': true
262: 1:    }
262: 1:  ],
262: 1:  'level': 10,
262: 1:  'nextQuestion': '40, 2, 47',
262: 1:  'questions': [
262: 1:    '0, 1, 5',
262: 1:    '1, 0, 1',
262: 1:    '1, 0, 2',
262: 1:    '3, 1, 7',
262: 1:    '4, 2, 14',
262: 1:    '3, 2, 14',
262: 1:    '0, 2, 5',
262: 1:    '3, 1, 6',
262: 1:    '3, 1, 9',
262: 1:    '3, 2, 9',
262: 1:    '10, 10, 0',
262: 1:    '0, 0, 1',
262: 1:    '0, 1, 1',
262: 1:    '0, 0, 2',
262: 1:    '2, 0, 2',
262: 1:    '0, 1, 2',
262: 1:    '1, 1, 2',
262: 1:    '2, 1, 3',
262: 1:    '3, 1, 4',
262: 1:    '2, 1, 1',
262: 1:    '2, 2, 6',
262: 1:    '6, 1, 11',
262: 1:    '5, 0, 1',
262: 1:    '3, 1, 8',
262: 1:    '3, 2, 10',
262: 1:    '3, 2, 8',
262: 1:    '6, 0, 11',
262: 1:    '1, 4, 11',
262: 1:    '0, 3, 10',
262: 1:    '1, 4, 12',
262: 1:    '1, 1, 7',
262: 1:    '2, 1, 7',
262: 1:    '7, 1, 11',
262: 1:    '7, 1, 8',
262: 1:    '7, 1, 13',
262: 1:    '43, 1, 46',
262: 1:    '40, 1, 46',
262: 1:    '40, 2, 47'
262: 1:  ]
262: 1:}
262: 1:Scores: 20669
262: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true']')
262: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
263: 1:BoardData {
263: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
263: 1:  'expectedAnswer': 'true',
263: 1:  'history': [
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '0, 1, 5',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '1, 0, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '1, 0, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '3, 1, 7',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '4, 2, 14',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '3, 2, 14',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '0, 2, 5',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '3, 1, 6',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '3, 1, 9',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '3, 2, 9',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '10, 10, 0',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '0, 0, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '0, 1, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '0, 0, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '2, 0, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '0, 1, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '1, 1, 2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '2, 1, 3',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '3, 1, 4',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '2, 1, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '2, 2, 6',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '6, 1, 11',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '5, 0, 1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '3, 1, 8',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '3, 2, 10',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '3, 2, 8',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '6, 0, 11',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '1, 4, 11',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '0, 3, 10',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '1, 4, 12',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '1, 1, 7',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '2, 1, 7',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '7, 1, 11',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '7, 1, 8',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '7, 1, 13',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '43, 1, 46',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'false',
263: 1:      'question': '40, 1, 46',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': 'true',
263: 1:      'question': '40, 2, 47',
263: 1:      'valid': true
263: 1:    }
263: 1:  ],
263: 1:  'level': 10,
263: 1:  'nextQuestion': '40, 2, 50',
263: 1:  'questions': [
263: 1:    '0, 1, 5',
263: 1:    '1, 0, 1',
263: 1:    '1, 0, 2',
263: 1:    '3, 1, 7',
263: 1:    '4, 2, 14',
263: 1:    '3, 2, 14',
263: 1:    '0, 2, 5',
263: 1:    '3, 1, 6',
263: 1:    '3, 1, 9',
263: 1:    '3, 2, 9',
263: 1:    '10, 10, 0',
263: 1:    '0, 0, 1',
263: 1:    '0, 1, 1',
263: 1:    '0, 0, 2',
263: 1:    '2, 0, 2',
263: 1:    '0, 1, 2',
263: 1:    '1, 1, 2',
263: 1:    '2, 1, 3',
263: 1:    '3, 1, 4',
263: 1:    '2, 1, 1',
263: 1:    '2, 2, 6',
263: 1:    '6, 1, 11',
263: 1:    '5, 0, 1',
263: 1:    '3, 1, 8',
263: 1:    '3, 2, 10',
263: 1:    '3, 2, 8',
263: 1:    '6, 0, 11',
263: 1:    '1, 4, 11',
263: 1:    '0, 3, 10',
263: 1:    '1, 4, 12',
263: 1:    '1, 1, 7',
263: 1:    '2, 1, 7',
263: 1:    '7, 1, 11',
263: 1:    '7, 1, 8',
263: 1:    '7, 1, 13',
263: 1:    '43, 1, 46',
263: 1:    '40, 1, 46',
263: 1:    '40, 2, 47',
263: 1:    '40, 2, 50'
263: 1:  ]
263: 1:}
263: 1:Scores: 20676
263: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true']')
263: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
264: 1:BoardData {
264: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
264: 1:  'expectedAnswer': 'false',
264: 1:  'history': [
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '0, 1, 5',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '1, 0, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '1, 0, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '3, 1, 7',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '4, 2, 14',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '3, 2, 14',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '0, 2, 5',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '3, 1, 6',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '3, 1, 9',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '3, 2, 9',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '10, 10, 0',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '0, 0, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '0, 1, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '0, 0, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '2, 0, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '0, 1, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '1, 1, 2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '2, 1, 3',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '3, 1, 4',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '2, 1, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '2, 2, 6',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '6, 1, 11',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '5, 0, 1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '3, 1, 8',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '3, 2, 10',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '3, 2, 8',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '6, 0, 11',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '1, 4, 11',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '0, 3, 10',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '1, 4, 12',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '1, 1, 7',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '2, 1, 7',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '7, 1, 11',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '7, 1, 8',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '7, 1, 13',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '43, 1, 46',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'false',
264: 1:      'question': '40, 1, 46',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '40, 2, 47',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': 'true',
264: 1:      'question': '40, 2, 50',
264: 1:      'valid': true
264: 1:    }
264: 1:  ],
264: 1:  'level': 10,
264: 1:  'nextQuestion': '40, 2, 52',
264: 1:  'questions': [
264: 1:    '0, 1, 5',
264: 1:    '1, 0, 1',
264: 1:    '1, 0, 2',
264: 1:    '3, 1, 7',
264: 1:    '4, 2, 14',
264: 1:    '3, 2, 14',
264: 1:    '0, 2, 5',
264: 1:    '3, 1, 6',
264: 1:    '3, 1, 9',
264: 1:    '3, 2, 9',
264: 1:    '10, 10, 0',
264: 1:    '0, 0, 1',
264: 1:    '0, 1, 1',
264: 1:    '0, 0, 2',
264: 1:    '2, 0, 2',
264: 1:    '0, 1, 2',
264: 1:    '1, 1, 2',
264: 1:    '2, 1, 3',
264: 1:    '3, 1, 4',
264: 1:    '2, 1, 1',
264: 1:    '2, 2, 6',
264: 1:    '6, 1, 11',
264: 1:    '5, 0, 1',
264: 1:    '3, 1, 8',
264: 1:    '3, 2, 10',
264: 1:    '3, 2, 8',
264: 1:    '6, 0, 11',
264: 1:    '1, 4, 11',
264: 1:    '0, 3, 10',
264: 1:    '1, 4, 12',
264: 1:    '1, 1, 7',
264: 1:    '2, 1, 7',
264: 1:    '7, 1, 11',
264: 1:    '7, 1, 8',
264: 1:    '7, 1, 13',
264: 1:    '43, 1, 46',
264: 1:    '40, 1, 46',
264: 1:    '40, 2, 47',
264: 1:    '40, 2, 50',
264: 1:    '40, 2, 52'
264: 1:  ]
264: 1:}
264: 1:Scores: 20683
264: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false']')
264: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
265: 1:BoardData {
265: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
265: 1:  'expectedAnswer': 'false',
265: 1:  'history': [
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '0, 1, 5',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '1, 0, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '1, 0, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '3, 1, 7',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '4, 2, 14',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '3, 2, 14',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '0, 2, 5',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '3, 1, 6',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '3, 1, 9',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '3, 2, 9',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '10, 10, 0',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '0, 0, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '0, 1, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '0, 0, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '2, 0, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '0, 1, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '1, 1, 2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '2, 1, 3',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '3, 1, 4',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '2, 1, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '2, 2, 6',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '6, 1, 11',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '5, 0, 1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '3, 1, 8',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '3, 2, 10',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '3, 2, 8',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '6, 0, 11',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '1, 4, 11',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '0, 3, 10',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '1, 4, 12',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '1, 1, 7',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '2, 1, 7',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '7, 1, 11',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '7, 1, 8',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '7, 1, 13',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '43, 1, 46',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '40, 1, 46',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '40, 2, 47',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'true',
265: 1:      'question': '40, 2, 50',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': 'false',
265: 1:      'question': '40, 2, 52',
265: 1:      'valid': true
265: 1:    }
265: 1:  ],
265: 1:  'level': 10,
265: 1:  'nextQuestion': '22, 2, 33',
265: 1:  'questions': [
265: 1:    '0, 1, 5',
265: 1:    '1, 0, 1',
265: 1:    '1, 0, 2',
265: 1:    '3, 1, 7',
265: 1:    '4, 2, 14',
265: 1:    '3, 2, 14',
265: 1:    '0, 2, 5',
265: 1:    '3, 1, 6',
265: 1:    '3, 1, 9',
265: 1:    '3, 2, 9',
265: 1:    '10, 10, 0',
265: 1:    '0, 0, 1',
265: 1:    '0, 1, 1',
265: 1:    '0, 0, 2',
265: 1:    '2, 0, 2',
265: 1:    '0, 1, 2',
265: 1:    '1, 1, 2',
265: 1:    '2, 1, 3',
265: 1:    '3, 1, 4',
265: 1:    '2, 1, 1',
265: 1:    '2, 2, 6',
265: 1:    '6, 1, 11',
265: 1:    '5, 0, 1',
265: 1:    '3, 1, 8',
265: 1:    '3, 2, 10',
265: 1:    '3, 2, 8',
265: 1:    '6, 0, 11',
265: 1:    '1, 4, 11',
265: 1:    '0, 3, 10',
265: 1:    '1, 4, 12',
265: 1:    '1, 1, 7',
265: 1:    '2, 1, 7',
265: 1:    '7, 1, 11',
265: 1:    '7, 1, 8',
265: 1:    '7, 1, 13',
265: 1:    '43, 1, 46',
265: 1:    '40, 1, 46',
265: 1:    '40, 2, 47',
265: 1:    '40, 2, 50',
265: 1:    '40, 2, 52',
265: 1:    '22, 2, 33'
265: 1:  ]
265: 1:}
265: 1:Scores: 20690
265: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false']')
265: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
266: 1:BoardData {
266: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
266: 1:  'expectedAnswer': 'true',
266: 1:  'history': [
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '0, 1, 5',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '1, 0, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '1, 0, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 1, 7',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '4, 2, 14',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '3, 2, 14',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '0, 2, 5',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 1, 6',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '3, 1, 9',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '3, 2, 9',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '10, 10, 0',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '0, 0, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '0, 1, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '0, 0, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '2, 0, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '0, 1, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '1, 1, 2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '2, 1, 3',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '3, 1, 4',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '2, 1, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '2, 2, 6',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '6, 1, 11',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '5, 0, 1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 1, 8',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 2, 10',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '3, 2, 8',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '6, 0, 11',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '1, 4, 11',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '0, 3, 10',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '1, 4, 12',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '1, 1, 7',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '2, 1, 7',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '7, 1, 11',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '7, 1, 8',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '7, 1, 13',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '43, 1, 46',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '40, 1, 46',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '40, 2, 47',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'true',
266: 1:      'question': '40, 2, 50',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '40, 2, 52',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': 'false',
266: 1:      'question': '22, 2, 33',
266: 1:      'valid': true
266: 1:    }
266: 1:  ],
266: 1:  'level': 10,
266: 1:  'nextQuestion': '0, 2, 10',
266: 1:  'questions': [
266: 1:    '0, 1, 5',
266: 1:    '1, 0, 1',
266: 1:    '1, 0, 2',
266: 1:    '3, 1, 7',
266: 1:    '4, 2, 14',
266: 1:    '3, 2, 14',
266: 1:    '0, 2, 5',
266: 1:    '3, 1, 6',
266: 1:    '3, 1, 9',
266: 1:    '3, 2, 9',
266: 1:    '10, 10, 0',
266: 1:    '0, 0, 1',
266: 1:    '0, 1, 1',
266: 1:    '0, 0, 2',
266: 1:    '2, 0, 2',
266: 1:    '0, 1, 2',
266: 1:    '1, 1, 2',
266: 1:    '2, 1, 3',
266: 1:    '3, 1, 4',
266: 1:    '2, 1, 1',
266: 1:    '2, 2, 6',
266: 1:    '6, 1, 11',
266: 1:    '5, 0, 1',
266: 1:    '3, 1, 8',
266: 1:    '3, 2, 10',
266: 1:    '3, 2, 8',
266: 1:    '6, 0, 11',
266: 1:    '1, 4, 11',
266: 1:    '0, 3, 10',
266: 1:    '1, 4, 12',
266: 1:    '1, 1, 7',
266: 1:    '2, 1, 7',
266: 1:    '7, 1, 11',
266: 1:    '7, 1, 8',
266: 1:    '7, 1, 13',
266: 1:    '43, 1, 46',
266: 1:    '40, 1, 46',
266: 1:    '40, 2, 47',
266: 1:    '40, 2, 50',
266: 1:    '40, 2, 52',
266: 1:    '22, 2, 33',
266: 1:    '0, 2, 10'
266: 1:  ]
266: 1:}
266: 1:Scores: 20697
266: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
266: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
267: 1:BoardData {
267: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
267: 1:  'expectedAnswer': 'true',
267: 1:  'history': [
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '0, 1, 5',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '1, 0, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '1, 0, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 1, 7',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '4, 2, 14',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '3, 2, 14',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '0, 2, 5',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 1, 6',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '3, 1, 9',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '3, 2, 9',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '10, 10, 0',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '0, 0, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '0, 1, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '0, 0, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '2, 0, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '0, 1, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '1, 1, 2',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '2, 1, 3',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '3, 1, 4',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '2, 1, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '2, 2, 6',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '6, 1, 11',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '5, 0, 1',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 1, 8',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 2, 10',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '3, 2, 8',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '6, 0, 11',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '1, 4, 11',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '0, 3, 10',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '1, 4, 12',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '1, 1, 7',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '2, 1, 7',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '7, 1, 11',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '7, 1, 8',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '7, 1, 13',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '43, 1, 46',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '40, 1, 46',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '40, 2, 47',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '40, 2, 50',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '40, 2, 52',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'false',
267: 1:      'question': '22, 2, 33',
267: 1:      'valid': true
267: 1:    },
267: 1:    {
267: 1:      'answer': 'true',
267: 1:      'question': '0, 2, 10',
267: 1:      'valid': true
267: 1:    }
267: 1:  ],
267: 1:  'level': 10,
267: 1:  'nextQuestion': '1000000, 1000, 1000100',
267: 1:  'questions': [
267: 1:    '0, 1, 5',
267: 1:    '1, 0, 1',
267: 1:    '1, 0, 2',
267: 1:    '3, 1, 7',
267: 1:    '4, 2, 14',
267: 1:    '3, 2, 14',
267: 1:    '0, 2, 5',
267: 1:    '3, 1, 6',
267: 1:    '3, 1, 9',
267: 1:    '3, 2, 9',
267: 1:    '10, 10, 0',
267: 1:    '0, 0, 1',
267: 1:    '0, 1, 1',
267: 1:    '0, 0, 2',
267: 1:    '2, 0, 2',
267: 1:    '0, 1, 2',
267: 1:    '1, 1, 2',
267: 1:    '2, 1, 3',
267: 1:    '3, 1, 4',
267: 1:    '2, 1, 1',
267: 1:    '2, 2, 6',
267: 1:    '6, 1, 11',
267: 1:    '5, 0, 1',
267: 1:    '3, 1, 8',
267: 1:    '3, 2, 10',
267: 1:    '3, 2, 8',
267: 1:    '6, 0, 11',
267: 1:    '1, 4, 11',
267: 1:    '0, 3, 10',
267: 1:    '1, 4, 12',
267: 1:    '1, 1, 7',
267: 1:    '2, 1, 7',
267: 1:    '7, 1, 11',
267: 1:    '7, 1, 8',
267: 1:    '7, 1, 13',
267: 1:    '43, 1, 46',
267: 1:    '40, 1, 46',
267: 1:    '40, 2, 47',
267: 1:    '40, 2, 50',
267: 1:    '40, 2, 52',
267: 1:    '22, 2, 33',
267: 1:    '0, 2, 10',
267: 1:    '1000000, 1000, 1000100'
267: 1:  ]
267: 1:}
267: 1:Scores: 20704
267: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true']')
267: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
268: 1:BoardData {
268: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
268: 1:  'expectedAnswer': 'false',
268: 1:  'history': [
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '0, 1, 5',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '1, 0, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '1, 0, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 1, 7',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '4, 2, 14',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '3, 2, 14',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '0, 2, 5',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 1, 6',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '3, 1, 9',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '3, 2, 9',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '10, 10, 0',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '0, 0, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '0, 1, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '0, 0, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '2, 0, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '0, 1, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '1, 1, 2',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '2, 1, 3',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '3, 1, 4',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '2, 1, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '2, 2, 6',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '6, 1, 11',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '5, 0, 1',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 1, 8',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 2, 10',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '3, 2, 8',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '6, 0, 11',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '1, 4, 11',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '0, 3, 10',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '1, 4, 12',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '1, 1, 7',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '2, 1, 7',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '7, 1, 11',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '7, 1, 8',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '7, 1, 13',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '43, 1, 46',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '40, 1, 46',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '40, 2, 47',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '40, 2, 50',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '40, 2, 52',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'false',
268: 1:      'question': '22, 2, 33',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '0, 2, 10',
268: 1:      'valid': true
268: 1:    },
268: 1:    {
268: 1:      'answer': 'true',
268: 1:      'question': '1000000, 1000, 1000100',
268: 1:      'valid': true
268: 1:    }
268: 1:  ],
268: 1:  'level': 10,
268: 1:  'nextQuestion': '2, 1000000, 100003',
268: 1:  'questions': [
268: 1:    '0, 1, 5',
268: 1:    '1, 0, 1',
268: 1:    '1, 0, 2',
268: 1:    '3, 1, 7',
268: 1:    '4, 2, 14',
268: 1:    '3, 2, 14',
268: 1:    '0, 2, 5',
268: 1:    '3, 1, 6',
268: 1:    '3, 1, 9',
268: 1:    '3, 2, 9',
268: 1:    '10, 10, 0',
268: 1:    '0, 0, 1',
268: 1:    '0, 1, 1',
268: 1:    '0, 0, 2',
268: 1:    '2, 0, 2',
268: 1:    '0, 1, 2',
268: 1:    '1, 1, 2',
268: 1:    '2, 1, 3',
268: 1:    '3, 1, 4',
268: 1:    '2, 1, 1',
268: 1:    '2, 2, 6',
268: 1:    '6, 1, 11',
268: 1:    '5, 0, 1',
268: 1:    '3, 1, 8',
268: 1:    '3, 2, 10',
268: 1:    '3, 2, 8',
268: 1:    '6, 0, 11',
268: 1:    '1, 4, 11',
268: 1:    '0, 3, 10',
268: 1:    '1, 4, 12',
268: 1:    '1, 1, 7',
268: 1:    '2, 1, 7',
268: 1:    '7, 1, 11',
268: 1:    '7, 1, 8',
268: 1:    '7, 1, 13',
268: 1:    '43, 1, 46',
268: 1:    '40, 1, 46',
268: 1:    '40, 2, 47',
268: 1:    '40, 2, 50',
268: 1:    '40, 2, 52',
268: 1:    '22, 2, 33',
268: 1:    '0, 2, 10',
268: 1:    '1000000, 1000, 1000100',
268: 1:    '2, 1000000, 100003'
268: 1:  ]
268: 1:}
268: 1:Scores: 20711
268: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false']')
268: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
269: 1:BoardData {
269: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
269: 1:  'expectedAnswer': 'true',
269: 1:  'history': [
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '0, 1, 5',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '1, 0, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '1, 0, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 1, 7',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '4, 2, 14',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '3, 2, 14',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '0, 2, 5',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 1, 6',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '3, 1, 9',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '3, 2, 9',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '10, 10, 0',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '0, 0, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '0, 1, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '0, 0, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '2, 0, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '0, 1, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '1, 1, 2',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '2, 1, 3',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '3, 1, 4',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '2, 1, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '2, 2, 6',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '6, 1, 11',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '5, 0, 1',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 1, 8',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 2, 10',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '3, 2, 8',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '6, 0, 11',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '1, 4, 11',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '0, 3, 10',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '1, 4, 12',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '1, 1, 7',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '2, 1, 7',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '7, 1, 11',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '7, 1, 8',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '7, 1, 13',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '43, 1, 46',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '40, 1, 46',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '40, 2, 47',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '40, 2, 50',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '40, 2, 52',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '22, 2, 33',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '0, 2, 10',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '1000000, 1000, 1000100',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'false',
269: 1:      'question': '2, 1000000, 100003',
269: 1:      'valid': true
269: 1:    }
269: 1:  ],
269: 1:  'level': 10,
269: 1:  'nextQuestion': '20, 0, 19',
269: 1:  'questions': [
269: 1:    '0, 1, 5',
269: 1:    '1, 0, 1',
269: 1:    '1, 0, 2',
269: 1:    '3, 1, 7',
269: 1:    '4, 2, 14',
269: 1:    '3, 2, 14',
269: 1:    '0, 2, 5',
269: 1:    '3, 1, 6',
269: 1:    '3, 1, 9',
269: 1:    '3, 2, 9',
269: 1:    '10, 10, 0',
269: 1:    '0, 0, 1',
269: 1:    '0, 1, 1',
269: 1:    '0, 0, 2',
269: 1:    '2, 0, 2',
269: 1:    '0, 1, 2',
269: 1:    '1, 1, 2',
269: 1:    '2, 1, 3',
269: 1:    '3, 1, 4',
269: 1:    '2, 1, 1',
269: 1:    '2, 2, 6',
269: 1:    '6, 1, 11',
269: 1:    '5, 0, 1',
269: 1:    '3, 1, 8',
269: 1:    '3, 2, 10',
269: 1:    '3, 2, 8',
269: 1:    '6, 0, 11',
269: 1:    '1, 4, 11',
269: 1:    '0, 3, 10',
269: 1:    '1, 4, 12',
269: 1:    '1, 1, 7',
269: 1:    '2, 1, 7',
269: 1:    '7, 1, 11',
269: 1:    '7, 1, 8',
269: 1:    '7, 1, 13',
269: 1:    '43, 1, 46',
269: 1:    '40, 1, 46',
269: 1:    '40, 2, 47',
269: 1:    '40, 2, 50',
269: 1:    '40, 2, 52',
269: 1:    '22, 2, 33',
269: 1:    '0, 2, 10',
269: 1:    '1000000, 1000, 1000100',
269: 1:    '2, 1000000, 100003',
269: 1:    '20, 0, 19'
269: 1:  ]
269: 1:}
269: 1:Scores: 20718
269: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true']')
269: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
270: 1:BoardData {
270: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
270: 1:  'expectedAnswer': 'false',
270: 1:  'history': [
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '0, 1, 5',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '1, 0, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '1, 0, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 1, 7',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '4, 2, 14',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '3, 2, 14',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '0, 2, 5',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 1, 6',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '3, 1, 9',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '3, 2, 9',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '10, 10, 0',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '0, 0, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '0, 1, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '0, 0, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '2, 0, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '0, 1, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '1, 1, 2',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '2, 1, 3',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '3, 1, 4',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '2, 1, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '2, 2, 6',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '6, 1, 11',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '5, 0, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 1, 8',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 2, 10',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '3, 2, 8',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '6, 0, 11',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '1, 4, 11',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '0, 3, 10',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '1, 4, 12',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '1, 1, 7',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '2, 1, 7',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '7, 1, 11',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '7, 1, 8',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '7, 1, 13',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '43, 1, 46',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '40, 1, 46',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '40, 2, 47',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '40, 2, 50',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '40, 2, 52',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '22, 2, 33',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '0, 2, 10',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '1000000, 1000, 1000100',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '2, 1000000, 100003',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '20, 0, 19',
270: 1:      'valid': true
270: 1:    }
270: 1:  ],
270: 1:  'level': 10,
270: 1:  'nextQuestion': '20, 0, 21',
270: 1:  'questions': [
270: 1:    '0, 1, 5',
270: 1:    '1, 0, 1',
270: 1:    '1, 0, 2',
270: 1:    '3, 1, 7',
270: 1:    '4, 2, 14',
270: 1:    '3, 2, 14',
270: 1:    '0, 2, 5',
270: 1:    '3, 1, 6',
270: 1:    '3, 1, 9',
270: 1:    '3, 2, 9',
270: 1:    '10, 10, 0',
270: 1:    '0, 0, 1',
270: 1:    '0, 1, 1',
270: 1:    '0, 0, 2',
270: 1:    '2, 0, 2',
270: 1:    '0, 1, 2',
270: 1:    '1, 1, 2',
270: 1:    '2, 1, 3',
270: 1:    '3, 1, 4',
270: 1:    '2, 1, 1',
270: 1:    '2, 2, 6',
270: 1:    '6, 1, 11',
270: 1:    '5, 0, 1',
270: 1:    '3, 1, 8',
270: 1:    '3, 2, 10',
270: 1:    '3, 2, 8',
270: 1:    '6, 0, 11',
270: 1:    '1, 4, 11',
270: 1:    '0, 3, 10',
270: 1:    '1, 4, 12',
270: 1:    '1, 1, 7',
270: 1:    '2, 1, 7',
270: 1:    '7, 1, 11',
270: 1:    '7, 1, 8',
270: 1:    '7, 1, 13',
270: 1:    '43, 1, 46',
270: 1:    '40, 1, 46',
270: 1:    '40, 2, 47',
270: 1:    '40, 2, 50',
270: 1:    '40, 2, 52',
270: 1:    '22, 2, 33',
270: 1:    '0, 2, 10',
270: 1:    '1000000, 1000, 1000100',
270: 1:    '2, 1000000, 100003',
270: 1:    '20, 0, 19',
270: 1:    '20, 0, 21'
270: 1:  ]
270: 1:}
270: 1:Scores: 20725
270: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false']')
270: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
271: 1:BoardData {
271: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
271: 1:  'expectedAnswer': 'false',
271: 1:  'history': [
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '0, 1, 5',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '1, 0, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '1, 0, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 1, 7',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '4, 2, 14',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '3, 2, 14',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '0, 2, 5',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 1, 6',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '3, 1, 9',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '3, 2, 9',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '10, 10, 0',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '0, 0, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '0, 1, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '0, 0, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '2, 0, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '0, 1, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '1, 1, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '2, 1, 3',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '3, 1, 4',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '2, 1, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '2, 2, 6',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '6, 1, 11',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '5, 0, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 1, 8',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 2, 10',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 2, 8',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '6, 0, 11',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '1, 4, 11',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '0, 3, 10',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '1, 4, 12',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '1, 1, 7',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '2, 1, 7',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '7, 1, 11',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '7, 1, 8',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '7, 1, 13',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '43, 1, 46',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '40, 1, 46',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '40, 2, 47',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '40, 2, 50',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '40, 2, 52',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '22, 2, 33',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '0, 2, 10',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '1000000, 1000, 1000100',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '2, 1000000, 100003',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '20, 0, 19',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '20, 0, 21',
271: 1:      'valid': true
271: 1:    }
271: 1:  ],
271: 1:  'level': 10,
271: 1:  'nextQuestion': '20, 4, 51',
271: 1:  'questions': [
271: 1:    '0, 1, 5',
271: 1:    '1, 0, 1',
271: 1:    '1, 0, 2',
271: 1:    '3, 1, 7',
271: 1:    '4, 2, 14',
271: 1:    '3, 2, 14',
271: 1:    '0, 2, 5',
271: 1:    '3, 1, 6',
271: 1:    '3, 1, 9',
271: 1:    '3, 2, 9',
271: 1:    '10, 10, 0',
271: 1:    '0, 0, 1',
271: 1:    '0, 1, 1',
271: 1:    '0, 0, 2',
271: 1:    '2, 0, 2',
271: 1:    '0, 1, 2',
271: 1:    '1, 1, 2',
271: 1:    '2, 1, 3',
271: 1:    '3, 1, 4',
271: 1:    '2, 1, 1',
271: 1:    '2, 2, 6',
271: 1:    '6, 1, 11',
271: 1:    '5, 0, 1',
271: 1:    '3, 1, 8',
271: 1:    '3, 2, 10',
271: 1:    '3, 2, 8',
271: 1:    '6, 0, 11',
271: 1:    '1, 4, 11',
271: 1:    '0, 3, 10',
271: 1:    '1, 4, 12',
271: 1:    '1, 1, 7',
271: 1:    '2, 1, 7',
271: 1:    '7, 1, 11',
271: 1:    '7, 1, 8',
271: 1:    '7, 1, 13',
271: 1:    '43, 1, 46',
271: 1:    '40, 1, 46',
271: 1:    '40, 2, 47',
271: 1:    '40, 2, 50',
271: 1:    '40, 2, 52',
271: 1:    '22, 2, 33',
271: 1:    '0, 2, 10',
271: 1:    '1000000, 1000, 1000100',
271: 1:    '2, 1000000, 100003',
271: 1:    '20, 0, 19',
271: 1:    '20, 0, 21',
271: 1:    '20, 4, 51'
271: 1:  ]
271: 1:}
271: 1:Scores: 20732
271: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false', 'false']')
271: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
272: 1:BoardData {
272: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
272: 1:  'expectedAnswer': 'true',
272: 1:  'history': [
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '0, 1, 5',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '1, 0, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 0, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 1, 7',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '4, 2, 14',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '3, 2, 14',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '0, 2, 5',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 1, 6',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '3, 1, 9',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '3, 2, 9',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '10, 10, 0',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '0, 0, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '0, 1, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '0, 0, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '2, 0, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '0, 1, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 1, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '2, 1, 3',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '3, 1, 4',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '2, 1, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '2, 2, 6',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '6, 1, 11',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '5, 0, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 1, 8',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 2, 10',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 2, 8',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '6, 0, 11',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '1, 4, 11',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '0, 3, 10',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 4, 12',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 1, 7',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '2, 1, 7',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '7, 1, 11',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '7, 1, 8',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '7, 1, 13',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '43, 1, 46',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '40, 1, 46',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '40, 2, 47',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '40, 2, 50',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '40, 2, 52',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '22, 2, 33',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '0, 2, 10',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '1000000, 1000, 1000100',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '2, 1000000, 100003',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '20, 0, 19',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '20, 0, 21',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '20, 4, 51',
272: 1:      'valid': true
272: 1:    }
272: 1:  ],
272: 1:  'level': 10,
272: 1:  'nextQuestion': '20, 4, 39',
272: 1:  'questions': [
272: 1:    '0, 1, 5',
272: 1:    '1, 0, 1',
272: 1:    '1, 0, 2',
272: 1:    '3, 1, 7',
272: 1:    '4, 2, 14',
272: 1:    '3, 2, 14',
272: 1:    '0, 2, 5',
272: 1:    '3, 1, 6',
272: 1:    '3, 1, 9',
272: 1:    '3, 2, 9',
272: 1:    '10, 10, 0',
272: 1:    '0, 0, 1',
272: 1:    '0, 1, 1',
272: 1:    '0, 0, 2',
272: 1:    '2, 0, 2',
272: 1:    '0, 1, 2',
272: 1:    '1, 1, 2',
272: 1:    '2, 1, 3',
272: 1:    '3, 1, 4',
272: 1:    '2, 1, 1',
272: 1:    '2, 2, 6',
272: 1:    '6, 1, 11',
272: 1:    '5, 0, 1',
272: 1:    '3, 1, 8',
272: 1:    '3, 2, 10',
272: 1:    '3, 2, 8',
272: 1:    '6, 0, 11',
272: 1:    '1, 4, 11',
272: 1:    '0, 3, 10',
272: 1:    '1, 4, 12',
272: 1:    '1, 1, 7',
272: 1:    '2, 1, 7',
272: 1:    '7, 1, 11',
272: 1:    '7, 1, 8',
272: 1:    '7, 1, 13',
272: 1:    '43, 1, 46',
272: 1:    '40, 1, 46',
272: 1:    '40, 2, 47',
272: 1:    '40, 2, 50',
272: 1:    '40, 2, 52',
272: 1:    '22, 2, 33',
272: 1:    '0, 2, 10',
272: 1:    '1000000, 1000, 1000100',
272: 1:    '2, 1000000, 100003',
272: 1:    '20, 0, 19',
272: 1:    '20, 0, 21',
272: 1:    '20, 4, 51',
272: 1:    '20, 4, 39'
272: 1:  ]
272: 1:}
272: 1:Scores: 20739
272: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false', 'false', 'true']')
272: 1:Fire Event: PassTest{complexity=35, testCount=48}
272: 1:Fire Event: NextAlgorithm{complexity=35, time=0}
------------------------------------------
273: 1:BoardData {
273: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
273: 1:  'history': [
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '0, 1, 5',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '1, 0, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 0, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 1, 7',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '4, 2, 14',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 2, 14',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '0, 2, 5',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 1, 6',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 1, 9',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 2, 9',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '10, 10, 0',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '0, 0, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '0, 1, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '0, 0, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '2, 0, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '0, 1, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 1, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '2, 1, 3',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 1, 4',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '2, 1, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '2, 2, 6',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '6, 1, 11',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '5, 0, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 1, 8',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 2, 10',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 2, 8',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '6, 0, 11',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '1, 4, 11',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '0, 3, 10',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 4, 12',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 1, 7',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '2, 1, 7',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '7, 1, 11',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '7, 1, 8',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '7, 1, 13',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '43, 1, 46',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '40, 1, 46',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '40, 2, 47',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '40, 2, 50',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '40, 2, 52',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '22, 2, 33',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '0, 2, 10',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '1000000, 1000, 1000100',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '2, 1000000, 100003',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '20, 0, 19',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '20, 0, 21',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '20, 4, 51',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '20, 4, 39',
273: 1:      'valid': true
273: 1:    }
273: 1:  ],
273: 1:  'level': 10,
273: 1:  'questions': []
273: 1:}
273: 1:Scores: 25470
273: 1:Answer: message('StartNextLevel')
273: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
274: 1:BoardData {
274: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
274: 1:  'expectedAnswer': '1',
274: 1:  'history': [],
274: 1:  'level': 11,
274: 1:  'nextQuestion': '1',
274: 1:  'questions': ['1']
274: 1:}
274: 1:Scores: 25470
274: 1:Answer: message('['1']')
274: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
275: 1:BoardData {
275: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
275: 1:  'expectedAnswer': '2',
275: 1:  'history': [{
275: 1:    'answer': '1',
275: 1:    'question': '1',
275: 1:    'valid': true
275: 1:  }],
275: 1:  'level': 11,
275: 1:  'nextQuestion': '2',
275: 1:  'questions': [
275: 1:    '1',
275: 1:    '2'
275: 1:  ]
275: 1:}
275: 1:Scores: 25486
275: 1:Answer: message('['1', '2']')
275: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
276: 1:BoardData {
276: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
276: 1:  'expectedAnswer': '6',
276: 1:  'history': [
276: 1:    {
276: 1:      'answer': '1',
276: 1:      'question': '1',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': '2',
276: 1:      'question': '2',
276: 1:      'valid': true
276: 1:    }
276: 1:  ],
276: 1:  'level': 11,
276: 1:  'nextQuestion': '3',
276: 1:  'questions': [
276: 1:    '1',
276: 1:    '2',
276: 1:    '3'
276: 1:  ]
276: 1:}
276: 1:Scores: 25502
276: 1:Answer: message('['1', '2', '6']')
276: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
277: 1:BoardData {
277: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
277: 1:  'expectedAnswer': '24',
277: 1:  'history': [
277: 1:    {
277: 1:      'answer': '1',
277: 1:      'question': '1',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': '2',
277: 1:      'question': '2',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': '6',
277: 1:      'question': '3',
277: 1:      'valid': true
277: 1:    }
277: 1:  ],
277: 1:  'level': 11,
277: 1:  'nextQuestion': '4',
277: 1:  'questions': [
277: 1:    '1',
277: 1:    '2',
277: 1:    '3',
277: 1:    '4'
277: 1:  ]
277: 1:}
277: 1:Scores: 25518
277: 1:Answer: message('['1', '2', '6', '24']')
277: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
278: 1:BoardData {
278: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
278: 1:  'expectedAnswer': '120',
278: 1:  'history': [
278: 1:    {
278: 1:      'answer': '1',
278: 1:      'question': '1',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': '2',
278: 1:      'question': '2',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': '6',
278: 1:      'question': '3',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': '24',
278: 1:      'question': '4',
278: 1:      'valid': true
278: 1:    }
278: 1:  ],
278: 1:  'level': 11,
278: 1:  'nextQuestion': '5',
278: 1:  'questions': [
278: 1:    '1',
278: 1:    '2',
278: 1:    '3',
278: 1:    '4',
278: 1:    '5'
278: 1:  ]
278: 1:}
278: 1:Scores: 25534
278: 1:Answer: message('['1', '2', '6', '24', '120']')
278: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
279: 1:BoardData {
279: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
279: 1:  'expectedAnswer': '720',
279: 1:  'history': [
279: 1:    {
279: 1:      'answer': '1',
279: 1:      'question': '1',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': '2',
279: 1:      'question': '2',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': '6',
279: 1:      'question': '3',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': '24',
279: 1:      'question': '4',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': '120',
279: 1:      'question': '5',
279: 1:      'valid': true
279: 1:    }
279: 1:  ],
279: 1:  'level': 11,
279: 1:  'nextQuestion': '6',
279: 1:  'questions': [
279: 1:    '1',
279: 1:    '2',
279: 1:    '3',
279: 1:    '4',
279: 1:    '5',
279: 1:    '6'
279: 1:  ]
279: 1:}
279: 1:Scores: 25550
279: 1:Answer: message('['1', '2', '6', '24', '120', '720']')
279: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
280: 1:BoardData {
280: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
280: 1:  'expectedAnswer': '5040',
280: 1:  'history': [
280: 1:    {
280: 1:      'answer': '1',
280: 1:      'question': '1',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': '2',
280: 1:      'question': '2',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': '6',
280: 1:      'question': '3',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': '24',
280: 1:      'question': '4',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': '120',
280: 1:      'question': '5',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': '720',
280: 1:      'question': '6',
280: 1:      'valid': true
280: 1:    }
280: 1:  ],
280: 1:  'level': 11,
280: 1:  'nextQuestion': '7',
280: 1:  'questions': [
280: 1:    '1',
280: 1:    '2',
280: 1:    '3',
280: 1:    '4',
280: 1:    '5',
280: 1:    '6',
280: 1:    '7'
280: 1:  ]
280: 1:}
280: 1:Scores: 25566
280: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040']')
280: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
281: 1:BoardData {
281: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
281: 1:  'expectedAnswer': '40320',
281: 1:  'history': [
281: 1:    {
281: 1:      'answer': '1',
281: 1:      'question': '1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': '2',
281: 1:      'question': '2',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': '6',
281: 1:      'question': '3',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': '24',
281: 1:      'question': '4',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': '120',
281: 1:      'question': '5',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': '720',
281: 1:      'question': '6',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': '5040',
281: 1:      'question': '7',
281: 1:      'valid': true
281: 1:    }
281: 1:  ],
281: 1:  'level': 11,
281: 1:  'nextQuestion': '8',
281: 1:  'questions': [
281: 1:    '1',
281: 1:    '2',
281: 1:    '3',
281: 1:    '4',
281: 1:    '5',
281: 1:    '6',
281: 1:    '7',
281: 1:    '8'
281: 1:  ]
281: 1:}
281: 1:Scores: 25582
281: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320']')
281: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
282: 1:BoardData {
282: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
282: 1:  'expectedAnswer': '362880',
282: 1:  'history': [
282: 1:    {
282: 1:      'answer': '1',
282: 1:      'question': '1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': '2',
282: 1:      'question': '2',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': '6',
282: 1:      'question': '3',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': '24',
282: 1:      'question': '4',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': '120',
282: 1:      'question': '5',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': '720',
282: 1:      'question': '6',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': '5040',
282: 1:      'question': '7',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': '40320',
282: 1:      'question': '8',
282: 1:      'valid': true
282: 1:    }
282: 1:  ],
282: 1:  'level': 11,
282: 1:  'nextQuestion': '9',
282: 1:  'questions': [
282: 1:    '1',
282: 1:    '2',
282: 1:    '3',
282: 1:    '4',
282: 1:    '5',
282: 1:    '6',
282: 1:    '7',
282: 1:    '8',
282: 1:    '9'
282: 1:  ]
282: 1:}
282: 1:Scores: 25598
282: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880']')
282: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
283: 1:BoardData {
283: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
283: 1:  'expectedAnswer': '3628800',
283: 1:  'history': [
283: 1:    {
283: 1:      'answer': '1',
283: 1:      'question': '1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': '2',
283: 1:      'question': '2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': '6',
283: 1:      'question': '3',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': '24',
283: 1:      'question': '4',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': '120',
283: 1:      'question': '5',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': '720',
283: 1:      'question': '6',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': '5040',
283: 1:      'question': '7',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': '40320',
283: 1:      'question': '8',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': '362880',
283: 1:      'question': '9',
283: 1:      'valid': true
283: 1:    }
283: 1:  ],
283: 1:  'level': 11,
283: 1:  'nextQuestion': '10',
283: 1:  'questions': [
283: 1:    '1',
283: 1:    '2',
283: 1:    '3',
283: 1:    '4',
283: 1:    '5',
283: 1:    '6',
283: 1:    '7',
283: 1:    '8',
283: 1:    '9',
283: 1:    '10'
283: 1:  ]
283: 1:}
283: 1:Scores: 25614
283: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800']')
283: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
284: 1:BoardData {
284: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
284: 1:  'expectedAnswer': '39916800',
284: 1:  'history': [
284: 1:    {
284: 1:      'answer': '1',
284: 1:      'question': '1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '2',
284: 1:      'question': '2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '6',
284: 1:      'question': '3',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '24',
284: 1:      'question': '4',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '120',
284: 1:      'question': '5',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '720',
284: 1:      'question': '6',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '5040',
284: 1:      'question': '7',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '40320',
284: 1:      'question': '8',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '362880',
284: 1:      'question': '9',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': '3628800',
284: 1:      'question': '10',
284: 1:      'valid': true
284: 1:    }
284: 1:  ],
284: 1:  'level': 11,
284: 1:  'nextQuestion': '11',
284: 1:  'questions': [
284: 1:    '1',
284: 1:    '2',
284: 1:    '3',
284: 1:    '4',
284: 1:    '5',
284: 1:    '6',
284: 1:    '7',
284: 1:    '8',
284: 1:    '9',
284: 1:    '10',
284: 1:    '11'
284: 1:  ]
284: 1:}
284: 1:Scores: 25630
284: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800']')
284: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
285: 1:BoardData {
285: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
285: 1:  'expectedAnswer': '479001600',
285: 1:  'history': [
285: 1:    {
285: 1:      'answer': '1',
285: 1:      'question': '1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '2',
285: 1:      'question': '2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '6',
285: 1:      'question': '3',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '24',
285: 1:      'question': '4',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '120',
285: 1:      'question': '5',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '720',
285: 1:      'question': '6',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '5040',
285: 1:      'question': '7',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '40320',
285: 1:      'question': '8',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '362880',
285: 1:      'question': '9',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '3628800',
285: 1:      'question': '10',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': '39916800',
285: 1:      'question': '11',
285: 1:      'valid': true
285: 1:    }
285: 1:  ],
285: 1:  'level': 11,
285: 1:  'nextQuestion': '12',
285: 1:  'questions': [
285: 1:    '1',
285: 1:    '2',
285: 1:    '3',
285: 1:    '4',
285: 1:    '5',
285: 1:    '6',
285: 1:    '7',
285: 1:    '8',
285: 1:    '9',
285: 1:    '10',
285: 1:    '11',
285: 1:    '12'
285: 1:  ]
285: 1:}
285: 1:Scores: 25646
285: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600']')
285: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
286: 1:BoardData {
286: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
286: 1:  'expectedAnswer': '6227020800',
286: 1:  'history': [
286: 1:    {
286: 1:      'answer': '1',
286: 1:      'question': '1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '2',
286: 1:      'question': '2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '6',
286: 1:      'question': '3',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '24',
286: 1:      'question': '4',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '120',
286: 1:      'question': '5',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '720',
286: 1:      'question': '6',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '5040',
286: 1:      'question': '7',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '40320',
286: 1:      'question': '8',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '362880',
286: 1:      'question': '9',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '3628800',
286: 1:      'question': '10',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '39916800',
286: 1:      'question': '11',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': '479001600',
286: 1:      'question': '12',
286: 1:      'valid': true
286: 1:    }
286: 1:  ],
286: 1:  'level': 11,
286: 1:  'nextQuestion': '13',
286: 1:  'questions': [
286: 1:    '1',
286: 1:    '2',
286: 1:    '3',
286: 1:    '4',
286: 1:    '5',
286: 1:    '6',
286: 1:    '7',
286: 1:    '8',
286: 1:    '9',
286: 1:    '10',
286: 1:    '11',
286: 1:    '12',
286: 1:    '13'
286: 1:  ]
286: 1:}
286: 1:Scores: 25662
286: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800']')
286: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
287: 1:BoardData {
287: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
287: 1:  'expectedAnswer': '87178291200',
287: 1:  'history': [
287: 1:    {
287: 1:      'answer': '1',
287: 1:      'question': '1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '2',
287: 1:      'question': '2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '6',
287: 1:      'question': '3',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '24',
287: 1:      'question': '4',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '120',
287: 1:      'question': '5',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '720',
287: 1:      'question': '6',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '5040',
287: 1:      'question': '7',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '40320',
287: 1:      'question': '8',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '362880',
287: 1:      'question': '9',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '3628800',
287: 1:      'question': '10',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '39916800',
287: 1:      'question': '11',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '479001600',
287: 1:      'question': '12',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': '6227020800',
287: 1:      'question': '13',
287: 1:      'valid': true
287: 1:    }
287: 1:  ],
287: 1:  'level': 11,
287: 1:  'nextQuestion': '14',
287: 1:  'questions': [
287: 1:    '1',
287: 1:    '2',
287: 1:    '3',
287: 1:    '4',
287: 1:    '5',
287: 1:    '6',
287: 1:    '7',
287: 1:    '8',
287: 1:    '9',
287: 1:    '10',
287: 1:    '11',
287: 1:    '12',
287: 1:    '13',
287: 1:    '14'
287: 1:  ]
287: 1:}
287: 1:Scores: 25678
287: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200']')
287: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
288: 1:BoardData {
288: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
288: 1:  'expectedAnswer': '1307674368000',
288: 1:  'history': [
288: 1:    {
288: 1:      'answer': '1',
288: 1:      'question': '1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '2',
288: 1:      'question': '2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '6',
288: 1:      'question': '3',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '24',
288: 1:      'question': '4',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '120',
288: 1:      'question': '5',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '720',
288: 1:      'question': '6',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '5040',
288: 1:      'question': '7',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '40320',
288: 1:      'question': '8',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '362880',
288: 1:      'question': '9',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '3628800',
288: 1:      'question': '10',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '39916800',
288: 1:      'question': '11',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '479001600',
288: 1:      'question': '12',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '6227020800',
288: 1:      'question': '13',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': '87178291200',
288: 1:      'question': '14',
288: 1:      'valid': true
288: 1:    }
288: 1:  ],
288: 1:  'level': 11,
288: 1:  'nextQuestion': '15',
288: 1:  'questions': [
288: 1:    '1',
288: 1:    '2',
288: 1:    '3',
288: 1:    '4',
288: 1:    '5',
288: 1:    '6',
288: 1:    '7',
288: 1:    '8',
288: 1:    '9',
288: 1:    '10',
288: 1:    '11',
288: 1:    '12',
288: 1:    '13',
288: 1:    '14',
288: 1:    '15'
288: 1:  ]
288: 1:}
288: 1:Scores: 25694
288: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000']')
288: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
289: 1:BoardData {
289: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
289: 1:  'expectedAnswer': '20922789888000',
289: 1:  'history': [
289: 1:    {
289: 1:      'answer': '1',
289: 1:      'question': '1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '2',
289: 1:      'question': '2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '6',
289: 1:      'question': '3',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '24',
289: 1:      'question': '4',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '120',
289: 1:      'question': '5',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '720',
289: 1:      'question': '6',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '5040',
289: 1:      'question': '7',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '40320',
289: 1:      'question': '8',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '362880',
289: 1:      'question': '9',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '3628800',
289: 1:      'question': '10',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '39916800',
289: 1:      'question': '11',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '479001600',
289: 1:      'question': '12',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '6227020800',
289: 1:      'question': '13',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '87178291200',
289: 1:      'question': '14',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': '1307674368000',
289: 1:      'question': '15',
289: 1:      'valid': true
289: 1:    }
289: 1:  ],
289: 1:  'level': 11,
289: 1:  'nextQuestion': '16',
289: 1:  'questions': [
289: 1:    '1',
289: 1:    '2',
289: 1:    '3',
289: 1:    '4',
289: 1:    '5',
289: 1:    '6',
289: 1:    '7',
289: 1:    '8',
289: 1:    '9',
289: 1:    '10',
289: 1:    '11',
289: 1:    '12',
289: 1:    '13',
289: 1:    '14',
289: 1:    '15',
289: 1:    '16'
289: 1:  ]
289: 1:}
289: 1:Scores: 25710
289: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000']')
289: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
290: 1:BoardData {
290: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
290: 1:  'expectedAnswer': '355687428096000',
290: 1:  'history': [
290: 1:    {
290: 1:      'answer': '1',
290: 1:      'question': '1',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '2',
290: 1:      'question': '2',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '6',
290: 1:      'question': '3',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '24',
290: 1:      'question': '4',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '120',
290: 1:      'question': '5',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '720',
290: 1:      'question': '6',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '5040',
290: 1:      'question': '7',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '40320',
290: 1:      'question': '8',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '362880',
290: 1:      'question': '9',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '3628800',
290: 1:      'question': '10',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '39916800',
290: 1:      'question': '11',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '479001600',
290: 1:      'question': '12',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '6227020800',
290: 1:      'question': '13',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '87178291200',
290: 1:      'question': '14',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '1307674368000',
290: 1:      'question': '15',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': '20922789888000',
290: 1:      'question': '16',
290: 1:      'valid': true
290: 1:    }
290: 1:  ],
290: 1:  'level': 11,
290: 1:  'nextQuestion': '17',
290: 1:  'questions': [
290: 1:    '1',
290: 1:    '2',
290: 1:    '3',
290: 1:    '4',
290: 1:    '5',
290: 1:    '6',
290: 1:    '7',
290: 1:    '8',
290: 1:    '9',
290: 1:    '10',
290: 1:    '11',
290: 1:    '12',
290: 1:    '13',
290: 1:    '14',
290: 1:    '15',
290: 1:    '16',
290: 1:    '17'
290: 1:  ]
290: 1:}
290: 1:Scores: 25726
290: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000']')
290: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
291: 1:BoardData {
291: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
291: 1:  'expectedAnswer': '6402373705728000',
291: 1:  'history': [
291: 1:    {
291: 1:      'answer': '1',
291: 1:      'question': '1',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '2',
291: 1:      'question': '2',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '6',
291: 1:      'question': '3',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '24',
291: 1:      'question': '4',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '120',
291: 1:      'question': '5',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '720',
291: 1:      'question': '6',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '5040',
291: 1:      'question': '7',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '40320',
291: 1:      'question': '8',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '362880',
291: 1:      'question': '9',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '3628800',
291: 1:      'question': '10',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '39916800',
291: 1:      'question': '11',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '479001600',
291: 1:      'question': '12',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '6227020800',
291: 1:      'question': '13',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '87178291200',
291: 1:      'question': '14',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '1307674368000',
291: 1:      'question': '15',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '20922789888000',
291: 1:      'question': '16',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': '355687428096000',
291: 1:      'question': '17',
291: 1:      'valid': true
291: 1:    }
291: 1:  ],
291: 1:  'level': 11,
291: 1:  'nextQuestion': '18',
291: 1:  'questions': [
291: 1:    '1',
291: 1:    '2',
291: 1:    '3',
291: 1:    '4',
291: 1:    '5',
291: 1:    '6',
291: 1:    '7',
291: 1:    '8',
291: 1:    '9',
291: 1:    '10',
291: 1:    '11',
291: 1:    '12',
291: 1:    '13',
291: 1:    '14',
291: 1:    '15',
291: 1:    '16',
291: 1:    '17',
291: 1:    '18'
291: 1:  ]
291: 1:}
291: 1:Scores: 25742
291: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000']')
291: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
292: 1:BoardData {
292: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
292: 1:  'expectedAnswer': '121645100408832000',
292: 1:  'history': [
292: 1:    {
292: 1:      'answer': '1',
292: 1:      'question': '1',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '2',
292: 1:      'question': '2',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '6',
292: 1:      'question': '3',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '24',
292: 1:      'question': '4',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '120',
292: 1:      'question': '5',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '720',
292: 1:      'question': '6',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '5040',
292: 1:      'question': '7',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '40320',
292: 1:      'question': '8',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '362880',
292: 1:      'question': '9',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '3628800',
292: 1:      'question': '10',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '39916800',
292: 1:      'question': '11',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '479001600',
292: 1:      'question': '12',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '6227020800',
292: 1:      'question': '13',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '87178291200',
292: 1:      'question': '14',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '1307674368000',
292: 1:      'question': '15',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '20922789888000',
292: 1:      'question': '16',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '355687428096000',
292: 1:      'question': '17',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': '6402373705728000',
292: 1:      'question': '18',
292: 1:      'valid': true
292: 1:    }
292: 1:  ],
292: 1:  'level': 11,
292: 1:  'nextQuestion': '19',
292: 1:  'questions': [
292: 1:    '1',
292: 1:    '2',
292: 1:    '3',
292: 1:    '4',
292: 1:    '5',
292: 1:    '6',
292: 1:    '7',
292: 1:    '8',
292: 1:    '9',
292: 1:    '10',
292: 1:    '11',
292: 1:    '12',
292: 1:    '13',
292: 1:    '14',
292: 1:    '15',
292: 1:    '16',
292: 1:    '17',
292: 1:    '18',
292: 1:    '19'
292: 1:  ]
292: 1:}
292: 1:Scores: 25758
292: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000']')
292: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
293: 1:BoardData {
293: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
293: 1:  'expectedAnswer': '2432902008176640000',
293: 1:  'history': [
293: 1:    {
293: 1:      'answer': '1',
293: 1:      'question': '1',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '2',
293: 1:      'question': '2',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '6',
293: 1:      'question': '3',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '24',
293: 1:      'question': '4',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '120',
293: 1:      'question': '5',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '720',
293: 1:      'question': '6',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '5040',
293: 1:      'question': '7',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '40320',
293: 1:      'question': '8',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '362880',
293: 1:      'question': '9',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '3628800',
293: 1:      'question': '10',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '39916800',
293: 1:      'question': '11',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '479001600',
293: 1:      'question': '12',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '6227020800',
293: 1:      'question': '13',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '87178291200',
293: 1:      'question': '14',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '1307674368000',
293: 1:      'question': '15',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '20922789888000',
293: 1:      'question': '16',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '355687428096000',
293: 1:      'question': '17',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '6402373705728000',
293: 1:      'question': '18',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': '121645100408832000',
293: 1:      'question': '19',
293: 1:      'valid': true
293: 1:    }
293: 1:  ],
293: 1:  'level': 11,
293: 1:  'nextQuestion': '20',
293: 1:  'questions': [
293: 1:    '1',
293: 1:    '2',
293: 1:    '3',
293: 1:    '4',
293: 1:    '5',
293: 1:    '6',
293: 1:    '7',
293: 1:    '8',
293: 1:    '9',
293: 1:    '10',
293: 1:    '11',
293: 1:    '12',
293: 1:    '13',
293: 1:    '14',
293: 1:    '15',
293: 1:    '16',
293: 1:    '17',
293: 1:    '18',
293: 1:    '19',
293: 1:    '20'
293: 1:  ]
293: 1:}
293: 1:Scores: 25774
293: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000']')
293: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
294: 1:BoardData {
294: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
294: 1:  'expectedAnswer': '51090942171709440000',
294: 1:  'history': [
294: 1:    {
294: 1:      'answer': '1',
294: 1:      'question': '1',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '2',
294: 1:      'question': '2',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '6',
294: 1:      'question': '3',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '24',
294: 1:      'question': '4',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '120',
294: 1:      'question': '5',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '720',
294: 1:      'question': '6',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '5040',
294: 1:      'question': '7',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '40320',
294: 1:      'question': '8',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '362880',
294: 1:      'question': '9',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '3628800',
294: 1:      'question': '10',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '39916800',
294: 1:      'question': '11',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '479001600',
294: 1:      'question': '12',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '6227020800',
294: 1:      'question': '13',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '87178291200',
294: 1:      'question': '14',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '1307674368000',
294: 1:      'question': '15',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '20922789888000',
294: 1:      'question': '16',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '355687428096000',
294: 1:      'question': '17',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '6402373705728000',
294: 1:      'question': '18',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '121645100408832000',
294: 1:      'question': '19',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': '2432902008176640000',
294: 1:      'question': '20',
294: 1:      'valid': true
294: 1:    }
294: 1:  ],
294: 1:  'level': 11,
294: 1:  'nextQuestion': '21',
294: 1:  'questions': [
294: 1:    '1',
294: 1:    '2',
294: 1:    '3',
294: 1:    '4',
294: 1:    '5',
294: 1:    '6',
294: 1:    '7',
294: 1:    '8',
294: 1:    '9',
294: 1:    '10',
294: 1:    '11',
294: 1:    '12',
294: 1:    '13',
294: 1:    '14',
294: 1:    '15',
294: 1:    '16',
294: 1:    '17',
294: 1:    '18',
294: 1:    '19',
294: 1:    '20',
294: 1:    '21'
294: 1:  ]
294: 1:}
294: 1:Scores: 25790
294: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000']')
294: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
295: 1:BoardData {
295: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
295: 1:  'expectedAnswer': '1124000727777607680000',
295: 1:  'history': [
295: 1:    {
295: 1:      'answer': '1',
295: 1:      'question': '1',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '2',
295: 1:      'question': '2',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '6',
295: 1:      'question': '3',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '24',
295: 1:      'question': '4',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '120',
295: 1:      'question': '5',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '720',
295: 1:      'question': '6',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '5040',
295: 1:      'question': '7',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '40320',
295: 1:      'question': '8',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '362880',
295: 1:      'question': '9',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '3628800',
295: 1:      'question': '10',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '39916800',
295: 1:      'question': '11',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '479001600',
295: 1:      'question': '12',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '6227020800',
295: 1:      'question': '13',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '87178291200',
295: 1:      'question': '14',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '1307674368000',
295: 1:      'question': '15',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '20922789888000',
295: 1:      'question': '16',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '355687428096000',
295: 1:      'question': '17',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '6402373705728000',
295: 1:      'question': '18',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '121645100408832000',
295: 1:      'question': '19',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '2432902008176640000',
295: 1:      'question': '20',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': '51090942171709440000',
295: 1:      'question': '21',
295: 1:      'valid': true
295: 1:    }
295: 1:  ],
295: 1:  'level': 11,
295: 1:  'nextQuestion': '22',
295: 1:  'questions': [
295: 1:    '1',
295: 1:    '2',
295: 1:    '3',
295: 1:    '4',
295: 1:    '5',
295: 1:    '6',
295: 1:    '7',
295: 1:    '8',
295: 1:    '9',
295: 1:    '10',
295: 1:    '11',
295: 1:    '12',
295: 1:    '13',
295: 1:    '14',
295: 1:    '15',
295: 1:    '16',
295: 1:    '17',
295: 1:    '18',
295: 1:    '19',
295: 1:    '20',
295: 1:    '21',
295: 1:    '22'
295: 1:  ]
295: 1:}
295: 1:Scores: 25806
295: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000']')
295: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
296: 1:BoardData {
296: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
296: 1:  'expectedAnswer': '25852016738884976640000',
296: 1:  'history': [
296: 1:    {
296: 1:      'answer': '1',
296: 1:      'question': '1',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '2',
296: 1:      'question': '2',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '6',
296: 1:      'question': '3',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '24',
296: 1:      'question': '4',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '120',
296: 1:      'question': '5',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '720',
296: 1:      'question': '6',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '5040',
296: 1:      'question': '7',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '40320',
296: 1:      'question': '8',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '362880',
296: 1:      'question': '9',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '3628800',
296: 1:      'question': '10',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '39916800',
296: 1:      'question': '11',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '479001600',
296: 1:      'question': '12',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '6227020800',
296: 1:      'question': '13',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '87178291200',
296: 1:      'question': '14',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '1307674368000',
296: 1:      'question': '15',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '20922789888000',
296: 1:      'question': '16',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '355687428096000',
296: 1:      'question': '17',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '6402373705728000',
296: 1:      'question': '18',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '121645100408832000',
296: 1:      'question': '19',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '2432902008176640000',
296: 1:      'question': '20',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '51090942171709440000',
296: 1:      'question': '21',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': '1124000727777607680000',
296: 1:      'question': '22',
296: 1:      'valid': true
296: 1:    }
296: 1:  ],
296: 1:  'level': 11,
296: 1:  'nextQuestion': '23',
296: 1:  'questions': [
296: 1:    '1',
296: 1:    '2',
296: 1:    '3',
296: 1:    '4',
296: 1:    '5',
296: 1:    '6',
296: 1:    '7',
296: 1:    '8',
296: 1:    '9',
296: 1:    '10',
296: 1:    '11',
296: 1:    '12',
296: 1:    '13',
296: 1:    '14',
296: 1:    '15',
296: 1:    '16',
296: 1:    '17',
296: 1:    '18',
296: 1:    '19',
296: 1:    '20',
296: 1:    '21',
296: 1:    '22',
296: 1:    '23'
296: 1:  ]
296: 1:}
296: 1:Scores: 25822
296: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000']')
296: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
297: 1:BoardData {
297: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
297: 1:  'expectedAnswer': '620448401733239439360000',
297: 1:  'history': [
297: 1:    {
297: 1:      'answer': '1',
297: 1:      'question': '1',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '2',
297: 1:      'question': '2',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '6',
297: 1:      'question': '3',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '24',
297: 1:      'question': '4',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '120',
297: 1:      'question': '5',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '720',
297: 1:      'question': '6',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '5040',
297: 1:      'question': '7',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '40320',
297: 1:      'question': '8',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '362880',
297: 1:      'question': '9',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '3628800',
297: 1:      'question': '10',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '39916800',
297: 1:      'question': '11',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '479001600',
297: 1:      'question': '12',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '6227020800',
297: 1:      'question': '13',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '87178291200',
297: 1:      'question': '14',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '1307674368000',
297: 1:      'question': '15',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '20922789888000',
297: 1:      'question': '16',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '355687428096000',
297: 1:      'question': '17',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '6402373705728000',
297: 1:      'question': '18',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '121645100408832000',
297: 1:      'question': '19',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '2432902008176640000',
297: 1:      'question': '20',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '51090942171709440000',
297: 1:      'question': '21',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '1124000727777607680000',
297: 1:      'question': '22',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': '25852016738884976640000',
297: 1:      'question': '23',
297: 1:      'valid': true
297: 1:    }
297: 1:  ],
297: 1:  'level': 11,
297: 1:  'nextQuestion': '24',
297: 1:  'questions': [
297: 1:    '1',
297: 1:    '2',
297: 1:    '3',
297: 1:    '4',
297: 1:    '5',
297: 1:    '6',
297: 1:    '7',
297: 1:    '8',
297: 1:    '9',
297: 1:    '10',
297: 1:    '11',
297: 1:    '12',
297: 1:    '13',
297: 1:    '14',
297: 1:    '15',
297: 1:    '16',
297: 1:    '17',
297: 1:    '18',
297: 1:    '19',
297: 1:    '20',
297: 1:    '21',
297: 1:    '22',
297: 1:    '23',
297: 1:    '24'
297: 1:  ]
297: 1:}
297: 1:Scores: 25838
297: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000', '620448401733239439360000']')
297: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
298: 1:BoardData {
298: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
298: 1:  'expectedAnswer': '15511210043330985984000000',
298: 1:  'history': [
298: 1:    {
298: 1:      'answer': '1',
298: 1:      'question': '1',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '2',
298: 1:      'question': '2',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '6',
298: 1:      'question': '3',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '24',
298: 1:      'question': '4',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '120',
298: 1:      'question': '5',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '720',
298: 1:      'question': '6',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '5040',
298: 1:      'question': '7',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '40320',
298: 1:      'question': '8',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '362880',
298: 1:      'question': '9',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '3628800',
298: 1:      'question': '10',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '39916800',
298: 1:      'question': '11',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '479001600',
298: 1:      'question': '12',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '6227020800',
298: 1:      'question': '13',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '87178291200',
298: 1:      'question': '14',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '1307674368000',
298: 1:      'question': '15',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '20922789888000',
298: 1:      'question': '16',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '355687428096000',
298: 1:      'question': '17',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '6402373705728000',
298: 1:      'question': '18',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '121645100408832000',
298: 1:      'question': '19',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '2432902008176640000',
298: 1:      'question': '20',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '51090942171709440000',
298: 1:      'question': '21',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '1124000727777607680000',
298: 1:      'question': '22',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '25852016738884976640000',
298: 1:      'question': '23',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': '620448401733239439360000',
298: 1:      'question': '24',
298: 1:      'valid': true
298: 1:    }
298: 1:  ],
298: 1:  'level': 11,
298: 1:  'nextQuestion': '25',
298: 1:  'questions': [
298: 1:    '1',
298: 1:    '2',
298: 1:    '3',
298: 1:    '4',
298: 1:    '5',
298: 1:    '6',
298: 1:    '7',
298: 1:    '8',
298: 1:    '9',
298: 1:    '10',
298: 1:    '11',
298: 1:    '12',
298: 1:    '13',
298: 1:    '14',
298: 1:    '15',
298: 1:    '16',
298: 1:    '17',
298: 1:    '18',
298: 1:    '19',
298: 1:    '20',
298: 1:    '21',
298: 1:    '22',
298: 1:    '23',
298: 1:    '24',
298: 1:    '25'
298: 1:  ]
298: 1:}
298: 1:Scores: 25854
298: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000', '620448401733239439360000', '15511210043330985984000000']')
298: 1:Fire Event: PassTest{complexity=40, testCount=25}
298: 1:Fire Event: NextAlgorithm{complexity=40, time=0}
------------------------------------------
299: 1:BoardData {
299: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
299: 1:  'history': [
299: 1:    {
299: 1:      'answer': '1',
299: 1:      'question': '1',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '2',
299: 1:      'question': '2',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '6',
299: 1:      'question': '3',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '24',
299: 1:      'question': '4',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '120',
299: 1:      'question': '5',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '720',
299: 1:      'question': '6',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '5040',
299: 1:      'question': '7',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '40320',
299: 1:      'question': '8',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '362880',
299: 1:      'question': '9',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '3628800',
299: 1:      'question': '10',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '39916800',
299: 1:      'question': '11',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '479001600',
299: 1:      'question': '12',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '6227020800',
299: 1:      'question': '13',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '87178291200',
299: 1:      'question': '14',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '1307674368000',
299: 1:      'question': '15',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '20922789888000',
299: 1:      'question': '16',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '355687428096000',
299: 1:      'question': '17',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '6402373705728000',
299: 1:      'question': '18',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '121645100408832000',
299: 1:      'question': '19',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '2432902008176640000',
299: 1:      'question': '20',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '51090942171709440000',
299: 1:      'question': '21',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '1124000727777607680000',
299: 1:      'question': '22',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '25852016738884976640000',
299: 1:      'question': '23',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '620448401733239439360000',
299: 1:      'question': '24',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': '15511210043330985984000000',
299: 1:      'question': '25',
299: 1:      'valid': true
299: 1:    }
299: 1:  ],
299: 1:  'level': 11,
299: 1:  'questions': []
299: 1:}
299: 1:Scores: 31269
299: 1:Answer: message('StartNextLevel')
299: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
300: 1:BoardData {
300: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
300: 1:  'expectedAnswer': '2',
300: 1:  'history': [],
300: 1:  'level': 12,
300: 1:  'nextQuestion': '1',
300: 1:  'questions': ['1']
300: 1:}
300: 1:Scores: 31269
300: 1:Answer: message('['2']')
300: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
301: 1:BoardData {
301: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
301: 1:  'expectedAnswer': '4',
301: 1:  'history': [{
301: 1:    'answer': '2',
301: 1:    'question': '1',
301: 1:    'valid': true
301: 1:  }],
301: 1:  'level': 12,
301: 1:  'nextQuestion': '2',
301: 1:  'questions': [
301: 1:    '1',
301: 1:    '2'
301: 1:  ]
301: 1:}
301: 1:Scores: 31283
301: 1:Answer: message('['2', '4']')
301: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
302: 1:BoardData {
302: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
302: 1:  'expectedAnswer': '6',
302: 1:  'history': [
302: 1:    {
302: 1:      'answer': '2',
302: 1:      'question': '1',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': '4',
302: 1:      'question': '2',
302: 1:      'valid': true
302: 1:    }
302: 1:  ],
302: 1:  'level': 12,
302: 1:  'nextQuestion': '3',
302: 1:  'questions': [
302: 1:    '1',
302: 1:    '2',
302: 1:    '3'
302: 1:  ]
302: 1:}
302: 1:Scores: 31297
302: 1:Answer: message('['2', '4', '6']')
302: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
303: 1:BoardData {
303: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
303: 1:  'expectedAnswer': '8',
303: 1:  'history': [
303: 1:    {
303: 1:      'answer': '2',
303: 1:      'question': '1',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': '4',
303: 1:      'question': '2',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': '6',
303: 1:      'question': '3',
303: 1:      'valid': true
303: 1:    }
303: 1:  ],
303: 1:  'level': 12,
303: 1:  'nextQuestion': '4',
303: 1:  'questions': [
303: 1:    '1',
303: 1:    '2',
303: 1:    '3',
303: 1:    '4'
303: 1:  ]
303: 1:}
303: 1:Scores: 31311
303: 1:Answer: message('['2', '4', '6', '8']')
303: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
304: 1:BoardData {
304: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
304: 1:  'expectedAnswer': '11',
304: 1:  'history': [
304: 1:    {
304: 1:      'answer': '2',
304: 1:      'question': '1',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': '4',
304: 1:      'question': '2',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': '6',
304: 1:      'question': '3',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': '8',
304: 1:      'question': '4',
304: 1:      'valid': true
304: 1:    }
304: 1:  ],
304: 1:  'level': 12,
304: 1:  'nextQuestion': '5',
304: 1:  'questions': [
304: 1:    '1',
304: 1:    '2',
304: 1:    '3',
304: 1:    '4',
304: 1:    '5'
304: 1:  ]
304: 1:}
304: 1:Scores: 31325
304: 1:Answer: message('['2', '4', '6', '8', '11']')
304: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
305: 1:BoardData {
305: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
305: 1:  'expectedAnswer': '33',
305: 1:  'history': [
305: 1:    {
305: 1:      'answer': '2',
305: 1:      'question': '1',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': '4',
305: 1:      'question': '2',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': '6',
305: 1:      'question': '3',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': '8',
305: 1:      'question': '4',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': '11',
305: 1:      'question': '5',
305: 1:      'valid': true
305: 1:    }
305: 1:  ],
305: 1:  'level': 12,
305: 1:  'nextQuestion': '6',
305: 1:  'questions': [
305: 1:    '1',
305: 1:    '2',
305: 1:    '3',
305: 1:    '4',
305: 1:    '5',
305: 1:    '6'
305: 1:  ]
305: 1:}
305: 1:Scores: 31339
305: 1:Answer: message('['2', '4', '6', '8', '11', '33']')
305: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
306: 1:BoardData {
306: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
306: 1:  'expectedAnswer': '55',
306: 1:  'history': [
306: 1:    {
306: 1:      'answer': '2',
306: 1:      'question': '1',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': '4',
306: 1:      'question': '2',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': '6',
306: 1:      'question': '3',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': '8',
306: 1:      'question': '4',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': '11',
306: 1:      'question': '5',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': '33',
306: 1:      'question': '6',
306: 1:      'valid': true
306: 1:    }
306: 1:  ],
306: 1:  'level': 12,
306: 1:  'nextQuestion': '7',
306: 1:  'questions': [
306: 1:    '1',
306: 1:    '2',
306: 1:    '3',
306: 1:    '4',
306: 1:    '5',
306: 1:    '6',
306: 1:    '7'
306: 1:  ]
306: 1:}
306: 1:Scores: 31353
306: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55']')
306: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
307: 1:BoardData {
307: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
307: 1:  'expectedAnswer': '99',
307: 1:  'history': [
307: 1:    {
307: 1:      'answer': '2',
307: 1:      'question': '1',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': '4',
307: 1:      'question': '2',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': '6',
307: 1:      'question': '3',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': '8',
307: 1:      'question': '4',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': '11',
307: 1:      'question': '5',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': '33',
307: 1:      'question': '6',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': '55',
307: 1:      'question': '7',
307: 1:      'valid': true
307: 1:    }
307: 1:  ],
307: 1:  'level': 12,
307: 1:  'nextQuestion': '9',
307: 1:  'questions': [
307: 1:    '1',
307: 1:    '2',
307: 1:    '3',
307: 1:    '4',
307: 1:    '5',
307: 1:    '6',
307: 1:    '7',
307: 1:    '9'
307: 1:  ]
307: 1:}
307: 1:Scores: 31367
307: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99']')
307: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
308: 1:BoardData {
308: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
308: 1:  'expectedAnswer': '11',
308: 1:  'history': [
308: 1:    {
308: 1:      'answer': '2',
308: 1:      'question': '1',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': '4',
308: 1:      'question': '2',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': '6',
308: 1:      'question': '3',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': '8',
308: 1:      'question': '4',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': '11',
308: 1:      'question': '5',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': '33',
308: 1:      'question': '6',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': '55',
308: 1:      'question': '7',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': '99',
308: 1:      'question': '9',
308: 1:      'valid': true
308: 1:    }
308: 1:  ],
308: 1:  'level': 12,
308: 1:  'nextQuestion': '10',
308: 1:  'questions': [
308: 1:    '1',
308: 1:    '2',
308: 1:    '3',
308: 1:    '4',
308: 1:    '5',
308: 1:    '6',
308: 1:    '7',
308: 1:    '9',
308: 1:    '10'
308: 1:  ]
308: 1:}
308: 1:Scores: 31381
308: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11']')
308: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
309: 1:BoardData {
309: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
309: 1:  'expectedAnswer': '22',
309: 1:  'history': [
309: 1:    {
309: 1:      'answer': '2',
309: 1:      'question': '1',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': '4',
309: 1:      'question': '2',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': '6',
309: 1:      'question': '3',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': '8',
309: 1:      'question': '4',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': '11',
309: 1:      'question': '5',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': '33',
309: 1:      'question': '6',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': '55',
309: 1:      'question': '7',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': '99',
309: 1:      'question': '9',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': '11',
309: 1:      'question': '10',
309: 1:      'valid': true
309: 1:    }
309: 1:  ],
309: 1:  'level': 12,
309: 1:  'nextQuestion': '11',
309: 1:  'questions': [
309: 1:    '1',
309: 1:    '2',
309: 1:    '3',
309: 1:    '4',
309: 1:    '5',
309: 1:    '6',
309: 1:    '7',
309: 1:    '9',
309: 1:    '10',
309: 1:    '11'
309: 1:  ]
309: 1:}
309: 1:Scores: 31395
309: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22']')
309: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
310: 1:BoardData {
310: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
310: 1:  'expectedAnswer': '33',
310: 1:  'history': [
310: 1:    {
310: 1:      'answer': '2',
310: 1:      'question': '1',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '4',
310: 1:      'question': '2',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '6',
310: 1:      'question': '3',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '8',
310: 1:      'question': '4',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '11',
310: 1:      'question': '5',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '33',
310: 1:      'question': '6',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '55',
310: 1:      'question': '7',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '99',
310: 1:      'question': '9',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '11',
310: 1:      'question': '10',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': '22',
310: 1:      'question': '11',
310: 1:      'valid': true
310: 1:    }
310: 1:  ],
310: 1:  'level': 12,
310: 1:  'nextQuestion': '12',
310: 1:  'questions': [
310: 1:    '1',
310: 1:    '2',
310: 1:    '3',
310: 1:    '4',
310: 1:    '5',
310: 1:    '6',
310: 1:    '7',
310: 1:    '9',
310: 1:    '10',
310: 1:    '11',
310: 1:    '12'
310: 1:  ]
310: 1:}
310: 1:Scores: 31409
310: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33']')
310: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
311: 1:BoardData {
311: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
311: 1:  'expectedAnswer': '444',
311: 1:  'history': [
311: 1:    {
311: 1:      'answer': '2',
311: 1:      'question': '1',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '4',
311: 1:      'question': '2',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '6',
311: 1:      'question': '3',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '8',
311: 1:      'question': '4',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '11',
311: 1:      'question': '5',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '33',
311: 1:      'question': '6',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '55',
311: 1:      'question': '7',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '99',
311: 1:      'question': '9',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '11',
311: 1:      'question': '10',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '22',
311: 1:      'question': '11',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': '33',
311: 1:      'question': '12',
311: 1:      'valid': true
311: 1:    }
311: 1:  ],
311: 1:  'level': 12,
311: 1:  'nextQuestion': '123',
311: 1:  'questions': [
311: 1:    '1',
311: 1:    '2',
311: 1:    '3',
311: 1:    '4',
311: 1:    '5',
311: 1:    '6',
311: 1:    '7',
311: 1:    '9',
311: 1:    '10',
311: 1:    '11',
311: 1:    '12',
311: 1:    '123'
311: 1:  ]
311: 1:}
311: 1:Scores: 31423
311: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444']')
311: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
312: 1:BoardData {
312: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
312: 1:  'expectedAnswer': '666',
312: 1:  'history': [
312: 1:    {
312: 1:      'answer': '2',
312: 1:      'question': '1',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '4',
312: 1:      'question': '2',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '6',
312: 1:      'question': '3',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '8',
312: 1:      'question': '4',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '11',
312: 1:      'question': '5',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '33',
312: 1:      'question': '6',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '55',
312: 1:      'question': '7',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '99',
312: 1:      'question': '9',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '11',
312: 1:      'question': '10',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '22',
312: 1:      'question': '11',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '33',
312: 1:      'question': '12',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': '444',
312: 1:      'question': '123',
312: 1:      'valid': true
312: 1:    }
312: 1:  ],
312: 1:  'level': 12,
312: 1:  'nextQuestion': '234',
312: 1:  'questions': [
312: 1:    '1',
312: 1:    '2',
312: 1:    '3',
312: 1:    '4',
312: 1:    '5',
312: 1:    '6',
312: 1:    '7',
312: 1:    '9',
312: 1:    '10',
312: 1:    '11',
312: 1:    '12',
312: 1:    '123',
312: 1:    '234'
312: 1:  ]
312: 1:}
312: 1:Scores: 31437
312: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666']')
312: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
313: 1:BoardData {
313: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
313: 1:  'expectedAnswer': '888',
313: 1:  'history': [
313: 1:    {
313: 1:      'answer': '2',
313: 1:      'question': '1',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '4',
313: 1:      'question': '2',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '6',
313: 1:      'question': '3',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '8',
313: 1:      'question': '4',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '11',
313: 1:      'question': '5',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '33',
313: 1:      'question': '6',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '55',
313: 1:      'question': '7',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '99',
313: 1:      'question': '9',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '11',
313: 1:      'question': '10',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '22',
313: 1:      'question': '11',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '33',
313: 1:      'question': '12',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '444',
313: 1:      'question': '123',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': '666',
313: 1:      'question': '234',
313: 1:      'valid': true
313: 1:    }
313: 1:  ],
313: 1:  'level': 12,
313: 1:  'nextQuestion': '345',
313: 1:  'questions': [
313: 1:    '1',
313: 1:    '2',
313: 1:    '3',
313: 1:    '4',
313: 1:    '5',
313: 1:    '6',
313: 1:    '7',
313: 1:    '9',
313: 1:    '10',
313: 1:    '11',
313: 1:    '12',
313: 1:    '123',
313: 1:    '234',
313: 1:    '345'
313: 1:  ]
313: 1:}
313: 1:Scores: 31451
313: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888']')
313: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
314: 1:BoardData {
314: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
314: 1:  'expectedAnswer': '1221',
314: 1:  'history': [
314: 1:    {
314: 1:      'answer': '2',
314: 1:      'question': '1',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '4',
314: 1:      'question': '2',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '6',
314: 1:      'question': '3',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '8',
314: 1:      'question': '4',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '11',
314: 1:      'question': '5',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '33',
314: 1:      'question': '6',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '55',
314: 1:      'question': '7',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '99',
314: 1:      'question': '9',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '11',
314: 1:      'question': '10',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '22',
314: 1:      'question': '11',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '33',
314: 1:      'question': '12',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '444',
314: 1:      'question': '123',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '666',
314: 1:      'question': '234',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': '888',
314: 1:      'question': '345',
314: 1:      'valid': true
314: 1:    }
314: 1:  ],
314: 1:  'level': 12,
314: 1:  'nextQuestion': '456',
314: 1:  'questions': [
314: 1:    '1',
314: 1:    '2',
314: 1:    '3',
314: 1:    '4',
314: 1:    '5',
314: 1:    '6',
314: 1:    '7',
314: 1:    '9',
314: 1:    '10',
314: 1:    '11',
314: 1:    '12',
314: 1:    '123',
314: 1:    '234',
314: 1:    '345',
314: 1:    '456'
314: 1:  ]
314: 1:}
314: 1:Scores: 31465
314: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221']')
314: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
315: 1:BoardData {
315: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
315: 1:  'expectedAnswer': '3663',
315: 1:  'history': [
315: 1:    {
315: 1:      'answer': '2',
315: 1:      'question': '1',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '4',
315: 1:      'question': '2',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '6',
315: 1:      'question': '3',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '8',
315: 1:      'question': '4',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '11',
315: 1:      'question': '5',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '33',
315: 1:      'question': '6',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '55',
315: 1:      'question': '7',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '99',
315: 1:      'question': '9',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '11',
315: 1:      'question': '10',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '22',
315: 1:      'question': '11',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '33',
315: 1:      'question': '12',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '444',
315: 1:      'question': '123',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '666',
315: 1:      'question': '234',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '888',
315: 1:      'question': '345',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': '1221',
315: 1:      'question': '456',
315: 1:      'valid': true
315: 1:    }
315: 1:  ],
315: 1:  'level': 12,
315: 1:  'nextQuestion': '567',
315: 1:  'questions': [
315: 1:    '1',
315: 1:    '2',
315: 1:    '3',
315: 1:    '4',
315: 1:    '5',
315: 1:    '6',
315: 1:    '7',
315: 1:    '9',
315: 1:    '10',
315: 1:    '11',
315: 1:    '12',
315: 1:    '123',
315: 1:    '234',
315: 1:    '345',
315: 1:    '456',
315: 1:    '567'
315: 1:  ]
315: 1:}
315: 1:Scores: 31479
315: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663']')
315: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
316: 1:BoardData {
316: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
316: 1:  'expectedAnswer': '23232',
316: 1:  'history': [
316: 1:    {
316: 1:      'answer': '2',
316: 1:      'question': '1',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '4',
316: 1:      'question': '2',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '6',
316: 1:      'question': '3',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '8',
316: 1:      'question': '4',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '11',
316: 1:      'question': '5',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '33',
316: 1:      'question': '6',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '55',
316: 1:      'question': '7',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '99',
316: 1:      'question': '9',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '11',
316: 1:      'question': '10',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '22',
316: 1:      'question': '11',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '33',
316: 1:      'question': '12',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '444',
316: 1:      'question': '123',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '666',
316: 1:      'question': '234',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '888',
316: 1:      'question': '345',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '1221',
316: 1:      'question': '456',
316: 1:      'valid': true
316: 1:    },
316: 1:    {
316: 1:      'answer': '3663',
316: 1:      'question': '567',
316: 1:      'valid': true
316: 1:    }
316: 1:  ],
316: 1:  'level': 12,
316: 1:  'nextQuestion': '678',
316: 1:  'questions': [
316: 1:    '1',
316: 1:    '2',
316: 1:    '3',
316: 1:    '4',
316: 1:    '5',
316: 1:    '6',
316: 1:    '7',
316: 1:    '9',
316: 1:    '10',
316: 1:    '11',
316: 1:    '12',
316: 1:    '123',
316: 1:    '234',
316: 1:    '345',
316: 1:    '456',
316: 1:    '567',
316: 1:    '678'
316: 1:  ]
316: 1:}
316: 1:Scores: 31493
316: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232']')
316: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
317: 1:BoardData {
317: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
317: 1:  'expectedAnswer': '66066',
317: 1:  'history': [
317: 1:    {
317: 1:      'answer': '2',
317: 1:      'question': '1',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '4',
317: 1:      'question': '2',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '6',
317: 1:      'question': '3',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '8',
317: 1:      'question': '4',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '11',
317: 1:      'question': '5',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '33',
317: 1:      'question': '6',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '55',
317: 1:      'question': '7',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '99',
317: 1:      'question': '9',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '11',
317: 1:      'question': '10',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '22',
317: 1:      'question': '11',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '33',
317: 1:      'question': '12',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '444',
317: 1:      'question': '123',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '666',
317: 1:      'question': '234',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '888',
317: 1:      'question': '345',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '1221',
317: 1:      'question': '456',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '3663',
317: 1:      'question': '567',
317: 1:      'valid': true
317: 1:    },
317: 1:    {
317: 1:      'answer': '23232',
317: 1:      'question': '678',
317: 1:      'valid': true
317: 1:    }
317: 1:  ],
317: 1:  'level': 12,
317: 1:  'nextQuestion': '789',
317: 1:  'questions': [
317: 1:    '1',
317: 1:    '2',
317: 1:    '3',
317: 1:    '4',
317: 1:    '5',
317: 1:    '6',
317: 1:    '7',
317: 1:    '9',
317: 1:    '10',
317: 1:    '11',
317: 1:    '12',
317: 1:    '123',
317: 1:    '234',
317: 1:    '345',
317: 1:    '456',
317: 1:    '567',
317: 1:    '678',
317: 1:    '789'
317: 1:  ]
317: 1:}
317: 1:Scores: 31507
317: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066']')
317: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
318: 1:BoardData {
318: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
318: 1:  'expectedAnswer': '5555',
318: 1:  'history': [
318: 1:    {
318: 1:      'answer': '2',
318: 1:      'question': '1',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '4',
318: 1:      'question': '2',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '6',
318: 1:      'question': '3',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '8',
318: 1:      'question': '4',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '11',
318: 1:      'question': '5',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '33',
318: 1:      'question': '6',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '55',
318: 1:      'question': '7',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '99',
318: 1:      'question': '9',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '11',
318: 1:      'question': '10',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '22',
318: 1:      'question': '11',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '33',
318: 1:      'question': '12',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '444',
318: 1:      'question': '123',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '666',
318: 1:      'question': '234',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '888',
318: 1:      'question': '345',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '1221',
318: 1:      'question': '456',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '3663',
318: 1:      'question': '567',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '23232',
318: 1:      'question': '678',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '66066',
318: 1:      'question': '789',
318: 1:      'valid': true
318: 1:    }
318: 1:  ],
318: 1:  'level': 12,
318: 1:  'nextQuestion': '1234',
318: 1:  'questions': [
318: 1:    '1',
318: 1:    '2',
318: 1:    '3',
318: 1:    '4',
318: 1:    '5',
318: 1:    '6',
318: 1:    '7',
318: 1:    '9',
318: 1:    '10',
318: 1:    '11',
318: 1:    '12',
318: 1:    '123',
318: 1:    '234',
318: 1:    '345',
318: 1:    '456',
318: 1:    '567',
318: 1:    '678',
318: 1:    '789',
318: 1:    '1234'
318: 1:  ]
318: 1:}
318: 1:Scores: 31521
318: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555']')
318: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
319: 1:BoardData {
319: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
319: 1:  'expectedAnswer': '7777',
319: 1:  'history': [
319: 1:    {
319: 1:      'answer': '2',
319: 1:      'question': '1',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '4',
319: 1:      'question': '2',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '6',
319: 1:      'question': '3',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '8',
319: 1:      'question': '4',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '11',
319: 1:      'question': '5',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '33',
319: 1:      'question': '6',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '55',
319: 1:      'question': '7',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '99',
319: 1:      'question': '9',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '11',
319: 1:      'question': '10',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '22',
319: 1:      'question': '11',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '33',
319: 1:      'question': '12',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '444',
319: 1:      'question': '123',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '666',
319: 1:      'question': '234',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '888',
319: 1:      'question': '345',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '1221',
319: 1:      'question': '456',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '3663',
319: 1:      'question': '567',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '23232',
319: 1:      'question': '678',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '66066',
319: 1:      'question': '789',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '5555',
319: 1:      'question': '1234',
319: 1:      'valid': true
319: 1:    }
319: 1:  ],
319: 1:  'level': 12,
319: 1:  'nextQuestion': '2345',
319: 1:  'questions': [
319: 1:    '1',
319: 1:    '2',
319: 1:    '3',
319: 1:    '4',
319: 1:    '5',
319: 1:    '6',
319: 1:    '7',
319: 1:    '9',
319: 1:    '10',
319: 1:    '11',
319: 1:    '12',
319: 1:    '123',
319: 1:    '234',
319: 1:    '345',
319: 1:    '456',
319: 1:    '567',
319: 1:    '678',
319: 1:    '789',
319: 1:    '1234',
319: 1:    '2345'
319: 1:  ]
319: 1:}
319: 1:Scores: 31535
319: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777']')
319: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
320: 1:BoardData {
320: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
320: 1:  'expectedAnswer': '9999',
320: 1:  'history': [
320: 1:    {
320: 1:      'answer': '2',
320: 1:      'question': '1',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '4',
320: 1:      'question': '2',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '6',
320: 1:      'question': '3',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '8',
320: 1:      'question': '4',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '11',
320: 1:      'question': '5',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '33',
320: 1:      'question': '6',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '55',
320: 1:      'question': '7',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '99',
320: 1:      'question': '9',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '11',
320: 1:      'question': '10',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '22',
320: 1:      'question': '11',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '33',
320: 1:      'question': '12',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '444',
320: 1:      'question': '123',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '666',
320: 1:      'question': '234',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '888',
320: 1:      'question': '345',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '1221',
320: 1:      'question': '456',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '3663',
320: 1:      'question': '567',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '23232',
320: 1:      'question': '678',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '66066',
320: 1:      'question': '789',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '5555',
320: 1:      'question': '1234',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '7777',
320: 1:      'question': '2345',
320: 1:      'valid': true
320: 1:    }
320: 1:  ],
320: 1:  'level': 12,
320: 1:  'nextQuestion': '3456',
320: 1:  'questions': [
320: 1:    '1',
320: 1:    '2',
320: 1:    '3',
320: 1:    '4',
320: 1:    '5',
320: 1:    '6',
320: 1:    '7',
320: 1:    '9',
320: 1:    '10',
320: 1:    '11',
320: 1:    '12',
320: 1:    '123',
320: 1:    '234',
320: 1:    '345',
320: 1:    '456',
320: 1:    '567',
320: 1:    '678',
320: 1:    '789',
320: 1:    '1234',
320: 1:    '2345',
320: 1:    '3456'
320: 1:  ]
320: 1:}
320: 1:Scores: 31549
320: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999']')
320: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
321: 1:BoardData {
321: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
321: 1:  'expectedAnswer': '12221',
321: 1:  'history': [
321: 1:    {
321: 1:      'answer': '2',
321: 1:      'question': '1',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '4',
321: 1:      'question': '2',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '6',
321: 1:      'question': '3',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '8',
321: 1:      'question': '4',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '11',
321: 1:      'question': '5',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '33',
321: 1:      'question': '6',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '55',
321: 1:      'question': '7',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '99',
321: 1:      'question': '9',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '11',
321: 1:      'question': '10',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '22',
321: 1:      'question': '11',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '33',
321: 1:      'question': '12',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '444',
321: 1:      'question': '123',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '666',
321: 1:      'question': '234',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '888',
321: 1:      'question': '345',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '1221',
321: 1:      'question': '456',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '3663',
321: 1:      'question': '567',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '23232',
321: 1:      'question': '678',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '66066',
321: 1:      'question': '789',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '5555',
321: 1:      'question': '1234',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '7777',
321: 1:      'question': '2345',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '9999',
321: 1:      'question': '3456',
321: 1:      'valid': true
321: 1:    }
321: 1:  ],
321: 1:  'level': 12,
321: 1:  'nextQuestion': '4567',
321: 1:  'questions': [
321: 1:    '1',
321: 1:    '2',
321: 1:    '3',
321: 1:    '4',
321: 1:    '5',
321: 1:    '6',
321: 1:    '7',
321: 1:    '9',
321: 1:    '10',
321: 1:    '11',
321: 1:    '12',
321: 1:    '123',
321: 1:    '234',
321: 1:    '345',
321: 1:    '456',
321: 1:    '567',
321: 1:    '678',
321: 1:    '789',
321: 1:    '1234',
321: 1:    '2345',
321: 1:    '3456',
321: 1:    '4567'
321: 1:  ]
321: 1:}
321: 1:Scores: 31563
321: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221']')
321: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
322: 1:BoardData {
322: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
322: 1:  'expectedAnswer': '48884',
322: 1:  'history': [
322: 1:    {
322: 1:      'answer': '2',
322: 1:      'question': '1',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '4',
322: 1:      'question': '2',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '6',
322: 1:      'question': '3',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '8',
322: 1:      'question': '4',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '11',
322: 1:      'question': '5',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '33',
322: 1:      'question': '6',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '55',
322: 1:      'question': '7',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '99',
322: 1:      'question': '9',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '11',
322: 1:      'question': '10',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '22',
322: 1:      'question': '11',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '33',
322: 1:      'question': '12',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '444',
322: 1:      'question': '123',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '666',
322: 1:      'question': '234',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '888',
322: 1:      'question': '345',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '1221',
322: 1:      'question': '456',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '3663',
322: 1:      'question': '567',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '23232',
322: 1:      'question': '678',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '66066',
322: 1:      'question': '789',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '5555',
322: 1:      'question': '1234',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '7777',
322: 1:      'question': '2345',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '9999',
322: 1:      'question': '3456',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '12221',
322: 1:      'question': '4567',
322: 1:      'valid': true
322: 1:    }
322: 1:  ],
322: 1:  'level': 12,
322: 1:  'nextQuestion': '5678',
322: 1:  'questions': [
322: 1:    '1',
322: 1:    '2',
322: 1:    '3',
322: 1:    '4',
322: 1:    '5',
322: 1:    '6',
322: 1:    '7',
322: 1:    '9',
322: 1:    '10',
322: 1:    '11',
322: 1:    '12',
322: 1:    '123',
322: 1:    '234',
322: 1:    '345',
322: 1:    '456',
322: 1:    '567',
322: 1:    '678',
322: 1:    '789',
322: 1:    '1234',
322: 1:    '2345',
322: 1:    '3456',
322: 1:    '4567',
322: 1:    '5678'
322: 1:  ]
322: 1:}
322: 1:Scores: 31577
322: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884']')
322: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
323: 1:BoardData {
323: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
323: 1:  'expectedAnswer': '993399',
323: 1:  'history': [
323: 1:    {
323: 1:      'answer': '2',
323: 1:      'question': '1',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '4',
323: 1:      'question': '2',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '6',
323: 1:      'question': '3',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '8',
323: 1:      'question': '4',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '11',
323: 1:      'question': '5',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '33',
323: 1:      'question': '6',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '55',
323: 1:      'question': '7',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '99',
323: 1:      'question': '9',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '11',
323: 1:      'question': '10',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '22',
323: 1:      'question': '11',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '33',
323: 1:      'question': '12',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '444',
323: 1:      'question': '123',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '666',
323: 1:      'question': '234',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '888',
323: 1:      'question': '345',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '1221',
323: 1:      'question': '456',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '3663',
323: 1:      'question': '567',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '23232',
323: 1:      'question': '678',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '66066',
323: 1:      'question': '789',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '5555',
323: 1:      'question': '1234',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '7777',
323: 1:      'question': '2345',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '9999',
323: 1:      'question': '3456',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '12221',
323: 1:      'question': '4567',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '48884',
323: 1:      'question': '5678',
323: 1:      'valid': true
323: 1:    }
323: 1:  ],
323: 1:  'level': 12,
323: 1:  'nextQuestion': '6789',
323: 1:  'questions': [
323: 1:    '1',
323: 1:    '2',
323: 1:    '3',
323: 1:    '4',
323: 1:    '5',
323: 1:    '6',
323: 1:    '7',
323: 1:    '9',
323: 1:    '10',
323: 1:    '11',
323: 1:    '12',
323: 1:    '123',
323: 1:    '234',
323: 1:    '345',
323: 1:    '456',
323: 1:    '567',
323: 1:    '678',
323: 1:    '789',
323: 1:    '1234',
323: 1:    '2345',
323: 1:    '3456',
323: 1:    '4567',
323: 1:    '5678',
323: 1:    '6789'
323: 1:  ]
323: 1:}
323: 1:Scores: 31591
323: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399']')
323: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
324: 1:BoardData {
324: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
324: 1:  'expectedAnswer': '993399',
324: 1:  'history': [
324: 1:    {
324: 1:      'answer': '2',
324: 1:      'question': '1',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '4',
324: 1:      'question': '2',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '6',
324: 1:      'question': '3',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '8',
324: 1:      'question': '4',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '11',
324: 1:      'question': '5',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '33',
324: 1:      'question': '6',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '55',
324: 1:      'question': '7',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '99',
324: 1:      'question': '9',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '11',
324: 1:      'question': '10',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '22',
324: 1:      'question': '11',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '33',
324: 1:      'question': '12',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '444',
324: 1:      'question': '123',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '666',
324: 1:      'question': '234',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '888',
324: 1:      'question': '345',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '1221',
324: 1:      'question': '456',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '3663',
324: 1:      'question': '567',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '23232',
324: 1:      'question': '678',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '66066',
324: 1:      'question': '789',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '5555',
324: 1:      'question': '1234',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '7777',
324: 1:      'question': '2345',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '9999',
324: 1:      'question': '3456',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '12221',
324: 1:      'question': '4567',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '48884',
324: 1:      'question': '5678',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '993399',
324: 1:      'question': '6789',
324: 1:      'valid': true
324: 1:    }
324: 1:  ],
324: 1:  'level': 12,
324: 1:  'nextQuestion': '7890',
324: 1:  'questions': [
324: 1:    '1',
324: 1:    '2',
324: 1:    '3',
324: 1:    '4',
324: 1:    '5',
324: 1:    '6',
324: 1:    '7',
324: 1:    '9',
324: 1:    '10',
324: 1:    '11',
324: 1:    '12',
324: 1:    '123',
324: 1:    '234',
324: 1:    '345',
324: 1:    '456',
324: 1:    '567',
324: 1:    '678',
324: 1:    '789',
324: 1:    '1234',
324: 1:    '2345',
324: 1:    '3456',
324: 1:    '4567',
324: 1:    '5678',
324: 1:    '6789',
324: 1:    '7890'
324: 1:  ]
324: 1:}
324: 1:Scores: 31605
324: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399']')
324: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
325: 1:BoardData {
325: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
325: 1:  'expectedAnswer': '66666',
325: 1:  'history': [
325: 1:    {
325: 1:      'answer': '2',
325: 1:      'question': '1',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '4',
325: 1:      'question': '2',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '6',
325: 1:      'question': '3',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '8',
325: 1:      'question': '4',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '11',
325: 1:      'question': '5',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '33',
325: 1:      'question': '6',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '55',
325: 1:      'question': '7',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '99',
325: 1:      'question': '9',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '11',
325: 1:      'question': '10',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '22',
325: 1:      'question': '11',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '33',
325: 1:      'question': '12',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '444',
325: 1:      'question': '123',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '666',
325: 1:      'question': '234',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '888',
325: 1:      'question': '345',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '1221',
325: 1:      'question': '456',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '3663',
325: 1:      'question': '567',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '23232',
325: 1:      'question': '678',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '66066',
325: 1:      'question': '789',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '5555',
325: 1:      'question': '1234',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '7777',
325: 1:      'question': '2345',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '9999',
325: 1:      'question': '3456',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '12221',
325: 1:      'question': '4567',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '48884',
325: 1:      'question': '5678',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '993399',
325: 1:      'question': '6789',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '993399',
325: 1:      'question': '7890',
325: 1:      'valid': true
325: 1:    }
325: 1:  ],
325: 1:  'level': 12,
325: 1:  'nextQuestion': '12345',
325: 1:  'questions': [
325: 1:    '1',
325: 1:    '2',
325: 1:    '3',
325: 1:    '4',
325: 1:    '5',
325: 1:    '6',
325: 1:    '7',
325: 1:    '9',
325: 1:    '10',
325: 1:    '11',
325: 1:    '12',
325: 1:    '123',
325: 1:    '234',
325: 1:    '345',
325: 1:    '456',
325: 1:    '567',
325: 1:    '678',
325: 1:    '789',
325: 1:    '1234',
325: 1:    '2345',
325: 1:    '3456',
325: 1:    '4567',
325: 1:    '5678',
325: 1:    '6789',
325: 1:    '7890',
325: 1:    '12345'
325: 1:  ]
325: 1:}
325: 1:Scores: 31619
325: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666']')
325: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
326: 1:BoardData {
326: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
326: 1:  'expectedAnswer': '777777',
326: 1:  'history': [
326: 1:    {
326: 1:      'answer': '2',
326: 1:      'question': '1',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '4',
326: 1:      'question': '2',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '6',
326: 1:      'question': '3',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '8',
326: 1:      'question': '4',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '11',
326: 1:      'question': '5',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '33',
326: 1:      'question': '6',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '55',
326: 1:      'question': '7',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '99',
326: 1:      'question': '9',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '11',
326: 1:      'question': '10',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '22',
326: 1:      'question': '11',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '33',
326: 1:      'question': '12',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '444',
326: 1:      'question': '123',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '666',
326: 1:      'question': '234',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '888',
326: 1:      'question': '345',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '1221',
326: 1:      'question': '456',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '3663',
326: 1:      'question': '567',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '23232',
326: 1:      'question': '678',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '66066',
326: 1:      'question': '789',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '5555',
326: 1:      'question': '1234',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '7777',
326: 1:      'question': '2345',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '9999',
326: 1:      'question': '3456',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '12221',
326: 1:      'question': '4567',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '48884',
326: 1:      'question': '5678',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '993399',
326: 1:      'question': '6789',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '993399',
326: 1:      'question': '7890',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '66666',
326: 1:      'question': '12345',
326: 1:      'valid': true
326: 1:    }
326: 1:  ],
326: 1:  'level': 12,
326: 1:  'nextQuestion': '123456',
326: 1:  'questions': [
326: 1:    '1',
326: 1:    '2',
326: 1:    '3',
326: 1:    '4',
326: 1:    '5',
326: 1:    '6',
326: 1:    '7',
326: 1:    '9',
326: 1:    '10',
326: 1:    '11',
326: 1:    '12',
326: 1:    '123',
326: 1:    '234',
326: 1:    '345',
326: 1:    '456',
326: 1:    '567',
326: 1:    '678',
326: 1:    '789',
326: 1:    '1234',
326: 1:    '2345',
326: 1:    '3456',
326: 1:    '4567',
326: 1:    '5678',
326: 1:    '6789',
326: 1:    '7890',
326: 1:    '12345',
326: 1:    '123456'
326: 1:  ]
326: 1:}
326: 1:Scores: 31633
326: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777']')
326: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
327: 1:BoardData {
327: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
327: 1:  'expectedAnswer': '8888888',
327: 1:  'history': [
327: 1:    {
327: 1:      'answer': '2',
327: 1:      'question': '1',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '4',
327: 1:      'question': '2',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '6',
327: 1:      'question': '3',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '8',
327: 1:      'question': '4',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '11',
327: 1:      'question': '5',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '33',
327: 1:      'question': '6',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '55',
327: 1:      'question': '7',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '99',
327: 1:      'question': '9',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '11',
327: 1:      'question': '10',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '22',
327: 1:      'question': '11',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '33',
327: 1:      'question': '12',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '444',
327: 1:      'question': '123',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '666',
327: 1:      'question': '234',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '888',
327: 1:      'question': '345',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '1221',
327: 1:      'question': '456',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '3663',
327: 1:      'question': '567',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '23232',
327: 1:      'question': '678',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '66066',
327: 1:      'question': '789',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '5555',
327: 1:      'question': '1234',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '7777',
327: 1:      'question': '2345',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '9999',
327: 1:      'question': '3456',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '12221',
327: 1:      'question': '4567',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '48884',
327: 1:      'question': '5678',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '993399',
327: 1:      'question': '6789',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '993399',
327: 1:      'question': '7890',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '66666',
327: 1:      'question': '12345',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '777777',
327: 1:      'question': '123456',
327: 1:      'valid': true
327: 1:    }
327: 1:  ],
327: 1:  'level': 12,
327: 1:  'nextQuestion': '1234567',
327: 1:  'questions': [
327: 1:    '1',
327: 1:    '2',
327: 1:    '3',
327: 1:    '4',
327: 1:    '5',
327: 1:    '6',
327: 1:    '7',
327: 1:    '9',
327: 1:    '10',
327: 1:    '11',
327: 1:    '12',
327: 1:    '123',
327: 1:    '234',
327: 1:    '345',
327: 1:    '456',
327: 1:    '567',
327: 1:    '678',
327: 1:    '789',
327: 1:    '1234',
327: 1:    '2345',
327: 1:    '3456',
327: 1:    '4567',
327: 1:    '5678',
327: 1:    '6789',
327: 1:    '7890',
327: 1:    '12345',
327: 1:    '123456',
327: 1:    '1234567'
327: 1:  ]
327: 1:}
327: 1:Scores: 31647
327: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888']')
327: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
328: 1:BoardData {
328: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
328: 1:  'expectedAnswer': '99999999',
328: 1:  'history': [
328: 1:    {
328: 1:      'answer': '2',
328: 1:      'question': '1',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '4',
328: 1:      'question': '2',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '6',
328: 1:      'question': '3',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '8',
328: 1:      'question': '4',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '11',
328: 1:      'question': '5',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '33',
328: 1:      'question': '6',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '55',
328: 1:      'question': '7',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '99',
328: 1:      'question': '9',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '11',
328: 1:      'question': '10',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '22',
328: 1:      'question': '11',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '33',
328: 1:      'question': '12',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '444',
328: 1:      'question': '123',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '666',
328: 1:      'question': '234',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '888',
328: 1:      'question': '345',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '1221',
328: 1:      'question': '456',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '3663',
328: 1:      'question': '567',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '23232',
328: 1:      'question': '678',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '66066',
328: 1:      'question': '789',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '5555',
328: 1:      'question': '1234',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '7777',
328: 1:      'question': '2345',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '9999',
328: 1:      'question': '3456',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '12221',
328: 1:      'question': '4567',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '48884',
328: 1:      'question': '5678',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '993399',
328: 1:      'question': '6789',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '993399',
328: 1:      'question': '7890',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '66666',
328: 1:      'question': '12345',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '777777',
328: 1:      'question': '123456',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '8888888',
328: 1:      'question': '1234567',
328: 1:      'valid': true
328: 1:    }
328: 1:  ],
328: 1:  'level': 12,
328: 1:  'nextQuestion': '12345678',
328: 1:  'questions': [
328: 1:    '1',
328: 1:    '2',
328: 1:    '3',
328: 1:    '4',
328: 1:    '5',
328: 1:    '6',
328: 1:    '7',
328: 1:    '9',
328: 1:    '10',
328: 1:    '11',
328: 1:    '12',
328: 1:    '123',
328: 1:    '234',
328: 1:    '345',
328: 1:    '456',
328: 1:    '567',
328: 1:    '678',
328: 1:    '789',
328: 1:    '1234',
328: 1:    '2345',
328: 1:    '3456',
328: 1:    '4567',
328: 1:    '5678',
328: 1:    '6789',
328: 1:    '7890',
328: 1:    '12345',
328: 1:    '123456',
328: 1:    '1234567',
328: 1:    '12345678'
328: 1:  ]
328: 1:}
328: 1:Scores: 31661
328: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999']')
328: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
329: 1:BoardData {
329: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
329: 1:  'expectedAnswer': '1222222221',
329: 1:  'history': [
329: 1:    {
329: 1:      'answer': '2',
329: 1:      'question': '1',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '4',
329: 1:      'question': '2',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '6',
329: 1:      'question': '3',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '8',
329: 1:      'question': '4',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '11',
329: 1:      'question': '5',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '33',
329: 1:      'question': '6',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '55',
329: 1:      'question': '7',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '99',
329: 1:      'question': '9',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '11',
329: 1:      'question': '10',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '22',
329: 1:      'question': '11',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '33',
329: 1:      'question': '12',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '444',
329: 1:      'question': '123',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '666',
329: 1:      'question': '234',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '888',
329: 1:      'question': '345',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '1221',
329: 1:      'question': '456',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '3663',
329: 1:      'question': '567',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '23232',
329: 1:      'question': '678',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '66066',
329: 1:      'question': '789',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '5555',
329: 1:      'question': '1234',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '7777',
329: 1:      'question': '2345',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '9999',
329: 1:      'question': '3456',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '12221',
329: 1:      'question': '4567',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '48884',
329: 1:      'question': '5678',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '993399',
329: 1:      'question': '6789',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '993399',
329: 1:      'question': '7890',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '66666',
329: 1:      'question': '12345',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '777777',
329: 1:      'question': '123456',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '8888888',
329: 1:      'question': '1234567',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '99999999',
329: 1:      'question': '12345678',
329: 1:      'valid': true
329: 1:    }
329: 1:  ],
329: 1:  'level': 12,
329: 1:  'nextQuestion': '123456789',
329: 1:  'questions': [
329: 1:    '1',
329: 1:    '2',
329: 1:    '3',
329: 1:    '4',
329: 1:    '5',
329: 1:    '6',
329: 1:    '7',
329: 1:    '9',
329: 1:    '10',
329: 1:    '11',
329: 1:    '12',
329: 1:    '123',
329: 1:    '234',
329: 1:    '345',
329: 1:    '456',
329: 1:    '567',
329: 1:    '678',
329: 1:    '789',
329: 1:    '1234',
329: 1:    '2345',
329: 1:    '3456',
329: 1:    '4567',
329: 1:    '5678',
329: 1:    '6789',
329: 1:    '7890',
329: 1:    '12345',
329: 1:    '123456',
329: 1:    '1234567',
329: 1:    '12345678',
329: 1:    '123456789'
329: 1:  ]
329: 1:}
329: 1:Scores: 31675
329: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999', '1222222221']')
329: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
330: 1:BoardData {
330: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
330: 1:  'expectedAnswer': '3344444433',
330: 1:  'history': [
330: 1:    {
330: 1:      'answer': '2',
330: 1:      'question': '1',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '4',
330: 1:      'question': '2',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '6',
330: 1:      'question': '3',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '8',
330: 1:      'question': '4',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '11',
330: 1:      'question': '5',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '33',
330: 1:      'question': '6',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '55',
330: 1:      'question': '7',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '99',
330: 1:      'question': '9',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '11',
330: 1:      'question': '10',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '22',
330: 1:      'question': '11',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '33',
330: 1:      'question': '12',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '444',
330: 1:      'question': '123',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '666',
330: 1:      'question': '234',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '888',
330: 1:      'question': '345',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '1221',
330: 1:      'question': '456',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '3663',
330: 1:      'question': '567',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '23232',
330: 1:      'question': '678',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '66066',
330: 1:      'question': '789',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '5555',
330: 1:      'question': '1234',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '7777',
330: 1:      'question': '2345',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '9999',
330: 1:      'question': '3456',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '12221',
330: 1:      'question': '4567',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '48884',
330: 1:      'question': '5678',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '993399',
330: 1:      'question': '6789',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '993399',
330: 1:      'question': '7890',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '66666',
330: 1:      'question': '12345',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '777777',
330: 1:      'question': '123456',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '8888888',
330: 1:      'question': '1234567',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '99999999',
330: 1:      'question': '12345678',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '1222222221',
330: 1:      'question': '123456789',
330: 1:      'valid': true
330: 1:    }
330: 1:  ],
330: 1:  'level': 12,
330: 1:  'nextQuestion': '1234567890',
330: 1:  'questions': [
330: 1:    '1',
330: 1:    '2',
330: 1:    '3',
330: 1:    '4',
330: 1:    '5',
330: 1:    '6',
330: 1:    '7',
330: 1:    '9',
330: 1:    '10',
330: 1:    '11',
330: 1:    '12',
330: 1:    '123',
330: 1:    '234',
330: 1:    '345',
330: 1:    '456',
330: 1:    '567',
330: 1:    '678',
330: 1:    '789',
330: 1:    '1234',
330: 1:    '2345',
330: 1:    '3456',
330: 1:    '4567',
330: 1:    '5678',
330: 1:    '6789',
330: 1:    '7890',
330: 1:    '12345',
330: 1:    '123456',
330: 1:    '1234567',
330: 1:    '12345678',
330: 1:    '123456789',
330: 1:    '1234567890'
330: 1:  ]
330: 1:}
330: 1:Scores: 31689
330: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999', '1222222221', '3344444433']')
330: 1:Fire Event: PassTest{complexity=45, testCount=31}
330: 1:Fire Event: NextAlgorithm{complexity=45, time=0}
------------------------------------------
331: 1:BoardData {
331: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
331: 1:  'history': [
331: 1:    {
331: 1:      'answer': '2',
331: 1:      'question': '1',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '4',
331: 1:      'question': '2',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '6',
331: 1:      'question': '3',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '8',
331: 1:      'question': '4',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '11',
331: 1:      'question': '5',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '33',
331: 1:      'question': '6',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '55',
331: 1:      'question': '7',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '99',
331: 1:      'question': '9',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '11',
331: 1:      'question': '10',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '22',
331: 1:      'question': '11',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '33',
331: 1:      'question': '12',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '444',
331: 1:      'question': '123',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '666',
331: 1:      'question': '234',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '888',
331: 1:      'question': '345',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '1221',
331: 1:      'question': '456',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '3663',
331: 1:      'question': '567',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '23232',
331: 1:      'question': '678',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '66066',
331: 1:      'question': '789',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '5555',
331: 1:      'question': '1234',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '7777',
331: 1:      'question': '2345',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '9999',
331: 1:      'question': '3456',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '12221',
331: 1:      'question': '4567',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '48884',
331: 1:      'question': '5678',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '993399',
331: 1:      'question': '6789',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '993399',
331: 1:      'question': '7890',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '66666',
331: 1:      'question': '12345',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '777777',
331: 1:      'question': '123456',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '8888888',
331: 1:      'question': '1234567',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '99999999',
331: 1:      'question': '12345678',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '1222222221',
331: 1:      'question': '123456789',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '3344444433',
331: 1:      'question': '1234567890',
331: 1:      'valid': true
331: 1:    }
331: 1:  ],
331: 1:  'level': 12,
331: 1:  'questions': []
331: 1:}
331: 1:Scores: 37777
331: 1:Answer: message('StartNextLevel')
331: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
332: 1:BoardData {
332: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
332: 1:  'expectedAnswer': '971',
332: 1:  'history': [],
332: 1:  'level': 13,
332: 1:  'nextQuestion': '1',
332: 1:  'questions': ['1']
332: 1:}
332: 1:Scores: 37777
332: 1:Answer: message('['971']')
332: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
333: 1:BoardData {
333: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
333: 1:  'expectedAnswer': '874',
333: 1:  'history': [{
333: 1:    'answer': '971',
333: 1:    'question': '1',
333: 1:    'valid': true
333: 1:  }],
333: 1:  'level': 13,
333: 1:  'nextQuestion': '2',
333: 1:  'questions': [
333: 1:    '1',
333: 1:    '2'
333: 1:  ]
333: 1:}
333: 1:Scores: 37797
333: 1:Answer: message('['971', '874']')
333: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
334: 1:BoardData {
334: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
334: 1:  'expectedAnswer': '787',
334: 1:  'history': [
334: 1:    {
334: 1:      'answer': '971',
334: 1:      'question': '1',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '874',
334: 1:      'question': '2',
334: 1:      'valid': true
334: 1:    }
334: 1:  ],
334: 1:  'level': 13,
334: 1:  'nextQuestion': '3',
334: 1:  'questions': [
334: 1:    '1',
334: 1:    '2',
334: 1:    '3'
334: 1:  ]
334: 1:}
334: 1:Scores: 37817
334: 1:Answer: message('['971', '874', '787']')
334: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
335: 1:BoardData {
335: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
335: 1:  'expectedAnswer': '709',
335: 1:  'history': [
335: 1:    {
335: 1:      'answer': '971',
335: 1:      'question': '1',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '874',
335: 1:      'question': '2',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '787',
335: 1:      'question': '3',
335: 1:      'valid': true
335: 1:    }
335: 1:  ],
335: 1:  'level': 13,
335: 1:  'nextQuestion': '4',
335: 1:  'questions': [
335: 1:    '1',
335: 1:    '2',
335: 1:    '3',
335: 1:    '4'
335: 1:  ]
335: 1:}
335: 1:Scores: 37837
335: 1:Answer: message('['971', '874', '787', '709']')
335: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
336: 1:BoardData {
336: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
336: 1:  'expectedAnswer': '639',
336: 1:  'history': [
336: 1:    {
336: 1:      'answer': '971',
336: 1:      'question': '1',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '874',
336: 1:      'question': '2',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '787',
336: 1:      'question': '3',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '709',
336: 1:      'question': '4',
336: 1:      'valid': true
336: 1:    }
336: 1:  ],
336: 1:  'level': 13,
336: 1:  'nextQuestion': '5',
336: 1:  'questions': [
336: 1:    '1',
336: 1:    '2',
336: 1:    '3',
336: 1:    '4',
336: 1:    '5'
336: 1:  ]
336: 1:}
336: 1:Scores: 37857
336: 1:Answer: message('['971', '874', '787', '709', '639']')
336: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
337: 1:BoardData {
337: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
337: 1:  'expectedAnswer': '576',
337: 1:  'history': [
337: 1:    {
337: 1:      'answer': '971',
337: 1:      'question': '1',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '874',
337: 1:      'question': '2',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '787',
337: 1:      'question': '3',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '709',
337: 1:      'question': '4',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '639',
337: 1:      'question': '5',
337: 1:      'valid': true
337: 1:    }
337: 1:  ],
337: 1:  'level': 13,
337: 1:  'nextQuestion': '6',
337: 1:  'questions': [
337: 1:    '1',
337: 1:    '2',
337: 1:    '3',
337: 1:    '4',
337: 1:    '5',
337: 1:    '6'
337: 1:  ]
337: 1:}
337: 1:Scores: 37877
337: 1:Answer: message('['971', '874', '787', '709', '639', '576']')
337: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
338: 1:BoardData {
338: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
338: 1:  'expectedAnswer': '519',
338: 1:  'history': [
338: 1:    {
338: 1:      'answer': '971',
338: 1:      'question': '1',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '874',
338: 1:      'question': '2',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '787',
338: 1:      'question': '3',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '709',
338: 1:      'question': '4',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '639',
338: 1:      'question': '5',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '576',
338: 1:      'question': '6',
338: 1:      'valid': true
338: 1:    }
338: 1:  ],
338: 1:  'level': 13,
338: 1:  'nextQuestion': '7',
338: 1:  'questions': [
338: 1:    '1',
338: 1:    '2',
338: 1:    '3',
338: 1:    '4',
338: 1:    '5',
338: 1:    '6',
338: 1:    '7'
338: 1:  ]
338: 1:}
338: 1:Scores: 37897
338: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519']')
338: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
339: 1:BoardData {
339: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
339: 1:  'expectedAnswer': '468',
339: 1:  'history': [
339: 1:    {
339: 1:      'answer': '971',
339: 1:      'question': '1',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '874',
339: 1:      'question': '2',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '787',
339: 1:      'question': '3',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '709',
339: 1:      'question': '4',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '639',
339: 1:      'question': '5',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '576',
339: 1:      'question': '6',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '519',
339: 1:      'question': '7',
339: 1:      'valid': true
339: 1:    }
339: 1:  ],
339: 1:  'level': 13,
339: 1:  'nextQuestion': '8',
339: 1:  'questions': [
339: 1:    '1',
339: 1:    '2',
339: 1:    '3',
339: 1:    '4',
339: 1:    '5',
339: 1:    '6',
339: 1:    '7',
339: 1:    '8'
339: 1:  ]
339: 1:}
339: 1:Scores: 37917
339: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468']')
339: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
340: 1:BoardData {
340: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
340: 1:  'expectedAnswer': '422',
340: 1:  'history': [
340: 1:    {
340: 1:      'answer': '971',
340: 1:      'question': '1',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '874',
340: 1:      'question': '2',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '787',
340: 1:      'question': '3',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '709',
340: 1:      'question': '4',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '639',
340: 1:      'question': '5',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '576',
340: 1:      'question': '6',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '519',
340: 1:      'question': '7',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '468',
340: 1:      'question': '8',
340: 1:      'valid': true
340: 1:    }
340: 1:  ],
340: 1:  'level': 13,
340: 1:  'nextQuestion': '9',
340: 1:  'questions': [
340: 1:    '1',
340: 1:    '2',
340: 1:    '3',
340: 1:    '4',
340: 1:    '5',
340: 1:    '6',
340: 1:    '7',
340: 1:    '8',
340: 1:    '9'
340: 1:  ]
340: 1:}
340: 1:Scores: 37937
340: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422']')
340: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
341: 1:BoardData {
341: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
341: 1:  'expectedAnswer': '380',
341: 1:  'history': [
341: 1:    {
341: 1:      'answer': '971',
341: 1:      'question': '1',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '874',
341: 1:      'question': '2',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '787',
341: 1:      'question': '3',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '709',
341: 1:      'question': '4',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '639',
341: 1:      'question': '5',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '576',
341: 1:      'question': '6',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '519',
341: 1:      'question': '7',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '468',
341: 1:      'question': '8',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '422',
341: 1:      'question': '9',
341: 1:      'valid': true
341: 1:    }
341: 1:  ],
341: 1:  'level': 13,
341: 1:  'nextQuestion': '10',
341: 1:  'questions': [
341: 1:    '1',
341: 1:    '2',
341: 1:    '3',
341: 1:    '4',
341: 1:    '5',
341: 1:    '6',
341: 1:    '7',
341: 1:    '8',
341: 1:    '9',
341: 1:    '10'
341: 1:  ]
341: 1:}
341: 1:Scores: 37957
341: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380']')
341: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
342: 1:BoardData {
342: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
342: 1:  'expectedAnswer': '342',
342: 1:  'history': [
342: 1:    {
342: 1:      'answer': '971',
342: 1:      'question': '1',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '874',
342: 1:      'question': '2',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '787',
342: 1:      'question': '3',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '709',
342: 1:      'question': '4',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '639',
342: 1:      'question': '5',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '576',
342: 1:      'question': '6',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '519',
342: 1:      'question': '7',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '468',
342: 1:      'question': '8',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '422',
342: 1:      'question': '9',
342: 1:      'valid': true
342: 1:    },
342: 1:    {
342: 1:      'answer': '380',
342: 1:      'question': '10',
342: 1:      'valid': true
342: 1:    }
342: 1:  ],
342: 1:  'level': 13,
342: 1:  'nextQuestion': '11',
342: 1:  'questions': [
342: 1:    '1',
342: 1:    '2',
342: 1:    '3',
342: 1:    '4',
342: 1:    '5',
342: 1:    '6',
342: 1:    '7',
342: 1:    '8',
342: 1:    '9',
342: 1:    '10',
342: 1:    '11'
342: 1:  ]
342: 1:}
342: 1:Scores: 37977
342: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342']')
342: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
343: 1:BoardData {
343: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
343: 1:  'expectedAnswer': '308',
343: 1:  'history': [
343: 1:    {
343: 1:      'answer': '971',
343: 1:      'question': '1',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '874',
343: 1:      'question': '2',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '787',
343: 1:      'question': '3',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '709',
343: 1:      'question': '4',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '639',
343: 1:      'question': '5',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '576',
343: 1:      'question': '6',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '519',
343: 1:      'question': '7',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '468',
343: 1:      'question': '8',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '422',
343: 1:      'question': '9',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '380',
343: 1:      'question': '10',
343: 1:      'valid': true
343: 1:    },
343: 1:    {
343: 1:      'answer': '342',
343: 1:      'question': '11',
343: 1:      'valid': true
343: 1:    }
343: 1:  ],
343: 1:  'level': 13,
343: 1:  'nextQuestion': '12',
343: 1:  'questions': [
343: 1:    '1',
343: 1:    '2',
343: 1:    '3',
343: 1:    '4',
343: 1:    '5',
343: 1:    '6',
343: 1:    '7',
343: 1:    '8',
343: 1:    '9',
343: 1:    '10',
343: 1:    '11',
343: 1:    '12'
343: 1:  ]
343: 1:}
343: 1:Scores: 37997
343: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308']')
343: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
344: 1:BoardData {
344: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
344: 1:  'expectedAnswer': '278',
344: 1:  'history': [
344: 1:    {
344: 1:      'answer': '971',
344: 1:      'question': '1',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '874',
344: 1:      'question': '2',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '787',
344: 1:      'question': '3',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '709',
344: 1:      'question': '4',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '639',
344: 1:      'question': '5',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '576',
344: 1:      'question': '6',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '519',
344: 1:      'question': '7',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '468',
344: 1:      'question': '8',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '422',
344: 1:      'question': '9',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '380',
344: 1:      'question': '10',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '342',
344: 1:      'question': '11',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '308',
344: 1:      'question': '12',
344: 1:      'valid': true
344: 1:    }
344: 1:  ],
344: 1:  'level': 13,
344: 1:  'nextQuestion': '13',
344: 1:  'questions': [
344: 1:    '1',
344: 1:    '2',
344: 1:    '3',
344: 1:    '4',
344: 1:    '5',
344: 1:    '6',
344: 1:    '7',
344: 1:    '8',
344: 1:    '9',
344: 1:    '10',
344: 1:    '11',
344: 1:    '12',
344: 1:    '13'
344: 1:  ]
344: 1:}
344: 1:Scores: 38017
344: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278']')
344: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
345: 1:BoardData {
345: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
345: 1:  'expectedAnswer': '251',
345: 1:  'history': [
345: 1:    {
345: 1:      'answer': '971',
345: 1:      'question': '1',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '874',
345: 1:      'question': '2',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '787',
345: 1:      'question': '3',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '709',
345: 1:      'question': '4',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '639',
345: 1:      'question': '5',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '576',
345: 1:      'question': '6',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '519',
345: 1:      'question': '7',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '468',
345: 1:      'question': '8',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '422',
345: 1:      'question': '9',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '380',
345: 1:      'question': '10',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '342',
345: 1:      'question': '11',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '308',
345: 1:      'question': '12',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '278',
345: 1:      'question': '13',
345: 1:      'valid': true
345: 1:    }
345: 1:  ],
345: 1:  'level': 13,
345: 1:  'nextQuestion': '14',
345: 1:  'questions': [
345: 1:    '1',
345: 1:    '2',
345: 1:    '3',
345: 1:    '4',
345: 1:    '5',
345: 1:    '6',
345: 1:    '7',
345: 1:    '8',
345: 1:    '9',
345: 1:    '10',
345: 1:    '11',
345: 1:    '12',
345: 1:    '13',
345: 1:    '14'
345: 1:  ]
345: 1:}
345: 1:Scores: 38037
345: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251']')
345: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
346: 1:BoardData {
346: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
346: 1:  'expectedAnswer': '226',
346: 1:  'history': [
346: 1:    {
346: 1:      'answer': '971',
346: 1:      'question': '1',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '874',
346: 1:      'question': '2',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '787',
346: 1:      'question': '3',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '709',
346: 1:      'question': '4',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '639',
346: 1:      'question': '5',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '576',
346: 1:      'question': '6',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '519',
346: 1:      'question': '7',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '468',
346: 1:      'question': '8',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '422',
346: 1:      'question': '9',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '380',
346: 1:      'question': '10',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '342',
346: 1:      'question': '11',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '308',
346: 1:      'question': '12',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '278',
346: 1:      'question': '13',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '251',
346: 1:      'question': '14',
346: 1:      'valid': true
346: 1:    }
346: 1:  ],
346: 1:  'level': 13,
346: 1:  'nextQuestion': '15',
346: 1:  'questions': [
346: 1:    '1',
346: 1:    '2',
346: 1:    '3',
346: 1:    '4',
346: 1:    '5',
346: 1:    '6',
346: 1:    '7',
346: 1:    '8',
346: 1:    '9',
346: 1:    '10',
346: 1:    '11',
346: 1:    '12',
346: 1:    '13',
346: 1:    '14',
346: 1:    '15'
346: 1:  ]
346: 1:}
346: 1:Scores: 38057
346: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226']')
346: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
347: 1:BoardData {
347: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
347: 1:  'expectedAnswer': '204',
347: 1:  'history': [
347: 1:    {
347: 1:      'answer': '971',
347: 1:      'question': '1',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '874',
347: 1:      'question': '2',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '787',
347: 1:      'question': '3',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '709',
347: 1:      'question': '4',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '639',
347: 1:      'question': '5',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '576',
347: 1:      'question': '6',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '519',
347: 1:      'question': '7',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '468',
347: 1:      'question': '8',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '422',
347: 1:      'question': '9',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '380',
347: 1:      'question': '10',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '342',
347: 1:      'question': '11',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '308',
347: 1:      'question': '12',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '278',
347: 1:      'question': '13',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '251',
347: 1:      'question': '14',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '226',
347: 1:      'question': '15',
347: 1:      'valid': true
347: 1:    }
347: 1:  ],
347: 1:  'level': 13,
347: 1:  'nextQuestion': '16',
347: 1:  'questions': [
347: 1:    '1',
347: 1:    '2',
347: 1:    '3',
347: 1:    '4',
347: 1:    '5',
347: 1:    '6',
347: 1:    '7',
347: 1:    '8',
347: 1:    '9',
347: 1:    '10',
347: 1:    '11',
347: 1:    '12',
347: 1:    '13',
347: 1:    '14',
347: 1:    '15',
347: 1:    '16'
347: 1:  ]
347: 1:}
347: 1:Scores: 38077
347: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204']')
347: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
348: 1:BoardData {
348: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
348: 1:  'expectedAnswer': '184',
348: 1:  'history': [
348: 1:    {
348: 1:      'answer': '971',
348: 1:      'question': '1',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '874',
348: 1:      'question': '2',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '787',
348: 1:      'question': '3',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '709',
348: 1:      'question': '4',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '639',
348: 1:      'question': '5',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '576',
348: 1:      'question': '6',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '519',
348: 1:      'question': '7',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '468',
348: 1:      'question': '8',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '422',
348: 1:      'question': '9',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '380',
348: 1:      'question': '10',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '342',
348: 1:      'question': '11',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '308',
348: 1:      'question': '12',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '278',
348: 1:      'question': '13',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '251',
348: 1:      'question': '14',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '226',
348: 1:      'question': '15',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '204',
348: 1:      'question': '16',
348: 1:      'valid': true
348: 1:    }
348: 1:  ],
348: 1:  'level': 13,
348: 1:  'nextQuestion': '17',
348: 1:  'questions': [
348: 1:    '1',
348: 1:    '2',
348: 1:    '3',
348: 1:    '4',
348: 1:    '5',
348: 1:    '6',
348: 1:    '7',
348: 1:    '8',
348: 1:    '9',
348: 1:    '10',
348: 1:    '11',
348: 1:    '12',
348: 1:    '13',
348: 1:    '14',
348: 1:    '15',
348: 1:    '16',
348: 1:    '17'
348: 1:  ]
348: 1:}
348: 1:Scores: 38097
348: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184']')
348: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
349: 1:BoardData {
349: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
349: 1:  'expectedAnswer': '166',
349: 1:  'history': [
349: 1:    {
349: 1:      'answer': '971',
349: 1:      'question': '1',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '874',
349: 1:      'question': '2',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '787',
349: 1:      'question': '3',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '709',
349: 1:      'question': '4',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '639',
349: 1:      'question': '5',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '576',
349: 1:      'question': '6',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '519',
349: 1:      'question': '7',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '468',
349: 1:      'question': '8',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '422',
349: 1:      'question': '9',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '380',
349: 1:      'question': '10',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '342',
349: 1:      'question': '11',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '308',
349: 1:      'question': '12',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '278',
349: 1:      'question': '13',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '251',
349: 1:      'question': '14',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '226',
349: 1:      'question': '15',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '204',
349: 1:      'question': '16',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '184',
349: 1:      'question': '17',
349: 1:      'valid': true
349: 1:    }
349: 1:  ],
349: 1:  'level': 13,
349: 1:  'nextQuestion': '18',
349: 1:  'questions': [
349: 1:    '1',
349: 1:    '2',
349: 1:    '3',
349: 1:    '4',
349: 1:    '5',
349: 1:    '6',
349: 1:    '7',
349: 1:    '8',
349: 1:    '9',
349: 1:    '10',
349: 1:    '11',
349: 1:    '12',
349: 1:    '13',
349: 1:    '14',
349: 1:    '15',
349: 1:    '16',
349: 1:    '17',
349: 1:    '18'
349: 1:  ]
349: 1:}
349: 1:Scores: 38117
349: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166']')
349: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
350: 1:BoardData {
350: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
350: 1:  'expectedAnswer': '150',
350: 1:  'history': [
350: 1:    {
350: 1:      'answer': '971',
350: 1:      'question': '1',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '874',
350: 1:      'question': '2',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '787',
350: 1:      'question': '3',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '709',
350: 1:      'question': '4',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '639',
350: 1:      'question': '5',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '576',
350: 1:      'question': '6',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '519',
350: 1:      'question': '7',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '468',
350: 1:      'question': '8',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '422',
350: 1:      'question': '9',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '380',
350: 1:      'question': '10',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '342',
350: 1:      'question': '11',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '308',
350: 1:      'question': '12',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '278',
350: 1:      'question': '13',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '251',
350: 1:      'question': '14',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '226',
350: 1:      'question': '15',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '204',
350: 1:      'question': '16',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '184',
350: 1:      'question': '17',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '166',
350: 1:      'question': '18',
350: 1:      'valid': true
350: 1:    }
350: 1:  ],
350: 1:  'level': 13,
350: 1:  'nextQuestion': '19',
350: 1:  'questions': [
350: 1:    '1',
350: 1:    '2',
350: 1:    '3',
350: 1:    '4',
350: 1:    '5',
350: 1:    '6',
350: 1:    '7',
350: 1:    '8',
350: 1:    '9',
350: 1:    '10',
350: 1:    '11',
350: 1:    '12',
350: 1:    '13',
350: 1:    '14',
350: 1:    '15',
350: 1:    '16',
350: 1:    '17',
350: 1:    '18',
350: 1:    '19'
350: 1:  ]
350: 1:}
350: 1:Scores: 38137
350: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150']')
350: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
351: 1:BoardData {
351: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
351: 1:  'expectedAnswer': '135',
351: 1:  'history': [
351: 1:    {
351: 1:      'answer': '971',
351: 1:      'question': '1',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '874',
351: 1:      'question': '2',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '787',
351: 1:      'question': '3',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '709',
351: 1:      'question': '4',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '639',
351: 1:      'question': '5',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '576',
351: 1:      'question': '6',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '519',
351: 1:      'question': '7',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '468',
351: 1:      'question': '8',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '422',
351: 1:      'question': '9',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '380',
351: 1:      'question': '10',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '342',
351: 1:      'question': '11',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '308',
351: 1:      'question': '12',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '278',
351: 1:      'question': '13',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '251',
351: 1:      'question': '14',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '226',
351: 1:      'question': '15',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '204',
351: 1:      'question': '16',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '184',
351: 1:      'question': '17',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '166',
351: 1:      'question': '18',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '150',
351: 1:      'question': '19',
351: 1:      'valid': true
351: 1:    }
351: 1:  ],
351: 1:  'level': 13,
351: 1:  'nextQuestion': '20',
351: 1:  'questions': [
351: 1:    '1',
351: 1:    '2',
351: 1:    '3',
351: 1:    '4',
351: 1:    '5',
351: 1:    '6',
351: 1:    '7',
351: 1:    '8',
351: 1:    '9',
351: 1:    '10',
351: 1:    '11',
351: 1:    '12',
351: 1:    '13',
351: 1:    '14',
351: 1:    '15',
351: 1:    '16',
351: 1:    '17',
351: 1:    '18',
351: 1:    '19',
351: 1:    '20'
351: 1:  ]
351: 1:}
351: 1:Scores: 38157
351: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135']')
351: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
352: 1:BoardData {
352: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
352: 1:  'expectedAnswer': '122',
352: 1:  'history': [
352: 1:    {
352: 1:      'answer': '971',
352: 1:      'question': '1',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '874',
352: 1:      'question': '2',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '787',
352: 1:      'question': '3',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '709',
352: 1:      'question': '4',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '639',
352: 1:      'question': '5',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '576',
352: 1:      'question': '6',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '519',
352: 1:      'question': '7',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '468',
352: 1:      'question': '8',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '422',
352: 1:      'question': '9',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '380',
352: 1:      'question': '10',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '342',
352: 1:      'question': '11',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '308',
352: 1:      'question': '12',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '278',
352: 1:      'question': '13',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '251',
352: 1:      'question': '14',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '226',
352: 1:      'question': '15',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '204',
352: 1:      'question': '16',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '184',
352: 1:      'question': '17',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '166',
352: 1:      'question': '18',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '150',
352: 1:      'question': '19',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '135',
352: 1:      'question': '20',
352: 1:      'valid': true
352: 1:    }
352: 1:  ],
352: 1:  'level': 13,
352: 1:  'nextQuestion': '21',
352: 1:  'questions': [
352: 1:    '1',
352: 1:    '2',
352: 1:    '3',
352: 1:    '4',
352: 1:    '5',
352: 1:    '6',
352: 1:    '7',
352: 1:    '8',
352: 1:    '9',
352: 1:    '10',
352: 1:    '11',
352: 1:    '12',
352: 1:    '13',
352: 1:    '14',
352: 1:    '15',
352: 1:    '16',
352: 1:    '17',
352: 1:    '18',
352: 1:    '19',
352: 1:    '20',
352: 1:    '21'
352: 1:  ]
352: 1:}
352: 1:Scores: 38177
352: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122']')
352: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
353: 1:BoardData {
353: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
353: 1:  'expectedAnswer': '110',
353: 1:  'history': [
353: 1:    {
353: 1:      'answer': '971',
353: 1:      'question': '1',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '874',
353: 1:      'question': '2',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '787',
353: 1:      'question': '3',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '709',
353: 1:      'question': '4',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '639',
353: 1:      'question': '5',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '576',
353: 1:      'question': '6',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '519',
353: 1:      'question': '7',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '468',
353: 1:      'question': '8',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '422',
353: 1:      'question': '9',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '380',
353: 1:      'question': '10',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '342',
353: 1:      'question': '11',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '308',
353: 1:      'question': '12',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '278',
353: 1:      'question': '13',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '251',
353: 1:      'question': '14',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '226',
353: 1:      'question': '15',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '204',
353: 1:      'question': '16',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '184',
353: 1:      'question': '17',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '166',
353: 1:      'question': '18',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '150',
353: 1:      'question': '19',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '135',
353: 1:      'question': '20',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '122',
353: 1:      'question': '21',
353: 1:      'valid': true
353: 1:    }
353: 1:  ],
353: 1:  'level': 13,
353: 1:  'nextQuestion': '22',
353: 1:  'questions': [
353: 1:    '1',
353: 1:    '2',
353: 1:    '3',
353: 1:    '4',
353: 1:    '5',
353: 1:    '6',
353: 1:    '7',
353: 1:    '8',
353: 1:    '9',
353: 1:    '10',
353: 1:    '11',
353: 1:    '12',
353: 1:    '13',
353: 1:    '14',
353: 1:    '15',
353: 1:    '16',
353: 1:    '17',
353: 1:    '18',
353: 1:    '19',
353: 1:    '20',
353: 1:    '21',
353: 1:    '22'
353: 1:  ]
353: 1:}
353: 1:Scores: 38197
353: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110']')
353: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
354: 1:BoardData {
354: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
354: 1:  'expectedAnswer': '99',
354: 1:  'history': [
354: 1:    {
354: 1:      'answer': '971',
354: 1:      'question': '1',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '874',
354: 1:      'question': '2',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '787',
354: 1:      'question': '3',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '709',
354: 1:      'question': '4',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '639',
354: 1:      'question': '5',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '576',
354: 1:      'question': '6',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '519',
354: 1:      'question': '7',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '468',
354: 1:      'question': '8',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '422',
354: 1:      'question': '9',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '380',
354: 1:      'question': '10',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '342',
354: 1:      'question': '11',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '308',
354: 1:      'question': '12',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '278',
354: 1:      'question': '13',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '251',
354: 1:      'question': '14',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '226',
354: 1:      'question': '15',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '204',
354: 1:      'question': '16',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '184',
354: 1:      'question': '17',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '166',
354: 1:      'question': '18',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '150',
354: 1:      'question': '19',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '135',
354: 1:      'question': '20',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '122',
354: 1:      'question': '21',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '110',
354: 1:      'question': '22',
354: 1:      'valid': true
354: 1:    }
354: 1:  ],
354: 1:  'level': 13,
354: 1:  'nextQuestion': '23',
354: 1:  'questions': [
354: 1:    '1',
354: 1:    '2',
354: 1:    '3',
354: 1:    '4',
354: 1:    '5',
354: 1:    '6',
354: 1:    '7',
354: 1:    '8',
354: 1:    '9',
354: 1:    '10',
354: 1:    '11',
354: 1:    '12',
354: 1:    '13',
354: 1:    '14',
354: 1:    '15',
354: 1:    '16',
354: 1:    '17',
354: 1:    '18',
354: 1:    '19',
354: 1:    '20',
354: 1:    '21',
354: 1:    '22',
354: 1:    '23'
354: 1:  ]
354: 1:}
354: 1:Scores: 38217
354: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99']')
354: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
355: 1:BoardData {
355: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
355: 1:  'expectedAnswer': '90',
355: 1:  'history': [
355: 1:    {
355: 1:      'answer': '971',
355: 1:      'question': '1',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '874',
355: 1:      'question': '2',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '787',
355: 1:      'question': '3',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '709',
355: 1:      'question': '4',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '639',
355: 1:      'question': '5',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '576',
355: 1:      'question': '6',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '519',
355: 1:      'question': '7',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '468',
355: 1:      'question': '8',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '422',
355: 1:      'question': '9',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '380',
355: 1:      'question': '10',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '342',
355: 1:      'question': '11',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '308',
355: 1:      'question': '12',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '278',
355: 1:      'question': '13',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '251',
355: 1:      'question': '14',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '226',
355: 1:      'question': '15',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '204',
355: 1:      'question': '16',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '184',
355: 1:      'question': '17',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '166',
355: 1:      'question': '18',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '150',
355: 1:      'question': '19',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '135',
355: 1:      'question': '20',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '122',
355: 1:      'question': '21',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '110',
355: 1:      'question': '22',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '99',
355: 1:      'question': '23',
355: 1:      'valid': true
355: 1:    }
355: 1:  ],
355: 1:  'level': 13,
355: 1:  'nextQuestion': '24',
355: 1:  'questions': [
355: 1:    '1',
355: 1:    '2',
355: 1:    '3',
355: 1:    '4',
355: 1:    '5',
355: 1:    '6',
355: 1:    '7',
355: 1:    '8',
355: 1:    '9',
355: 1:    '10',
355: 1:    '11',
355: 1:    '12',
355: 1:    '13',
355: 1:    '14',
355: 1:    '15',
355: 1:    '16',
355: 1:    '17',
355: 1:    '18',
355: 1:    '19',
355: 1:    '20',
355: 1:    '21',
355: 1:    '22',
355: 1:    '23',
355: 1:    '24'
355: 1:  ]
355: 1:}
355: 1:Scores: 38237
355: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99', '90']')
355: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
356: 1:BoardData {
356: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
356: 1:  'expectedAnswer': '81',
356: 1:  'history': [
356: 1:    {
356: 1:      'answer': '971',
356: 1:      'question': '1',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '874',
356: 1:      'question': '2',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '787',
356: 1:      'question': '3',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '709',
356: 1:      'question': '4',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '639',
356: 1:      'question': '5',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '576',
356: 1:      'question': '6',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '519',
356: 1:      'question': '7',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '468',
356: 1:      'question': '8',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '422',
356: 1:      'question': '9',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '380',
356: 1:      'question': '10',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '342',
356: 1:      'question': '11',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '308',
356: 1:      'question': '12',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '278',
356: 1:      'question': '13',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '251',
356: 1:      'question': '14',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '226',
356: 1:      'question': '15',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '204',
356: 1:      'question': '16',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '184',
356: 1:      'question': '17',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '166',
356: 1:      'question': '18',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '150',
356: 1:      'question': '19',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '135',
356: 1:      'question': '20',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '122',
356: 1:      'question': '21',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '110',
356: 1:      'question': '22',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '99',
356: 1:      'question': '23',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '90',
356: 1:      'question': '24',
356: 1:      'valid': true
356: 1:    }
356: 1:  ],
356: 1:  'level': 13,
356: 1:  'nextQuestion': '25',
356: 1:  'questions': [
356: 1:    '1',
356: 1:    '2',
356: 1:    '3',
356: 1:    '4',
356: 1:    '5',
356: 1:    '6',
356: 1:    '7',
356: 1:    '8',
356: 1:    '9',
356: 1:    '10',
356: 1:    '11',
356: 1:    '12',
356: 1:    '13',
356: 1:    '14',
356: 1:    '15',
356: 1:    '16',
356: 1:    '17',
356: 1:    '18',
356: 1:    '19',
356: 1:    '20',
356: 1:    '21',
356: 1:    '22',
356: 1:    '23',
356: 1:    '24',
356: 1:    '25'
356: 1:  ]
356: 1:}
356: 1:Scores: 38257
356: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99', '90', '81']')
356: 1:Fire Event: PassTest{complexity=50, testCount=25}
356: 1:Fire Event: NextAlgorithm{complexity=50, time=0}
------------------------------------------
357: 1:BoardData {
357: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
357: 1:  'history': [
357: 1:    {
357: 1:      'answer': '971',
357: 1:      'question': '1',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '874',
357: 1:      'question': '2',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '787',
357: 1:      'question': '3',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '709',
357: 1:      'question': '4',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '639',
357: 1:      'question': '5',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '576',
357: 1:      'question': '6',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '519',
357: 1:      'question': '7',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '468',
357: 1:      'question': '8',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '422',
357: 1:      'question': '9',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '380',
357: 1:      'question': '10',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '342',
357: 1:      'question': '11',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '308',
357: 1:      'question': '12',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '278',
357: 1:      'question': '13',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '251',
357: 1:      'question': '14',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '226',
357: 1:      'question': '15',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '204',
357: 1:      'question': '16',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '184',
357: 1:      'question': '17',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '166',
357: 1:      'question': '18',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '150',
357: 1:      'question': '19',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '135',
357: 1:      'question': '20',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '122',
357: 1:      'question': '21',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '110',
357: 1:      'question': '22',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '99',
357: 1:      'question': '23',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '90',
357: 1:      'question': '24',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '81',
357: 1:      'question': '25',
357: 1:      'valid': true
357: 1:    }
357: 1:  ],
357: 1:  'level': 13,
357: 1:  'questions': []
357: 1:}
357: 1:Scores: 45026
357: 1:Answer: message('StartNextLevel')
357: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
358: 1:BoardData {
358: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
358: 1:  'expectedAnswer': '2',
358: 1:  'history': [],
358: 1:  'level': 14,
358: 1:  'nextQuestion': '1',
358: 1:  'questions': ['1']
358: 1:}
358: 1:Scores: 45026
358: 1:Answer: message('['2']')
358: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
359: 1:BoardData {
359: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
359: 1:  'expectedAnswer': '3',
359: 1:  'history': [{
359: 1:    'answer': '2',
359: 1:    'question': '1',
359: 1:    'valid': true
359: 1:  }],
359: 1:  'level': 14,
359: 1:  'nextQuestion': '2',
359: 1:  'questions': [
359: 1:    '1',
359: 1:    '2'
359: 1:  ]
359: 1:}
359: 1:Scores: 45048
359: 1:Answer: message('['2', '3']')
359: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
360: 1:BoardData {
360: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
360: 1:  'expectedAnswer': '5',
360: 1:  'history': [
360: 1:    {
360: 1:      'answer': '2',
360: 1:      'question': '1',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '3',
360: 1:      'question': '2',
360: 1:      'valid': true
360: 1:    }
360: 1:  ],
360: 1:  'level': 14,
360: 1:  'nextQuestion': '3',
360: 1:  'questions': [
360: 1:    '1',
360: 1:    '2',
360: 1:    '3'
360: 1:  ]
360: 1:}
360: 1:Scores: 45070
360: 1:Answer: message('['2', '3', '5']')
360: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
361: 1:BoardData {
361: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
361: 1:  'expectedAnswer': '7',
361: 1:  'history': [
361: 1:    {
361: 1:      'answer': '2',
361: 1:      'question': '1',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '3',
361: 1:      'question': '2',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '5',
361: 1:      'question': '3',
361: 1:      'valid': true
361: 1:    }
361: 1:  ],
361: 1:  'level': 14,
361: 1:  'nextQuestion': '4',
361: 1:  'questions': [
361: 1:    '1',
361: 1:    '2',
361: 1:    '3',
361: 1:    '4'
361: 1:  ]
361: 1:}
361: 1:Scores: 45092
361: 1:Answer: message('['2', '3', '5', '7']')
361: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
362: 1:BoardData {
362: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
362: 1:  'expectedAnswer': '11',
362: 1:  'history': [
362: 1:    {
362: 1:      'answer': '2',
362: 1:      'question': '1',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '3',
362: 1:      'question': '2',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '5',
362: 1:      'question': '3',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '7',
362: 1:      'question': '4',
362: 1:      'valid': true
362: 1:    }
362: 1:  ],
362: 1:  'level': 14,
362: 1:  'nextQuestion': '5',
362: 1:  'questions': [
362: 1:    '1',
362: 1:    '2',
362: 1:    '3',
362: 1:    '4',
362: 1:    '5'
362: 1:  ]
362: 1:}
362: 1:Scores: 45114
362: 1:Answer: message('['2', '3', '5', '7', '11']')
362: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
363: 1:BoardData {
363: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
363: 1:  'expectedAnswer': '13',
363: 1:  'history': [
363: 1:    {
363: 1:      'answer': '2',
363: 1:      'question': '1',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '3',
363: 1:      'question': '2',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '5',
363: 1:      'question': '3',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '7',
363: 1:      'question': '4',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '11',
363: 1:      'question': '5',
363: 1:      'valid': true
363: 1:    }
363: 1:  ],
363: 1:  'level': 14,
363: 1:  'nextQuestion': '6',
363: 1:  'questions': [
363: 1:    '1',
363: 1:    '2',
363: 1:    '3',
363: 1:    '4',
363: 1:    '5',
363: 1:    '6'
363: 1:  ]
363: 1:}
363: 1:Scores: 45136
363: 1:Answer: message('['2', '3', '5', '7', '11', '13']')
363: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
364: 1:BoardData {
364: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
364: 1:  'expectedAnswer': '17',
364: 1:  'history': [
364: 1:    {
364: 1:      'answer': '2',
364: 1:      'question': '1',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '3',
364: 1:      'question': '2',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '5',
364: 1:      'question': '3',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '7',
364: 1:      'question': '4',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '11',
364: 1:      'question': '5',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '13',
364: 1:      'question': '6',
364: 1:      'valid': true
364: 1:    }
364: 1:  ],
364: 1:  'level': 14,
364: 1:  'nextQuestion': '7',
364: 1:  'questions': [
364: 1:    '1',
364: 1:    '2',
364: 1:    '3',
364: 1:    '4',
364: 1:    '5',
364: 1:    '6',
364: 1:    '7'
364: 1:  ]
364: 1:}
364: 1:Scores: 45158
364: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17']')
364: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
365: 1:BoardData {
365: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
365: 1:  'expectedAnswer': '19',
365: 1:  'history': [
365: 1:    {
365: 1:      'answer': '2',
365: 1:      'question': '1',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '3',
365: 1:      'question': '2',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '5',
365: 1:      'question': '3',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '7',
365: 1:      'question': '4',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '11',
365: 1:      'question': '5',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '13',
365: 1:      'question': '6',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '17',
365: 1:      'question': '7',
365: 1:      'valid': true
365: 1:    }
365: 1:  ],
365: 1:  'level': 14,
365: 1:  'nextQuestion': '8',
365: 1:  'questions': [
365: 1:    '1',
365: 1:    '2',
365: 1:    '3',
365: 1:    '4',
365: 1:    '5',
365: 1:    '6',
365: 1:    '7',
365: 1:    '8'
365: 1:  ]
365: 1:}
365: 1:Scores: 45180
365: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19']')
365: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
366: 1:BoardData {
366: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
366: 1:  'expectedAnswer': '23',
366: 1:  'history': [
366: 1:    {
366: 1:      'answer': '2',
366: 1:      'question': '1',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '3',
366: 1:      'question': '2',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '5',
366: 1:      'question': '3',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '7',
366: 1:      'question': '4',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '11',
366: 1:      'question': '5',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '13',
366: 1:      'question': '6',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '17',
366: 1:      'question': '7',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '19',
366: 1:      'question': '8',
366: 1:      'valid': true
366: 1:    }
366: 1:  ],
366: 1:  'level': 14,
366: 1:  'nextQuestion': '9',
366: 1:  'questions': [
366: 1:    '1',
366: 1:    '2',
366: 1:    '3',
366: 1:    '4',
366: 1:    '5',
366: 1:    '6',
366: 1:    '7',
366: 1:    '8',
366: 1:    '9'
366: 1:  ]
366: 1:}
366: 1:Scores: 45202
366: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23']')
366: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
367: 1:BoardData {
367: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
367: 1:  'expectedAnswer': '29',
367: 1:  'history': [
367: 1:    {
367: 1:      'answer': '2',
367: 1:      'question': '1',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '3',
367: 1:      'question': '2',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '5',
367: 1:      'question': '3',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '7',
367: 1:      'question': '4',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '11',
367: 1:      'question': '5',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '13',
367: 1:      'question': '6',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '17',
367: 1:      'question': '7',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '19',
367: 1:      'question': '8',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '23',
367: 1:      'question': '9',
367: 1:      'valid': true
367: 1:    }
367: 1:  ],
367: 1:  'level': 14,
367: 1:  'nextQuestion': '10',
367: 1:  'questions': [
367: 1:    '1',
367: 1:    '2',
367: 1:    '3',
367: 1:    '4',
367: 1:    '5',
367: 1:    '6',
367: 1:    '7',
367: 1:    '8',
367: 1:    '9',
367: 1:    '10'
367: 1:  ]
367: 1:}
367: 1:Scores: 45224
367: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29']')
367: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
368: 1:BoardData {
368: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
368: 1:  'expectedAnswer': '31',
368: 1:  'history': [
368: 1:    {
368: 1:      'answer': '2',
368: 1:      'question': '1',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '3',
368: 1:      'question': '2',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '5',
368: 1:      'question': '3',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '7',
368: 1:      'question': '4',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '11',
368: 1:      'question': '5',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '13',
368: 1:      'question': '6',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '17',
368: 1:      'question': '7',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '19',
368: 1:      'question': '8',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '23',
368: 1:      'question': '9',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '29',
368: 1:      'question': '10',
368: 1:      'valid': true
368: 1:    }
368: 1:  ],
368: 1:  'level': 14,
368: 1:  'nextQuestion': '11',
368: 1:  'questions': [
368: 1:    '1',
368: 1:    '2',
368: 1:    '3',
368: 1:    '4',
368: 1:    '5',
368: 1:    '6',
368: 1:    '7',
368: 1:    '8',
368: 1:    '9',
368: 1:    '10',
368: 1:    '11'
368: 1:  ]
368: 1:}
368: 1:Scores: 45246
368: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31']')
368: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
369: 1:BoardData {
369: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
369: 1:  'expectedAnswer': '37',
369: 1:  'history': [
369: 1:    {
369: 1:      'answer': '2',
369: 1:      'question': '1',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '3',
369: 1:      'question': '2',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '5',
369: 1:      'question': '3',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '7',
369: 1:      'question': '4',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '11',
369: 1:      'question': '5',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '13',
369: 1:      'question': '6',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '17',
369: 1:      'question': '7',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '19',
369: 1:      'question': '8',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '23',
369: 1:      'question': '9',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '29',
369: 1:      'question': '10',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '31',
369: 1:      'question': '11',
369: 1:      'valid': true
369: 1:    }
369: 1:  ],
369: 1:  'level': 14,
369: 1:  'nextQuestion': '12',
369: 1:  'questions': [
369: 1:    '1',
369: 1:    '2',
369: 1:    '3',
369: 1:    '4',
369: 1:    '5',
369: 1:    '6',
369: 1:    '7',
369: 1:    '8',
369: 1:    '9',
369: 1:    '10',
369: 1:    '11',
369: 1:    '12'
369: 1:  ]
369: 1:}
369: 1:Scores: 45268
369: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37']')
369: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
370: 1:BoardData {
370: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
370: 1:  'expectedAnswer': '41',
370: 1:  'history': [
370: 1:    {
370: 1:      'answer': '2',
370: 1:      'question': '1',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '3',
370: 1:      'question': '2',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '5',
370: 1:      'question': '3',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '7',
370: 1:      'question': '4',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '11',
370: 1:      'question': '5',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '13',
370: 1:      'question': '6',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '17',
370: 1:      'question': '7',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '19',
370: 1:      'question': '8',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '23',
370: 1:      'question': '9',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '29',
370: 1:      'question': '10',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '31',
370: 1:      'question': '11',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '37',
370: 1:      'question': '12',
370: 1:      'valid': true
370: 1:    }
370: 1:  ],
370: 1:  'level': 14,
370: 1:  'nextQuestion': '13',
370: 1:  'questions': [
370: 1:    '1',
370: 1:    '2',
370: 1:    '3',
370: 1:    '4',
370: 1:    '5',
370: 1:    '6',
370: 1:    '7',
370: 1:    '8',
370: 1:    '9',
370: 1:    '10',
370: 1:    '11',
370: 1:    '12',
370: 1:    '13'
370: 1:  ]
370: 1:}
370: 1:Scores: 45290
370: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41']')
370: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
371: 1:BoardData {
371: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
371: 1:  'expectedAnswer': '43',
371: 1:  'history': [
371: 1:    {
371: 1:      'answer': '2',
371: 1:      'question': '1',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '3',
371: 1:      'question': '2',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '5',
371: 1:      'question': '3',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '7',
371: 1:      'question': '4',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '11',
371: 1:      'question': '5',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '13',
371: 1:      'question': '6',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '17',
371: 1:      'question': '7',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '19',
371: 1:      'question': '8',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '23',
371: 1:      'question': '9',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '29',
371: 1:      'question': '10',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '31',
371: 1:      'question': '11',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '37',
371: 1:      'question': '12',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '41',
371: 1:      'question': '13',
371: 1:      'valid': true
371: 1:    }
371: 1:  ],
371: 1:  'level': 14,
371: 1:  'nextQuestion': '14',
371: 1:  'questions': [
371: 1:    '1',
371: 1:    '2',
371: 1:    '3',
371: 1:    '4',
371: 1:    '5',
371: 1:    '6',
371: 1:    '7',
371: 1:    '8',
371: 1:    '9',
371: 1:    '10',
371: 1:    '11',
371: 1:    '12',
371: 1:    '13',
371: 1:    '14'
371: 1:  ]
371: 1:}
371: 1:Scores: 45312
371: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43']')
371: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
372: 1:BoardData {
372: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
372: 1:  'expectedAnswer': '47',
372: 1:  'history': [
372: 1:    {
372: 1:      'answer': '2',
372: 1:      'question': '1',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '3',
372: 1:      'question': '2',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '5',
372: 1:      'question': '3',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '7',
372: 1:      'question': '4',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '11',
372: 1:      'question': '5',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '13',
372: 1:      'question': '6',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '17',
372: 1:      'question': '7',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '19',
372: 1:      'question': '8',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '23',
372: 1:      'question': '9',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '29',
372: 1:      'question': '10',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '31',
372: 1:      'question': '11',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '37',
372: 1:      'question': '12',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '41',
372: 1:      'question': '13',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '43',
372: 1:      'question': '14',
372: 1:      'valid': true
372: 1:    }
372: 1:  ],
372: 1:  'level': 14,
372: 1:  'nextQuestion': '15',
372: 1:  'questions': [
372: 1:    '1',
372: 1:    '2',
372: 1:    '3',
372: 1:    '4',
372: 1:    '5',
372: 1:    '6',
372: 1:    '7',
372: 1:    '8',
372: 1:    '9',
372: 1:    '10',
372: 1:    '11',
372: 1:    '12',
372: 1:    '13',
372: 1:    '14',
372: 1:    '15'
372: 1:  ]
372: 1:}
372: 1:Scores: 45334
372: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47']')
372: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
373: 1:BoardData {
373: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
373: 1:  'expectedAnswer': '53',
373: 1:  'history': [
373: 1:    {
373: 1:      'answer': '2',
373: 1:      'question': '1',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '3',
373: 1:      'question': '2',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '5',
373: 1:      'question': '3',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '7',
373: 1:      'question': '4',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '11',
373: 1:      'question': '5',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '13',
373: 1:      'question': '6',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '17',
373: 1:      'question': '7',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '19',
373: 1:      'question': '8',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '23',
373: 1:      'question': '9',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '29',
373: 1:      'question': '10',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '31',
373: 1:      'question': '11',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '37',
373: 1:      'question': '12',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '41',
373: 1:      'question': '13',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '43',
373: 1:      'question': '14',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '47',
373: 1:      'question': '15',
373: 1:      'valid': true
373: 1:    }
373: 1:  ],
373: 1:  'level': 14,
373: 1:  'nextQuestion': '16',
373: 1:  'questions': [
373: 1:    '1',
373: 1:    '2',
373: 1:    '3',
373: 1:    '4',
373: 1:    '5',
373: 1:    '6',
373: 1:    '7',
373: 1:    '8',
373: 1:    '9',
373: 1:    '10',
373: 1:    '11',
373: 1:    '12',
373: 1:    '13',
373: 1:    '14',
373: 1:    '15',
373: 1:    '16'
373: 1:  ]
373: 1:}
373: 1:Scores: 45356
373: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53']')
373: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
374: 1:BoardData {
374: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
374: 1:  'expectedAnswer': '59',
374: 1:  'history': [
374: 1:    {
374: 1:      'answer': '2',
374: 1:      'question': '1',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '3',
374: 1:      'question': '2',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '5',
374: 1:      'question': '3',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '7',
374: 1:      'question': '4',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '11',
374: 1:      'question': '5',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '13',
374: 1:      'question': '6',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '17',
374: 1:      'question': '7',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '19',
374: 1:      'question': '8',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '23',
374: 1:      'question': '9',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '29',
374: 1:      'question': '10',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '31',
374: 1:      'question': '11',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '37',
374: 1:      'question': '12',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '41',
374: 1:      'question': '13',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '43',
374: 1:      'question': '14',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '47',
374: 1:      'question': '15',
374: 1:      'valid': true
374: 1:    },
374: 1:    {
374: 1:      'answer': '53',
374: 1:      'question': '16',
374: 1:      'valid': true
374: 1:    }
374: 1:  ],
374: 1:  'level': 14,
374: 1:  'nextQuestion': '17',
374: 1:  'questions': [
374: 1:    '1',
374: 1:    '2',
374: 1:    '3',
374: 1:    '4',
374: 1:    '5',
374: 1:    '6',
374: 1:    '7',
374: 1:    '8',
374: 1:    '9',
374: 1:    '10',
374: 1:    '11',
374: 1:    '12',
374: 1:    '13',
374: 1:    '14',
374: 1:    '15',
374: 1:    '16',
374: 1:    '17'
374: 1:  ]
374: 1:}
374: 1:Scores: 45378
374: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59']')
374: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
375: 1:BoardData {
375: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
375: 1:  'expectedAnswer': '61',
375: 1:  'history': [
375: 1:    {
375: 1:      'answer': '2',
375: 1:      'question': '1',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '3',
375: 1:      'question': '2',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '5',
375: 1:      'question': '3',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '7',
375: 1:      'question': '4',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '11',
375: 1:      'question': '5',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '13',
375: 1:      'question': '6',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '17',
375: 1:      'question': '7',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '19',
375: 1:      'question': '8',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '23',
375: 1:      'question': '9',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '29',
375: 1:      'question': '10',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '31',
375: 1:      'question': '11',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '37',
375: 1:      'question': '12',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '41',
375: 1:      'question': '13',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '43',
375: 1:      'question': '14',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '47',
375: 1:      'question': '15',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '53',
375: 1:      'question': '16',
375: 1:      'valid': true
375: 1:    },
375: 1:    {
375: 1:      'answer': '59',
375: 1:      'question': '17',
375: 1:      'valid': true
375: 1:    }
375: 1:  ],
375: 1:  'level': 14,
375: 1:  'nextQuestion': '18',
375: 1:  'questions': [
375: 1:    '1',
375: 1:    '2',
375: 1:    '3',
375: 1:    '4',
375: 1:    '5',
375: 1:    '6',
375: 1:    '7',
375: 1:    '8',
375: 1:    '9',
375: 1:    '10',
375: 1:    '11',
375: 1:    '12',
375: 1:    '13',
375: 1:    '14',
375: 1:    '15',
375: 1:    '16',
375: 1:    '17',
375: 1:    '18'
375: 1:  ]
375: 1:}
375: 1:Scores: 45400
375: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61']')
375: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
376: 1:BoardData {
376: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
376: 1:  'expectedAnswer': '67',
376: 1:  'history': [
376: 1:    {
376: 1:      'answer': '2',
376: 1:      'question': '1',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '3',
376: 1:      'question': '2',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '5',
376: 1:      'question': '3',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '7',
376: 1:      'question': '4',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '11',
376: 1:      'question': '5',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '13',
376: 1:      'question': '6',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '17',
376: 1:      'question': '7',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '19',
376: 1:      'question': '8',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '23',
376: 1:      'question': '9',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '29',
376: 1:      'question': '10',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '31',
376: 1:      'question': '11',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '37',
376: 1:      'question': '12',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '41',
376: 1:      'question': '13',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '43',
376: 1:      'question': '14',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '47',
376: 1:      'question': '15',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '53',
376: 1:      'question': '16',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '59',
376: 1:      'question': '17',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '61',
376: 1:      'question': '18',
376: 1:      'valid': true
376: 1:    }
376: 1:  ],
376: 1:  'level': 14,
376: 1:  'nextQuestion': '19',
376: 1:  'questions': [
376: 1:    '1',
376: 1:    '2',
376: 1:    '3',
376: 1:    '4',
376: 1:    '5',
376: 1:    '6',
376: 1:    '7',
376: 1:    '8',
376: 1:    '9',
376: 1:    '10',
376: 1:    '11',
376: 1:    '12',
376: 1:    '13',
376: 1:    '14',
376: 1:    '15',
376: 1:    '16',
376: 1:    '17',
376: 1:    '18',
376: 1:    '19'
376: 1:  ]
376: 1:}
376: 1:Scores: 45422
376: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67']')
376: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
377: 1:BoardData {
377: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
377: 1:  'expectedAnswer': '71',
377: 1:  'history': [
377: 1:    {
377: 1:      'answer': '2',
377: 1:      'question': '1',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '3',
377: 1:      'question': '2',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '5',
377: 1:      'question': '3',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '7',
377: 1:      'question': '4',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '11',
377: 1:      'question': '5',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '13',
377: 1:      'question': '6',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '17',
377: 1:      'question': '7',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '19',
377: 1:      'question': '8',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '23',
377: 1:      'question': '9',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '29',
377: 1:      'question': '10',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '31',
377: 1:      'question': '11',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '37',
377: 1:      'question': '12',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '41',
377: 1:      'question': '13',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '43',
377: 1:      'question': '14',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '47',
377: 1:      'question': '15',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '53',
377: 1:      'question': '16',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '59',
377: 1:      'question': '17',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '61',
377: 1:      'question': '18',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '67',
377: 1:      'question': '19',
377: 1:      'valid': true
377: 1:    }
377: 1:  ],
377: 1:  'level': 14,
377: 1:  'nextQuestion': '20',
377: 1:  'questions': [
377: 1:    '1',
377: 1:    '2',
377: 1:    '3',
377: 1:    '4',
377: 1:    '5',
377: 1:    '6',
377: 1:    '7',
377: 1:    '8',
377: 1:    '9',
377: 1:    '10',
377: 1:    '11',
377: 1:    '12',
377: 1:    '13',
377: 1:    '14',
377: 1:    '15',
377: 1:    '16',
377: 1:    '17',
377: 1:    '18',
377: 1:    '19',
377: 1:    '20'
377: 1:  ]
377: 1:}
377: 1:Scores: 45444
377: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71']')
377: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
378: 1:BoardData {
378: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
378: 1:  'expectedAnswer': '73',
378: 1:  'history': [
378: 1:    {
378: 1:      'answer': '2',
378: 1:      'question': '1',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '3',
378: 1:      'question': '2',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '5',
378: 1:      'question': '3',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '7',
378: 1:      'question': '4',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '11',
378: 1:      'question': '5',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '13',
378: 1:      'question': '6',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '17',
378: 1:      'question': '7',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '19',
378: 1:      'question': '8',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '23',
378: 1:      'question': '9',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '29',
378: 1:      'question': '10',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '31',
378: 1:      'question': '11',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '37',
378: 1:      'question': '12',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '41',
378: 1:      'question': '13',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '43',
378: 1:      'question': '14',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '47',
378: 1:      'question': '15',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '53',
378: 1:      'question': '16',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '59',
378: 1:      'question': '17',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '61',
378: 1:      'question': '18',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '67',
378: 1:      'question': '19',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '71',
378: 1:      'question': '20',
378: 1:      'valid': true
378: 1:    }
378: 1:  ],
378: 1:  'level': 14,
378: 1:  'nextQuestion': '21',
378: 1:  'questions': [
378: 1:    '1',
378: 1:    '2',
378: 1:    '3',
378: 1:    '4',
378: 1:    '5',
378: 1:    '6',
378: 1:    '7',
378: 1:    '8',
378: 1:    '9',
378: 1:    '10',
378: 1:    '11',
378: 1:    '12',
378: 1:    '13',
378: 1:    '14',
378: 1:    '15',
378: 1:    '16',
378: 1:    '17',
378: 1:    '18',
378: 1:    '19',
378: 1:    '20',
378: 1:    '21'
378: 1:  ]
378: 1:}
378: 1:Scores: 45466
378: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73']')
378: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
379: 1:BoardData {
379: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
379: 1:  'expectedAnswer': '79',
379: 1:  'history': [
379: 1:    {
379: 1:      'answer': '2',
379: 1:      'question': '1',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '3',
379: 1:      'question': '2',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '5',
379: 1:      'question': '3',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '7',
379: 1:      'question': '4',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '11',
379: 1:      'question': '5',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '13',
379: 1:      'question': '6',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '17',
379: 1:      'question': '7',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '19',
379: 1:      'question': '8',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '23',
379: 1:      'question': '9',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '29',
379: 1:      'question': '10',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '31',
379: 1:      'question': '11',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '37',
379: 1:      'question': '12',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '41',
379: 1:      'question': '13',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '43',
379: 1:      'question': '14',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '47',
379: 1:      'question': '15',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '53',
379: 1:      'question': '16',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '59',
379: 1:      'question': '17',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '61',
379: 1:      'question': '18',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '67',
379: 1:      'question': '19',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '71',
379: 1:      'question': '20',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '73',
379: 1:      'question': '21',
379: 1:      'valid': true
379: 1:    }
379: 1:  ],
379: 1:  'level': 14,
379: 1:  'nextQuestion': '22',
379: 1:  'questions': [
379: 1:    '1',
379: 1:    '2',
379: 1:    '3',
379: 1:    '4',
379: 1:    '5',
379: 1:    '6',
379: 1:    '7',
379: 1:    '8',
379: 1:    '9',
379: 1:    '10',
379: 1:    '11',
379: 1:    '12',
379: 1:    '13',
379: 1:    '14',
379: 1:    '15',
379: 1:    '16',
379: 1:    '17',
379: 1:    '18',
379: 1:    '19',
379: 1:    '20',
379: 1:    '21',
379: 1:    '22'
379: 1:  ]
379: 1:}
379: 1:Scores: 45488
379: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79']')
379: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
380: 1:BoardData {
380: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
380: 1:  'expectedAnswer': '83',
380: 1:  'history': [
380: 1:    {
380: 1:      'answer': '2',
380: 1:      'question': '1',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '3',
380: 1:      'question': '2',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '5',
380: 1:      'question': '3',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '7',
380: 1:      'question': '4',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '11',
380: 1:      'question': '5',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '13',
380: 1:      'question': '6',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '17',
380: 1:      'question': '7',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '19',
380: 1:      'question': '8',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '23',
380: 1:      'question': '9',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '29',
380: 1:      'question': '10',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '31',
380: 1:      'question': '11',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '37',
380: 1:      'question': '12',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '41',
380: 1:      'question': '13',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '43',
380: 1:      'question': '14',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '47',
380: 1:      'question': '15',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '53',
380: 1:      'question': '16',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '59',
380: 1:      'question': '17',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '61',
380: 1:      'question': '18',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '67',
380: 1:      'question': '19',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '71',
380: 1:      'question': '20',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '73',
380: 1:      'question': '21',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '79',
380: 1:      'question': '22',
380: 1:      'valid': true
380: 1:    }
380: 1:  ],
380: 1:  'level': 14,
380: 1:  'nextQuestion': '23',
380: 1:  'questions': [
380: 1:    '1',
380: 1:    '2',
380: 1:    '3',
380: 1:    '4',
380: 1:    '5',
380: 1:    '6',
380: 1:    '7',
380: 1:    '8',
380: 1:    '9',
380: 1:    '10',
380: 1:    '11',
380: 1:    '12',
380: 1:    '13',
380: 1:    '14',
380: 1:    '15',
380: 1:    '16',
380: 1:    '17',
380: 1:    '18',
380: 1:    '19',
380: 1:    '20',
380: 1:    '21',
380: 1:    '22',
380: 1:    '23'
380: 1:  ]
380: 1:}
380: 1:Scores: 45510
380: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83']')
380: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
381: 1:BoardData {
381: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
381: 1:  'expectedAnswer': '89',
381: 1:  'history': [
381: 1:    {
381: 1:      'answer': '2',
381: 1:      'question': '1',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '3',
381: 1:      'question': '2',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '5',
381: 1:      'question': '3',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '7',
381: 1:      'question': '4',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '11',
381: 1:      'question': '5',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '13',
381: 1:      'question': '6',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '17',
381: 1:      'question': '7',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '19',
381: 1:      'question': '8',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '23',
381: 1:      'question': '9',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '29',
381: 1:      'question': '10',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '31',
381: 1:      'question': '11',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '37',
381: 1:      'question': '12',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '41',
381: 1:      'question': '13',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '43',
381: 1:      'question': '14',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '47',
381: 1:      'question': '15',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '53',
381: 1:      'question': '16',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '59',
381: 1:      'question': '17',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '61',
381: 1:      'question': '18',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '67',
381: 1:      'question': '19',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '71',
381: 1:      'question': '20',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '73',
381: 1:      'question': '21',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '79',
381: 1:      'question': '22',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '83',
381: 1:      'question': '23',
381: 1:      'valid': true
381: 1:    }
381: 1:  ],
381: 1:  'level': 14,
381: 1:  'nextQuestion': '24',
381: 1:  'questions': [
381: 1:    '1',
381: 1:    '2',
381: 1:    '3',
381: 1:    '4',
381: 1:    '5',
381: 1:    '6',
381: 1:    '7',
381: 1:    '8',
381: 1:    '9',
381: 1:    '10',
381: 1:    '11',
381: 1:    '12',
381: 1:    '13',
381: 1:    '14',
381: 1:    '15',
381: 1:    '16',
381: 1:    '17',
381: 1:    '18',
381: 1:    '19',
381: 1:    '20',
381: 1:    '21',
381: 1:    '22',
381: 1:    '23',
381: 1:    '24'
381: 1:  ]
381: 1:}
381: 1:Scores: 45532
381: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83', '89']')
381: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
382: 1:BoardData {
382: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
382: 1:  'expectedAnswer': '97',
382: 1:  'history': [
382: 1:    {
382: 1:      'answer': '2',
382: 1:      'question': '1',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '3',
382: 1:      'question': '2',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '5',
382: 1:      'question': '3',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '7',
382: 1:      'question': '4',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '11',
382: 1:      'question': '5',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '13',
382: 1:      'question': '6',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '17',
382: 1:      'question': '7',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '19',
382: 1:      'question': '8',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '23',
382: 1:      'question': '9',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '29',
382: 1:      'question': '10',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '31',
382: 1:      'question': '11',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '37',
382: 1:      'question': '12',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '41',
382: 1:      'question': '13',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '43',
382: 1:      'question': '14',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '47',
382: 1:      'question': '15',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '53',
382: 1:      'question': '16',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '59',
382: 1:      'question': '17',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '61',
382: 1:      'question': '18',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '67',
382: 1:      'question': '19',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '71',
382: 1:      'question': '20',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '73',
382: 1:      'question': '21',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '79',
382: 1:      'question': '22',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '83',
382: 1:      'question': '23',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '89',
382: 1:      'question': '24',
382: 1:      'valid': true
382: 1:    }
382: 1:  ],
382: 1:  'level': 14,
382: 1:  'nextQuestion': '25',
382: 1:  'questions': [
382: 1:    '1',
382: 1:    '2',
382: 1:    '3',
382: 1:    '4',
382: 1:    '5',
382: 1:    '6',
382: 1:    '7',
382: 1:    '8',
382: 1:    '9',
382: 1:    '10',
382: 1:    '11',
382: 1:    '12',
382: 1:    '13',
382: 1:    '14',
382: 1:    '15',
382: 1:    '16',
382: 1:    '17',
382: 1:    '18',
382: 1:    '19',
382: 1:    '20',
382: 1:    '21',
382: 1:    '22',
382: 1:    '23',
382: 1:    '24',
382: 1:    '25'
382: 1:  ]
382: 1:}
382: 1:Scores: 45554
382: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83', '89', '97']')
382: 1:Fire Event: PassTest{complexity=55, testCount=25}
382: 1:Fire Event: NextAlgorithm{complexity=55, time=0}
------------------------------------------
383: 1:BoardData {
383: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
383: 1:  'history': [
383: 1:    {
383: 1:      'answer': '2',
383: 1:      'question': '1',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '3',
383: 1:      'question': '2',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '5',
383: 1:      'question': '3',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '7',
383: 1:      'question': '4',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '11',
383: 1:      'question': '5',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '13',
383: 1:      'question': '6',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '17',
383: 1:      'question': '7',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '19',
383: 1:      'question': '8',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '23',
383: 1:      'question': '9',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '29',
383: 1:      'question': '10',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '31',
383: 1:      'question': '11',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '37',
383: 1:      'question': '12',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '41',
383: 1:      'question': '13',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '43',
383: 1:      'question': '14',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '47',
383: 1:      'question': '15',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '53',
383: 1:      'question': '16',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '59',
383: 1:      'question': '17',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '61',
383: 1:      'question': '18',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '67',
383: 1:      'question': '19',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '71',
383: 1:      'question': '20',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '73',
383: 1:      'question': '21',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '79',
383: 1:      'question': '22',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '83',
383: 1:      'question': '23',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '89',
383: 1:      'question': '24',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '97',
383: 1:      'question': '25',
383: 1:      'valid': true
383: 1:    }
383: 1:  ],
383: 1:  'level': 14,
383: 1:  'questions': []
383: 1:}
383: 1:Scores: 53000
383: 1:Answer: message('StartNextLevel')
383: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
384: 1:BoardData {
384: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
384: 1:  'expectedAnswer': '0.5',
384: 1:  'history': [],
384: 1:  'level': 15,
384: 1:  'nextQuestion': '1, 2',
384: 1:  'questions': ['1, 2']
384: 1:}
384: 1:Scores: 53000
384: 1:Answer: message('['0.5']')
384: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
385: 1:BoardData {
385: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
385: 1:  'expectedAnswer': '1',
385: 1:  'history': [{
385: 1:    'answer': '0.5',
385: 1:    'question': '1, 2',
385: 1:    'valid': true
385: 1:  }],
385: 1:  'level': 15,
385: 1:  'nextQuestion': '1, 1',
385: 1:  'questions': [
385: 1:    '1, 2',
385: 1:    '1, 1'
385: 1:  ]
385: 1:}
385: 1:Scores: 53021
385: 1:Answer: message('['0.5', '1']')
385: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
386: 1:BoardData {
386: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
386: 1:  'expectedAnswer': '1',
386: 1:  'history': [
386: 1:    {
386: 1:      'answer': '0.5',
386: 1:      'question': '1, 2',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '1',
386: 1:      'question': '1, 1',
386: 1:      'valid': true
386: 1:    }
386: 1:  ],
386: 1:  'level': 15,
386: 1:  'nextQuestion': '5, 5',
386: 1:  'questions': [
386: 1:    '1, 2',
386: 1:    '1, 1',
386: 1:    '5, 5'
386: 1:  ]
386: 1:}
386: 1:Scores: 53042
386: 1:Answer: message('['0.5', '1', '1']')
386: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
387: 1:BoardData {
387: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
387: 1:  'expectedAnswer': '11',
387: 1:  'history': [
387: 1:    {
387: 1:      'answer': '0.5',
387: 1:      'question': '1, 2',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '1',
387: 1:      'question': '1, 1',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '1',
387: 1:      'question': '5, 5',
387: 1:      'valid': true
387: 1:    }
387: 1:  ],
387: 1:  'level': 15,
387: 1:  'nextQuestion': '55, 5',
387: 1:  'questions': [
387: 1:    '1, 2',
387: 1:    '1, 1',
387: 1:    '5, 5',
387: 1:    '55, 5'
387: 1:  ]
387: 1:}
387: 1:Scores: 53063
387: 1:Answer: message('['0.5', '1', '1', '11']')
387: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
388: 1:BoardData {
388: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
388: 1:  'expectedAnswer': '1.25',
388: 1:  'history': [
388: 1:    {
388: 1:      'answer': '0.5',
388: 1:      'question': '1, 2',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '1',
388: 1:      'question': '1, 1',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '1',
388: 1:      'question': '5, 5',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '11',
388: 1:      'question': '55, 5',
388: 1:      'valid': true
388: 1:    }
388: 1:  ],
388: 1:  'level': 15,
388: 1:  'nextQuestion': '55, 44',
388: 1:  'questions': [
388: 1:    '1, 2',
388: 1:    '1, 1',
388: 1:    '5, 5',
388: 1:    '55, 5',
388: 1:    '55, 44'
388: 1:  ]
388: 1:}
388: 1:Scores: 53084
388: 1:Answer: message('['0.5', '1', '1', '11', '1.25']')
388: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
389: 1:BoardData {
389: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
389: 1:  'expectedAnswer': '0',
389: 1:  'history': [
389: 1:    {
389: 1:      'answer': '0.5',
389: 1:      'question': '1, 2',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '1',
389: 1:      'question': '1, 1',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '1',
389: 1:      'question': '5, 5',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '11',
389: 1:      'question': '55, 5',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '1.25',
389: 1:      'question': '55, 44',
389: 1:      'valid': true
389: 1:    }
389: 1:  ],
389: 1:  'level': 15,
389: 1:  'nextQuestion': '0, 56',
389: 1:  'questions': [
389: 1:    '1, 2',
389: 1:    '1, 1',
389: 1:    '5, 5',
389: 1:    '55, 5',
389: 1:    '55, 44',
389: 1:    '0, 56'
389: 1:  ]
389: 1:}
389: 1:Scores: 53105
389: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0']')
389: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
390: 1:BoardData {
390: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
390: 1:  'expectedAnswer': '56',
390: 1:  'history': [
390: 1:    {
390: 1:      'answer': '0.5',
390: 1:      'question': '1, 2',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '1',
390: 1:      'question': '1, 1',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '1',
390: 1:      'question': '5, 5',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '11',
390: 1:      'question': '55, 5',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '1.25',
390: 1:      'question': '55, 44',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '0',
390: 1:      'question': '0, 56',
390: 1:      'valid': true
390: 1:    }
390: 1:  ],
390: 1:  'level': 15,
390: 1:  'nextQuestion': '56, 1',
390: 1:  'questions': [
390: 1:    '1, 2',
390: 1:    '1, 1',
390: 1:    '5, 5',
390: 1:    '55, 5',
390: 1:    '55, 44',
390: 1:    '0, 56',
390: 1:    '56, 1'
390: 1:  ]
390: 1:}
390: 1:Scores: 53126
390: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56']')
390: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
391: 1:BoardData {
391: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
391: 1:  'expectedAnswer': '-0.5',
391: 1:  'history': [
391: 1:    {
391: 1:      'answer': '0.5',
391: 1:      'question': '1, 2',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '1',
391: 1:      'question': '1, 1',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '1',
391: 1:      'question': '5, 5',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '11',
391: 1:      'question': '55, 5',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '1.25',
391: 1:      'question': '55, 44',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '0',
391: 1:      'question': '0, 56',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '56',
391: 1:      'question': '56, 1',
391: 1:      'valid': true
391: 1:    }
391: 1:  ],
391: 1:  'level': 15,
391: 1:  'nextQuestion': '1, -2',
391: 1:  'questions': [
391: 1:    '1, 2',
391: 1:    '1, 1',
391: 1:    '5, 5',
391: 1:    '55, 5',
391: 1:    '55, 44',
391: 1:    '0, 56',
391: 1:    '56, 1',
391: 1:    '1, -2'
391: 1:  ]
391: 1:}
391: 1:Scores: 53147
391: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5']')
391: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
392: 1:BoardData {
392: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
392: 1:  'expectedAnswer': '-0.5',
392: 1:  'history': [
392: 1:    {
392: 1:      'answer': '0.5',
392: 1:      'question': '1, 2',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '1',
392: 1:      'question': '1, 1',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '1',
392: 1:      'question': '5, 5',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '11',
392: 1:      'question': '55, 5',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '1.25',
392: 1:      'question': '55, 44',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '0',
392: 1:      'question': '0, 56',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '56',
392: 1:      'question': '56, 1',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '-0.5',
392: 1:      'question': '1, -2',
392: 1:      'valid': true
392: 1:    }
392: 1:  ],
392: 1:  'level': 15,
392: 1:  'nextQuestion': '-1, 2',
392: 1:  'questions': [
392: 1:    '1, 2',
392: 1:    '1, 1',
392: 1:    '5, 5',
392: 1:    '55, 5',
392: 1:    '55, 44',
392: 1:    '0, 56',
392: 1:    '56, 1',
392: 1:    '1, -2',
392: 1:    '-1, 2'
392: 1:  ]
392: 1:}
392: 1:Scores: 53168
392: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5']')
392: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
393: 1:BoardData {
393: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
393: 1:  'expectedAnswer': '0.5',
393: 1:  'history': [
393: 1:    {
393: 1:      'answer': '0.5',
393: 1:      'question': '1, 2',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '1',
393: 1:      'question': '1, 1',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '1',
393: 1:      'question': '5, 5',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '11',
393: 1:      'question': '55, 5',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '1.25',
393: 1:      'question': '55, 44',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '0',
393: 1:      'question': '0, 56',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '56',
393: 1:      'question': '56, 1',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '-0.5',
393: 1:      'question': '1, -2',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '-0.5',
393: 1:      'question': '-1, 2',
393: 1:      'valid': true
393: 1:    }
393: 1:  ],
393: 1:  'level': 15,
393: 1:  'nextQuestion': '-1, -2',
393: 1:  'questions': [
393: 1:    '1, 2',
393: 1:    '1, 1',
393: 1:    '5, 5',
393: 1:    '55, 5',
393: 1:    '55, 44',
393: 1:    '0, 56',
393: 1:    '56, 1',
393: 1:    '1, -2',
393: 1:    '-1, 2',
393: 1:    '-1, -2'
393: 1:  ]
393: 1:}
393: 1:Scores: 53189
393: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5']')
393: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
394: 1:BoardData {
394: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
394: 1:  'expectedAnswer': '0.001',
394: 1:  'history': [
394: 1:    {
394: 1:      'answer': '0.5',
394: 1:      'question': '1, 2',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '1',
394: 1:      'question': '1, 1',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '1',
394: 1:      'question': '5, 5',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '11',
394: 1:      'question': '55, 5',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '1.25',
394: 1:      'question': '55, 44',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '0',
394: 1:      'question': '0, 56',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '56',
394: 1:      'question': '56, 1',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '-0.5',
394: 1:      'question': '1, -2',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '-0.5',
394: 1:      'question': '-1, 2',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '0.5',
394: 1:      'question': '-1, -2',
394: 1:      'valid': true
394: 1:    }
394: 1:  ],
394: 1:  'level': 15,
394: 1:  'nextQuestion': '1, 1000',
394: 1:  'questions': [
394: 1:    '1, 2',
394: 1:    '1, 1',
394: 1:    '5, 5',
394: 1:    '55, 5',
394: 1:    '55, 44',
394: 1:    '0, 56',
394: 1:    '56, 1',
394: 1:    '1, -2',
394: 1:    '-1, 2',
394: 1:    '-1, -2',
394: 1:    '1, 1000'
394: 1:  ]
394: 1:}
394: 1:Scores: 53210
394: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001']')
394: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
395: 1:BoardData {
395: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
395: 1:  'expectedAnswer': '1.2(4)',
395: 1:  'history': [
395: 1:    {
395: 1:      'answer': '0.5',
395: 1:      'question': '1, 2',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '1',
395: 1:      'question': '1, 1',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '1',
395: 1:      'question': '5, 5',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '11',
395: 1:      'question': '55, 5',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '1.25',
395: 1:      'question': '55, 44',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '0',
395: 1:      'question': '0, 56',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '56',
395: 1:      'question': '56, 1',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '-0.5',
395: 1:      'question': '1, -2',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '-0.5',
395: 1:      'question': '-1, 2',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '0.5',
395: 1:      'question': '-1, -2',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '0.001',
395: 1:      'question': '1, 1000',
395: 1:      'valid': true
395: 1:    }
395: 1:  ],
395: 1:  'level': 15,
395: 1:  'nextQuestion': '56, 45',
395: 1:  'questions': [
395: 1:    '1, 2',
395: 1:    '1, 1',
395: 1:    '5, 5',
395: 1:    '55, 5',
395: 1:    '55, 44',
395: 1:    '0, 56',
395: 1:    '56, 1',
395: 1:    '1, -2',
395: 1:    '-1, 2',
395: 1:    '-1, -2',
395: 1:    '1, 1000',
395: 1:    '56, 45'
395: 1:  ]
395: 1:}
395: 1:Scores: 53231
395: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)']')
395: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
396: 1:BoardData {
396: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
396: 1:  'expectedAnswer': '1.00(90)',
396: 1:  'history': [
396: 1:    {
396: 1:      'answer': '0.5',
396: 1:      'question': '1, 2',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '1',
396: 1:      'question': '1, 1',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '1',
396: 1:      'question': '5, 5',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '11',
396: 1:      'question': '55, 5',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '1.25',
396: 1:      'question': '55, 44',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '0',
396: 1:      'question': '0, 56',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '56',
396: 1:      'question': '56, 1',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '-0.5',
396: 1:      'question': '1, -2',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '-0.5',
396: 1:      'question': '-1, 2',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '0.5',
396: 1:      'question': '-1, -2',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '0.001',
396: 1:      'question': '1, 1000',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '1.2(4)',
396: 1:      'question': '56, 45',
396: 1:      'valid': true
396: 1:    }
396: 1:  ],
396: 1:  'level': 15,
396: 1:  'nextQuestion': '111, 110',
396: 1:  'questions': [
396: 1:    '1, 2',
396: 1:    '1, 1',
396: 1:    '5, 5',
396: 1:    '55, 5',
396: 1:    '55, 44',
396: 1:    '0, 56',
396: 1:    '56, 1',
396: 1:    '1, -2',
396: 1:    '-1, 2',
396: 1:    '-1, -2',
396: 1:    '1, 1000',
396: 1:    '56, 45',
396: 1:    '111, 110'
396: 1:  ]
396: 1:}
396: 1:Scores: 53252
396: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)']')
396: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
397: 1:BoardData {
397: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
397: 1:  'expectedAnswer': '10.0(90)',
397: 1:  'history': [
397: 1:    {
397: 1:      'answer': '0.5',
397: 1:      'question': '1, 2',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '1',
397: 1:      'question': '1, 1',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '1',
397: 1:      'question': '5, 5',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '11',
397: 1:      'question': '55, 5',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '1.25',
397: 1:      'question': '55, 44',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '0',
397: 1:      'question': '0, 56',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '56',
397: 1:      'question': '56, 1',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '-0.5',
397: 1:      'question': '1, -2',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '-0.5',
397: 1:      'question': '-1, 2',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '0.5',
397: 1:      'question': '-1, -2',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '0.001',
397: 1:      'question': '1, 1000',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '1.2(4)',
397: 1:      'question': '56, 45',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '1.00(90)',
397: 1:      'question': '111, 110',
397: 1:      'valid': true
397: 1:    }
397: 1:  ],
397: 1:  'level': 15,
397: 1:  'nextQuestion': '111, 11',
397: 1:  'questions': [
397: 1:    '1, 2',
397: 1:    '1, 1',
397: 1:    '5, 5',
397: 1:    '55, 5',
397: 1:    '55, 44',
397: 1:    '0, 56',
397: 1:    '56, 1',
397: 1:    '1, -2',
397: 1:    '-1, 2',
397: 1:    '-1, -2',
397: 1:    '1, 1000',
397: 1:    '56, 45',
397: 1:    '111, 110',
397: 1:    '111, 11'
397: 1:  ]
397: 1:}
397: 1:Scores: 53273
397: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)']')
397: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
398: 1:BoardData {
398: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
398: 1:  'expectedAnswer': '1010.0(90)',
398: 1:  'history': [
398: 1:    {
398: 1:      'answer': '0.5',
398: 1:      'question': '1, 2',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '1',
398: 1:      'question': '1, 1',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '1',
398: 1:      'question': '5, 5',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '11',
398: 1:      'question': '55, 5',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '1.25',
398: 1:      'question': '55, 44',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '0',
398: 1:      'question': '0, 56',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '56',
398: 1:      'question': '56, 1',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '-0.5',
398: 1:      'question': '1, -2',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '-0.5',
398: 1:      'question': '-1, 2',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '0.5',
398: 1:      'question': '-1, -2',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '0.001',
398: 1:      'question': '1, 1000',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '1.2(4)',
398: 1:      'question': '56, 45',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '1.00(90)',
398: 1:      'question': '111, 110',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '10.0(90)',
398: 1:      'question': '111, 11',
398: 1:      'valid': true
398: 1:    }
398: 1:  ],
398: 1:  'level': 15,
398: 1:  'nextQuestion': '11111, 11',
398: 1:  'questions': [
398: 1:    '1, 2',
398: 1:    '1, 1',
398: 1:    '5, 5',
398: 1:    '55, 5',
398: 1:    '55, 44',
398: 1:    '0, 56',
398: 1:    '56, 1',
398: 1:    '1, -2',
398: 1:    '-1, 2',
398: 1:    '-1, -2',
398: 1:    '1, 1000',
398: 1:    '56, 45',
398: 1:    '111, 110',
398: 1:    '111, 11',
398: 1:    '11111, 11'
398: 1:  ]
398: 1:}
398: 1:Scores: 53294
398: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)']')
398: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
399: 1:BoardData {
399: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
399: 1:  'expectedAnswer': '0.0(495)',
399: 1:  'history': [
399: 1:    {
399: 1:      'answer': '0.5',
399: 1:      'question': '1, 2',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '1',
399: 1:      'question': '1, 1',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '1',
399: 1:      'question': '5, 5',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '11',
399: 1:      'question': '55, 5',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '1.25',
399: 1:      'question': '55, 44',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '0',
399: 1:      'question': '0, 56',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '56',
399: 1:      'question': '56, 1',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '-0.5',
399: 1:      'question': '1, -2',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '-0.5',
399: 1:      'question': '-1, 2',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '0.5',
399: 1:      'question': '-1, -2',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '0.001',
399: 1:      'question': '1, 1000',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '1.2(4)',
399: 1:      'question': '56, 45',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '1.00(90)',
399: 1:      'question': '111, 110',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '10.0(90)',
399: 1:      'question': '111, 11',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '1010.0(90)',
399: 1:      'question': '11111, 11',
399: 1:      'valid': true
399: 1:    }
399: 1:  ],
399: 1:  'level': 15,
399: 1:  'nextQuestion': '-11, -222',
399: 1:  'questions': [
399: 1:    '1, 2',
399: 1:    '1, 1',
399: 1:    '5, 5',
399: 1:    '55, 5',
399: 1:    '55, 44',
399: 1:    '0, 56',
399: 1:    '56, 1',
399: 1:    '1, -2',
399: 1:    '-1, 2',
399: 1:    '-1, -2',
399: 1:    '1, 1000',
399: 1:    '56, 45',
399: 1:    '111, 110',
399: 1:    '111, 11',
399: 1:    '11111, 11',
399: 1:    '-11, -222'
399: 1:  ]
399: 1:}
399: 1:Scores: 53315
399: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)']')
399: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
400: 1:BoardData {
400: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
400: 1:  'expectedAnswer': '-5.0(45)',
400: 1:  'history': [
400: 1:    {
400: 1:      'answer': '0.5',
400: 1:      'question': '1, 2',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '1',
400: 1:      'question': '1, 1',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '1',
400: 1:      'question': '5, 5',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '11',
400: 1:      'question': '55, 5',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '1.25',
400: 1:      'question': '55, 44',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '0',
400: 1:      'question': '0, 56',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '56',
400: 1:      'question': '56, 1',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '-0.5',
400: 1:      'question': '1, -2',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '-0.5',
400: 1:      'question': '-1, 2',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '0.5',
400: 1:      'question': '-1, -2',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '0.001',
400: 1:      'question': '1, 1000',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '1.2(4)',
400: 1:      'question': '56, 45',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '1.00(90)',
400: 1:      'question': '111, 110',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '10.0(90)',
400: 1:      'question': '111, 11',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '1010.0(90)',
400: 1:      'question': '11111, 11',
400: 1:      'valid': true
400: 1:    },
400: 1:    {
400: 1:      'answer': '0.0(495)',
400: 1:      'question': '-11, -222',
400: 1:      'valid': true
400: 1:    }
400: 1:  ],
400: 1:  'level': 15,
400: 1:  'nextQuestion': '111, -22',
400: 1:  'questions': [
400: 1:    '1, 2',
400: 1:    '1, 1',
400: 1:    '5, 5',
400: 1:    '55, 5',
400: 1:    '55, 44',
400: 1:    '0, 56',
400: 1:    '56, 1',
400: 1:    '1, -2',
400: 1:    '-1, 2',
400: 1:    '-1, -2',
400: 1:    '1, 1000',
400: 1:    '56, 45',
400: 1:    '111, 110',
400: 1:    '111, 11',
400: 1:    '11111, 11',
400: 1:    '-11, -222',
400: 1:    '111, -22'
400: 1:  ]
400: 1:}
400: 1:Scores: 53336
400: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)']')
400: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
401: 1:BoardData {
401: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
401: 1:  'expectedAnswer': '0.000(3)',
401: 1:  'history': [
401: 1:    {
401: 1:      'answer': '0.5',
401: 1:      'question': '1, 2',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '1',
401: 1:      'question': '1, 1',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '1',
401: 1:      'question': '5, 5',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '11',
401: 1:      'question': '55, 5',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '1.25',
401: 1:      'question': '55, 44',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '0',
401: 1:      'question': '0, 56',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '56',
401: 1:      'question': '56, 1',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '-0.5',
401: 1:      'question': '1, -2',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '-0.5',
401: 1:      'question': '-1, 2',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '0.5',
401: 1:      'question': '-1, -2',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '0.001',
401: 1:      'question': '1, 1000',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '1.2(4)',
401: 1:      'question': '56, 45',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '1.00(90)',
401: 1:      'question': '111, 110',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '10.0(90)',
401: 1:      'question': '111, 11',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '1010.0(90)',
401: 1:      'question': '11111, 11',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '0.0(495)',
401: 1:      'question': '-11, -222',
401: 1:      'valid': true
401: 1:    },
401: 1:    {
401: 1:      'answer': '-5.0(45)',
401: 1:      'question': '111, -22',
401: 1:      'valid': true
401: 1:    }
401: 1:  ],
401: 1:  'level': 15,
401: 1:  'nextQuestion': '1, 3000',
401: 1:  'questions': [
401: 1:    '1, 2',
401: 1:    '1, 1',
401: 1:    '5, 5',
401: 1:    '55, 5',
401: 1:    '55, 44',
401: 1:    '0, 56',
401: 1:    '56, 1',
401: 1:    '1, -2',
401: 1:    '-1, 2',
401: 1:    '-1, -2',
401: 1:    '1, 1000',
401: 1:    '56, 45',
401: 1:    '111, 110',
401: 1:    '111, 11',
401: 1:    '11111, 11',
401: 1:    '-11, -222',
401: 1:    '111, -22',
401: 1:    '1, 3000'
401: 1:  ]
401: 1:}
401: 1:Scores: 53357
401: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)']')
401: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
402: 1:BoardData {
402: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
402: 1:  'expectedAnswer': '1.1(153846)',
402: 1:  'history': [
402: 1:    {
402: 1:      'answer': '0.5',
402: 1:      'question': '1, 2',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '1',
402: 1:      'question': '1, 1',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '1',
402: 1:      'question': '5, 5',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '11',
402: 1:      'question': '55, 5',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '1.25',
402: 1:      'question': '55, 44',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '0',
402: 1:      'question': '0, 56',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '56',
402: 1:      'question': '56, 1',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '-0.5',
402: 1:      'question': '1, -2',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '-0.5',
402: 1:      'question': '-1, 2',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '0.5',
402: 1:      'question': '-1, -2',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '0.001',
402: 1:      'question': '1, 1000',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '1.2(4)',
402: 1:      'question': '56, 45',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '1.00(90)',
402: 1:      'question': '111, 110',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '10.0(90)',
402: 1:      'question': '111, 11',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '1010.0(90)',
402: 1:      'question': '11111, 11',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '0.0(495)',
402: 1:      'question': '-11, -222',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '-5.0(45)',
402: 1:      'question': '111, -22',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '0.000(3)',
402: 1:      'question': '1, 3000',
402: 1:      'valid': true
402: 1:    }
402: 1:  ],
402: 1:  'level': 15,
402: 1:  'nextQuestion': '87, 78',
402: 1:  'questions': [
402: 1:    '1, 2',
402: 1:    '1, 1',
402: 1:    '5, 5',
402: 1:    '55, 5',
402: 1:    '55, 44',
402: 1:    '0, 56',
402: 1:    '56, 1',
402: 1:    '1, -2',
402: 1:    '-1, 2',
402: 1:    '-1, -2',
402: 1:    '1, 1000',
402: 1:    '56, 45',
402: 1:    '111, 110',
402: 1:    '111, 11',
402: 1:    '11111, 11',
402: 1:    '-11, -222',
402: 1:    '111, -22',
402: 1:    '1, 3000',
402: 1:    '87, 78'
402: 1:  ]
402: 1:}
402: 1:Scores: 53378
402: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)']')
402: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
403: 1:BoardData {
403: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
403: 1:  'expectedAnswer': '0.803(571428)',
403: 1:  'history': [
403: 1:    {
403: 1:      'answer': '0.5',
403: 1:      'question': '1, 2',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '1',
403: 1:      'question': '1, 1',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '1',
403: 1:      'question': '5, 5',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '11',
403: 1:      'question': '55, 5',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '1.25',
403: 1:      'question': '55, 44',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '0',
403: 1:      'question': '0, 56',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '56',
403: 1:      'question': '56, 1',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '-0.5',
403: 1:      'question': '1, -2',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '-0.5',
403: 1:      'question': '-1, 2',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '0.5',
403: 1:      'question': '-1, -2',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '0.001',
403: 1:      'question': '1, 1000',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '1.2(4)',
403: 1:      'question': '56, 45',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '1.00(90)',
403: 1:      'question': '111, 110',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '10.0(90)',
403: 1:      'question': '111, 11',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '1010.0(90)',
403: 1:      'question': '11111, 11',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '0.0(495)',
403: 1:      'question': '-11, -222',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '-5.0(45)',
403: 1:      'question': '111, -22',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '0.000(3)',
403: 1:      'question': '1, 3000',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '1.1(153846)',
403: 1:      'question': '87, 78',
403: 1:      'valid': true
403: 1:    }
403: 1:  ],
403: 1:  'level': 15,
403: 1:  'nextQuestion': '45, 56',
403: 1:  'questions': [
403: 1:    '1, 2',
403: 1:    '1, 1',
403: 1:    '5, 5',
403: 1:    '55, 5',
403: 1:    '55, 44',
403: 1:    '0, 56',
403: 1:    '56, 1',
403: 1:    '1, -2',
403: 1:    '-1, 2',
403: 1:    '-1, -2',
403: 1:    '1, 1000',
403: 1:    '56, 45',
403: 1:    '111, 110',
403: 1:    '111, 11',
403: 1:    '11111, 11',
403: 1:    '-11, -222',
403: 1:    '111, -22',
403: 1:    '1, 3000',
403: 1:    '87, 78',
403: 1:    '45, 56'
403: 1:  ]
403: 1:}
403: 1:Scores: 53399
403: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)']')
403: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
404: 1:BoardData {
404: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
404: 1:  'expectedAnswer': '1.(593984962406015037)',
404: 1:  'history': [
404: 1:    {
404: 1:      'answer': '0.5',
404: 1:      'question': '1, 2',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '1',
404: 1:      'question': '1, 1',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '1',
404: 1:      'question': '5, 5',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '11',
404: 1:      'question': '55, 5',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '1.25',
404: 1:      'question': '55, 44',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '0',
404: 1:      'question': '0, 56',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '56',
404: 1:      'question': '56, 1',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '-0.5',
404: 1:      'question': '1, -2',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '-0.5',
404: 1:      'question': '-1, 2',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '0.5',
404: 1:      'question': '-1, -2',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '0.001',
404: 1:      'question': '1, 1000',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '1.2(4)',
404: 1:      'question': '56, 45',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '1.00(90)',
404: 1:      'question': '111, 110',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '10.0(90)',
404: 1:      'question': '111, 11',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '1010.0(90)',
404: 1:      'question': '11111, 11',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '0.0(495)',
404: 1:      'question': '-11, -222',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '-5.0(45)',
404: 1:      'question': '111, -22',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '0.000(3)',
404: 1:      'question': '1, 3000',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '1.1(153846)',
404: 1:      'question': '87, 78',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '0.803(571428)',
404: 1:      'question': '45, 56',
404: 1:      'valid': true
404: 1:    }
404: 1:  ],
404: 1:  'level': 15,
404: 1:  'nextQuestion': '212, 133',
404: 1:  'questions': [
404: 1:    '1, 2',
404: 1:    '1, 1',
404: 1:    '5, 5',
404: 1:    '55, 5',
404: 1:    '55, 44',
404: 1:    '0, 56',
404: 1:    '56, 1',
404: 1:    '1, -2',
404: 1:    '-1, 2',
404: 1:    '-1, -2',
404: 1:    '1, 1000',
404: 1:    '56, 45',
404: 1:    '111, 110',
404: 1:    '111, 11',
404: 1:    '11111, 11',
404: 1:    '-11, -222',
404: 1:    '111, -22',
404: 1:    '1, 3000',
404: 1:    '87, 78',
404: 1:    '45, 56',
404: 1:    '212, 133'
404: 1:  ]
404: 1:}
404: 1:Scores: 53420
404: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)']')
404: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
405: 1:BoardData {
405: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
405: 1:  'expectedAnswer': '96.6(1739130434782608695652)',
405: 1:  'history': [
405: 1:    {
405: 1:      'answer': '0.5',
405: 1:      'question': '1, 2',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '1',
405: 1:      'question': '1, 1',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '1',
405: 1:      'question': '5, 5',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '11',
405: 1:      'question': '55, 5',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '1.25',
405: 1:      'question': '55, 44',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '0',
405: 1:      'question': '0, 56',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '56',
405: 1:      'question': '56, 1',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '-0.5',
405: 1:      'question': '1, -2',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '-0.5',
405: 1:      'question': '-1, 2',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '0.5',
405: 1:      'question': '-1, -2',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '0.001',
405: 1:      'question': '1, 1000',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '1.2(4)',
405: 1:      'question': '56, 45',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '1.00(90)',
405: 1:      'question': '111, 110',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '10.0(90)',
405: 1:      'question': '111, 11',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '1010.0(90)',
405: 1:      'question': '11111, 11',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '0.0(495)',
405: 1:      'question': '-11, -222',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '-5.0(45)',
405: 1:      'question': '111, -22',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '0.000(3)',
405: 1:      'question': '1, 3000',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '1.1(153846)',
405: 1:      'question': '87, 78',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '0.803(571428)',
405: 1:      'question': '45, 56',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '1.(593984962406015037)',
405: 1:      'question': '212, 133',
405: 1:      'valid': true
405: 1:    }
405: 1:  ],
405: 1:  'level': 15,
405: 1:  'nextQuestion': '11111, 115',
405: 1:  'questions': [
405: 1:    '1, 2',
405: 1:    '1, 1',
405: 1:    '5, 5',
405: 1:    '55, 5',
405: 1:    '55, 44',
405: 1:    '0, 56',
405: 1:    '56, 1',
405: 1:    '1, -2',
405: 1:    '-1, 2',
405: 1:    '-1, -2',
405: 1:    '1, 1000',
405: 1:    '56, 45',
405: 1:    '111, 110',
405: 1:    '111, 11',
405: 1:    '11111, 11',
405: 1:    '-11, -222',
405: 1:    '111, -22',
405: 1:    '1, 3000',
405: 1:    '87, 78',
405: 1:    '45, 56',
405: 1:    '212, 133',
405: 1:    '11111, 115'
405: 1:  ]
405: 1:}
405: 1:Scores: 53441
405: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)']')
405: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
406: 1:BoardData {
406: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
406: 1:  'expectedAnswer': '0.3(5652173913043478260869)',
406: 1:  'history': [
406: 1:    {
406: 1:      'answer': '0.5',
406: 1:      'question': '1, 2',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '1',
406: 1:      'question': '1, 1',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '1',
406: 1:      'question': '5, 5',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '11',
406: 1:      'question': '55, 5',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '1.25',
406: 1:      'question': '55, 44',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '0',
406: 1:      'question': '0, 56',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '56',
406: 1:      'question': '56, 1',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '-0.5',
406: 1:      'question': '1, -2',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '-0.5',
406: 1:      'question': '-1, 2',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '0.5',
406: 1:      'question': '-1, -2',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '0.001',
406: 1:      'question': '1, 1000',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '1.2(4)',
406: 1:      'question': '56, 45',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '1.00(90)',
406: 1:      'question': '111, 110',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '10.0(90)',
406: 1:      'question': '111, 11',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '1010.0(90)',
406: 1:      'question': '11111, 11',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '0.0(495)',
406: 1:      'question': '-11, -222',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '-5.0(45)',
406: 1:      'question': '111, -22',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '0.000(3)',
406: 1:      'question': '1, 3000',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '1.1(153846)',
406: 1:      'question': '87, 78',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '0.803(571428)',
406: 1:      'question': '45, 56',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '1.(593984962406015037)',
406: 1:      'question': '212, 133',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '96.6(1739130434782608695652)',
406: 1:      'question': '11111, 115',
406: 1:      'valid': true
406: 1:    }
406: 1:  ],
406: 1:  'level': 15,
406: 1:  'nextQuestion': '123, 345',
406: 1:  'questions': [
406: 1:    '1, 2',
406: 1:    '1, 1',
406: 1:    '5, 5',
406: 1:    '55, 5',
406: 1:    '55, 44',
406: 1:    '0, 56',
406: 1:    '56, 1',
406: 1:    '1, -2',
406: 1:    '-1, 2',
406: 1:    '-1, -2',
406: 1:    '1, 1000',
406: 1:    '56, 45',
406: 1:    '111, 110',
406: 1:    '111, 11',
406: 1:    '11111, 11',
406: 1:    '-11, -222',
406: 1:    '111, -22',
406: 1:    '1, 3000',
406: 1:    '87, 78',
406: 1:    '45, 56',
406: 1:    '212, 133',
406: 1:    '11111, 115',
406: 1:    '123, 345'
406: 1:  ]
406: 1:}
406: 1:Scores: 53462
406: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)']')
406: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
407: 1:BoardData {
407: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
407: 1:  'expectedAnswer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
407: 1:  'history': [
407: 1:    {
407: 1:      'answer': '0.5',
407: 1:      'question': '1, 2',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1',
407: 1:      'question': '1, 1',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1',
407: 1:      'question': '5, 5',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '11',
407: 1:      'question': '55, 5',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1.25',
407: 1:      'question': '55, 44',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '0',
407: 1:      'question': '0, 56',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '56',
407: 1:      'question': '56, 1',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '-0.5',
407: 1:      'question': '1, -2',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '-0.5',
407: 1:      'question': '-1, 2',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '0.5',
407: 1:      'question': '-1, -2',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '0.001',
407: 1:      'question': '1, 1000',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1.2(4)',
407: 1:      'question': '56, 45',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1.00(90)',
407: 1:      'question': '111, 110',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '10.0(90)',
407: 1:      'question': '111, 11',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1010.0(90)',
407: 1:      'question': '11111, 11',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '0.0(495)',
407: 1:      'question': '-11, -222',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '-5.0(45)',
407: 1:      'question': '111, -22',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '0.000(3)',
407: 1:      'question': '1, 3000',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1.1(153846)',
407: 1:      'question': '87, 78',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '0.803(571428)',
407: 1:      'question': '45, 56',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '1.(593984962406015037)',
407: 1:      'question': '212, 133',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '96.6(1739130434782608695652)',
407: 1:      'question': '11111, 115',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '0.3(5652173913043478260869)',
407: 1:      'question': '123, 345',
407: 1:      'valid': true
407: 1:    }
407: 1:  ],
407: 1:  'level': 15,
407: 1:  'nextQuestion': '66666666, 77727777',
407: 1:  'questions': [
407: 1:    '1, 2',
407: 1:    '1, 1',
407: 1:    '5, 5',
407: 1:    '55, 5',
407: 1:    '55, 44',
407: 1:    '0, 56',
407: 1:    '56, 1',
407: 1:    '1, -2',
407: 1:    '-1, 2',
407: 1:    '-1, -2',
407: 1:    '1, 1000',
407: 1:    '56, 45',
407: 1:    '111, 110',
407: 1:    '111, 11',
407: 1:    '11111, 11',
407: 1:    '-11, -222',
407: 1:    '111, -22',
407: 1:    '1, 3000',
407: 1:    '87, 78',
407: 1:    '45, 56',
407: 1:    '212, 133',
407: 1:    '11111, 115',
407: 1:    '123, 345',
407: 1:    '66666666, 77727777'
407: 1:  ]
407: 1:}
407: 1:Scores: 53483
407: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484']')
407: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
408: 1:BoardData {
408: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
408: 1:  'expectedAnswer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
408: 1:  'history': [
408: 1:    {
408: 1:      'answer': '0.5',
408: 1:      'question': '1, 2',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1',
408: 1:      'question': '1, 1',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1',
408: 1:      'question': '5, 5',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '11',
408: 1:      'question': '55, 5',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1.25',
408: 1:      'question': '55, 44',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '0',
408: 1:      'question': '0, 56',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '56',
408: 1:      'question': '56, 1',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '-0.5',
408: 1:      'question': '1, -2',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '-0.5',
408: 1:      'question': '-1, 2',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '0.5',
408: 1:      'question': '-1, -2',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '0.001',
408: 1:      'question': '1, 1000',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1.2(4)',
408: 1:      'question': '56, 45',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1.00(90)',
408: 1:      'question': '111, 110',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '10.0(90)',
408: 1:      'question': '111, 11',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1010.0(90)',
408: 1:      'question': '11111, 11',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '0.0(495)',
408: 1:      'question': '-11, -222',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '-5.0(45)',
408: 1:      'question': '111, -22',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '0.000(3)',
408: 1:      'question': '1, 3000',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1.1(153846)',
408: 1:      'question': '87, 78',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '0.803(571428)',
408: 1:      'question': '45, 56',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '1.(593984962406015037)',
408: 1:      'question': '212, 133',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '96.6(1739130434782608695652)',
408: 1:      'question': '11111, 115',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '0.3(5652173913043478260869)',
408: 1:      'question': '123, 345',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
408: 1:      'question': '66666666, 77727777',
408: 1:      'valid': true
408: 1:    }
408: 1:  ],
408: 1:  'level': 15,
408: 1:  'nextQuestion': '666666660, 77727777',
408: 1:  'questions': [
408: 1:    '1, 2',
408: 1:    '1, 1',
408: 1:    '5, 5',
408: 1:    '55, 5',
408: 1:    '55, 44',
408: 1:    '0, 56',
408: 1:    '56, 1',
408: 1:    '1, -2',
408: 1:    '-1, 2',
408: 1:    '-1, -2',
408: 1:    '1, 1000',
408: 1:    '56, 45',
408: 1:    '111, 110',
408: 1:    '111, 11',
408: 1:    '11111, 11',
408: 1:    '-11, -222',
408: 1:    '111, -22',
408: 1:    '1, 3000',
408: 1:    '87, 78',
408: 1:    '45, 56',
408: 1:    '212, 133',
408: 1:    '11111, 115',
408: 1:    '123, 345',
408: 1:    '66666666, 77727777',
408: 1:    '666666660, 77727777'
408: 1:  ]
408: 1:}
408: 1:Scores: 53504
408: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847']')
408: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
409: 1:BoardData {
409: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
409: 1:  'expectedAnswer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
409: 1:  'history': [
409: 1:    {
409: 1:      'answer': '0.5',
409: 1:      'question': '1, 2',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1',
409: 1:      'question': '1, 1',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1',
409: 1:      'question': '5, 5',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '11',
409: 1:      'question': '55, 5',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1.25',
409: 1:      'question': '55, 44',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '0',
409: 1:      'question': '0, 56',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '56',
409: 1:      'question': '56, 1',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '-0.5',
409: 1:      'question': '1, -2',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '-0.5',
409: 1:      'question': '-1, 2',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '0.5',
409: 1:      'question': '-1, -2',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '0.001',
409: 1:      'question': '1, 1000',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1.2(4)',
409: 1:      'question': '56, 45',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1.00(90)',
409: 1:      'question': '111, 110',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '10.0(90)',
409: 1:      'question': '111, 11',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1010.0(90)',
409: 1:      'question': '11111, 11',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '0.0(495)',
409: 1:      'question': '-11, -222',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '-5.0(45)',
409: 1:      'question': '111, -22',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '0.000(3)',
409: 1:      'question': '1, 3000',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1.1(153846)',
409: 1:      'question': '87, 78',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '0.803(571428)',
409: 1:      'question': '45, 56',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '1.(593984962406015037)',
409: 1:      'question': '212, 133',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '96.6(1739130434782608695652)',
409: 1:      'question': '11111, 115',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '0.3(5652173913043478260869)',
409: 1:      'question': '123, 345',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
409: 1:      'question': '66666666, 77727777',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
409: 1:      'question': '666666660, 77727777',
409: 1:      'valid': true
409: 1:    }
409: 1:  ],
409: 1:  'level': 15,
409: 1:  'nextQuestion': '666666660, 7772777',
409: 1:  'questions': [
409: 1:    '1, 2',
409: 1:    '1, 1',
409: 1:    '5, 5',
409: 1:    '55, 5',
409: 1:    '55, 44',
409: 1:    '0, 56',
409: 1:    '56, 1',
409: 1:    '1, -2',
409: 1:    '-1, 2',
409: 1:    '-1, -2',
409: 1:    '1, 1000',
409: 1:    '56, 45',
409: 1:    '111, 110',
409: 1:    '111, 11',
409: 1:    '11111, 11',
409: 1:    '-11, -222',
409: 1:    '111, -22',
409: 1:    '1, 3000',
409: 1:    '87, 78',
409: 1:    '45, 56',
409: 1:    '212, 133',
409: 1:    '11111, 115',
409: 1:    '123, 345',
409: 1:    '66666666, 77727777',
409: 1:    '666666660, 77727777',
409: 1:    '666666660, 7772777'
409: 1:  ]
409: 1:}
409: 1:Scores: 53525
409: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713']')
409: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
410: 1:BoardData {
410: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
410: 1:  'expectedAnswer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
410: 1:  'history': [
410: 1:    {
410: 1:      'answer': '0.5',
410: 1:      'question': '1, 2',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1',
410: 1:      'question': '1, 1',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1',
410: 1:      'question': '5, 5',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '11',
410: 1:      'question': '55, 5',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1.25',
410: 1:      'question': '55, 44',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '0',
410: 1:      'question': '0, 56',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '56',
410: 1:      'question': '56, 1',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '-0.5',
410: 1:      'question': '1, -2',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '-0.5',
410: 1:      'question': '-1, 2',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '0.5',
410: 1:      'question': '-1, -2',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '0.001',
410: 1:      'question': '1, 1000',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1.2(4)',
410: 1:      'question': '56, 45',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1.00(90)',
410: 1:      'question': '111, 110',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '10.0(90)',
410: 1:      'question': '111, 11',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1010.0(90)',
410: 1:      'question': '11111, 11',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '0.0(495)',
410: 1:      'question': '-11, -222',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '-5.0(45)',
410: 1:      'question': '111, -22',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '0.000(3)',
410: 1:      'question': '1, 3000',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1.1(153846)',
410: 1:      'question': '87, 78',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '0.803(571428)',
410: 1:      'question': '45, 56',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '1.(593984962406015037)',
410: 1:      'question': '212, 133',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '96.6(1739130434782608695652)',
410: 1:      'question': '11111, 115',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '0.3(5652173913043478260869)',
410: 1:      'question': '123, 345',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
410: 1:      'question': '66666666, 77727777',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
410: 1:      'question': '666666660, 77727777',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
410: 1:      'question': '666666660, 7772777',
410: 1:      'valid': true
410: 1:    }
410: 1:  ],
410: 1:  'level': 15,
410: 1:  'nextQuestion': '100, 97',
410: 1:  'questions': [
410: 1:    '1, 2',
410: 1:    '1, 1',
410: 1:    '5, 5',
410: 1:    '55, 5',
410: 1:    '55, 44',
410: 1:    '0, 56',
410: 1:    '56, 1',
410: 1:    '1, -2',
410: 1:    '-1, 2',
410: 1:    '-1, -2',
410: 1:    '1, 1000',
410: 1:    '56, 45',
410: 1:    '111, 110',
410: 1:    '111, 11',
410: 1:    '11111, 11',
410: 1:    '-11, -222',
410: 1:    '111, -22',
410: 1:    '1, 3000',
410: 1:    '87, 78',
410: 1:    '45, 56',
410: 1:    '212, 133',
410: 1:    '11111, 115',
410: 1:    '123, 345',
410: 1:    '66666666, 77727777',
410: 1:    '666666660, 77727777',
410: 1:    '666666660, 7772777',
410: 1:    '100, 97'
410: 1:  ]
410: 1:}
410: 1:Scores: 53546
410: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713', '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)']')
410: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
411: 1:BoardData {
411: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
411: 1:  'expectedAnswer': 'Div by zero error!',
411: 1:  'history': [
411: 1:    {
411: 1:      'answer': '0.5',
411: 1:      'question': '1, 2',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1',
411: 1:      'question': '1, 1',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1',
411: 1:      'question': '5, 5',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '11',
411: 1:      'question': '55, 5',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1.25',
411: 1:      'question': '55, 44',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '0',
411: 1:      'question': '0, 56',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '56',
411: 1:      'question': '56, 1',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '-0.5',
411: 1:      'question': '1, -2',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '-0.5',
411: 1:      'question': '-1, 2',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '0.5',
411: 1:      'question': '-1, -2',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '0.001',
411: 1:      'question': '1, 1000',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1.2(4)',
411: 1:      'question': '56, 45',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1.00(90)',
411: 1:      'question': '111, 110',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '10.0(90)',
411: 1:      'question': '111, 11',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1010.0(90)',
411: 1:      'question': '11111, 11',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '0.0(495)',
411: 1:      'question': '-11, -222',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '-5.0(45)',
411: 1:      'question': '111, -22',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '0.000(3)',
411: 1:      'question': '1, 3000',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1.1(153846)',
411: 1:      'question': '87, 78',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '0.803(571428)',
411: 1:      'question': '45, 56',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1.(593984962406015037)',
411: 1:      'question': '212, 133',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '96.6(1739130434782608695652)',
411: 1:      'question': '11111, 115',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '0.3(5652173913043478260869)',
411: 1:      'question': '123, 345',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
411: 1:      'question': '66666666, 77727777',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
411: 1:      'question': '666666660, 77727777',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
411: 1:      'question': '666666660, 7772777',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
411: 1:      'question': '100, 97',
411: 1:      'valid': true
411: 1:    }
411: 1:  ],
411: 1:  'level': 15,
411: 1:  'nextQuestion': '999, 0',
411: 1:  'questions': [
411: 1:    '1, 2',
411: 1:    '1, 1',
411: 1:    '5, 5',
411: 1:    '55, 5',
411: 1:    '55, 44',
411: 1:    '0, 56',
411: 1:    '56, 1',
411: 1:    '1, -2',
411: 1:    '-1, 2',
411: 1:    '-1, -2',
411: 1:    '1, 1000',
411: 1:    '56, 45',
411: 1:    '111, 110',
411: 1:    '111, 11',
411: 1:    '11111, 11',
411: 1:    '-11, -222',
411: 1:    '111, -22',
411: 1:    '1, 3000',
411: 1:    '87, 78',
411: 1:    '45, 56',
411: 1:    '212, 133',
411: 1:    '11111, 115',
411: 1:    '123, 345',
411: 1:    '66666666, 77727777',
411: 1:    '666666660, 77727777',
411: 1:    '666666660, 7772777',
411: 1:    '100, 97',
411: 1:    '999, 0'
411: 1:  ]
411: 1:}
411: 1:Scores: 53567
411: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713', '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)', 'Div by zero error!']')
411: 1:Fire Event: PassTest{complexity=60, testCount=28}
411: 1:Fire Event: NextAlgorithm{complexity=60, time=0}
------------------------------------------
412: 1:BoardData {
412: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
412: 1:  'history': [
412: 1:    {
412: 1:      'answer': '0.5',
412: 1:      'question': '1, 2',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1',
412: 1:      'question': '1, 1',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1',
412: 1:      'question': '5, 5',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '11',
412: 1:      'question': '55, 5',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1.25',
412: 1:      'question': '55, 44',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '0',
412: 1:      'question': '0, 56',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '56',
412: 1:      'question': '56, 1',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '-0.5',
412: 1:      'question': '1, -2',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '-0.5',
412: 1:      'question': '-1, 2',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '0.5',
412: 1:      'question': '-1, -2',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '0.001',
412: 1:      'question': '1, 1000',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1.2(4)',
412: 1:      'question': '56, 45',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1.00(90)',
412: 1:      'question': '111, 110',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '10.0(90)',
412: 1:      'question': '111, 11',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1010.0(90)',
412: 1:      'question': '11111, 11',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '0.0(495)',
412: 1:      'question': '-11, -222',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '-5.0(45)',
412: 1:      'question': '111, -22',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '0.000(3)',
412: 1:      'question': '1, 3000',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1.1(153846)',
412: 1:      'question': '87, 78',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '0.803(571428)',
412: 1:      'question': '45, 56',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1.(593984962406015037)',
412: 1:      'question': '212, 133',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '96.6(1739130434782608695652)',
412: 1:      'question': '11111, 115',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '0.3(5652173913043478260869)',
412: 1:      'question': '123, 345',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
412: 1:      'question': '66666666, 77727777',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
412: 1:      'question': '666666660, 77727777',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
412: 1:      'question': '666666660, 7772777',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
412: 1:      'question': '100, 97',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': 'Div by zero error!',
412: 1:      'question': '999, 0',
412: 1:      'valid': true
412: 1:    }
412: 1:  ],
412: 1:  'level': 15,
412: 1:  'questions': []
412: 1:}
412: 1:Scores: 61687
412: 1:Answer: message('StartNextLevel')
412: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
413: 1:BoardData {
413: 1:  'description': ['No more Levels. You win!'],
413: 1:  'history': [],
413: 1:  'level': 16,
413: 1:  'questions': []
413: 1:}
413: 1:Scores: 61687
413: 1:Answer: message('StartNextLevel')
------------------------------------------
414: 1:BoardData {
414: 1:  'description': ['No more Levels. You win!'],
414: 1:  'history': [],
414: 1:  'level': 16,
414: 1:  'questions': []
414: 1:}
414: 1:Scores: 61687
414: 1:Answer: message('StartNextLevel')
------------------------------------------
415: 1:BoardData {
415: 1:  'description': ['No more Levels. You win!'],
415: 1:  'history': [],
415: 1:  'level': 16,
415: 1:  'questions': []
415: 1:}
415: 1:Scores: 61687
415: 1:Answer: message('StartNextLevel')
------------------------------------------
416: 1:BoardData {
416: 1:  'description': ['No more Levels. You win!'],
416: 1:  'history': [],
416: 1:  'level': 16,
416: 1:  'questions': []
416: 1:}
416: 1:Scores: 61687
416: 1:Answer: message('StartNextLevel')
------------------------------------------
417: 1:BoardData {
417: 1:  'description': ['No more Levels. You win!'],
417: 1:  'history': [],
417: 1:  'level': 16,
417: 1:  'questions': []
417: 1:}
417: 1:Scores: 61687
417: 1:Answer: message('StartNextLevel')
------------------------------------------
418: 1:BoardData {
418: 1:  'description': ['No more Levels. You win!'],
418: 1:  'history': [],
418: 1:  'level': 16,
418: 1:  'questions': []
418: 1:}
418: 1:Scores: 61687
418: 1:Answer: message('StartNextLevel')
------------------------------------------
419: 1:BoardData {
419: 1:  'description': ['No more Levels. You win!'],
419: 1:  'history': [],
419: 1:  'level': 16,
419: 1:  'questions': []
419: 1:}
419: 1:Scores: 61687
419: 1:Answer: message('StartNextLevel')
------------------------------------------
420: 1:BoardData {
420: 1:  'description': ['No more Levels. You win!'],
420: 1:  'history': [],
420: 1:  'level': 16,
420: 1:  'questions': []
420: 1:}
420: 1:Scores: 61687
420: 1:Answer: message('StartNextLevel')
------------------------------------------
421: 1:BoardData {
421: 1:  'description': ['No more Levels. You win!'],
421: 1:  'history': [],
421: 1:  'level': 16,
421: 1:  'questions': []
421: 1:}
421: 1:Scores: 61687
421: 1:Answer: message('StartNextLevel')
------------------------------------------
422: 1:BoardData {
422: 1:  'description': ['No more Levels. You win!'],
422: 1:  'history': [],
422: 1:  'level': 16,
422: 1:  'questions': []
422: 1:}
422: 1:Scores: 61687
422: 1:Answer: message('StartNextLevel')
------------------------------------------
423: 1:BoardData {
423: 1:  'description': ['No more Levels. You win!'],
423: 1:  'history': [],
423: 1:  'level': 16,
423: 1:  'questions': []
423: 1:}
423: 1:Scores: 61687
423: 1:Answer: message('StartNextLevel')
------------------------------------------
424: 1:BoardData {
424: 1:  'description': ['No more Levels. You win!'],
424: 1:  'history': [],
424: 1:  'level': 16,
424: 1:  'questions': []
424: 1:}
424: 1:Scores: 61687
424: 1:Answer: message('StartNextLevel')
------------------------------------------
425: 1:BoardData {
425: 1:  'description': ['No more Levels. You win!'],
425: 1:  'history': [],
425: 1:  'level': 16,
425: 1:  'questions': []
425: 1:}
425: 1:Scores: 61687
425: 1:Answer: message('StartNextLevel')
------------------------------------------
426: 1:BoardData {
426: 1:  'description': ['No more Levels. You win!'],
426: 1:  'history': [],
426: 1:  'level': 16,
426: 1:  'questions': []
426: 1:}
426: 1:Scores: 61687
426: 1:Answer: message('StartNextLevel')
------------------------------------------
427: 1:BoardData {
427: 1:  'description': ['No more Levels. You win!'],
427: 1:  'history': [],
427: 1:  'level': 16,
427: 1:  'questions': []
427: 1:}
427: 1:Scores: 61687
427: 1:Answer: message('StartNextLevel')
------------------------------------------
428: 1:BoardData {
428: 1:  'description': ['No more Levels. You win!'],
428: 1:  'history': [],
428: 1:  'level': 16,
428: 1:  'questions': []
428: 1:}
428: 1:Scores: 61687
428: 1:Answer: message('StartNextLevel')
------------------------------------------
429: 1:BoardData {
429: 1:  'description': ['No more Levels. You win!'],
429: 1:  'history': [],
429: 1:  'level': 16,
429: 1:  'questions': []
429: 1:}
429: 1:Scores: 61687
429: 1:Answer: message('StartNextLevel')
------------------------------------------
430: 1:BoardData {
430: 1:  'description': ['No more Levels. You win!'],
430: 1:  'history': [],
430: 1:  'level': 16,
430: 1:  'questions': []
430: 1:}
430: 1:Scores: 61687
430: 1:Answer: message('StartNextLevel')
------------------------------------------
431: 1:BoardData {
431: 1:  'description': ['No more Levels. You win!'],
431: 1:  'history': [],
431: 1:  'level': 16,
431: 1:  'questions': []
431: 1:}
431: 1:Scores: 61687
431: 1:Answer: message('StartNextLevel')
------------------------------------------
432: 1:BoardData {
432: 1:  'description': ['No more Levels. You win!'],
432: 1:  'history': [],
432: 1:  'level': 16,
432: 1:  'questions': []
432: 1:}
432: 1:Scores: 61687
432: 1:Answer: message('StartNextLevel')
------------------------------------------
433: 1:BoardData {
433: 1:  'description': ['No more Levels. You win!'],
433: 1:  'history': [],
433: 1:  'level': 16,
433: 1:  'questions': []
433: 1:}
433: 1:Scores: 61687
433: 1:Answer: message('StartNextLevel')
------------------------------------------
434: 1:BoardData {
434: 1:  'description': ['No more Levels. You win!'],
434: 1:  'history': [],
434: 1:  'level': 16,
434: 1:  'questions': []
434: 1:}
434: 1:Scores: 61687
434: 1:Answer: message('StartNextLevel')
------------------------------------------
435: 1:BoardData {
435: 1:  'description': ['No more Levels. You win!'],
435: 1:  'history': [],
435: 1:  'level': 16,
435: 1:  'questions': []
435: 1:}
435: 1:Scores: 61687
435: 1:Answer: message('StartNextLevel')
------------------------------------------
436: 1:BoardData {
436: 1:  'description': ['No more Levels. You win!'],
436: 1:  'history': [],
436: 1:  'level': 16,
436: 1:  'questions': []
436: 1:}
436: 1:Scores: 61687
436: 1:Answer: message('StartNextLevel')
------------------------------------------
437: 1:BoardData {
437: 1:  'description': ['No more Levels. You win!'],
437: 1:  'history': [],
437: 1:  'level': 16,
437: 1:  'questions': []
437: 1:}
437: 1:Scores: 61687
437: 1:Answer: message('StartNextLevel')
------------------------------------------
438: 1:BoardData {
438: 1:  'description': ['No more Levels. You win!'],
438: 1:  'history': [],
438: 1:  'level': 16,
438: 1:  'questions': []
438: 1:}
438: 1:Scores: 61687
438: 1:Answer: message('StartNextLevel')
------------------------------------------
439: 1:BoardData {
439: 1:  'description': ['No more Levels. You win!'],
439: 1:  'history': [],
439: 1:  'level': 16,
439: 1:  'questions': []
439: 1:}
439: 1:Scores: 61687
439: 1:Answer: message('StartNextLevel')
------------------------------------------
440: 1:BoardData {
440: 1:  'description': ['No more Levels. You win!'],
440: 1:  'history': [],
440: 1:  'level': 16,
440: 1:  'questions': []
440: 1:}
440: 1:Scores: 61687
440: 1:Answer: message('StartNextLevel')
------------------------------------------
441: 1:BoardData {
441: 1:  'description': ['No more Levels. You win!'],
441: 1:  'history': [],
441: 1:  'level': 16,
441: 1:  'questions': []
441: 1:}
441: 1:Scores: 61687
441: 1:Answer: message('StartNextLevel')
------------------------------------------
442: 1:BoardData {
442: 1:  'description': ['No more Levels. You win!'],
442: 1:  'history': [],
442: 1:  'level': 16,
442: 1:  'questions': []
442: 1:}
442: 1:Scores: 61687
442: 1:Answer: message('StartNextLevel')
------------------------------------------
443: 1:BoardData {
443: 1:  'description': ['No more Levels. You win!'],
443: 1:  'history': [],
443: 1:  'level': 16,
443: 1:  'questions': []
443: 1:}
443: 1:Scores: 61687
443: 1:Answer: message('StartNextLevel')
------------------------------------------
444: 1:BoardData {
444: 1:  'description': ['No more Levels. You win!'],
444: 1:  'history': [],
444: 1:  'level': 16,
444: 1:  'questions': []
444: 1:}
444: 1:Scores: 61687
444: 1:Answer: message('StartNextLevel')
------------------------------------------
445: 1:BoardData {
445: 1:  'description': ['No more Levels. You win!'],
445: 1:  'history': [],
445: 1:  'level': 16,
445: 1:  'questions': []
445: 1:}
445: 1:Scores: 61687
445: 1:Answer: message('StartNextLevel')
------------------------------------------
446: 1:BoardData {
446: 1:  'description': ['No more Levels. You win!'],
446: 1:  'history': [],
446: 1:  'level': 16,
446: 1:  'questions': []
446: 1:}
446: 1:Scores: 61687
446: 1:Answer: message('StartNextLevel')
------------------------------------------
447: 1:BoardData {
447: 1:  'description': ['No more Levels. You win!'],
447: 1:  'history': [],
447: 1:  'level': 16,
447: 1:  'questions': []
447: 1:}
447: 1:Scores: 61687
447: 1:Answer: message('StartNextLevel')
------------------------------------------
448: 1:BoardData {
448: 1:  'description': ['No more Levels. You win!'],
448: 1:  'history': [],
448: 1:  'level': 16,
448: 1:  'questions': []
448: 1:}
448: 1:Scores: 61687
448: 1:Answer: message('StartNextLevel')
------------------------------------------
449: 1:BoardData {
449: 1:  'description': ['No more Levels. You win!'],
449: 1:  'history': [],
449: 1:  'level': 16,
449: 1:  'questions': []
449: 1:}
449: 1:Scores: 61687
449: 1:Answer: message('StartNextLevel')
------------------------------------------
450: 1:BoardData {
450: 1:  'description': ['No more Levels. You win!'],
450: 1:  'history': [],
450: 1:  'level': 16,
450: 1:  'questions': []
450: 1:}
450: 1:Scores: 61687
450: 1:Answer: message('StartNextLevel')
------------------------------------------
451: 1:BoardData {
451: 1:  'description': ['No more Levels. You win!'],
451: 1:  'history': [],
451: 1:  'level': 16,
451: 1:  'questions': []
451: 1:}
451: 1:Scores: 61687
451: 1:Answer: message('StartNextLevel')
------------------------------------------
452: 1:BoardData {
452: 1:  'description': ['No more Levels. You win!'],
452: 1:  'history': [],
452: 1:  'level': 16,
452: 1:  'questions': []
452: 1:}
452: 1:Scores: 61687
452: 1:Answer: message('StartNextLevel')
------------------------------------------
453: 1:BoardData {
453: 1:  'description': ['No more Levels. You win!'],
453: 1:  'history': [],
453: 1:  'level': 16,
453: 1:  'questions': []
453: 1:}
453: 1:Scores: 61687
453: 1:Answer: message('StartNextLevel')
------------------------------------------
454: 1:BoardData {
454: 1:  'description': ['No more Levels. You win!'],
454: 1:  'history': [],
454: 1:  'level': 16,
454: 1:  'questions': []
454: 1:}
454: 1:Scores: 61687
454: 1:Answer: message('StartNextLevel')
------------------------------------------
455: 1:BoardData {
455: 1:  'description': ['No more Levels. You win!'],
455: 1:  'history': [],
455: 1:  'level': 16,
455: 1:  'questions': []
455: 1:}
455: 1:Scores: 61687
455: 1:Answer: message('StartNextLevel')
------------------------------------------
456: 1:BoardData {
456: 1:  'description': ['No more Levels. You win!'],
456: 1:  'history': [],
456: 1:  'level': 16,
456: 1:  'questions': []
456: 1:}
456: 1:Scores: 61687
456: 1:Answer: message('StartNextLevel')
------------------------------------------
457: 1:BoardData {
457: 1:  'description': ['No more Levels. You win!'],
457: 1:  'history': [],
457: 1:  'level': 16,
457: 1:  'questions': []
457: 1:}
457: 1:Scores: 61687
457: 1:Answer: message('StartNextLevel')
------------------------------------------
458: 1:BoardData {
458: 1:  'description': ['No more Levels. You win!'],
458: 1:  'history': [],
458: 1:  'level': 16,
458: 1:  'questions': []
458: 1:}
458: 1:Scores: 61687
458: 1:Answer: message('StartNextLevel')
------------------------------------------
459: 1:BoardData {
459: 1:  'description': ['No more Levels. You win!'],
459: 1:  'history': [],
459: 1:  'level': 16,
459: 1:  'questions': []
459: 1:}
459: 1:Scores: 61687
459: 1:Answer: message('StartNextLevel')
------------------------------------------
460: 1:BoardData {
460: 1:  'description': ['No more Levels. You win!'],
460: 1:  'history': [],
460: 1:  'level': 16,
460: 1:  'questions': []
460: 1:}
460: 1:Scores: 61687
460: 1:Answer: message('StartNextLevel')
------------------------------------------
461: 1:BoardData {
461: 1:  'description': ['No more Levels. You win!'],
461: 1:  'history': [],
461: 1:  'level': 16,
461: 1:  'questions': []
461: 1:}
461: 1:Scores: 61687
461: 1:Answer: message('StartNextLevel')
------------------------------------------
462: 1:BoardData {
462: 1:  'description': ['No more Levels. You win!'],
462: 1:  'history': [],
462: 1:  'level': 16,
462: 1:  'questions': []
462: 1:}
462: 1:Scores: 61687
462: 1:Answer: message('StartNextLevel')
------------------------------------------
463: 1:BoardData {
463: 1:  'description': ['No more Levels. You win!'],
463: 1:  'history': [],
463: 1:  'level': 16,
463: 1:  'questions': []
463: 1:}
463: 1:Scores: 61687
463: 1:Answer: message('StartNextLevel')
------------------------------------------
464: 1:BoardData {
464: 1:  'description': ['No more Levels. You win!'],
464: 1:  'history': [],
464: 1:  'level': 16,
464: 1:  'questions': []
464: 1:}
464: 1:Scores: 61687
464: 1:Answer: message('StartNextLevel')
------------------------------------------
465: 1:BoardData {
465: 1:  'description': ['No more Levels. You win!'],
465: 1:  'history': [],
465: 1:  'level': 16,
465: 1:  'questions': []
465: 1:}
465: 1:Scores: 61687
465: 1:Answer: message('StartNextLevel')
------------------------------------------
466: 1:BoardData {
466: 1:  'description': ['No more Levels. You win!'],
466: 1:  'history': [],
466: 1:  'level': 16,
466: 1:  'questions': []
466: 1:}
466: 1:Scores: 61687
466: 1:Answer: message('StartNextLevel')
------------------------------------------
467: 1:BoardData {
467: 1:  'description': ['No more Levels. You win!'],
467: 1:  'history': [],
467: 1:  'level': 16,
467: 1:  'questions': []
467: 1:}
467: 1:Scores: 61687
467: 1:Answer: message('StartNextLevel')
------------------------------------------
468: 1:BoardData {
468: 1:  'description': ['No more Levels. You win!'],
468: 1:  'history': [],
468: 1:  'level': 16,
468: 1:  'questions': []
468: 1:}
468: 1:Scores: 61687
468: 1:Answer: message('StartNextLevel')
------------------------------------------
469: 1:BoardData {
469: 1:  'description': ['No more Levels. You win!'],
469: 1:  'history': [],
469: 1:  'level': 16,
469: 1:  'questions': []
469: 1:}
469: 1:Scores: 61687
469: 1:Answer: message('StartNextLevel')
------------------------------------------
470: 1:BoardData {
470: 1:  'description': ['No more Levels. You win!'],
470: 1:  'history': [],
470: 1:  'level': 16,
470: 1:  'questions': []
470: 1:}
470: 1:Scores: 61687
470: 1:Answer: message('StartNextLevel')
------------------------------------------
471: 1:BoardData {
471: 1:  'description': ['No more Levels. You win!'],
471: 1:  'history': [],
471: 1:  'level': 16,
471: 1:  'questions': []
471: 1:}
471: 1:Scores: 61687
471: 1:Answer: message('StartNextLevel')
------------------------------------------
472: 1:BoardData {
472: 1:  'description': ['No more Levels. You win!'],
472: 1:  'history': [],
472: 1:  'level': 16,
472: 1:  'questions': []
472: 1:}
472: 1:Scores: 61687
472: 1:Answer: message('StartNextLevel')
------------------------------------------
473: 1:BoardData {
473: 1:  'description': ['No more Levels. You win!'],
473: 1:  'history': [],
473: 1:  'level': 16,
473: 1:  'questions': []
473: 1:}
473: 1:Scores: 61687
473: 1:Answer: message('StartNextLevel')
------------------------------------------
474: 1:BoardData {
474: 1:  'description': ['No more Levels. You win!'],
474: 1:  'history': [],
474: 1:  'level': 16,
474: 1:  'questions': []
474: 1:}
474: 1:Scores: 61687
474: 1:Answer: message('StartNextLevel')
------------------------------------------
475: 1:BoardData {
475: 1:  'description': ['No more Levels. You win!'],
475: 1:  'history': [],
475: 1:  'level': 16,
475: 1:  'questions': []
475: 1:}
475: 1:Scores: 61687
475: 1:Answer: message('StartNextLevel')
------------------------------------------
476: 1:BoardData {
476: 1:  'description': ['No more Levels. You win!'],
476: 1:  'history': [],
476: 1:  'level': 16,
476: 1:  'questions': []
476: 1:}
476: 1:Scores: 61687
476: 1:Answer: message('StartNextLevel')
------------------------------------------
477: 1:BoardData {
477: 1:  'description': ['No more Levels. You win!'],
477: 1:  'history': [],
477: 1:  'level': 16,
477: 1:  'questions': []
477: 1:}
477: 1:Scores: 61687
477: 1:Answer: message('StartNextLevel')
------------------------------------------
478: 1:BoardData {
478: 1:  'description': ['No more Levels. You win!'],
478: 1:  'history': [],
478: 1:  'level': 16,
478: 1:  'questions': []
478: 1:}
478: 1:Scores: 61687
478: 1:Answer: message('StartNextLevel')
------------------------------------------
479: 1:BoardData {
479: 1:  'description': ['No more Levels. You win!'],
479: 1:  'history': [],
479: 1:  'level': 16,
479: 1:  'questions': []
479: 1:}
479: 1:Scores: 61687
479: 1:Answer: message('StartNextLevel')
------------------------------------------
480: 1:BoardData {
480: 1:  'description': ['No more Levels. You win!'],
480: 1:  'history': [],
480: 1:  'level': 16,
480: 1:  'questions': []
480: 1:}
480: 1:Scores: 61687
480: 1:Answer: message('StartNextLevel')
------------------------------------------
481: 1:BoardData {
481: 1:  'description': ['No more Levels. You win!'],
481: 1:  'history': [],
481: 1:  'level': 16,
481: 1:  'questions': []
481: 1:}
481: 1:Scores: 61687
481: 1:Answer: message('StartNextLevel')
------------------------------------------
482: 1:BoardData {
482: 1:  'description': ['No more Levels. You win!'],
482: 1:  'history': [],
482: 1:  'level': 16,
482: 1:  'questions': []
482: 1:}
482: 1:Scores: 61687
482: 1:Answer: message('StartNextLevel')
------------------------------------------
483: 1:BoardData {
483: 1:  'description': ['No more Levels. You win!'],
483: 1:  'history': [],
483: 1:  'level': 16,
483: 1:  'questions': []
483: 1:}
483: 1:Scores: 61687
483: 1:Answer: message('StartNextLevel')
------------------------------------------
484: 1:BoardData {
484: 1:  'description': ['No more Levels. You win!'],
484: 1:  'history': [],
484: 1:  'level': 16,
484: 1:  'questions': []
484: 1:}
484: 1:Scores: 61687
484: 1:Answer: message('StartNextLevel')
------------------------------------------
485: 1:BoardData {
485: 1:  'description': ['No more Levels. You win!'],
485: 1:  'history': [],
485: 1:  'level': 16,
485: 1:  'questions': []
485: 1:}
485: 1:Scores: 61687
485: 1:Answer: message('StartNextLevel')
------------------------------------------
486: 1:BoardData {
486: 1:  'description': ['No more Levels. You win!'],
486: 1:  'history': [],
486: 1:  'level': 16,
486: 1:  'questions': []
486: 1:}
486: 1:Scores: 61687
486: 1:Answer: message('StartNextLevel')
------------------------------------------
487: 1:BoardData {
487: 1:  'description': ['No more Levels. You win!'],
487: 1:  'history': [],
487: 1:  'level': 16,
487: 1:  'questions': []
487: 1:}
487: 1:Scores: 61687
487: 1:Answer: message('StartNextLevel')
------------------------------------------
488: 1:BoardData {
488: 1:  'description': ['No more Levels. You win!'],
488: 1:  'history': [],
488: 1:  'level': 16,
488: 1:  'questions': []
488: 1:}
488: 1:Scores: 61687
488: 1:Answer: message('StartNextLevel')
------------------------------------------
489: 1:BoardData {
489: 1:  'description': ['No more Levels. You win!'],
489: 1:  'history': [],
489: 1:  'level': 16,
489: 1:  'questions': []
489: 1:}
489: 1:Scores: 61687
489: 1:Answer: message('StartNextLevel')
------------------------------------------
490: 1:BoardData {
490: 1:  'description': ['No more Levels. You win!'],
490: 1:  'history': [],
490: 1:  'level': 16,
490: 1:  'questions': []
490: 1:}
490: 1:Scores: 61687
490: 1:Answer: message('StartNextLevel')
------------------------------------------
491: 1:BoardData {
491: 1:  'description': ['No more Levels. You win!'],
491: 1:  'history': [],
491: 1:  'level': 16,
491: 1:  'questions': []
491: 1:}
491: 1:Scores: 61687
491: 1:Answer: message('StartNextLevel')
------------------------------------------
492: 1:BoardData {
492: 1:  'description': ['No more Levels. You win!'],
492: 1:  'history': [],
492: 1:  'level': 16,
492: 1:  'questions': []
492: 1:}
492: 1:Scores: 61687
492: 1:Answer: message('StartNextLevel')
------------------------------------------
493: 1:BoardData {
493: 1:  'description': ['No more Levels. You win!'],
493: 1:  'history': [],
493: 1:  'level': 16,
493: 1:  'questions': []
493: 1:}
493: 1:Scores: 61687
493: 1:Answer: message('StartNextLevel')
------------------------------------------
494: 1:BoardData {
494: 1:  'description': ['No more Levels. You win!'],
494: 1:  'history': [],
494: 1:  'level': 16,
494: 1:  'questions': []
494: 1:}
494: 1:Scores: 61687
494: 1:Answer: message('StartNextLevel')
------------------------------------------
495: 1:BoardData {
495: 1:  'description': ['No more Levels. You win!'],
495: 1:  'history': [],
495: 1:  'level': 16,
495: 1:  'questions': []
495: 1:}
495: 1:Scores: 61687
495: 1:Answer: message('StartNextLevel')
------------------------------------------
496: 1:BoardData {
496: 1:  'description': ['No more Levels. You win!'],
496: 1:  'history': [],
496: 1:  'level': 16,
496: 1:  'questions': []
496: 1:}
496: 1:Scores: 61687
496: 1:Answer: message('StartNextLevel')
------------------------------------------
497: 1:BoardData {
497: 1:  'description': ['No more Levels. You win!'],
497: 1:  'history': [],
497: 1:  'level': 16,
497: 1:  'questions': []
497: 1:}
497: 1:Scores: 61687
497: 1:Answer: message('StartNextLevel')
------------------------------------------
498: 1:BoardData {
498: 1:  'description': ['No more Levels. You win!'],
498: 1:  'history': [],
498: 1:  'level': 16,
498: 1:  'questions': []
498: 1:}
498: 1:Scores: 61687
498: 1:Answer: message('StartNextLevel')
------------------------------------------
499: 1:BoardData {
499: 1:  'description': ['No more Levels. You win!'],
499: 1:  'history': [],
499: 1:  'level': 16,
499: 1:  'questions': []
499: 1:}
499: 1:Scores: 61687
499: 1:Answer: message('StartNextLevel')
------------------------------------------
500: 1:BoardData {
500: 1:  'description': ['No more Levels. You win!'],
500: 1:  'history': [],
500: 1:  'level': 16,
500: 1:  'questions': []
500: 1:}
500: 1:Scores: 61687
500: 1:Answer: message('StartNextLevel')
------------------------------------------
501: 1:BoardData {
501: 1:  'description': ['No more Levels. You win!'],
501: 1:  'history': [],
501: 1:  'level': 16,
501: 1:  'questions': []
501: 1:}
501: 1:Scores: 61687
501: 1:Answer: message('StartNextLevel')
------------------------------------------
502: 1:BoardData {
502: 1:  'description': ['No more Levels. You win!'],
502: 1:  'history': [],
502: 1:  'level': 16,
502: 1:  'questions': []
502: 1:}
502: 1:Scores: 61687
502: 1:Answer: message('StartNextLevel')
------------------------------------------
503: 1:BoardData {
503: 1:  'description': ['No more Levels. You win!'],
503: 1:  'history': [],
503: 1:  'level': 16,
503: 1:  'questions': []
503: 1:}
503: 1:Scores: 61687
503: 1:Answer: message('StartNextLevel')
------------------------------------------
504: 1:BoardData {
504: 1:  'description': ['No more Levels. You win!'],
504: 1:  'history': [],
504: 1:  'level': 16,
504: 1:  'questions': []
504: 1:}
504: 1:Scores: 61687
504: 1:Answer: message('StartNextLevel')
------------------------------------------
505: 1:BoardData {
505: 1:  'description': ['No more Levels. You win!'],
505: 1:  'history': [],
505: 1:  'level': 16,
505: 1:  'questions': []
505: 1:}
505: 1:Scores: 61687
505: 1:Answer: message('StartNextLevel')
------------------------------------------
506: 1:BoardData {
506: 1:  'description': ['No more Levels. You win!'],
506: 1:  'history': [],
506: 1:  'level': 16,
506: 1:  'questions': []
506: 1:}
506: 1:Scores: 61687
506: 1:Answer: message('StartNextLevel')
------------------------------------------
507: 1:BoardData {
507: 1:  'description': ['No more Levels. You win!'],
507: 1:  'history': [],
507: 1:  'level': 16,
507: 1:  'questions': []
507: 1:}
507: 1:Scores: 61687
507: 1:Answer: message('StartNextLevel')
------------------------------------------
508: 1:BoardData {
508: 1:  'description': ['No more Levels. You win!'],
508: 1:  'history': [],
508: 1:  'level': 16,
508: 1:  'questions': []
508: 1:}
508: 1:Scores: 61687
508: 1:Answer: message('StartNextLevel')
------------------------------------------
509: 1:BoardData {
509: 1:  'description': ['No more Levels. You win!'],
509: 1:  'history': [],
509: 1:  'level': 16,
509: 1:  'questions': []
509: 1:}
509: 1:Scores: 61687
509: 1:Answer: message('StartNextLevel')
------------------------------------------
510: 1:BoardData {
510: 1:  'description': ['No more Levels. You win!'],
510: 1:  'history': [],
510: 1:  'level': 16,
510: 1:  'questions': []
510: 1:}
510: 1:Scores: 61687
510: 1:Answer: message('StartNextLevel')
------------------------------------------
511: 1:BoardData {
511: 1:  'description': ['No more Levels. You win!'],
511: 1:  'history': [],
511: 1:  'level': 16,
511: 1:  'questions': []
511: 1:}
511: 1:Scores: 61687
511: 1:Answer: message('StartNextLevel')
------------------------------------------
512: 1:BoardData {
512: 1:  'description': ['No more Levels. You win!'],
512: 1:  'history': [],
512: 1:  'level': 16,
512: 1:  'questions': []
512: 1:}
512: 1:Scores: 61687
512: 1:Answer: message('StartNextLevel')
------------------------------------------
513: 1:BoardData {
513: 1:  'description': ['No more Levels. You win!'],
513: 1:  'history': [],
513: 1:  'level': 16,
513: 1:  'questions': []
513: 1:}
513: 1:Scores: 61687
513: 1:Answer: message('StartNextLevel')
------------------------------------------
514: 1:BoardData {
514: 1:  'description': ['No more Levels. You win!'],
514: 1:  'history': [],
514: 1:  'level': 16,
514: 1:  'questions': []
514: 1:}
514: 1:Scores: 61687
514: 1:Answer: message('StartNextLevel')
------------------------------------------
515: 1:BoardData {
515: 1:  'description': ['No more Levels. You win!'],
515: 1:  'history': [],
515: 1:  'level': 16,
515: 1:  'questions': []
515: 1:}
515: 1:Scores: 61687
515: 1:Answer: message('StartNextLevel')
------------------------------------------
516: 1:BoardData {
516: 1:  'description': ['No more Levels. You win!'],
516: 1:  'history': [],
516: 1:  'level': 16,
516: 1:  'questions': []
516: 1:}
516: 1:Scores: 61687
516: 1:Answer: message('StartNextLevel')
------------------------------------------
517: 1:BoardData {
517: 1:  'description': ['No more Levels. You win!'],
517: 1:  'history': [],
517: 1:  'level': 16,
517: 1:  'questions': []
517: 1:}
517: 1:Scores: 61687
517: 1:Answer: message('StartNextLevel')
------------------------------------------
518: 1:BoardData {
518: 1:  'description': ['No more Levels. You win!'],
518: 1:  'history': [],
518: 1:  'level': 16,
518: 1:  'questions': []
518: 1:}
518: 1:Scores: 61687
518: 1:Answer: message('StartNextLevel')
------------------------------------------
519: 1:BoardData {
519: 1:  'description': ['No more Levels. You win!'],
519: 1:  'history': [],
519: 1:  'level': 16,
519: 1:  'questions': []
519: 1:}
519: 1:Scores: 61687
519: 1:Answer: message('StartNextLevel')
------------------------------------------
520: 1:BoardData {
520: 1:  'description': ['No more Levels. You win!'],
520: 1:  'history': [],
520: 1:  'level': 16,
520: 1:  'questions': []
520: 1:}
520: 1:Scores: 61687
520: 1:Answer: message('StartNextLevel')
------------------------------------------
521: 1:BoardData {
521: 1:  'description': ['No more Levels. You win!'],
521: 1:  'history': [],
521: 1:  'level': 16,
521: 1:  'questions': []
521: 1:}
521: 1:Scores: 61687
521: 1:Answer: message('StartNextLevel')
------------------------------------------
522: 1:BoardData {
522: 1:  'description': ['No more Levels. You win!'],
522: 1:  'history': [],
522: 1:  'level': 16,
522: 1:  'questions': []
522: 1:}
522: 1:Scores: 61687
522: 1:Answer: message('StartNextLevel')
------------------------------------------
523: 1:BoardData {
523: 1:  'description': ['No more Levels. You win!'],
523: 1:  'history': [],
523: 1:  'level': 16,
523: 1:  'questions': []
523: 1:}
523: 1:Scores: 61687
523: 1:Answer: message('StartNextLevel')
------------------------------------------
524: 1:BoardData {
524: 1:  'description': ['No more Levels. You win!'],
524: 1:  'history': [],
524: 1:  'level': 16,
524: 1:  'questions': []
524: 1:}
524: 1:Scores: 61687
524: 1:Answer: message('StartNextLevel')
------------------------------------------
525: 1:BoardData {
525: 1:  'description': ['No more Levels. You win!'],
525: 1:  'history': [],
525: 1:  'level': 16,
525: 1:  'questions': []
525: 1:}
525: 1:Scores: 61687
525: 1:Answer: message('StartNextLevel')
------------------------------------------
526: 1:BoardData {
526: 1:  'description': ['No more Levels. You win!'],
526: 1:  'history': [],
526: 1:  'level': 16,
526: 1:  'questions': []
526: 1:}
526: 1:Scores: 61687
526: 1:Answer: message('StartNextLevel')
------------------------------------------
527: 1:BoardData {
527: 1:  'description': ['No more Levels. You win!'],
527: 1:  'history': [],
527: 1:  'level': 16,
527: 1:  'questions': []
527: 1:}
527: 1:Scores: 61687
527: 1:Answer: message('StartNextLevel')
------------------------------------------
528: 1:BoardData {
528: 1:  'description': ['No more Levels. You win!'],
528: 1:  'history': [],
528: 1:  'level': 16,
528: 1:  'questions': []
528: 1:}
528: 1:Scores: 61687
528: 1:Answer: message('StartNextLevel')
------------------------------------------
529: 1:BoardData {
529: 1:  'description': ['No more Levels. You win!'],
529: 1:  'history': [],
529: 1:  'level': 16,
529: 1:  'questions': []
529: 1:}
529: 1:Scores: 61687
529: 1:Answer: message('StartNextLevel')
------------------------------------------
530: 1:BoardData {
530: 1:  'description': ['No more Levels. You win!'],
530: 1:  'history': [],
530: 1:  'level': 16,
530: 1:  'questions': []
530: 1:}
530: 1:Scores: 61687
530: 1:Answer: message('StartNextLevel')
------------------------------------------
531: 1:BoardData {
531: 1:  'description': ['No more Levels. You win!'],
531: 1:  'history': [],
531: 1:  'level': 16,
531: 1:  'questions': []
531: 1:}
531: 1:Scores: 61687
531: 1:Answer: message('StartNextLevel')
------------------------------------------
532: 1:BoardData {
532: 1:  'description': ['No more Levels. You win!'],
532: 1:  'history': [],
532: 1:  'level': 16,
532: 1:  'questions': []
532: 1:}
532: 1:Scores: 61687
532: 1:Answer: message('StartNextLevel')
------------------------------------------
533: 1:BoardData {
533: 1:  'description': ['No more Levels. You win!'],
533: 1:  'history': [],
533: 1:  'level': 16,
533: 1:  'questions': []
533: 1:}
533: 1:Scores: 61687
533: 1:Answer: message('StartNextLevel')
------------------------------------------
534: 1:BoardData {
534: 1:  'description': ['No more Levels. You win!'],
534: 1:  'history': [],
534: 1:  'level': 16,
534: 1:  'questions': []
534: 1:}
534: 1:Scores: 61687
534: 1:Answer: message('StartNextLevel')
------------------------------------------
535: 1:BoardData {
535: 1:  'description': ['No more Levels. You win!'],
535: 1:  'history': [],
535: 1:  'level': 16,
535: 1:  'questions': []
535: 1:}
535: 1:Scores: 61687
535: 1:Answer: message('StartNextLevel')
------------------------------------------
536: 1:BoardData {
536: 1:  'description': ['No more Levels. You win!'],
536: 1:  'history': [],
536: 1:  'level': 16,
536: 1:  'questions': []
536: 1:}
536: 1:Scores: 61687
536: 1:Answer: message('StartNextLevel')
------------------------------------------
537: 1:BoardData {
537: 1:  'description': ['No more Levels. You win!'],
537: 1:  'history': [],
537: 1:  'level': 16,
537: 1:  'questions': []
537: 1:}
537: 1:Scores: 61687
537: 1:Answer: message('StartNextLevel')
------------------------------------------
538: 1:BoardData {
538: 1:  'description': ['No more Levels. You win!'],
538: 1:  'history': [],
538: 1:  'level': 16,
538: 1:  'questions': []
538: 1:}
538: 1:Scores: 61687
538: 1:Answer: message('StartNextLevel')
------------------------------------------
539: 1:BoardData {
539: 1:  'description': ['No more Levels. You win!'],
539: 1:  'history': [],
539: 1:  'level': 16,
539: 1:  'questions': []
539: 1:}
539: 1:Scores: 61687
539: 1:Answer: message('StartNextLevel')
------------------------------------------
540: 1:BoardData {
540: 1:  'description': ['No more Levels. You win!'],
540: 1:  'history': [],
540: 1:  'level': 16,
540: 1:  'questions': []
540: 1:}
540: 1:Scores: 61687
540: 1:Answer: message('StartNextLevel')
------------------------------------------
541: 1:BoardData {
541: 1:  'description': ['No more Levels. You win!'],
541: 1:  'history': [],
541: 1:  'level': 16,
541: 1:  'questions': []
541: 1:}
541: 1:Scores: 61687
541: 1:Answer: message('StartNextLevel')
------------------------------------------
542: 1:BoardData {
542: 1:  'description': ['No more Levels. You win!'],
542: 1:  'history': [],
542: 1:  'level': 16,
542: 1:  'questions': []
542: 1:}
542: 1:Scores: 61687
542: 1:Answer: message('StartNextLevel')
------------------------------------------
543: 1:BoardData {
543: 1:  'description': ['No more Levels. You win!'],
543: 1:  'history': [],
543: 1:  'level': 16,
543: 1:  'questions': []
543: 1:}
543: 1:Scores: 61687
543: 1:Answer: message('StartNextLevel')
------------------------------------------
544: 1:BoardData {
544: 1:  'description': ['No more Levels. You win!'],
544: 1:  'history': [],
544: 1:  'level': 16,
544: 1:  'questions': []
544: 1:}
544: 1:Scores: 61687
544: 1:Answer: message('StartNextLevel')
------------------------------------------
545: 1:BoardData {
545: 1:  'description': ['No more Levels. You win!'],
545: 1:  'history': [],
545: 1:  'level': 16,
545: 1:  'questions': []
545: 1:}
545: 1:Scores: 61687
545: 1:Answer: message('StartNextLevel')
------------------------------------------
546: 1:BoardData {
546: 1:  'description': ['No more Levels. You win!'],
546: 1:  'history': [],
546: 1:  'level': 16,
546: 1:  'questions': []
546: 1:}
546: 1:Scores: 61687
546: 1:Answer: message('StartNextLevel')
------------------------------------------
547: 1:BoardData {
547: 1:  'description': ['No more Levels. You win!'],
547: 1:  'history': [],
547: 1:  'level': 16,
547: 1:  'questions': []
547: 1:}
547: 1:Scores: 61687
547: 1:Answer: message('StartNextLevel')
------------------------------------------
548: 1:BoardData {
548: 1:  'description': ['No more Levels. You win!'],
548: 1:  'history': [],
548: 1:  'level': 16,
548: 1:  'questions': []
548: 1:}
548: 1:Scores: 61687
548: 1:Answer: message('StartNextLevel')
------------------------------------------
549: 1:BoardData {
549: 1:  'description': ['No more Levels. You win!'],
549: 1:  'history': [],
549: 1:  'level': 16,
549: 1:  'questions': []
549: 1:}
549: 1:Scores: 61687
549: 1:Answer: message('StartNextLevel')
------------------------------------------
550: 1:BoardData {
550: 1:  'description': ['No more Levels. You win!'],
550: 1:  'history': [],
550: 1:  'level': 16,
550: 1:  'questions': []
550: 1:}
550: 1:Scores: 61687
550: 1:Answer: message('StartNextLevel')
------------------------------------------
551: 1:BoardData {
551: 1:  'description': ['No more Levels. You win!'],
551: 1:  'history': [],
551: 1:  'level': 16,
551: 1:  'questions': []
551: 1:}
551: 1:Scores: 61687
551: 1:Answer: message('StartNextLevel')
------------------------------------------
552: 1:BoardData {
552: 1:  'description': ['No more Levels. You win!'],
552: 1:  'history': [],
552: 1:  'level': 16,
552: 1:  'questions': []
552: 1:}
552: 1:Scores: 61687
552: 1:Answer: message('StartNextLevel')
------------------------------------------
553: 1:BoardData {
553: 1:  'description': ['No more Levels. You win!'],
553: 1:  'history': [],
553: 1:  'level': 16,
553: 1:  'questions': []
553: 1:}
553: 1:Scores: 61687
553: 1:Answer: message('StartNextLevel')
------------------------------------------
554: 1:BoardData {
554: 1:  'description': ['No more Levels. You win!'],
554: 1:  'history': [],
554: 1:  'level': 16,
554: 1:  'questions': []
554: 1:}
554: 1:Scores: 61687
554: 1:Answer: message('StartNextLevel')
------------------------------------------
555: 1:BoardData {
555: 1:  'description': ['No more Levels. You win!'],
555: 1:  'history': [],
555: 1:  'level': 16,
555: 1:  'questions': []
555: 1:}
555: 1:Scores: 61687
555: 1:Answer: message('StartNextLevel')
------------------------------------------
556: 1:BoardData {
556: 1:  'description': ['No more Levels. You win!'],
556: 1:  'history': [],
556: 1:  'level': 16,
556: 1:  'questions': []
556: 1:}
556: 1:Scores: 61687
556: 1:Answer: message('StartNextLevel')
------------------------------------------
557: 1:BoardData {
557: 1:  'description': ['No more Levels. You win!'],
557: 1:  'history': [],
557: 1:  'level': 16,
557: 1:  'questions': []
557: 1:}
557: 1:Scores: 61687
557: 1:Answer: message('StartNextLevel')
------------------------------------------
558: 1:BoardData {
558: 1:  'description': ['No more Levels. You win!'],
558: 1:  'history': [],
558: 1:  'level': 16,
558: 1:  'questions': []
558: 1:}
558: 1:Scores: 61687
558: 1:Answer: message('StartNextLevel')
------------------------------------------
559: 1:BoardData {
559: 1:  'description': ['No more Levels. You win!'],
559: 1:  'history': [],
559: 1:  'level': 16,
559: 1:  'questions': []
559: 1:}
559: 1:Scores: 61687
559: 1:Answer: message('StartNextLevel')
------------------------------------------
560: 1:BoardData {
560: 1:  'description': ['No more Levels. You win!'],
560: 1:  'history': [],
560: 1:  'level': 16,
560: 1:  'questions': []
560: 1:}
560: 1:Scores: 61687
560: 1:Answer: message('StartNextLevel')
------------------------------------------
561: 1:BoardData {
561: 1:  'description': ['No more Levels. You win!'],
561: 1:  'history': [],
561: 1:  'level': 16,
561: 1:  'questions': []
561: 1:}
561: 1:Scores: 61687
561: 1:Answer: message('StartNextLevel')
------------------------------------------
562: 1:BoardData {
562: 1:  'description': ['No more Levels. You win!'],
562: 1:  'history': [],
562: 1:  'level': 16,
562: 1:  'questions': []
562: 1:}
562: 1:Scores: 61687
562: 1:Answer: message('StartNextLevel')
------------------------------------------
563: 1:BoardData {
563: 1:  'description': ['No more Levels. You win!'],
563: 1:  'history': [],
563: 1:  'level': 16,
563: 1:  'questions': []
563: 1:}
563: 1:Scores: 61687
563: 1:Answer: message('StartNextLevel')
------------------------------------------
564: 1:BoardData {
564: 1:  'description': ['No more Levels. You win!'],
564: 1:  'history': [],
564: 1:  'level': 16,
564: 1:  'questions': []
564: 1:}
564: 1:Scores: 61687
564: 1:Answer: message('StartNextLevel')
------------------------------------------
565: 1:BoardData {
565: 1:  'description': ['No more Levels. You win!'],
565: 1:  'history': [],
565: 1:  'level': 16,
565: 1:  'questions': []
565: 1:}
565: 1:Scores: 61687
565: 1:Answer: message('StartNextLevel')
------------------------------------------
566: 1:BoardData {
566: 1:  'description': ['No more Levels. You win!'],
566: 1:  'history': [],
566: 1:  'level': 16,
566: 1:  'questions': []
566: 1:}
566: 1:Scores: 61687
566: 1:Answer: message('StartNextLevel')
------------------------------------------
567: 1:BoardData {
567: 1:  'description': ['No more Levels. You win!'],
567: 1:  'history': [],
567: 1:  'level': 16,
567: 1:  'questions': []
567: 1:}
567: 1:Scores: 61687
567: 1:Answer: message('StartNextLevel')
------------------------------------------
568: 1:BoardData {
568: 1:  'description': ['No more Levels. You win!'],
568: 1:  'history': [],
568: 1:  'level': 16,
568: 1:  'questions': []
568: 1:}
568: 1:Scores: 61687
568: 1:Answer: message('StartNextLevel')
------------------------------------------
569: 1:BoardData {
569: 1:  'description': ['No more Levels. You win!'],
569: 1:  'history': [],
569: 1:  'level': 16,
569: 1:  'questions': []
569: 1:}
569: 1:Scores: 61687
569: 1:Answer: message('StartNextLevel')
------------------------------------------
570: 1:BoardData {
570: 1:  'description': ['No more Levels. You win!'],
570: 1:  'history': [],
570: 1:  'level': 16,
570: 1:  'questions': []
570: 1:}
570: 1:Scores: 61687
570: 1:Answer: message('StartNextLevel')
------------------------------------------
571: 1:BoardData {
571: 1:  'description': ['No more Levels. You win!'],
571: 1:  'history': [],
571: 1:  'level': 16,
571: 1:  'questions': []
571: 1:}
571: 1:Scores: 61687
571: 1:Answer: message('StartNextLevel')
------------------------------------------
572: 1:BoardData {
572: 1:  'description': ['No more Levels. You win!'],
572: 1:  'history': [],
572: 1:  'level': 16,
572: 1:  'questions': []
572: 1:}
572: 1:Scores: 61687
572: 1:Answer: message('StartNextLevel')
------------------------------------------
573: 1:BoardData {
573: 1:  'description': ['No more Levels. You win!'],
573: 1:  'history': [],
573: 1:  'level': 16,
573: 1:  'questions': []
573: 1:}
573: 1:Scores: 61687
573: 1:Answer: message('StartNextLevel')
------------------------------------------
574: 1:BoardData {
574: 1:  'description': ['No more Levels. You win!'],
574: 1:  'history': [],
574: 1:  'level': 16,
574: 1:  'questions': []
574: 1:}
574: 1:Scores: 61687
574: 1:Answer: message('StartNextLevel')
------------------------------------------
575: 1:BoardData {
575: 1:  'description': ['No more Levels. You win!'],
575: 1:  'history': [],
575: 1:  'level': 16,
575: 1:  'questions': []
575: 1:}
575: 1:Scores: 61687
575: 1:Answer: message('StartNextLevel')
------------------------------------------
576: 1:BoardData {
576: 1:  'description': ['No more Levels. You win!'],
576: 1:  'history': [],
576: 1:  'level': 16,
576: 1:  'questions': []
576: 1:}
576: 1:Scores: 61687
576: 1:Answer: message('StartNextLevel')
------------------------------------------
577: 1:BoardData {
577: 1:  'description': ['No more Levels. You win!'],
577: 1:  'history': [],
577: 1:  'level': 16,
577: 1:  'questions': []
577: 1:}
577: 1:Scores: 61687
577: 1:Answer: message('StartNextLevel')
------------------------------------------
578: 1:BoardData {
578: 1:  'description': ['No more Levels. You win!'],
578: 1:  'history': [],
578: 1:  'level': 16,
578: 1:  'questions': []
578: 1:}
578: 1:Scores: 61687
578: 1:Answer: message('StartNextLevel')
------------------------------------------
579: 1:BoardData {
579: 1:  'description': ['No more Levels. You win!'],
579: 1:  'history': [],
579: 1:  'level': 16,
579: 1:  'questions': []
579: 1:}
579: 1:Scores: 61687
579: 1:Answer: message('StartNextLevel')
------------------------------------------
580: 1:BoardData {
580: 1:  'description': ['No more Levels. You win!'],
580: 1:  'history': [],
580: 1:  'level': 16,
580: 1:  'questions': []
580: 1:}
580: 1:Scores: 61687
580: 1:Answer: message('StartNextLevel')
------------------------------------------
581: 1:BoardData {
581: 1:  'description': ['No more Levels. You win!'],
581: 1:  'history': [],
581: 1:  'level': 16,
581: 1:  'questions': []
581: 1:}
581: 1:Scores: 61687
581: 1:Answer: message('StartNextLevel')
------------------------------------------
582: 1:BoardData {
582: 1:  'description': ['No more Levels. You win!'],
582: 1:  'history': [],
582: 1:  'level': 16,
582: 1:  'questions': []
582: 1:}
582: 1:Scores: 61687
582: 1:Answer: message('StartNextLevel')
------------------------------------------
583: 1:BoardData {
583: 1:  'description': ['No more Levels. You win!'],
583: 1:  'history': [],
583: 1:  'level': 16,
583: 1:  'questions': []
583: 1:}
583: 1:Scores: 61687
583: 1:Answer: message('StartNextLevel')
------------------------------------------
584: 1:BoardData {
584: 1:  'description': ['No more Levels. You win!'],
584: 1:  'history': [],
584: 1:  'level': 16,
584: 1:  'questions': []
584: 1:}
584: 1:Scores: 61687
584: 1:Answer: message('StartNextLevel')
------------------------------------------
585: 1:BoardData {
585: 1:  'description': ['No more Levels. You win!'],
585: 1:  'history': [],
585: 1:  'level': 16,
585: 1:  'questions': []
585: 1:}
585: 1:Scores: 61687
585: 1:Answer: message('StartNextLevel')
------------------------------------------
586: 1:BoardData {
586: 1:  'description': ['No more Levels. You win!'],
586: 1:  'history': [],
586: 1:  'level': 16,
586: 1:  'questions': []
586: 1:}
586: 1:Scores: 61687
586: 1:Answer: message('StartNextLevel')
------------------------------------------
587: 1:BoardData {
587: 1:  'description': ['No more Levels. You win!'],
587: 1:  'history': [],
587: 1:  'level': 16,
587: 1:  'questions': []
587: 1:}
587: 1:Scores: 61687
587: 1:Answer: message('StartNextLevel')
------------------------------------------
588: 1:BoardData {
588: 1:  'description': ['No more Levels. You win!'],
588: 1:  'history': [],
588: 1:  'level': 16,
588: 1:  'questions': []
588: 1:}
588: 1:Scores: 61687
588: 1:Answer: message('StartNextLevel')
------------------------------------------
589: 1:BoardData {
589: 1:  'description': ['No more Levels. You win!'],
589: 1:  'history': [],
589: 1:  'level': 16,
589: 1:  'questions': []
589: 1:}
589: 1:Scores: 61687
589: 1:Answer: message('StartNextLevel')
------------------------------------------
590: 1:BoardData {
590: 1:  'description': ['No more Levels. You win!'],
590: 1:  'history': [],
590: 1:  'level': 16,
590: 1:  'questions': []
590: 1:}
590: 1:Scores: 61687
590: 1:Answer: message('StartNextLevel')
------------------------------------------
591: 1:BoardData {
591: 1:  'description': ['No more Levels. You win!'],
591: 1:  'history': [],
591: 1:  'level': 16,
591: 1:  'questions': []
591: 1:}
591: 1:Scores: 61687
591: 1:Answer: message('StartNextLevel')
------------------------------------------
592: 1:BoardData {
592: 1:  'description': ['No more Levels. You win!'],
592: 1:  'history': [],
592: 1:  'level': 16,
592: 1:  'questions': []
592: 1:}
592: 1:Scores: 61687
592: 1:Answer: message('StartNextLevel')
------------------------------------------
593: 1:BoardData {
593: 1:  'description': ['No more Levels. You win!'],
593: 1:  'history': [],
593: 1:  'level': 16,
593: 1:  'questions': []
593: 1:}
593: 1:Scores: 61687
593: 1:Answer: message('StartNextLevel')
------------------------------------------
594: 1:BoardData {
594: 1:  'description': ['No more Levels. You win!'],
594: 1:  'history': [],
594: 1:  'level': 16,
594: 1:  'questions': []
594: 1:}
594: 1:Scores: 61687
594: 1:Answer: message('StartNextLevel')
------------------------------------------
595: 1:BoardData {
595: 1:  'description': ['No more Levels. You win!'],
595: 1:  'history': [],
595: 1:  'level': 16,
595: 1:  'questions': []
595: 1:}
595: 1:Scores: 61687
595: 1:Answer: message('StartNextLevel')
------------------------------------------
596: 1:BoardData {
596: 1:  'description': ['No more Levels. You win!'],
596: 1:  'history': [],
596: 1:  'level': 16,
596: 1:  'questions': []
596: 1:}
596: 1:Scores: 61687
596: 1:Answer: message('StartNextLevel')
------------------------------------------
597: 1:BoardData {
597: 1:  'description': ['No more Levels. You win!'],
597: 1:  'history': [],
597: 1:  'level': 16,
597: 1:  'questions': []
597: 1:}
597: 1:Scores: 61687
597: 1:Answer: message('StartNextLevel')
------------------------------------------
598: 1:BoardData {
598: 1:  'description': ['No more Levels. You win!'],
598: 1:  'history': [],
598: 1:  'level': 16,
598: 1:  'questions': []
598: 1:}
598: 1:Scores: 61687
598: 1:Answer: message('StartNextLevel')
------------------------------------------
599: 1:BoardData {
599: 1:  'description': ['No more Levels. You win!'],
599: 1:  'history': [],
599: 1:  'level': 16,
599: 1:  'questions': []
599: 1:}
599: 1:Scores: 61687
599: 1:Answer: message('StartNextLevel')
------------------------------------------
600: 1:BoardData {
600: 1:  'description': ['No more Levels. You win!'],
600: 1:  'history': [],
600: 1:  'level': 16,
600: 1:  'questions': []
600: 1:}
600: 1:Scores: 61687
600: 1:Answer: message('StartNextLevel')
------------------------------------------
601: 1:BoardData {
601: 1:  'description': ['No more Levels. You win!'],
601: 1:  'history': [],
601: 1:  'level': 16,
601: 1:  'questions': []
601: 1:}
601: 1:Scores: 61687
601: 1:Answer: message('StartNextLevel')
------------------------------------------
602: 1:BoardData {
602: 1:  'description': ['No more Levels. You win!'],
602: 1:  'history': [],
602: 1:  'level': 16,
602: 1:  'questions': []
602: 1:}
602: 1:Scores: 61687
602: 1:Answer: message('StartNextLevel')
------------------------------------------
603: 1:BoardData {
603: 1:  'description': ['No more Levels. You win!'],
603: 1:  'history': [],
603: 1:  'level': 16,
603: 1:  'questions': []
603: 1:}
603: 1:Scores: 61687
603: 1:Answer: message('StartNextLevel')
------------------------------------------
604: 1:BoardData {
604: 1:  'description': ['No more Levels. You win!'],
604: 1:  'history': [],
604: 1:  'level': 16,
604: 1:  'questions': []
604: 1:}
604: 1:Scores: 61687
604: 1:Answer: message('StartNextLevel')
------------------------------------------
605: 1:BoardData {
605: 1:  'description': ['No more Levels. You win!'],
605: 1:  'history': [],
605: 1:  'level': 16,
605: 1:  'questions': []
605: 1:}
605: 1:Scores: 61687
605: 1:Answer: message('StartNextLevel')
------------------------------------------
606: 1:BoardData {
606: 1:  'description': ['No more Levels. You win!'],
606: 1:  'history': [],
606: 1:  'level': 16,
606: 1:  'questions': []
606: 1:}
606: 1:Scores: 61687
606: 1:Answer: message('StartNextLevel')
------------------------------------------
607: 1:BoardData {
607: 1:  'description': ['No more Levels. You win!'],
607: 1:  'history': [],
607: 1:  'level': 16,
607: 1:  'questions': []
607: 1:}
607: 1:Scores: 61687
607: 1:Answer: message('StartNextLevel')
------------------------------------------
608: 1:BoardData {
608: 1:  'description': ['No more Levels. You win!'],
608: 1:  'history': [],
608: 1:  'level': 16,
608: 1:  'questions': []
608: 1:}
608: 1:Scores: 61687
608: 1:Answer: message('StartNextLevel')
------------------------------------------
609: 1:BoardData {
609: 1:  'description': ['No more Levels. You win!'],
609: 1:  'history': [],
609: 1:  'level': 16,
609: 1:  'questions': []
609: 1:}
609: 1:Scores: 61687
609: 1:Answer: message('StartNextLevel')
------------------------------------------
610: 1:BoardData {
610: 1:  'description': ['No more Levels. You win!'],
610: 1:  'history': [],
610: 1:  'level': 16,
610: 1:  'questions': []
610: 1:}
610: 1:Scores: 61687
610: 1:Answer: message('StartNextLevel')
------------------------------------------
611: 1:BoardData {
611: 1:  'description': ['No more Levels. You win!'],
611: 1:  'history': [],
611: 1:  'level': 16,
611: 1:  'questions': []
611: 1:}
611: 1:Scores: 61687
611: 1:Answer: message('StartNextLevel')
------------------------------------------
612: 1:BoardData {
612: 1:  'description': ['No more Levels. You win!'],
612: 1:  'history': [],
612: 1:  'level': 16,
612: 1:  'questions': []
612: 1:}
612: 1:Scores: 61687
612: 1:Answer: message('StartNextLevel')
------------------------------------------
613: 1:BoardData {
613: 1:  'description': ['No more Levels. You win!'],
613: 1:  'history': [],
613: 1:  'level': 16,
613: 1:  'questions': []
613: 1:}
613: 1:Scores: 61687
613: 1:Answer: message('StartNextLevel')
------------------------------------------
614: 1:BoardData {
614: 1:  'description': ['No more Levels. You win!'],
614: 1:  'history': [],
614: 1:  'level': 16,
614: 1:  'questions': []
614: 1:}
614: 1:Scores: 61687
614: 1:Answer: message('StartNextLevel')
------------------------------------------
615: 1:BoardData {
615: 1:  'description': ['No more Levels. You win!'],
615: 1:  'history': [],
615: 1:  'level': 16,
615: 1:  'questions': []
615: 1:}
615: 1:Scores: 61687
615: 1:Answer: message('StartNextLevel')
------------------------------------------
616: 1:BoardData {
616: 1:  'description': ['No more Levels. You win!'],
616: 1:  'history': [],
616: 1:  'level': 16,
616: 1:  'questions': []
616: 1:}
616: 1:Scores: 61687
616: 1:Answer: message('StartNextLevel')
------------------------------------------
617: 1:BoardData {
617: 1:  'description': ['No more Levels. You win!'],
617: 1:  'history': [],
617: 1:  'level': 16,
617: 1:  'questions': []
617: 1:}
617: 1:Scores: 61687
617: 1:Answer: message('StartNextLevel')
------------------------------------------
618: 1:BoardData {
618: 1:  'description': ['No more Levels. You win!'],
618: 1:  'history': [],
618: 1:  'level': 16,
618: 1:  'questions': []
618: 1:}
618: 1:Scores: 61687
618: 1:Answer: message('StartNextLevel')
------------------------------------------
619: 1:BoardData {
619: 1:  'description': ['No more Levels. You win!'],
619: 1:  'history': [],
619: 1:  'level': 16,
619: 1:  'questions': []
619: 1:}
619: 1:Scores: 61687
619: 1:Answer: message('StartNextLevel')
------------------------------------------
620: 1:BoardData {
620: 1:  'description': ['No more Levels. You win!'],
620: 1:  'history': [],
620: 1:  'level': 16,
620: 1:  'questions': []
620: 1:}
620: 1:Scores: 61687
620: 1:Answer: message('StartNextLevel')
------------------------------------------
621: 1:BoardData {
621: 1:  'description': ['No more Levels. You win!'],
621: 1:  'history': [],
621: 1:  'level': 16,
621: 1:  'questions': []
621: 1:}
621: 1:Scores: 61687
621: 1:Answer: message('StartNextLevel')
------------------------------------------
622: 1:BoardData {
622: 1:  'description': ['No more Levels. You win!'],
622: 1:  'history': [],
622: 1:  'level': 16,
622: 1:  'questions': []
622: 1:}
622: 1:Scores: 61687
622: 1:Answer: message('StartNextLevel')
------------------------------------------
623: 1:BoardData {
623: 1:  'description': ['No more Levels. You win!'],
623: 1:  'history': [],
623: 1:  'level': 16,
623: 1:  'questions': []
623: 1:}
623: 1:Scores: 61687
623: 1:Answer: message('StartNextLevel')
------------------------------------------
624: 1:BoardData {
624: 1:  'description': ['No more Levels. You win!'],
624: 1:  'history': [],
624: 1:  'level': 16,
624: 1:  'questions': []
624: 1:}
624: 1:Scores: 61687
624: 1:Answer: message('StartNextLevel')
------------------------------------------
625: 1:BoardData {
625: 1:  'description': ['No more Levels. You win!'],
625: 1:  'history': [],
625: 1:  'level': 16,
625: 1:  'questions': []
625: 1:}
625: 1:Scores: 61687
625: 1:Answer: message('StartNextLevel')
------------------------------------------
626: 1:BoardData {
626: 1:  'description': ['No more Levels. You win!'],
626: 1:  'history': [],
626: 1:  'level': 16,
626: 1:  'questions': []
626: 1:}
626: 1:Scores: 61687
626: 1:Answer: message('StartNextLevel')
------------------------------------------
627: 1:BoardData {
627: 1:  'description': ['No more Levels. You win!'],
627: 1:  'history': [],
627: 1:  'level': 16,
627: 1:  'questions': []
627: 1:}
627: 1:Scores: 61687
627: 1:Answer: message('StartNextLevel')
------------------------------------------
628: 1:BoardData {
628: 1:  'description': ['No more Levels. You win!'],
628: 1:  'history': [],
628: 1:  'level': 16,
628: 1:  'questions': []
628: 1:}
628: 1:Scores: 61687
628: 1:Answer: message('StartNextLevel')
------------------------------------------
629: 1:BoardData {
629: 1:  'description': ['No more Levels. You win!'],
629: 1:  'history': [],
629: 1:  'level': 16,
629: 1:  'questions': []
629: 1:}
629: 1:Scores: 61687
629: 1:Answer: message('StartNextLevel')
------------------------------------------
630: 1:BoardData {
630: 1:  'description': ['No more Levels. You win!'],
630: 1:  'history': [],
630: 1:  'level': 16,
630: 1:  'questions': []
630: 1:}
630: 1:Scores: 61687
630: 1:Answer: message('StartNextLevel')
------------------------------------------
631: 1:BoardData {
631: 1:  'description': ['No more Levels. You win!'],
631: 1:  'history': [],
631: 1:  'level': 16,
631: 1:  'questions': []
631: 1:}
631: 1:Scores: 61687
631: 1:Answer: message('StartNextLevel')
------------------------------------------
632: 1:BoardData {
632: 1:  'description': ['No more Levels. You win!'],
632: 1:  'history': [],
632: 1:  'level': 16,
632: 1:  'questions': []
632: 1:}
632: 1:Scores: 61687
632: 1:Answer: message('StartNextLevel')
------------------------------------------
633: 1:BoardData {
633: 1:  'description': ['No more Levels. You win!'],
633: 1:  'history': [],
633: 1:  'level': 16,
633: 1:  'questions': []
633: 1:}
633: 1:Scores: 61687
633: 1:Answer: message('StartNextLevel')
------------------------------------------
634: 1:BoardData {
634: 1:  'description': ['No more Levels. You win!'],
634: 1:  'history': [],
634: 1:  'level': 16,
634: 1:  'questions': []
634: 1:}
634: 1:Scores: 61687
634: 1:Answer: message('StartNextLevel')
------------------------------------------
635: 1:BoardData {
635: 1:  'description': ['No more Levels. You win!'],
635: 1:  'history': [],
635: 1:  'level': 16,
635: 1:  'questions': []
635: 1:}
635: 1:Scores: 61687
635: 1:Answer: message('StartNextLevel')
------------------------------------------
636: 1:BoardData {
636: 1:  'description': ['No more Levels. You win!'],
636: 1:  'history': [],
636: 1:  'level': 16,
636: 1:  'questions': []
636: 1:}
636: 1:Scores: 61687
636: 1:Answer: message('StartNextLevel')
------------------------------------------
637: 1:BoardData {
637: 1:  'description': ['No more Levels. You win!'],
637: 1:  'history': [],
637: 1:  'level': 16,
637: 1:  'questions': []
637: 1:}
637: 1:Scores: 61687
637: 1:Answer: message('StartNextLevel')
------------------------------------------
638: 1:BoardData {
638: 1:  'description': ['No more Levels. You win!'],
638: 1:  'history': [],
638: 1:  'level': 16,
638: 1:  'questions': []
638: 1:}
638: 1:Scores: 61687
638: 1:Answer: message('StartNextLevel')
------------------------------------------
639: 1:BoardData {
639: 1:  'description': ['No more Levels. You win!'],
639: 1:  'history': [],
639: 1:  'level': 16,
639: 1:  'questions': []
639: 1:}
639: 1:Scores: 61687
639: 1:Answer: message('StartNextLevel')
------------------------------------------
640: 1:BoardData {
640: 1:  'description': ['No more Levels. You win!'],
640: 1:  'history': [],
640: 1:  'level': 16,
640: 1:  'questions': []
640: 1:}
640: 1:Scores: 61687
640: 1:Answer: message('StartNextLevel')
------------------------------------------
641: 1:BoardData {
641: 1:  'description': ['No more Levels. You win!'],
641: 1:  'history': [],
641: 1:  'level': 16,
641: 1:  'questions': []
641: 1:}
641: 1:Scores: 61687
641: 1:Answer: message('StartNextLevel')
------------------------------------------
642: 1:BoardData {
642: 1:  'description': ['No more Levels. You win!'],
642: 1:  'history': [],
642: 1:  'level': 16,
642: 1:  'questions': []
642: 1:}
642: 1:Scores: 61687
642: 1:Answer: message('StartNextLevel')
------------------------------------------
643: 1:BoardData {
643: 1:  'description': ['No more Levels. You win!'],
643: 1:  'history': [],
643: 1:  'level': 16,
643: 1:  'questions': []
643: 1:}
643: 1:Scores: 61687
643: 1:Answer: message('StartNextLevel')
------------------------------------------
644: 1:BoardData {
644: 1:  'description': ['No more Levels. You win!'],
644: 1:  'history': [],
644: 1:  'level': 16,
644: 1:  'questions': []
644: 1:}
644: 1:Scores: 61687
644: 1:Answer: message('StartNextLevel')
------------------------------------------
645: 1:BoardData {
645: 1:  'description': ['No more Levels. You win!'],
645: 1:  'history': [],
645: 1:  'level': 16,
645: 1:  'questions': []
645: 1:}
645: 1:Scores: 61687
645: 1:Answer: message('StartNextLevel')
------------------------------------------
646: 1:BoardData {
646: 1:  'description': ['No more Levels. You win!'],
646: 1:  'history': [],
646: 1:  'level': 16,
646: 1:  'questions': []
646: 1:}
646: 1:Scores: 61687
646: 1:Answer: message('StartNextLevel')
------------------------------------------
647: 1:BoardData {
647: 1:  'description': ['No more Levels. You win!'],
647: 1:  'history': [],
647: 1:  'level': 16,
647: 1:  'questions': []
647: 1:}
647: 1:Scores: 61687
647: 1:Answer: message('StartNextLevel')
------------------------------------------
648: 1:BoardData {
648: 1:  'description': ['No more Levels. You win!'],
648: 1:  'history': [],
648: 1:  'level': 16,
648: 1:  'questions': []
648: 1:}
648: 1:Scores: 61687
648: 1:Answer: message('StartNextLevel')
------------------------------------------
649: 1:BoardData {
649: 1:  'description': ['No more Levels. You win!'],
649: 1:  'history': [],
649: 1:  'level': 16,
649: 1:  'questions': []
649: 1:}
649: 1:Scores: 61687
649: 1:Answer: message('StartNextLevel')
------------------------------------------
650: 1:BoardData {
650: 1:  'description': ['No more Levels. You win!'],
650: 1:  'history': [],
650: 1:  'level': 16,
650: 1:  'questions': []
650: 1:}
650: 1:Scores: 61687
650: 1:Answer: message('StartNextLevel')
------------------------------------------
651: 1:BoardData {
651: 1:  'description': ['No more Levels. You win!'],
651: 1:  'history': [],
651: 1:  'level': 16,
651: 1:  'questions': []
651: 1:}
651: 1:Scores: 61687
651: 1:Answer: message('StartNextLevel')
------------------------------------------
652: 1:BoardData {
652: 1:  'description': ['No more Levels. You win!'],
652: 1:  'history': [],
652: 1:  'level': 16,
652: 1:  'questions': []
652: 1:}
652: 1:Scores: 61687
652: 1:Answer: message('StartNextLevel')
------------------------------------------
653: 1:BoardData {
653: 1:  'description': ['No more Levels. You win!'],
653: 1:  'history': [],
653: 1:  'level': 16,
653: 1:  'questions': []
653: 1:}
653: 1:Scores: 61687
653: 1:Answer: message('StartNextLevel')
------------------------------------------
654: 1:BoardData {
654: 1:  'description': ['No more Levels. You win!'],
654: 1:  'history': [],
654: 1:  'level': 16,
654: 1:  'questions': []
654: 1:}
654: 1:Scores: 61687
654: 1:Answer: message('StartNextLevel')
------------------------------------------
655: 1:BoardData {
655: 1:  'description': ['No more Levels. You win!'],
655: 1:  'history': [],
655: 1:  'level': 16,
655: 1:  'questions': []
655: 1:}
655: 1:Scores: 61687
655: 1:Answer: message('StartNextLevel')
------------------------------------------
656: 1:BoardData {
656: 1:  'description': ['No more Levels. You win!'],
656: 1:  'history': [],
656: 1:  'level': 16,
656: 1:  'questions': []
656: 1:}
656: 1:Scores: 61687
656: 1:Answer: message('StartNextLevel')
------------------------------------------
657: 1:BoardData {
657: 1:  'description': ['No more Levels. You win!'],
657: 1:  'history': [],
657: 1:  'level': 16,
657: 1:  'questions': []
657: 1:}
657: 1:Scores: 61687
657: 1:Answer: message('StartNextLevel')
------------------------------------------
658: 1:BoardData {
658: 1:  'description': ['No more Levels. You win!'],
658: 1:  'history': [],
658: 1:  'level': 16,
658: 1:  'questions': []
658: 1:}
658: 1:Scores: 61687
658: 1:Answer: message('StartNextLevel')
------------------------------------------
659: 1:BoardData {
659: 1:  'description': ['No more Levels. You win!'],
659: 1:  'history': [],
659: 1:  'level': 16,
659: 1:  'questions': []
659: 1:}
659: 1:Scores: 61687
659: 1:Answer: message('StartNextLevel')
------------------------------------------
660: 1:BoardData {
660: 1:  'description': ['No more Levels. You win!'],
660: 1:  'history': [],
660: 1:  'level': 16,
660: 1:  'questions': []
660: 1:}
660: 1:Scores: 61687
660: 1:Answer: message('StartNextLevel')
------------------------------------------
661: 1:BoardData {
661: 1:  'description': ['No more Levels. You win!'],
661: 1:  'history': [],
661: 1:  'level': 16,
661: 1:  'questions': []
661: 1:}
661: 1:Scores: 61687
661: 1:Answer: message('StartNextLevel')
------------------------------------------
662: 1:BoardData {
662: 1:  'description': ['No more Levels. You win!'],
662: 1:  'history': [],
662: 1:  'level': 16,
662: 1:  'questions': []
662: 1:}
662: 1:Scores: 61687
662: 1:Answer: message('StartNextLevel')
------------------------------------------
663: 1:BoardData {
663: 1:  'description': ['No more Levels. You win!'],
663: 1:  'history': [],
663: 1:  'level': 16,
663: 1:  'questions': []
663: 1:}
663: 1:Scores: 61687
663: 1:Answer: message('StartNextLevel')
------------------------------------------
664: 1:BoardData {
664: 1:  'description': ['No more Levels. You win!'],
664: 1:  'history': [],
664: 1:  'level': 16,
664: 1:  'questions': []
664: 1:}
664: 1:Scores: 61687
664: 1:Answer: message('StartNextLevel')
------------------------------------------
665: 1:BoardData {
665: 1:  'description': ['No more Levels. You win!'],
665: 1:  'history': [],
665: 1:  'level': 16,
665: 1:  'questions': []
665: 1:}
665: 1:Scores: 61687
665: 1:Answer: message('StartNextLevel')
------------------------------------------
666: 1:BoardData {
666: 1:  'description': ['No more Levels. You win!'],
666: 1:  'history': [],
666: 1:  'level': 16,
666: 1:  'questions': []
666: 1:}
666: 1:Scores: 61687
666: 1:Answer: message('StartNextLevel')
------------------------------------------
667: 1:BoardData {
667: 1:  'description': ['No more Levels. You win!'],
667: 1:  'history': [],
667: 1:  'level': 16,
667: 1:  'questions': []
667: 1:}
667: 1:Scores: 61687
667: 1:Answer: message('StartNextLevel')
------------------------------------------
668: 1:BoardData {
668: 1:  'description': ['No more Levels. You win!'],
668: 1:  'history': [],
668: 1:  'level': 16,
668: 1:  'questions': []
668: 1:}
668: 1:Scores: 61687
668: 1:Answer: message('StartNextLevel')
------------------------------------------
669: 1:BoardData {
669: 1:  'description': ['No more Levels. You win!'],
669: 1:  'history': [],
669: 1:  'level': 16,
669: 1:  'questions': []
669: 1:}
669: 1:Scores: 61687
669: 1:Answer: message('StartNextLevel')
------------------------------------------
670: 1:BoardData {
670: 1:  'description': ['No more Levels. You win!'],
670: 1:  'history': [],
670: 1:  'level': 16,
670: 1:  'questions': []
670: 1:}
670: 1:Scores: 61687
670: 1:Answer: message('StartNextLevel')
------------------------------------------
671: 1:BoardData {
671: 1:  'description': ['No more Levels. You win!'],
671: 1:  'history': [],
671: 1:  'level': 16,
671: 1:  'questions': []
671: 1:}
671: 1:Scores: 61687
671: 1:Answer: message('StartNextLevel')
------------------------------------------
672: 1:BoardData {
672: 1:  'description': ['No more Levels. You win!'],
672: 1:  'history': [],
672: 1:  'level': 16,
672: 1:  'questions': []
672: 1:}
672: 1:Scores: 61687
672: 1:Answer: message('StartNextLevel')
------------------------------------------
673: 1:BoardData {
673: 1:  'description': ['No more Levels. You win!'],
673: 1:  'history': [],
673: 1:  'level': 16,
673: 1:  'questions': []
673: 1:}
673: 1:Scores: 61687
673: 1:Answer: message('StartNextLevel')
------------------------------------------
674: 1:BoardData {
674: 1:  'description': ['No more Levels. You win!'],
674: 1:  'history': [],
674: 1:  'level': 16,
674: 1:  'questions': []
674: 1:}
674: 1:Scores: 61687
674: 1:Answer: message('StartNextLevel')
------------------------------------------
675: 1:BoardData {
675: 1:  'description': ['No more Levels. You win!'],
675: 1:  'history': [],
675: 1:  'level': 16,
675: 1:  'questions': []
675: 1:}
675: 1:Scores: 61687
675: 1:Answer: message('StartNextLevel')
------------------------------------------
676: 1:BoardData {
676: 1:  'description': ['No more Levels. You win!'],
676: 1:  'history': [],
676: 1:  'level': 16,
676: 1:  'questions': []
676: 1:}
676: 1:Scores: 61687
676: 1:Answer: message('StartNextLevel')
------------------------------------------
677: 1:BoardData {
677: 1:  'description': ['No more Levels. You win!'],
677: 1:  'history': [],
677: 1:  'level': 16,
677: 1:  'questions': []
677: 1:}
677: 1:Scores: 61687
677: 1:Answer: message('StartNextLevel')
------------------------------------------
678: 1:BoardData {
678: 1:  'description': ['No more Levels. You win!'],
678: 1:  'history': [],
678: 1:  'level': 16,
678: 1:  'questions': []
678: 1:}
678: 1:Scores: 61687
678: 1:Answer: message('StartNextLevel')
------------------------------------------
679: 1:BoardData {
679: 1:  'description': ['No more Levels. You win!'],
679: 1:  'history': [],
679: 1:  'level': 16,
679: 1:  'questions': []
679: 1:}
679: 1:Scores: 61687
679: 1:Answer: message('StartNextLevel')
------------------------------------------
680: 1:BoardData {
680: 1:  'description': ['No more Levels. You win!'],
680: 1:  'history': [],
680: 1:  'level': 16,
680: 1:  'questions': []
680: 1:}
680: 1:Scores: 61687
680: 1:Answer: message('StartNextLevel')
------------------------------------------
681: 1:BoardData {
681: 1:  'description': ['No more Levels. You win!'],
681: 1:  'history': [],
681: 1:  'level': 16,
681: 1:  'questions': []
681: 1:}
681: 1:Scores: 61687
681: 1:Answer: message('StartNextLevel')
------------------------------------------
682: 1:BoardData {
682: 1:  'description': ['No more Levels. You win!'],
682: 1:  'history': [],
682: 1:  'level': 16,
682: 1:  'questions': []
682: 1:}
682: 1:Scores: 61687
682: 1:Answer: message('StartNextLevel')
------------------------------------------
683: 1:BoardData {
683: 1:  'description': ['No more Levels. You win!'],
683: 1:  'history': [],
683: 1:  'level': 16,
683: 1:  'questions': []
683: 1:}
683: 1:Scores: 61687
683: 1:Answer: message('StartNextLevel')
------------------------------------------
684: 1:BoardData {
684: 1:  'description': ['No more Levels. You win!'],
684: 1:  'history': [],
684: 1:  'level': 16,
684: 1:  'questions': []
684: 1:}
684: 1:Scores: 61687
684: 1:Answer: message('StartNextLevel')
------------------------------------------
685: 1:BoardData {
685: 1:  'description': ['No more Levels. You win!'],
685: 1:  'history': [],
685: 1:  'level': 16,
685: 1:  'questions': []
685: 1:}
685: 1:Scores: 61687
685: 1:Answer: message('StartNextLevel')
------------------------------------------
686: 1:BoardData {
686: 1:  'description': ['No more Levels. You win!'],
686: 1:  'history': [],
686: 1:  'level': 16,
686: 1:  'questions': []
686: 1:}
686: 1:Scores: 61687
686: 1:Answer: message('StartNextLevel')
------------------------------------------
687: 1:BoardData {
687: 1:  'description': ['No more Levels. You win!'],
687: 1:  'history': [],
687: 1:  'level': 16,
687: 1:  'questions': []
687: 1:}
687: 1:Scores: 61687
687: 1:Answer: message('StartNextLevel')
------------------------------------------
688: 1:BoardData {
688: 1:  'description': ['No more Levels. You win!'],
688: 1:  'history': [],
688: 1:  'level': 16,
688: 1:  'questions': []
688: 1:}
688: 1:Scores: 61687
688: 1:Answer: message('StartNextLevel')
------------------------------------------
689: 1:BoardData {
689: 1:  'description': ['No more Levels. You win!'],
689: 1:  'history': [],
689: 1:  'level': 16,
689: 1:  'questions': []
689: 1:}
689: 1:Scores: 61687
689: 1:Answer: message('StartNextLevel')
------------------------------------------
690: 1:BoardData {
690: 1:  'description': ['No more Levels. You win!'],
690: 1:  'history': [],
690: 1:  'level': 16,
690: 1:  'questions': []
690: 1:}
690: 1:Scores: 61687
690: 1:Answer: message('StartNextLevel')
------------------------------------------
691: 1:BoardData {
691: 1:  'description': ['No more Levels. You win!'],
691: 1:  'history': [],
691: 1:  'level': 16,
691: 1:  'questions': []
691: 1:}
691: 1:Scores: 61687
691: 1:Answer: message('StartNextLevel')
------------------------------------------
692: 1:BoardData {
692: 1:  'description': ['No more Levels. You win!'],
692: 1:  'history': [],
692: 1:  'level': 16,
692: 1:  'questions': []
692: 1:}
692: 1:Scores: 61687
692: 1:Answer: message('StartNextLevel')
------------------------------------------
693: 1:BoardData {
693: 1:  'description': ['No more Levels. You win!'],
693: 1:  'history': [],
693: 1:  'level': 16,
693: 1:  'questions': []
693: 1:}
693: 1:Scores: 61687
693: 1:Answer: message('StartNextLevel')
------------------------------------------
694: 1:BoardData {
694: 1:  'description': ['No more Levels. You win!'],
694: 1:  'history': [],
694: 1:  'level': 16,
694: 1:  'questions': []
694: 1:}
694: 1:Scores: 61687
694: 1:Answer: message('StartNextLevel')
------------------------------------------
695: 1:BoardData {
695: 1:  'description': ['No more Levels. You win!'],
695: 1:  'history': [],
695: 1:  'level': 16,
695: 1:  'questions': []
695: 1:}
695: 1:Scores: 61687
695: 1:Answer: message('StartNextLevel')
------------------------------------------
696: 1:BoardData {
696: 1:  'description': ['No more Levels. You win!'],
696: 1:  'history': [],
696: 1:  'level': 16,
696: 1:  'questions': []
696: 1:}
696: 1:Scores: 61687
696: 1:Answer: message('StartNextLevel')
------------------------------------------
697: 1:BoardData {
697: 1:  'description': ['No more Levels. You win!'],
697: 1:  'history': [],
697: 1:  'level': 16,
697: 1:  'questions': []
697: 1:}
697: 1:Scores: 61687
697: 1:Answer: message('StartNextLevel')
------------------------------------------
698: 1:BoardData {
698: 1:  'description': ['No more Levels. You win!'],
698: 1:  'history': [],
698: 1:  'level': 16,
698: 1:  'questions': []
698: 1:}
698: 1:Scores: 61687
698: 1:Answer: message('StartNextLevel')
------------------------------------------
699: 1:BoardData {
699: 1:  'description': ['No more Levels. You win!'],
699: 1:  'history': [],
699: 1:  'level': 16,
699: 1:  'questions': []
699: 1:}
699: 1:Scores: 61687
699: 1:Answer: message('StartNextLevel')
------------------------------------------
700: 1:BoardData {
700: 1:  'description': ['No more Levels. You win!'],
700: 1:  'history': [],
700: 1:  'level': 16,
700: 1:  'questions': []
700: 1:}
700: 1:Scores: 61687
700: 1:Answer: message('StartNextLevel')
------------------------------------------
701: 1:BoardData {
701: 1:  'description': ['No more Levels. You win!'],
701: 1:  'history': [],
701: 1:  'level': 16,
701: 1:  'questions': []
701: 1:}
701: 1:Scores: 61687
701: 1:Answer: message('StartNextLevel')
------------------------------------------
702: 1:BoardData {
702: 1:  'description': ['No more Levels. You win!'],
702: 1:  'history': [],
702: 1:  'level': 16,
702: 1:  'questions': []
702: 1:}
702: 1:Scores: 61687
702: 1:Answer: message('StartNextLevel')
------------------------------------------
703: 1:BoardData {
703: 1:  'description': ['No more Levels. You win!'],
703: 1:  'history': [],
703: 1:  'level': 16,
703: 1:  'questions': []
703: 1:}
703: 1:Scores: 61687
703: 1:Answer: message('StartNextLevel')
------------------------------------------
704: 1:BoardData {
704: 1:  'description': ['No more Levels. You win!'],
704: 1:  'history': [],
704: 1:  'level': 16,
704: 1:  'questions': []
704: 1:}
704: 1:Scores: 61687
704: 1:Answer: message('StartNextLevel')
------------------------------------------
705: 1:BoardData {
705: 1:  'description': ['No more Levels. You win!'],
705: 1:  'history': [],
705: 1:  'level': 16,
705: 1:  'questions': []
705: 1:}
705: 1:Scores: 61687
705: 1:Answer: message('StartNextLevel')
------------------------------------------
706: 1:BoardData {
706: 1:  'description': ['No more Levels. You win!'],
706: 1:  'history': [],
706: 1:  'level': 16,
706: 1:  'questions': []
706: 1:}
706: 1:Scores: 61687
706: 1:Answer: message('StartNextLevel')
------------------------------------------
707: 1:BoardData {
707: 1:  'description': ['No more Levels. You win!'],
707: 1:  'history': [],
707: 1:  'level': 16,
707: 1:  'questions': []
707: 1:}
707: 1:Scores: 61687
707: 1:Answer: message('StartNextLevel')
------------------------------------------
708: 1:BoardData {
708: 1:  'description': ['No more Levels. You win!'],
708: 1:  'history': [],
708: 1:  'level': 16,
708: 1:  'questions': []
708: 1:}
708: 1:Scores: 61687
708: 1:Answer: message('StartNextLevel')
------------------------------------------
709: 1:BoardData {
709: 1:  'description': ['No more Levels. You win!'],
709: 1:  'history': [],
709: 1:  'level': 16,
709: 1:  'questions': []
709: 1:}
709: 1:Scores: 61687
709: 1:Answer: message('StartNextLevel')
------------------------------------------
710: 1:BoardData {
710: 1:  'description': ['No more Levels. You win!'],
710: 1:  'history': [],
710: 1:  'level': 16,
710: 1:  'questions': []
710: 1:}
710: 1:Scores: 61687
710: 1:Answer: message('StartNextLevel')
------------------------------------------
711: 1:BoardData {
711: 1:  'description': ['No more Levels. You win!'],
711: 1:  'history': [],
711: 1:  'level': 16,
711: 1:  'questions': []
711: 1:}
711: 1:Scores: 61687
711: 1:Answer: message('StartNextLevel')
------------------------------------------
712: 1:BoardData {
712: 1:  'description': ['No more Levels. You win!'],
712: 1:  'history': [],
712: 1:  'level': 16,
712: 1:  'questions': []
712: 1:}
712: 1:Scores: 61687
712: 1:Answer: message('StartNextLevel')
------------------------------------------
713: 1:BoardData {
713: 1:  'description': ['No more Levels. You win!'],
713: 1:  'history': [],
713: 1:  'level': 16,
713: 1:  'questions': []
713: 1:}
713: 1:Scores: 61687
713: 1:Answer: message('StartNextLevel')
------------------------------------------
714: 1:BoardData {
714: 1:  'description': ['No more Levels. You win!'],
714: 1:  'history': [],
714: 1:  'level': 16,
714: 1:  'questions': []
714: 1:}
714: 1:Scores: 61687
714: 1:Answer: message('StartNextLevel')
------------------------------------------
715: 1:BoardData {
715: 1:  'description': ['No more Levels. You win!'],
715: 1:  'history': [],
715: 1:  'level': 16,
715: 1:  'questions': []
715: 1:}
715: 1:Scores: 61687
715: 1:Answer: message('StartNextLevel')
------------------------------------------
716: 1:BoardData {
716: 1:  'description': ['No more Levels. You win!'],
716: 1:  'history': [],
716: 1:  'level': 16,
716: 1:  'questions': []
716: 1:}
716: 1:Scores: 61687
716: 1:Answer: message('StartNextLevel')
------------------------------------------
717: 1:BoardData {
717: 1:  'description': ['No more Levels. You win!'],
717: 1:  'history': [],
717: 1:  'level': 16,
717: 1:  'questions': []
717: 1:}
717: 1:Scores: 61687
717: 1:Answer: message('StartNextLevel')
------------------------------------------
718: 1:BoardData {
718: 1:  'description': ['No more Levels. You win!'],
718: 1:  'history': [],
718: 1:  'level': 16,
718: 1:  'questions': []
718: 1:}
718: 1:Scores: 61687
718: 1:Answer: message('StartNextLevel')
------------------------------------------
719: 1:BoardData {
719: 1:  'description': ['No more Levels. You win!'],
719: 1:  'history': [],
719: 1:  'level': 16,
719: 1:  'questions': []
719: 1:}
719: 1:Scores: 61687
719: 1:Answer: message('StartNextLevel')
------------------------------------------
720: 1:BoardData {
720: 1:  'description': ['No more Levels. You win!'],
720: 1:  'history': [],
720: 1:  'level': 16,
720: 1:  'questions': []
720: 1:}
720: 1:Scores: 61687
720: 1:Answer: message('StartNextLevel')
------------------------------------------
721: 1:BoardData {
721: 1:  'description': ['No more Levels. You win!'],
721: 1:  'history': [],
721: 1:  'level': 16,
721: 1:  'questions': []
721: 1:}
721: 1:Scores: 61687
721: 1:Answer: message('StartNextLevel')
------------------------------------------
722: 1:BoardData {
722: 1:  'description': ['No more Levels. You win!'],
722: 1:  'history': [],
722: 1:  'level': 16,
722: 1:  'questions': []
722: 1:}
722: 1:Scores: 61687
722: 1:Answer: message('StartNextLevel')
------------------------------------------
723: 1:BoardData {
723: 1:  'description': ['No more Levels. You win!'],
723: 1:  'history': [],
723: 1:  'level': 16,
723: 1:  'questions': []
723: 1:}
723: 1:Scores: 61687
723: 1:Answer: message('StartNextLevel')
------------------------------------------
724: 1:BoardData {
724: 1:  'description': ['No more Levels. You win!'],
724: 1:  'history': [],
724: 1:  'level': 16,
724: 1:  'questions': []
724: 1:}
724: 1:Scores: 61687
724: 1:Answer: message('StartNextLevel')
------------------------------------------
725: 1:BoardData {
725: 1:  'description': ['No more Levels. You win!'],
725: 1:  'history': [],
725: 1:  'level': 16,
725: 1:  'questions': []
725: 1:}
725: 1:Scores: 61687
725: 1:Answer: message('StartNextLevel')
------------------------------------------
726: 1:BoardData {
726: 1:  'description': ['No more Levels. You win!'],
726: 1:  'history': [],
726: 1:  'level': 16,
726: 1:  'questions': []
726: 1:}
726: 1:Scores: 61687
726: 1:Answer: message('StartNextLevel')
------------------------------------------
727: 1:BoardData {
727: 1:  'description': ['No more Levels. You win!'],
727: 1:  'history': [],
727: 1:  'level': 16,
727: 1:  'questions': []
727: 1:}
727: 1:Scores: 61687
727: 1:Answer: message('StartNextLevel')
------------------------------------------
728: 1:BoardData {
728: 1:  'description': ['No more Levels. You win!'],
728: 1:  'history': [],
728: 1:  'level': 16,
728: 1:  'questions': []
728: 1:}
728: 1:Scores: 61687
728: 1:Answer: message('StartNextLevel')
------------------------------------------
729: 1:BoardData {
729: 1:  'description': ['No more Levels. You win!'],
729: 1:  'history': [],
729: 1:  'level': 16,
729: 1:  'questions': []
729: 1:}
729: 1:Scores: 61687
729: 1:Answer: message('StartNextLevel')
------------------------------------------
730: 1:BoardData {
730: 1:  'description': ['No more Levels. You win!'],
730: 1:  'history': [],
730: 1:  'level': 16,
730: 1:  'questions': []
730: 1:}
730: 1:Scores: 61687
730: 1:Answer: message('StartNextLevel')
------------------------------------------
731: 1:BoardData {
731: 1:  'description': ['No more Levels. You win!'],
731: 1:  'history': [],
731: 1:  'level': 16,
731: 1:  'questions': []
731: 1:}
731: 1:Scores: 61687
731: 1:Answer: message('StartNextLevel')
------------------------------------------
732: 1:BoardData {
732: 1:  'description': ['No more Levels. You win!'],
732: 1:  'history': [],
732: 1:  'level': 16,
732: 1:  'questions': []
732: 1:}
732: 1:Scores: 61687
732: 1:Answer: message('StartNextLevel')
------------------------------------------
733: 1:BoardData {
733: 1:  'description': ['No more Levels. You win!'],
733: 1:  'history': [],
733: 1:  'level': 16,
733: 1:  'questions': []
733: 1:}
733: 1:Scores: 61687
733: 1:Answer: message('StartNextLevel')
------------------------------------------
734: 1:BoardData {
734: 1:  'description': ['No more Levels. You win!'],
734: 1:  'history': [],
734: 1:  'level': 16,
734: 1:  'questions': []
734: 1:}
734: 1:Scores: 61687
734: 1:Answer: message('StartNextLevel')
------------------------------------------
735: 1:BoardData {
735: 1:  'description': ['No more Levels. You win!'],
735: 1:  'history': [],
735: 1:  'level': 16,
735: 1:  'questions': []
735: 1:}
735: 1:Scores: 61687
735: 1:Answer: message('StartNextLevel')
------------------------------------------
736: 1:BoardData {
736: 1:  'description': ['No more Levels. You win!'],
736: 1:  'history': [],
736: 1:  'level': 16,
736: 1:  'questions': []
736: 1:}
736: 1:Scores: 61687
736: 1:Answer: message('StartNextLevel')
------------------------------------------
737: 1:BoardData {
737: 1:  'description': ['No more Levels. You win!'],
737: 1:  'history': [],
737: 1:  'level': 16,
737: 1:  'questions': []
737: 1:}
737: 1:Scores: 61687
737: 1:Answer: message('StartNextLevel')
------------------------------------------
738: 1:BoardData {
738: 1:  'description': ['No more Levels. You win!'],
738: 1:  'history': [],
738: 1:  'level': 16,
738: 1:  'questions': []
738: 1:}
738: 1:Scores: 61687
738: 1:Answer: message('StartNextLevel')
------------------------------------------
739: 1:BoardData {
739: 1:  'description': ['No more Levels. You win!'],
739: 1:  'history': [],
739: 1:  'level': 16,
739: 1:  'questions': []
739: 1:}
739: 1:Scores: 61687
739: 1:Answer: message('StartNextLevel')
------------------------------------------
740: 1:BoardData {
740: 1:  'description': ['No more Levels. You win!'],
740: 1:  'history': [],
740: 1:  'level': 16,
740: 1:  'questions': []
740: 1:}
740: 1:Scores: 61687
740: 1:Answer: message('StartNextLevel')
------------------------------------------
741: 1:BoardData {
741: 1:  'description': ['No more Levels. You win!'],
741: 1:  'history': [],
741: 1:  'level': 16,
741: 1:  'questions': []
741: 1:}
741: 1:Scores: 61687
741: 1:Answer: message('StartNextLevel')
------------------------------------------
742: 1:BoardData {
742: 1:  'description': ['No more Levels. You win!'],
742: 1:  'history': [],
742: 1:  'level': 16,
742: 1:  'questions': []
742: 1:}
742: 1:Scores: 61687
742: 1:Answer: message('StartNextLevel')
------------------------------------------
743: 1:BoardData {
743: 1:  'description': ['No more Levels. You win!'],
743: 1:  'history': [],
743: 1:  'level': 16,
743: 1:  'questions': []
743: 1:}
743: 1:Scores: 61687
743: 1:Answer: message('StartNextLevel')
------------------------------------------
744: 1:BoardData {
744: 1:  'description': ['No more Levels. You win!'],
744: 1:  'history': [],
744: 1:  'level': 16,
744: 1:  'questions': []
744: 1:}
744: 1:Scores: 61687
744: 1:Answer: message('StartNextLevel')
------------------------------------------
745: 1:BoardData {
745: 1:  'description': ['No more Levels. You win!'],
745: 1:  'history': [],
745: 1:  'level': 16,
745: 1:  'questions': []
745: 1:}
745: 1:Scores: 61687
745: 1:Answer: message('StartNextLevel')
------------------------------------------
746: 1:BoardData {
746: 1:  'description': ['No more Levels. You win!'],
746: 1:  'history': [],
746: 1:  'level': 16,
746: 1:  'questions': []
746: 1:}
746: 1:Scores: 61687
746: 1:Answer: message('StartNextLevel')
------------------------------------------
747: 1:BoardData {
747: 1:  'description': ['No more Levels. You win!'],
747: 1:  'history': [],
747: 1:  'level': 16,
747: 1:  'questions': []
747: 1:}
747: 1:Scores: 61687
747: 1:Answer: message('StartNextLevel')
------------------------------------------
748: 1:BoardData {
748: 1:  'description': ['No more Levels. You win!'],
748: 1:  'history': [],
748: 1:  'level': 16,
748: 1:  'questions': []
748: 1:}
748: 1:Scores: 61687
748: 1:Answer: message('StartNextLevel')
------------------------------------------
749: 1:BoardData {
749: 1:  'description': ['No more Levels. You win!'],
749: 1:  'history': [],
749: 1:  'level': 16,
749: 1:  'questions': []
749: 1:}
749: 1:Scores: 61687
749: 1:Answer: message('StartNextLevel')
------------------------------------------
750: 1:BoardData {
750: 1:  'description': ['No more Levels. You win!'],
750: 1:  'history': [],
750: 1:  'level': 16,
750: 1:  'questions': []
750: 1:}
750: 1:Scores: 61687
750: 1:Answer: message('StartNextLevel')
------------------------------------------
751: 1:BoardData {
751: 1:  'description': ['No more Levels. You win!'],
751: 1:  'history': [],
751: 1:  'level': 16,
751: 1:  'questions': []
751: 1:}
751: 1:Scores: 61687
751: 1:Answer: message('StartNextLevel')
------------------------------------------
752: 1:BoardData {
752: 1:  'description': ['No more Levels. You win!'],
752: 1:  'history': [],
752: 1:  'level': 16,
752: 1:  'questions': []
752: 1:}
752: 1:Scores: 61687
752: 1:Answer: message('StartNextLevel')
------------------------------------------
753: 1:BoardData {
753: 1:  'description': ['No more Levels. You win!'],
753: 1:  'history': [],
753: 1:  'level': 16,
753: 1:  'questions': []
753: 1:}
753: 1:Scores: 61687
753: 1:Answer: message('StartNextLevel')
------------------------------------------
754: 1:BoardData {
754: 1:  'description': ['No more Levels. You win!'],
754: 1:  'history': [],
754: 1:  'level': 16,
754: 1:  'questions': []
754: 1:}
754: 1:Scores: 61687
754: 1:Answer: message('StartNextLevel')
------------------------------------------
755: 1:BoardData {
755: 1:  'description': ['No more Levels. You win!'],
755: 1:  'history': [],
755: 1:  'level': 16,
755: 1:  'questions': []
755: 1:}
755: 1:Scores: 61687
755: 1:Answer: message('StartNextLevel')
------------------------------------------
756: 1:BoardData {
756: 1:  'description': ['No more Levels. You win!'],
756: 1:  'history': [],
756: 1:  'level': 16,
756: 1:  'questions': []
756: 1:}
756: 1:Scores: 61687
756: 1:Answer: message('StartNextLevel')
------------------------------------------
757: 1:BoardData {
757: 1:  'description': ['No more Levels. You win!'],
757: 1:  'history': [],
757: 1:  'level': 16,
757: 1:  'questions': []
757: 1:}
757: 1:Scores: 61687
757: 1:Answer: message('StartNextLevel')
------------------------------------------
758: 1:BoardData {
758: 1:  'description': ['No more Levels. You win!'],
758: 1:  'history': [],
758: 1:  'level': 16,
758: 1:  'questions': []
758: 1:}
758: 1:Scores: 61687
758: 1:Answer: message('StartNextLevel')
------------------------------------------
759: 1:BoardData {
759: 1:  'description': ['No more Levels. You win!'],
759: 1:  'history': [],
759: 1:  'level': 16,
759: 1:  'questions': []
759: 1:}
759: 1:Scores: 61687
759: 1:Answer: message('StartNextLevel')
------------------------------------------
760: 1:BoardData {
760: 1:  'description': ['No more Levels. You win!'],
760: 1:  'history': [],
760: 1:  'level': 16,
760: 1:  'questions': []
760: 1:}
760: 1:Scores: 61687
760: 1:Answer: message('StartNextLevel')
------------------------------------------
761: 1:BoardData {
761: 1:  'description': ['No more Levels. You win!'],
761: 1:  'history': [],
761: 1:  'level': 16,
761: 1:  'questions': []
761: 1:}
761: 1:Scores: 61687
761: 1:Answer: message('StartNextLevel')
------------------------------------------
762: 1:BoardData {
762: 1:  'description': ['No more Levels. You win!'],
762: 1:  'history': [],
762: 1:  'level': 16,
762: 1:  'questions': []
762: 1:}
762: 1:Scores: 61687
762: 1:Answer: message('StartNextLevel')
------------------------------------------
763: 1:BoardData {
763: 1:  'description': ['No more Levels. You win!'],
763: 1:  'history': [],
763: 1:  'level': 16,
763: 1:  'questions': []
763: 1:}
763: 1:Scores: 61687
763: 1:Answer: message('StartNextLevel')
------------------------------------------
764: 1:BoardData {
764: 1:  'description': ['No more Levels. You win!'],
764: 1:  'history': [],
764: 1:  'level': 16,
764: 1:  'questions': []
764: 1:}
764: 1:Scores: 61687
764: 1:Answer: message('StartNextLevel')
------------------------------------------
765: 1:BoardData {
765: 1:  'description': ['No more Levels. You win!'],
765: 1:  'history': [],
765: 1:  'level': 16,
765: 1:  'questions': []
765: 1:}
765: 1:Scores: 61687
765: 1:Answer: message('StartNextLevel')
------------------------------------------
766: 1:BoardData {
766: 1:  'description': ['No more Levels. You win!'],
766: 1:  'history': [],
766: 1:  'level': 16,
766: 1:  'questions': []
766: 1:}
766: 1:Scores: 61687
766: 1:Answer: message('StartNextLevel')
------------------------------------------
767: 1:BoardData {
767: 1:  'description': ['No more Levels. You win!'],
767: 1:  'history': [],
767: 1:  'level': 16,
767: 1:  'questions': []
767: 1:}
767: 1:Scores: 61687
767: 1:Answer: message('StartNextLevel')
------------------------------------------
768: 1:BoardData {
768: 1:  'description': ['No more Levels. You win!'],
768: 1:  'history': [],
768: 1:  'level': 16,
768: 1:  'questions': []
768: 1:}
768: 1:Scores: 61687
768: 1:Answer: message('StartNextLevel')
------------------------------------------
769: 1:BoardData {
769: 1:  'description': ['No more Levels. You win!'],
769: 1:  'history': [],
769: 1:  'level': 16,
769: 1:  'questions': []
769: 1:}
769: 1:Scores: 61687
769: 1:Answer: message('StartNextLevel')
------------------------------------------
770: 1:BoardData {
770: 1:  'description': ['No more Levels. You win!'],
770: 1:  'history': [],
770: 1:  'level': 16,
770: 1:  'questions': []
770: 1:}
770: 1:Scores: 61687
770: 1:Answer: message('StartNextLevel')
------------------------------------------
771: 1:BoardData {
771: 1:  'description': ['No more Levels. You win!'],
771: 1:  'history': [],
771: 1:  'level': 16,
771: 1:  'questions': []
771: 1:}
771: 1:Scores: 61687
771: 1:Answer: message('StartNextLevel')
------------------------------------------
772: 1:BoardData {
772: 1:  'description': ['No more Levels. You win!'],
772: 1:  'history': [],
772: 1:  'level': 16,
772: 1:  'questions': []
772: 1:}
772: 1:Scores: 61687
772: 1:Answer: message('StartNextLevel')
------------------------------------------
773: 1:BoardData {
773: 1:  'description': ['No more Levels. You win!'],
773: 1:  'history': [],
773: 1:  'level': 16,
773: 1:  'questions': []
773: 1:}
773: 1:Scores: 61687
773: 1:Answer: message('StartNextLevel')
------------------------------------------
774: 1:BoardData {
774: 1:  'description': ['No more Levels. You win!'],
774: 1:  'history': [],
774: 1:  'level': 16,
774: 1:  'questions': []
774: 1:}
774: 1:Scores: 61687
774: 1:Answer: message('StartNextLevel')
------------------------------------------
775: 1:BoardData {
775: 1:  'description': ['No more Levels. You win!'],
775: 1:  'history': [],
775: 1:  'level': 16,
775: 1:  'questions': []
775: 1:}
775: 1:Scores: 61687
775: 1:Answer: message('StartNextLevel')
------------------------------------------
776: 1:BoardData {
776: 1:  'description': ['No more Levels. You win!'],
776: 1:  'history': [],
776: 1:  'level': 16,
776: 1:  'questions': []
776: 1:}
776: 1:Scores: 61687
776: 1:Answer: message('StartNextLevel')
------------------------------------------
777: 1:BoardData {
777: 1:  'description': ['No more Levels. You win!'],
777: 1:  'history': [],
777: 1:  'level': 16,
777: 1:  'questions': []
777: 1:}
777: 1:Scores: 61687
777: 1:Answer: message('StartNextLevel')
------------------------------------------
778: 1:BoardData {
778: 1:  'description': ['No more Levels. You win!'],
778: 1:  'history': [],
778: 1:  'level': 16,
778: 1:  'questions': []
778: 1:}
778: 1:Scores: 61687
778: 1:Answer: message('StartNextLevel')
------------------------------------------
779: 1:BoardData {
779: 1:  'description': ['No more Levels. You win!'],
779: 1:  'history': [],
779: 1:  'level': 16,
779: 1:  'questions': []
779: 1:}
779: 1:Scores: 61687
779: 1:Answer: message('StartNextLevel')
------------------------------------------
780: 1:BoardData {
780: 1:  'description': ['No more Levels. You win!'],
780: 1:  'history': [],
780: 1:  'level': 16,
780: 1:  'questions': []
780: 1:}
780: 1:Scores: 61687
780: 1:Answer: message('StartNextLevel')
------------------------------------------
781: 1:BoardData {
781: 1:  'description': ['No more Levels. You win!'],
781: 1:  'history': [],
781: 1:  'level': 16,
781: 1:  'questions': []
781: 1:}
781: 1:Scores: 61687
781: 1:Answer: message('StartNextLevel')
------------------------------------------
782: 1:BoardData {
782: 1:  'description': ['No more Levels. You win!'],
782: 1:  'history': [],
782: 1:  'level': 16,
782: 1:  'questions': []
782: 1:}
782: 1:Scores: 61687
782: 1:Answer: message('StartNextLevel')
------------------------------------------
783: 1:BoardData {
783: 1:  'description': ['No more Levels. You win!'],
783: 1:  'history': [],
783: 1:  'level': 16,
783: 1:  'questions': []
783: 1:}
783: 1:Scores: 61687
783: 1:Answer: message('StartNextLevel')
------------------------------------------
784: 1:BoardData {
784: 1:  'description': ['No more Levels. You win!'],
784: 1:  'history': [],
784: 1:  'level': 16,
784: 1:  'questions': []
784: 1:}
784: 1:Scores: 61687
784: 1:Answer: message('StartNextLevel')
------------------------------------------
785: 1:BoardData {
785: 1:  'description': ['No more Levels. You win!'],
785: 1:  'history': [],
785: 1:  'level': 16,
785: 1:  'questions': []
785: 1:}
785: 1:Scores: 61687
785: 1:Answer: message('StartNextLevel')
------------------------------------------
786: 1:BoardData {
786: 1:  'description': ['No more Levels. You win!'],
786: 1:  'history': [],
786: 1:  'level': 16,
786: 1:  'questions': []
786: 1:}
786: 1:Scores: 61687
786: 1:Answer: message('StartNextLevel')
------------------------------------------
787: 1:BoardData {
787: 1:  'description': ['No more Levels. You win!'],
787: 1:  'history': [],
787: 1:  'level': 16,
787: 1:  'questions': []
787: 1:}
787: 1:Scores: 61687
787: 1:Answer: message('StartNextLevel')
------------------------------------------
788: 1:BoardData {
788: 1:  'description': ['No more Levels. You win!'],
788: 1:  'history': [],
788: 1:  'level': 16,
788: 1:  'questions': []
788: 1:}
788: 1:Scores: 61687
788: 1:Answer: message('StartNextLevel')
------------------------------------------
789: 1:BoardData {
789: 1:  'description': ['No more Levels. You win!'],
789: 1:  'history': [],
789: 1:  'level': 16,
789: 1:  'questions': []
789: 1:}
789: 1:Scores: 61687
789: 1:Answer: message('StartNextLevel')
------------------------------------------
790: 1:BoardData {
790: 1:  'description': ['No more Levels. You win!'],
790: 1:  'history': [],
790: 1:  'level': 16,
790: 1:  'questions': []
790: 1:}
790: 1:Scores: 61687
790: 1:Answer: message('StartNextLevel')
------------------------------------------
791: 1:BoardData {
791: 1:  'description': ['No more Levels. You win!'],
791: 1:  'history': [],
791: 1:  'level': 16,
791: 1:  'questions': []
791: 1:}
791: 1:Scores: 61687
791: 1:Answer: message('StartNextLevel')
------------------------------------------
792: 1:BoardData {
792: 1:  'description': ['No more Levels. You win!'],
792: 1:  'history': [],
792: 1:  'level': 16,
792: 1:  'questions': []
792: 1:}
792: 1:Scores: 61687
792: 1:Answer: message('StartNextLevel')
------------------------------------------
793: 1:BoardData {
793: 1:  'description': ['No more Levels. You win!'],
793: 1:  'history': [],
793: 1:  'level': 16,
793: 1:  'questions': []
793: 1:}
793: 1:Scores: 61687
793: 1:Answer: message('StartNextLevel')
------------------------------------------
794: 1:BoardData {
794: 1:  'description': ['No more Levels. You win!'],
794: 1:  'history': [],
794: 1:  'level': 16,
794: 1:  'questions': []
794: 1:}
794: 1:Scores: 61687
794: 1:Answer: message('StartNextLevel')
------------------------------------------
795: 1:BoardData {
795: 1:  'description': ['No more Levels. You win!'],
795: 1:  'history': [],
795: 1:  'level': 16,
795: 1:  'questions': []
795: 1:}
795: 1:Scores: 61687
795: 1:Answer: message('StartNextLevel')
------------------------------------------
796: 1:BoardData {
796: 1:  'description': ['No more Levels. You win!'],
796: 1:  'history': [],
796: 1:  'level': 16,
796: 1:  'questions': []
796: 1:}
796: 1:Scores: 61687
796: 1:Answer: message('StartNextLevel')
------------------------------------------
797: 1:BoardData {
797: 1:  'description': ['No more Levels. You win!'],
797: 1:  'history': [],
797: 1:  'level': 16,
797: 1:  'questions': []
797: 1:}
797: 1:Scores: 61687
797: 1:Answer: message('StartNextLevel')
------------------------------------------
798: 1:BoardData {
798: 1:  'description': ['No more Levels. You win!'],
798: 1:  'history': [],
798: 1:  'level': 16,
798: 1:  'questions': []
798: 1:}
798: 1:Scores: 61687
798: 1:Answer: message('StartNextLevel')
------------------------------------------
799: 1:BoardData {
799: 1:  'description': ['No more Levels. You win!'],
799: 1:  'history': [],
799: 1:  'level': 16,
799: 1:  'questions': []
799: 1:}
799: 1:Scores: 61687
799: 1:Answer: message('StartNextLevel')
------------------------------------------
800: 1:BoardData {
800: 1:  'description': ['No more Levels. You win!'],
800: 1:  'history': [],
800: 1:  'level': 16,
800: 1:  'questions': []
800: 1:}
800: 1:Scores: 61687
800: 1:Answer: message('StartNextLevel')
------------------------------------------
801: 1:BoardData {
801: 1:  'description': ['No more Levels. You win!'],
801: 1:  'history': [],
801: 1:  'level': 16,
801: 1:  'questions': []
801: 1:}
801: 1:Scores: 61687
801: 1:Answer: message('StartNextLevel')
------------------------------------------
802: 1:BoardData {
802: 1:  'description': ['No more Levels. You win!'],
802: 1:  'history': [],
802: 1:  'level': 16,
802: 1:  'questions': []
802: 1:}
802: 1:Scores: 61687
802: 1:Answer: message('StartNextLevel')
------------------------------------------
803: 1:BoardData {
803: 1:  'description': ['No more Levels. You win!'],
803: 1:  'history': [],
803: 1:  'level': 16,
803: 1:  'questions': []
803: 1:}
803: 1:Scores: 61687
803: 1:Answer: message('StartNextLevel')
------------------------------------------
804: 1:BoardData {
804: 1:  'description': ['No more Levels. You win!'],
804: 1:  'history': [],
804: 1:  'level': 16,
804: 1:  'questions': []
804: 1:}
804: 1:Scores: 61687
804: 1:Answer: message('StartNextLevel')
------------------------------------------
805: 1:BoardData {
805: 1:  'description': ['No more Levels. You win!'],
805: 1:  'history': [],
805: 1:  'level': 16,
805: 1:  'questions': []
805: 1:}
805: 1:Scores: 61687
805: 1:Answer: message('StartNextLevel')
------------------------------------------
806: 1:BoardData {
806: 1:  'description': ['No more Levels. You win!'],
806: 1:  'history': [],
806: 1:  'level': 16,
806: 1:  'questions': []
806: 1:}
806: 1:Scores: 61687
806: 1:Answer: message('StartNextLevel')
------------------------------------------
807: 1:BoardData {
807: 1:  'description': ['No more Levels. You win!'],
807: 1:  'history': [],
807: 1:  'level': 16,
807: 1:  'questions': []
807: 1:}
807: 1:Scores: 61687
807: 1:Answer: message('StartNextLevel')
------------------------------------------
808: 1:BoardData {
808: 1:  'description': ['No more Levels. You win!'],
808: 1:  'history': [],
808: 1:  'level': 16,
808: 1:  'questions': []
808: 1:}
808: 1:Scores: 61687
808: 1:Answer: message('StartNextLevel')
------------------------------------------
809: 1:BoardData {
809: 1:  'description': ['No more Levels. You win!'],
809: 1:  'history': [],
809: 1:  'level': 16,
809: 1:  'questions': []
809: 1:}
809: 1:Scores: 61687
809: 1:Answer: message('StartNextLevel')
------------------------------------------
810: 1:BoardData {
810: 1:  'description': ['No more Levels. You win!'],
810: 1:  'history': [],
810: 1:  'level': 16,
810: 1:  'questions': []
810: 1:}
810: 1:Scores: 61687
810: 1:Answer: message('StartNextLevel')
------------------------------------------
811: 1:BoardData {
811: 1:  'description': ['No more Levels. You win!'],
811: 1:  'history': [],
811: 1:  'level': 16,
811: 1:  'questions': []
811: 1:}
811: 1:Scores: 61687
811: 1:Answer: message('StartNextLevel')
------------------------------------------
812: 1:BoardData {
812: 1:  'description': ['No more Levels. You win!'],
812: 1:  'history': [],
812: 1:  'level': 16,
812: 1:  'questions': []
812: 1:}
812: 1:Scores: 61687
812: 1:Answer: message('StartNextLevel')
------------------------------------------
813: 1:BoardData {
813: 1:  'description': ['No more Levels. You win!'],
813: 1:  'history': [],
813: 1:  'level': 16,
813: 1:  'questions': []
813: 1:}
813: 1:Scores: 61687
813: 1:Answer: message('StartNextLevel')
------------------------------------------
814: 1:BoardData {
814: 1:  'description': ['No more Levels. You win!'],
814: 1:  'history': [],
814: 1:  'level': 16,
814: 1:  'questions': []
814: 1:}
814: 1:Scores: 61687
814: 1:Answer: message('StartNextLevel')
------------------------------------------
815: 1:BoardData {
815: 1:  'description': ['No more Levels. You win!'],
815: 1:  'history': [],
815: 1:  'level': 16,
815: 1:  'questions': []
815: 1:}
815: 1:Scores: 61687
815: 1:Answer: message('StartNextLevel')
------------------------------------------
816: 1:BoardData {
816: 1:  'description': ['No more Levels. You win!'],
816: 1:  'history': [],
816: 1:  'level': 16,
816: 1:  'questions': []
816: 1:}
816: 1:Scores: 61687
816: 1:Answer: message('StartNextLevel')
------------------------------------------
817: 1:BoardData {
817: 1:  'description': ['No more Levels. You win!'],
817: 1:  'history': [],
817: 1:  'level': 16,
817: 1:  'questions': []
817: 1:}
817: 1:Scores: 61687
817: 1:Answer: message('StartNextLevel')
------------------------------------------
818: 1:BoardData {
818: 1:  'description': ['No more Levels. You win!'],
818: 1:  'history': [],
818: 1:  'level': 16,
818: 1:  'questions': []
818: 1:}
818: 1:Scores: 61687
818: 1:Answer: message('StartNextLevel')
------------------------------------------
819: 1:BoardData {
819: 1:  'description': ['No more Levels. You win!'],
819: 1:  'history': [],
819: 1:  'level': 16,
819: 1:  'questions': []
819: 1:}
819: 1:Scores: 61687
819: 1:Answer: message('StartNextLevel')
------------------------------------------
820: 1:BoardData {
820: 1:  'description': ['No more Levels. You win!'],
820: 1:  'history': [],
820: 1:  'level': 16,
820: 1:  'questions': []
820: 1:}
820: 1:Scores: 61687
820: 1:Answer: message('StartNextLevel')
------------------------------------------
821: 1:BoardData {
821: 1:  'description': ['No more Levels. You win!'],
821: 1:  'history': [],
821: 1:  'level': 16,
821: 1:  'questions': []
821: 1:}
821: 1:Scores: 61687
821: 1:Answer: message('StartNextLevel')
------------------------------------------
822: 1:BoardData {
822: 1:  'description': ['No more Levels. You win!'],
822: 1:  'history': [],
822: 1:  'level': 16,
822: 1:  'questions': []
822: 1:}
822: 1:Scores: 61687
822: 1:Answer: message('StartNextLevel')
------------------------------------------
823: 1:BoardData {
823: 1:  'description': ['No more Levels. You win!'],
823: 1:  'history': [],
823: 1:  'level': 16,
823: 1:  'questions': []
823: 1:}
823: 1:Scores: 61687
823: 1:Answer: message('StartNextLevel')
------------------------------------------
824: 1:BoardData {
824: 1:  'description': ['No more Levels. You win!'],
824: 1:  'history': [],
824: 1:  'level': 16,
824: 1:  'questions': []
824: 1:}
824: 1:Scores: 61687
824: 1:Answer: message('StartNextLevel')
------------------------------------------
825: 1:BoardData {
825: 1:  'description': ['No more Levels. You win!'],
825: 1:  'history': [],
825: 1:  'level': 16,
825: 1:  'questions': []
825: 1:}
825: 1:Scores: 61687
825: 1:Answer: message('StartNextLevel')
------------------------------------------
826: 1:BoardData {
826: 1:  'description': ['No more Levels. You win!'],
826: 1:  'history': [],
826: 1:  'level': 16,
826: 1:  'questions': []
826: 1:}
826: 1:Scores: 61687
826: 1:Answer: message('StartNextLevel')
------------------------------------------
827: 1:BoardData {
827: 1:  'description': ['No more Levels. You win!'],
827: 1:  'history': [],
827: 1:  'level': 16,
827: 1:  'questions': []
827: 1:}
827: 1:Scores: 61687
827: 1:Answer: message('StartNextLevel')
------------------------------------------
828: 1:BoardData {
828: 1:  'description': ['No more Levels. You win!'],
828: 1:  'history': [],
828: 1:  'level': 16,
828: 1:  'questions': []
828: 1:}
828: 1:Scores: 61687
828: 1:Answer: message('StartNextLevel')
------------------------------------------
829: 1:BoardData {
829: 1:  'description': ['No more Levels. You win!'],
829: 1:  'history': [],
829: 1:  'level': 16,
829: 1:  'questions': []
829: 1:}
829: 1:Scores: 61687
829: 1:Answer: message('StartNextLevel')
------------------------------------------
830: 1:BoardData {
830: 1:  'description': ['No more Levels. You win!'],
830: 1:  'history': [],
830: 1:  'level': 16,
830: 1:  'questions': []
830: 1:}
830: 1:Scores: 61687
830: 1:Answer: message('StartNextLevel')
------------------------------------------
831: 1:BoardData {
831: 1:  'description': ['No more Levels. You win!'],
831: 1:  'history': [],
831: 1:  'level': 16,
831: 1:  'questions': []
831: 1:}
831: 1:Scores: 61687
831: 1:Answer: message('StartNextLevel')
------------------------------------------
832: 1:BoardData {
832: 1:  'description': ['No more Levels. You win!'],
832: 1:  'history': [],
832: 1:  'level': 16,
832: 1:  'questions': []
832: 1:}
832: 1:Scores: 61687
832: 1:Answer: message('StartNextLevel')
------------------------------------------
833: 1:BoardData {
833: 1:  'description': ['No more Levels. You win!'],
833: 1:  'history': [],
833: 1:  'level': 16,
833: 1:  'questions': []
833: 1:}
833: 1:Scores: 61687
833: 1:Answer: message('StartNextLevel')
------------------------------------------
834: 1:BoardData {
834: 1:  'description': ['No more Levels. You win!'],
834: 1:  'history': [],
834: 1:  'level': 16,
834: 1:  'questions': []
834: 1:}
834: 1:Scores: 61687
834: 1:Answer: message('StartNextLevel')
------------------------------------------
835: 1:BoardData {
835: 1:  'description': ['No more Levels. You win!'],
835: 1:  'history': [],
835: 1:  'level': 16,
835: 1:  'questions': []
835: 1:}
835: 1:Scores: 61687
835: 1:Answer: message('StartNextLevel')
------------------------------------------
836: 1:BoardData {
836: 1:  'description': ['No more Levels. You win!'],
836: 1:  'history': [],
836: 1:  'level': 16,
836: 1:  'questions': []
836: 1:}
836: 1:Scores: 61687
836: 1:Answer: message('StartNextLevel')
------------------------------------------
837: 1:BoardData {
837: 1:  'description': ['No more Levels. You win!'],
837: 1:  'history': [],
837: 1:  'level': 16,
837: 1:  'questions': []
837: 1:}
837: 1:Scores: 61687
837: 1:Answer: message('StartNextLevel')
------------------------------------------
838: 1:BoardData {
838: 1:  'description': ['No more Levels. You win!'],
838: 1:  'history': [],
838: 1:  'level': 16,
838: 1:  'questions': []
838: 1:}
838: 1:Scores: 61687
838: 1:Answer: message('StartNextLevel')
------------------------------------------
839: 1:BoardData {
839: 1:  'description': ['No more Levels. You win!'],
839: 1:  'history': [],
839: 1:  'level': 16,
839: 1:  'questions': []
839: 1:}
839: 1:Scores: 61687
839: 1:Answer: message('StartNextLevel')
------------------------------------------
840: 1:BoardData {
840: 1:  'description': ['No more Levels. You win!'],
840: 1:  'history': [],
840: 1:  'level': 16,
840: 1:  'questions': []
840: 1:}
840: 1:Scores: 61687
840: 1:Answer: message('StartNextLevel')
------------------------------------------
841: 1:BoardData {
841: 1:  'description': ['No more Levels. You win!'],
841: 1:  'history': [],
841: 1:  'level': 16,
841: 1:  'questions': []
841: 1:}
841: 1:Scores: 61687
841: 1:Answer: message('StartNextLevel')
------------------------------------------
842: 1:BoardData {
842: 1:  'description': ['No more Levels. You win!'],
842: 1:  'history': [],
842: 1:  'level': 16,
842: 1:  'questions': []
842: 1:}
842: 1:Scores: 61687
842: 1:Answer: message('StartNextLevel')
------------------------------------------
843: 1:BoardData {
843: 1:  'description': ['No more Levels. You win!'],
843: 1:  'history': [],
843: 1:  'level': 16,
843: 1:  'questions': []
843: 1:}
843: 1:Scores: 61687
843: 1:Answer: message('StartNextLevel')
------------------------------------------
844: 1:BoardData {
844: 1:  'description': ['No more Levels. You win!'],
844: 1:  'history': [],
844: 1:  'level': 16,
844: 1:  'questions': []
844: 1:}
844: 1:Scores: 61687
844: 1:Answer: message('StartNextLevel')
------------------------------------------
845: 1:BoardData {
845: 1:  'description': ['No more Levels. You win!'],
845: 1:  'history': [],
845: 1:  'level': 16,
845: 1:  'questions': []
845: 1:}
845: 1:Scores: 61687
845: 1:Answer: message('StartNextLevel')
------------------------------------------
846: 1:BoardData {
846: 1:  'description': ['No more Levels. You win!'],
846: 1:  'history': [],
846: 1:  'level': 16,
846: 1:  'questions': []
846: 1:}
846: 1:Scores: 61687
846: 1:Answer: message('StartNextLevel')
------------------------------------------
847: 1:BoardData {
847: 1:  'description': ['No more Levels. You win!'],
847: 1:  'history': [],
847: 1:  'level': 16,
847: 1:  'questions': []
847: 1:}
847: 1:Scores: 61687
847: 1:Answer: message('StartNextLevel')
------------------------------------------
848: 1:BoardData {
848: 1:  'description': ['No more Levels. You win!'],
848: 1:  'history': [],
848: 1:  'level': 16,
848: 1:  'questions': []
848: 1:}
848: 1:Scores: 61687
848: 1:Answer: message('StartNextLevel')
------------------------------------------
849: 1:BoardData {
849: 1:  'description': ['No more Levels. You win!'],
849: 1:  'history': [],
849: 1:  'level': 16,
849: 1:  'questions': []
849: 1:}
849: 1:Scores: 61687
849: 1:Answer: message('StartNextLevel')
------------------------------------------
850: 1:BoardData {
850: 1:  'description': ['No more Levels. You win!'],
850: 1:  'history': [],
850: 1:  'level': 16,
850: 1:  'questions': []
850: 1:}
850: 1:Scores: 61687
850: 1:Answer: message('StartNextLevel')
------------------------------------------
851: 1:BoardData {
851: 1:  'description': ['No more Levels. You win!'],
851: 1:  'history': [],
851: 1:  'level': 16,
851: 1:  'questions': []
851: 1:}
851: 1:Scores: 61687
851: 1:Answer: message('StartNextLevel')
------------------------------------------
852: 1:BoardData {
852: 1:  'description': ['No more Levels. You win!'],
852: 1:  'history': [],
852: 1:  'level': 16,
852: 1:  'questions': []
852: 1:}
852: 1:Scores: 61687
852: 1:Answer: message('StartNextLevel')
------------------------------------------
853: 1:BoardData {
853: 1:  'description': ['No more Levels. You win!'],
853: 1:  'history': [],
853: 1:  'level': 16,
853: 1:  'questions': []
853: 1:}
853: 1:Scores: 61687
853: 1:Answer: message('StartNextLevel')
------------------------------------------
854: 1:BoardData {
854: 1:  'description': ['No more Levels. You win!'],
854: 1:  'history': [],
854: 1:  'level': 16,
854: 1:  'questions': []
854: 1:}
854: 1:Scores: 61687
854: 1:Answer: message('StartNextLevel')
------------------------------------------
855: 1:BoardData {
855: 1:  'description': ['No more Levels. You win!'],
855: 1:  'history': [],
855: 1:  'level': 16,
855: 1:  'questions': []
855: 1:}
855: 1:Scores: 61687
855: 1:Answer: message('StartNextLevel')
------------------------------------------
856: 1:BoardData {
856: 1:  'description': ['No more Levels. You win!'],
856: 1:  'history': [],
856: 1:  'level': 16,
856: 1:  'questions': []
856: 1:}
856: 1:Scores: 61687
856: 1:Answer: message('StartNextLevel')
------------------------------------------
857: 1:BoardData {
857: 1:  'description': ['No more Levels. You win!'],
857: 1:  'history': [],
857: 1:  'level': 16,
857: 1:  'questions': []
857: 1:}
857: 1:Scores: 61687
857: 1:Answer: message('StartNextLevel')
------------------------------------------
858: 1:BoardData {
858: 1:  'description': ['No more Levels. You win!'],
858: 1:  'history': [],
858: 1:  'level': 16,
858: 1:  'questions': []
858: 1:}
858: 1:Scores: 61687
858: 1:Answer: message('StartNextLevel')
------------------------------------------
859: 1:BoardData {
859: 1:  'description': ['No more Levels. You win!'],
859: 1:  'history': [],
859: 1:  'level': 16,
859: 1:  'questions': []
859: 1:}
859: 1:Scores: 61687
859: 1:Answer: message('StartNextLevel')
------------------------------------------
860: 1:BoardData {
860: 1:  'description': ['No more Levels. You win!'],
860: 1:  'history': [],
860: 1:  'level': 16,
860: 1:  'questions': []
860: 1:}
860: 1:Scores: 61687
860: 1:Answer: message('StartNextLevel')
------------------------------------------
861: 1:BoardData {
861: 1:  'description': ['No more Levels. You win!'],
861: 1:  'history': [],
861: 1:  'level': 16,
861: 1:  'questions': []
861: 1:}
861: 1:Scores: 61687
861: 1:Answer: message('StartNextLevel')
------------------------------------------
862: 1:BoardData {
862: 1:  'description': ['No more Levels. You win!'],
862: 1:  'history': [],
862: 1:  'level': 16,
862: 1:  'questions': []
862: 1:}
862: 1:Scores: 61687
862: 1:Answer: message('StartNextLevel')
------------------------------------------
863: 1:BoardData {
863: 1:  'description': ['No more Levels. You win!'],
863: 1:  'history': [],
863: 1:  'level': 16,
863: 1:  'questions': []
863: 1:}
863: 1:Scores: 61687
863: 1:Answer: message('StartNextLevel')
------------------------------------------
864: 1:BoardData {
864: 1:  'description': ['No more Levels. You win!'],
864: 1:  'history': [],
864: 1:  'level': 16,
864: 1:  'questions': []
864: 1:}
864: 1:Scores: 61687
864: 1:Answer: message('StartNextLevel')
------------------------------------------
865: 1:BoardData {
865: 1:  'description': ['No more Levels. You win!'],
865: 1:  'history': [],
865: 1:  'level': 16,
865: 1:  'questions': []
865: 1:}
865: 1:Scores: 61687
865: 1:Answer: message('StartNextLevel')
------------------------------------------
866: 1:BoardData {
866: 1:  'description': ['No more Levels. You win!'],
866: 1:  'history': [],
866: 1:  'level': 16,
866: 1:  'questions': []
866: 1:}
866: 1:Scores: 61687
866: 1:Answer: message('StartNextLevel')
------------------------------------------
867: 1:BoardData {
867: 1:  'description': ['No more Levels. You win!'],
867: 1:  'history': [],
867: 1:  'level': 16,
867: 1:  'questions': []
867: 1:}
867: 1:Scores: 61687
867: 1:Answer: message('StartNextLevel')
------------------------------------------
868: 1:BoardData {
868: 1:  'description': ['No more Levels. You win!'],
868: 1:  'history': [],
868: 1:  'level': 16,
868: 1:  'questions': []
868: 1:}
868: 1:Scores: 61687
868: 1:Answer: message('StartNextLevel')
------------------------------------------
869: 1:BoardData {
869: 1:  'description': ['No more Levels. You win!'],
869: 1:  'history': [],
869: 1:  'level': 16,
869: 1:  'questions': []
869: 1:}
869: 1:Scores: 61687
869: 1:Answer: message('StartNextLevel')
------------------------------------------
870: 1:BoardData {
870: 1:  'description': ['No more Levels. You win!'],
870: 1:  'history': [],
870: 1:  'level': 16,
870: 1:  'questions': []
870: 1:}
870: 1:Scores: 61687
870: 1:Answer: message('StartNextLevel')
------------------------------------------
871: 1:BoardData {
871: 1:  'description': ['No more Levels. You win!'],
871: 1:  'history': [],
871: 1:  'level': 16,
871: 1:  'questions': []
871: 1:}
871: 1:Scores: 61687
871: 1:Answer: message('StartNextLevel')
------------------------------------------
872: 1:BoardData {
872: 1:  'description': ['No more Levels. You win!'],
872: 1:  'history': [],
872: 1:  'level': 16,
872: 1:  'questions': []
872: 1:}
872: 1:Scores: 61687
872: 1:Answer: message('StartNextLevel')
------------------------------------------
873: 1:BoardData {
873: 1:  'description': ['No more Levels. You win!'],
873: 1:  'history': [],
873: 1:  'level': 16,
873: 1:  'questions': []
873: 1:}
873: 1:Scores: 61687
873: 1:Answer: message('StartNextLevel')
------------------------------------------
874: 1:BoardData {
874: 1:  'description': ['No more Levels. You win!'],
874: 1:  'history': [],
874: 1:  'level': 16,
874: 1:  'questions': []
874: 1:}
874: 1:Scores: 61687
874: 1:Answer: message('StartNextLevel')
------------------------------------------
875: 1:BoardData {
875: 1:  'description': ['No more Levels. You win!'],
875: 1:  'history': [],
875: 1:  'level': 16,
875: 1:  'questions': []
875: 1:}
875: 1:Scores: 61687
875: 1:Answer: message('StartNextLevel')
------------------------------------------
876: 1:BoardData {
876: 1:  'description': ['No more Levels. You win!'],
876: 1:  'history': [],
876: 1:  'level': 16,
876: 1:  'questions': []
876: 1:}
876: 1:Scores: 61687
876: 1:Answer: message('StartNextLevel')
------------------------------------------
877: 1:BoardData {
877: 1:  'description': ['No more Levels. You win!'],
877: 1:  'history': [],
877: 1:  'level': 16,
877: 1:  'questions': []
877: 1:}
877: 1:Scores: 61687
877: 1:Answer: message('StartNextLevel')
------------------------------------------
878: 1:BoardData {
878: 1:  'description': ['No more Levels. You win!'],
878: 1:  'history': [],
878: 1:  'level': 16,
878: 1:  'questions': []
878: 1:}
878: 1:Scores: 61687
878: 1:Answer: message('StartNextLevel')
------------------------------------------
879: 1:BoardData {
879: 1:  'description': ['No more Levels. You win!'],
879: 1:  'history': [],
879: 1:  'level': 16,
879: 1:  'questions': []
879: 1:}
879: 1:Scores: 61687
879: 1:Answer: message('StartNextLevel')
------------------------------------------
880: 1:BoardData {
880: 1:  'description': ['No more Levels. You win!'],
880: 1:  'history': [],
880: 1:  'level': 16,
880: 1:  'questions': []
880: 1:}
880: 1:Scores: 61687
880: 1:Answer: message('StartNextLevel')
------------------------------------------
881: 1:BoardData {
881: 1:  'description': ['No more Levels. You win!'],
881: 1:  'history': [],
881: 1:  'level': 16,
881: 1:  'questions': []
881: 1:}
881: 1:Scores: 61687
881: 1:Answer: message('StartNextLevel')
------------------------------------------
882: 1:BoardData {
882: 1:  'description': ['No more Levels. You win!'],
882: 1:  'history': [],
882: 1:  'level': 16,
882: 1:  'questions': []
882: 1:}
882: 1:Scores: 61687
882: 1:Answer: message('StartNextLevel')
------------------------------------------
883: 1:BoardData {
883: 1:  'description': ['No more Levels. You win!'],
883: 1:  'history': [],
883: 1:  'level': 16,
883: 1:  'questions': []
883: 1:}
883: 1:Scores: 61687
883: 1:Answer: message('StartNextLevel')
------------------------------------------
884: 1:BoardData {
884: 1:  'description': ['No more Levels. You win!'],
884: 1:  'history': [],
884: 1:  'level': 16,
884: 1:  'questions': []
884: 1:}
884: 1:Scores: 61687
884: 1:Answer: message('StartNextLevel')
------------------------------------------
885: 1:BoardData {
885: 1:  'description': ['No more Levels. You win!'],
885: 1:  'history': [],
885: 1:  'level': 16,
885: 1:  'questions': []
885: 1:}
885: 1:Scores: 61687
885: 1:Answer: message('StartNextLevel')
------------------------------------------
886: 1:BoardData {
886: 1:  'description': ['No more Levels. You win!'],
886: 1:  'history': [],
886: 1:  'level': 16,
886: 1:  'questions': []
886: 1:}
886: 1:Scores: 61687
886: 1:Answer: message('StartNextLevel')
------------------------------------------
887: 1:BoardData {
887: 1:  'description': ['No more Levels. You win!'],
887: 1:  'history': [],
887: 1:  'level': 16,
887: 1:  'questions': []
887: 1:}
887: 1:Scores: 61687
887: 1:Answer: message('StartNextLevel')
------------------------------------------
888: 1:BoardData {
888: 1:  'description': ['No more Levels. You win!'],
888: 1:  'history': [],
888: 1:  'level': 16,
888: 1:  'questions': []
888: 1:}
888: 1:Scores: 61687
888: 1:Answer: message('StartNextLevel')
------------------------------------------
889: 1:BoardData {
889: 1:  'description': ['No more Levels. You win!'],
889: 1:  'history': [],
889: 1:  'level': 16,
889: 1:  'questions': []
889: 1:}
889: 1:Scores: 61687
889: 1:Answer: message('StartNextLevel')
------------------------------------------
890: 1:BoardData {
890: 1:  'description': ['No more Levels. You win!'],
890: 1:  'history': [],
890: 1:  'level': 16,
890: 1:  'questions': []
890: 1:}
890: 1:Scores: 61687
890: 1:Answer: message('StartNextLevel')
------------------------------------------
891: 1:BoardData {
891: 1:  'description': ['No more Levels. You win!'],
891: 1:  'history': [],
891: 1:  'level': 16,
891: 1:  'questions': []
891: 1:}
891: 1:Scores: 61687
891: 1:Answer: message('StartNextLevel')
------------------------------------------
892: 1:BoardData {
892: 1:  'description': ['No more Levels. You win!'],
892: 1:  'history': [],
892: 1:  'level': 16,
892: 1:  'questions': []
892: 1:}
892: 1:Scores: 61687
892: 1:Answer: message('StartNextLevel')
------------------------------------------
893: 1:BoardData {
893: 1:  'description': ['No more Levels. You win!'],
893: 1:  'history': [],
893: 1:  'level': 16,
893: 1:  'questions': []
893: 1:}
893: 1:Scores: 61687
893: 1:Answer: message('StartNextLevel')
------------------------------------------
894: 1:BoardData {
894: 1:  'description': ['No more Levels. You win!'],
894: 1:  'history': [],
894: 1:  'level': 16,
894: 1:  'questions': []
894: 1:}
894: 1:Scores: 61687
894: 1:Answer: message('StartNextLevel')
------------------------------------------
895: 1:BoardData {
895: 1:  'description': ['No more Levels. You win!'],
895: 1:  'history': [],
895: 1:  'level': 16,
895: 1:  'questions': []
895: 1:}
895: 1:Scores: 61687
895: 1:Answer: message('StartNextLevel')
------------------------------------------
896: 1:BoardData {
896: 1:  'description': ['No more Levels. You win!'],
896: 1:  'history': [],
896: 1:  'level': 16,
896: 1:  'questions': []
896: 1:}
896: 1:Scores: 61687
896: 1:Answer: message('StartNextLevel')
------------------------------------------
897: 1:BoardData {
897: 1:  'description': ['No more Levels. You win!'],
897: 1:  'history': [],
897: 1:  'level': 16,
897: 1:  'questions': []
897: 1:}
897: 1:Scores: 61687
897: 1:Answer: message('StartNextLevel')
------------------------------------------
898: 1:BoardData {
898: 1:  'description': ['No more Levels. You win!'],
898: 1:  'history': [],
898: 1:  'level': 16,
898: 1:  'questions': []
898: 1:}
898: 1:Scores: 61687
898: 1:Answer: message('StartNextLevel')
------------------------------------------
899: 1:BoardData {
899: 1:  'description': ['No more Levels. You win!'],
899: 1:  'history': [],
899: 1:  'level': 16,
899: 1:  'questions': []
899: 1:}
899: 1:Scores: 61687
899: 1:Answer: message('StartNextLevel')
------------------------------------------
900: 1:BoardData {
900: 1:  'description': ['No more Levels. You win!'],
900: 1:  'history': [],
900: 1:  'level': 16,
900: 1:  'questions': []
900: 1:}
900: 1:Scores: 61687
900: 1:Answer: message('StartNextLevel')
------------------------------------------
901: 1:BoardData {
901: 1:  'description': ['No more Levels. You win!'],
901: 1:  'history': [],
901: 1:  'level': 16,
901: 1:  'questions': []
901: 1:}
901: 1:Scores: 61687
901: 1:Answer: message('StartNextLevel')
------------------------------------------
902: 1:BoardData {
902: 1:  'description': ['No more Levels. You win!'],
902: 1:  'history': [],
902: 1:  'level': 16,
902: 1:  'questions': []
902: 1:}
902: 1:Scores: 61687
902: 1:Answer: message('StartNextLevel')
------------------------------------------
903: 1:BoardData {
903: 1:  'description': ['No more Levels. You win!'],
903: 1:  'history': [],
903: 1:  'level': 16,
903: 1:  'questions': []
903: 1:}
903: 1:Scores: 61687
903: 1:Answer: message('StartNextLevel')
------------------------------------------
904: 1:BoardData {
904: 1:  'description': ['No more Levels. You win!'],
904: 1:  'history': [],
904: 1:  'level': 16,
904: 1:  'questions': []
904: 1:}
904: 1:Scores: 61687
904: 1:Answer: message('StartNextLevel')
------------------------------------------
905: 1:BoardData {
905: 1:  'description': ['No more Levels. You win!'],
905: 1:  'history': [],
905: 1:  'level': 16,
905: 1:  'questions': []
905: 1:}
905: 1:Scores: 61687
905: 1:Answer: message('StartNextLevel')
------------------------------------------
906: 1:BoardData {
906: 1:  'description': ['No more Levels. You win!'],
906: 1:  'history': [],
906: 1:  'level': 16,
906: 1:  'questions': []
906: 1:}
906: 1:Scores: 61687
906: 1:Answer: message('StartNextLevel')
------------------------------------------
907: 1:BoardData {
907: 1:  'description': ['No more Levels. You win!'],
907: 1:  'history': [],
907: 1:  'level': 16,
907: 1:  'questions': []
907: 1:}
907: 1:Scores: 61687
907: 1:Answer: message('StartNextLevel')
------------------------------------------
908: 1:BoardData {
908: 1:  'description': ['No more Levels. You win!'],
908: 1:  'history': [],
908: 1:  'level': 16,
908: 1:  'questions': []
908: 1:}
908: 1:Scores: 61687
908: 1:Answer: message('StartNextLevel')
------------------------------------------
909: 1:BoardData {
909: 1:  'description': ['No more Levels. You win!'],
909: 1:  'history': [],
909: 1:  'level': 16,
909: 1:  'questions': []
909: 1:}
909: 1:Scores: 61687
909: 1:Answer: message('StartNextLevel')
------------------------------------------
910: 1:BoardData {
910: 1:  'description': ['No more Levels. You win!'],
910: 1:  'history': [],
910: 1:  'level': 16,
910: 1:  'questions': []
910: 1:}
910: 1:Scores: 61687
910: 1:Answer: message('StartNextLevel')
------------------------------------------
911: 1:BoardData {
911: 1:  'description': ['No more Levels. You win!'],
911: 1:  'history': [],
911: 1:  'level': 16,
911: 1:  'questions': []
911: 1:}
911: 1:Scores: 61687
911: 1:Answer: message('StartNextLevel')
------------------------------------------
912: 1:BoardData {
912: 1:  'description': ['No more Levels. You win!'],
912: 1:  'history': [],
912: 1:  'level': 16,
912: 1:  'questions': []
912: 1:}
912: 1:Scores: 61687
912: 1:Answer: message('StartNextLevel')
------------------------------------------
913: 1:BoardData {
913: 1:  'description': ['No more Levels. You win!'],
913: 1:  'history': [],
913: 1:  'level': 16,
913: 1:  'questions': []
913: 1:}
913: 1:Scores: 61687
913: 1:Answer: message('StartNextLevel')
------------------------------------------
914: 1:BoardData {
914: 1:  'description': ['No more Levels. You win!'],
914: 1:  'history': [],
914: 1:  'level': 16,
914: 1:  'questions': []
914: 1:}
914: 1:Scores: 61687
914: 1:Answer: message('StartNextLevel')
------------------------------------------
915: 1:BoardData {
915: 1:  'description': ['No more Levels. You win!'],
915: 1:  'history': [],
915: 1:  'level': 16,
915: 1:  'questions': []
915: 1:}
915: 1:Scores: 61687
915: 1:Answer: message('StartNextLevel')
------------------------------------------
916: 1:BoardData {
916: 1:  'description': ['No more Levels. You win!'],
916: 1:  'history': [],
916: 1:  'level': 16,
916: 1:  'questions': []
916: 1:}
916: 1:Scores: 61687
916: 1:Answer: message('StartNextLevel')
------------------------------------------
917: 1:BoardData {
917: 1:  'description': ['No more Levels. You win!'],
917: 1:  'history': [],
917: 1:  'level': 16,
917: 1:  'questions': []
917: 1:}
917: 1:Scores: 61687
917: 1:Answer: message('StartNextLevel')
------------------------------------------
918: 1:BoardData {
918: 1:  'description': ['No more Levels. You win!'],
918: 1:  'history': [],
918: 1:  'level': 16,
918: 1:  'questions': []
918: 1:}
918: 1:Scores: 61687
918: 1:Answer: message('StartNextLevel')
------------------------------------------
919: 1:BoardData {
919: 1:  'description': ['No more Levels. You win!'],
919: 1:  'history': [],
919: 1:  'level': 16,
919: 1:  'questions': []
919: 1:}
919: 1:Scores: 61687
919: 1:Answer: message('StartNextLevel')
------------------------------------------
920: 1:BoardData {
920: 1:  'description': ['No more Levels. You win!'],
920: 1:  'history': [],
920: 1:  'level': 16,
920: 1:  'questions': []
920: 1:}
920: 1:Scores: 61687
920: 1:Answer: message('StartNextLevel')
------------------------------------------
921: 1:BoardData {
921: 1:  'description': ['No more Levels. You win!'],
921: 1:  'history': [],
921: 1:  'level': 16,
921: 1:  'questions': []
921: 1:}
921: 1:Scores: 61687
921: 1:Answer: message('StartNextLevel')
------------------------------------------
922: 1:BoardData {
922: 1:  'description': ['No more Levels. You win!'],
922: 1:  'history': [],
922: 1:  'level': 16,
922: 1:  'questions': []
922: 1:}
922: 1:Scores: 61687
922: 1:Answer: message('StartNextLevel')
------------------------------------------
923: 1:BoardData {
923: 1:  'description': ['No more Levels. You win!'],
923: 1:  'history': [],
923: 1:  'level': 16,
923: 1:  'questions': []
923: 1:}
923: 1:Scores: 61687
923: 1:Answer: message('StartNextLevel')
------------------------------------------
924: 1:BoardData {
924: 1:  'description': ['No more Levels. You win!'],
924: 1:  'history': [],
924: 1:  'level': 16,
924: 1:  'questions': []
924: 1:}
924: 1:Scores: 61687
924: 1:Answer: message('StartNextLevel')
------------------------------------------
925: 1:BoardData {
925: 1:  'description': ['No more Levels. You win!'],
925: 1:  'history': [],
925: 1:  'level': 16,
925: 1:  'questions': []
925: 1:}
925: 1:Scores: 61687
925: 1:Answer: message('StartNextLevel')
------------------------------------------
926: 1:BoardData {
926: 1:  'description': ['No more Levels. You win!'],
926: 1:  'history': [],
926: 1:  'level': 16,
926: 1:  'questions': []
926: 1:}
926: 1:Scores: 61687
926: 1:Answer: message('StartNextLevel')
------------------------------------------
927: 1:BoardData {
927: 1:  'description': ['No more Levels. You win!'],
927: 1:  'history': [],
927: 1:  'level': 16,
927: 1:  'questions': []
927: 1:}
927: 1:Scores: 61687
927: 1:Answer: message('StartNextLevel')
------------------------------------------
928: 1:BoardData {
928: 1:  'description': ['No more Levels. You win!'],
928: 1:  'history': [],
928: 1:  'level': 16,
928: 1:  'questions': []
928: 1:}
928: 1:Scores: 61687
928: 1:Answer: message('StartNextLevel')
------------------------------------------
929: 1:BoardData {
929: 1:  'description': ['No more Levels. You win!'],
929: 1:  'history': [],
929: 1:  'level': 16,
929: 1:  'questions': []
929: 1:}
929: 1:Scores: 61687
929: 1:Answer: message('StartNextLevel')
------------------------------------------
930: 1:BoardData {
930: 1:  'description': ['No more Levels. You win!'],
930: 1:  'history': [],
930: 1:  'level': 16,
930: 1:  'questions': []
930: 1:}
930: 1:Scores: 61687
930: 1:Answer: message('StartNextLevel')
------------------------------------------
931: 1:BoardData {
931: 1:  'description': ['No more Levels. You win!'],
931: 1:  'history': [],
931: 1:  'level': 16,
931: 1:  'questions': []
931: 1:}
931: 1:Scores: 61687
931: 1:Answer: message('StartNextLevel')
------------------------------------------
932: 1:BoardData {
932: 1:  'description': ['No more Levels. You win!'],
932: 1:  'history': [],
932: 1:  'level': 16,
932: 1:  'questions': []
932: 1:}
932: 1:Scores: 61687
932: 1:Answer: message('StartNextLevel')
------------------------------------------
933: 1:BoardData {
933: 1:  'description': ['No more Levels. You win!'],
933: 1:  'history': [],
933: 1:  'level': 16,
933: 1:  'questions': []
933: 1:}
933: 1:Scores: 61687
933: 1:Answer: message('StartNextLevel')
------------------------------------------
934: 1:BoardData {
934: 1:  'description': ['No more Levels. You win!'],
934: 1:  'history': [],
934: 1:  'level': 16,
934: 1:  'questions': []
934: 1:}
934: 1:Scores: 61687
934: 1:Answer: message('StartNextLevel')
------------------------------------------
935: 1:BoardData {
935: 1:  'description': ['No more Levels. You win!'],
935: 1:  'history': [],
935: 1:  'level': 16,
935: 1:  'questions': []
935: 1:}
935: 1:Scores: 61687
935: 1:Answer: message('StartNextLevel')
------------------------------------------
936: 1:BoardData {
936: 1:  'description': ['No more Levels. You win!'],
936: 1:  'history': [],
936: 1:  'level': 16,
936: 1:  'questions': []
936: 1:}
936: 1:Scores: 61687
936: 1:Answer: message('StartNextLevel')
------------------------------------------
937: 1:BoardData {
937: 1:  'description': ['No more Levels. You win!'],
937: 1:  'history': [],
937: 1:  'level': 16,
937: 1:  'questions': []
937: 1:}
937: 1:Scores: 61687
937: 1:Answer: message('StartNextLevel')
------------------------------------------
938: 1:BoardData {
938: 1:  'description': ['No more Levels. You win!'],
938: 1:  'history': [],
938: 1:  'level': 16,
938: 1:  'questions': []
938: 1:}
938: 1:Scores: 61687
938: 1:Answer: message('StartNextLevel')
------------------------------------------
939: 1:BoardData {
939: 1:  'description': ['No more Levels. You win!'],
939: 1:  'history': [],
939: 1:  'level': 16,
939: 1:  'questions': []
939: 1:}
939: 1:Scores: 61687
939: 1:Answer: message('StartNextLevel')
------------------------------------------
940: 1:BoardData {
940: 1:  'description': ['No more Levels. You win!'],
940: 1:  'history': [],
940: 1:  'level': 16,
940: 1:  'questions': []
940: 1:}
940: 1:Scores: 61687
940: 1:Answer: message('StartNextLevel')
------------------------------------------
941: 1:BoardData {
941: 1:  'description': ['No more Levels. You win!'],
941: 1:  'history': [],
941: 1:  'level': 16,
941: 1:  'questions': []
941: 1:}
941: 1:Scores: 61687
941: 1:Answer: message('StartNextLevel')
------------------------------------------
942: 1:BoardData {
942: 1:  'description': ['No more Levels. You win!'],
942: 1:  'history': [],
942: 1:  'level': 16,
942: 1:  'questions': []
942: 1:}
942: 1:Scores: 61687
942: 1:Answer: message('StartNextLevel')
------------------------------------------
943: 1:BoardData {
943: 1:  'description': ['No more Levels. You win!'],
943: 1:  'history': [],
943: 1:  'level': 16,
943: 1:  'questions': []
943: 1:}
943: 1:Scores: 61687
943: 1:Answer: message('StartNextLevel')
------------------------------------------
944: 1:BoardData {
944: 1:  'description': ['No more Levels. You win!'],
944: 1:  'history': [],
944: 1:  'level': 16,
944: 1:  'questions': []
944: 1:}
944: 1:Scores: 61687
944: 1:Answer: message('StartNextLevel')
------------------------------------------
945: 1:BoardData {
945: 1:  'description': ['No more Levels. You win!'],
945: 1:  'history': [],
945: 1:  'level': 16,
945: 1:  'questions': []
945: 1:}
945: 1:Scores: 61687
945: 1:Answer: message('StartNextLevel')
------------------------------------------
946: 1:BoardData {
946: 1:  'description': ['No more Levels. You win!'],
946: 1:  'history': [],
946: 1:  'level': 16,
946: 1:  'questions': []
946: 1:}
946: 1:Scores: 61687
946: 1:Answer: message('StartNextLevel')
------------------------------------------
947: 1:BoardData {
947: 1:  'description': ['No more Levels. You win!'],
947: 1:  'history': [],
947: 1:  'level': 16,
947: 1:  'questions': []
947: 1:}
947: 1:Scores: 61687
947: 1:Answer: message('StartNextLevel')
------------------------------------------
948: 1:BoardData {
948: 1:  'description': ['No more Levels. You win!'],
948: 1:  'history': [],
948: 1:  'level': 16,
948: 1:  'questions': []
948: 1:}
948: 1:Scores: 61687
948: 1:Answer: message('StartNextLevel')
------------------------------------------
949: 1:BoardData {
949: 1:  'description': ['No more Levels. You win!'],
949: 1:  'history': [],
949: 1:  'level': 16,
949: 1:  'questions': []
949: 1:}
949: 1:Scores: 61687
949: 1:Answer: message('StartNextLevel')
------------------------------------------
950: 1:BoardData {
950: 1:  'description': ['No more Levels. You win!'],
950: 1:  'history': [],
950: 1:  'level': 16,
950: 1:  'questions': []
950: 1:}
950: 1:Scores: 61687
950: 1:Answer: message('StartNextLevel')
------------------------------------------
951: 1:BoardData {
951: 1:  'description': ['No more Levels. You win!'],
951: 1:  'history': [],
951: 1:  'level': 16,
951: 1:  'questions': []
951: 1:}
951: 1:Scores: 61687
951: 1:Answer: message('StartNextLevel')
------------------------------------------
952: 1:BoardData {
952: 1:  'description': ['No more Levels. You win!'],
952: 1:  'history': [],
952: 1:  'level': 16,
952: 1:  'questions': []
952: 1:}
952: 1:Scores: 61687
952: 1:Answer: message('StartNextLevel')
------------------------------------------
953: 1:BoardData {
953: 1:  'description': ['No more Levels. You win!'],
953: 1:  'history': [],
953: 1:  'level': 16,
953: 1:  'questions': []
953: 1:}
953: 1:Scores: 61687
953: 1:Answer: message('StartNextLevel')
------------------------------------------
954: 1:BoardData {
954: 1:  'description': ['No more Levels. You win!'],
954: 1:  'history': [],
954: 1:  'level': 16,
954: 1:  'questions': []
954: 1:}
954: 1:Scores: 61687
954: 1:Answer: message('StartNextLevel')
------------------------------------------
955: 1:BoardData {
955: 1:  'description': ['No more Levels. You win!'],
955: 1:  'history': [],
955: 1:  'level': 16,
955: 1:  'questions': []
955: 1:}
955: 1:Scores: 61687
955: 1:Answer: message('StartNextLevel')
------------------------------------------
956: 1:BoardData {
956: 1:  'description': ['No more Levels. You win!'],
956: 1:  'history': [],
956: 1:  'level': 16,
956: 1:  'questions': []
956: 1:}
956: 1:Scores: 61687
956: 1:Answer: message('StartNextLevel')
------------------------------------------
957: 1:BoardData {
957: 1:  'description': ['No more Levels. You win!'],
957: 1:  'history': [],
957: 1:  'level': 16,
957: 1:  'questions': []
957: 1:}
957: 1:Scores: 61687
957: 1:Answer: message('StartNextLevel')
------------------------------------------
958: 1:BoardData {
958: 1:  'description': ['No more Levels. You win!'],
958: 1:  'history': [],
958: 1:  'level': 16,
958: 1:  'questions': []
958: 1:}
958: 1:Scores: 61687
958: 1:Answer: message('StartNextLevel')
------------------------------------------
959: 1:BoardData {
959: 1:  'description': ['No more Levels. You win!'],
959: 1:  'history': [],
959: 1:  'level': 16,
959: 1:  'questions': []
959: 1:}
959: 1:Scores: 61687
959: 1:Answer: message('StartNextLevel')
------------------------------------------
960: 1:BoardData {
960: 1:  'description': ['No more Levels. You win!'],
960: 1:  'history': [],
960: 1:  'level': 16,
960: 1:  'questions': []
960: 1:}
960: 1:Scores: 61687
960: 1:Answer: message('StartNextLevel')
------------------------------------------
961: 1:BoardData {
961: 1:  'description': ['No more Levels. You win!'],
961: 1:  'history': [],
961: 1:  'level': 16,
961: 1:  'questions': []
961: 1:}
961: 1:Scores: 61687
961: 1:Answer: message('StartNextLevel')
------------------------------------------
962: 1:BoardData {
962: 1:  'description': ['No more Levels. You win!'],
962: 1:  'history': [],
962: 1:  'level': 16,
962: 1:  'questions': []
962: 1:}
962: 1:Scores: 61687
962: 1:Answer: message('StartNextLevel')
------------------------------------------
963: 1:BoardData {
963: 1:  'description': ['No more Levels. You win!'],
963: 1:  'history': [],
963: 1:  'level': 16,
963: 1:  'questions': []
963: 1:}
963: 1:Scores: 61687
963: 1:Answer: message('StartNextLevel')
------------------------------------------
964: 1:BoardData {
964: 1:  'description': ['No more Levels. You win!'],
964: 1:  'history': [],
964: 1:  'level': 16,
964: 1:  'questions': []
964: 1:}
964: 1:Scores: 61687
964: 1:Answer: message('StartNextLevel')
------------------------------------------
965: 1:BoardData {
965: 1:  'description': ['No more Levels. You win!'],
965: 1:  'history': [],
965: 1:  'level': 16,
965: 1:  'questions': []
965: 1:}
965: 1:Scores: 61687
965: 1:Answer: message('StartNextLevel')
------------------------------------------
966: 1:BoardData {
966: 1:  'description': ['No more Levels. You win!'],
966: 1:  'history': [],
966: 1:  'level': 16,
966: 1:  'questions': []
966: 1:}
966: 1:Scores: 61687
966: 1:Answer: message('StartNextLevel')
------------------------------------------
967: 1:BoardData {
967: 1:  'description': ['No more Levels. You win!'],
967: 1:  'history': [],
967: 1:  'level': 16,
967: 1:  'questions': []
967: 1:}
967: 1:Scores: 61687
967: 1:Answer: message('StartNextLevel')
------------------------------------------
968: 1:BoardData {
968: 1:  'description': ['No more Levels. You win!'],
968: 1:  'history': [],
968: 1:  'level': 16,
968: 1:  'questions': []
968: 1:}
968: 1:Scores: 61687
968: 1:Answer: message('StartNextLevel')
------------------------------------------
969: 1:BoardData {
969: 1:  'description': ['No more Levels. You win!'],
969: 1:  'history': [],
969: 1:  'level': 16,
969: 1:  'questions': []
969: 1:}
969: 1:Scores: 61687
969: 1:Answer: message('StartNextLevel')
------------------------------------------
970: 1:BoardData {
970: 1:  'description': ['No more Levels. You win!'],
970: 1:  'history': [],
970: 1:  'level': 16,
970: 1:  'questions': []
970: 1:}
970: 1:Scores: 61687
970: 1:Answer: message('StartNextLevel')
------------------------------------------
971: 1:BoardData {
971: 1:  'description': ['No more Levels. You win!'],
971: 1:  'history': [],
971: 1:  'level': 16,
971: 1:  'questions': []
971: 1:}
971: 1:Scores: 61687
971: 1:Answer: message('StartNextLevel')
------------------------------------------
972: 1:BoardData {
972: 1:  'description': ['No more Levels. You win!'],
972: 1:  'history': [],
972: 1:  'level': 16,
972: 1:  'questions': []
972: 1:}
972: 1:Scores: 61687
972: 1:Answer: message('StartNextLevel')
------------------------------------------
973: 1:BoardData {
973: 1:  'description': ['No more Levels. You win!'],
973: 1:  'history': [],
973: 1:  'level': 16,
973: 1:  'questions': []
973: 1:}
973: 1:Scores: 61687
973: 1:Answer: message('StartNextLevel')
------------------------------------------
974: 1:BoardData {
974: 1:  'description': ['No more Levels. You win!'],
974: 1:  'history': [],
974: 1:  'level': 16,
974: 1:  'questions': []
974: 1:}
974: 1:Scores: 61687
974: 1:Answer: message('StartNextLevel')
------------------------------------------
975: 1:BoardData {
975: 1:  'description': ['No more Levels. You win!'],
975: 1:  'history': [],
975: 1:  'level': 16,
975: 1:  'questions': []
975: 1:}
975: 1:Scores: 61687
975: 1:Answer: message('StartNextLevel')
------------------------------------------
976: 1:BoardData {
976: 1:  'description': ['No more Levels. You win!'],
976: 1:  'history': [],
976: 1:  'level': 16,
976: 1:  'questions': []
976: 1:}
976: 1:Scores: 61687
976: 1:Answer: message('StartNextLevel')
------------------------------------------
977: 1:BoardData {
977: 1:  'description': ['No more Levels. You win!'],
977: 1:  'history': [],
977: 1:  'level': 16,
977: 1:  'questions': []
977: 1:}
977: 1:Scores: 61687
977: 1:Answer: message('StartNextLevel')
------------------------------------------
978: 1:BoardData {
978: 1:  'description': ['No more Levels. You win!'],
978: 1:  'history': [],
978: 1:  'level': 16,
978: 1:  'questions': []
978: 1:}
978: 1:Scores: 61687
978: 1:Answer: message('StartNextLevel')
------------------------------------------
979: 1:BoardData {
979: 1:  'description': ['No more Levels. You win!'],
979: 1:  'history': [],
979: 1:  'level': 16,
979: 1:  'questions': []
979: 1:}
979: 1:Scores: 61687
979: 1:Answer: message('StartNextLevel')
------------------------------------------
980: 1:BoardData {
980: 1:  'description': ['No more Levels. You win!'],
980: 1:  'history': [],
980: 1:  'level': 16,
980: 1:  'questions': []
980: 1:}
980: 1:Scores: 61687
980: 1:Answer: message('StartNextLevel')
------------------------------------------
981: 1:BoardData {
981: 1:  'description': ['No more Levels. You win!'],
981: 1:  'history': [],
981: 1:  'level': 16,
981: 1:  'questions': []
981: 1:}
981: 1:Scores: 61687
981: 1:Answer: message('StartNextLevel')
------------------------------------------
982: 1:BoardData {
982: 1:  'description': ['No more Levels. You win!'],
982: 1:  'history': [],
982: 1:  'level': 16,
982: 1:  'questions': []
982: 1:}
982: 1:Scores: 61687
982: 1:Answer: message('StartNextLevel')
------------------------------------------
983: 1:BoardData {
983: 1:  'description': ['No more Levels. You win!'],
983: 1:  'history': [],
983: 1:  'level': 16,
983: 1:  'questions': []
983: 1:}
983: 1:Scores: 61687
983: 1:Answer: message('StartNextLevel')
------------------------------------------
984: 1:BoardData {
984: 1:  'description': ['No more Levels. You win!'],
984: 1:  'history': [],
984: 1:  'level': 16,
984: 1:  'questions': []
984: 1:}
984: 1:Scores: 61687
984: 1:Answer: message('StartNextLevel')
------------------------------------------
985: 1:BoardData {
985: 1:  'description': ['No more Levels. You win!'],
985: 1:  'history': [],
985: 1:  'level': 16,
985: 1:  'questions': []
985: 1:}
985: 1:Scores: 61687
985: 1:Answer: message('StartNextLevel')
------------------------------------------
986: 1:BoardData {
986: 1:  'description': ['No more Levels. You win!'],
986: 1:  'history': [],
986: 1:  'level': 16,
986: 1:  'questions': []
986: 1:}
986: 1:Scores: 61687
986: 1:Answer: message('StartNextLevel')
------------------------------------------
987: 1:BoardData {
987: 1:  'description': ['No more Levels. You win!'],
987: 1:  'history': [],
987: 1:  'level': 16,
987: 1:  'questions': []
987: 1:}
987: 1:Scores: 61687
987: 1:Answer: message('StartNextLevel')
------------------------------------------
988: 1:BoardData {
988: 1:  'description': ['No more Levels. You win!'],
988: 1:  'history': [],
988: 1:  'level': 16,
988: 1:  'questions': []
988: 1:}
988: 1:Scores: 61687
988: 1:Answer: message('StartNextLevel')
------------------------------------------
989: 1:BoardData {
989: 1:  'description': ['No more Levels. You win!'],
989: 1:  'history': [],
989: 1:  'level': 16,
989: 1:  'questions': []
989: 1:}
989: 1:Scores: 61687
989: 1:Answer: message('StartNextLevel')
------------------------------------------
990: 1:BoardData {
990: 1:  'description': ['No more Levels. You win!'],
990: 1:  'history': [],
990: 1:  'level': 16,
990: 1:  'questions': []
990: 1:}
990: 1:Scores: 61687
990: 1:Answer: message('StartNextLevel')
------------------------------------------
991: 1:BoardData {
991: 1:  'description': ['No more Levels. You win!'],
991: 1:  'history': [],
991: 1:  'level': 16,
991: 1:  'questions': []
991: 1:}
991: 1:Scores: 61687
991: 1:Answer: message('StartNextLevel')
------------------------------------------
992: 1:BoardData {
992: 1:  'description': ['No more Levels. You win!'],
992: 1:  'history': [],
992: 1:  'level': 16,
992: 1:  'questions': []
992: 1:}
992: 1:Scores: 61687
992: 1:Answer: message('StartNextLevel')
------------------------------------------
993: 1:BoardData {
993: 1:  'description': ['No more Levels. You win!'],
993: 1:  'history': [],
993: 1:  'level': 16,
993: 1:  'questions': []
993: 1:}
993: 1:Scores: 61687
993: 1:Answer: message('StartNextLevel')
------------------------------------------
994: 1:BoardData {
994: 1:  'description': ['No more Levels. You win!'],
994: 1:  'history': [],
994: 1:  'level': 16,
994: 1:  'questions': []
994: 1:}
994: 1:Scores: 61687
994: 1:Answer: message('StartNextLevel')
------------------------------------------
995: 1:BoardData {
995: 1:  'description': ['No more Levels. You win!'],
995: 1:  'history': [],
995: 1:  'level': 16,
995: 1:  'questions': []
995: 1:}
995: 1:Scores: 61687
995: 1:Answer: message('StartNextLevel')
------------------------------------------
996: 1:BoardData {
996: 1:  'description': ['No more Levels. You win!'],
996: 1:  'history': [],
996: 1:  'level': 16,
996: 1:  'questions': []
996: 1:}
996: 1:Scores: 61687
996: 1:Answer: message('StartNextLevel')
------------------------------------------
997: 1:BoardData {
997: 1:  'description': ['No more Levels. You win!'],
997: 1:  'history': [],
997: 1:  'level': 16,
997: 1:  'questions': []
997: 1:}
997: 1:Scores: 61687
997: 1:Answer: message('StartNextLevel')
------------------------------------------
998: 1:BoardData {
998: 1:  'description': ['No more Levels. You win!'],
998: 1:  'history': [],
998: 1:  'level': 16,
998: 1:  'questions': []
998: 1:}
998: 1:Scores: 61687
998: 1:Answer: message('StartNextLevel')
------------------------------------------
999: 1:BoardData {
999: 1:  'description': ['No more Levels. You win!'],
999: 1:  'history': [],
999: 1:  'level': 16,
999: 1:  'questions': []
999: 1:}
999: 1:Scores: 61687
999: 1:Answer: message('StartNextLevel')
------------------------------------------
1000: 1:BoardData {
1000: 1:  'description': ['No more Levels. You win!'],
1000: 1:  'history': [],
1000: 1:  'level': 16,
1000: 1:  'questions': []
1000: 1:}
1000: 1:Scores: 61687
1000: 1:Answer: message('StartNextLevel')
------------------------------------------