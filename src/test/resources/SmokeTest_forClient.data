1: 1:BoardData {
1: 1:  'description': [
1: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
1: 1:    'Please write js method.',
1: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
1: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
1: 1:  ],
1: 1:  'expectedAnswer': 'world',
1: 1:  'history': [],
1: 1:  'info': ['❌f(hello) = ??? != world'],
1: 1:  'level': 0,
1: 1:  'nextQuestion': 'hello',
1: 1:  'questions': ['hello']
1: 1:}
1: 1:Scores: 0
1: 1:Answer: message('['world']')
1: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
2: 1:BoardData {
2: 1:  'description': [
2: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
2: 1:    'Please write js method.',
2: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
2: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
2: 1:  ],
2: 1:  'expectedAnswer': 'hello',
2: 1:  'history': [{
2: 1:    'answer': 'world',
2: 1:    'question': 'hello',
2: 1:    'valid': true
2: 1:  }],
2: 1:  'info': [
2: 1:    '✅f(hello) = world',
2: 1:    '❌f(world) = ??? != hello'
2: 1:  ],
2: 1:  'level': 0,
2: 1:  'nextQuestion': 'world',
2: 1:  'questions': [
2: 1:    'hello',
2: 1:    'world'
2: 1:  ]
2: 1:}
2: 1:Scores: 1
2: 1:Answer: message('['world', 'hello']')
2: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
3: 1:BoardData {
3: 1:  'description': [
3: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
3: 1:    'Please write js method.',
3: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
3: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
3: 1:  ],
3: 1:  'expectedAnswer': 'qwe',
3: 1:  'history': [
3: 1:    {
3: 1:      'answer': 'world',
3: 1:      'question': 'hello',
3: 1:      'valid': true
3: 1:    },
3: 1:    {
3: 1:      'answer': 'hello',
3: 1:      'question': 'world',
3: 1:      'valid': true
3: 1:    }
3: 1:  ],
3: 1:  'info': [
3: 1:    '✅f(hello) = world',
3: 1:    '✅f(world) = hello',
3: 1:    '❌f(qwe) = ??? != qwe'
3: 1:  ],
3: 1:  'level': 0,
3: 1:  'nextQuestion': 'qwe',
3: 1:  'questions': [
3: 1:    'hello',
3: 1:    'world',
3: 1:    'qwe'
3: 1:  ]
3: 1:}
3: 1:Scores: 2
3: 1:Answer: message('['world', 'hello', 'qwe']')
3: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
4: 1:BoardData {
4: 1:  'description': [
4: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
4: 1:    'Please write js method.',
4: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
4: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
4: 1:  ],
4: 1:  'expectedAnswer': 'asd',
4: 1:  'history': [
4: 1:    {
4: 1:      'answer': 'world',
4: 1:      'question': 'hello',
4: 1:      'valid': true
4: 1:    },
4: 1:    {
4: 1:      'answer': 'hello',
4: 1:      'question': 'world',
4: 1:      'valid': true
4: 1:    },
4: 1:    {
4: 1:      'answer': 'qwe',
4: 1:      'question': 'qwe',
4: 1:      'valid': true
4: 1:    }
4: 1:  ],
4: 1:  'info': [
4: 1:    '✅f(hello) = world',
4: 1:    '✅f(world) = hello',
4: 1:    '✅f(qwe) = qwe',
4: 1:    '❌f(asd) = ??? != asd'
4: 1:  ],
4: 1:  'level': 0,
4: 1:  'nextQuestion': 'asd',
4: 1:  'questions': [
4: 1:    'hello',
4: 1:    'world',
4: 1:    'qwe',
4: 1:    'asd'
4: 1:  ]
4: 1:}
4: 1:Scores: 3
4: 1:Answer: message('['world', 'hello', 'qwe', 'asd']')
4: 1:Fire Event: PassTest{complexity=0, testCount=5}
------------------------------------------
5: 1:BoardData {
5: 1:  'description': [
5: 1:    'Write a method that takes a single string argument and return the string 'world' if 'hello' came in.',
5: 1:    'Please write js method.',
5: 1:    'Now please improve the algorithm so that it returns'hello' if 'world' came in. Previous logic should work also',
5: 1:    'One more improvement: in other cases the algorithm should return the same string that came in.'
5: 1:  ],
5: 1:  'expectedAnswer': 'zxc',
5: 1:  'history': [
5: 1:    {
5: 1:      'answer': 'world',
5: 1:      'question': 'hello',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'hello',
5: 1:      'question': 'world',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'qwe',
5: 1:      'question': 'qwe',
5: 1:      'valid': true
5: 1:    },
5: 1:    {
5: 1:      'answer': 'asd',
5: 1:      'question': 'asd',
5: 1:      'valid': true
5: 1:    }
5: 1:  ],
5: 1:  'info': [
5: 1:    '✅f(hello) = world',
5: 1:    '✅f(world) = hello',
5: 1:    '✅f(qwe) = qwe',
5: 1:    '✅f(asd) = asd',
5: 1:    '❌f(zxc) = ??? != zxc'
5: 1:  ],
5: 1:  'level': 0,
5: 1:  'nextQuestion': 'zxc',
5: 1:  'questions': [
5: 1:    'hello',
5: 1:    'world',
5: 1:    'qwe',
5: 1:    'asd',
5: 1:    'zxc'
5: 1:  ]
5: 1:}
5: 1:Scores: 4
5: 1:Answer: message('['world', 'hello', 'qwe', 'asd', 'zxc']')
5: 1:Fire Event: PassTest{complexity=0, testCount=5}
5: 1:Fire Event: NextAlgorithm{complexity=0, time=0}
------------------------------------------
6: 1:BoardData {
6: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
6: 1:  'history': [
6: 1:    {
6: 1:      'answer': 'world',
6: 1:      'question': 'hello',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'hello',
6: 1:      'question': 'world',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'qwe',
6: 1:      'question': 'qwe',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'asd',
6: 1:      'question': 'asd',
6: 1:      'valid': true
6: 1:    },
6: 1:    {
6: 1:      'answer': 'zxc',
6: 1:      'question': 'zxc',
6: 1:      'valid': true
6: 1:    }
6: 1:  ],
6: 1:  'info': [
6: 1:    '✅f(hello) = world',
6: 1:    '✅f(world) = hello',
6: 1:    '✅f(qwe) = qwe',
6: 1:    '✅f(asd) = asd',
6: 1:    '✅f(zxc) = zxc'
6: 1:  ],
6: 1:  'level': 0,
6: 1:  'questions': []
6: 1:}
6: 1:Scores: 5
6: 1:Answer: message('StartNextLevel')
6: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
7: 1:BoardData {
7: 1:  'description': [
7: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
7: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
7: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
7: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
7: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
7: 1:    'Please write optimized code without any duplication.',
7: 1:    'For divider 11 - the word must be 'Duzz'.',
7: 1:    'For divider 13 - the word must be 'Cazz'.'
7: 1:  ],
7: 1:  'expectedAnswer': '1',
7: 1:  'history': [],
7: 1:  'info': ['❌f(1) = ??? != 1'],
7: 1:  'level': 1,
7: 1:  'nextQuestion': '1',
7: 1:  'questions': ['1']
7: 1:}
7: 1:Scores: 5
7: 1:Answer: message('['1']')
7: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
8: 1:BoardData {
8: 1:  'description': [
8: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
8: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
8: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
8: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
8: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
8: 1:    'Please write optimized code without any duplication.',
8: 1:    'For divider 11 - the word must be 'Duzz'.',
8: 1:    'For divider 13 - the word must be 'Cazz'.'
8: 1:  ],
8: 1:  'expectedAnswer': '2',
8: 1:  'history': [{
8: 1:    'answer': '1',
8: 1:    'question': '1',
8: 1:    'valid': true
8: 1:  }],
8: 1:  'info': [
8: 1:    '✅f(1) = 1',
8: 1:    '❌f(2) = ??? != 2'
8: 1:  ],
8: 1:  'level': 1,
8: 1:  'nextQuestion': '2',
8: 1:  'questions': [
8: 1:    '1',
8: 1:    '2'
8: 1:  ]
8: 1:}
8: 1:Scores: 6
8: 1:Answer: message('['1', '2']')
8: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
9: 1:BoardData {
9: 1:  'description': [
9: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
9: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
9: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
9: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
9: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
9: 1:    'Please write optimized code without any duplication.',
9: 1:    'For divider 11 - the word must be 'Duzz'.',
9: 1:    'For divider 13 - the word must be 'Cazz'.'
9: 1:  ],
9: 1:  'expectedAnswer': 'Fizz',
9: 1:  'history': [
9: 1:    {
9: 1:      'answer': '1',
9: 1:      'question': '1',
9: 1:      'valid': true
9: 1:    },
9: 1:    {
9: 1:      'answer': '2',
9: 1:      'question': '2',
9: 1:      'valid': true
9: 1:    }
9: 1:  ],
9: 1:  'info': [
9: 1:    '✅f(1) = 1',
9: 1:    '✅f(2) = 2',
9: 1:    '❌f(3) = ??? != Fizz'
9: 1:  ],
9: 1:  'level': 1,
9: 1:  'nextQuestion': '3',
9: 1:  'questions': [
9: 1:    '1',
9: 1:    '2',
9: 1:    '3'
9: 1:  ]
9: 1:}
9: 1:Scores: 7
9: 1:Answer: message('['1', '2', 'Fizz']')
9: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
10: 1:BoardData {
10: 1:  'description': [
10: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
10: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
10: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
10: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
10: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
10: 1:    'Please write optimized code without any duplication.',
10: 1:    'For divider 11 - the word must be 'Duzz'.',
10: 1:    'For divider 13 - the word must be 'Cazz'.'
10: 1:  ],
10: 1:  'expectedAnswer': '4',
10: 1:  'history': [
10: 1:    {
10: 1:      'answer': '1',
10: 1:      'question': '1',
10: 1:      'valid': true
10: 1:    },
10: 1:    {
10: 1:      'answer': '2',
10: 1:      'question': '2',
10: 1:      'valid': true
10: 1:    },
10: 1:    {
10: 1:      'answer': 'Fizz',
10: 1:      'question': '3',
10: 1:      'valid': true
10: 1:    }
10: 1:  ],
10: 1:  'info': [
10: 1:    '✅f(1) = 1',
10: 1:    '✅f(2) = 2',
10: 1:    '✅f(3) = Fizz',
10: 1:    '❌f(4) = ??? != 4'
10: 1:  ],
10: 1:  'level': 1,
10: 1:  'nextQuestion': '4',
10: 1:  'questions': [
10: 1:    '1',
10: 1:    '2',
10: 1:    '3',
10: 1:    '4'
10: 1:  ]
10: 1:}
10: 1:Scores: 8
10: 1:Answer: message('['1', '2', 'Fizz', '4']')
10: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
11: 1:BoardData {
11: 1:  'description': [
11: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
11: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
11: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
11: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
11: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
11: 1:    'Please write optimized code without any duplication.',
11: 1:    'For divider 11 - the word must be 'Duzz'.',
11: 1:    'For divider 13 - the word must be 'Cazz'.'
11: 1:  ],
11: 1:  'expectedAnswer': 'Buzz',
11: 1:  'history': [
11: 1:    {
11: 1:      'answer': '1',
11: 1:      'question': '1',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': '2',
11: 1:      'question': '2',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': 'Fizz',
11: 1:      'question': '3',
11: 1:      'valid': true
11: 1:    },
11: 1:    {
11: 1:      'answer': '4',
11: 1:      'question': '4',
11: 1:      'valid': true
11: 1:    }
11: 1:  ],
11: 1:  'info': [
11: 1:    '✅f(1) = 1',
11: 1:    '✅f(2) = 2',
11: 1:    '✅f(3) = Fizz',
11: 1:    '✅f(4) = 4',
11: 1:    '❌f(5) = ??? != Buzz'
11: 1:  ],
11: 1:  'level': 1,
11: 1:  'nextQuestion': '5',
11: 1:  'questions': [
11: 1:    '1',
11: 1:    '2',
11: 1:    '3',
11: 1:    '4',
11: 1:    '5'
11: 1:  ]
11: 1:}
11: 1:Scores: 9
11: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz']')
11: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
12: 1:BoardData {
12: 1:  'description': [
12: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
12: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
12: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
12: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
12: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
12: 1:    'Please write optimized code without any duplication.',
12: 1:    'For divider 11 - the word must be 'Duzz'.',
12: 1:    'For divider 13 - the word must be 'Cazz'.'
12: 1:  ],
12: 1:  'expectedAnswer': 'Fizz',
12: 1:  'history': [
12: 1:    {
12: 1:      'answer': '1',
12: 1:      'question': '1',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': '2',
12: 1:      'question': '2',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': 'Fizz',
12: 1:      'question': '3',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': '4',
12: 1:      'question': '4',
12: 1:      'valid': true
12: 1:    },
12: 1:    {
12: 1:      'answer': 'Buzz',
12: 1:      'question': '5',
12: 1:      'valid': true
12: 1:    }
12: 1:  ],
12: 1:  'info': [
12: 1:    '✅f(1) = 1',
12: 1:    '✅f(2) = 2',
12: 1:    '✅f(3) = Fizz',
12: 1:    '✅f(4) = 4',
12: 1:    '✅f(5) = Buzz',
12: 1:    '❌f(6) = ??? != Fizz'
12: 1:  ],
12: 1:  'level': 1,
12: 1:  'nextQuestion': '6',
12: 1:  'questions': [
12: 1:    '1',
12: 1:    '2',
12: 1:    '3',
12: 1:    '4',
12: 1:    '5',
12: 1:    '6'
12: 1:  ]
12: 1:}
12: 1:Scores: 10
12: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz']')
12: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
13: 1:BoardData {
13: 1:  'description': [
13: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
13: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
13: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
13: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
13: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
13: 1:    'Please write optimized code without any duplication.',
13: 1:    'For divider 11 - the word must be 'Duzz'.',
13: 1:    'For divider 13 - the word must be 'Cazz'.'
13: 1:  ],
13: 1:  'expectedAnswer': 'Muzz',
13: 1:  'history': [
13: 1:    {
13: 1:      'answer': '1',
13: 1:      'question': '1',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': '2',
13: 1:      'question': '2',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Fizz',
13: 1:      'question': '3',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': '4',
13: 1:      'question': '4',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Buzz',
13: 1:      'question': '5',
13: 1:      'valid': true
13: 1:    },
13: 1:    {
13: 1:      'answer': 'Fizz',
13: 1:      'question': '6',
13: 1:      'valid': true
13: 1:    }
13: 1:  ],
13: 1:  'info': [
13: 1:    '✅f(1) = 1',
13: 1:    '✅f(2) = 2',
13: 1:    '✅f(3) = Fizz',
13: 1:    '✅f(4) = 4',
13: 1:    '✅f(5) = Buzz',
13: 1:    '✅f(6) = Fizz',
13: 1:    '❌f(7) = ??? != Muzz'
13: 1:  ],
13: 1:  'level': 1,
13: 1:  'nextQuestion': '7',
13: 1:  'questions': [
13: 1:    '1',
13: 1:    '2',
13: 1:    '3',
13: 1:    '4',
13: 1:    '5',
13: 1:    '6',
13: 1:    '7'
13: 1:  ]
13: 1:}
13: 1:Scores: 11
13: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz']')
13: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
14: 1:BoardData {
14: 1:  'description': [
14: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
14: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
14: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
14: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
14: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
14: 1:    'Please write optimized code without any duplication.',
14: 1:    'For divider 11 - the word must be 'Duzz'.',
14: 1:    'For divider 13 - the word must be 'Cazz'.'
14: 1:  ],
14: 1:  'expectedAnswer': '8',
14: 1:  'history': [
14: 1:    {
14: 1:      'answer': '1',
14: 1:      'question': '1',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': '2',
14: 1:      'question': '2',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Fizz',
14: 1:      'question': '3',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': '4',
14: 1:      'question': '4',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Buzz',
14: 1:      'question': '5',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Fizz',
14: 1:      'question': '6',
14: 1:      'valid': true
14: 1:    },
14: 1:    {
14: 1:      'answer': 'Muzz',
14: 1:      'question': '7',
14: 1:      'valid': true
14: 1:    }
14: 1:  ],
14: 1:  'info': [
14: 1:    '✅f(1) = 1',
14: 1:    '✅f(2) = 2',
14: 1:    '✅f(3) = Fizz',
14: 1:    '✅f(4) = 4',
14: 1:    '✅f(5) = Buzz',
14: 1:    '✅f(6) = Fizz',
14: 1:    '✅f(7) = Muzz',
14: 1:    '❌f(8) = ??? != 8'
14: 1:  ],
14: 1:  'level': 1,
14: 1:  'nextQuestion': '8',
14: 1:  'questions': [
14: 1:    '1',
14: 1:    '2',
14: 1:    '3',
14: 1:    '4',
14: 1:    '5',
14: 1:    '6',
14: 1:    '7',
14: 1:    '8'
14: 1:  ]
14: 1:}
14: 1:Scores: 12
14: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8']')
14: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
15: 1:BoardData {
15: 1:  'description': [
15: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
15: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
15: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
15: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
15: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
15: 1:    'Please write optimized code without any duplication.',
15: 1:    'For divider 11 - the word must be 'Duzz'.',
15: 1:    'For divider 13 - the word must be 'Cazz'.'
15: 1:  ],
15: 1:  'expectedAnswer': 'Fizz',
15: 1:  'history': [
15: 1:    {
15: 1:      'answer': '1',
15: 1:      'question': '1',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '2',
15: 1:      'question': '2',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Fizz',
15: 1:      'question': '3',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '4',
15: 1:      'question': '4',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Buzz',
15: 1:      'question': '5',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Fizz',
15: 1:      'question': '6',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': 'Muzz',
15: 1:      'question': '7',
15: 1:      'valid': true
15: 1:    },
15: 1:    {
15: 1:      'answer': '8',
15: 1:      'question': '8',
15: 1:      'valid': true
15: 1:    }
15: 1:  ],
15: 1:  'info': [
15: 1:    '✅f(1) = 1',
15: 1:    '✅f(2) = 2',
15: 1:    '✅f(3) = Fizz',
15: 1:    '✅f(4) = 4',
15: 1:    '✅f(5) = Buzz',
15: 1:    '✅f(6) = Fizz',
15: 1:    '✅f(7) = Muzz',
15: 1:    '✅f(8) = 8',
15: 1:    '❌f(9) = ??? != Fizz'
15: 1:  ],
15: 1:  'level': 1,
15: 1:  'nextQuestion': '9',
15: 1:  'questions': [
15: 1:    '1',
15: 1:    '2',
15: 1:    '3',
15: 1:    '4',
15: 1:    '5',
15: 1:    '6',
15: 1:    '7',
15: 1:    '8',
15: 1:    '9'
15: 1:  ]
15: 1:}
15: 1:Scores: 13
15: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz']')
15: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
16: 1:BoardData {
16: 1:  'description': [
16: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
16: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
16: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
16: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
16: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
16: 1:    'Please write optimized code without any duplication.',
16: 1:    'For divider 11 - the word must be 'Duzz'.',
16: 1:    'For divider 13 - the word must be 'Cazz'.'
16: 1:  ],
16: 1:  'expectedAnswer': 'Buzz',
16: 1:  'history': [
16: 1:    {
16: 1:      'answer': '1',
16: 1:      'question': '1',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '2',
16: 1:      'question': '2',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '3',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '4',
16: 1:      'question': '4',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Buzz',
16: 1:      'question': '5',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '6',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Muzz',
16: 1:      'question': '7',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': '8',
16: 1:      'question': '8',
16: 1:      'valid': true
16: 1:    },
16: 1:    {
16: 1:      'answer': 'Fizz',
16: 1:      'question': '9',
16: 1:      'valid': true
16: 1:    }
16: 1:  ],
16: 1:  'info': [
16: 1:    '✅f(1) = 1',
16: 1:    '✅f(2) = 2',
16: 1:    '✅f(3) = Fizz',
16: 1:    '✅f(4) = 4',
16: 1:    '✅f(5) = Buzz',
16: 1:    '✅f(6) = Fizz',
16: 1:    '✅f(7) = Muzz',
16: 1:    '✅f(8) = 8',
16: 1:    '✅f(9) = Fizz',
16: 1:    '❌f(10) = ??? != Buzz'
16: 1:  ],
16: 1:  'level': 1,
16: 1:  'nextQuestion': '10',
16: 1:  'questions': [
16: 1:    '1',
16: 1:    '2',
16: 1:    '3',
16: 1:    '4',
16: 1:    '5',
16: 1:    '6',
16: 1:    '7',
16: 1:    '8',
16: 1:    '9',
16: 1:    '10'
16: 1:  ]
16: 1:}
16: 1:Scores: 14
16: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz']')
16: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
17: 1:BoardData {
17: 1:  'description': [
17: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
17: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
17: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
17: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
17: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
17: 1:    'Please write optimized code without any duplication.',
17: 1:    'For divider 11 - the word must be 'Duzz'.',
17: 1:    'For divider 13 - the word must be 'Cazz'.'
17: 1:  ],
17: 1:  'expectedAnswer': 'Duzz',
17: 1:  'history': [
17: 1:    {
17: 1:      'answer': '1',
17: 1:      'question': '1',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '2',
17: 1:      'question': '2',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '3',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '4',
17: 1:      'question': '4',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Buzz',
17: 1:      'question': '5',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '6',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Muzz',
17: 1:      'question': '7',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': '8',
17: 1:      'question': '8',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Fizz',
17: 1:      'question': '9',
17: 1:      'valid': true
17: 1:    },
17: 1:    {
17: 1:      'answer': 'Buzz',
17: 1:      'question': '10',
17: 1:      'valid': true
17: 1:    }
17: 1:  ],
17: 1:  'info': [
17: 1:    '✅f(1) = 1',
17: 1:    '✅f(2) = 2',
17: 1:    '✅f(3) = Fizz',
17: 1:    '✅f(4) = 4',
17: 1:    '✅f(5) = Buzz',
17: 1:    '✅f(6) = Fizz',
17: 1:    '✅f(7) = Muzz',
17: 1:    '✅f(8) = 8',
17: 1:    '✅f(9) = Fizz',
17: 1:    '✅f(10) = Buzz',
17: 1:    '❌f(11) = ??? != Duzz'
17: 1:  ],
17: 1:  'level': 1,
17: 1:  'nextQuestion': '11',
17: 1:  'questions': [
17: 1:    '1',
17: 1:    '2',
17: 1:    '3',
17: 1:    '4',
17: 1:    '5',
17: 1:    '6',
17: 1:    '7',
17: 1:    '8',
17: 1:    '9',
17: 1:    '10',
17: 1:    '11'
17: 1:  ]
17: 1:}
17: 1:Scores: 15
17: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz']')
17: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
18: 1:BoardData {
18: 1:  'description': [
18: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
18: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
18: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
18: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
18: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
18: 1:    'Please write optimized code without any duplication.',
18: 1:    'For divider 11 - the word must be 'Duzz'.',
18: 1:    'For divider 13 - the word must be 'Cazz'.'
18: 1:  ],
18: 1:  'expectedAnswer': 'Fizz',
18: 1:  'history': [
18: 1:    {
18: 1:      'answer': '1',
18: 1:      'question': '1',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '2',
18: 1:      'question': '2',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '3',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '4',
18: 1:      'question': '4',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Buzz',
18: 1:      'question': '5',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '6',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Muzz',
18: 1:      'question': '7',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': '8',
18: 1:      'question': '8',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Fizz',
18: 1:      'question': '9',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Buzz',
18: 1:      'question': '10',
18: 1:      'valid': true
18: 1:    },
18: 1:    {
18: 1:      'answer': 'Duzz',
18: 1:      'question': '11',
18: 1:      'valid': true
18: 1:    }
18: 1:  ],
18: 1:  'info': [
18: 1:    '✅f(1) = 1',
18: 1:    '✅f(2) = 2',
18: 1:    '✅f(3) = Fizz',
18: 1:    '✅f(4) = 4',
18: 1:    '✅f(5) = Buzz',
18: 1:    '✅f(6) = Fizz',
18: 1:    '✅f(7) = Muzz',
18: 1:    '✅f(8) = 8',
18: 1:    '✅f(9) = Fizz',
18: 1:    '✅f(10) = Buzz',
18: 1:    '✅f(11) = Duzz',
18: 1:    '❌f(12) = ??? != Fizz'
18: 1:  ],
18: 1:  'level': 1,
18: 1:  'nextQuestion': '12',
18: 1:  'questions': [
18: 1:    '1',
18: 1:    '2',
18: 1:    '3',
18: 1:    '4',
18: 1:    '5',
18: 1:    '6',
18: 1:    '7',
18: 1:    '8',
18: 1:    '9',
18: 1:    '10',
18: 1:    '11',
18: 1:    '12'
18: 1:  ]
18: 1:}
18: 1:Scores: 16
18: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz']')
18: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
19: 1:BoardData {
19: 1:  'description': [
19: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
19: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
19: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
19: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
19: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
19: 1:    'Please write optimized code without any duplication.',
19: 1:    'For divider 11 - the word must be 'Duzz'.',
19: 1:    'For divider 13 - the word must be 'Cazz'.'
19: 1:  ],
19: 1:  'expectedAnswer': 'Cazz',
19: 1:  'history': [
19: 1:    {
19: 1:      'answer': '1',
19: 1:      'question': '1',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '2',
19: 1:      'question': '2',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '3',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '4',
19: 1:      'question': '4',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Buzz',
19: 1:      'question': '5',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '6',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Muzz',
19: 1:      'question': '7',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': '8',
19: 1:      'question': '8',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '9',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Buzz',
19: 1:      'question': '10',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Duzz',
19: 1:      'question': '11',
19: 1:      'valid': true
19: 1:    },
19: 1:    {
19: 1:      'answer': 'Fizz',
19: 1:      'question': '12',
19: 1:      'valid': true
19: 1:    }
19: 1:  ],
19: 1:  'info': [
19: 1:    '✅f(1) = 1',
19: 1:    '✅f(2) = 2',
19: 1:    '✅f(3) = Fizz',
19: 1:    '✅f(4) = 4',
19: 1:    '✅f(5) = Buzz',
19: 1:    '✅f(6) = Fizz',
19: 1:    '✅f(7) = Muzz',
19: 1:    '✅f(8) = 8',
19: 1:    '✅f(9) = Fizz',
19: 1:    '✅f(10) = Buzz',
19: 1:    '✅f(11) = Duzz',
19: 1:    '✅f(12) = Fizz',
19: 1:    '❌f(13) = ??? != Cazz'
19: 1:  ],
19: 1:  'level': 1,
19: 1:  'nextQuestion': '13',
19: 1:  'questions': [
19: 1:    '1',
19: 1:    '2',
19: 1:    '3',
19: 1:    '4',
19: 1:    '5',
19: 1:    '6',
19: 1:    '7',
19: 1:    '8',
19: 1:    '9',
19: 1:    '10',
19: 1:    '11',
19: 1:    '12',
19: 1:    '13'
19: 1:  ]
19: 1:}
19: 1:Scores: 17
19: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz']')
19: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
20: 1:BoardData {
20: 1:  'description': [
20: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
20: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
20: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
20: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
20: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
20: 1:    'Please write optimized code without any duplication.',
20: 1:    'For divider 11 - the word must be 'Duzz'.',
20: 1:    'For divider 13 - the word must be 'Cazz'.'
20: 1:  ],
20: 1:  'expectedAnswer': 'Muzz',
20: 1:  'history': [
20: 1:    {
20: 1:      'answer': '1',
20: 1:      'question': '1',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '2',
20: 1:      'question': '2',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '3',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '4',
20: 1:      'question': '4',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Buzz',
20: 1:      'question': '5',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '6',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Muzz',
20: 1:      'question': '7',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': '8',
20: 1:      'question': '8',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '9',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Buzz',
20: 1:      'question': '10',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Duzz',
20: 1:      'question': '11',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Fizz',
20: 1:      'question': '12',
20: 1:      'valid': true
20: 1:    },
20: 1:    {
20: 1:      'answer': 'Cazz',
20: 1:      'question': '13',
20: 1:      'valid': true
20: 1:    }
20: 1:  ],
20: 1:  'info': [
20: 1:    '✅f(1) = 1',
20: 1:    '✅f(2) = 2',
20: 1:    '✅f(3) = Fizz',
20: 1:    '✅f(4) = 4',
20: 1:    '✅f(5) = Buzz',
20: 1:    '✅f(6) = Fizz',
20: 1:    '✅f(7) = Muzz',
20: 1:    '✅f(8) = 8',
20: 1:    '✅f(9) = Fizz',
20: 1:    '✅f(10) = Buzz',
20: 1:    '✅f(11) = Duzz',
20: 1:    '✅f(12) = Fizz',
20: 1:    '✅f(13) = Cazz',
20: 1:    '❌f(14) = ??? != Muzz'
20: 1:  ],
20: 1:  'level': 1,
20: 1:  'nextQuestion': '14',
20: 1:  'questions': [
20: 1:    '1',
20: 1:    '2',
20: 1:    '3',
20: 1:    '4',
20: 1:    '5',
20: 1:    '6',
20: 1:    '7',
20: 1:    '8',
20: 1:    '9',
20: 1:    '10',
20: 1:    '11',
20: 1:    '12',
20: 1:    '13',
20: 1:    '14'
20: 1:  ]
20: 1:}
20: 1:Scores: 18
20: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz']')
20: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
21: 1:BoardData {
21: 1:  'description': [
21: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
21: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
21: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
21: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
21: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
21: 1:    'Please write optimized code without any duplication.',
21: 1:    'For divider 11 - the word must be 'Duzz'.',
21: 1:    'For divider 13 - the word must be 'Cazz'.'
21: 1:  ],
21: 1:  'expectedAnswer': 'FizzBuzz',
21: 1:  'history': [
21: 1:    {
21: 1:      'answer': '1',
21: 1:      'question': '1',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '2',
21: 1:      'question': '2',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '3',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '4',
21: 1:      'question': '4',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Buzz',
21: 1:      'question': '5',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '6',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Muzz',
21: 1:      'question': '7',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': '8',
21: 1:      'question': '8',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '9',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Buzz',
21: 1:      'question': '10',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Duzz',
21: 1:      'question': '11',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Fizz',
21: 1:      'question': '12',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Cazz',
21: 1:      'question': '13',
21: 1:      'valid': true
21: 1:    },
21: 1:    {
21: 1:      'answer': 'Muzz',
21: 1:      'question': '14',
21: 1:      'valid': true
21: 1:    }
21: 1:  ],
21: 1:  'info': [
21: 1:    '✅f(1) = 1',
21: 1:    '✅f(2) = 2',
21: 1:    '✅f(3) = Fizz',
21: 1:    '✅f(4) = 4',
21: 1:    '✅f(5) = Buzz',
21: 1:    '✅f(6) = Fizz',
21: 1:    '✅f(7) = Muzz',
21: 1:    '✅f(8) = 8',
21: 1:    '✅f(9) = Fizz',
21: 1:    '✅f(10) = Buzz',
21: 1:    '✅f(11) = Duzz',
21: 1:    '✅f(12) = Fizz',
21: 1:    '✅f(13) = Cazz',
21: 1:    '✅f(14) = Muzz',
21: 1:    '❌f(15) = ??? != FizzBuzz'
21: 1:  ],
21: 1:  'level': 1,
21: 1:  'nextQuestion': '15',
21: 1:  'questions': [
21: 1:    '1',
21: 1:    '2',
21: 1:    '3',
21: 1:    '4',
21: 1:    '5',
21: 1:    '6',
21: 1:    '7',
21: 1:    '8',
21: 1:    '9',
21: 1:    '10',
21: 1:    '11',
21: 1:    '12',
21: 1:    '13',
21: 1:    '14',
21: 1:    '15'
21: 1:  ]
21: 1:}
21: 1:Scores: 19
21: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz']')
21: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
22: 1:BoardData {
22: 1:  'description': [
22: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
22: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
22: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
22: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
22: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
22: 1:    'Please write optimized code without any duplication.',
22: 1:    'For divider 11 - the word must be 'Duzz'.',
22: 1:    'For divider 13 - the word must be 'Cazz'.'
22: 1:  ],
22: 1:  'expectedAnswer': '16',
22: 1:  'history': [
22: 1:    {
22: 1:      'answer': '1',
22: 1:      'question': '1',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '2',
22: 1:      'question': '2',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '3',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '4',
22: 1:      'question': '4',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Buzz',
22: 1:      'question': '5',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '6',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Muzz',
22: 1:      'question': '7',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': '8',
22: 1:      'question': '8',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '9',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Buzz',
22: 1:      'question': '10',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Duzz',
22: 1:      'question': '11',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Fizz',
22: 1:      'question': '12',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Cazz',
22: 1:      'question': '13',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'Muzz',
22: 1:      'question': '14',
22: 1:      'valid': true
22: 1:    },
22: 1:    {
22: 1:      'answer': 'FizzBuzz',
22: 1:      'question': '15',
22: 1:      'valid': true
22: 1:    }
22: 1:  ],
22: 1:  'info': [
22: 1:    '✅f(1) = 1',
22: 1:    '✅f(2) = 2',
22: 1:    '✅f(3) = Fizz',
22: 1:    '✅f(4) = 4',
22: 1:    '✅f(5) = Buzz',
22: 1:    '✅f(6) = Fizz',
22: 1:    '✅f(7) = Muzz',
22: 1:    '✅f(8) = 8',
22: 1:    '✅f(9) = Fizz',
22: 1:    '✅f(10) = Buzz',
22: 1:    '✅f(11) = Duzz',
22: 1:    '✅f(12) = Fizz',
22: 1:    '✅f(13) = Cazz',
22: 1:    '✅f(14) = Muzz',
22: 1:    '✅f(15) = FizzBuzz',
22: 1:    '❌f(16) = ??? != 16'
22: 1:  ],
22: 1:  'level': 1,
22: 1:  'nextQuestion': '16',
22: 1:  'questions': [
22: 1:    '1',
22: 1:    '2',
22: 1:    '3',
22: 1:    '4',
22: 1:    '5',
22: 1:    '6',
22: 1:    '7',
22: 1:    '8',
22: 1:    '9',
22: 1:    '10',
22: 1:    '11',
22: 1:    '12',
22: 1:    '13',
22: 1:    '14',
22: 1:    '15',
22: 1:    '16'
22: 1:  ]
22: 1:}
22: 1:Scores: 20
22: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16']')
22: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
23: 1:BoardData {
23: 1:  'description': [
23: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
23: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
23: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
23: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
23: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
23: 1:    'Please write optimized code without any duplication.',
23: 1:    'For divider 11 - the word must be 'Duzz'.',
23: 1:    'For divider 13 - the word must be 'Cazz'.'
23: 1:  ],
23: 1:  'expectedAnswer': '17',
23: 1:  'history': [
23: 1:    {
23: 1:      'answer': '1',
23: 1:      'question': '1',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '2',
23: 1:      'question': '2',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '3',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '4',
23: 1:      'question': '4',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Buzz',
23: 1:      'question': '5',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '6',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Muzz',
23: 1:      'question': '7',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '8',
23: 1:      'question': '8',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '9',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Buzz',
23: 1:      'question': '10',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Duzz',
23: 1:      'question': '11',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Fizz',
23: 1:      'question': '12',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Cazz',
23: 1:      'question': '13',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'Muzz',
23: 1:      'question': '14',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': 'FizzBuzz',
23: 1:      'question': '15',
23: 1:      'valid': true
23: 1:    },
23: 1:    {
23: 1:      'answer': '16',
23: 1:      'question': '16',
23: 1:      'valid': true
23: 1:    }
23: 1:  ],
23: 1:  'info': [
23: 1:    '✅f(1) = 1',
23: 1:    '✅f(2) = 2',
23: 1:    '✅f(3) = Fizz',
23: 1:    '✅f(4) = 4',
23: 1:    '✅f(5) = Buzz',
23: 1:    '✅f(6) = Fizz',
23: 1:    '✅f(7) = Muzz',
23: 1:    '✅f(8) = 8',
23: 1:    '✅f(9) = Fizz',
23: 1:    '✅f(10) = Buzz',
23: 1:    '✅f(11) = Duzz',
23: 1:    '✅f(12) = Fizz',
23: 1:    '✅f(13) = Cazz',
23: 1:    '✅f(14) = Muzz',
23: 1:    '✅f(15) = FizzBuzz',
23: 1:    '✅f(16) = 16',
23: 1:    '❌f(17) = ??? != 17'
23: 1:  ],
23: 1:  'level': 1,
23: 1:  'nextQuestion': '17',
23: 1:  'questions': [
23: 1:    '1',
23: 1:    '2',
23: 1:    '3',
23: 1:    '4',
23: 1:    '5',
23: 1:    '6',
23: 1:    '7',
23: 1:    '8',
23: 1:    '9',
23: 1:    '10',
23: 1:    '11',
23: 1:    '12',
23: 1:    '13',
23: 1:    '14',
23: 1:    '15',
23: 1:    '16',
23: 1:    '17'
23: 1:  ]
23: 1:}
23: 1:Scores: 21
23: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17']')
23: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
24: 1:BoardData {
24: 1:  'description': [
24: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
24: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
24: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
24: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
24: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
24: 1:    'Please write optimized code without any duplication.',
24: 1:    'For divider 11 - the word must be 'Duzz'.',
24: 1:    'For divider 13 - the word must be 'Cazz'.'
24: 1:  ],
24: 1:  'expectedAnswer': 'FizzMuzz',
24: 1:  'history': [
24: 1:    {
24: 1:      'answer': '1',
24: 1:      'question': '1',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '2',
24: 1:      'question': '2',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '3',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '4',
24: 1:      'question': '4',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Buzz',
24: 1:      'question': '5',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '6',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Muzz',
24: 1:      'question': '7',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '8',
24: 1:      'question': '8',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '9',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Buzz',
24: 1:      'question': '10',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Duzz',
24: 1:      'question': '11',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Fizz',
24: 1:      'question': '12',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Cazz',
24: 1:      'question': '13',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'Muzz',
24: 1:      'question': '14',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': 'FizzBuzz',
24: 1:      'question': '15',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '16',
24: 1:      'question': '16',
24: 1:      'valid': true
24: 1:    },
24: 1:    {
24: 1:      'answer': '17',
24: 1:      'question': '17',
24: 1:      'valid': true
24: 1:    }
24: 1:  ],
24: 1:  'info': [
24: 1:    '✅f(1) = 1',
24: 1:    '✅f(2) = 2',
24: 1:    '✅f(3) = Fizz',
24: 1:    '✅f(4) = 4',
24: 1:    '✅f(5) = Buzz',
24: 1:    '✅f(6) = Fizz',
24: 1:    '✅f(7) = Muzz',
24: 1:    '✅f(8) = 8',
24: 1:    '✅f(9) = Fizz',
24: 1:    '✅f(10) = Buzz',
24: 1:    '✅f(11) = Duzz',
24: 1:    '✅f(12) = Fizz',
24: 1:    '✅f(13) = Cazz',
24: 1:    '✅f(14) = Muzz',
24: 1:    '✅f(15) = FizzBuzz',
24: 1:    '✅f(16) = 16',
24: 1:    '✅f(17) = 17',
24: 1:    '❌f(21) = ??? != FizzMuzz'
24: 1:  ],
24: 1:  'level': 1,
24: 1:  'nextQuestion': '21',
24: 1:  'questions': [
24: 1:    '1',
24: 1:    '2',
24: 1:    '3',
24: 1:    '4',
24: 1:    '5',
24: 1:    '6',
24: 1:    '7',
24: 1:    '8',
24: 1:    '9',
24: 1:    '10',
24: 1:    '11',
24: 1:    '12',
24: 1:    '13',
24: 1:    '14',
24: 1:    '15',
24: 1:    '16',
24: 1:    '17',
24: 1:    '21'
24: 1:  ]
24: 1:}
24: 1:Scores: 22
24: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz']')
24: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
25: 1:BoardData {
25: 1:  'description': [
25: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
25: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
25: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
25: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
25: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
25: 1:    'Please write optimized code without any duplication.',
25: 1:    'For divider 11 - the word must be 'Duzz'.',
25: 1:    'For divider 13 - the word must be 'Cazz'.'
25: 1:  ],
25: 1:  'expectedAnswer': 'FizzDuzz',
25: 1:  'history': [
25: 1:    {
25: 1:      'answer': '1',
25: 1:      'question': '1',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '2',
25: 1:      'question': '2',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '3',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '4',
25: 1:      'question': '4',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Buzz',
25: 1:      'question': '5',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '6',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Muzz',
25: 1:      'question': '7',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '8',
25: 1:      'question': '8',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '9',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Buzz',
25: 1:      'question': '10',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Duzz',
25: 1:      'question': '11',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Fizz',
25: 1:      'question': '12',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Cazz',
25: 1:      'question': '13',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'Muzz',
25: 1:      'question': '14',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'FizzBuzz',
25: 1:      'question': '15',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '16',
25: 1:      'question': '16',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': '17',
25: 1:      'question': '17',
25: 1:      'valid': true
25: 1:    },
25: 1:    {
25: 1:      'answer': 'FizzMuzz',
25: 1:      'question': '21',
25: 1:      'valid': true
25: 1:    }
25: 1:  ],
25: 1:  'info': [
25: 1:    '✅f(1) = 1',
25: 1:    '✅f(2) = 2',
25: 1:    '✅f(3) = Fizz',
25: 1:    '✅f(4) = 4',
25: 1:    '✅f(5) = Buzz',
25: 1:    '✅f(6) = Fizz',
25: 1:    '✅f(7) = Muzz',
25: 1:    '✅f(8) = 8',
25: 1:    '✅f(9) = Fizz',
25: 1:    '✅f(10) = Buzz',
25: 1:    '✅f(11) = Duzz',
25: 1:    '✅f(12) = Fizz',
25: 1:    '✅f(13) = Cazz',
25: 1:    '✅f(14) = Muzz',
25: 1:    '✅f(15) = FizzBuzz',
25: 1:    '✅f(16) = 16',
25: 1:    '✅f(17) = 17',
25: 1:    '✅f(21) = FizzMuzz',
25: 1:    '❌f(33) = ??? != FizzDuzz'
25: 1:  ],
25: 1:  'level': 1,
25: 1:  'nextQuestion': '33',
25: 1:  'questions': [
25: 1:    '1',
25: 1:    '2',
25: 1:    '3',
25: 1:    '4',
25: 1:    '5',
25: 1:    '6',
25: 1:    '7',
25: 1:    '8',
25: 1:    '9',
25: 1:    '10',
25: 1:    '11',
25: 1:    '12',
25: 1:    '13',
25: 1:    '14',
25: 1:    '15',
25: 1:    '16',
25: 1:    '17',
25: 1:    '21',
25: 1:    '33'
25: 1:  ]
25: 1:}
25: 1:Scores: 23
25: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz']')
25: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
26: 1:BoardData {
26: 1:  'description': [
26: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
26: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
26: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
26: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
26: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
26: 1:    'Please write optimized code without any duplication.',
26: 1:    'For divider 11 - the word must be 'Duzz'.',
26: 1:    'For divider 13 - the word must be 'Cazz'.'
26: 1:  ],
26: 1:  'expectedAnswer': 'BuzzMuzz',
26: 1:  'history': [
26: 1:    {
26: 1:      'answer': '1',
26: 1:      'question': '1',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '2',
26: 1:      'question': '2',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '3',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '4',
26: 1:      'question': '4',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Buzz',
26: 1:      'question': '5',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '6',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Muzz',
26: 1:      'question': '7',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '8',
26: 1:      'question': '8',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '9',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Buzz',
26: 1:      'question': '10',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Duzz',
26: 1:      'question': '11',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Fizz',
26: 1:      'question': '12',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Cazz',
26: 1:      'question': '13',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'Muzz',
26: 1:      'question': '14',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'FizzBuzz',
26: 1:      'question': '15',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '16',
26: 1:      'question': '16',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': '17',
26: 1:      'question': '17',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'FizzMuzz',
26: 1:      'question': '21',
26: 1:      'valid': true
26: 1:    },
26: 1:    {
26: 1:      'answer': 'FizzDuzz',
26: 1:      'question': '33',
26: 1:      'valid': true
26: 1:    }
26: 1:  ],
26: 1:  'info': [
26: 1:    '✅f(1) = 1',
26: 1:    '✅f(2) = 2',
26: 1:    '✅f(3) = Fizz',
26: 1:    '✅f(4) = 4',
26: 1:    '✅f(5) = Buzz',
26: 1:    '✅f(6) = Fizz',
26: 1:    '✅f(7) = Muzz',
26: 1:    '✅f(8) = 8',
26: 1:    '✅f(9) = Fizz',
26: 1:    '✅f(10) = Buzz',
26: 1:    '✅f(11) = Duzz',
26: 1:    '✅f(12) = Fizz',
26: 1:    '✅f(13) = Cazz',
26: 1:    '✅f(14) = Muzz',
26: 1:    '✅f(15) = FizzBuzz',
26: 1:    '✅f(16) = 16',
26: 1:    '✅f(17) = 17',
26: 1:    '✅f(21) = FizzMuzz',
26: 1:    '✅f(33) = FizzDuzz',
26: 1:    '❌f(35) = ??? != BuzzMuzz'
26: 1:  ],
26: 1:  'level': 1,
26: 1:  'nextQuestion': '35',
26: 1:  'questions': [
26: 1:    '1',
26: 1:    '2',
26: 1:    '3',
26: 1:    '4',
26: 1:    '5',
26: 1:    '6',
26: 1:    '7',
26: 1:    '8',
26: 1:    '9',
26: 1:    '10',
26: 1:    '11',
26: 1:    '12',
26: 1:    '13',
26: 1:    '14',
26: 1:    '15',
26: 1:    '16',
26: 1:    '17',
26: 1:    '21',
26: 1:    '33',
26: 1:    '35'
26: 1:  ]
26: 1:}
26: 1:Scores: 24
26: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz']')
26: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
27: 1:BoardData {
27: 1:  'description': [
27: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
27: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
27: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
27: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
27: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
27: 1:    'Please write optimized code without any duplication.',
27: 1:    'For divider 11 - the word must be 'Duzz'.',
27: 1:    'For divider 13 - the word must be 'Cazz'.'
27: 1:  ],
27: 1:  'expectedAnswer': 'FizzCazz',
27: 1:  'history': [
27: 1:    {
27: 1:      'answer': '1',
27: 1:      'question': '1',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '2',
27: 1:      'question': '2',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '3',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '4',
27: 1:      'question': '4',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Buzz',
27: 1:      'question': '5',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '6',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Muzz',
27: 1:      'question': '7',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '8',
27: 1:      'question': '8',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '9',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Buzz',
27: 1:      'question': '10',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Duzz',
27: 1:      'question': '11',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Fizz',
27: 1:      'question': '12',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Cazz',
27: 1:      'question': '13',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'Muzz',
27: 1:      'question': '14',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'FizzBuzz',
27: 1:      'question': '15',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '16',
27: 1:      'question': '16',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': '17',
27: 1:      'question': '17',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'FizzMuzz',
27: 1:      'question': '21',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'FizzDuzz',
27: 1:      'question': '33',
27: 1:      'valid': true
27: 1:    },
27: 1:    {
27: 1:      'answer': 'BuzzMuzz',
27: 1:      'question': '35',
27: 1:      'valid': true
27: 1:    }
27: 1:  ],
27: 1:  'info': [
27: 1:    '✅f(1) = 1',
27: 1:    '✅f(2) = 2',
27: 1:    '✅f(3) = Fizz',
27: 1:    '✅f(4) = 4',
27: 1:    '✅f(5) = Buzz',
27: 1:    '✅f(6) = Fizz',
27: 1:    '✅f(7) = Muzz',
27: 1:    '✅f(8) = 8',
27: 1:    '✅f(9) = Fizz',
27: 1:    '✅f(10) = Buzz',
27: 1:    '✅f(11) = Duzz',
27: 1:    '✅f(12) = Fizz',
27: 1:    '✅f(13) = Cazz',
27: 1:    '✅f(14) = Muzz',
27: 1:    '✅f(15) = FizzBuzz',
27: 1:    '✅f(16) = 16',
27: 1:    '✅f(17) = 17',
27: 1:    '✅f(21) = FizzMuzz',
27: 1:    '✅f(33) = FizzDuzz',
27: 1:    '✅f(35) = BuzzMuzz',
27: 1:    '❌f(39) = ??? != FizzCazz'
27: 1:  ],
27: 1:  'level': 1,
27: 1:  'nextQuestion': '39',
27: 1:  'questions': [
27: 1:    '1',
27: 1:    '2',
27: 1:    '3',
27: 1:    '4',
27: 1:    '5',
27: 1:    '6',
27: 1:    '7',
27: 1:    '8',
27: 1:    '9',
27: 1:    '10',
27: 1:    '11',
27: 1:    '12',
27: 1:    '13',
27: 1:    '14',
27: 1:    '15',
27: 1:    '16',
27: 1:    '17',
27: 1:    '21',
27: 1:    '33',
27: 1:    '35',
27: 1:    '39'
27: 1:  ]
27: 1:}
27: 1:Scores: 25
27: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz']')
27: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
28: 1:BoardData {
28: 1:  'description': [
28: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
28: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
28: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
28: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
28: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
28: 1:    'Please write optimized code without any duplication.',
28: 1:    'For divider 11 - the word must be 'Duzz'.',
28: 1:    'For divider 13 - the word must be 'Cazz'.'
28: 1:  ],
28: 1:  'expectedAnswer': 'Muzz',
28: 1:  'history': [
28: 1:    {
28: 1:      'answer': '1',
28: 1:      'question': '1',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '2',
28: 1:      'question': '2',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '3',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '4',
28: 1:      'question': '4',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Buzz',
28: 1:      'question': '5',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '6',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Muzz',
28: 1:      'question': '7',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '8',
28: 1:      'question': '8',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '9',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Buzz',
28: 1:      'question': '10',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Duzz',
28: 1:      'question': '11',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Fizz',
28: 1:      'question': '12',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Cazz',
28: 1:      'question': '13',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'Muzz',
28: 1:      'question': '14',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzBuzz',
28: 1:      'question': '15',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '16',
28: 1:      'question': '16',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': '17',
28: 1:      'question': '17',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzMuzz',
28: 1:      'question': '21',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzDuzz',
28: 1:      'question': '33',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'BuzzMuzz',
28: 1:      'question': '35',
28: 1:      'valid': true
28: 1:    },
28: 1:    {
28: 1:      'answer': 'FizzCazz',
28: 1:      'question': '39',
28: 1:      'valid': true
28: 1:    }
28: 1:  ],
28: 1:  'info': [
28: 1:    '✅f(1) = 1',
28: 1:    '✅f(2) = 2',
28: 1:    '✅f(3) = Fizz',
28: 1:    '✅f(4) = 4',
28: 1:    '✅f(5) = Buzz',
28: 1:    '✅f(6) = Fizz',
28: 1:    '✅f(7) = Muzz',
28: 1:    '✅f(8) = 8',
28: 1:    '✅f(9) = Fizz',
28: 1:    '✅f(10) = Buzz',
28: 1:    '✅f(11) = Duzz',
28: 1:    '✅f(12) = Fizz',
28: 1:    '✅f(13) = Cazz',
28: 1:    '✅f(14) = Muzz',
28: 1:    '✅f(15) = FizzBuzz',
28: 1:    '✅f(16) = 16',
28: 1:    '✅f(17) = 17',
28: 1:    '✅f(21) = FizzMuzz',
28: 1:    '✅f(33) = FizzDuzz',
28: 1:    '✅f(35) = BuzzMuzz',
28: 1:    '✅f(39) = FizzCazz',
28: 1:    '❌f(49) = ??? != Muzz'
28: 1:  ],
28: 1:  'level': 1,
28: 1:  'nextQuestion': '49',
28: 1:  'questions': [
28: 1:    '1',
28: 1:    '2',
28: 1:    '3',
28: 1:    '4',
28: 1:    '5',
28: 1:    '6',
28: 1:    '7',
28: 1:    '8',
28: 1:    '9',
28: 1:    '10',
28: 1:    '11',
28: 1:    '12',
28: 1:    '13',
28: 1:    '14',
28: 1:    '15',
28: 1:    '16',
28: 1:    '17',
28: 1:    '21',
28: 1:    '33',
28: 1:    '35',
28: 1:    '39',
28: 1:    '49'
28: 1:  ]
28: 1:}
28: 1:Scores: 26
28: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz']')
28: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
29: 1:BoardData {
29: 1:  'description': [
29: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
29: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
29: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
29: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
29: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
29: 1:    'Please write optimized code without any duplication.',
29: 1:    'For divider 11 - the word must be 'Duzz'.',
29: 1:    'For divider 13 - the word must be 'Cazz'.'
29: 1:  ],
29: 1:  'expectedAnswer': 'BuzzDuzz',
29: 1:  'history': [
29: 1:    {
29: 1:      'answer': '1',
29: 1:      'question': '1',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '2',
29: 1:      'question': '2',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '3',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '4',
29: 1:      'question': '4',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Buzz',
29: 1:      'question': '5',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '6',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Muzz',
29: 1:      'question': '7',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '8',
29: 1:      'question': '8',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '9',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Buzz',
29: 1:      'question': '10',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Duzz',
29: 1:      'question': '11',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Fizz',
29: 1:      'question': '12',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Cazz',
29: 1:      'question': '13',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Muzz',
29: 1:      'question': '14',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzBuzz',
29: 1:      'question': '15',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '16',
29: 1:      'question': '16',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': '17',
29: 1:      'question': '17',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzMuzz',
29: 1:      'question': '21',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzDuzz',
29: 1:      'question': '33',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'BuzzMuzz',
29: 1:      'question': '35',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'FizzCazz',
29: 1:      'question': '39',
29: 1:      'valid': true
29: 1:    },
29: 1:    {
29: 1:      'answer': 'Muzz',
29: 1:      'question': '49',
29: 1:      'valid': true
29: 1:    }
29: 1:  ],
29: 1:  'info': [
29: 1:    '✅f(1) = 1',
29: 1:    '✅f(2) = 2',
29: 1:    '✅f(3) = Fizz',
29: 1:    '✅f(4) = 4',
29: 1:    '✅f(5) = Buzz',
29: 1:    '✅f(6) = Fizz',
29: 1:    '✅f(7) = Muzz',
29: 1:    '✅f(8) = 8',
29: 1:    '✅f(9) = Fizz',
29: 1:    '✅f(10) = Buzz',
29: 1:    '✅f(11) = Duzz',
29: 1:    '✅f(12) = Fizz',
29: 1:    '✅f(13) = Cazz',
29: 1:    '✅f(14) = Muzz',
29: 1:    '✅f(15) = FizzBuzz',
29: 1:    '✅f(16) = 16',
29: 1:    '✅f(17) = 17',
29: 1:    '✅f(21) = FizzMuzz',
29: 1:    '✅f(33) = FizzDuzz',
29: 1:    '✅f(35) = BuzzMuzz',
29: 1:    '✅f(39) = FizzCazz',
29: 1:    '✅f(49) = Muzz',
29: 1:    '❌f(55) = ??? != BuzzDuzz'
29: 1:  ],
29: 1:  'level': 1,
29: 1:  'nextQuestion': '55',
29: 1:  'questions': [
29: 1:    '1',
29: 1:    '2',
29: 1:    '3',
29: 1:    '4',
29: 1:    '5',
29: 1:    '6',
29: 1:    '7',
29: 1:    '8',
29: 1:    '9',
29: 1:    '10',
29: 1:    '11',
29: 1:    '12',
29: 1:    '13',
29: 1:    '14',
29: 1:    '15',
29: 1:    '16',
29: 1:    '17',
29: 1:    '21',
29: 1:    '33',
29: 1:    '35',
29: 1:    '39',
29: 1:    '49',
29: 1:    '55'
29: 1:  ]
29: 1:}
29: 1:Scores: 27
29: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz']')
29: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
30: 1:BoardData {
30: 1:  'description': [
30: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
30: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
30: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
30: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
30: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
30: 1:    'Please write optimized code without any duplication.',
30: 1:    'For divider 11 - the word must be 'Duzz'.',
30: 1:    'For divider 13 - the word must be 'Cazz'.'
30: 1:  ],
30: 1:  'expectedAnswer': 'BuzzCazz',
30: 1:  'history': [
30: 1:    {
30: 1:      'answer': '1',
30: 1:      'question': '1',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '2',
30: 1:      'question': '2',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '3',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '4',
30: 1:      'question': '4',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Buzz',
30: 1:      'question': '5',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '6',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Muzz',
30: 1:      'question': '7',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '8',
30: 1:      'question': '8',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '9',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Buzz',
30: 1:      'question': '10',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Duzz',
30: 1:      'question': '11',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Fizz',
30: 1:      'question': '12',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Cazz',
30: 1:      'question': '13',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Muzz',
30: 1:      'question': '14',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzBuzz',
30: 1:      'question': '15',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '16',
30: 1:      'question': '16',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': '17',
30: 1:      'question': '17',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzMuzz',
30: 1:      'question': '21',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzDuzz',
30: 1:      'question': '33',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'BuzzMuzz',
30: 1:      'question': '35',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'FizzCazz',
30: 1:      'question': '39',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'Muzz',
30: 1:      'question': '49',
30: 1:      'valid': true
30: 1:    },
30: 1:    {
30: 1:      'answer': 'BuzzDuzz',
30: 1:      'question': '55',
30: 1:      'valid': true
30: 1:    }
30: 1:  ],
30: 1:  'info': [
30: 1:    '✅f(1) = 1',
30: 1:    '✅f(2) = 2',
30: 1:    '✅f(3) = Fizz',
30: 1:    '✅f(4) = 4',
30: 1:    '✅f(5) = Buzz',
30: 1:    '✅f(6) = Fizz',
30: 1:    '✅f(7) = Muzz',
30: 1:    '✅f(8) = 8',
30: 1:    '✅f(9) = Fizz',
30: 1:    '✅f(10) = Buzz',
30: 1:    '✅f(11) = Duzz',
30: 1:    '✅f(12) = Fizz',
30: 1:    '✅f(13) = Cazz',
30: 1:    '✅f(14) = Muzz',
30: 1:    '✅f(15) = FizzBuzz',
30: 1:    '✅f(16) = 16',
30: 1:    '✅f(17) = 17',
30: 1:    '✅f(21) = FizzMuzz',
30: 1:    '✅f(33) = FizzDuzz',
30: 1:    '✅f(35) = BuzzMuzz',
30: 1:    '✅f(39) = FizzCazz',
30: 1:    '✅f(49) = Muzz',
30: 1:    '✅f(55) = BuzzDuzz',
30: 1:    '❌f(65) = ??? != BuzzCazz'
30: 1:  ],
30: 1:  'level': 1,
30: 1:  'nextQuestion': '65',
30: 1:  'questions': [
30: 1:    '1',
30: 1:    '2',
30: 1:    '3',
30: 1:    '4',
30: 1:    '5',
30: 1:    '6',
30: 1:    '7',
30: 1:    '8',
30: 1:    '9',
30: 1:    '10',
30: 1:    '11',
30: 1:    '12',
30: 1:    '13',
30: 1:    '14',
30: 1:    '15',
30: 1:    '16',
30: 1:    '17',
30: 1:    '21',
30: 1:    '33',
30: 1:    '35',
30: 1:    '39',
30: 1:    '49',
30: 1:    '55',
30: 1:    '65'
30: 1:  ]
30: 1:}
30: 1:Scores: 28
30: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz']')
30: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
31: 1:BoardData {
31: 1:  'description': [
31: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
31: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
31: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
31: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
31: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
31: 1:    'Please write optimized code without any duplication.',
31: 1:    'For divider 11 - the word must be 'Duzz'.',
31: 1:    'For divider 13 - the word must be 'Cazz'.'
31: 1:  ],
31: 1:  'expectedAnswer': 'MuzzDuzz',
31: 1:  'history': [
31: 1:    {
31: 1:      'answer': '1',
31: 1:      'question': '1',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '2',
31: 1:      'question': '2',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '3',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '4',
31: 1:      'question': '4',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Buzz',
31: 1:      'question': '5',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '6',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Muzz',
31: 1:      'question': '7',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '8',
31: 1:      'question': '8',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '9',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Buzz',
31: 1:      'question': '10',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Duzz',
31: 1:      'question': '11',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Fizz',
31: 1:      'question': '12',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Cazz',
31: 1:      'question': '13',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Muzz',
31: 1:      'question': '14',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzBuzz',
31: 1:      'question': '15',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '16',
31: 1:      'question': '16',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': '17',
31: 1:      'question': '17',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzMuzz',
31: 1:      'question': '21',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzDuzz',
31: 1:      'question': '33',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'BuzzMuzz',
31: 1:      'question': '35',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'FizzCazz',
31: 1:      'question': '39',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'Muzz',
31: 1:      'question': '49',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'BuzzDuzz',
31: 1:      'question': '55',
31: 1:      'valid': true
31: 1:    },
31: 1:    {
31: 1:      'answer': 'BuzzCazz',
31: 1:      'question': '65',
31: 1:      'valid': true
31: 1:    }
31: 1:  ],
31: 1:  'info': [
31: 1:    '✅f(1) = 1',
31: 1:    '✅f(2) = 2',
31: 1:    '✅f(3) = Fizz',
31: 1:    '✅f(4) = 4',
31: 1:    '✅f(5) = Buzz',
31: 1:    '✅f(6) = Fizz',
31: 1:    '✅f(7) = Muzz',
31: 1:    '✅f(8) = 8',
31: 1:    '✅f(9) = Fizz',
31: 1:    '✅f(10) = Buzz',
31: 1:    '✅f(11) = Duzz',
31: 1:    '✅f(12) = Fizz',
31: 1:    '✅f(13) = Cazz',
31: 1:    '✅f(14) = Muzz',
31: 1:    '✅f(15) = FizzBuzz',
31: 1:    '✅f(16) = 16',
31: 1:    '✅f(17) = 17',
31: 1:    '✅f(21) = FizzMuzz',
31: 1:    '✅f(33) = FizzDuzz',
31: 1:    '✅f(35) = BuzzMuzz',
31: 1:    '✅f(39) = FizzCazz',
31: 1:    '✅f(49) = Muzz',
31: 1:    '✅f(55) = BuzzDuzz',
31: 1:    '✅f(65) = BuzzCazz',
31: 1:    '❌f(77) = ??? != MuzzDuzz'
31: 1:  ],
31: 1:  'level': 1,
31: 1:  'nextQuestion': '77',
31: 1:  'questions': [
31: 1:    '1',
31: 1:    '2',
31: 1:    '3',
31: 1:    '4',
31: 1:    '5',
31: 1:    '6',
31: 1:    '7',
31: 1:    '8',
31: 1:    '9',
31: 1:    '10',
31: 1:    '11',
31: 1:    '12',
31: 1:    '13',
31: 1:    '14',
31: 1:    '15',
31: 1:    '16',
31: 1:    '17',
31: 1:    '21',
31: 1:    '33',
31: 1:    '35',
31: 1:    '39',
31: 1:    '49',
31: 1:    '55',
31: 1:    '65',
31: 1:    '77'
31: 1:  ]
31: 1:}
31: 1:Scores: 29
31: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz']')
31: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
32: 1:BoardData {
32: 1:  'description': [
32: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
32: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
32: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
32: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
32: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
32: 1:    'Please write optimized code without any duplication.',
32: 1:    'For divider 11 - the word must be 'Duzz'.',
32: 1:    'For divider 13 - the word must be 'Cazz'.'
32: 1:  ],
32: 1:  'expectedAnswer': 'MuzzCazz',
32: 1:  'history': [
32: 1:    {
32: 1:      'answer': '1',
32: 1:      'question': '1',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '2',
32: 1:      'question': '2',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '3',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '4',
32: 1:      'question': '4',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Buzz',
32: 1:      'question': '5',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '6',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Muzz',
32: 1:      'question': '7',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '8',
32: 1:      'question': '8',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '9',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Buzz',
32: 1:      'question': '10',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Duzz',
32: 1:      'question': '11',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Fizz',
32: 1:      'question': '12',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Cazz',
32: 1:      'question': '13',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Muzz',
32: 1:      'question': '14',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzBuzz',
32: 1:      'question': '15',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '16',
32: 1:      'question': '16',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': '17',
32: 1:      'question': '17',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzMuzz',
32: 1:      'question': '21',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzDuzz',
32: 1:      'question': '33',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'BuzzMuzz',
32: 1:      'question': '35',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'FizzCazz',
32: 1:      'question': '39',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'Muzz',
32: 1:      'question': '49',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'BuzzDuzz',
32: 1:      'question': '55',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'BuzzCazz',
32: 1:      'question': '65',
32: 1:      'valid': true
32: 1:    },
32: 1:    {
32: 1:      'answer': 'MuzzDuzz',
32: 1:      'question': '77',
32: 1:      'valid': true
32: 1:    }
32: 1:  ],
32: 1:  'info': [
32: 1:    '✅f(1) = 1',
32: 1:    '✅f(2) = 2',
32: 1:    '✅f(3) = Fizz',
32: 1:    '✅f(4) = 4',
32: 1:    '✅f(5) = Buzz',
32: 1:    '✅f(6) = Fizz',
32: 1:    '✅f(7) = Muzz',
32: 1:    '✅f(8) = 8',
32: 1:    '✅f(9) = Fizz',
32: 1:    '✅f(10) = Buzz',
32: 1:    '✅f(11) = Duzz',
32: 1:    '✅f(12) = Fizz',
32: 1:    '✅f(13) = Cazz',
32: 1:    '✅f(14) = Muzz',
32: 1:    '✅f(15) = FizzBuzz',
32: 1:    '✅f(16) = 16',
32: 1:    '✅f(17) = 17',
32: 1:    '✅f(21) = FizzMuzz',
32: 1:    '✅f(33) = FizzDuzz',
32: 1:    '✅f(35) = BuzzMuzz',
32: 1:    '✅f(39) = FizzCazz',
32: 1:    '✅f(49) = Muzz',
32: 1:    '✅f(55) = BuzzDuzz',
32: 1:    '✅f(65) = BuzzCazz',
32: 1:    '✅f(77) = MuzzDuzz',
32: 1:    '❌f(91) = ??? != MuzzCazz'
32: 1:  ],
32: 1:  'level': 1,
32: 1:  'nextQuestion': '91',
32: 1:  'questions': [
32: 1:    '1',
32: 1:    '2',
32: 1:    '3',
32: 1:    '4',
32: 1:    '5',
32: 1:    '6',
32: 1:    '7',
32: 1:    '8',
32: 1:    '9',
32: 1:    '10',
32: 1:    '11',
32: 1:    '12',
32: 1:    '13',
32: 1:    '14',
32: 1:    '15',
32: 1:    '16',
32: 1:    '17',
32: 1:    '21',
32: 1:    '33',
32: 1:    '35',
32: 1:    '39',
32: 1:    '49',
32: 1:    '55',
32: 1:    '65',
32: 1:    '77',
32: 1:    '91'
32: 1:  ]
32: 1:}
32: 1:Scores: 30
32: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz']')
32: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
33: 1:BoardData {
33: 1:  'description': [
33: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
33: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
33: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
33: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
33: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
33: 1:    'Please write optimized code without any duplication.',
33: 1:    'For divider 11 - the word must be 'Duzz'.',
33: 1:    'For divider 13 - the word must be 'Cazz'.'
33: 1:  ],
33: 1:  'expectedAnswer': 'FizzBuzzMuzz',
33: 1:  'history': [
33: 1:    {
33: 1:      'answer': '1',
33: 1:      'question': '1',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '2',
33: 1:      'question': '2',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Fizz',
33: 1:      'question': '3',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '4',
33: 1:      'question': '4',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Buzz',
33: 1:      'question': '5',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Fizz',
33: 1:      'question': '6',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Muzz',
33: 1:      'question': '7',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '8',
33: 1:      'question': '8',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Fizz',
33: 1:      'question': '9',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Buzz',
33: 1:      'question': '10',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Duzz',
33: 1:      'question': '11',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Fizz',
33: 1:      'question': '12',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Cazz',
33: 1:      'question': '13',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Muzz',
33: 1:      'question': '14',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'FizzBuzz',
33: 1:      'question': '15',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '16',
33: 1:      'question': '16',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': '17',
33: 1:      'question': '17',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'FizzMuzz',
33: 1:      'question': '21',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'FizzDuzz',
33: 1:      'question': '33',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'BuzzMuzz',
33: 1:      'question': '35',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'FizzCazz',
33: 1:      'question': '39',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'Muzz',
33: 1:      'question': '49',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'BuzzDuzz',
33: 1:      'question': '55',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'BuzzCazz',
33: 1:      'question': '65',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'MuzzDuzz',
33: 1:      'question': '77',
33: 1:      'valid': true
33: 1:    },
33: 1:    {
33: 1:      'answer': 'MuzzCazz',
33: 1:      'question': '91',
33: 1:      'valid': true
33: 1:    }
33: 1:  ],
33: 1:  'info': [
33: 1:    '✅f(1) = 1',
33: 1:    '✅f(2) = 2',
33: 1:    '✅f(3) = Fizz',
33: 1:    '✅f(4) = 4',
33: 1:    '✅f(5) = Buzz',
33: 1:    '✅f(6) = Fizz',
33: 1:    '✅f(7) = Muzz',
33: 1:    '✅f(8) = 8',
33: 1:    '✅f(9) = Fizz',
33: 1:    '✅f(10) = Buzz',
33: 1:    '✅f(11) = Duzz',
33: 1:    '✅f(12) = Fizz',
33: 1:    '✅f(13) = Cazz',
33: 1:    '✅f(14) = Muzz',
33: 1:    '✅f(15) = FizzBuzz',
33: 1:    '✅f(16) = 16',
33: 1:    '✅f(17) = 17',
33: 1:    '✅f(21) = FizzMuzz',
33: 1:    '✅f(33) = FizzDuzz',
33: 1:    '✅f(35) = BuzzMuzz',
33: 1:    '✅f(39) = FizzCazz',
33: 1:    '✅f(49) = Muzz',
33: 1:    '✅f(55) = BuzzDuzz',
33: 1:    '✅f(65) = BuzzCazz',
33: 1:    '✅f(77) = MuzzDuzz',
33: 1:    '✅f(91) = MuzzCazz',
33: 1:    '❌f(105) = ??? != FizzBuzzMuzz'
33: 1:  ],
33: 1:  'level': 1,
33: 1:  'nextQuestion': '105',
33: 1:  'questions': [
33: 1:    '1',
33: 1:    '2',
33: 1:    '3',
33: 1:    '4',
33: 1:    '5',
33: 1:    '6',
33: 1:    '7',
33: 1:    '8',
33: 1:    '9',
33: 1:    '10',
33: 1:    '11',
33: 1:    '12',
33: 1:    '13',
33: 1:    '14',
33: 1:    '15',
33: 1:    '16',
33: 1:    '17',
33: 1:    '21',
33: 1:    '33',
33: 1:    '35',
33: 1:    '39',
33: 1:    '49',
33: 1:    '55',
33: 1:    '65',
33: 1:    '77',
33: 1:    '91',
33: 1:    '105'
33: 1:  ]
33: 1:}
33: 1:Scores: 31
33: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz']')
33: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
34: 1:BoardData {
34: 1:  'description': [
34: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
34: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
34: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
34: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
34: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
34: 1:    'Please write optimized code without any duplication.',
34: 1:    'For divider 11 - the word must be 'Duzz'.',
34: 1:    'For divider 13 - the word must be 'Cazz'.'
34: 1:  ],
34: 1:  'expectedAnswer': 'FizzBuzzDuzz',
34: 1:  'history': [
34: 1:    {
34: 1:      'answer': '1',
34: 1:      'question': '1',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '2',
34: 1:      'question': '2',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Fizz',
34: 1:      'question': '3',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '4',
34: 1:      'question': '4',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Buzz',
34: 1:      'question': '5',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Fizz',
34: 1:      'question': '6',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Muzz',
34: 1:      'question': '7',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '8',
34: 1:      'question': '8',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Fizz',
34: 1:      'question': '9',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Buzz',
34: 1:      'question': '10',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Duzz',
34: 1:      'question': '11',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Fizz',
34: 1:      'question': '12',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Cazz',
34: 1:      'question': '13',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Muzz',
34: 1:      'question': '14',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzBuzz',
34: 1:      'question': '15',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '16',
34: 1:      'question': '16',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': '17',
34: 1:      'question': '17',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzMuzz',
34: 1:      'question': '21',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzDuzz',
34: 1:      'question': '33',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'BuzzMuzz',
34: 1:      'question': '35',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzCazz',
34: 1:      'question': '39',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'Muzz',
34: 1:      'question': '49',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'BuzzDuzz',
34: 1:      'question': '55',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'BuzzCazz',
34: 1:      'question': '65',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'MuzzDuzz',
34: 1:      'question': '77',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'MuzzCazz',
34: 1:      'question': '91',
34: 1:      'valid': true
34: 1:    },
34: 1:    {
34: 1:      'answer': 'FizzBuzzMuzz',
34: 1:      'question': '105',
34: 1:      'valid': true
34: 1:    }
34: 1:  ],
34: 1:  'info': [
34: 1:    '✅f(1) = 1',
34: 1:    '✅f(2) = 2',
34: 1:    '✅f(3) = Fizz',
34: 1:    '✅f(4) = 4',
34: 1:    '✅f(5) = Buzz',
34: 1:    '✅f(6) = Fizz',
34: 1:    '✅f(7) = Muzz',
34: 1:    '✅f(8) = 8',
34: 1:    '✅f(9) = Fizz',
34: 1:    '✅f(10) = Buzz',
34: 1:    '✅f(11) = Duzz',
34: 1:    '✅f(12) = Fizz',
34: 1:    '✅f(13) = Cazz',
34: 1:    '✅f(14) = Muzz',
34: 1:    '✅f(15) = FizzBuzz',
34: 1:    '✅f(16) = 16',
34: 1:    '✅f(17) = 17',
34: 1:    '✅f(21) = FizzMuzz',
34: 1:    '✅f(33) = FizzDuzz',
34: 1:    '✅f(35) = BuzzMuzz',
34: 1:    '✅f(39) = FizzCazz',
34: 1:    '✅f(49) = Muzz',
34: 1:    '✅f(55) = BuzzDuzz',
34: 1:    '✅f(65) = BuzzCazz',
34: 1:    '✅f(77) = MuzzDuzz',
34: 1:    '✅f(91) = MuzzCazz',
34: 1:    '✅f(105) = FizzBuzzMuzz',
34: 1:    '❌f(165) = ??? != FizzBuzzDuzz'
34: 1:  ],
34: 1:  'level': 1,
34: 1:  'nextQuestion': '165',
34: 1:  'questions': [
34: 1:    '1',
34: 1:    '2',
34: 1:    '3',
34: 1:    '4',
34: 1:    '5',
34: 1:    '6',
34: 1:    '7',
34: 1:    '8',
34: 1:    '9',
34: 1:    '10',
34: 1:    '11',
34: 1:    '12',
34: 1:    '13',
34: 1:    '14',
34: 1:    '15',
34: 1:    '16',
34: 1:    '17',
34: 1:    '21',
34: 1:    '33',
34: 1:    '35',
34: 1:    '39',
34: 1:    '49',
34: 1:    '55',
34: 1:    '65',
34: 1:    '77',
34: 1:    '91',
34: 1:    '105',
34: 1:    '165'
34: 1:  ]
34: 1:}
34: 1:Scores: 32
34: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz']')
34: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
35: 1:BoardData {
35: 1:  'description': [
35: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
35: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
35: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
35: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
35: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
35: 1:    'Please write optimized code without any duplication.',
35: 1:    'For divider 11 - the word must be 'Duzz'.',
35: 1:    'For divider 13 - the word must be 'Cazz'.'
35: 1:  ],
35: 1:  'expectedAnswer': 'FizzBuzzCazz',
35: 1:  'history': [
35: 1:    {
35: 1:      'answer': '1',
35: 1:      'question': '1',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '2',
35: 1:      'question': '2',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Fizz',
35: 1:      'question': '3',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '4',
35: 1:      'question': '4',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Buzz',
35: 1:      'question': '5',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Fizz',
35: 1:      'question': '6',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Muzz',
35: 1:      'question': '7',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '8',
35: 1:      'question': '8',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Fizz',
35: 1:      'question': '9',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Buzz',
35: 1:      'question': '10',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Duzz',
35: 1:      'question': '11',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Fizz',
35: 1:      'question': '12',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Cazz',
35: 1:      'question': '13',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Muzz',
35: 1:      'question': '14',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzBuzz',
35: 1:      'question': '15',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '16',
35: 1:      'question': '16',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': '17',
35: 1:      'question': '17',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzMuzz',
35: 1:      'question': '21',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzDuzz',
35: 1:      'question': '33',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'BuzzMuzz',
35: 1:      'question': '35',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzCazz',
35: 1:      'question': '39',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'Muzz',
35: 1:      'question': '49',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'BuzzDuzz',
35: 1:      'question': '55',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'BuzzCazz',
35: 1:      'question': '65',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'MuzzDuzz',
35: 1:      'question': '77',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'MuzzCazz',
35: 1:      'question': '91',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzBuzzMuzz',
35: 1:      'question': '105',
35: 1:      'valid': true
35: 1:    },
35: 1:    {
35: 1:      'answer': 'FizzBuzzDuzz',
35: 1:      'question': '165',
35: 1:      'valid': true
35: 1:    }
35: 1:  ],
35: 1:  'info': [
35: 1:    '✅f(1) = 1',
35: 1:    '✅f(2) = 2',
35: 1:    '✅f(3) = Fizz',
35: 1:    '✅f(4) = 4',
35: 1:    '✅f(5) = Buzz',
35: 1:    '✅f(6) = Fizz',
35: 1:    '✅f(7) = Muzz',
35: 1:    '✅f(8) = 8',
35: 1:    '✅f(9) = Fizz',
35: 1:    '✅f(10) = Buzz',
35: 1:    '✅f(11) = Duzz',
35: 1:    '✅f(12) = Fizz',
35: 1:    '✅f(13) = Cazz',
35: 1:    '✅f(14) = Muzz',
35: 1:    '✅f(15) = FizzBuzz',
35: 1:    '✅f(16) = 16',
35: 1:    '✅f(17) = 17',
35: 1:    '✅f(21) = FizzMuzz',
35: 1:    '✅f(33) = FizzDuzz',
35: 1:    '✅f(35) = BuzzMuzz',
35: 1:    '✅f(39) = FizzCazz',
35: 1:    '✅f(49) = Muzz',
35: 1:    '✅f(55) = BuzzDuzz',
35: 1:    '✅f(65) = BuzzCazz',
35: 1:    '✅f(77) = MuzzDuzz',
35: 1:    '✅f(91) = MuzzCazz',
35: 1:    '✅f(105) = FizzBuzzMuzz',
35: 1:    '✅f(165) = FizzBuzzDuzz',
35: 1:    '❌f(195) = ??? != FizzBuzzCazz'
35: 1:  ],
35: 1:  'level': 1,
35: 1:  'nextQuestion': '195',
35: 1:  'questions': [
35: 1:    '1',
35: 1:    '2',
35: 1:    '3',
35: 1:    '4',
35: 1:    '5',
35: 1:    '6',
35: 1:    '7',
35: 1:    '8',
35: 1:    '9',
35: 1:    '10',
35: 1:    '11',
35: 1:    '12',
35: 1:    '13',
35: 1:    '14',
35: 1:    '15',
35: 1:    '16',
35: 1:    '17',
35: 1:    '21',
35: 1:    '33',
35: 1:    '35',
35: 1:    '39',
35: 1:    '49',
35: 1:    '55',
35: 1:    '65',
35: 1:    '77',
35: 1:    '91',
35: 1:    '105',
35: 1:    '165',
35: 1:    '195'
35: 1:  ]
35: 1:}
35: 1:Scores: 33
35: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz']')
35: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
36: 1:BoardData {
36: 1:  'description': [
36: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
36: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
36: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
36: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
36: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
36: 1:    'Please write optimized code without any duplication.',
36: 1:    'For divider 11 - the word must be 'Duzz'.',
36: 1:    'For divider 13 - the word must be 'Cazz'.'
36: 1:  ],
36: 1:  'expectedAnswer': 'FizzMuzzDuzz',
36: 1:  'history': [
36: 1:    {
36: 1:      'answer': '1',
36: 1:      'question': '1',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '2',
36: 1:      'question': '2',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Fizz',
36: 1:      'question': '3',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '4',
36: 1:      'question': '4',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Buzz',
36: 1:      'question': '5',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Fizz',
36: 1:      'question': '6',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Muzz',
36: 1:      'question': '7',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '8',
36: 1:      'question': '8',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Fizz',
36: 1:      'question': '9',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Buzz',
36: 1:      'question': '10',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Duzz',
36: 1:      'question': '11',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Fizz',
36: 1:      'question': '12',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Cazz',
36: 1:      'question': '13',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Muzz',
36: 1:      'question': '14',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzBuzz',
36: 1:      'question': '15',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '16',
36: 1:      'question': '16',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': '17',
36: 1:      'question': '17',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzMuzz',
36: 1:      'question': '21',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzDuzz',
36: 1:      'question': '33',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'BuzzMuzz',
36: 1:      'question': '35',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzCazz',
36: 1:      'question': '39',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'Muzz',
36: 1:      'question': '49',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'BuzzDuzz',
36: 1:      'question': '55',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'BuzzCazz',
36: 1:      'question': '65',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'MuzzDuzz',
36: 1:      'question': '77',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'MuzzCazz',
36: 1:      'question': '91',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzBuzzMuzz',
36: 1:      'question': '105',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzBuzzDuzz',
36: 1:      'question': '165',
36: 1:      'valid': true
36: 1:    },
36: 1:    {
36: 1:      'answer': 'FizzBuzzCazz',
36: 1:      'question': '195',
36: 1:      'valid': true
36: 1:    }
36: 1:  ],
36: 1:  'info': [
36: 1:    '✅f(1) = 1',
36: 1:    '✅f(2) = 2',
36: 1:    '✅f(3) = Fizz',
36: 1:    '✅f(4) = 4',
36: 1:    '✅f(5) = Buzz',
36: 1:    '✅f(6) = Fizz',
36: 1:    '✅f(7) = Muzz',
36: 1:    '✅f(8) = 8',
36: 1:    '✅f(9) = Fizz',
36: 1:    '✅f(10) = Buzz',
36: 1:    '✅f(11) = Duzz',
36: 1:    '✅f(12) = Fizz',
36: 1:    '✅f(13) = Cazz',
36: 1:    '✅f(14) = Muzz',
36: 1:    '✅f(15) = FizzBuzz',
36: 1:    '✅f(16) = 16',
36: 1:    '✅f(17) = 17',
36: 1:    '✅f(21) = FizzMuzz',
36: 1:    '✅f(33) = FizzDuzz',
36: 1:    '✅f(35) = BuzzMuzz',
36: 1:    '✅f(39) = FizzCazz',
36: 1:    '✅f(49) = Muzz',
36: 1:    '✅f(55) = BuzzDuzz',
36: 1:    '✅f(65) = BuzzCazz',
36: 1:    '✅f(77) = MuzzDuzz',
36: 1:    '✅f(91) = MuzzCazz',
36: 1:    '✅f(105) = FizzBuzzMuzz',
36: 1:    '✅f(165) = FizzBuzzDuzz',
36: 1:    '✅f(195) = FizzBuzzCazz',
36: 1:    '❌f(231) = ??? != FizzMuzzDuzz'
36: 1:  ],
36: 1:  'level': 1,
36: 1:  'nextQuestion': '231',
36: 1:  'questions': [
36: 1:    '1',
36: 1:    '2',
36: 1:    '3',
36: 1:    '4',
36: 1:    '5',
36: 1:    '6',
36: 1:    '7',
36: 1:    '8',
36: 1:    '9',
36: 1:    '10',
36: 1:    '11',
36: 1:    '12',
36: 1:    '13',
36: 1:    '14',
36: 1:    '15',
36: 1:    '16',
36: 1:    '17',
36: 1:    '21',
36: 1:    '33',
36: 1:    '35',
36: 1:    '39',
36: 1:    '49',
36: 1:    '55',
36: 1:    '65',
36: 1:    '77',
36: 1:    '91',
36: 1:    '105',
36: 1:    '165',
36: 1:    '195',
36: 1:    '231'
36: 1:  ]
36: 1:}
36: 1:Scores: 34
36: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz']')
36: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
37: 1:BoardData {
37: 1:  'description': [
37: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
37: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
37: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
37: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
37: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
37: 1:    'Please write optimized code without any duplication.',
37: 1:    'For divider 11 - the word must be 'Duzz'.',
37: 1:    'For divider 13 - the word must be 'Cazz'.'
37: 1:  ],
37: 1:  'expectedAnswer': 'FizzMuzzCazz',
37: 1:  'history': [
37: 1:    {
37: 1:      'answer': '1',
37: 1:      'question': '1',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '2',
37: 1:      'question': '2',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Fizz',
37: 1:      'question': '3',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '4',
37: 1:      'question': '4',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Buzz',
37: 1:      'question': '5',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Fizz',
37: 1:      'question': '6',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Muzz',
37: 1:      'question': '7',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '8',
37: 1:      'question': '8',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Fizz',
37: 1:      'question': '9',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Buzz',
37: 1:      'question': '10',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Duzz',
37: 1:      'question': '11',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Fizz',
37: 1:      'question': '12',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Cazz',
37: 1:      'question': '13',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Muzz',
37: 1:      'question': '14',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzBuzz',
37: 1:      'question': '15',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '16',
37: 1:      'question': '16',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': '17',
37: 1:      'question': '17',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzMuzz',
37: 1:      'question': '21',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzDuzz',
37: 1:      'question': '33',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'BuzzMuzz',
37: 1:      'question': '35',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzCazz',
37: 1:      'question': '39',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'Muzz',
37: 1:      'question': '49',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'BuzzDuzz',
37: 1:      'question': '55',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'BuzzCazz',
37: 1:      'question': '65',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'MuzzDuzz',
37: 1:      'question': '77',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'MuzzCazz',
37: 1:      'question': '91',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzBuzzMuzz',
37: 1:      'question': '105',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzBuzzDuzz',
37: 1:      'question': '165',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzBuzzCazz',
37: 1:      'question': '195',
37: 1:      'valid': true
37: 1:    },
37: 1:    {
37: 1:      'answer': 'FizzMuzzDuzz',
37: 1:      'question': '231',
37: 1:      'valid': true
37: 1:    }
37: 1:  ],
37: 1:  'info': [
37: 1:    '✅f(1) = 1',
37: 1:    '✅f(2) = 2',
37: 1:    '✅f(3) = Fizz',
37: 1:    '✅f(4) = 4',
37: 1:    '✅f(5) = Buzz',
37: 1:    '✅f(6) = Fizz',
37: 1:    '✅f(7) = Muzz',
37: 1:    '✅f(8) = 8',
37: 1:    '✅f(9) = Fizz',
37: 1:    '✅f(10) = Buzz',
37: 1:    '✅f(11) = Duzz',
37: 1:    '✅f(12) = Fizz',
37: 1:    '✅f(13) = Cazz',
37: 1:    '✅f(14) = Muzz',
37: 1:    '✅f(15) = FizzBuzz',
37: 1:    '✅f(16) = 16',
37: 1:    '✅f(17) = 17',
37: 1:    '✅f(21) = FizzMuzz',
37: 1:    '✅f(33) = FizzDuzz',
37: 1:    '✅f(35) = BuzzMuzz',
37: 1:    '✅f(39) = FizzCazz',
37: 1:    '✅f(49) = Muzz',
37: 1:    '✅f(55) = BuzzDuzz',
37: 1:    '✅f(65) = BuzzCazz',
37: 1:    '✅f(77) = MuzzDuzz',
37: 1:    '✅f(91) = MuzzCazz',
37: 1:    '✅f(105) = FizzBuzzMuzz',
37: 1:    '✅f(165) = FizzBuzzDuzz',
37: 1:    '✅f(195) = FizzBuzzCazz',
37: 1:    '✅f(231) = FizzMuzzDuzz',
37: 1:    '❌f(273) = ??? != FizzMuzzCazz'
37: 1:  ],
37: 1:  'level': 1,
37: 1:  'nextQuestion': '273',
37: 1:  'questions': [
37: 1:    '1',
37: 1:    '2',
37: 1:    '3',
37: 1:    '4',
37: 1:    '5',
37: 1:    '6',
37: 1:    '7',
37: 1:    '8',
37: 1:    '9',
37: 1:    '10',
37: 1:    '11',
37: 1:    '12',
37: 1:    '13',
37: 1:    '14',
37: 1:    '15',
37: 1:    '16',
37: 1:    '17',
37: 1:    '21',
37: 1:    '33',
37: 1:    '35',
37: 1:    '39',
37: 1:    '49',
37: 1:    '55',
37: 1:    '65',
37: 1:    '77',
37: 1:    '91',
37: 1:    '105',
37: 1:    '165',
37: 1:    '195',
37: 1:    '231',
37: 1:    '273'
37: 1:  ]
37: 1:}
37: 1:Scores: 35
37: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz']')
37: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
38: 1:BoardData {
38: 1:  'description': [
38: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
38: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
38: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
38: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
38: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
38: 1:    'Please write optimized code without any duplication.',
38: 1:    'For divider 11 - the word must be 'Duzz'.',
38: 1:    'For divider 13 - the word must be 'Cazz'.'
38: 1:  ],
38: 1:  'expectedAnswer': 'BuzzMuzzDuzz',
38: 1:  'history': [
38: 1:    {
38: 1:      'answer': '1',
38: 1:      'question': '1',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '2',
38: 1:      'question': '2',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Fizz',
38: 1:      'question': '3',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '4',
38: 1:      'question': '4',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Buzz',
38: 1:      'question': '5',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Fizz',
38: 1:      'question': '6',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Muzz',
38: 1:      'question': '7',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '8',
38: 1:      'question': '8',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Fizz',
38: 1:      'question': '9',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Buzz',
38: 1:      'question': '10',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Duzz',
38: 1:      'question': '11',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Fizz',
38: 1:      'question': '12',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Cazz',
38: 1:      'question': '13',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Muzz',
38: 1:      'question': '14',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzBuzz',
38: 1:      'question': '15',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '16',
38: 1:      'question': '16',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': '17',
38: 1:      'question': '17',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzMuzz',
38: 1:      'question': '21',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzDuzz',
38: 1:      'question': '33',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'BuzzMuzz',
38: 1:      'question': '35',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzCazz',
38: 1:      'question': '39',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'Muzz',
38: 1:      'question': '49',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'BuzzDuzz',
38: 1:      'question': '55',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'BuzzCazz',
38: 1:      'question': '65',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'MuzzDuzz',
38: 1:      'question': '77',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'MuzzCazz',
38: 1:      'question': '91',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzBuzzMuzz',
38: 1:      'question': '105',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzBuzzDuzz',
38: 1:      'question': '165',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzBuzzCazz',
38: 1:      'question': '195',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzMuzzDuzz',
38: 1:      'question': '231',
38: 1:      'valid': true
38: 1:    },
38: 1:    {
38: 1:      'answer': 'FizzMuzzCazz',
38: 1:      'question': '273',
38: 1:      'valid': true
38: 1:    }
38: 1:  ],
38: 1:  'info': [
38: 1:    '✅f(1) = 1',
38: 1:    '✅f(2) = 2',
38: 1:    '✅f(3) = Fizz',
38: 1:    '✅f(4) = 4',
38: 1:    '✅f(5) = Buzz',
38: 1:    '✅f(6) = Fizz',
38: 1:    '✅f(7) = Muzz',
38: 1:    '✅f(8) = 8',
38: 1:    '✅f(9) = Fizz',
38: 1:    '✅f(10) = Buzz',
38: 1:    '✅f(11) = Duzz',
38: 1:    '✅f(12) = Fizz',
38: 1:    '✅f(13) = Cazz',
38: 1:    '✅f(14) = Muzz',
38: 1:    '✅f(15) = FizzBuzz',
38: 1:    '✅f(16) = 16',
38: 1:    '✅f(17) = 17',
38: 1:    '✅f(21) = FizzMuzz',
38: 1:    '✅f(33) = FizzDuzz',
38: 1:    '✅f(35) = BuzzMuzz',
38: 1:    '✅f(39) = FizzCazz',
38: 1:    '✅f(49) = Muzz',
38: 1:    '✅f(55) = BuzzDuzz',
38: 1:    '✅f(65) = BuzzCazz',
38: 1:    '✅f(77) = MuzzDuzz',
38: 1:    '✅f(91) = MuzzCazz',
38: 1:    '✅f(105) = FizzBuzzMuzz',
38: 1:    '✅f(165) = FizzBuzzDuzz',
38: 1:    '✅f(195) = FizzBuzzCazz',
38: 1:    '✅f(231) = FizzMuzzDuzz',
38: 1:    '✅f(273) = FizzMuzzCazz',
38: 1:    '❌f(385) = ??? != BuzzMuzzDuzz'
38: 1:  ],
38: 1:  'level': 1,
38: 1:  'nextQuestion': '385',
38: 1:  'questions': [
38: 1:    '1',
38: 1:    '2',
38: 1:    '3',
38: 1:    '4',
38: 1:    '5',
38: 1:    '6',
38: 1:    '7',
38: 1:    '8',
38: 1:    '9',
38: 1:    '10',
38: 1:    '11',
38: 1:    '12',
38: 1:    '13',
38: 1:    '14',
38: 1:    '15',
38: 1:    '16',
38: 1:    '17',
38: 1:    '21',
38: 1:    '33',
38: 1:    '35',
38: 1:    '39',
38: 1:    '49',
38: 1:    '55',
38: 1:    '65',
38: 1:    '77',
38: 1:    '91',
38: 1:    '105',
38: 1:    '165',
38: 1:    '195',
38: 1:    '231',
38: 1:    '273',
38: 1:    '385'
38: 1:  ]
38: 1:}
38: 1:Scores: 36
38: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz']')
38: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
39: 1:BoardData {
39: 1:  'description': [
39: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
39: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
39: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
39: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
39: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
39: 1:    'Please write optimized code without any duplication.',
39: 1:    'For divider 11 - the word must be 'Duzz'.',
39: 1:    'For divider 13 - the word must be 'Cazz'.'
39: 1:  ],
39: 1:  'expectedAnswer': 'BuzzMuzzCazz',
39: 1:  'history': [
39: 1:    {
39: 1:      'answer': '1',
39: 1:      'question': '1',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '2',
39: 1:      'question': '2',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Fizz',
39: 1:      'question': '3',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '4',
39: 1:      'question': '4',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Buzz',
39: 1:      'question': '5',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Fizz',
39: 1:      'question': '6',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Muzz',
39: 1:      'question': '7',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '8',
39: 1:      'question': '8',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Fizz',
39: 1:      'question': '9',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Buzz',
39: 1:      'question': '10',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Duzz',
39: 1:      'question': '11',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Fizz',
39: 1:      'question': '12',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Cazz',
39: 1:      'question': '13',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Muzz',
39: 1:      'question': '14',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzBuzz',
39: 1:      'question': '15',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '16',
39: 1:      'question': '16',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': '17',
39: 1:      'question': '17',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzMuzz',
39: 1:      'question': '21',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzDuzz',
39: 1:      'question': '33',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'BuzzMuzz',
39: 1:      'question': '35',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzCazz',
39: 1:      'question': '39',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'Muzz',
39: 1:      'question': '49',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'BuzzDuzz',
39: 1:      'question': '55',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'BuzzCazz',
39: 1:      'question': '65',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'MuzzDuzz',
39: 1:      'question': '77',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'MuzzCazz',
39: 1:      'question': '91',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzBuzzMuzz',
39: 1:      'question': '105',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzBuzzDuzz',
39: 1:      'question': '165',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzBuzzCazz',
39: 1:      'question': '195',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzMuzzDuzz',
39: 1:      'question': '231',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'FizzMuzzCazz',
39: 1:      'question': '273',
39: 1:      'valid': true
39: 1:    },
39: 1:    {
39: 1:      'answer': 'BuzzMuzzDuzz',
39: 1:      'question': '385',
39: 1:      'valid': true
39: 1:    }
39: 1:  ],
39: 1:  'info': [
39: 1:    '✅f(1) = 1',
39: 1:    '✅f(2) = 2',
39: 1:    '✅f(3) = Fizz',
39: 1:    '✅f(4) = 4',
39: 1:    '✅f(5) = Buzz',
39: 1:    '✅f(6) = Fizz',
39: 1:    '✅f(7) = Muzz',
39: 1:    '✅f(8) = 8',
39: 1:    '✅f(9) = Fizz',
39: 1:    '✅f(10) = Buzz',
39: 1:    '✅f(11) = Duzz',
39: 1:    '✅f(12) = Fizz',
39: 1:    '✅f(13) = Cazz',
39: 1:    '✅f(14) = Muzz',
39: 1:    '✅f(15) = FizzBuzz',
39: 1:    '✅f(16) = 16',
39: 1:    '✅f(17) = 17',
39: 1:    '✅f(21) = FizzMuzz',
39: 1:    '✅f(33) = FizzDuzz',
39: 1:    '✅f(35) = BuzzMuzz',
39: 1:    '✅f(39) = FizzCazz',
39: 1:    '✅f(49) = Muzz',
39: 1:    '✅f(55) = BuzzDuzz',
39: 1:    '✅f(65) = BuzzCazz',
39: 1:    '✅f(77) = MuzzDuzz',
39: 1:    '✅f(91) = MuzzCazz',
39: 1:    '✅f(105) = FizzBuzzMuzz',
39: 1:    '✅f(165) = FizzBuzzDuzz',
39: 1:    '✅f(195) = FizzBuzzCazz',
39: 1:    '✅f(231) = FizzMuzzDuzz',
39: 1:    '✅f(273) = FizzMuzzCazz',
39: 1:    '✅f(385) = BuzzMuzzDuzz',
39: 1:    '❌f(455) = ??? != BuzzMuzzCazz'
39: 1:  ],
39: 1:  'level': 1,
39: 1:  'nextQuestion': '455',
39: 1:  'questions': [
39: 1:    '1',
39: 1:    '2',
39: 1:    '3',
39: 1:    '4',
39: 1:    '5',
39: 1:    '6',
39: 1:    '7',
39: 1:    '8',
39: 1:    '9',
39: 1:    '10',
39: 1:    '11',
39: 1:    '12',
39: 1:    '13',
39: 1:    '14',
39: 1:    '15',
39: 1:    '16',
39: 1:    '17',
39: 1:    '21',
39: 1:    '33',
39: 1:    '35',
39: 1:    '39',
39: 1:    '49',
39: 1:    '55',
39: 1:    '65',
39: 1:    '77',
39: 1:    '91',
39: 1:    '105',
39: 1:    '165',
39: 1:    '195',
39: 1:    '231',
39: 1:    '273',
39: 1:    '385',
39: 1:    '455'
39: 1:  ]
39: 1:}
39: 1:Scores: 37
39: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz']')
39: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
40: 1:BoardData {
40: 1:  'description': [
40: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
40: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
40: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
40: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
40: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
40: 1:    'Please write optimized code without any duplication.',
40: 1:    'For divider 11 - the word must be 'Duzz'.',
40: 1:    'For divider 13 - the word must be 'Cazz'.'
40: 1:  ],
40: 1:  'expectedAnswer': 'BuzzDuzzCazz',
40: 1:  'history': [
40: 1:    {
40: 1:      'answer': '1',
40: 1:      'question': '1',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '2',
40: 1:      'question': '2',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Fizz',
40: 1:      'question': '3',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '4',
40: 1:      'question': '4',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Buzz',
40: 1:      'question': '5',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Fizz',
40: 1:      'question': '6',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Muzz',
40: 1:      'question': '7',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '8',
40: 1:      'question': '8',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Fizz',
40: 1:      'question': '9',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Buzz',
40: 1:      'question': '10',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Duzz',
40: 1:      'question': '11',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Fizz',
40: 1:      'question': '12',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Cazz',
40: 1:      'question': '13',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Muzz',
40: 1:      'question': '14',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzBuzz',
40: 1:      'question': '15',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '16',
40: 1:      'question': '16',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': '17',
40: 1:      'question': '17',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzMuzz',
40: 1:      'question': '21',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzDuzz',
40: 1:      'question': '33',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzMuzz',
40: 1:      'question': '35',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzCazz',
40: 1:      'question': '39',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'Muzz',
40: 1:      'question': '49',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzDuzz',
40: 1:      'question': '55',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzCazz',
40: 1:      'question': '65',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'MuzzDuzz',
40: 1:      'question': '77',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'MuzzCazz',
40: 1:      'question': '91',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzBuzzMuzz',
40: 1:      'question': '105',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzBuzzDuzz',
40: 1:      'question': '165',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzBuzzCazz',
40: 1:      'question': '195',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzMuzzDuzz',
40: 1:      'question': '231',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'FizzMuzzCazz',
40: 1:      'question': '273',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzMuzzDuzz',
40: 1:      'question': '385',
40: 1:      'valid': true
40: 1:    },
40: 1:    {
40: 1:      'answer': 'BuzzMuzzCazz',
40: 1:      'question': '455',
40: 1:      'valid': true
40: 1:    }
40: 1:  ],
40: 1:  'info': [
40: 1:    '✅f(1) = 1',
40: 1:    '✅f(2) = 2',
40: 1:    '✅f(3) = Fizz',
40: 1:    '✅f(4) = 4',
40: 1:    '✅f(5) = Buzz',
40: 1:    '✅f(6) = Fizz',
40: 1:    '✅f(7) = Muzz',
40: 1:    '✅f(8) = 8',
40: 1:    '✅f(9) = Fizz',
40: 1:    '✅f(10) = Buzz',
40: 1:    '✅f(11) = Duzz',
40: 1:    '✅f(12) = Fizz',
40: 1:    '✅f(13) = Cazz',
40: 1:    '✅f(14) = Muzz',
40: 1:    '✅f(15) = FizzBuzz',
40: 1:    '✅f(16) = 16',
40: 1:    '✅f(17) = 17',
40: 1:    '✅f(21) = FizzMuzz',
40: 1:    '✅f(33) = FizzDuzz',
40: 1:    '✅f(35) = BuzzMuzz',
40: 1:    '✅f(39) = FizzCazz',
40: 1:    '✅f(49) = Muzz',
40: 1:    '✅f(55) = BuzzDuzz',
40: 1:    '✅f(65) = BuzzCazz',
40: 1:    '✅f(77) = MuzzDuzz',
40: 1:    '✅f(91) = MuzzCazz',
40: 1:    '✅f(105) = FizzBuzzMuzz',
40: 1:    '✅f(165) = FizzBuzzDuzz',
40: 1:    '✅f(195) = FizzBuzzCazz',
40: 1:    '✅f(231) = FizzMuzzDuzz',
40: 1:    '✅f(273) = FizzMuzzCazz',
40: 1:    '✅f(385) = BuzzMuzzDuzz',
40: 1:    '✅f(455) = BuzzMuzzCazz',
40: 1:    '❌f(715) = ??? != BuzzDuzzCazz'
40: 1:  ],
40: 1:  'level': 1,
40: 1:  'nextQuestion': '715',
40: 1:  'questions': [
40: 1:    '1',
40: 1:    '2',
40: 1:    '3',
40: 1:    '4',
40: 1:    '5',
40: 1:    '6',
40: 1:    '7',
40: 1:    '8',
40: 1:    '9',
40: 1:    '10',
40: 1:    '11',
40: 1:    '12',
40: 1:    '13',
40: 1:    '14',
40: 1:    '15',
40: 1:    '16',
40: 1:    '17',
40: 1:    '21',
40: 1:    '33',
40: 1:    '35',
40: 1:    '39',
40: 1:    '49',
40: 1:    '55',
40: 1:    '65',
40: 1:    '77',
40: 1:    '91',
40: 1:    '105',
40: 1:    '165',
40: 1:    '195',
40: 1:    '231',
40: 1:    '273',
40: 1:    '385',
40: 1:    '455',
40: 1:    '715'
40: 1:  ]
40: 1:}
40: 1:Scores: 38
40: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz']')
40: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
41: 1:BoardData {
41: 1:  'description': [
41: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
41: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
41: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
41: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
41: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
41: 1:    'Please write optimized code without any duplication.',
41: 1:    'For divider 11 - the word must be 'Duzz'.',
41: 1:    'For divider 13 - the word must be 'Cazz'.'
41: 1:  ],
41: 1:  'expectedAnswer': 'MuzzDuzzCazz',
41: 1:  'history': [
41: 1:    {
41: 1:      'answer': '1',
41: 1:      'question': '1',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '2',
41: 1:      'question': '2',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Fizz',
41: 1:      'question': '3',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '4',
41: 1:      'question': '4',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Buzz',
41: 1:      'question': '5',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Fizz',
41: 1:      'question': '6',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Muzz',
41: 1:      'question': '7',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '8',
41: 1:      'question': '8',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Fizz',
41: 1:      'question': '9',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Buzz',
41: 1:      'question': '10',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Duzz',
41: 1:      'question': '11',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Fizz',
41: 1:      'question': '12',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Cazz',
41: 1:      'question': '13',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Muzz',
41: 1:      'question': '14',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzBuzz',
41: 1:      'question': '15',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '16',
41: 1:      'question': '16',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': '17',
41: 1:      'question': '17',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzMuzz',
41: 1:      'question': '21',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzDuzz',
41: 1:      'question': '33',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzMuzz',
41: 1:      'question': '35',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzCazz',
41: 1:      'question': '39',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'Muzz',
41: 1:      'question': '49',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzDuzz',
41: 1:      'question': '55',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzCazz',
41: 1:      'question': '65',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'MuzzDuzz',
41: 1:      'question': '77',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'MuzzCazz',
41: 1:      'question': '91',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzBuzzMuzz',
41: 1:      'question': '105',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzBuzzDuzz',
41: 1:      'question': '165',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzBuzzCazz',
41: 1:      'question': '195',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzMuzzDuzz',
41: 1:      'question': '231',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'FizzMuzzCazz',
41: 1:      'question': '273',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzMuzzDuzz',
41: 1:      'question': '385',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzMuzzCazz',
41: 1:      'question': '455',
41: 1:      'valid': true
41: 1:    },
41: 1:    {
41: 1:      'answer': 'BuzzDuzzCazz',
41: 1:      'question': '715',
41: 1:      'valid': true
41: 1:    }
41: 1:  ],
41: 1:  'info': [
41: 1:    '✅f(1) = 1',
41: 1:    '✅f(2) = 2',
41: 1:    '✅f(3) = Fizz',
41: 1:    '✅f(4) = 4',
41: 1:    '✅f(5) = Buzz',
41: 1:    '✅f(6) = Fizz',
41: 1:    '✅f(7) = Muzz',
41: 1:    '✅f(8) = 8',
41: 1:    '✅f(9) = Fizz',
41: 1:    '✅f(10) = Buzz',
41: 1:    '✅f(11) = Duzz',
41: 1:    '✅f(12) = Fizz',
41: 1:    '✅f(13) = Cazz',
41: 1:    '✅f(14) = Muzz',
41: 1:    '✅f(15) = FizzBuzz',
41: 1:    '✅f(16) = 16',
41: 1:    '✅f(17) = 17',
41: 1:    '✅f(21) = FizzMuzz',
41: 1:    '✅f(33) = FizzDuzz',
41: 1:    '✅f(35) = BuzzMuzz',
41: 1:    '✅f(39) = FizzCazz',
41: 1:    '✅f(49) = Muzz',
41: 1:    '✅f(55) = BuzzDuzz',
41: 1:    '✅f(65) = BuzzCazz',
41: 1:    '✅f(77) = MuzzDuzz',
41: 1:    '✅f(91) = MuzzCazz',
41: 1:    '✅f(105) = FizzBuzzMuzz',
41: 1:    '✅f(165) = FizzBuzzDuzz',
41: 1:    '✅f(195) = FizzBuzzCazz',
41: 1:    '✅f(231) = FizzMuzzDuzz',
41: 1:    '✅f(273) = FizzMuzzCazz',
41: 1:    '✅f(385) = BuzzMuzzDuzz',
41: 1:    '✅f(455) = BuzzMuzzCazz',
41: 1:    '✅f(715) = BuzzDuzzCazz',
41: 1:    '❌f(1001) = ??? != MuzzDuzzCazz'
41: 1:  ],
41: 1:  'level': 1,
41: 1:  'nextQuestion': '1001',
41: 1:  'questions': [
41: 1:    '1',
41: 1:    '2',
41: 1:    '3',
41: 1:    '4',
41: 1:    '5',
41: 1:    '6',
41: 1:    '7',
41: 1:    '8',
41: 1:    '9',
41: 1:    '10',
41: 1:    '11',
41: 1:    '12',
41: 1:    '13',
41: 1:    '14',
41: 1:    '15',
41: 1:    '16',
41: 1:    '17',
41: 1:    '21',
41: 1:    '33',
41: 1:    '35',
41: 1:    '39',
41: 1:    '49',
41: 1:    '55',
41: 1:    '65',
41: 1:    '77',
41: 1:    '91',
41: 1:    '105',
41: 1:    '165',
41: 1:    '195',
41: 1:    '231',
41: 1:    '273',
41: 1:    '385',
41: 1:    '455',
41: 1:    '715',
41: 1:    '1001'
41: 1:  ]
41: 1:}
41: 1:Scores: 39
41: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz']')
41: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
42: 1:BoardData {
42: 1:  'description': [
42: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
42: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
42: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
42: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
42: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
42: 1:    'Please write optimized code without any duplication.',
42: 1:    'For divider 11 - the word must be 'Duzz'.',
42: 1:    'For divider 13 - the word must be 'Cazz'.'
42: 1:  ],
42: 1:  'expectedAnswer': 'FizzBuzzMuzzDuzz',
42: 1:  'history': [
42: 1:    {
42: 1:      'answer': '1',
42: 1:      'question': '1',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '2',
42: 1:      'question': '2',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Fizz',
42: 1:      'question': '3',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '4',
42: 1:      'question': '4',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Buzz',
42: 1:      'question': '5',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Fizz',
42: 1:      'question': '6',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Muzz',
42: 1:      'question': '7',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '8',
42: 1:      'question': '8',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Fizz',
42: 1:      'question': '9',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Buzz',
42: 1:      'question': '10',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Duzz',
42: 1:      'question': '11',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Fizz',
42: 1:      'question': '12',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Cazz',
42: 1:      'question': '13',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Muzz',
42: 1:      'question': '14',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzBuzz',
42: 1:      'question': '15',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '16',
42: 1:      'question': '16',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': '17',
42: 1:      'question': '17',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzMuzz',
42: 1:      'question': '21',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzDuzz',
42: 1:      'question': '33',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzMuzz',
42: 1:      'question': '35',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzCazz',
42: 1:      'question': '39',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'Muzz',
42: 1:      'question': '49',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzDuzz',
42: 1:      'question': '55',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzCazz',
42: 1:      'question': '65',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'MuzzDuzz',
42: 1:      'question': '77',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'MuzzCazz',
42: 1:      'question': '91',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzBuzzMuzz',
42: 1:      'question': '105',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzBuzzDuzz',
42: 1:      'question': '165',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzBuzzCazz',
42: 1:      'question': '195',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzMuzzDuzz',
42: 1:      'question': '231',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'FizzMuzzCazz',
42: 1:      'question': '273',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzMuzzDuzz',
42: 1:      'question': '385',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzMuzzCazz',
42: 1:      'question': '455',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'BuzzDuzzCazz',
42: 1:      'question': '715',
42: 1:      'valid': true
42: 1:    },
42: 1:    {
42: 1:      'answer': 'MuzzDuzzCazz',
42: 1:      'question': '1001',
42: 1:      'valid': true
42: 1:    }
42: 1:  ],
42: 1:  'info': [
42: 1:    '✅f(1) = 1',
42: 1:    '✅f(2) = 2',
42: 1:    '✅f(3) = Fizz',
42: 1:    '✅f(4) = 4',
42: 1:    '✅f(5) = Buzz',
42: 1:    '✅f(6) = Fizz',
42: 1:    '✅f(7) = Muzz',
42: 1:    '✅f(8) = 8',
42: 1:    '✅f(9) = Fizz',
42: 1:    '✅f(10) = Buzz',
42: 1:    '✅f(11) = Duzz',
42: 1:    '✅f(12) = Fizz',
42: 1:    '✅f(13) = Cazz',
42: 1:    '✅f(14) = Muzz',
42: 1:    '✅f(15) = FizzBuzz',
42: 1:    '✅f(16) = 16',
42: 1:    '✅f(17) = 17',
42: 1:    '✅f(21) = FizzMuzz',
42: 1:    '✅f(33) = FizzDuzz',
42: 1:    '✅f(35) = BuzzMuzz',
42: 1:    '✅f(39) = FizzCazz',
42: 1:    '✅f(49) = Muzz',
42: 1:    '✅f(55) = BuzzDuzz',
42: 1:    '✅f(65) = BuzzCazz',
42: 1:    '✅f(77) = MuzzDuzz',
42: 1:    '✅f(91) = MuzzCazz',
42: 1:    '✅f(105) = FizzBuzzMuzz',
42: 1:    '✅f(165) = FizzBuzzDuzz',
42: 1:    '✅f(195) = FizzBuzzCazz',
42: 1:    '✅f(231) = FizzMuzzDuzz',
42: 1:    '✅f(273) = FizzMuzzCazz',
42: 1:    '✅f(385) = BuzzMuzzDuzz',
42: 1:    '✅f(455) = BuzzMuzzCazz',
42: 1:    '✅f(715) = BuzzDuzzCazz',
42: 1:    '✅f(1001) = MuzzDuzzCazz',
42: 1:    '❌f(1155) = ??? != FizzBuzzMuzzDuzz'
42: 1:  ],
42: 1:  'level': 1,
42: 1:  'nextQuestion': '1155',
42: 1:  'questions': [
42: 1:    '1',
42: 1:    '2',
42: 1:    '3',
42: 1:    '4',
42: 1:    '5',
42: 1:    '6',
42: 1:    '7',
42: 1:    '8',
42: 1:    '9',
42: 1:    '10',
42: 1:    '11',
42: 1:    '12',
42: 1:    '13',
42: 1:    '14',
42: 1:    '15',
42: 1:    '16',
42: 1:    '17',
42: 1:    '21',
42: 1:    '33',
42: 1:    '35',
42: 1:    '39',
42: 1:    '49',
42: 1:    '55',
42: 1:    '65',
42: 1:    '77',
42: 1:    '91',
42: 1:    '105',
42: 1:    '165',
42: 1:    '195',
42: 1:    '231',
42: 1:    '273',
42: 1:    '385',
42: 1:    '455',
42: 1:    '715',
42: 1:    '1001',
42: 1:    '1155'
42: 1:  ]
42: 1:}
42: 1:Scores: 40
42: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz']')
42: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
43: 1:BoardData {
43: 1:  'description': [
43: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
43: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
43: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
43: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
43: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
43: 1:    'Please write optimized code without any duplication.',
43: 1:    'For divider 11 - the word must be 'Duzz'.',
43: 1:    'For divider 13 - the word must be 'Cazz'.'
43: 1:  ],
43: 1:  'expectedAnswer': 'FizzBuzzMuzzCazz',
43: 1:  'history': [
43: 1:    {
43: 1:      'answer': '1',
43: 1:      'question': '1',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '2',
43: 1:      'question': '2',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Fizz',
43: 1:      'question': '3',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '4',
43: 1:      'question': '4',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Buzz',
43: 1:      'question': '5',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Fizz',
43: 1:      'question': '6',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Muzz',
43: 1:      'question': '7',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '8',
43: 1:      'question': '8',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Fizz',
43: 1:      'question': '9',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Buzz',
43: 1:      'question': '10',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Duzz',
43: 1:      'question': '11',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Fizz',
43: 1:      'question': '12',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Cazz',
43: 1:      'question': '13',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Muzz',
43: 1:      'question': '14',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzz',
43: 1:      'question': '15',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '16',
43: 1:      'question': '16',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': '17',
43: 1:      'question': '17',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzMuzz',
43: 1:      'question': '21',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzDuzz',
43: 1:      'question': '33',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzMuzz',
43: 1:      'question': '35',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzCazz',
43: 1:      'question': '39',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'Muzz',
43: 1:      'question': '49',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzDuzz',
43: 1:      'question': '55',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzCazz',
43: 1:      'question': '65',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'MuzzDuzz',
43: 1:      'question': '77',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'MuzzCazz',
43: 1:      'question': '91',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzzMuzz',
43: 1:      'question': '105',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzzDuzz',
43: 1:      'question': '165',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzzCazz',
43: 1:      'question': '195',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzMuzzDuzz',
43: 1:      'question': '231',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzMuzzCazz',
43: 1:      'question': '273',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzMuzzDuzz',
43: 1:      'question': '385',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzMuzzCazz',
43: 1:      'question': '455',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'BuzzDuzzCazz',
43: 1:      'question': '715',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'MuzzDuzzCazz',
43: 1:      'question': '1001',
43: 1:      'valid': true
43: 1:    },
43: 1:    {
43: 1:      'answer': 'FizzBuzzMuzzDuzz',
43: 1:      'question': '1155',
43: 1:      'valid': true
43: 1:    }
43: 1:  ],
43: 1:  'info': [
43: 1:    '✅f(1) = 1',
43: 1:    '✅f(2) = 2',
43: 1:    '✅f(3) = Fizz',
43: 1:    '✅f(4) = 4',
43: 1:    '✅f(5) = Buzz',
43: 1:    '✅f(6) = Fizz',
43: 1:    '✅f(7) = Muzz',
43: 1:    '✅f(8) = 8',
43: 1:    '✅f(9) = Fizz',
43: 1:    '✅f(10) = Buzz',
43: 1:    '✅f(11) = Duzz',
43: 1:    '✅f(12) = Fizz',
43: 1:    '✅f(13) = Cazz',
43: 1:    '✅f(14) = Muzz',
43: 1:    '✅f(15) = FizzBuzz',
43: 1:    '✅f(16) = 16',
43: 1:    '✅f(17) = 17',
43: 1:    '✅f(21) = FizzMuzz',
43: 1:    '✅f(33) = FizzDuzz',
43: 1:    '✅f(35) = BuzzMuzz',
43: 1:    '✅f(39) = FizzCazz',
43: 1:    '✅f(49) = Muzz',
43: 1:    '✅f(55) = BuzzDuzz',
43: 1:    '✅f(65) = BuzzCazz',
43: 1:    '✅f(77) = MuzzDuzz',
43: 1:    '✅f(91) = MuzzCazz',
43: 1:    '✅f(105) = FizzBuzzMuzz',
43: 1:    '✅f(165) = FizzBuzzDuzz',
43: 1:    '✅f(195) = FizzBuzzCazz',
43: 1:    '✅f(231) = FizzMuzzDuzz',
43: 1:    '✅f(273) = FizzMuzzCazz',
43: 1:    '✅f(385) = BuzzMuzzDuzz',
43: 1:    '✅f(455) = BuzzMuzzCazz',
43: 1:    '✅f(715) = BuzzDuzzCazz',
43: 1:    '✅f(1001) = MuzzDuzzCazz',
43: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
43: 1:    '❌f(1365) = ??? != FizzBuzzMuzzCazz'
43: 1:  ],
43: 1:  'level': 1,
43: 1:  'nextQuestion': '1365',
43: 1:  'questions': [
43: 1:    '1',
43: 1:    '2',
43: 1:    '3',
43: 1:    '4',
43: 1:    '5',
43: 1:    '6',
43: 1:    '7',
43: 1:    '8',
43: 1:    '9',
43: 1:    '10',
43: 1:    '11',
43: 1:    '12',
43: 1:    '13',
43: 1:    '14',
43: 1:    '15',
43: 1:    '16',
43: 1:    '17',
43: 1:    '21',
43: 1:    '33',
43: 1:    '35',
43: 1:    '39',
43: 1:    '49',
43: 1:    '55',
43: 1:    '65',
43: 1:    '77',
43: 1:    '91',
43: 1:    '105',
43: 1:    '165',
43: 1:    '195',
43: 1:    '231',
43: 1:    '273',
43: 1:    '385',
43: 1:    '455',
43: 1:    '715',
43: 1:    '1001',
43: 1:    '1155',
43: 1:    '1365'
43: 1:  ]
43: 1:}
43: 1:Scores: 41
43: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz']')
43: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
44: 1:BoardData {
44: 1:  'description': [
44: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
44: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
44: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
44: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
44: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
44: 1:    'Please write optimized code without any duplication.',
44: 1:    'For divider 11 - the word must be 'Duzz'.',
44: 1:    'For divider 13 - the word must be 'Cazz'.'
44: 1:  ],
44: 1:  'expectedAnswer': 'FizzBuzzDuzzCazz',
44: 1:  'history': [
44: 1:    {
44: 1:      'answer': '1',
44: 1:      'question': '1',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '2',
44: 1:      'question': '2',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Fizz',
44: 1:      'question': '3',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '4',
44: 1:      'question': '4',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Buzz',
44: 1:      'question': '5',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Fizz',
44: 1:      'question': '6',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Muzz',
44: 1:      'question': '7',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '8',
44: 1:      'question': '8',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Fizz',
44: 1:      'question': '9',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Buzz',
44: 1:      'question': '10',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Duzz',
44: 1:      'question': '11',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Fizz',
44: 1:      'question': '12',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Cazz',
44: 1:      'question': '13',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Muzz',
44: 1:      'question': '14',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzz',
44: 1:      'question': '15',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '16',
44: 1:      'question': '16',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': '17',
44: 1:      'question': '17',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzMuzz',
44: 1:      'question': '21',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzDuzz',
44: 1:      'question': '33',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzMuzz',
44: 1:      'question': '35',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzCazz',
44: 1:      'question': '39',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'Muzz',
44: 1:      'question': '49',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzDuzz',
44: 1:      'question': '55',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzCazz',
44: 1:      'question': '65',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'MuzzDuzz',
44: 1:      'question': '77',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'MuzzCazz',
44: 1:      'question': '91',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzMuzz',
44: 1:      'question': '105',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzDuzz',
44: 1:      'question': '165',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzCazz',
44: 1:      'question': '195',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzMuzzDuzz',
44: 1:      'question': '231',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzMuzzCazz',
44: 1:      'question': '273',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzMuzzDuzz',
44: 1:      'question': '385',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzMuzzCazz',
44: 1:      'question': '455',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'BuzzDuzzCazz',
44: 1:      'question': '715',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'MuzzDuzzCazz',
44: 1:      'question': '1001',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzMuzzDuzz',
44: 1:      'question': '1155',
44: 1:      'valid': true
44: 1:    },
44: 1:    {
44: 1:      'answer': 'FizzBuzzMuzzCazz',
44: 1:      'question': '1365',
44: 1:      'valid': true
44: 1:    }
44: 1:  ],
44: 1:  'info': [
44: 1:    '✅f(1) = 1',
44: 1:    '✅f(2) = 2',
44: 1:    '✅f(3) = Fizz',
44: 1:    '✅f(4) = 4',
44: 1:    '✅f(5) = Buzz',
44: 1:    '✅f(6) = Fizz',
44: 1:    '✅f(7) = Muzz',
44: 1:    '✅f(8) = 8',
44: 1:    '✅f(9) = Fizz',
44: 1:    '✅f(10) = Buzz',
44: 1:    '✅f(11) = Duzz',
44: 1:    '✅f(12) = Fizz',
44: 1:    '✅f(13) = Cazz',
44: 1:    '✅f(14) = Muzz',
44: 1:    '✅f(15) = FizzBuzz',
44: 1:    '✅f(16) = 16',
44: 1:    '✅f(17) = 17',
44: 1:    '✅f(21) = FizzMuzz',
44: 1:    '✅f(33) = FizzDuzz',
44: 1:    '✅f(35) = BuzzMuzz',
44: 1:    '✅f(39) = FizzCazz',
44: 1:    '✅f(49) = Muzz',
44: 1:    '✅f(55) = BuzzDuzz',
44: 1:    '✅f(65) = BuzzCazz',
44: 1:    '✅f(77) = MuzzDuzz',
44: 1:    '✅f(91) = MuzzCazz',
44: 1:    '✅f(105) = FizzBuzzMuzz',
44: 1:    '✅f(165) = FizzBuzzDuzz',
44: 1:    '✅f(195) = FizzBuzzCazz',
44: 1:    '✅f(231) = FizzMuzzDuzz',
44: 1:    '✅f(273) = FizzMuzzCazz',
44: 1:    '✅f(385) = BuzzMuzzDuzz',
44: 1:    '✅f(455) = BuzzMuzzCazz',
44: 1:    '✅f(715) = BuzzDuzzCazz',
44: 1:    '✅f(1001) = MuzzDuzzCazz',
44: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
44: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
44: 1:    '❌f(2145) = ??? != FizzBuzzDuzzCazz'
44: 1:  ],
44: 1:  'level': 1,
44: 1:  'nextQuestion': '2145',
44: 1:  'questions': [
44: 1:    '1',
44: 1:    '2',
44: 1:    '3',
44: 1:    '4',
44: 1:    '5',
44: 1:    '6',
44: 1:    '7',
44: 1:    '8',
44: 1:    '9',
44: 1:    '10',
44: 1:    '11',
44: 1:    '12',
44: 1:    '13',
44: 1:    '14',
44: 1:    '15',
44: 1:    '16',
44: 1:    '17',
44: 1:    '21',
44: 1:    '33',
44: 1:    '35',
44: 1:    '39',
44: 1:    '49',
44: 1:    '55',
44: 1:    '65',
44: 1:    '77',
44: 1:    '91',
44: 1:    '105',
44: 1:    '165',
44: 1:    '195',
44: 1:    '231',
44: 1:    '273',
44: 1:    '385',
44: 1:    '455',
44: 1:    '715',
44: 1:    '1001',
44: 1:    '1155',
44: 1:    '1365',
44: 1:    '2145'
44: 1:  ]
44: 1:}
44: 1:Scores: 42
44: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz', 'FizzBuzzDuzzCazz']')
44: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
45: 1:BoardData {
45: 1:  'description': [
45: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
45: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
45: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
45: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
45: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
45: 1:    'Please write optimized code without any duplication.',
45: 1:    'For divider 11 - the word must be 'Duzz'.',
45: 1:    'For divider 13 - the word must be 'Cazz'.'
45: 1:  ],
45: 1:  'expectedAnswer': 'FizzMuzzDuzzCazz',
45: 1:  'history': [
45: 1:    {
45: 1:      'answer': '1',
45: 1:      'question': '1',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '2',
45: 1:      'question': '2',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Fizz',
45: 1:      'question': '3',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '4',
45: 1:      'question': '4',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Buzz',
45: 1:      'question': '5',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Fizz',
45: 1:      'question': '6',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Muzz',
45: 1:      'question': '7',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '8',
45: 1:      'question': '8',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Fizz',
45: 1:      'question': '9',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Buzz',
45: 1:      'question': '10',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Duzz',
45: 1:      'question': '11',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Fizz',
45: 1:      'question': '12',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Cazz',
45: 1:      'question': '13',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Muzz',
45: 1:      'question': '14',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzz',
45: 1:      'question': '15',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '16',
45: 1:      'question': '16',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': '17',
45: 1:      'question': '17',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzMuzz',
45: 1:      'question': '21',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzDuzz',
45: 1:      'question': '33',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzMuzz',
45: 1:      'question': '35',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzCazz',
45: 1:      'question': '39',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'Muzz',
45: 1:      'question': '49',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzDuzz',
45: 1:      'question': '55',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzCazz',
45: 1:      'question': '65',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'MuzzDuzz',
45: 1:      'question': '77',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'MuzzCazz',
45: 1:      'question': '91',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzMuzz',
45: 1:      'question': '105',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzDuzz',
45: 1:      'question': '165',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzCazz',
45: 1:      'question': '195',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzMuzzDuzz',
45: 1:      'question': '231',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzMuzzCazz',
45: 1:      'question': '273',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzMuzzDuzz',
45: 1:      'question': '385',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzMuzzCazz',
45: 1:      'question': '455',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'BuzzDuzzCazz',
45: 1:      'question': '715',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'MuzzDuzzCazz',
45: 1:      'question': '1001',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzMuzzDuzz',
45: 1:      'question': '1155',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzMuzzCazz',
45: 1:      'question': '1365',
45: 1:      'valid': true
45: 1:    },
45: 1:    {
45: 1:      'answer': 'FizzBuzzDuzzCazz',
45: 1:      'question': '2145',
45: 1:      'valid': true
45: 1:    }
45: 1:  ],
45: 1:  'info': [
45: 1:    '✅f(1) = 1',
45: 1:    '✅f(2) = 2',
45: 1:    '✅f(3) = Fizz',
45: 1:    '✅f(4) = 4',
45: 1:    '✅f(5) = Buzz',
45: 1:    '✅f(6) = Fizz',
45: 1:    '✅f(7) = Muzz',
45: 1:    '✅f(8) = 8',
45: 1:    '✅f(9) = Fizz',
45: 1:    '✅f(10) = Buzz',
45: 1:    '✅f(11) = Duzz',
45: 1:    '✅f(12) = Fizz',
45: 1:    '✅f(13) = Cazz',
45: 1:    '✅f(14) = Muzz',
45: 1:    '✅f(15) = FizzBuzz',
45: 1:    '✅f(16) = 16',
45: 1:    '✅f(17) = 17',
45: 1:    '✅f(21) = FizzMuzz',
45: 1:    '✅f(33) = FizzDuzz',
45: 1:    '✅f(35) = BuzzMuzz',
45: 1:    '✅f(39) = FizzCazz',
45: 1:    '✅f(49) = Muzz',
45: 1:    '✅f(55) = BuzzDuzz',
45: 1:    '✅f(65) = BuzzCazz',
45: 1:    '✅f(77) = MuzzDuzz',
45: 1:    '✅f(91) = MuzzCazz',
45: 1:    '✅f(105) = FizzBuzzMuzz',
45: 1:    '✅f(165) = FizzBuzzDuzz',
45: 1:    '✅f(195) = FizzBuzzCazz',
45: 1:    '✅f(231) = FizzMuzzDuzz',
45: 1:    '✅f(273) = FizzMuzzCazz',
45: 1:    '✅f(385) = BuzzMuzzDuzz',
45: 1:    '✅f(455) = BuzzMuzzCazz',
45: 1:    '✅f(715) = BuzzDuzzCazz',
45: 1:    '✅f(1001) = MuzzDuzzCazz',
45: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
45: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
45: 1:    '✅f(2145) = FizzBuzzDuzzCazz',
45: 1:    '❌f(3003) = ??? != FizzMuzzDuzzCazz'
45: 1:  ],
45: 1:  'level': 1,
45: 1:  'nextQuestion': '3003',
45: 1:  'questions': [
45: 1:    '1',
45: 1:    '2',
45: 1:    '3',
45: 1:    '4',
45: 1:    '5',
45: 1:    '6',
45: 1:    '7',
45: 1:    '8',
45: 1:    '9',
45: 1:    '10',
45: 1:    '11',
45: 1:    '12',
45: 1:    '13',
45: 1:    '14',
45: 1:    '15',
45: 1:    '16',
45: 1:    '17',
45: 1:    '21',
45: 1:    '33',
45: 1:    '35',
45: 1:    '39',
45: 1:    '49',
45: 1:    '55',
45: 1:    '65',
45: 1:    '77',
45: 1:    '91',
45: 1:    '105',
45: 1:    '165',
45: 1:    '195',
45: 1:    '231',
45: 1:    '273',
45: 1:    '385',
45: 1:    '455',
45: 1:    '715',
45: 1:    '1001',
45: 1:    '1155',
45: 1:    '1365',
45: 1:    '2145',
45: 1:    '3003'
45: 1:  ]
45: 1:}
45: 1:Scores: 43
45: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz', 'FizzBuzzDuzzCazz', 'FizzMuzzDuzzCazz']')
45: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
46: 1:BoardData {
46: 1:  'description': [
46: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
46: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
46: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
46: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
46: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
46: 1:    'Please write optimized code without any duplication.',
46: 1:    'For divider 11 - the word must be 'Duzz'.',
46: 1:    'For divider 13 - the word must be 'Cazz'.'
46: 1:  ],
46: 1:  'expectedAnswer': 'BuzzMuzzDuzzCazz',
46: 1:  'history': [
46: 1:    {
46: 1:      'answer': '1',
46: 1:      'question': '1',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '2',
46: 1:      'question': '2',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Fizz',
46: 1:      'question': '3',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '4',
46: 1:      'question': '4',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Buzz',
46: 1:      'question': '5',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Fizz',
46: 1:      'question': '6',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Muzz',
46: 1:      'question': '7',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '8',
46: 1:      'question': '8',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Fizz',
46: 1:      'question': '9',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Buzz',
46: 1:      'question': '10',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Duzz',
46: 1:      'question': '11',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Fizz',
46: 1:      'question': '12',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Cazz',
46: 1:      'question': '13',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Muzz',
46: 1:      'question': '14',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzz',
46: 1:      'question': '15',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '16',
46: 1:      'question': '16',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': '17',
46: 1:      'question': '17',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzMuzz',
46: 1:      'question': '21',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzDuzz',
46: 1:      'question': '33',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzMuzz',
46: 1:      'question': '35',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzCazz',
46: 1:      'question': '39',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'Muzz',
46: 1:      'question': '49',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzDuzz',
46: 1:      'question': '55',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzCazz',
46: 1:      'question': '65',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'MuzzDuzz',
46: 1:      'question': '77',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'MuzzCazz',
46: 1:      'question': '91',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzMuzz',
46: 1:      'question': '105',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzDuzz',
46: 1:      'question': '165',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzCazz',
46: 1:      'question': '195',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzMuzzDuzz',
46: 1:      'question': '231',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzMuzzCazz',
46: 1:      'question': '273',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzMuzzDuzz',
46: 1:      'question': '385',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzMuzzCazz',
46: 1:      'question': '455',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'BuzzDuzzCazz',
46: 1:      'question': '715',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'MuzzDuzzCazz',
46: 1:      'question': '1001',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzMuzzDuzz',
46: 1:      'question': '1155',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzMuzzCazz',
46: 1:      'question': '1365',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzBuzzDuzzCazz',
46: 1:      'question': '2145',
46: 1:      'valid': true
46: 1:    },
46: 1:    {
46: 1:      'answer': 'FizzMuzzDuzzCazz',
46: 1:      'question': '3003',
46: 1:      'valid': true
46: 1:    }
46: 1:  ],
46: 1:  'info': [
46: 1:    '✅f(1) = 1',
46: 1:    '✅f(2) = 2',
46: 1:    '✅f(3) = Fizz',
46: 1:    '✅f(4) = 4',
46: 1:    '✅f(5) = Buzz',
46: 1:    '✅f(6) = Fizz',
46: 1:    '✅f(7) = Muzz',
46: 1:    '✅f(8) = 8',
46: 1:    '✅f(9) = Fizz',
46: 1:    '✅f(10) = Buzz',
46: 1:    '✅f(11) = Duzz',
46: 1:    '✅f(12) = Fizz',
46: 1:    '✅f(13) = Cazz',
46: 1:    '✅f(14) = Muzz',
46: 1:    '✅f(15) = FizzBuzz',
46: 1:    '✅f(16) = 16',
46: 1:    '✅f(17) = 17',
46: 1:    '✅f(21) = FizzMuzz',
46: 1:    '✅f(33) = FizzDuzz',
46: 1:    '✅f(35) = BuzzMuzz',
46: 1:    '✅f(39) = FizzCazz',
46: 1:    '✅f(49) = Muzz',
46: 1:    '✅f(55) = BuzzDuzz',
46: 1:    '✅f(65) = BuzzCazz',
46: 1:    '✅f(77) = MuzzDuzz',
46: 1:    '✅f(91) = MuzzCazz',
46: 1:    '✅f(105) = FizzBuzzMuzz',
46: 1:    '✅f(165) = FizzBuzzDuzz',
46: 1:    '✅f(195) = FizzBuzzCazz',
46: 1:    '✅f(231) = FizzMuzzDuzz',
46: 1:    '✅f(273) = FizzMuzzCazz',
46: 1:    '✅f(385) = BuzzMuzzDuzz',
46: 1:    '✅f(455) = BuzzMuzzCazz',
46: 1:    '✅f(715) = BuzzDuzzCazz',
46: 1:    '✅f(1001) = MuzzDuzzCazz',
46: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
46: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
46: 1:    '✅f(2145) = FizzBuzzDuzzCazz',
46: 1:    '✅f(3003) = FizzMuzzDuzzCazz',
46: 1:    '❌f(5005) = ??? != BuzzMuzzDuzzCazz'
46: 1:  ],
46: 1:  'level': 1,
46: 1:  'nextQuestion': '5005',
46: 1:  'questions': [
46: 1:    '1',
46: 1:    '2',
46: 1:    '3',
46: 1:    '4',
46: 1:    '5',
46: 1:    '6',
46: 1:    '7',
46: 1:    '8',
46: 1:    '9',
46: 1:    '10',
46: 1:    '11',
46: 1:    '12',
46: 1:    '13',
46: 1:    '14',
46: 1:    '15',
46: 1:    '16',
46: 1:    '17',
46: 1:    '21',
46: 1:    '33',
46: 1:    '35',
46: 1:    '39',
46: 1:    '49',
46: 1:    '55',
46: 1:    '65',
46: 1:    '77',
46: 1:    '91',
46: 1:    '105',
46: 1:    '165',
46: 1:    '195',
46: 1:    '231',
46: 1:    '273',
46: 1:    '385',
46: 1:    '455',
46: 1:    '715',
46: 1:    '1001',
46: 1:    '1155',
46: 1:    '1365',
46: 1:    '2145',
46: 1:    '3003',
46: 1:    '5005'
46: 1:  ]
46: 1:}
46: 1:Scores: 44
46: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz', 'FizzBuzzDuzzCazz', 'FizzMuzzDuzzCazz', 'BuzzMuzzDuzzCazz']')
46: 1:Fire Event: PassTest{complexity=5, testCount=41}
------------------------------------------
47: 1:BoardData {
47: 1:  'description': [
47: 1:    'Write a javascript method that takes one int argument and returns a string containing the number itself.',
47: 1:    'For those numbers that are divisible by 3, the method should return 'Fizz'',
47: 1:    'For those numbers divisible by 5 it should return 'Buzz'.',
47: 1:    'For those numbers divisible by both 3 and 5 - 'FizzBuzz'.',
47: 1:    'Proceed in the same way if there is a number with a divisor of 7. The word 'Muzz' is used for it. .',
47: 1:    'Please write optimized code without any duplication.',
47: 1:    'For divider 11 - the word must be 'Duzz'.',
47: 1:    'For divider 13 - the word must be 'Cazz'.'
47: 1:  ],
47: 1:  'expectedAnswer': 'FizzBuzzMuzzDuzzCazz',
47: 1:  'history': [
47: 1:    {
47: 1:      'answer': '1',
47: 1:      'question': '1',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '2',
47: 1:      'question': '2',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Fizz',
47: 1:      'question': '3',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '4',
47: 1:      'question': '4',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Buzz',
47: 1:      'question': '5',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Fizz',
47: 1:      'question': '6',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Muzz',
47: 1:      'question': '7',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '8',
47: 1:      'question': '8',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Fizz',
47: 1:      'question': '9',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Buzz',
47: 1:      'question': '10',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Duzz',
47: 1:      'question': '11',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Fizz',
47: 1:      'question': '12',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Cazz',
47: 1:      'question': '13',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Muzz',
47: 1:      'question': '14',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzz',
47: 1:      'question': '15',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '16',
47: 1:      'question': '16',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': '17',
47: 1:      'question': '17',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzMuzz',
47: 1:      'question': '21',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzDuzz',
47: 1:      'question': '33',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzMuzz',
47: 1:      'question': '35',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzCazz',
47: 1:      'question': '39',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'Muzz',
47: 1:      'question': '49',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzDuzz',
47: 1:      'question': '55',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzCazz',
47: 1:      'question': '65',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'MuzzDuzz',
47: 1:      'question': '77',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'MuzzCazz',
47: 1:      'question': '91',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzMuzz',
47: 1:      'question': '105',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzDuzz',
47: 1:      'question': '165',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzCazz',
47: 1:      'question': '195',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzMuzzDuzz',
47: 1:      'question': '231',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzMuzzCazz',
47: 1:      'question': '273',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzMuzzDuzz',
47: 1:      'question': '385',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzMuzzCazz',
47: 1:      'question': '455',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzDuzzCazz',
47: 1:      'question': '715',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'MuzzDuzzCazz',
47: 1:      'question': '1001',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzMuzzDuzz',
47: 1:      'question': '1155',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzMuzzCazz',
47: 1:      'question': '1365',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzBuzzDuzzCazz',
47: 1:      'question': '2145',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'FizzMuzzDuzzCazz',
47: 1:      'question': '3003',
47: 1:      'valid': true
47: 1:    },
47: 1:    {
47: 1:      'answer': 'BuzzMuzzDuzzCazz',
47: 1:      'question': '5005',
47: 1:      'valid': true
47: 1:    }
47: 1:  ],
47: 1:  'info': [
47: 1:    '✅f(1) = 1',
47: 1:    '✅f(2) = 2',
47: 1:    '✅f(3) = Fizz',
47: 1:    '✅f(4) = 4',
47: 1:    '✅f(5) = Buzz',
47: 1:    '✅f(6) = Fizz',
47: 1:    '✅f(7) = Muzz',
47: 1:    '✅f(8) = 8',
47: 1:    '✅f(9) = Fizz',
47: 1:    '✅f(10) = Buzz',
47: 1:    '✅f(11) = Duzz',
47: 1:    '✅f(12) = Fizz',
47: 1:    '✅f(13) = Cazz',
47: 1:    '✅f(14) = Muzz',
47: 1:    '✅f(15) = FizzBuzz',
47: 1:    '✅f(16) = 16',
47: 1:    '✅f(17) = 17',
47: 1:    '✅f(21) = FizzMuzz',
47: 1:    '✅f(33) = FizzDuzz',
47: 1:    '✅f(35) = BuzzMuzz',
47: 1:    '✅f(39) = FizzCazz',
47: 1:    '✅f(49) = Muzz',
47: 1:    '✅f(55) = BuzzDuzz',
47: 1:    '✅f(65) = BuzzCazz',
47: 1:    '✅f(77) = MuzzDuzz',
47: 1:    '✅f(91) = MuzzCazz',
47: 1:    '✅f(105) = FizzBuzzMuzz',
47: 1:    '✅f(165) = FizzBuzzDuzz',
47: 1:    '✅f(195) = FizzBuzzCazz',
47: 1:    '✅f(231) = FizzMuzzDuzz',
47: 1:    '✅f(273) = FizzMuzzCazz',
47: 1:    '✅f(385) = BuzzMuzzDuzz',
47: 1:    '✅f(455) = BuzzMuzzCazz',
47: 1:    '✅f(715) = BuzzDuzzCazz',
47: 1:    '✅f(1001) = MuzzDuzzCazz',
47: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
47: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
47: 1:    '✅f(2145) = FizzBuzzDuzzCazz',
47: 1:    '✅f(3003) = FizzMuzzDuzzCazz',
47: 1:    '✅f(5005) = BuzzMuzzDuzzCazz',
47: 1:    '❌f(15015) = ??? != FizzBuzzMuzzDuzzCazz'
47: 1:  ],
47: 1:  'level': 1,
47: 1:  'nextQuestion': '15015',
47: 1:  'questions': [
47: 1:    '1',
47: 1:    '2',
47: 1:    '3',
47: 1:    '4',
47: 1:    '5',
47: 1:    '6',
47: 1:    '7',
47: 1:    '8',
47: 1:    '9',
47: 1:    '10',
47: 1:    '11',
47: 1:    '12',
47: 1:    '13',
47: 1:    '14',
47: 1:    '15',
47: 1:    '16',
47: 1:    '17',
47: 1:    '21',
47: 1:    '33',
47: 1:    '35',
47: 1:    '39',
47: 1:    '49',
47: 1:    '55',
47: 1:    '65',
47: 1:    '77',
47: 1:    '91',
47: 1:    '105',
47: 1:    '165',
47: 1:    '195',
47: 1:    '231',
47: 1:    '273',
47: 1:    '385',
47: 1:    '455',
47: 1:    '715',
47: 1:    '1001',
47: 1:    '1155',
47: 1:    '1365',
47: 1:    '2145',
47: 1:    '3003',
47: 1:    '5005',
47: 1:    '15015'
47: 1:  ]
47: 1:}
47: 1:Scores: 45
47: 1:Answer: message('['1', '2', 'Fizz', '4', 'Buzz', 'Fizz', 'Muzz', '8', 'Fizz', 'Buzz', 'Duzz', 'Fizz', 'Cazz', 'Muzz', 'FizzBuzz', '16', '17', 'FizzMuzz', 'FizzDuzz', 'BuzzMuzz', 'FizzCazz', 'Muzz', 'BuzzDuzz', 'BuzzCazz', 'MuzzDuzz', 'MuzzCazz', 'FizzBuzzMuzz', 'FizzBuzzDuzz', 'FizzBuzzCazz', 'FizzMuzzDuzz', 'FizzMuzzCazz', 'BuzzMuzzDuzz', 'BuzzMuzzCazz', 'BuzzDuzzCazz', 'MuzzDuzzCazz', 'FizzBuzzMuzzDuzz', 'FizzBuzzMuzzCazz', 'FizzBuzzDuzzCazz', 'FizzMuzzDuzzCazz', 'BuzzMuzzDuzzCazz', 'FizzBuzzMuzzDuzzCazz']')
47: 1:Fire Event: PassTest{complexity=5, testCount=41}
47: 1:Fire Event: NextAlgorithm{complexity=5, time=0}
------------------------------------------
48: 1:BoardData {
48: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
48: 1:  'history': [
48: 1:    {
48: 1:      'answer': '1',
48: 1:      'question': '1',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '2',
48: 1:      'question': '2',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Fizz',
48: 1:      'question': '3',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '4',
48: 1:      'question': '4',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Buzz',
48: 1:      'question': '5',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Fizz',
48: 1:      'question': '6',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Muzz',
48: 1:      'question': '7',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '8',
48: 1:      'question': '8',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Fizz',
48: 1:      'question': '9',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Buzz',
48: 1:      'question': '10',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Duzz',
48: 1:      'question': '11',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Fizz',
48: 1:      'question': '12',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Cazz',
48: 1:      'question': '13',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Muzz',
48: 1:      'question': '14',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzz',
48: 1:      'question': '15',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '16',
48: 1:      'question': '16',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': '17',
48: 1:      'question': '17',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzMuzz',
48: 1:      'question': '21',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzDuzz',
48: 1:      'question': '33',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzMuzz',
48: 1:      'question': '35',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzCazz',
48: 1:      'question': '39',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'Muzz',
48: 1:      'question': '49',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzDuzz',
48: 1:      'question': '55',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzCazz',
48: 1:      'question': '65',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'MuzzDuzz',
48: 1:      'question': '77',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'MuzzCazz',
48: 1:      'question': '91',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzMuzz',
48: 1:      'question': '105',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzDuzz',
48: 1:      'question': '165',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzCazz',
48: 1:      'question': '195',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzMuzzDuzz',
48: 1:      'question': '231',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzMuzzCazz',
48: 1:      'question': '273',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzMuzzDuzz',
48: 1:      'question': '385',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzMuzzCazz',
48: 1:      'question': '455',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzDuzzCazz',
48: 1:      'question': '715',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'MuzzDuzzCazz',
48: 1:      'question': '1001',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzMuzzDuzz',
48: 1:      'question': '1155',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzMuzzCazz',
48: 1:      'question': '1365',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzDuzzCazz',
48: 1:      'question': '2145',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzMuzzDuzzCazz',
48: 1:      'question': '3003',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'BuzzMuzzDuzzCazz',
48: 1:      'question': '5005',
48: 1:      'valid': true
48: 1:    },
48: 1:    {
48: 1:      'answer': 'FizzBuzzMuzzDuzzCazz',
48: 1:      'question': '15015',
48: 1:      'valid': true
48: 1:    }
48: 1:  ],
48: 1:  'info': [
48: 1:    '✅f(1) = 1',
48: 1:    '✅f(2) = 2',
48: 1:    '✅f(3) = Fizz',
48: 1:    '✅f(4) = 4',
48: 1:    '✅f(5) = Buzz',
48: 1:    '✅f(6) = Fizz',
48: 1:    '✅f(7) = Muzz',
48: 1:    '✅f(8) = 8',
48: 1:    '✅f(9) = Fizz',
48: 1:    '✅f(10) = Buzz',
48: 1:    '✅f(11) = Duzz',
48: 1:    '✅f(12) = Fizz',
48: 1:    '✅f(13) = Cazz',
48: 1:    '✅f(14) = Muzz',
48: 1:    '✅f(15) = FizzBuzz',
48: 1:    '✅f(16) = 16',
48: 1:    '✅f(17) = 17',
48: 1:    '✅f(21) = FizzMuzz',
48: 1:    '✅f(33) = FizzDuzz',
48: 1:    '✅f(35) = BuzzMuzz',
48: 1:    '✅f(39) = FizzCazz',
48: 1:    '✅f(49) = Muzz',
48: 1:    '✅f(55) = BuzzDuzz',
48: 1:    '✅f(65) = BuzzCazz',
48: 1:    '✅f(77) = MuzzDuzz',
48: 1:    '✅f(91) = MuzzCazz',
48: 1:    '✅f(105) = FizzBuzzMuzz',
48: 1:    '✅f(165) = FizzBuzzDuzz',
48: 1:    '✅f(195) = FizzBuzzCazz',
48: 1:    '✅f(231) = FizzMuzzDuzz',
48: 1:    '✅f(273) = FizzMuzzCazz',
48: 1:    '✅f(385) = BuzzMuzzDuzz',
48: 1:    '✅f(455) = BuzzMuzzCazz',
48: 1:    '✅f(715) = BuzzDuzzCazz',
48: 1:    '✅f(1001) = MuzzDuzzCazz',
48: 1:    '✅f(1155) = FizzBuzzMuzzDuzz',
48: 1:    '✅f(1365) = FizzBuzzMuzzCazz',
48: 1:    '✅f(2145) = FizzBuzzDuzzCazz',
48: 1:    '✅f(3003) = FizzMuzzDuzzCazz',
48: 1:    '✅f(5005) = BuzzMuzzDuzzCazz',
48: 1:    '✅f(15015) = FizzBuzzMuzzDuzzCazz'
48: 1:  ],
48: 1:  'level': 1,
48: 1:  'questions': []
48: 1:}
48: 1:Scores: 720
48: 1:Answer: message('StartNextLevel')
48: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
49: 1:BoardData {
49: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
49: 1:  'expectedAnswer': '15:3*5:FizzBuzz',
49: 1:  'history': [],
49: 1:  'info': ['❌f(1) = ??? != 15:3*5:FizzBuzz'],
49: 1:  'level': 2,
49: 1:  'nextQuestion': '1',
49: 1:  'questions': ['1']
49: 1:}
49: 1:Scores: 720
49: 1:Answer: message('['15:3*5:FizzBuzz']')
49: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
50: 1:BoardData {
50: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
50: 1:  'expectedAnswer': '21:3*7:FizzMuzz',
50: 1:  'history': [{
50: 1:    'answer': '15:3*5:FizzBuzz',
50: 1:    'question': '1',
50: 1:    'valid': true
50: 1:  }],
50: 1:  'info': [
50: 1:    '✅f(1) = 15:3*5:FizzBuzz',
50: 1:    '❌f(2) = ??? != 21:3*7:FizzMuzz'
50: 1:  ],
50: 1:  'level': 2,
50: 1:  'nextQuestion': '2',
50: 1:  'questions': [
50: 1:    '1',
50: 1:    '2'
50: 1:  ]
50: 1:}
50: 1:Scores: 722
50: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz']')
50: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
51: 1:BoardData {
51: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
51: 1:  'expectedAnswer': '33:3*11:FizzDuzz',
51: 1:  'history': [
51: 1:    {
51: 1:      'answer': '15:3*5:FizzBuzz',
51: 1:      'question': '1',
51: 1:      'valid': true
51: 1:    },
51: 1:    {
51: 1:      'answer': '21:3*7:FizzMuzz',
51: 1:      'question': '2',
51: 1:      'valid': true
51: 1:    }
51: 1:  ],
51: 1:  'info': [
51: 1:    '✅f(1) = 15:3*5:FizzBuzz',
51: 1:    '✅f(2) = 21:3*7:FizzMuzz',
51: 1:    '❌f(3) = ??? != 33:3*11:FizzDuzz'
51: 1:  ],
51: 1:  'level': 2,
51: 1:  'nextQuestion': '3',
51: 1:  'questions': [
51: 1:    '1',
51: 1:    '2',
51: 1:    '3'
51: 1:  ]
51: 1:}
51: 1:Scores: 724
51: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz']')
51: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
52: 1:BoardData {
52: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
52: 1:  'expectedAnswer': '35:5*7:BuzzMuzz',
52: 1:  'history': [
52: 1:    {
52: 1:      'answer': '15:3*5:FizzBuzz',
52: 1:      'question': '1',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '21:3*7:FizzMuzz',
52: 1:      'question': '2',
52: 1:      'valid': true
52: 1:    },
52: 1:    {
52: 1:      'answer': '33:3*11:FizzDuzz',
52: 1:      'question': '3',
52: 1:      'valid': true
52: 1:    }
52: 1:  ],
52: 1:  'info': [
52: 1:    '✅f(1) = 15:3*5:FizzBuzz',
52: 1:    '✅f(2) = 21:3*7:FizzMuzz',
52: 1:    '✅f(3) = 33:3*11:FizzDuzz',
52: 1:    '❌f(4) = ??? != 35:5*7:BuzzMuzz'
52: 1:  ],
52: 1:  'level': 2,
52: 1:  'nextQuestion': '4',
52: 1:  'questions': [
52: 1:    '1',
52: 1:    '2',
52: 1:    '3',
52: 1:    '4'
52: 1:  ]
52: 1:}
52: 1:Scores: 726
52: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz']')
52: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
53: 1:BoardData {
53: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
53: 1:  'expectedAnswer': '39:3*13:FizzCazz',
53: 1:  'history': [
53: 1:    {
53: 1:      'answer': '15:3*5:FizzBuzz',
53: 1:      'question': '1',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '21:3*7:FizzMuzz',
53: 1:      'question': '2',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '33:3*11:FizzDuzz',
53: 1:      'question': '3',
53: 1:      'valid': true
53: 1:    },
53: 1:    {
53: 1:      'answer': '35:5*7:BuzzMuzz',
53: 1:      'question': '4',
53: 1:      'valid': true
53: 1:    }
53: 1:  ],
53: 1:  'info': [
53: 1:    '✅f(1) = 15:3*5:FizzBuzz',
53: 1:    '✅f(2) = 21:3*7:FizzMuzz',
53: 1:    '✅f(3) = 33:3*11:FizzDuzz',
53: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
53: 1:    '❌f(5) = ??? != 39:3*13:FizzCazz'
53: 1:  ],
53: 1:  'level': 2,
53: 1:  'nextQuestion': '5',
53: 1:  'questions': [
53: 1:    '1',
53: 1:    '2',
53: 1:    '3',
53: 1:    '4',
53: 1:    '5'
53: 1:  ]
53: 1:}
53: 1:Scores: 728
53: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz']')
53: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
54: 1:BoardData {
54: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
54: 1:  'expectedAnswer': '55:5*11:BuzzDuzz',
54: 1:  'history': [
54: 1:    {
54: 1:      'answer': '15:3*5:FizzBuzz',
54: 1:      'question': '1',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '21:3*7:FizzMuzz',
54: 1:      'question': '2',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '33:3*11:FizzDuzz',
54: 1:      'question': '3',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '35:5*7:BuzzMuzz',
54: 1:      'question': '4',
54: 1:      'valid': true
54: 1:    },
54: 1:    {
54: 1:      'answer': '39:3*13:FizzCazz',
54: 1:      'question': '5',
54: 1:      'valid': true
54: 1:    }
54: 1:  ],
54: 1:  'info': [
54: 1:    '✅f(1) = 15:3*5:FizzBuzz',
54: 1:    '✅f(2) = 21:3*7:FizzMuzz',
54: 1:    '✅f(3) = 33:3*11:FizzDuzz',
54: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
54: 1:    '✅f(5) = 39:3*13:FizzCazz',
54: 1:    '❌f(6) = ??? != 55:5*11:BuzzDuzz'
54: 1:  ],
54: 1:  'level': 2,
54: 1:  'nextQuestion': '6',
54: 1:  'questions': [
54: 1:    '1',
54: 1:    '2',
54: 1:    '3',
54: 1:    '4',
54: 1:    '5',
54: 1:    '6'
54: 1:  ]
54: 1:}
54: 1:Scores: 730
54: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz']')
54: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
55: 1:BoardData {
55: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
55: 1:  'expectedAnswer': '65:5*13:BuzzCazz',
55: 1:  'history': [
55: 1:    {
55: 1:      'answer': '15:3*5:FizzBuzz',
55: 1:      'question': '1',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '21:3*7:FizzMuzz',
55: 1:      'question': '2',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '33:3*11:FizzDuzz',
55: 1:      'question': '3',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '35:5*7:BuzzMuzz',
55: 1:      'question': '4',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '39:3*13:FizzCazz',
55: 1:      'question': '5',
55: 1:      'valid': true
55: 1:    },
55: 1:    {
55: 1:      'answer': '55:5*11:BuzzDuzz',
55: 1:      'question': '6',
55: 1:      'valid': true
55: 1:    }
55: 1:  ],
55: 1:  'info': [
55: 1:    '✅f(1) = 15:3*5:FizzBuzz',
55: 1:    '✅f(2) = 21:3*7:FizzMuzz',
55: 1:    '✅f(3) = 33:3*11:FizzDuzz',
55: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
55: 1:    '✅f(5) = 39:3*13:FizzCazz',
55: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
55: 1:    '❌f(7) = ??? != 65:5*13:BuzzCazz'
55: 1:  ],
55: 1:  'level': 2,
55: 1:  'nextQuestion': '7',
55: 1:  'questions': [
55: 1:    '1',
55: 1:    '2',
55: 1:    '3',
55: 1:    '4',
55: 1:    '5',
55: 1:    '6',
55: 1:    '7'
55: 1:  ]
55: 1:}
55: 1:Scores: 732
55: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz']')
55: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
56: 1:BoardData {
56: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
56: 1:  'expectedAnswer': '77:7*11:MuzzDuzz',
56: 1:  'history': [
56: 1:    {
56: 1:      'answer': '15:3*5:FizzBuzz',
56: 1:      'question': '1',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '21:3*7:FizzMuzz',
56: 1:      'question': '2',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '33:3*11:FizzDuzz',
56: 1:      'question': '3',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '35:5*7:BuzzMuzz',
56: 1:      'question': '4',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '39:3*13:FizzCazz',
56: 1:      'question': '5',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '55:5*11:BuzzDuzz',
56: 1:      'question': '6',
56: 1:      'valid': true
56: 1:    },
56: 1:    {
56: 1:      'answer': '65:5*13:BuzzCazz',
56: 1:      'question': '7',
56: 1:      'valid': true
56: 1:    }
56: 1:  ],
56: 1:  'info': [
56: 1:    '✅f(1) = 15:3*5:FizzBuzz',
56: 1:    '✅f(2) = 21:3*7:FizzMuzz',
56: 1:    '✅f(3) = 33:3*11:FizzDuzz',
56: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
56: 1:    '✅f(5) = 39:3*13:FizzCazz',
56: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
56: 1:    '✅f(7) = 65:5*13:BuzzCazz',
56: 1:    '❌f(8) = ??? != 77:7*11:MuzzDuzz'
56: 1:  ],
56: 1:  'level': 2,
56: 1:  'nextQuestion': '8',
56: 1:  'questions': [
56: 1:    '1',
56: 1:    '2',
56: 1:    '3',
56: 1:    '4',
56: 1:    '5',
56: 1:    '6',
56: 1:    '7',
56: 1:    '8'
56: 1:  ]
56: 1:}
56: 1:Scores: 734
56: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz']')
56: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
57: 1:BoardData {
57: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
57: 1:  'expectedAnswer': '91:7*13:MuzzCazz',
57: 1:  'history': [
57: 1:    {
57: 1:      'answer': '15:3*5:FizzBuzz',
57: 1:      'question': '1',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '21:3*7:FizzMuzz',
57: 1:      'question': '2',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '33:3*11:FizzDuzz',
57: 1:      'question': '3',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '35:5*7:BuzzMuzz',
57: 1:      'question': '4',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '39:3*13:FizzCazz',
57: 1:      'question': '5',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '55:5*11:BuzzDuzz',
57: 1:      'question': '6',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '65:5*13:BuzzCazz',
57: 1:      'question': '7',
57: 1:      'valid': true
57: 1:    },
57: 1:    {
57: 1:      'answer': '77:7*11:MuzzDuzz',
57: 1:      'question': '8',
57: 1:      'valid': true
57: 1:    }
57: 1:  ],
57: 1:  'info': [
57: 1:    '✅f(1) = 15:3*5:FizzBuzz',
57: 1:    '✅f(2) = 21:3*7:FizzMuzz',
57: 1:    '✅f(3) = 33:3*11:FizzDuzz',
57: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
57: 1:    '✅f(5) = 39:3*13:FizzCazz',
57: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
57: 1:    '✅f(7) = 65:5*13:BuzzCazz',
57: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
57: 1:    '❌f(9) = ??? != 91:7*13:MuzzCazz'
57: 1:  ],
57: 1:  'level': 2,
57: 1:  'nextQuestion': '9',
57: 1:  'questions': [
57: 1:    '1',
57: 1:    '2',
57: 1:    '3',
57: 1:    '4',
57: 1:    '5',
57: 1:    '6',
57: 1:    '7',
57: 1:    '8',
57: 1:    '9'
57: 1:  ]
57: 1:}
57: 1:Scores: 736
57: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz']')
57: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
58: 1:BoardData {
58: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
58: 1:  'expectedAnswer': '105:3*5*7:FizzBuzzMuzz',
58: 1:  'history': [
58: 1:    {
58: 1:      'answer': '15:3*5:FizzBuzz',
58: 1:      'question': '1',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '21:3*7:FizzMuzz',
58: 1:      'question': '2',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '33:3*11:FizzDuzz',
58: 1:      'question': '3',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '35:5*7:BuzzMuzz',
58: 1:      'question': '4',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '39:3*13:FizzCazz',
58: 1:      'question': '5',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '55:5*11:BuzzDuzz',
58: 1:      'question': '6',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '65:5*13:BuzzCazz',
58: 1:      'question': '7',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '77:7*11:MuzzDuzz',
58: 1:      'question': '8',
58: 1:      'valid': true
58: 1:    },
58: 1:    {
58: 1:      'answer': '91:7*13:MuzzCazz',
58: 1:      'question': '9',
58: 1:      'valid': true
58: 1:    }
58: 1:  ],
58: 1:  'info': [
58: 1:    '✅f(1) = 15:3*5:FizzBuzz',
58: 1:    '✅f(2) = 21:3*7:FizzMuzz',
58: 1:    '✅f(3) = 33:3*11:FizzDuzz',
58: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
58: 1:    '✅f(5) = 39:3*13:FizzCazz',
58: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
58: 1:    '✅f(7) = 65:5*13:BuzzCazz',
58: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
58: 1:    '✅f(9) = 91:7*13:MuzzCazz',
58: 1:    '❌f(10) = ??? != 105:3*5*7:FizzBuzzMuzz'
58: 1:  ],
58: 1:  'level': 2,
58: 1:  'nextQuestion': '10',
58: 1:  'questions': [
58: 1:    '1',
58: 1:    '2',
58: 1:    '3',
58: 1:    '4',
58: 1:    '5',
58: 1:    '6',
58: 1:    '7',
58: 1:    '8',
58: 1:    '9',
58: 1:    '10'
58: 1:  ]
58: 1:}
58: 1:Scores: 738
58: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz']')
58: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
59: 1:BoardData {
59: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
59: 1:  'expectedAnswer': '143:11*13:DuzzCazz',
59: 1:  'history': [
59: 1:    {
59: 1:      'answer': '15:3*5:FizzBuzz',
59: 1:      'question': '1',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '21:3*7:FizzMuzz',
59: 1:      'question': '2',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '33:3*11:FizzDuzz',
59: 1:      'question': '3',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '35:5*7:BuzzMuzz',
59: 1:      'question': '4',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '39:3*13:FizzCazz',
59: 1:      'question': '5',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '55:5*11:BuzzDuzz',
59: 1:      'question': '6',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '65:5*13:BuzzCazz',
59: 1:      'question': '7',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '77:7*11:MuzzDuzz',
59: 1:      'question': '8',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '91:7*13:MuzzCazz',
59: 1:      'question': '9',
59: 1:      'valid': true
59: 1:    },
59: 1:    {
59: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
59: 1:      'question': '10',
59: 1:      'valid': true
59: 1:    }
59: 1:  ],
59: 1:  'info': [
59: 1:    '✅f(1) = 15:3*5:FizzBuzz',
59: 1:    '✅f(2) = 21:3*7:FizzMuzz',
59: 1:    '✅f(3) = 33:3*11:FizzDuzz',
59: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
59: 1:    '✅f(5) = 39:3*13:FizzCazz',
59: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
59: 1:    '✅f(7) = 65:5*13:BuzzCazz',
59: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
59: 1:    '✅f(9) = 91:7*13:MuzzCazz',
59: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
59: 1:    '❌f(11) = ??? != 143:11*13:DuzzCazz'
59: 1:  ],
59: 1:  'level': 2,
59: 1:  'nextQuestion': '11',
59: 1:  'questions': [
59: 1:    '1',
59: 1:    '2',
59: 1:    '3',
59: 1:    '4',
59: 1:    '5',
59: 1:    '6',
59: 1:    '7',
59: 1:    '8',
59: 1:    '9',
59: 1:    '10',
59: 1:    '11'
59: 1:  ]
59: 1:}
59: 1:Scores: 740
59: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz']')
59: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
60: 1:BoardData {
60: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
60: 1:  'expectedAnswer': '165:3*5*11:FizzBuzzDuzz',
60: 1:  'history': [
60: 1:    {
60: 1:      'answer': '15:3*5:FizzBuzz',
60: 1:      'question': '1',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '21:3*7:FizzMuzz',
60: 1:      'question': '2',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '33:3*11:FizzDuzz',
60: 1:      'question': '3',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '35:5*7:BuzzMuzz',
60: 1:      'question': '4',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '39:3*13:FizzCazz',
60: 1:      'question': '5',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '55:5*11:BuzzDuzz',
60: 1:      'question': '6',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '65:5*13:BuzzCazz',
60: 1:      'question': '7',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '77:7*11:MuzzDuzz',
60: 1:      'question': '8',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '91:7*13:MuzzCazz',
60: 1:      'question': '9',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
60: 1:      'question': '10',
60: 1:      'valid': true
60: 1:    },
60: 1:    {
60: 1:      'answer': '143:11*13:DuzzCazz',
60: 1:      'question': '11',
60: 1:      'valid': true
60: 1:    }
60: 1:  ],
60: 1:  'info': [
60: 1:    '✅f(1) = 15:3*5:FizzBuzz',
60: 1:    '✅f(2) = 21:3*7:FizzMuzz',
60: 1:    '✅f(3) = 33:3*11:FizzDuzz',
60: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
60: 1:    '✅f(5) = 39:3*13:FizzCazz',
60: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
60: 1:    '✅f(7) = 65:5*13:BuzzCazz',
60: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
60: 1:    '✅f(9) = 91:7*13:MuzzCazz',
60: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
60: 1:    '✅f(11) = 143:11*13:DuzzCazz',
60: 1:    '❌f(12) = ??? != 165:3*5*11:FizzBuzzDuzz'
60: 1:  ],
60: 1:  'level': 2,
60: 1:  'nextQuestion': '12',
60: 1:  'questions': [
60: 1:    '1',
60: 1:    '2',
60: 1:    '3',
60: 1:    '4',
60: 1:    '5',
60: 1:    '6',
60: 1:    '7',
60: 1:    '8',
60: 1:    '9',
60: 1:    '10',
60: 1:    '11',
60: 1:    '12'
60: 1:  ]
60: 1:}
60: 1:Scores: 742
60: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz']')
60: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
61: 1:BoardData {
61: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
61: 1:  'expectedAnswer': '195:3*5*13:FizzBuzzCazz',
61: 1:  'history': [
61: 1:    {
61: 1:      'answer': '15:3*5:FizzBuzz',
61: 1:      'question': '1',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '21:3*7:FizzMuzz',
61: 1:      'question': '2',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '33:3*11:FizzDuzz',
61: 1:      'question': '3',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '35:5*7:BuzzMuzz',
61: 1:      'question': '4',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '39:3*13:FizzCazz',
61: 1:      'question': '5',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '55:5*11:BuzzDuzz',
61: 1:      'question': '6',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '65:5*13:BuzzCazz',
61: 1:      'question': '7',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '77:7*11:MuzzDuzz',
61: 1:      'question': '8',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '91:7*13:MuzzCazz',
61: 1:      'question': '9',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
61: 1:      'question': '10',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '143:11*13:DuzzCazz',
61: 1:      'question': '11',
61: 1:      'valid': true
61: 1:    },
61: 1:    {
61: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
61: 1:      'question': '12',
61: 1:      'valid': true
61: 1:    }
61: 1:  ],
61: 1:  'info': [
61: 1:    '✅f(1) = 15:3*5:FizzBuzz',
61: 1:    '✅f(2) = 21:3*7:FizzMuzz',
61: 1:    '✅f(3) = 33:3*11:FizzDuzz',
61: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
61: 1:    '✅f(5) = 39:3*13:FizzCazz',
61: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
61: 1:    '✅f(7) = 65:5*13:BuzzCazz',
61: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
61: 1:    '✅f(9) = 91:7*13:MuzzCazz',
61: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
61: 1:    '✅f(11) = 143:11*13:DuzzCazz',
61: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
61: 1:    '❌f(13) = ??? != 195:3*5*13:FizzBuzzCazz'
61: 1:  ],
61: 1:  'level': 2,
61: 1:  'nextQuestion': '13',
61: 1:  'questions': [
61: 1:    '1',
61: 1:    '2',
61: 1:    '3',
61: 1:    '4',
61: 1:    '5',
61: 1:    '6',
61: 1:    '7',
61: 1:    '8',
61: 1:    '9',
61: 1:    '10',
61: 1:    '11',
61: 1:    '12',
61: 1:    '13'
61: 1:  ]
61: 1:}
61: 1:Scores: 744
61: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz']')
61: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
62: 1:BoardData {
62: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
62: 1:  'expectedAnswer': '231:3*7*11:FizzMuzzDuzz',
62: 1:  'history': [
62: 1:    {
62: 1:      'answer': '15:3*5:FizzBuzz',
62: 1:      'question': '1',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '21:3*7:FizzMuzz',
62: 1:      'question': '2',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '33:3*11:FizzDuzz',
62: 1:      'question': '3',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '35:5*7:BuzzMuzz',
62: 1:      'question': '4',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '39:3*13:FizzCazz',
62: 1:      'question': '5',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '55:5*11:BuzzDuzz',
62: 1:      'question': '6',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '65:5*13:BuzzCazz',
62: 1:      'question': '7',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '77:7*11:MuzzDuzz',
62: 1:      'question': '8',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '91:7*13:MuzzCazz',
62: 1:      'question': '9',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
62: 1:      'question': '10',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '143:11*13:DuzzCazz',
62: 1:      'question': '11',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
62: 1:      'question': '12',
62: 1:      'valid': true
62: 1:    },
62: 1:    {
62: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
62: 1:      'question': '13',
62: 1:      'valid': true
62: 1:    }
62: 1:  ],
62: 1:  'info': [
62: 1:    '✅f(1) = 15:3*5:FizzBuzz',
62: 1:    '✅f(2) = 21:3*7:FizzMuzz',
62: 1:    '✅f(3) = 33:3*11:FizzDuzz',
62: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
62: 1:    '✅f(5) = 39:3*13:FizzCazz',
62: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
62: 1:    '✅f(7) = 65:5*13:BuzzCazz',
62: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
62: 1:    '✅f(9) = 91:7*13:MuzzCazz',
62: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
62: 1:    '✅f(11) = 143:11*13:DuzzCazz',
62: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
62: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
62: 1:    '❌f(14) = ??? != 231:3*7*11:FizzMuzzDuzz'
62: 1:  ],
62: 1:  'level': 2,
62: 1:  'nextQuestion': '14',
62: 1:  'questions': [
62: 1:    '1',
62: 1:    '2',
62: 1:    '3',
62: 1:    '4',
62: 1:    '5',
62: 1:    '6',
62: 1:    '7',
62: 1:    '8',
62: 1:    '9',
62: 1:    '10',
62: 1:    '11',
62: 1:    '12',
62: 1:    '13',
62: 1:    '14'
62: 1:  ]
62: 1:}
62: 1:Scores: 746
62: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz']')
62: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
63: 1:BoardData {
63: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
63: 1:  'expectedAnswer': '273:3*7*13:FizzMuzzCazz',
63: 1:  'history': [
63: 1:    {
63: 1:      'answer': '15:3*5:FizzBuzz',
63: 1:      'question': '1',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '21:3*7:FizzMuzz',
63: 1:      'question': '2',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '33:3*11:FizzDuzz',
63: 1:      'question': '3',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '35:5*7:BuzzMuzz',
63: 1:      'question': '4',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '39:3*13:FizzCazz',
63: 1:      'question': '5',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '55:5*11:BuzzDuzz',
63: 1:      'question': '6',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '65:5*13:BuzzCazz',
63: 1:      'question': '7',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '77:7*11:MuzzDuzz',
63: 1:      'question': '8',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '91:7*13:MuzzCazz',
63: 1:      'question': '9',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
63: 1:      'question': '10',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '143:11*13:DuzzCazz',
63: 1:      'question': '11',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
63: 1:      'question': '12',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
63: 1:      'question': '13',
63: 1:      'valid': true
63: 1:    },
63: 1:    {
63: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
63: 1:      'question': '14',
63: 1:      'valid': true
63: 1:    }
63: 1:  ],
63: 1:  'info': [
63: 1:    '✅f(1) = 15:3*5:FizzBuzz',
63: 1:    '✅f(2) = 21:3*7:FizzMuzz',
63: 1:    '✅f(3) = 33:3*11:FizzDuzz',
63: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
63: 1:    '✅f(5) = 39:3*13:FizzCazz',
63: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
63: 1:    '✅f(7) = 65:5*13:BuzzCazz',
63: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
63: 1:    '✅f(9) = 91:7*13:MuzzCazz',
63: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
63: 1:    '✅f(11) = 143:11*13:DuzzCazz',
63: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
63: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
63: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
63: 1:    '❌f(15) = ??? != 273:3*7*13:FizzMuzzCazz'
63: 1:  ],
63: 1:  'level': 2,
63: 1:  'nextQuestion': '15',
63: 1:  'questions': [
63: 1:    '1',
63: 1:    '2',
63: 1:    '3',
63: 1:    '4',
63: 1:    '5',
63: 1:    '6',
63: 1:    '7',
63: 1:    '8',
63: 1:    '9',
63: 1:    '10',
63: 1:    '11',
63: 1:    '12',
63: 1:    '13',
63: 1:    '14',
63: 1:    '15'
63: 1:  ]
63: 1:}
63: 1:Scores: 748
63: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz']')
63: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
64: 1:BoardData {
64: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
64: 1:  'expectedAnswer': '385:5*7*11:BuzzMuzzDuzz',
64: 1:  'history': [
64: 1:    {
64: 1:      'answer': '15:3*5:FizzBuzz',
64: 1:      'question': '1',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '21:3*7:FizzMuzz',
64: 1:      'question': '2',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '33:3*11:FizzDuzz',
64: 1:      'question': '3',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '35:5*7:BuzzMuzz',
64: 1:      'question': '4',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '39:3*13:FizzCazz',
64: 1:      'question': '5',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '55:5*11:BuzzDuzz',
64: 1:      'question': '6',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '65:5*13:BuzzCazz',
64: 1:      'question': '7',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '77:7*11:MuzzDuzz',
64: 1:      'question': '8',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '91:7*13:MuzzCazz',
64: 1:      'question': '9',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
64: 1:      'question': '10',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '143:11*13:DuzzCazz',
64: 1:      'question': '11',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
64: 1:      'question': '12',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
64: 1:      'question': '13',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
64: 1:      'question': '14',
64: 1:      'valid': true
64: 1:    },
64: 1:    {
64: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
64: 1:      'question': '15',
64: 1:      'valid': true
64: 1:    }
64: 1:  ],
64: 1:  'info': [
64: 1:    '✅f(1) = 15:3*5:FizzBuzz',
64: 1:    '✅f(2) = 21:3*7:FizzMuzz',
64: 1:    '✅f(3) = 33:3*11:FizzDuzz',
64: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
64: 1:    '✅f(5) = 39:3*13:FizzCazz',
64: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
64: 1:    '✅f(7) = 65:5*13:BuzzCazz',
64: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
64: 1:    '✅f(9) = 91:7*13:MuzzCazz',
64: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
64: 1:    '✅f(11) = 143:11*13:DuzzCazz',
64: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
64: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
64: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
64: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
64: 1:    '❌f(16) = ??? != 385:5*7*11:BuzzMuzzDuzz'
64: 1:  ],
64: 1:  'level': 2,
64: 1:  'nextQuestion': '16',
64: 1:  'questions': [
64: 1:    '1',
64: 1:    '2',
64: 1:    '3',
64: 1:    '4',
64: 1:    '5',
64: 1:    '6',
64: 1:    '7',
64: 1:    '8',
64: 1:    '9',
64: 1:    '10',
64: 1:    '11',
64: 1:    '12',
64: 1:    '13',
64: 1:    '14',
64: 1:    '15',
64: 1:    '16'
64: 1:  ]
64: 1:}
64: 1:Scores: 750
64: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz']')
64: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
65: 1:BoardData {
65: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
65: 1:  'expectedAnswer': '429:3*11*13:FizzDuzzCazz',
65: 1:  'history': [
65: 1:    {
65: 1:      'answer': '15:3*5:FizzBuzz',
65: 1:      'question': '1',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '21:3*7:FizzMuzz',
65: 1:      'question': '2',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '33:3*11:FizzDuzz',
65: 1:      'question': '3',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '35:5*7:BuzzMuzz',
65: 1:      'question': '4',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '39:3*13:FizzCazz',
65: 1:      'question': '5',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '55:5*11:BuzzDuzz',
65: 1:      'question': '6',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '65:5*13:BuzzCazz',
65: 1:      'question': '7',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '77:7*11:MuzzDuzz',
65: 1:      'question': '8',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '91:7*13:MuzzCazz',
65: 1:      'question': '9',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
65: 1:      'question': '10',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '143:11*13:DuzzCazz',
65: 1:      'question': '11',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
65: 1:      'question': '12',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
65: 1:      'question': '13',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
65: 1:      'question': '14',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
65: 1:      'question': '15',
65: 1:      'valid': true
65: 1:    },
65: 1:    {
65: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
65: 1:      'question': '16',
65: 1:      'valid': true
65: 1:    }
65: 1:  ],
65: 1:  'info': [
65: 1:    '✅f(1) = 15:3*5:FizzBuzz',
65: 1:    '✅f(2) = 21:3*7:FizzMuzz',
65: 1:    '✅f(3) = 33:3*11:FizzDuzz',
65: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
65: 1:    '✅f(5) = 39:3*13:FizzCazz',
65: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
65: 1:    '✅f(7) = 65:5*13:BuzzCazz',
65: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
65: 1:    '✅f(9) = 91:7*13:MuzzCazz',
65: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
65: 1:    '✅f(11) = 143:11*13:DuzzCazz',
65: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
65: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
65: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
65: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
65: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
65: 1:    '❌f(17) = ??? != 429:3*11*13:FizzDuzzCazz'
65: 1:  ],
65: 1:  'level': 2,
65: 1:  'nextQuestion': '17',
65: 1:  'questions': [
65: 1:    '1',
65: 1:    '2',
65: 1:    '3',
65: 1:    '4',
65: 1:    '5',
65: 1:    '6',
65: 1:    '7',
65: 1:    '8',
65: 1:    '9',
65: 1:    '10',
65: 1:    '11',
65: 1:    '12',
65: 1:    '13',
65: 1:    '14',
65: 1:    '15',
65: 1:    '16',
65: 1:    '17'
65: 1:  ]
65: 1:}
65: 1:Scores: 752
65: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz']')
65: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
66: 1:BoardData {
66: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
66: 1:  'expectedAnswer': '455:5*7*13:BuzzMuzzCazz',
66: 1:  'history': [
66: 1:    {
66: 1:      'answer': '15:3*5:FizzBuzz',
66: 1:      'question': '1',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '21:3*7:FizzMuzz',
66: 1:      'question': '2',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '33:3*11:FizzDuzz',
66: 1:      'question': '3',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '35:5*7:BuzzMuzz',
66: 1:      'question': '4',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '39:3*13:FizzCazz',
66: 1:      'question': '5',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '55:5*11:BuzzDuzz',
66: 1:      'question': '6',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '65:5*13:BuzzCazz',
66: 1:      'question': '7',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '77:7*11:MuzzDuzz',
66: 1:      'question': '8',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '91:7*13:MuzzCazz',
66: 1:      'question': '9',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
66: 1:      'question': '10',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '143:11*13:DuzzCazz',
66: 1:      'question': '11',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
66: 1:      'question': '12',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
66: 1:      'question': '13',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
66: 1:      'question': '14',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
66: 1:      'question': '15',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
66: 1:      'question': '16',
66: 1:      'valid': true
66: 1:    },
66: 1:    {
66: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
66: 1:      'question': '17',
66: 1:      'valid': true
66: 1:    }
66: 1:  ],
66: 1:  'info': [
66: 1:    '✅f(1) = 15:3*5:FizzBuzz',
66: 1:    '✅f(2) = 21:3*7:FizzMuzz',
66: 1:    '✅f(3) = 33:3*11:FizzDuzz',
66: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
66: 1:    '✅f(5) = 39:3*13:FizzCazz',
66: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
66: 1:    '✅f(7) = 65:5*13:BuzzCazz',
66: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
66: 1:    '✅f(9) = 91:7*13:MuzzCazz',
66: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
66: 1:    '✅f(11) = 143:11*13:DuzzCazz',
66: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
66: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
66: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
66: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
66: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
66: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
66: 1:    '❌f(18) = ??? != 455:5*7*13:BuzzMuzzCazz'
66: 1:  ],
66: 1:  'level': 2,
66: 1:  'nextQuestion': '18',
66: 1:  'questions': [
66: 1:    '1',
66: 1:    '2',
66: 1:    '3',
66: 1:    '4',
66: 1:    '5',
66: 1:    '6',
66: 1:    '7',
66: 1:    '8',
66: 1:    '9',
66: 1:    '10',
66: 1:    '11',
66: 1:    '12',
66: 1:    '13',
66: 1:    '14',
66: 1:    '15',
66: 1:    '16',
66: 1:    '17',
66: 1:    '18'
66: 1:  ]
66: 1:}
66: 1:Scores: 754
66: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz']')
66: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
67: 1:BoardData {
67: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
67: 1:  'expectedAnswer': '715:5*11*13:BuzzDuzzCazz',
67: 1:  'history': [
67: 1:    {
67: 1:      'answer': '15:3*5:FizzBuzz',
67: 1:      'question': '1',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '21:3*7:FizzMuzz',
67: 1:      'question': '2',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '33:3*11:FizzDuzz',
67: 1:      'question': '3',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '35:5*7:BuzzMuzz',
67: 1:      'question': '4',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '39:3*13:FizzCazz',
67: 1:      'question': '5',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '55:5*11:BuzzDuzz',
67: 1:      'question': '6',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '65:5*13:BuzzCazz',
67: 1:      'question': '7',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '77:7*11:MuzzDuzz',
67: 1:      'question': '8',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '91:7*13:MuzzCazz',
67: 1:      'question': '9',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
67: 1:      'question': '10',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '143:11*13:DuzzCazz',
67: 1:      'question': '11',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
67: 1:      'question': '12',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
67: 1:      'question': '13',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
67: 1:      'question': '14',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
67: 1:      'question': '15',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
67: 1:      'question': '16',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
67: 1:      'question': '17',
67: 1:      'valid': true
67: 1:    },
67: 1:    {
67: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
67: 1:      'question': '18',
67: 1:      'valid': true
67: 1:    }
67: 1:  ],
67: 1:  'info': [
67: 1:    '✅f(1) = 15:3*5:FizzBuzz',
67: 1:    '✅f(2) = 21:3*7:FizzMuzz',
67: 1:    '✅f(3) = 33:3*11:FizzDuzz',
67: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
67: 1:    '✅f(5) = 39:3*13:FizzCazz',
67: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
67: 1:    '✅f(7) = 65:5*13:BuzzCazz',
67: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
67: 1:    '✅f(9) = 91:7*13:MuzzCazz',
67: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
67: 1:    '✅f(11) = 143:11*13:DuzzCazz',
67: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
67: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
67: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
67: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
67: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
67: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
67: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
67: 1:    '❌f(19) = ??? != 715:5*11*13:BuzzDuzzCazz'
67: 1:  ],
67: 1:  'level': 2,
67: 1:  'nextQuestion': '19',
67: 1:  'questions': [
67: 1:    '1',
67: 1:    '2',
67: 1:    '3',
67: 1:    '4',
67: 1:    '5',
67: 1:    '6',
67: 1:    '7',
67: 1:    '8',
67: 1:    '9',
67: 1:    '10',
67: 1:    '11',
67: 1:    '12',
67: 1:    '13',
67: 1:    '14',
67: 1:    '15',
67: 1:    '16',
67: 1:    '17',
67: 1:    '18',
67: 1:    '19'
67: 1:  ]
67: 1:}
67: 1:Scores: 756
67: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz']')
67: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
68: 1:BoardData {
68: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
68: 1:  'expectedAnswer': '1001:7*11*13:MuzzDuzzCazz',
68: 1:  'history': [
68: 1:    {
68: 1:      'answer': '15:3*5:FizzBuzz',
68: 1:      'question': '1',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '21:3*7:FizzMuzz',
68: 1:      'question': '2',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '33:3*11:FizzDuzz',
68: 1:      'question': '3',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '35:5*7:BuzzMuzz',
68: 1:      'question': '4',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '39:3*13:FizzCazz',
68: 1:      'question': '5',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '55:5*11:BuzzDuzz',
68: 1:      'question': '6',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '65:5*13:BuzzCazz',
68: 1:      'question': '7',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '77:7*11:MuzzDuzz',
68: 1:      'question': '8',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '91:7*13:MuzzCazz',
68: 1:      'question': '9',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
68: 1:      'question': '10',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '143:11*13:DuzzCazz',
68: 1:      'question': '11',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
68: 1:      'question': '12',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
68: 1:      'question': '13',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
68: 1:      'question': '14',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
68: 1:      'question': '15',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
68: 1:      'question': '16',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
68: 1:      'question': '17',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
68: 1:      'question': '18',
68: 1:      'valid': true
68: 1:    },
68: 1:    {
68: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
68: 1:      'question': '19',
68: 1:      'valid': true
68: 1:    }
68: 1:  ],
68: 1:  'info': [
68: 1:    '✅f(1) = 15:3*5:FizzBuzz',
68: 1:    '✅f(2) = 21:3*7:FizzMuzz',
68: 1:    '✅f(3) = 33:3*11:FizzDuzz',
68: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
68: 1:    '✅f(5) = 39:3*13:FizzCazz',
68: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
68: 1:    '✅f(7) = 65:5*13:BuzzCazz',
68: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
68: 1:    '✅f(9) = 91:7*13:MuzzCazz',
68: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
68: 1:    '✅f(11) = 143:11*13:DuzzCazz',
68: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
68: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
68: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
68: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
68: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
68: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
68: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
68: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
68: 1:    '❌f(20) = ??? != 1001:7*11*13:MuzzDuzzCazz'
68: 1:  ],
68: 1:  'level': 2,
68: 1:  'nextQuestion': '20',
68: 1:  'questions': [
68: 1:    '1',
68: 1:    '2',
68: 1:    '3',
68: 1:    '4',
68: 1:    '5',
68: 1:    '6',
68: 1:    '7',
68: 1:    '8',
68: 1:    '9',
68: 1:    '10',
68: 1:    '11',
68: 1:    '12',
68: 1:    '13',
68: 1:    '14',
68: 1:    '15',
68: 1:    '16',
68: 1:    '17',
68: 1:    '18',
68: 1:    '19',
68: 1:    '20'
68: 1:  ]
68: 1:}
68: 1:Scores: 758
68: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz']')
68: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
69: 1:BoardData {
69: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
69: 1:  'expectedAnswer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
69: 1:  'history': [
69: 1:    {
69: 1:      'answer': '15:3*5:FizzBuzz',
69: 1:      'question': '1',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '21:3*7:FizzMuzz',
69: 1:      'question': '2',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '33:3*11:FizzDuzz',
69: 1:      'question': '3',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '35:5*7:BuzzMuzz',
69: 1:      'question': '4',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '39:3*13:FizzCazz',
69: 1:      'question': '5',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '55:5*11:BuzzDuzz',
69: 1:      'question': '6',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '65:5*13:BuzzCazz',
69: 1:      'question': '7',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '77:7*11:MuzzDuzz',
69: 1:      'question': '8',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '91:7*13:MuzzCazz',
69: 1:      'question': '9',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
69: 1:      'question': '10',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '143:11*13:DuzzCazz',
69: 1:      'question': '11',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
69: 1:      'question': '12',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
69: 1:      'question': '13',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
69: 1:      'question': '14',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
69: 1:      'question': '15',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
69: 1:      'question': '16',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
69: 1:      'question': '17',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
69: 1:      'question': '18',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
69: 1:      'question': '19',
69: 1:      'valid': true
69: 1:    },
69: 1:    {
69: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
69: 1:      'question': '20',
69: 1:      'valid': true
69: 1:    }
69: 1:  ],
69: 1:  'info': [
69: 1:    '✅f(1) = 15:3*5:FizzBuzz',
69: 1:    '✅f(2) = 21:3*7:FizzMuzz',
69: 1:    '✅f(3) = 33:3*11:FizzDuzz',
69: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
69: 1:    '✅f(5) = 39:3*13:FizzCazz',
69: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
69: 1:    '✅f(7) = 65:5*13:BuzzCazz',
69: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
69: 1:    '✅f(9) = 91:7*13:MuzzCazz',
69: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
69: 1:    '✅f(11) = 143:11*13:DuzzCazz',
69: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
69: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
69: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
69: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
69: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
69: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
69: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
69: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
69: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
69: 1:    '❌f(21) = ??? != 1155:3*5*7*11:FizzBuzzMuzzDuzz'
69: 1:  ],
69: 1:  'level': 2,
69: 1:  'nextQuestion': '21',
69: 1:  'questions': [
69: 1:    '1',
69: 1:    '2',
69: 1:    '3',
69: 1:    '4',
69: 1:    '5',
69: 1:    '6',
69: 1:    '7',
69: 1:    '8',
69: 1:    '9',
69: 1:    '10',
69: 1:    '11',
69: 1:    '12',
69: 1:    '13',
69: 1:    '14',
69: 1:    '15',
69: 1:    '16',
69: 1:    '17',
69: 1:    '18',
69: 1:    '19',
69: 1:    '20',
69: 1:    '21'
69: 1:  ]
69: 1:}
69: 1:Scores: 760
69: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz']')
69: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
70: 1:BoardData {
70: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
70: 1:  'expectedAnswer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
70: 1:  'history': [
70: 1:    {
70: 1:      'answer': '15:3*5:FizzBuzz',
70: 1:      'question': '1',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '21:3*7:FizzMuzz',
70: 1:      'question': '2',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '33:3*11:FizzDuzz',
70: 1:      'question': '3',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '35:5*7:BuzzMuzz',
70: 1:      'question': '4',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '39:3*13:FizzCazz',
70: 1:      'question': '5',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '55:5*11:BuzzDuzz',
70: 1:      'question': '6',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '65:5*13:BuzzCazz',
70: 1:      'question': '7',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '77:7*11:MuzzDuzz',
70: 1:      'question': '8',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '91:7*13:MuzzCazz',
70: 1:      'question': '9',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
70: 1:      'question': '10',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '143:11*13:DuzzCazz',
70: 1:      'question': '11',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
70: 1:      'question': '12',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
70: 1:      'question': '13',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
70: 1:      'question': '14',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
70: 1:      'question': '15',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
70: 1:      'question': '16',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
70: 1:      'question': '17',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
70: 1:      'question': '18',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
70: 1:      'question': '19',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
70: 1:      'question': '20',
70: 1:      'valid': true
70: 1:    },
70: 1:    {
70: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
70: 1:      'question': '21',
70: 1:      'valid': true
70: 1:    }
70: 1:  ],
70: 1:  'info': [
70: 1:    '✅f(1) = 15:3*5:FizzBuzz',
70: 1:    '✅f(2) = 21:3*7:FizzMuzz',
70: 1:    '✅f(3) = 33:3*11:FizzDuzz',
70: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
70: 1:    '✅f(5) = 39:3*13:FizzCazz',
70: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
70: 1:    '✅f(7) = 65:5*13:BuzzCazz',
70: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
70: 1:    '✅f(9) = 91:7*13:MuzzCazz',
70: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
70: 1:    '✅f(11) = 143:11*13:DuzzCazz',
70: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
70: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
70: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
70: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
70: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
70: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
70: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
70: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
70: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
70: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
70: 1:    '❌f(22) = ??? != 1365:3*5*7*13:FizzBuzzMuzzCazz'
70: 1:  ],
70: 1:  'level': 2,
70: 1:  'nextQuestion': '22',
70: 1:  'questions': [
70: 1:    '1',
70: 1:    '2',
70: 1:    '3',
70: 1:    '4',
70: 1:    '5',
70: 1:    '6',
70: 1:    '7',
70: 1:    '8',
70: 1:    '9',
70: 1:    '10',
70: 1:    '11',
70: 1:    '12',
70: 1:    '13',
70: 1:    '14',
70: 1:    '15',
70: 1:    '16',
70: 1:    '17',
70: 1:    '18',
70: 1:    '19',
70: 1:    '20',
70: 1:    '21',
70: 1:    '22'
70: 1:  ]
70: 1:}
70: 1:Scores: 762
70: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz']')
70: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
71: 1:BoardData {
71: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
71: 1:  'expectedAnswer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
71: 1:  'history': [
71: 1:    {
71: 1:      'answer': '15:3*5:FizzBuzz',
71: 1:      'question': '1',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '21:3*7:FizzMuzz',
71: 1:      'question': '2',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '33:3*11:FizzDuzz',
71: 1:      'question': '3',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '35:5*7:BuzzMuzz',
71: 1:      'question': '4',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '39:3*13:FizzCazz',
71: 1:      'question': '5',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '55:5*11:BuzzDuzz',
71: 1:      'question': '6',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '65:5*13:BuzzCazz',
71: 1:      'question': '7',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '77:7*11:MuzzDuzz',
71: 1:      'question': '8',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '91:7*13:MuzzCazz',
71: 1:      'question': '9',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
71: 1:      'question': '10',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '143:11*13:DuzzCazz',
71: 1:      'question': '11',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
71: 1:      'question': '12',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
71: 1:      'question': '13',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
71: 1:      'question': '14',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
71: 1:      'question': '15',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
71: 1:      'question': '16',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
71: 1:      'question': '17',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
71: 1:      'question': '18',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
71: 1:      'question': '19',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
71: 1:      'question': '20',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
71: 1:      'question': '21',
71: 1:      'valid': true
71: 1:    },
71: 1:    {
71: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
71: 1:      'question': '22',
71: 1:      'valid': true
71: 1:    }
71: 1:  ],
71: 1:  'info': [
71: 1:    '✅f(1) = 15:3*5:FizzBuzz',
71: 1:    '✅f(2) = 21:3*7:FizzMuzz',
71: 1:    '✅f(3) = 33:3*11:FizzDuzz',
71: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
71: 1:    '✅f(5) = 39:3*13:FizzCazz',
71: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
71: 1:    '✅f(7) = 65:5*13:BuzzCazz',
71: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
71: 1:    '✅f(9) = 91:7*13:MuzzCazz',
71: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
71: 1:    '✅f(11) = 143:11*13:DuzzCazz',
71: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
71: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
71: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
71: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
71: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
71: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
71: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
71: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
71: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
71: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
71: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
71: 1:    '❌f(23) = ??? != 2145:3*5*11*13:FizzBuzzDuzzCazz'
71: 1:  ],
71: 1:  'level': 2,
71: 1:  'nextQuestion': '23',
71: 1:  'questions': [
71: 1:    '1',
71: 1:    '2',
71: 1:    '3',
71: 1:    '4',
71: 1:    '5',
71: 1:    '6',
71: 1:    '7',
71: 1:    '8',
71: 1:    '9',
71: 1:    '10',
71: 1:    '11',
71: 1:    '12',
71: 1:    '13',
71: 1:    '14',
71: 1:    '15',
71: 1:    '16',
71: 1:    '17',
71: 1:    '18',
71: 1:    '19',
71: 1:    '20',
71: 1:    '21',
71: 1:    '22',
71: 1:    '23'
71: 1:  ]
71: 1:}
71: 1:Scores: 764
71: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz', '2145:3*5*11*13:FizzBuzzDuzzCazz']')
71: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
72: 1:BoardData {
72: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
72: 1:  'expectedAnswer': '3003:3*7*11*13:FizzMuzzDuzzCazz',
72: 1:  'history': [
72: 1:    {
72: 1:      'answer': '15:3*5:FizzBuzz',
72: 1:      'question': '1',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '21:3*7:FizzMuzz',
72: 1:      'question': '2',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '33:3*11:FizzDuzz',
72: 1:      'question': '3',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '35:5*7:BuzzMuzz',
72: 1:      'question': '4',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '39:3*13:FizzCazz',
72: 1:      'question': '5',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '55:5*11:BuzzDuzz',
72: 1:      'question': '6',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '65:5*13:BuzzCazz',
72: 1:      'question': '7',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '77:7*11:MuzzDuzz',
72: 1:      'question': '8',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '91:7*13:MuzzCazz',
72: 1:      'question': '9',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
72: 1:      'question': '10',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '143:11*13:DuzzCazz',
72: 1:      'question': '11',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
72: 1:      'question': '12',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
72: 1:      'question': '13',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
72: 1:      'question': '14',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
72: 1:      'question': '15',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
72: 1:      'question': '16',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
72: 1:      'question': '17',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
72: 1:      'question': '18',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
72: 1:      'question': '19',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
72: 1:      'question': '20',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
72: 1:      'question': '21',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
72: 1:      'question': '22',
72: 1:      'valid': true
72: 1:    },
72: 1:    {
72: 1:      'answer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
72: 1:      'question': '23',
72: 1:      'valid': true
72: 1:    }
72: 1:  ],
72: 1:  'info': [
72: 1:    '✅f(1) = 15:3*5:FizzBuzz',
72: 1:    '✅f(2) = 21:3*7:FizzMuzz',
72: 1:    '✅f(3) = 33:3*11:FizzDuzz',
72: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
72: 1:    '✅f(5) = 39:3*13:FizzCazz',
72: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
72: 1:    '✅f(7) = 65:5*13:BuzzCazz',
72: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
72: 1:    '✅f(9) = 91:7*13:MuzzCazz',
72: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
72: 1:    '✅f(11) = 143:11*13:DuzzCazz',
72: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
72: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
72: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
72: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
72: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
72: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
72: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
72: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
72: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
72: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
72: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
72: 1:    '✅f(23) = 2145:3*5*11*13:FizzBuzzDuzzCazz',
72: 1:    '❌f(24) = ??? != 3003:3*7*11*13:FizzMuzzDuzzCazz'
72: 1:  ],
72: 1:  'level': 2,
72: 1:  'nextQuestion': '24',
72: 1:  'questions': [
72: 1:    '1',
72: 1:    '2',
72: 1:    '3',
72: 1:    '4',
72: 1:    '5',
72: 1:    '6',
72: 1:    '7',
72: 1:    '8',
72: 1:    '9',
72: 1:    '10',
72: 1:    '11',
72: 1:    '12',
72: 1:    '13',
72: 1:    '14',
72: 1:    '15',
72: 1:    '16',
72: 1:    '17',
72: 1:    '18',
72: 1:    '19',
72: 1:    '20',
72: 1:    '21',
72: 1:    '22',
72: 1:    '23',
72: 1:    '24'
72: 1:  ]
72: 1:}
72: 1:Scores: 766
72: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz', '2145:3*5*11*13:FizzBuzzDuzzCazz', '3003:3*7*11*13:FizzMuzzDuzzCazz']')
72: 1:Fire Event: PassTest{complexity=7, testCount=25}
------------------------------------------
73: 1:BoardData {
73: 1:  'description': ['Write a javascript method that takes one int argument and returns a string based on fizzBuzz algorithm:\n1=>15:3*5:FizzBuzz\n2=>21:3*7:FizzMuzz\n3=>33:3*11:FizzDuzz\n4=>35:5*7:BuzzMuzz\n25=>none'],
73: 1:  'expectedAnswer': 'none',
73: 1:  'history': [
73: 1:    {
73: 1:      'answer': '15:3*5:FizzBuzz',
73: 1:      'question': '1',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '21:3*7:FizzMuzz',
73: 1:      'question': '2',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '33:3*11:FizzDuzz',
73: 1:      'question': '3',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '35:5*7:BuzzMuzz',
73: 1:      'question': '4',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '39:3*13:FizzCazz',
73: 1:      'question': '5',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '55:5*11:BuzzDuzz',
73: 1:      'question': '6',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '65:5*13:BuzzCazz',
73: 1:      'question': '7',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '77:7*11:MuzzDuzz',
73: 1:      'question': '8',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '91:7*13:MuzzCazz',
73: 1:      'question': '9',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
73: 1:      'question': '10',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '143:11*13:DuzzCazz',
73: 1:      'question': '11',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
73: 1:      'question': '12',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
73: 1:      'question': '13',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
73: 1:      'question': '14',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
73: 1:      'question': '15',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
73: 1:      'question': '16',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
73: 1:      'question': '17',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
73: 1:      'question': '18',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
73: 1:      'question': '19',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
73: 1:      'question': '20',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
73: 1:      'question': '21',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
73: 1:      'question': '22',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
73: 1:      'question': '23',
73: 1:      'valid': true
73: 1:    },
73: 1:    {
73: 1:      'answer': '3003:3*7*11*13:FizzMuzzDuzzCazz',
73: 1:      'question': '24',
73: 1:      'valid': true
73: 1:    }
73: 1:  ],
73: 1:  'info': [
73: 1:    '✅f(1) = 15:3*5:FizzBuzz',
73: 1:    '✅f(2) = 21:3*7:FizzMuzz',
73: 1:    '✅f(3) = 33:3*11:FizzDuzz',
73: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
73: 1:    '✅f(5) = 39:3*13:FizzCazz',
73: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
73: 1:    '✅f(7) = 65:5*13:BuzzCazz',
73: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
73: 1:    '✅f(9) = 91:7*13:MuzzCazz',
73: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
73: 1:    '✅f(11) = 143:11*13:DuzzCazz',
73: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
73: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
73: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
73: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
73: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
73: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
73: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
73: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
73: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
73: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
73: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
73: 1:    '✅f(23) = 2145:3*5*11*13:FizzBuzzDuzzCazz',
73: 1:    '✅f(24) = 3003:3*7*11*13:FizzMuzzDuzzCazz',
73: 1:    '❌f(25) = ??? != none'
73: 1:  ],
73: 1:  'level': 2,
73: 1:  'nextQuestion': '25',
73: 1:  'questions': [
73: 1:    '1',
73: 1:    '2',
73: 1:    '3',
73: 1:    '4',
73: 1:    '5',
73: 1:    '6',
73: 1:    '7',
73: 1:    '8',
73: 1:    '9',
73: 1:    '10',
73: 1:    '11',
73: 1:    '12',
73: 1:    '13',
73: 1:    '14',
73: 1:    '15',
73: 1:    '16',
73: 1:    '17',
73: 1:    '18',
73: 1:    '19',
73: 1:    '20',
73: 1:    '21',
73: 1:    '22',
73: 1:    '23',
73: 1:    '24',
73: 1:    '25'
73: 1:  ]
73: 1:}
73: 1:Scores: 768
73: 1:Answer: message('['15:3*5:FizzBuzz', '21:3*7:FizzMuzz', '33:3*11:FizzDuzz', '35:5*7:BuzzMuzz', '39:3*13:FizzCazz', '55:5*11:BuzzDuzz', '65:5*13:BuzzCazz', '77:7*11:MuzzDuzz', '91:7*13:MuzzCazz', '105:3*5*7:FizzBuzzMuzz', '143:11*13:DuzzCazz', '165:3*5*11:FizzBuzzDuzz', '195:3*5*13:FizzBuzzCazz', '231:3*7*11:FizzMuzzDuzz', '273:3*7*13:FizzMuzzCazz', '385:5*7*11:BuzzMuzzDuzz', '429:3*11*13:FizzDuzzCazz', '455:5*7*13:BuzzMuzzCazz', '715:5*11*13:BuzzDuzzCazz', '1001:7*11*13:MuzzDuzzCazz', '1155:3*5*7*11:FizzBuzzMuzzDuzz', '1365:3*5*7*13:FizzBuzzMuzzCazz', '2145:3*5*11*13:FizzBuzzDuzzCazz', '3003:3*7*11*13:FizzMuzzDuzzCazz', 'none']')
73: 1:Fire Event: PassTest{complexity=7, testCount=25}
73: 1:Fire Event: NextAlgorithm{complexity=7, time=0}
------------------------------------------
74: 1:BoardData {
74: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
74: 1:  'history': [
74: 1:    {
74: 1:      'answer': '15:3*5:FizzBuzz',
74: 1:      'question': '1',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '21:3*7:FizzMuzz',
74: 1:      'question': '2',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '33:3*11:FizzDuzz',
74: 1:      'question': '3',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '35:5*7:BuzzMuzz',
74: 1:      'question': '4',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '39:3*13:FizzCazz',
74: 1:      'question': '5',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '55:5*11:BuzzDuzz',
74: 1:      'question': '6',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '65:5*13:BuzzCazz',
74: 1:      'question': '7',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '77:7*11:MuzzDuzz',
74: 1:      'question': '8',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '91:7*13:MuzzCazz',
74: 1:      'question': '9',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '105:3*5*7:FizzBuzzMuzz',
74: 1:      'question': '10',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '143:11*13:DuzzCazz',
74: 1:      'question': '11',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '165:3*5*11:FizzBuzzDuzz',
74: 1:      'question': '12',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '195:3*5*13:FizzBuzzCazz',
74: 1:      'question': '13',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '231:3*7*11:FizzMuzzDuzz',
74: 1:      'question': '14',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '273:3*7*13:FizzMuzzCazz',
74: 1:      'question': '15',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '385:5*7*11:BuzzMuzzDuzz',
74: 1:      'question': '16',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '429:3*11*13:FizzDuzzCazz',
74: 1:      'question': '17',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '455:5*7*13:BuzzMuzzCazz',
74: 1:      'question': '18',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '715:5*11*13:BuzzDuzzCazz',
74: 1:      'question': '19',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '1001:7*11*13:MuzzDuzzCazz',
74: 1:      'question': '20',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '1155:3*5*7*11:FizzBuzzMuzzDuzz',
74: 1:      'question': '21',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '1365:3*5*7*13:FizzBuzzMuzzCazz',
74: 1:      'question': '22',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '2145:3*5*11*13:FizzBuzzDuzzCazz',
74: 1:      'question': '23',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': '3003:3*7*11*13:FizzMuzzDuzzCazz',
74: 1:      'question': '24',
74: 1:      'valid': true
74: 1:    },
74: 1:    {
74: 1:      'answer': 'none',
74: 1:      'question': '25',
74: 1:      'valid': true
74: 1:    }
74: 1:  ],
74: 1:  'info': [
74: 1:    '✅f(1) = 15:3*5:FizzBuzz',
74: 1:    '✅f(2) = 21:3*7:FizzMuzz',
74: 1:    '✅f(3) = 33:3*11:FizzDuzz',
74: 1:    '✅f(4) = 35:5*7:BuzzMuzz',
74: 1:    '✅f(5) = 39:3*13:FizzCazz',
74: 1:    '✅f(6) = 55:5*11:BuzzDuzz',
74: 1:    '✅f(7) = 65:5*13:BuzzCazz',
74: 1:    '✅f(8) = 77:7*11:MuzzDuzz',
74: 1:    '✅f(9) = 91:7*13:MuzzCazz',
74: 1:    '✅f(10) = 105:3*5*7:FizzBuzzMuzz',
74: 1:    '✅f(11) = 143:11*13:DuzzCazz',
74: 1:    '✅f(12) = 165:3*5*11:FizzBuzzDuzz',
74: 1:    '✅f(13) = 195:3*5*13:FizzBuzzCazz',
74: 1:    '✅f(14) = 231:3*7*11:FizzMuzzDuzz',
74: 1:    '✅f(15) = 273:3*7*13:FizzMuzzCazz',
74: 1:    '✅f(16) = 385:5*7*11:BuzzMuzzDuzz',
74: 1:    '✅f(17) = 429:3*11*13:FizzDuzzCazz',
74: 1:    '✅f(18) = 455:5*7*13:BuzzMuzzCazz',
74: 1:    '✅f(19) = 715:5*11*13:BuzzDuzzCazz',
74: 1:    '✅f(20) = 1001:7*11*13:MuzzDuzzCazz',
74: 1:    '✅f(21) = 1155:3*5*7*11:FizzBuzzMuzzDuzz',
74: 1:    '✅f(22) = 1365:3*5*7*13:FizzBuzzMuzzCazz',
74: 1:    '✅f(23) = 2145:3*5*11*13:FizzBuzzDuzzCazz',
74: 1:    '✅f(24) = 3003:3*7*11*13:FizzMuzzDuzzCazz',
74: 1:    '✅f(25) = none'
74: 1:  ],
74: 1:  'level': 2,
74: 1:  'questions': []
74: 1:}
74: 1:Scores: 1714
74: 1:Answer: message('StartNextLevel')
74: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
75: 1:BoardData {
75: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
75: 1:  'expectedAnswer': '0',
75: 1:  'history': [],
75: 1:  'info': ['❌f(1) = ??? != 0'],
75: 1:  'level': 3,
75: 1:  'nextQuestion': '1',
75: 1:  'questions': ['1']
75: 1:}
75: 1:Scores: 1714
75: 1:Answer: message('['0']')
75: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
76: 1:BoardData {
76: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
76: 1:  'expectedAnswer': '4',
76: 1:  'history': [{
76: 1:    'answer': '0',
76: 1:    'question': '1',
76: 1:    'valid': true
76: 1:  }],
76: 1:  'info': [
76: 1:    '✅f(1) = 0',
76: 1:    '❌f(2) = ??? != 4'
76: 1:  ],
76: 1:  'level': 3,
76: 1:  'nextQuestion': '2',
76: 1:  'questions': [
76: 1:    '1',
76: 1:    '2'
76: 1:  ]
76: 1:}
76: 1:Scores: 1718
76: 1:Answer: message('['0', '4']')
76: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
77: 1:BoardData {
77: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
77: 1:  'expectedAnswer': '22',
77: 1:  'history': [
77: 1:    {
77: 1:      'answer': '0',
77: 1:      'question': '1',
77: 1:      'valid': true
77: 1:    },
77: 1:    {
77: 1:      'answer': '4',
77: 1:      'question': '2',
77: 1:      'valid': true
77: 1:    }
77: 1:  ],
77: 1:  'info': [
77: 1:    '✅f(1) = 0',
77: 1:    '✅f(2) = 4',
77: 1:    '❌f(3) = ??? != 22'
77: 1:  ],
77: 1:  'level': 3,
77: 1:  'nextQuestion': '3',
77: 1:  'questions': [
77: 1:    '1',
77: 1:    '2',
77: 1:    '3'
77: 1:  ]
77: 1:}
77: 1:Scores: 1722
77: 1:Answer: message('['0', '4', '22']')
77: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
78: 1:BoardData {
78: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
78: 1:  'expectedAnswer': '70',
78: 1:  'history': [
78: 1:    {
78: 1:      'answer': '0',
78: 1:      'question': '1',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '4',
78: 1:      'question': '2',
78: 1:      'valid': true
78: 1:    },
78: 1:    {
78: 1:      'answer': '22',
78: 1:      'question': '3',
78: 1:      'valid': true
78: 1:    }
78: 1:  ],
78: 1:  'info': [
78: 1:    '✅f(1) = 0',
78: 1:    '✅f(2) = 4',
78: 1:    '✅f(3) = 22',
78: 1:    '❌f(4) = ??? != 70'
78: 1:  ],
78: 1:  'level': 3,
78: 1:  'nextQuestion': '4',
78: 1:  'questions': [
78: 1:    '1',
78: 1:    '2',
78: 1:    '3',
78: 1:    '4'
78: 1:  ]
78: 1:}
78: 1:Scores: 1726
78: 1:Answer: message('['0', '4', '22', '70']')
78: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
79: 1:BoardData {
79: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
79: 1:  'expectedAnswer': '170',
79: 1:  'history': [
79: 1:    {
79: 1:      'answer': '0',
79: 1:      'question': '1',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '4',
79: 1:      'question': '2',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '22',
79: 1:      'question': '3',
79: 1:      'valid': true
79: 1:    },
79: 1:    {
79: 1:      'answer': '70',
79: 1:      'question': '4',
79: 1:      'valid': true
79: 1:    }
79: 1:  ],
79: 1:  'info': [
79: 1:    '✅f(1) = 0',
79: 1:    '✅f(2) = 4',
79: 1:    '✅f(3) = 22',
79: 1:    '✅f(4) = 70',
79: 1:    '❌f(5) = ??? != 170'
79: 1:  ],
79: 1:  'level': 3,
79: 1:  'nextQuestion': '5',
79: 1:  'questions': [
79: 1:    '1',
79: 1:    '2',
79: 1:    '3',
79: 1:    '4',
79: 1:    '5'
79: 1:  ]
79: 1:}
79: 1:Scores: 1730
79: 1:Answer: message('['0', '4', '22', '70', '170']')
79: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
80: 1:BoardData {
80: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
80: 1:  'expectedAnswer': '350',
80: 1:  'history': [
80: 1:    {
80: 1:      'answer': '0',
80: 1:      'question': '1',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '4',
80: 1:      'question': '2',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '22',
80: 1:      'question': '3',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '70',
80: 1:      'question': '4',
80: 1:      'valid': true
80: 1:    },
80: 1:    {
80: 1:      'answer': '170',
80: 1:      'question': '5',
80: 1:      'valid': true
80: 1:    }
80: 1:  ],
80: 1:  'info': [
80: 1:    '✅f(1) = 0',
80: 1:    '✅f(2) = 4',
80: 1:    '✅f(3) = 22',
80: 1:    '✅f(4) = 70',
80: 1:    '✅f(5) = 170',
80: 1:    '❌f(6) = ??? != 350'
80: 1:  ],
80: 1:  'level': 3,
80: 1:  'nextQuestion': '6',
80: 1:  'questions': [
80: 1:    '1',
80: 1:    '2',
80: 1:    '3',
80: 1:    '4',
80: 1:    '5',
80: 1:    '6'
80: 1:  ]
80: 1:}
80: 1:Scores: 1734
80: 1:Answer: message('['0', '4', '22', '70', '170', '350']')
80: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
81: 1:BoardData {
81: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
81: 1:  'expectedAnswer': '644',
81: 1:  'history': [
81: 1:    {
81: 1:      'answer': '0',
81: 1:      'question': '1',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '4',
81: 1:      'question': '2',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '22',
81: 1:      'question': '3',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '70',
81: 1:      'question': '4',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '170',
81: 1:      'question': '5',
81: 1:      'valid': true
81: 1:    },
81: 1:    {
81: 1:      'answer': '350',
81: 1:      'question': '6',
81: 1:      'valid': true
81: 1:    }
81: 1:  ],
81: 1:  'info': [
81: 1:    '✅f(1) = 0',
81: 1:    '✅f(2) = 4',
81: 1:    '✅f(3) = 22',
81: 1:    '✅f(4) = 70',
81: 1:    '✅f(5) = 170',
81: 1:    '✅f(6) = 350',
81: 1:    '❌f(7) = ??? != 644'
81: 1:  ],
81: 1:  'level': 3,
81: 1:  'nextQuestion': '7',
81: 1:  'questions': [
81: 1:    '1',
81: 1:    '2',
81: 1:    '3',
81: 1:    '4',
81: 1:    '5',
81: 1:    '6',
81: 1:    '7'
81: 1:  ]
81: 1:}
81: 1:Scores: 1738
81: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644']')
81: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
82: 1:BoardData {
82: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
82: 1:  'expectedAnswer': '1092',
82: 1:  'history': [
82: 1:    {
82: 1:      'answer': '0',
82: 1:      'question': '1',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '4',
82: 1:      'question': '2',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '22',
82: 1:      'question': '3',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '70',
82: 1:      'question': '4',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '170',
82: 1:      'question': '5',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '350',
82: 1:      'question': '6',
82: 1:      'valid': true
82: 1:    },
82: 1:    {
82: 1:      'answer': '644',
82: 1:      'question': '7',
82: 1:      'valid': true
82: 1:    }
82: 1:  ],
82: 1:  'info': [
82: 1:    '✅f(1) = 0',
82: 1:    '✅f(2) = 4',
82: 1:    '✅f(3) = 22',
82: 1:    '✅f(4) = 70',
82: 1:    '✅f(5) = 170',
82: 1:    '✅f(6) = 350',
82: 1:    '✅f(7) = 644',
82: 1:    '❌f(8) = ??? != 1092'
82: 1:  ],
82: 1:  'level': 3,
82: 1:  'nextQuestion': '8',
82: 1:  'questions': [
82: 1:    '1',
82: 1:    '2',
82: 1:    '3',
82: 1:    '4',
82: 1:    '5',
82: 1:    '6',
82: 1:    '7',
82: 1:    '8'
82: 1:  ]
82: 1:}
82: 1:Scores: 1742
82: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092']')
82: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
83: 1:BoardData {
83: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
83: 1:  'expectedAnswer': '1740',
83: 1:  'history': [
83: 1:    {
83: 1:      'answer': '0',
83: 1:      'question': '1',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '4',
83: 1:      'question': '2',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '22',
83: 1:      'question': '3',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '70',
83: 1:      'question': '4',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '170',
83: 1:      'question': '5',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '350',
83: 1:      'question': '6',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '644',
83: 1:      'question': '7',
83: 1:      'valid': true
83: 1:    },
83: 1:    {
83: 1:      'answer': '1092',
83: 1:      'question': '8',
83: 1:      'valid': true
83: 1:    }
83: 1:  ],
83: 1:  'info': [
83: 1:    '✅f(1) = 0',
83: 1:    '✅f(2) = 4',
83: 1:    '✅f(3) = 22',
83: 1:    '✅f(4) = 70',
83: 1:    '✅f(5) = 170',
83: 1:    '✅f(6) = 350',
83: 1:    '✅f(7) = 644',
83: 1:    '✅f(8) = 1092',
83: 1:    '❌f(9) = ??? != 1740'
83: 1:  ],
83: 1:  'level': 3,
83: 1:  'nextQuestion': '9',
83: 1:  'questions': [
83: 1:    '1',
83: 1:    '2',
83: 1:    '3',
83: 1:    '4',
83: 1:    '5',
83: 1:    '6',
83: 1:    '7',
83: 1:    '8',
83: 1:    '9'
83: 1:  ]
83: 1:}
83: 1:Scores: 1746
83: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740']')
83: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
84: 1:BoardData {
84: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
84: 1:  'expectedAnswer': '2640',
84: 1:  'history': [
84: 1:    {
84: 1:      'answer': '0',
84: 1:      'question': '1',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '4',
84: 1:      'question': '2',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '22',
84: 1:      'question': '3',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '70',
84: 1:      'question': '4',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '170',
84: 1:      'question': '5',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '350',
84: 1:      'question': '6',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '644',
84: 1:      'question': '7',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '1092',
84: 1:      'question': '8',
84: 1:      'valid': true
84: 1:    },
84: 1:    {
84: 1:      'answer': '1740',
84: 1:      'question': '9',
84: 1:      'valid': true
84: 1:    }
84: 1:  ],
84: 1:  'info': [
84: 1:    '✅f(1) = 0',
84: 1:    '✅f(2) = 4',
84: 1:    '✅f(3) = 22',
84: 1:    '✅f(4) = 70',
84: 1:    '✅f(5) = 170',
84: 1:    '✅f(6) = 350',
84: 1:    '✅f(7) = 644',
84: 1:    '✅f(8) = 1092',
84: 1:    '✅f(9) = 1740',
84: 1:    '❌f(10) = ??? != 2640'
84: 1:  ],
84: 1:  'level': 3,
84: 1:  'nextQuestion': '10',
84: 1:  'questions': [
84: 1:    '1',
84: 1:    '2',
84: 1:    '3',
84: 1:    '4',
84: 1:    '5',
84: 1:    '6',
84: 1:    '7',
84: 1:    '8',
84: 1:    '9',
84: 1:    '10'
84: 1:  ]
84: 1:}
84: 1:Scores: 1750
84: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640']')
84: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
85: 1:BoardData {
85: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
85: 1:  'expectedAnswer': '3850',
85: 1:  'history': [
85: 1:    {
85: 1:      'answer': '0',
85: 1:      'question': '1',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '4',
85: 1:      'question': '2',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '22',
85: 1:      'question': '3',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '70',
85: 1:      'question': '4',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '170',
85: 1:      'question': '5',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '350',
85: 1:      'question': '6',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '644',
85: 1:      'question': '7',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '1092',
85: 1:      'question': '8',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '1740',
85: 1:      'question': '9',
85: 1:      'valid': true
85: 1:    },
85: 1:    {
85: 1:      'answer': '2640',
85: 1:      'question': '10',
85: 1:      'valid': true
85: 1:    }
85: 1:  ],
85: 1:  'info': [
85: 1:    '✅f(1) = 0',
85: 1:    '✅f(2) = 4',
85: 1:    '✅f(3) = 22',
85: 1:    '✅f(4) = 70',
85: 1:    '✅f(5) = 170',
85: 1:    '✅f(6) = 350',
85: 1:    '✅f(7) = 644',
85: 1:    '✅f(8) = 1092',
85: 1:    '✅f(9) = 1740',
85: 1:    '✅f(10) = 2640',
85: 1:    '❌f(11) = ??? != 3850'
85: 1:  ],
85: 1:  'level': 3,
85: 1:  'nextQuestion': '11',
85: 1:  'questions': [
85: 1:    '1',
85: 1:    '2',
85: 1:    '3',
85: 1:    '4',
85: 1:    '5',
85: 1:    '6',
85: 1:    '7',
85: 1:    '8',
85: 1:    '9',
85: 1:    '10',
85: 1:    '11'
85: 1:  ]
85: 1:}
85: 1:Scores: 1754
85: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850']')
85: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
86: 1:BoardData {
86: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
86: 1:  'expectedAnswer': '5434',
86: 1:  'history': [
86: 1:    {
86: 1:      'answer': '0',
86: 1:      'question': '1',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '4',
86: 1:      'question': '2',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '22',
86: 1:      'question': '3',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '70',
86: 1:      'question': '4',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '170',
86: 1:      'question': '5',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '350',
86: 1:      'question': '6',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '644',
86: 1:      'question': '7',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '1092',
86: 1:      'question': '8',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '1740',
86: 1:      'question': '9',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '2640',
86: 1:      'question': '10',
86: 1:      'valid': true
86: 1:    },
86: 1:    {
86: 1:      'answer': '3850',
86: 1:      'question': '11',
86: 1:      'valid': true
86: 1:    }
86: 1:  ],
86: 1:  'info': [
86: 1:    '✅f(1) = 0',
86: 1:    '✅f(2) = 4',
86: 1:    '✅f(3) = 22',
86: 1:    '✅f(4) = 70',
86: 1:    '✅f(5) = 170',
86: 1:    '✅f(6) = 350',
86: 1:    '✅f(7) = 644',
86: 1:    '✅f(8) = 1092',
86: 1:    '✅f(9) = 1740',
86: 1:    '✅f(10) = 2640',
86: 1:    '✅f(11) = 3850',
86: 1:    '❌f(12) = ??? != 5434'
86: 1:  ],
86: 1:  'level': 3,
86: 1:  'nextQuestion': '12',
86: 1:  'questions': [
86: 1:    '1',
86: 1:    '2',
86: 1:    '3',
86: 1:    '4',
86: 1:    '5',
86: 1:    '6',
86: 1:    '7',
86: 1:    '8',
86: 1:    '9',
86: 1:    '10',
86: 1:    '11',
86: 1:    '12'
86: 1:  ]
86: 1:}
86: 1:Scores: 1758
86: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434']')
86: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
87: 1:BoardData {
87: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
87: 1:  'expectedAnswer': '7462',
87: 1:  'history': [
87: 1:    {
87: 1:      'answer': '0',
87: 1:      'question': '1',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '4',
87: 1:      'question': '2',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '22',
87: 1:      'question': '3',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '70',
87: 1:      'question': '4',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '170',
87: 1:      'question': '5',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '350',
87: 1:      'question': '6',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '644',
87: 1:      'question': '7',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '1092',
87: 1:      'question': '8',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '1740',
87: 1:      'question': '9',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '2640',
87: 1:      'question': '10',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '3850',
87: 1:      'question': '11',
87: 1:      'valid': true
87: 1:    },
87: 1:    {
87: 1:      'answer': '5434',
87: 1:      'question': '12',
87: 1:      'valid': true
87: 1:    }
87: 1:  ],
87: 1:  'info': [
87: 1:    '✅f(1) = 0',
87: 1:    '✅f(2) = 4',
87: 1:    '✅f(3) = 22',
87: 1:    '✅f(4) = 70',
87: 1:    '✅f(5) = 170',
87: 1:    '✅f(6) = 350',
87: 1:    '✅f(7) = 644',
87: 1:    '✅f(8) = 1092',
87: 1:    '✅f(9) = 1740',
87: 1:    '✅f(10) = 2640',
87: 1:    '✅f(11) = 3850',
87: 1:    '✅f(12) = 5434',
87: 1:    '❌f(13) = ??? != 7462'
87: 1:  ],
87: 1:  'level': 3,
87: 1:  'nextQuestion': '13',
87: 1:  'questions': [
87: 1:    '1',
87: 1:    '2',
87: 1:    '3',
87: 1:    '4',
87: 1:    '5',
87: 1:    '6',
87: 1:    '7',
87: 1:    '8',
87: 1:    '9',
87: 1:    '10',
87: 1:    '11',
87: 1:    '12',
87: 1:    '13'
87: 1:  ]
87: 1:}
87: 1:Scores: 1762
87: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462']')
87: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
88: 1:BoardData {
88: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
88: 1:  'expectedAnswer': '10010',
88: 1:  'history': [
88: 1:    {
88: 1:      'answer': '0',
88: 1:      'question': '1',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '4',
88: 1:      'question': '2',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '22',
88: 1:      'question': '3',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '70',
88: 1:      'question': '4',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '170',
88: 1:      'question': '5',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '350',
88: 1:      'question': '6',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '644',
88: 1:      'question': '7',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '1092',
88: 1:      'question': '8',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '1740',
88: 1:      'question': '9',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '2640',
88: 1:      'question': '10',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '3850',
88: 1:      'question': '11',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '5434',
88: 1:      'question': '12',
88: 1:      'valid': true
88: 1:    },
88: 1:    {
88: 1:      'answer': '7462',
88: 1:      'question': '13',
88: 1:      'valid': true
88: 1:    }
88: 1:  ],
88: 1:  'info': [
88: 1:    '✅f(1) = 0',
88: 1:    '✅f(2) = 4',
88: 1:    '✅f(3) = 22',
88: 1:    '✅f(4) = 70',
88: 1:    '✅f(5) = 170',
88: 1:    '✅f(6) = 350',
88: 1:    '✅f(7) = 644',
88: 1:    '✅f(8) = 1092',
88: 1:    '✅f(9) = 1740',
88: 1:    '✅f(10) = 2640',
88: 1:    '✅f(11) = 3850',
88: 1:    '✅f(12) = 5434',
88: 1:    '✅f(13) = 7462',
88: 1:    '❌f(14) = ??? != 10010'
88: 1:  ],
88: 1:  'level': 3,
88: 1:  'nextQuestion': '14',
88: 1:  'questions': [
88: 1:    '1',
88: 1:    '2',
88: 1:    '3',
88: 1:    '4',
88: 1:    '5',
88: 1:    '6',
88: 1:    '7',
88: 1:    '8',
88: 1:    '9',
88: 1:    '10',
88: 1:    '11',
88: 1:    '12',
88: 1:    '13',
88: 1:    '14'
88: 1:  ]
88: 1:}
88: 1:Scores: 1766
88: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010']')
88: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
89: 1:BoardData {
89: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
89: 1:  'expectedAnswer': '13160',
89: 1:  'history': [
89: 1:    {
89: 1:      'answer': '0',
89: 1:      'question': '1',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '4',
89: 1:      'question': '2',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '22',
89: 1:      'question': '3',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '70',
89: 1:      'question': '4',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '170',
89: 1:      'question': '5',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '350',
89: 1:      'question': '6',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '644',
89: 1:      'question': '7',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '1092',
89: 1:      'question': '8',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '1740',
89: 1:      'question': '9',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '2640',
89: 1:      'question': '10',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '3850',
89: 1:      'question': '11',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '5434',
89: 1:      'question': '12',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '7462',
89: 1:      'question': '13',
89: 1:      'valid': true
89: 1:    },
89: 1:    {
89: 1:      'answer': '10010',
89: 1:      'question': '14',
89: 1:      'valid': true
89: 1:    }
89: 1:  ],
89: 1:  'info': [
89: 1:    '✅f(1) = 0',
89: 1:    '✅f(2) = 4',
89: 1:    '✅f(3) = 22',
89: 1:    '✅f(4) = 70',
89: 1:    '✅f(5) = 170',
89: 1:    '✅f(6) = 350',
89: 1:    '✅f(7) = 644',
89: 1:    '✅f(8) = 1092',
89: 1:    '✅f(9) = 1740',
89: 1:    '✅f(10) = 2640',
89: 1:    '✅f(11) = 3850',
89: 1:    '✅f(12) = 5434',
89: 1:    '✅f(13) = 7462',
89: 1:    '✅f(14) = 10010',
89: 1:    '❌f(15) = ??? != 13160'
89: 1:  ],
89: 1:  'level': 3,
89: 1:  'nextQuestion': '15',
89: 1:  'questions': [
89: 1:    '1',
89: 1:    '2',
89: 1:    '3',
89: 1:    '4',
89: 1:    '5',
89: 1:    '6',
89: 1:    '7',
89: 1:    '8',
89: 1:    '9',
89: 1:    '10',
89: 1:    '11',
89: 1:    '12',
89: 1:    '13',
89: 1:    '14',
89: 1:    '15'
89: 1:  ]
89: 1:}
89: 1:Scores: 1770
89: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160']')
89: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
90: 1:BoardData {
90: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
90: 1:  'expectedAnswer': '17000',
90: 1:  'history': [
90: 1:    {
90: 1:      'answer': '0',
90: 1:      'question': '1',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '4',
90: 1:      'question': '2',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '22',
90: 1:      'question': '3',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '70',
90: 1:      'question': '4',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '170',
90: 1:      'question': '5',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '350',
90: 1:      'question': '6',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '644',
90: 1:      'question': '7',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '1092',
90: 1:      'question': '8',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '1740',
90: 1:      'question': '9',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '2640',
90: 1:      'question': '10',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '3850',
90: 1:      'question': '11',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '5434',
90: 1:      'question': '12',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '7462',
90: 1:      'question': '13',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '10010',
90: 1:      'question': '14',
90: 1:      'valid': true
90: 1:    },
90: 1:    {
90: 1:      'answer': '13160',
90: 1:      'question': '15',
90: 1:      'valid': true
90: 1:    }
90: 1:  ],
90: 1:  'info': [
90: 1:    '✅f(1) = 0',
90: 1:    '✅f(2) = 4',
90: 1:    '✅f(3) = 22',
90: 1:    '✅f(4) = 70',
90: 1:    '✅f(5) = 170',
90: 1:    '✅f(6) = 350',
90: 1:    '✅f(7) = 644',
90: 1:    '✅f(8) = 1092',
90: 1:    '✅f(9) = 1740',
90: 1:    '✅f(10) = 2640',
90: 1:    '✅f(11) = 3850',
90: 1:    '✅f(12) = 5434',
90: 1:    '✅f(13) = 7462',
90: 1:    '✅f(14) = 10010',
90: 1:    '✅f(15) = 13160',
90: 1:    '❌f(16) = ??? != 17000'
90: 1:  ],
90: 1:  'level': 3,
90: 1:  'nextQuestion': '16',
90: 1:  'questions': [
90: 1:    '1',
90: 1:    '2',
90: 1:    '3',
90: 1:    '4',
90: 1:    '5',
90: 1:    '6',
90: 1:    '7',
90: 1:    '8',
90: 1:    '9',
90: 1:    '10',
90: 1:    '11',
90: 1:    '12',
90: 1:    '13',
90: 1:    '14',
90: 1:    '15',
90: 1:    '16'
90: 1:  ]
90: 1:}
90: 1:Scores: 1774
90: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000']')
90: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
91: 1:BoardData {
91: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
91: 1:  'expectedAnswer': '21624',
91: 1:  'history': [
91: 1:    {
91: 1:      'answer': '0',
91: 1:      'question': '1',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '4',
91: 1:      'question': '2',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '22',
91: 1:      'question': '3',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '70',
91: 1:      'question': '4',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '170',
91: 1:      'question': '5',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '350',
91: 1:      'question': '6',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '644',
91: 1:      'question': '7',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '1092',
91: 1:      'question': '8',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '1740',
91: 1:      'question': '9',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '2640',
91: 1:      'question': '10',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '3850',
91: 1:      'question': '11',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '5434',
91: 1:      'question': '12',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '7462',
91: 1:      'question': '13',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '10010',
91: 1:      'question': '14',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '13160',
91: 1:      'question': '15',
91: 1:      'valid': true
91: 1:    },
91: 1:    {
91: 1:      'answer': '17000',
91: 1:      'question': '16',
91: 1:      'valid': true
91: 1:    }
91: 1:  ],
91: 1:  'info': [
91: 1:    '✅f(1) = 0',
91: 1:    '✅f(2) = 4',
91: 1:    '✅f(3) = 22',
91: 1:    '✅f(4) = 70',
91: 1:    '✅f(5) = 170',
91: 1:    '✅f(6) = 350',
91: 1:    '✅f(7) = 644',
91: 1:    '✅f(8) = 1092',
91: 1:    '✅f(9) = 1740',
91: 1:    '✅f(10) = 2640',
91: 1:    '✅f(11) = 3850',
91: 1:    '✅f(12) = 5434',
91: 1:    '✅f(13) = 7462',
91: 1:    '✅f(14) = 10010',
91: 1:    '✅f(15) = 13160',
91: 1:    '✅f(16) = 17000',
91: 1:    '❌f(17) = ??? != 21624'
91: 1:  ],
91: 1:  'level': 3,
91: 1:  'nextQuestion': '17',
91: 1:  'questions': [
91: 1:    '1',
91: 1:    '2',
91: 1:    '3',
91: 1:    '4',
91: 1:    '5',
91: 1:    '6',
91: 1:    '7',
91: 1:    '8',
91: 1:    '9',
91: 1:    '10',
91: 1:    '11',
91: 1:    '12',
91: 1:    '13',
91: 1:    '14',
91: 1:    '15',
91: 1:    '16',
91: 1:    '17'
91: 1:  ]
91: 1:}
91: 1:Scores: 1778
91: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624']')
91: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
92: 1:BoardData {
92: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
92: 1:  'expectedAnswer': '27132',
92: 1:  'history': [
92: 1:    {
92: 1:      'answer': '0',
92: 1:      'question': '1',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '4',
92: 1:      'question': '2',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '22',
92: 1:      'question': '3',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '70',
92: 1:      'question': '4',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '170',
92: 1:      'question': '5',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '350',
92: 1:      'question': '6',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '644',
92: 1:      'question': '7',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '1092',
92: 1:      'question': '8',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '1740',
92: 1:      'question': '9',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '2640',
92: 1:      'question': '10',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '3850',
92: 1:      'question': '11',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '5434',
92: 1:      'question': '12',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '7462',
92: 1:      'question': '13',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '10010',
92: 1:      'question': '14',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '13160',
92: 1:      'question': '15',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '17000',
92: 1:      'question': '16',
92: 1:      'valid': true
92: 1:    },
92: 1:    {
92: 1:      'answer': '21624',
92: 1:      'question': '17',
92: 1:      'valid': true
92: 1:    }
92: 1:  ],
92: 1:  'info': [
92: 1:    '✅f(1) = 0',
92: 1:    '✅f(2) = 4',
92: 1:    '✅f(3) = 22',
92: 1:    '✅f(4) = 70',
92: 1:    '✅f(5) = 170',
92: 1:    '✅f(6) = 350',
92: 1:    '✅f(7) = 644',
92: 1:    '✅f(8) = 1092',
92: 1:    '✅f(9) = 1740',
92: 1:    '✅f(10) = 2640',
92: 1:    '✅f(11) = 3850',
92: 1:    '✅f(12) = 5434',
92: 1:    '✅f(13) = 7462',
92: 1:    '✅f(14) = 10010',
92: 1:    '✅f(15) = 13160',
92: 1:    '✅f(16) = 17000',
92: 1:    '✅f(17) = 21624',
92: 1:    '❌f(18) = ??? != 27132'
92: 1:  ],
92: 1:  'level': 3,
92: 1:  'nextQuestion': '18',
92: 1:  'questions': [
92: 1:    '1',
92: 1:    '2',
92: 1:    '3',
92: 1:    '4',
92: 1:    '5',
92: 1:    '6',
92: 1:    '7',
92: 1:    '8',
92: 1:    '9',
92: 1:    '10',
92: 1:    '11',
92: 1:    '12',
92: 1:    '13',
92: 1:    '14',
92: 1:    '15',
92: 1:    '16',
92: 1:    '17',
92: 1:    '18'
92: 1:  ]
92: 1:}
92: 1:Scores: 1782
92: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132']')
92: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
93: 1:BoardData {
93: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
93: 1:  'expectedAnswer': '33630',
93: 1:  'history': [
93: 1:    {
93: 1:      'answer': '0',
93: 1:      'question': '1',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '4',
93: 1:      'question': '2',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '22',
93: 1:      'question': '3',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '70',
93: 1:      'question': '4',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '170',
93: 1:      'question': '5',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '350',
93: 1:      'question': '6',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '644',
93: 1:      'question': '7',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '1092',
93: 1:      'question': '8',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '1740',
93: 1:      'question': '9',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '2640',
93: 1:      'question': '10',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '3850',
93: 1:      'question': '11',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '5434',
93: 1:      'question': '12',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '7462',
93: 1:      'question': '13',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '10010',
93: 1:      'question': '14',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '13160',
93: 1:      'question': '15',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '17000',
93: 1:      'question': '16',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '21624',
93: 1:      'question': '17',
93: 1:      'valid': true
93: 1:    },
93: 1:    {
93: 1:      'answer': '27132',
93: 1:      'question': '18',
93: 1:      'valid': true
93: 1:    }
93: 1:  ],
93: 1:  'info': [
93: 1:    '✅f(1) = 0',
93: 1:    '✅f(2) = 4',
93: 1:    '✅f(3) = 22',
93: 1:    '✅f(4) = 70',
93: 1:    '✅f(5) = 170',
93: 1:    '✅f(6) = 350',
93: 1:    '✅f(7) = 644',
93: 1:    '✅f(8) = 1092',
93: 1:    '✅f(9) = 1740',
93: 1:    '✅f(10) = 2640',
93: 1:    '✅f(11) = 3850',
93: 1:    '✅f(12) = 5434',
93: 1:    '✅f(13) = 7462',
93: 1:    '✅f(14) = 10010',
93: 1:    '✅f(15) = 13160',
93: 1:    '✅f(16) = 17000',
93: 1:    '✅f(17) = 21624',
93: 1:    '✅f(18) = 27132',
93: 1:    '❌f(19) = ??? != 33630'
93: 1:  ],
93: 1:  'level': 3,
93: 1:  'nextQuestion': '19',
93: 1:  'questions': [
93: 1:    '1',
93: 1:    '2',
93: 1:    '3',
93: 1:    '4',
93: 1:    '5',
93: 1:    '6',
93: 1:    '7',
93: 1:    '8',
93: 1:    '9',
93: 1:    '10',
93: 1:    '11',
93: 1:    '12',
93: 1:    '13',
93: 1:    '14',
93: 1:    '15',
93: 1:    '16',
93: 1:    '17',
93: 1:    '18',
93: 1:    '19'
93: 1:  ]
93: 1:}
93: 1:Scores: 1786
93: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630']')
93: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
94: 1:BoardData {
94: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
94: 1:  'expectedAnswer': '41230',
94: 1:  'history': [
94: 1:    {
94: 1:      'answer': '0',
94: 1:      'question': '1',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '4',
94: 1:      'question': '2',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '22',
94: 1:      'question': '3',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '70',
94: 1:      'question': '4',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '170',
94: 1:      'question': '5',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '350',
94: 1:      'question': '6',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '644',
94: 1:      'question': '7',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '1092',
94: 1:      'question': '8',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '1740',
94: 1:      'question': '9',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '2640',
94: 1:      'question': '10',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '3850',
94: 1:      'question': '11',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '5434',
94: 1:      'question': '12',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '7462',
94: 1:      'question': '13',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '10010',
94: 1:      'question': '14',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '13160',
94: 1:      'question': '15',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '17000',
94: 1:      'question': '16',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '21624',
94: 1:      'question': '17',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '27132',
94: 1:      'question': '18',
94: 1:      'valid': true
94: 1:    },
94: 1:    {
94: 1:      'answer': '33630',
94: 1:      'question': '19',
94: 1:      'valid': true
94: 1:    }
94: 1:  ],
94: 1:  'info': [
94: 1:    '✅f(1) = 0',
94: 1:    '✅f(2) = 4',
94: 1:    '✅f(3) = 22',
94: 1:    '✅f(4) = 70',
94: 1:    '✅f(5) = 170',
94: 1:    '✅f(6) = 350',
94: 1:    '✅f(7) = 644',
94: 1:    '✅f(8) = 1092',
94: 1:    '✅f(9) = 1740',
94: 1:    '✅f(10) = 2640',
94: 1:    '✅f(11) = 3850',
94: 1:    '✅f(12) = 5434',
94: 1:    '✅f(13) = 7462',
94: 1:    '✅f(14) = 10010',
94: 1:    '✅f(15) = 13160',
94: 1:    '✅f(16) = 17000',
94: 1:    '✅f(17) = 21624',
94: 1:    '✅f(18) = 27132',
94: 1:    '✅f(19) = 33630',
94: 1:    '❌f(20) = ??? != 41230'
94: 1:  ],
94: 1:  'level': 3,
94: 1:  'nextQuestion': '20',
94: 1:  'questions': [
94: 1:    '1',
94: 1:    '2',
94: 1:    '3',
94: 1:    '4',
94: 1:    '5',
94: 1:    '6',
94: 1:    '7',
94: 1:    '8',
94: 1:    '9',
94: 1:    '10',
94: 1:    '11',
94: 1:    '12',
94: 1:    '13',
94: 1:    '14',
94: 1:    '15',
94: 1:    '16',
94: 1:    '17',
94: 1:    '18',
94: 1:    '19',
94: 1:    '20'
94: 1:  ]
94: 1:}
94: 1:Scores: 1790
94: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230']')
94: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
95: 1:BoardData {
95: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
95: 1:  'expectedAnswer': '50050',
95: 1:  'history': [
95: 1:    {
95: 1:      'answer': '0',
95: 1:      'question': '1',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '4',
95: 1:      'question': '2',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '22',
95: 1:      'question': '3',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '70',
95: 1:      'question': '4',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '170',
95: 1:      'question': '5',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '350',
95: 1:      'question': '6',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '644',
95: 1:      'question': '7',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '1092',
95: 1:      'question': '8',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '1740',
95: 1:      'question': '9',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '2640',
95: 1:      'question': '10',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '3850',
95: 1:      'question': '11',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '5434',
95: 1:      'question': '12',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '7462',
95: 1:      'question': '13',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '10010',
95: 1:      'question': '14',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '13160',
95: 1:      'question': '15',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '17000',
95: 1:      'question': '16',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '21624',
95: 1:      'question': '17',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '27132',
95: 1:      'question': '18',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '33630',
95: 1:      'question': '19',
95: 1:      'valid': true
95: 1:    },
95: 1:    {
95: 1:      'answer': '41230',
95: 1:      'question': '20',
95: 1:      'valid': true
95: 1:    }
95: 1:  ],
95: 1:  'info': [
95: 1:    '✅f(1) = 0',
95: 1:    '✅f(2) = 4',
95: 1:    '✅f(3) = 22',
95: 1:    '✅f(4) = 70',
95: 1:    '✅f(5) = 170',
95: 1:    '✅f(6) = 350',
95: 1:    '✅f(7) = 644',
95: 1:    '✅f(8) = 1092',
95: 1:    '✅f(9) = 1740',
95: 1:    '✅f(10) = 2640',
95: 1:    '✅f(11) = 3850',
95: 1:    '✅f(12) = 5434',
95: 1:    '✅f(13) = 7462',
95: 1:    '✅f(14) = 10010',
95: 1:    '✅f(15) = 13160',
95: 1:    '✅f(16) = 17000',
95: 1:    '✅f(17) = 21624',
95: 1:    '✅f(18) = 27132',
95: 1:    '✅f(19) = 33630',
95: 1:    '✅f(20) = 41230',
95: 1:    '❌f(21) = ??? != 50050'
95: 1:  ],
95: 1:  'level': 3,
95: 1:  'nextQuestion': '21',
95: 1:  'questions': [
95: 1:    '1',
95: 1:    '2',
95: 1:    '3',
95: 1:    '4',
95: 1:    '5',
95: 1:    '6',
95: 1:    '7',
95: 1:    '8',
95: 1:    '9',
95: 1:    '10',
95: 1:    '11',
95: 1:    '12',
95: 1:    '13',
95: 1:    '14',
95: 1:    '15',
95: 1:    '16',
95: 1:    '17',
95: 1:    '18',
95: 1:    '19',
95: 1:    '20',
95: 1:    '21'
95: 1:  ]
95: 1:}
95: 1:Scores: 1794
95: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050']')
95: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
96: 1:BoardData {
96: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
96: 1:  'expectedAnswer': '60214',
96: 1:  'history': [
96: 1:    {
96: 1:      'answer': '0',
96: 1:      'question': '1',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '4',
96: 1:      'question': '2',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '22',
96: 1:      'question': '3',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '70',
96: 1:      'question': '4',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '170',
96: 1:      'question': '5',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '350',
96: 1:      'question': '6',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '644',
96: 1:      'question': '7',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '1092',
96: 1:      'question': '8',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '1740',
96: 1:      'question': '9',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '2640',
96: 1:      'question': '10',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '3850',
96: 1:      'question': '11',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '5434',
96: 1:      'question': '12',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '7462',
96: 1:      'question': '13',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '10010',
96: 1:      'question': '14',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '13160',
96: 1:      'question': '15',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '17000',
96: 1:      'question': '16',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '21624',
96: 1:      'question': '17',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '27132',
96: 1:      'question': '18',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '33630',
96: 1:      'question': '19',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '41230',
96: 1:      'question': '20',
96: 1:      'valid': true
96: 1:    },
96: 1:    {
96: 1:      'answer': '50050',
96: 1:      'question': '21',
96: 1:      'valid': true
96: 1:    }
96: 1:  ],
96: 1:  'info': [
96: 1:    '✅f(1) = 0',
96: 1:    '✅f(2) = 4',
96: 1:    '✅f(3) = 22',
96: 1:    '✅f(4) = 70',
96: 1:    '✅f(5) = 170',
96: 1:    '✅f(6) = 350',
96: 1:    '✅f(7) = 644',
96: 1:    '✅f(8) = 1092',
96: 1:    '✅f(9) = 1740',
96: 1:    '✅f(10) = 2640',
96: 1:    '✅f(11) = 3850',
96: 1:    '✅f(12) = 5434',
96: 1:    '✅f(13) = 7462',
96: 1:    '✅f(14) = 10010',
96: 1:    '✅f(15) = 13160',
96: 1:    '✅f(16) = 17000',
96: 1:    '✅f(17) = 21624',
96: 1:    '✅f(18) = 27132',
96: 1:    '✅f(19) = 33630',
96: 1:    '✅f(20) = 41230',
96: 1:    '✅f(21) = 50050',
96: 1:    '❌f(22) = ??? != 60214'
96: 1:  ],
96: 1:  'level': 3,
96: 1:  'nextQuestion': '22',
96: 1:  'questions': [
96: 1:    '1',
96: 1:    '2',
96: 1:    '3',
96: 1:    '4',
96: 1:    '5',
96: 1:    '6',
96: 1:    '7',
96: 1:    '8',
96: 1:    '9',
96: 1:    '10',
96: 1:    '11',
96: 1:    '12',
96: 1:    '13',
96: 1:    '14',
96: 1:    '15',
96: 1:    '16',
96: 1:    '17',
96: 1:    '18',
96: 1:    '19',
96: 1:    '20',
96: 1:    '21',
96: 1:    '22'
96: 1:  ]
96: 1:}
96: 1:Scores: 1798
96: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214']')
96: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
97: 1:BoardData {
97: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
97: 1:  'expectedAnswer': '71852',
97: 1:  'history': [
97: 1:    {
97: 1:      'answer': '0',
97: 1:      'question': '1',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '4',
97: 1:      'question': '2',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '22',
97: 1:      'question': '3',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '70',
97: 1:      'question': '4',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '170',
97: 1:      'question': '5',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '350',
97: 1:      'question': '6',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '644',
97: 1:      'question': '7',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '1092',
97: 1:      'question': '8',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '1740',
97: 1:      'question': '9',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '2640',
97: 1:      'question': '10',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '3850',
97: 1:      'question': '11',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '5434',
97: 1:      'question': '12',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '7462',
97: 1:      'question': '13',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '10010',
97: 1:      'question': '14',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '13160',
97: 1:      'question': '15',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '17000',
97: 1:      'question': '16',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '21624',
97: 1:      'question': '17',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '27132',
97: 1:      'question': '18',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '33630',
97: 1:      'question': '19',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '41230',
97: 1:      'question': '20',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '50050',
97: 1:      'question': '21',
97: 1:      'valid': true
97: 1:    },
97: 1:    {
97: 1:      'answer': '60214',
97: 1:      'question': '22',
97: 1:      'valid': true
97: 1:    }
97: 1:  ],
97: 1:  'info': [
97: 1:    '✅f(1) = 0',
97: 1:    '✅f(2) = 4',
97: 1:    '✅f(3) = 22',
97: 1:    '✅f(4) = 70',
97: 1:    '✅f(5) = 170',
97: 1:    '✅f(6) = 350',
97: 1:    '✅f(7) = 644',
97: 1:    '✅f(8) = 1092',
97: 1:    '✅f(9) = 1740',
97: 1:    '✅f(10) = 2640',
97: 1:    '✅f(11) = 3850',
97: 1:    '✅f(12) = 5434',
97: 1:    '✅f(13) = 7462',
97: 1:    '✅f(14) = 10010',
97: 1:    '✅f(15) = 13160',
97: 1:    '✅f(16) = 17000',
97: 1:    '✅f(17) = 21624',
97: 1:    '✅f(18) = 27132',
97: 1:    '✅f(19) = 33630',
97: 1:    '✅f(20) = 41230',
97: 1:    '✅f(21) = 50050',
97: 1:    '✅f(22) = 60214',
97: 1:    '❌f(23) = ??? != 71852'
97: 1:  ],
97: 1:  'level': 3,
97: 1:  'nextQuestion': '23',
97: 1:  'questions': [
97: 1:    '1',
97: 1:    '2',
97: 1:    '3',
97: 1:    '4',
97: 1:    '5',
97: 1:    '6',
97: 1:    '7',
97: 1:    '8',
97: 1:    '9',
97: 1:    '10',
97: 1:    '11',
97: 1:    '12',
97: 1:    '13',
97: 1:    '14',
97: 1:    '15',
97: 1:    '16',
97: 1:    '17',
97: 1:    '18',
97: 1:    '19',
97: 1:    '20',
97: 1:    '21',
97: 1:    '22',
97: 1:    '23'
97: 1:  ]
97: 1:}
97: 1:Scores: 1802
97: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852']')
97: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
98: 1:BoardData {
98: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
98: 1:  'expectedAnswer': '85100',
98: 1:  'history': [
98: 1:    {
98: 1:      'answer': '0',
98: 1:      'question': '1',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '4',
98: 1:      'question': '2',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '22',
98: 1:      'question': '3',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '70',
98: 1:      'question': '4',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '170',
98: 1:      'question': '5',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '350',
98: 1:      'question': '6',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '644',
98: 1:      'question': '7',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '1092',
98: 1:      'question': '8',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '1740',
98: 1:      'question': '9',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '2640',
98: 1:      'question': '10',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '3850',
98: 1:      'question': '11',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '5434',
98: 1:      'question': '12',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '7462',
98: 1:      'question': '13',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '10010',
98: 1:      'question': '14',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '13160',
98: 1:      'question': '15',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '17000',
98: 1:      'question': '16',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '21624',
98: 1:      'question': '17',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '27132',
98: 1:      'question': '18',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '33630',
98: 1:      'question': '19',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '41230',
98: 1:      'question': '20',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '50050',
98: 1:      'question': '21',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '60214',
98: 1:      'question': '22',
98: 1:      'valid': true
98: 1:    },
98: 1:    {
98: 1:      'answer': '71852',
98: 1:      'question': '23',
98: 1:      'valid': true
98: 1:    }
98: 1:  ],
98: 1:  'info': [
98: 1:    '✅f(1) = 0',
98: 1:    '✅f(2) = 4',
98: 1:    '✅f(3) = 22',
98: 1:    '✅f(4) = 70',
98: 1:    '✅f(5) = 170',
98: 1:    '✅f(6) = 350',
98: 1:    '✅f(7) = 644',
98: 1:    '✅f(8) = 1092',
98: 1:    '✅f(9) = 1740',
98: 1:    '✅f(10) = 2640',
98: 1:    '✅f(11) = 3850',
98: 1:    '✅f(12) = 5434',
98: 1:    '✅f(13) = 7462',
98: 1:    '✅f(14) = 10010',
98: 1:    '✅f(15) = 13160',
98: 1:    '✅f(16) = 17000',
98: 1:    '✅f(17) = 21624',
98: 1:    '✅f(18) = 27132',
98: 1:    '✅f(19) = 33630',
98: 1:    '✅f(20) = 41230',
98: 1:    '✅f(21) = 50050',
98: 1:    '✅f(22) = 60214',
98: 1:    '✅f(23) = 71852',
98: 1:    '❌f(24) = ??? != 85100'
98: 1:  ],
98: 1:  'level': 3,
98: 1:  'nextQuestion': '24',
98: 1:  'questions': [
98: 1:    '1',
98: 1:    '2',
98: 1:    '3',
98: 1:    '4',
98: 1:    '5',
98: 1:    '6',
98: 1:    '7',
98: 1:    '8',
98: 1:    '9',
98: 1:    '10',
98: 1:    '11',
98: 1:    '12',
98: 1:    '13',
98: 1:    '14',
98: 1:    '15',
98: 1:    '16',
98: 1:    '17',
98: 1:    '18',
98: 1:    '19',
98: 1:    '20',
98: 1:    '21',
98: 1:    '22',
98: 1:    '23',
98: 1:    '24'
98: 1:  ]
98: 1:}
98: 1:Scores: 1806
98: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852', '85100']')
98: 1:Fire Event: PassTest{complexity=10, testCount=25}
------------------------------------------
99: 1:BoardData {
99: 1:  'description': ['The sum of the squares of the first ten positive integers \n1^2 + 2^2 + ... + 10^2 = 385. \nAnd the square of the sum is \n(1 + 2 + ... + 10)^2 = 55^2 = 3025. \nTherefore, the difference between the sum of the squares and the square of the sum of the first ten natural numbers is equal to 3025 - 385 = 2640. \nCreate a method that calculates the difference between the sum squares and the square of the sum for the natural number i.'],
99: 1:  'expectedAnswer': '100100',
99: 1:  'history': [
99: 1:    {
99: 1:      'answer': '0',
99: 1:      'question': '1',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '4',
99: 1:      'question': '2',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '22',
99: 1:      'question': '3',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '70',
99: 1:      'question': '4',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '170',
99: 1:      'question': '5',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '350',
99: 1:      'question': '6',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '644',
99: 1:      'question': '7',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '1092',
99: 1:      'question': '8',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '1740',
99: 1:      'question': '9',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '2640',
99: 1:      'question': '10',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '3850',
99: 1:      'question': '11',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '5434',
99: 1:      'question': '12',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '7462',
99: 1:      'question': '13',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '10010',
99: 1:      'question': '14',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '13160',
99: 1:      'question': '15',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '17000',
99: 1:      'question': '16',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '21624',
99: 1:      'question': '17',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '27132',
99: 1:      'question': '18',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '33630',
99: 1:      'question': '19',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '41230',
99: 1:      'question': '20',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '50050',
99: 1:      'question': '21',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '60214',
99: 1:      'question': '22',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '71852',
99: 1:      'question': '23',
99: 1:      'valid': true
99: 1:    },
99: 1:    {
99: 1:      'answer': '85100',
99: 1:      'question': '24',
99: 1:      'valid': true
99: 1:    }
99: 1:  ],
99: 1:  'info': [
99: 1:    '✅f(1) = 0',
99: 1:    '✅f(2) = 4',
99: 1:    '✅f(3) = 22',
99: 1:    '✅f(4) = 70',
99: 1:    '✅f(5) = 170',
99: 1:    '✅f(6) = 350',
99: 1:    '✅f(7) = 644',
99: 1:    '✅f(8) = 1092',
99: 1:    '✅f(9) = 1740',
99: 1:    '✅f(10) = 2640',
99: 1:    '✅f(11) = 3850',
99: 1:    '✅f(12) = 5434',
99: 1:    '✅f(13) = 7462',
99: 1:    '✅f(14) = 10010',
99: 1:    '✅f(15) = 13160',
99: 1:    '✅f(16) = 17000',
99: 1:    '✅f(17) = 21624',
99: 1:    '✅f(18) = 27132',
99: 1:    '✅f(19) = 33630',
99: 1:    '✅f(20) = 41230',
99: 1:    '✅f(21) = 50050',
99: 1:    '✅f(22) = 60214',
99: 1:    '✅f(23) = 71852',
99: 1:    '✅f(24) = 85100',
99: 1:    '❌f(25) = ??? != 100100'
99: 1:  ],
99: 1:  'level': 3,
99: 1:  'nextQuestion': '25',
99: 1:  'questions': [
99: 1:    '1',
99: 1:    '2',
99: 1:    '3',
99: 1:    '4',
99: 1:    '5',
99: 1:    '6',
99: 1:    '7',
99: 1:    '8',
99: 1:    '9',
99: 1:    '10',
99: 1:    '11',
99: 1:    '12',
99: 1:    '13',
99: 1:    '14',
99: 1:    '15',
99: 1:    '16',
99: 1:    '17',
99: 1:    '18',
99: 1:    '19',
99: 1:    '20',
99: 1:    '21',
99: 1:    '22',
99: 1:    '23',
99: 1:    '24',
99: 1:    '25'
99: 1:  ]
99: 1:}
99: 1:Scores: 1810
99: 1:Answer: message('['0', '4', '22', '70', '170', '350', '644', '1092', '1740', '2640', '3850', '5434', '7462', '10010', '13160', '17000', '21624', '27132', '33630', '41230', '50050', '60214', '71852', '85100', '100100']')
99: 1:Fire Event: PassTest{complexity=10, testCount=25}
99: 1:Fire Event: NextAlgorithm{complexity=10, time=0}
------------------------------------------
100: 1:BoardData {
100: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
100: 1:  'history': [
100: 1:    {
100: 1:      'answer': '0',
100: 1:      'question': '1',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '4',
100: 1:      'question': '2',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '22',
100: 1:      'question': '3',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '70',
100: 1:      'question': '4',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '170',
100: 1:      'question': '5',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '350',
100: 1:      'question': '6',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '644',
100: 1:      'question': '7',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '1092',
100: 1:      'question': '8',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '1740',
100: 1:      'question': '9',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '2640',
100: 1:      'question': '10',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '3850',
100: 1:      'question': '11',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '5434',
100: 1:      'question': '12',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '7462',
100: 1:      'question': '13',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '10010',
100: 1:      'question': '14',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '13160',
100: 1:      'question': '15',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '17000',
100: 1:      'question': '16',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '21624',
100: 1:      'question': '17',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '27132',
100: 1:      'question': '18',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '33630',
100: 1:      'question': '19',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '41230',
100: 1:      'question': '20',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '50050',
100: 1:      'question': '21',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '60214',
100: 1:      'question': '22',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '71852',
100: 1:      'question': '23',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '85100',
100: 1:      'question': '24',
100: 1:      'valid': true
100: 1:    },
100: 1:    {
100: 1:      'answer': '100100',
100: 1:      'question': '25',
100: 1:      'valid': true
100: 1:    }
100: 1:  ],
100: 1:  'info': [
100: 1:    '✅f(1) = 0',
100: 1:    '✅f(2) = 4',
100: 1:    '✅f(3) = 22',
100: 1:    '✅f(4) = 70',
100: 1:    '✅f(5) = 170',
100: 1:    '✅f(6) = 350',
100: 1:    '✅f(7) = 644',
100: 1:    '✅f(8) = 1092',
100: 1:    '✅f(9) = 1740',
100: 1:    '✅f(10) = 2640',
100: 1:    '✅f(11) = 3850',
100: 1:    '✅f(12) = 5434',
100: 1:    '✅f(13) = 7462',
100: 1:    '✅f(14) = 10010',
100: 1:    '✅f(15) = 13160',
100: 1:    '✅f(16) = 17000',
100: 1:    '✅f(17) = 21624',
100: 1:    '✅f(18) = 27132',
100: 1:    '✅f(19) = 33630',
100: 1:    '✅f(20) = 41230',
100: 1:    '✅f(21) = 50050',
100: 1:    '✅f(22) = 60214',
100: 1:    '✅f(23) = 71852',
100: 1:    '✅f(24) = 85100',
100: 1:    '✅f(25) = 100100'
100: 1:  ],
100: 1:  'level': 3,
100: 1:  'questions': []
100: 1:}
100: 1:Scores: 3163
100: 1:Answer: message('StartNextLevel')
100: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
101: 1:BoardData {
101: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
101: 1:  'expectedAnswer': '1',
101: 1:  'history': [],
101: 1:  'info': ['❌f(0) = ??? != 1'],
101: 1:  'level': 4,
101: 1:  'nextQuestion': '0',
101: 1:  'questions': ['0']
101: 1:}
101: 1:Scores: 3163
101: 1:Answer: message('['1']')
101: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
102: 1:BoardData {
102: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
102: 1:  'expectedAnswer': '0',
102: 1:  'history': [{
102: 1:    'answer': '1',
102: 1:    'question': '0',
102: 1:    'valid': true
102: 1:  }],
102: 1:  'info': [
102: 1:    '✅f(0) = 1',
102: 1:    '❌f(1) = ??? != 0'
102: 1:  ],
102: 1:  'level': 4,
102: 1:  'nextQuestion': '1',
102: 1:  'questions': [
102: 1:    '0',
102: 1:    '1'
102: 1:  ]
102: 1:}
102: 1:Scores: 3167
102: 1:Answer: message('['1', '0']')
102: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
103: 1:BoardData {
103: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
103: 1:  'expectedAnswer': '3',
103: 1:  'history': [
103: 1:    {
103: 1:      'answer': '1',
103: 1:      'question': '0',
103: 1:      'valid': true
103: 1:    },
103: 1:    {
103: 1:      'answer': '0',
103: 1:      'question': '1',
103: 1:      'valid': true
103: 1:    }
103: 1:  ],
103: 1:  'info': [
103: 1:    '✅f(0) = 1',
103: 1:    '✅f(1) = 0',
103: 1:    '❌f(2) = ??? != 3'
103: 1:  ],
103: 1:  'level': 4,
103: 1:  'nextQuestion': '2',
103: 1:  'questions': [
103: 1:    '0',
103: 1:    '1',
103: 1:    '2'
103: 1:  ]
103: 1:}
103: 1:Scores: 3171
103: 1:Answer: message('['1', '0', '3']')
103: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
104: 1:BoardData {
104: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
104: 1:  'expectedAnswer': '2',
104: 1:  'history': [
104: 1:    {
104: 1:      'answer': '1',
104: 1:      'question': '0',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': '0',
104: 1:      'question': '1',
104: 1:      'valid': true
104: 1:    },
104: 1:    {
104: 1:      'answer': '3',
104: 1:      'question': '2',
104: 1:      'valid': true
104: 1:    }
104: 1:  ],
104: 1:  'info': [
104: 1:    '✅f(0) = 1',
104: 1:    '✅f(1) = 0',
104: 1:    '✅f(2) = 3',
104: 1:    '❌f(3) = ??? != 2'
104: 1:  ],
104: 1:  'level': 4,
104: 1:  'nextQuestion': '3',
104: 1:  'questions': [
104: 1:    '0',
104: 1:    '1',
104: 1:    '2',
104: 1:    '3'
104: 1:  ]
104: 1:}
104: 1:Scores: 3175
104: 1:Answer: message('['1', '0', '3', '2']')
104: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
105: 1:BoardData {
105: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
105: 1:  'expectedAnswer': '4',
105: 1:  'history': [
105: 1:    {
105: 1:      'answer': '1',
105: 1:      'question': '0',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': '0',
105: 1:      'question': '1',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': '3',
105: 1:      'question': '2',
105: 1:      'valid': true
105: 1:    },
105: 1:    {
105: 1:      'answer': '2',
105: 1:      'question': '3',
105: 1:      'valid': true
105: 1:    }
105: 1:  ],
105: 1:  'info': [
105: 1:    '✅f(0) = 1',
105: 1:    '✅f(1) = 0',
105: 1:    '✅f(2) = 3',
105: 1:    '✅f(3) = 2',
105: 1:    '❌f(5) = ??? != 4'
105: 1:  ],
105: 1:  'level': 4,
105: 1:  'nextQuestion': '5',
105: 1:  'questions': [
105: 1:    '0',
105: 1:    '1',
105: 1:    '2',
105: 1:    '3',
105: 1:    '5'
105: 1:  ]
105: 1:}
105: 1:Scores: 3179
105: 1:Answer: message('['1', '0', '3', '2', '4']')
105: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
106: 1:BoardData {
106: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
106: 1:  'expectedAnswer': '6',
106: 1:  'history': [
106: 1:    {
106: 1:      'answer': '1',
106: 1:      'question': '0',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': '0',
106: 1:      'question': '1',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': '3',
106: 1:      'question': '2',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': '2',
106: 1:      'question': '3',
106: 1:      'valid': true
106: 1:    },
106: 1:    {
106: 1:      'answer': '4',
106: 1:      'question': '5',
106: 1:      'valid': true
106: 1:    }
106: 1:  ],
106: 1:  'info': [
106: 1:    '✅f(0) = 1',
106: 1:    '✅f(1) = 0',
106: 1:    '✅f(2) = 3',
106: 1:    '✅f(3) = 2',
106: 1:    '✅f(5) = 4',
106: 1:    '❌f(7) = ??? != 6'
106: 1:  ],
106: 1:  'level': 4,
106: 1:  'nextQuestion': '7',
106: 1:  'questions': [
106: 1:    '0',
106: 1:    '1',
106: 1:    '2',
106: 1:    '3',
106: 1:    '5',
106: 1:    '7'
106: 1:  ]
106: 1:}
106: 1:Scores: 3183
106: 1:Answer: message('['1', '0', '3', '2', '4', '6']')
106: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
107: 1:BoardData {
107: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
107: 1:  'expectedAnswer': '8',
107: 1:  'history': [
107: 1:    {
107: 1:      'answer': '1',
107: 1:      'question': '0',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '0',
107: 1:      'question': '1',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '3',
107: 1:      'question': '2',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '2',
107: 1:      'question': '3',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '4',
107: 1:      'question': '5',
107: 1:      'valid': true
107: 1:    },
107: 1:    {
107: 1:      'answer': '6',
107: 1:      'question': '7',
107: 1:      'valid': true
107: 1:    }
107: 1:  ],
107: 1:  'info': [
107: 1:    '✅f(0) = 1',
107: 1:    '✅f(1) = 0',
107: 1:    '✅f(2) = 3',
107: 1:    '✅f(3) = 2',
107: 1:    '✅f(5) = 4',
107: 1:    '✅f(7) = 6',
107: 1:    '❌f(9) = ??? != 8'
107: 1:  ],
107: 1:  'level': 4,
107: 1:  'nextQuestion': '9',
107: 1:  'questions': [
107: 1:    '0',
107: 1:    '1',
107: 1:    '2',
107: 1:    '3',
107: 1:    '5',
107: 1:    '7',
107: 1:    '9'
107: 1:  ]
107: 1:}
107: 1:Scores: 3187
107: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8']')
107: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
108: 1:BoardData {
108: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
108: 1:  'expectedAnswer': '10',
108: 1:  'history': [
108: 1:    {
108: 1:      'answer': '1',
108: 1:      'question': '0',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': '0',
108: 1:      'question': '1',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': '3',
108: 1:      'question': '2',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': '2',
108: 1:      'question': '3',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': '4',
108: 1:      'question': '5',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': '6',
108: 1:      'question': '7',
108: 1:      'valid': true
108: 1:    },
108: 1:    {
108: 1:      'answer': '8',
108: 1:      'question': '9',
108: 1:      'valid': true
108: 1:    }
108: 1:  ],
108: 1:  'info': [
108: 1:    '✅f(0) = 1',
108: 1:    '✅f(1) = 0',
108: 1:    '✅f(2) = 3',
108: 1:    '✅f(3) = 2',
108: 1:    '✅f(5) = 4',
108: 1:    '✅f(7) = 6',
108: 1:    '✅f(9) = 8',
108: 1:    '❌f(11) = ??? != 10'
108: 1:  ],
108: 1:  'level': 4,
108: 1:  'nextQuestion': '11',
108: 1:  'questions': [
108: 1:    '0',
108: 1:    '1',
108: 1:    '2',
108: 1:    '3',
108: 1:    '5',
108: 1:    '7',
108: 1:    '9',
108: 1:    '11'
108: 1:  ]
108: 1:}
108: 1:Scores: 3191
108: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10']')
108: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
109: 1:BoardData {
109: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
109: 1:  'expectedAnswer': '15',
109: 1:  'history': [
109: 1:    {
109: 1:      'answer': '1',
109: 1:      'question': '0',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': '0',
109: 1:      'question': '1',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': '3',
109: 1:      'question': '2',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': '2',
109: 1:      'question': '3',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': '4',
109: 1:      'question': '5',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': '6',
109: 1:      'question': '7',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': '8',
109: 1:      'question': '9',
109: 1:      'valid': true
109: 1:    },
109: 1:    {
109: 1:      'answer': '10',
109: 1:      'question': '11',
109: 1:      'valid': true
109: 1:    }
109: 1:  ],
109: 1:  'info': [
109: 1:    '✅f(0) = 1',
109: 1:    '✅f(1) = 0',
109: 1:    '✅f(2) = 3',
109: 1:    '✅f(3) = 2',
109: 1:    '✅f(5) = 4',
109: 1:    '✅f(7) = 6',
109: 1:    '✅f(9) = 8',
109: 1:    '✅f(11) = 10',
109: 1:    '❌f(14) = ??? != 15'
109: 1:  ],
109: 1:  'level': 4,
109: 1:  'nextQuestion': '14',
109: 1:  'questions': [
109: 1:    '0',
109: 1:    '1',
109: 1:    '2',
109: 1:    '3',
109: 1:    '5',
109: 1:    '7',
109: 1:    '9',
109: 1:    '11',
109: 1:    '14'
109: 1:  ]
109: 1:}
109: 1:Scores: 3195
109: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15']')
109: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
110: 1:BoardData {
110: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
110: 1:  'expectedAnswer': '16',
110: 1:  'history': [
110: 1:    {
110: 1:      'answer': '1',
110: 1:      'question': '0',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '0',
110: 1:      'question': '1',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '3',
110: 1:      'question': '2',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '2',
110: 1:      'question': '3',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '4',
110: 1:      'question': '5',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '6',
110: 1:      'question': '7',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '8',
110: 1:      'question': '9',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '10',
110: 1:      'question': '11',
110: 1:      'valid': true
110: 1:    },
110: 1:    {
110: 1:      'answer': '15',
110: 1:      'question': '14',
110: 1:      'valid': true
110: 1:    }
110: 1:  ],
110: 1:  'info': [
110: 1:    '✅f(0) = 1',
110: 1:    '✅f(1) = 0',
110: 1:    '✅f(2) = 3',
110: 1:    '✅f(3) = 2',
110: 1:    '✅f(5) = 4',
110: 1:    '✅f(7) = 6',
110: 1:    '✅f(9) = 8',
110: 1:    '✅f(11) = 10',
110: 1:    '✅f(14) = 15',
110: 1:    '❌f(17) = ??? != 16'
110: 1:  ],
110: 1:  'level': 4,
110: 1:  'nextQuestion': '17',
110: 1:  'questions': [
110: 1:    '0',
110: 1:    '1',
110: 1:    '2',
110: 1:    '3',
110: 1:    '5',
110: 1:    '7',
110: 1:    '9',
110: 1:    '11',
110: 1:    '14',
110: 1:    '17'
110: 1:  ]
110: 1:}
110: 1:Scores: 3199
110: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16']')
110: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
111: 1:BoardData {
111: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
111: 1:  'expectedAnswer': '21',
111: 1:  'history': [
111: 1:    {
111: 1:      'answer': '1',
111: 1:      'question': '0',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '0',
111: 1:      'question': '1',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '3',
111: 1:      'question': '2',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '2',
111: 1:      'question': '3',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '4',
111: 1:      'question': '5',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '6',
111: 1:      'question': '7',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '8',
111: 1:      'question': '9',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '10',
111: 1:      'question': '11',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '15',
111: 1:      'question': '14',
111: 1:      'valid': true
111: 1:    },
111: 1:    {
111: 1:      'answer': '16',
111: 1:      'question': '17',
111: 1:      'valid': true
111: 1:    }
111: 1:  ],
111: 1:  'info': [
111: 1:    '✅f(0) = 1',
111: 1:    '✅f(1) = 0',
111: 1:    '✅f(2) = 3',
111: 1:    '✅f(3) = 2',
111: 1:    '✅f(5) = 4',
111: 1:    '✅f(7) = 6',
111: 1:    '✅f(9) = 8',
111: 1:    '✅f(11) = 10',
111: 1:    '✅f(14) = 15',
111: 1:    '✅f(17) = 16',
111: 1:    '❌f(20) = ??? != 21'
111: 1:  ],
111: 1:  'level': 4,
111: 1:  'nextQuestion': '20',
111: 1:  'questions': [
111: 1:    '0',
111: 1:    '1',
111: 1:    '2',
111: 1:    '3',
111: 1:    '5',
111: 1:    '7',
111: 1:    '9',
111: 1:    '11',
111: 1:    '14',
111: 1:    '17',
111: 1:    '20'
111: 1:  ]
111: 1:}
111: 1:Scores: 3203
111: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21']')
111: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
112: 1:BoardData {
112: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
112: 1:  'expectedAnswer': '22',
112: 1:  'history': [
112: 1:    {
112: 1:      'answer': '1',
112: 1:      'question': '0',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '0',
112: 1:      'question': '1',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '3',
112: 1:      'question': '2',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '2',
112: 1:      'question': '3',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '4',
112: 1:      'question': '5',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '6',
112: 1:      'question': '7',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '8',
112: 1:      'question': '9',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '10',
112: 1:      'question': '11',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '15',
112: 1:      'question': '14',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '16',
112: 1:      'question': '17',
112: 1:      'valid': true
112: 1:    },
112: 1:    {
112: 1:      'answer': '21',
112: 1:      'question': '20',
112: 1:      'valid': true
112: 1:    }
112: 1:  ],
112: 1:  'info': [
112: 1:    '✅f(0) = 1',
112: 1:    '✅f(1) = 0',
112: 1:    '✅f(2) = 3',
112: 1:    '✅f(3) = 2',
112: 1:    '✅f(5) = 4',
112: 1:    '✅f(7) = 6',
112: 1:    '✅f(9) = 8',
112: 1:    '✅f(11) = 10',
112: 1:    '✅f(14) = 15',
112: 1:    '✅f(17) = 16',
112: 1:    '✅f(20) = 21',
112: 1:    '❌f(23) = ??? != 22'
112: 1:  ],
112: 1:  'level': 4,
112: 1:  'nextQuestion': '23',
112: 1:  'questions': [
112: 1:    '0',
112: 1:    '1',
112: 1:    '2',
112: 1:    '3',
112: 1:    '5',
112: 1:    '7',
112: 1:    '9',
112: 1:    '11',
112: 1:    '14',
112: 1:    '17',
112: 1:    '20',
112: 1:    '23'
112: 1:  ]
112: 1:}
112: 1:Scores: 3207
112: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22']')
112: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
113: 1:BoardData {
113: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
113: 1:  'expectedAnswer': '27',
113: 1:  'history': [
113: 1:    {
113: 1:      'answer': '1',
113: 1:      'question': '0',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '0',
113: 1:      'question': '1',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '3',
113: 1:      'question': '2',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '2',
113: 1:      'question': '3',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '4',
113: 1:      'question': '5',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '6',
113: 1:      'question': '7',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '8',
113: 1:      'question': '9',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '10',
113: 1:      'question': '11',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '15',
113: 1:      'question': '14',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '16',
113: 1:      'question': '17',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '21',
113: 1:      'question': '20',
113: 1:      'valid': true
113: 1:    },
113: 1:    {
113: 1:      'answer': '22',
113: 1:      'question': '23',
113: 1:      'valid': true
113: 1:    }
113: 1:  ],
113: 1:  'info': [
113: 1:    '✅f(0) = 1',
113: 1:    '✅f(1) = 0',
113: 1:    '✅f(2) = 3',
113: 1:    '✅f(3) = 2',
113: 1:    '✅f(5) = 4',
113: 1:    '✅f(7) = 6',
113: 1:    '✅f(9) = 8',
113: 1:    '✅f(11) = 10',
113: 1:    '✅f(14) = 15',
113: 1:    '✅f(17) = 16',
113: 1:    '✅f(20) = 21',
113: 1:    '✅f(23) = 22',
113: 1:    '❌f(26) = ??? != 27'
113: 1:  ],
113: 1:  'level': 4,
113: 1:  'nextQuestion': '26',
113: 1:  'questions': [
113: 1:    '0',
113: 1:    '1',
113: 1:    '2',
113: 1:    '3',
113: 1:    '5',
113: 1:    '7',
113: 1:    '9',
113: 1:    '11',
113: 1:    '14',
113: 1:    '17',
113: 1:    '20',
113: 1:    '23',
113: 1:    '26'
113: 1:  ]
113: 1:}
113: 1:Scores: 3211
113: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27']')
113: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
114: 1:BoardData {
114: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
114: 1:  'expectedAnswer': '28',
114: 1:  'history': [
114: 1:    {
114: 1:      'answer': '1',
114: 1:      'question': '0',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '0',
114: 1:      'question': '1',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '3',
114: 1:      'question': '2',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '2',
114: 1:      'question': '3',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '4',
114: 1:      'question': '5',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '6',
114: 1:      'question': '7',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '8',
114: 1:      'question': '9',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '10',
114: 1:      'question': '11',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '15',
114: 1:      'question': '14',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '16',
114: 1:      'question': '17',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '21',
114: 1:      'question': '20',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '22',
114: 1:      'question': '23',
114: 1:      'valid': true
114: 1:    },
114: 1:    {
114: 1:      'answer': '27',
114: 1:      'question': '26',
114: 1:      'valid': true
114: 1:    }
114: 1:  ],
114: 1:  'info': [
114: 1:    '✅f(0) = 1',
114: 1:    '✅f(1) = 0',
114: 1:    '✅f(2) = 3',
114: 1:    '✅f(3) = 2',
114: 1:    '✅f(5) = 4',
114: 1:    '✅f(7) = 6',
114: 1:    '✅f(9) = 8',
114: 1:    '✅f(11) = 10',
114: 1:    '✅f(14) = 15',
114: 1:    '✅f(17) = 16',
114: 1:    '✅f(20) = 21',
114: 1:    '✅f(23) = 22',
114: 1:    '✅f(26) = 27',
114: 1:    '❌f(29) = ??? != 28'
114: 1:  ],
114: 1:  'level': 4,
114: 1:  'nextQuestion': '29',
114: 1:  'questions': [
114: 1:    '0',
114: 1:    '1',
114: 1:    '2',
114: 1:    '3',
114: 1:    '5',
114: 1:    '7',
114: 1:    '9',
114: 1:    '11',
114: 1:    '14',
114: 1:    '17',
114: 1:    '20',
114: 1:    '23',
114: 1:    '26',
114: 1:    '29'
114: 1:  ]
114: 1:}
114: 1:Scores: 3215
114: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28']')
114: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
115: 1:BoardData {
115: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
115: 1:  'expectedAnswer': '32',
115: 1:  'history': [
115: 1:    {
115: 1:      'answer': '1',
115: 1:      'question': '0',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '0',
115: 1:      'question': '1',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '3',
115: 1:      'question': '2',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '2',
115: 1:      'question': '3',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '4',
115: 1:      'question': '5',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '6',
115: 1:      'question': '7',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '8',
115: 1:      'question': '9',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '10',
115: 1:      'question': '11',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '15',
115: 1:      'question': '14',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '16',
115: 1:      'question': '17',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '21',
115: 1:      'question': '20',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '22',
115: 1:      'question': '23',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '27',
115: 1:      'question': '26',
115: 1:      'valid': true
115: 1:    },
115: 1:    {
115: 1:      'answer': '28',
115: 1:      'question': '29',
115: 1:      'valid': true
115: 1:    }
115: 1:  ],
115: 1:  'info': [
115: 1:    '✅f(0) = 1',
115: 1:    '✅f(1) = 0',
115: 1:    '✅f(2) = 3',
115: 1:    '✅f(3) = 2',
115: 1:    '✅f(5) = 4',
115: 1:    '✅f(7) = 6',
115: 1:    '✅f(9) = 8',
115: 1:    '✅f(11) = 10',
115: 1:    '✅f(14) = 15',
115: 1:    '✅f(17) = 16',
115: 1:    '✅f(20) = 21',
115: 1:    '✅f(23) = 22',
115: 1:    '✅f(26) = 27',
115: 1:    '✅f(29) = 28',
115: 1:    '❌f(33) = ??? != 32'
115: 1:  ],
115: 1:  'level': 4,
115: 1:  'nextQuestion': '33',
115: 1:  'questions': [
115: 1:    '0',
115: 1:    '1',
115: 1:    '2',
115: 1:    '3',
115: 1:    '5',
115: 1:    '7',
115: 1:    '9',
115: 1:    '11',
115: 1:    '14',
115: 1:    '17',
115: 1:    '20',
115: 1:    '23',
115: 1:    '26',
115: 1:    '29',
115: 1:    '33'
115: 1:  ]
115: 1:}
115: 1:Scores: 3219
115: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32']')
115: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
116: 1:BoardData {
116: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
116: 1:  'expectedAnswer': '36',
116: 1:  'history': [
116: 1:    {
116: 1:      'answer': '1',
116: 1:      'question': '0',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '0',
116: 1:      'question': '1',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '3',
116: 1:      'question': '2',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '2',
116: 1:      'question': '3',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '4',
116: 1:      'question': '5',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '6',
116: 1:      'question': '7',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '8',
116: 1:      'question': '9',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '10',
116: 1:      'question': '11',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '15',
116: 1:      'question': '14',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '16',
116: 1:      'question': '17',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '21',
116: 1:      'question': '20',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '22',
116: 1:      'question': '23',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '27',
116: 1:      'question': '26',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '28',
116: 1:      'question': '29',
116: 1:      'valid': true
116: 1:    },
116: 1:    {
116: 1:      'answer': '32',
116: 1:      'question': '33',
116: 1:      'valid': true
116: 1:    }
116: 1:  ],
116: 1:  'info': [
116: 1:    '✅f(0) = 1',
116: 1:    '✅f(1) = 0',
116: 1:    '✅f(2) = 3',
116: 1:    '✅f(3) = 2',
116: 1:    '✅f(5) = 4',
116: 1:    '✅f(7) = 6',
116: 1:    '✅f(9) = 8',
116: 1:    '✅f(11) = 10',
116: 1:    '✅f(14) = 15',
116: 1:    '✅f(17) = 16',
116: 1:    '✅f(20) = 21',
116: 1:    '✅f(23) = 22',
116: 1:    '✅f(26) = 27',
116: 1:    '✅f(29) = 28',
116: 1:    '✅f(33) = 32',
116: 1:    '❌f(37) = ??? != 36'
116: 1:  ],
116: 1:  'level': 4,
116: 1:  'nextQuestion': '37',
116: 1:  'questions': [
116: 1:    '0',
116: 1:    '1',
116: 1:    '2',
116: 1:    '3',
116: 1:    '5',
116: 1:    '7',
116: 1:    '9',
116: 1:    '11',
116: 1:    '14',
116: 1:    '17',
116: 1:    '20',
116: 1:    '23',
116: 1:    '26',
116: 1:    '29',
116: 1:    '33',
116: 1:    '37'
116: 1:  ]
116: 1:}
116: 1:Scores: 3223
116: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36']')
116: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
117: 1:BoardData {
117: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
117: 1:  'expectedAnswer': '40',
117: 1:  'history': [
117: 1:    {
117: 1:      'answer': '1',
117: 1:      'question': '0',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '0',
117: 1:      'question': '1',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '3',
117: 1:      'question': '2',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '2',
117: 1:      'question': '3',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '4',
117: 1:      'question': '5',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '6',
117: 1:      'question': '7',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '8',
117: 1:      'question': '9',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '10',
117: 1:      'question': '11',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '15',
117: 1:      'question': '14',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '16',
117: 1:      'question': '17',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '21',
117: 1:      'question': '20',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '22',
117: 1:      'question': '23',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '27',
117: 1:      'question': '26',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '28',
117: 1:      'question': '29',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '32',
117: 1:      'question': '33',
117: 1:      'valid': true
117: 1:    },
117: 1:    {
117: 1:      'answer': '36',
117: 1:      'question': '37',
117: 1:      'valid': true
117: 1:    }
117: 1:  ],
117: 1:  'info': [
117: 1:    '✅f(0) = 1',
117: 1:    '✅f(1) = 0',
117: 1:    '✅f(2) = 3',
117: 1:    '✅f(3) = 2',
117: 1:    '✅f(5) = 4',
117: 1:    '✅f(7) = 6',
117: 1:    '✅f(9) = 8',
117: 1:    '✅f(11) = 10',
117: 1:    '✅f(14) = 15',
117: 1:    '✅f(17) = 16',
117: 1:    '✅f(20) = 21',
117: 1:    '✅f(23) = 22',
117: 1:    '✅f(26) = 27',
117: 1:    '✅f(29) = 28',
117: 1:    '✅f(33) = 32',
117: 1:    '✅f(37) = 36',
117: 1:    '❌f(41) = ??? != 40'
117: 1:  ],
117: 1:  'level': 4,
117: 1:  'nextQuestion': '41',
117: 1:  'questions': [
117: 1:    '0',
117: 1:    '1',
117: 1:    '2',
117: 1:    '3',
117: 1:    '5',
117: 1:    '7',
117: 1:    '9',
117: 1:    '11',
117: 1:    '14',
117: 1:    '17',
117: 1:    '20',
117: 1:    '23',
117: 1:    '26',
117: 1:    '29',
117: 1:    '33',
117: 1:    '37',
117: 1:    '41'
117: 1:  ]
117: 1:}
117: 1:Scores: 3227
117: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40']')
117: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
118: 1:BoardData {
118: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
118: 1:  'expectedAnswer': '44',
118: 1:  'history': [
118: 1:    {
118: 1:      'answer': '1',
118: 1:      'question': '0',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '0',
118: 1:      'question': '1',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '3',
118: 1:      'question': '2',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '2',
118: 1:      'question': '3',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '4',
118: 1:      'question': '5',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '6',
118: 1:      'question': '7',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '8',
118: 1:      'question': '9',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '10',
118: 1:      'question': '11',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '15',
118: 1:      'question': '14',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '16',
118: 1:      'question': '17',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '21',
118: 1:      'question': '20',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '22',
118: 1:      'question': '23',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '27',
118: 1:      'question': '26',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '28',
118: 1:      'question': '29',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '32',
118: 1:      'question': '33',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '36',
118: 1:      'question': '37',
118: 1:      'valid': true
118: 1:    },
118: 1:    {
118: 1:      'answer': '40',
118: 1:      'question': '41',
118: 1:      'valid': true
118: 1:    }
118: 1:  ],
118: 1:  'info': [
118: 1:    '✅f(0) = 1',
118: 1:    '✅f(1) = 0',
118: 1:    '✅f(2) = 3',
118: 1:    '✅f(3) = 2',
118: 1:    '✅f(5) = 4',
118: 1:    '✅f(7) = 6',
118: 1:    '✅f(9) = 8',
118: 1:    '✅f(11) = 10',
118: 1:    '✅f(14) = 15',
118: 1:    '✅f(17) = 16',
118: 1:    '✅f(20) = 21',
118: 1:    '✅f(23) = 22',
118: 1:    '✅f(26) = 27',
118: 1:    '✅f(29) = 28',
118: 1:    '✅f(33) = 32',
118: 1:    '✅f(37) = 36',
118: 1:    '✅f(41) = 40',
118: 1:    '❌f(45) = ??? != 44'
118: 1:  ],
118: 1:  'level': 4,
118: 1:  'nextQuestion': '45',
118: 1:  'questions': [
118: 1:    '0',
118: 1:    '1',
118: 1:    '2',
118: 1:    '3',
118: 1:    '5',
118: 1:    '7',
118: 1:    '9',
118: 1:    '11',
118: 1:    '14',
118: 1:    '17',
118: 1:    '20',
118: 1:    '23',
118: 1:    '26',
118: 1:    '29',
118: 1:    '33',
118: 1:    '37',
118: 1:    '41',
118: 1:    '45'
118: 1:  ]
118: 1:}
118: 1:Scores: 3231
118: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44']')
118: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
119: 1:BoardData {
119: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
119: 1:  'expectedAnswer': '51',
119: 1:  'history': [
119: 1:    {
119: 1:      'answer': '1',
119: 1:      'question': '0',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '0',
119: 1:      'question': '1',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '3',
119: 1:      'question': '2',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '2',
119: 1:      'question': '3',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '4',
119: 1:      'question': '5',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '6',
119: 1:      'question': '7',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '8',
119: 1:      'question': '9',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '10',
119: 1:      'question': '11',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '15',
119: 1:      'question': '14',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '16',
119: 1:      'question': '17',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '21',
119: 1:      'question': '20',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '22',
119: 1:      'question': '23',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '27',
119: 1:      'question': '26',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '28',
119: 1:      'question': '29',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '32',
119: 1:      'question': '33',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '36',
119: 1:      'question': '37',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '40',
119: 1:      'question': '41',
119: 1:      'valid': true
119: 1:    },
119: 1:    {
119: 1:      'answer': '44',
119: 1:      'question': '45',
119: 1:      'valid': true
119: 1:    }
119: 1:  ],
119: 1:  'info': [
119: 1:    '✅f(0) = 1',
119: 1:    '✅f(1) = 0',
119: 1:    '✅f(2) = 3',
119: 1:    '✅f(3) = 2',
119: 1:    '✅f(5) = 4',
119: 1:    '✅f(7) = 6',
119: 1:    '✅f(9) = 8',
119: 1:    '✅f(11) = 10',
119: 1:    '✅f(14) = 15',
119: 1:    '✅f(17) = 16',
119: 1:    '✅f(20) = 21',
119: 1:    '✅f(23) = 22',
119: 1:    '✅f(26) = 27',
119: 1:    '✅f(29) = 28',
119: 1:    '✅f(33) = 32',
119: 1:    '✅f(37) = 36',
119: 1:    '✅f(41) = 40',
119: 1:    '✅f(45) = 44',
119: 1:    '❌f(50) = ??? != 51'
119: 1:  ],
119: 1:  'level': 4,
119: 1:  'nextQuestion': '50',
119: 1:  'questions': [
119: 1:    '0',
119: 1:    '1',
119: 1:    '2',
119: 1:    '3',
119: 1:    '5',
119: 1:    '7',
119: 1:    '9',
119: 1:    '11',
119: 1:    '14',
119: 1:    '17',
119: 1:    '20',
119: 1:    '23',
119: 1:    '26',
119: 1:    '29',
119: 1:    '33',
119: 1:    '37',
119: 1:    '41',
119: 1:    '45',
119: 1:    '50'
119: 1:  ]
119: 1:}
119: 1:Scores: 3235
119: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51']')
119: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
120: 1:BoardData {
120: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
120: 1:  'expectedAnswer': '54',
120: 1:  'history': [
120: 1:    {
120: 1:      'answer': '1',
120: 1:      'question': '0',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '0',
120: 1:      'question': '1',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '3',
120: 1:      'question': '2',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '2',
120: 1:      'question': '3',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '4',
120: 1:      'question': '5',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '6',
120: 1:      'question': '7',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '8',
120: 1:      'question': '9',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '10',
120: 1:      'question': '11',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '15',
120: 1:      'question': '14',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '16',
120: 1:      'question': '17',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '21',
120: 1:      'question': '20',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '22',
120: 1:      'question': '23',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '27',
120: 1:      'question': '26',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '28',
120: 1:      'question': '29',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '32',
120: 1:      'question': '33',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '36',
120: 1:      'question': '37',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '40',
120: 1:      'question': '41',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '44',
120: 1:      'question': '45',
120: 1:      'valid': true
120: 1:    },
120: 1:    {
120: 1:      'answer': '51',
120: 1:      'question': '50',
120: 1:      'valid': true
120: 1:    }
120: 1:  ],
120: 1:  'info': [
120: 1:    '✅f(0) = 1',
120: 1:    '✅f(1) = 0',
120: 1:    '✅f(2) = 3',
120: 1:    '✅f(3) = 2',
120: 1:    '✅f(5) = 4',
120: 1:    '✅f(7) = 6',
120: 1:    '✅f(9) = 8',
120: 1:    '✅f(11) = 10',
120: 1:    '✅f(14) = 15',
120: 1:    '✅f(17) = 16',
120: 1:    '✅f(20) = 21',
120: 1:    '✅f(23) = 22',
120: 1:    '✅f(26) = 27',
120: 1:    '✅f(29) = 28',
120: 1:    '✅f(33) = 32',
120: 1:    '✅f(37) = 36',
120: 1:    '✅f(41) = 40',
120: 1:    '✅f(45) = 44',
120: 1:    '✅f(50) = 51',
120: 1:    '❌f(55) = ??? != 54'
120: 1:  ],
120: 1:  'level': 4,
120: 1:  'nextQuestion': '55',
120: 1:  'questions': [
120: 1:    '0',
120: 1:    '1',
120: 1:    '2',
120: 1:    '3',
120: 1:    '5',
120: 1:    '7',
120: 1:    '9',
120: 1:    '11',
120: 1:    '14',
120: 1:    '17',
120: 1:    '20',
120: 1:    '23',
120: 1:    '26',
120: 1:    '29',
120: 1:    '33',
120: 1:    '37',
120: 1:    '41',
120: 1:    '45',
120: 1:    '50',
120: 1:    '55'
120: 1:  ]
120: 1:}
120: 1:Scores: 3239
120: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54']')
120: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
121: 1:BoardData {
121: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
121: 1:  'expectedAnswer': '61',
121: 1:  'history': [
121: 1:    {
121: 1:      'answer': '1',
121: 1:      'question': '0',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '0',
121: 1:      'question': '1',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '3',
121: 1:      'question': '2',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '2',
121: 1:      'question': '3',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '4',
121: 1:      'question': '5',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '6',
121: 1:      'question': '7',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '8',
121: 1:      'question': '9',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '10',
121: 1:      'question': '11',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '15',
121: 1:      'question': '14',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '16',
121: 1:      'question': '17',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '21',
121: 1:      'question': '20',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '22',
121: 1:      'question': '23',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '27',
121: 1:      'question': '26',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '28',
121: 1:      'question': '29',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '32',
121: 1:      'question': '33',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '36',
121: 1:      'question': '37',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '40',
121: 1:      'question': '41',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '44',
121: 1:      'question': '45',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '51',
121: 1:      'question': '50',
121: 1:      'valid': true
121: 1:    },
121: 1:    {
121: 1:      'answer': '54',
121: 1:      'question': '55',
121: 1:      'valid': true
121: 1:    }
121: 1:  ],
121: 1:  'info': [
121: 1:    '✅f(0) = 1',
121: 1:    '✅f(1) = 0',
121: 1:    '✅f(2) = 3',
121: 1:    '✅f(3) = 2',
121: 1:    '✅f(5) = 4',
121: 1:    '✅f(7) = 6',
121: 1:    '✅f(9) = 8',
121: 1:    '✅f(11) = 10',
121: 1:    '✅f(14) = 15',
121: 1:    '✅f(17) = 16',
121: 1:    '✅f(20) = 21',
121: 1:    '✅f(23) = 22',
121: 1:    '✅f(26) = 27',
121: 1:    '✅f(29) = 28',
121: 1:    '✅f(33) = 32',
121: 1:    '✅f(37) = 36',
121: 1:    '✅f(41) = 40',
121: 1:    '✅f(45) = 44',
121: 1:    '✅f(50) = 51',
121: 1:    '✅f(55) = 54',
121: 1:    '❌f(60) = ??? != 61'
121: 1:  ],
121: 1:  'level': 4,
121: 1:  'nextQuestion': '60',
121: 1:  'questions': [
121: 1:    '0',
121: 1:    '1',
121: 1:    '2',
121: 1:    '3',
121: 1:    '5',
121: 1:    '7',
121: 1:    '9',
121: 1:    '11',
121: 1:    '14',
121: 1:    '17',
121: 1:    '20',
121: 1:    '23',
121: 1:    '26',
121: 1:    '29',
121: 1:    '33',
121: 1:    '37',
121: 1:    '41',
121: 1:    '45',
121: 1:    '50',
121: 1:    '55',
121: 1:    '60'
121: 1:  ]
121: 1:}
121: 1:Scores: 3243
121: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61']')
121: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
122: 1:BoardData {
122: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
122: 1:  'expectedAnswer': '64',
122: 1:  'history': [
122: 1:    {
122: 1:      'answer': '1',
122: 1:      'question': '0',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '0',
122: 1:      'question': '1',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '3',
122: 1:      'question': '2',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '2',
122: 1:      'question': '3',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '4',
122: 1:      'question': '5',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '6',
122: 1:      'question': '7',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '8',
122: 1:      'question': '9',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '10',
122: 1:      'question': '11',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '15',
122: 1:      'question': '14',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '16',
122: 1:      'question': '17',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '21',
122: 1:      'question': '20',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '22',
122: 1:      'question': '23',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '27',
122: 1:      'question': '26',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '28',
122: 1:      'question': '29',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '32',
122: 1:      'question': '33',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '36',
122: 1:      'question': '37',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '40',
122: 1:      'question': '41',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '44',
122: 1:      'question': '45',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '51',
122: 1:      'question': '50',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '54',
122: 1:      'question': '55',
122: 1:      'valid': true
122: 1:    },
122: 1:    {
122: 1:      'answer': '61',
122: 1:      'question': '60',
122: 1:      'valid': true
122: 1:    }
122: 1:  ],
122: 1:  'info': [
122: 1:    '✅f(0) = 1',
122: 1:    '✅f(1) = 0',
122: 1:    '✅f(2) = 3',
122: 1:    '✅f(3) = 2',
122: 1:    '✅f(5) = 4',
122: 1:    '✅f(7) = 6',
122: 1:    '✅f(9) = 8',
122: 1:    '✅f(11) = 10',
122: 1:    '✅f(14) = 15',
122: 1:    '✅f(17) = 16',
122: 1:    '✅f(20) = 21',
122: 1:    '✅f(23) = 22',
122: 1:    '✅f(26) = 27',
122: 1:    '✅f(29) = 28',
122: 1:    '✅f(33) = 32',
122: 1:    '✅f(37) = 36',
122: 1:    '✅f(41) = 40',
122: 1:    '✅f(45) = 44',
122: 1:    '✅f(50) = 51',
122: 1:    '✅f(55) = 54',
122: 1:    '✅f(60) = 61',
122: 1:    '❌f(65) = ??? != 64'
122: 1:  ],
122: 1:  'level': 4,
122: 1:  'nextQuestion': '65',
122: 1:  'questions': [
122: 1:    '0',
122: 1:    '1',
122: 1:    '2',
122: 1:    '3',
122: 1:    '5',
122: 1:    '7',
122: 1:    '9',
122: 1:    '11',
122: 1:    '14',
122: 1:    '17',
122: 1:    '20',
122: 1:    '23',
122: 1:    '26',
122: 1:    '29',
122: 1:    '33',
122: 1:    '37',
122: 1:    '41',
122: 1:    '45',
122: 1:    '50',
122: 1:    '55',
122: 1:    '60',
122: 1:    '65'
122: 1:  ]
122: 1:}
122: 1:Scores: 3247
122: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64']')
122: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
123: 1:BoardData {
123: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
123: 1:  'expectedAnswer': '71',
123: 1:  'history': [
123: 1:    {
123: 1:      'answer': '1',
123: 1:      'question': '0',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '0',
123: 1:      'question': '1',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '3',
123: 1:      'question': '2',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '2',
123: 1:      'question': '3',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '4',
123: 1:      'question': '5',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '6',
123: 1:      'question': '7',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '8',
123: 1:      'question': '9',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '10',
123: 1:      'question': '11',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '15',
123: 1:      'question': '14',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '16',
123: 1:      'question': '17',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '21',
123: 1:      'question': '20',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '22',
123: 1:      'question': '23',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '27',
123: 1:      'question': '26',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '28',
123: 1:      'question': '29',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '32',
123: 1:      'question': '33',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '36',
123: 1:      'question': '37',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '40',
123: 1:      'question': '41',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '44',
123: 1:      'question': '45',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '51',
123: 1:      'question': '50',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '54',
123: 1:      'question': '55',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '61',
123: 1:      'question': '60',
123: 1:      'valid': true
123: 1:    },
123: 1:    {
123: 1:      'answer': '64',
123: 1:      'question': '65',
123: 1:      'valid': true
123: 1:    }
123: 1:  ],
123: 1:  'info': [
123: 1:    '✅f(0) = 1',
123: 1:    '✅f(1) = 0',
123: 1:    '✅f(2) = 3',
123: 1:    '✅f(3) = 2',
123: 1:    '✅f(5) = 4',
123: 1:    '✅f(7) = 6',
123: 1:    '✅f(9) = 8',
123: 1:    '✅f(11) = 10',
123: 1:    '✅f(14) = 15',
123: 1:    '✅f(17) = 16',
123: 1:    '✅f(20) = 21',
123: 1:    '✅f(23) = 22',
123: 1:    '✅f(26) = 27',
123: 1:    '✅f(29) = 28',
123: 1:    '✅f(33) = 32',
123: 1:    '✅f(37) = 36',
123: 1:    '✅f(41) = 40',
123: 1:    '✅f(45) = 44',
123: 1:    '✅f(50) = 51',
123: 1:    '✅f(55) = 54',
123: 1:    '✅f(60) = 61',
123: 1:    '✅f(65) = 64',
123: 1:    '❌f(70) = ??? != 71'
123: 1:  ],
123: 1:  'level': 4,
123: 1:  'nextQuestion': '70',
123: 1:  'questions': [
123: 1:    '0',
123: 1:    '1',
123: 1:    '2',
123: 1:    '3',
123: 1:    '5',
123: 1:    '7',
123: 1:    '9',
123: 1:    '11',
123: 1:    '14',
123: 1:    '17',
123: 1:    '20',
123: 1:    '23',
123: 1:    '26',
123: 1:    '29',
123: 1:    '33',
123: 1:    '37',
123: 1:    '41',
123: 1:    '45',
123: 1:    '50',
123: 1:    '55',
123: 1:    '60',
123: 1:    '65',
123: 1:    '70'
123: 1:  ]
123: 1:}
123: 1:Scores: 3251
123: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71']')
123: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
124: 1:BoardData {
124: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
124: 1:  'expectedAnswer': '74',
124: 1:  'history': [
124: 1:    {
124: 1:      'answer': '1',
124: 1:      'question': '0',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '0',
124: 1:      'question': '1',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '3',
124: 1:      'question': '2',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '2',
124: 1:      'question': '3',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '4',
124: 1:      'question': '5',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '6',
124: 1:      'question': '7',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '8',
124: 1:      'question': '9',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '10',
124: 1:      'question': '11',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '15',
124: 1:      'question': '14',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '16',
124: 1:      'question': '17',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '21',
124: 1:      'question': '20',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '22',
124: 1:      'question': '23',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '27',
124: 1:      'question': '26',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '28',
124: 1:      'question': '29',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '32',
124: 1:      'question': '33',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '36',
124: 1:      'question': '37',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '40',
124: 1:      'question': '41',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '44',
124: 1:      'question': '45',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '51',
124: 1:      'question': '50',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '54',
124: 1:      'question': '55',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '61',
124: 1:      'question': '60',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '64',
124: 1:      'question': '65',
124: 1:      'valid': true
124: 1:    },
124: 1:    {
124: 1:      'answer': '71',
124: 1:      'question': '70',
124: 1:      'valid': true
124: 1:    }
124: 1:  ],
124: 1:  'info': [
124: 1:    '✅f(0) = 1',
124: 1:    '✅f(1) = 0',
124: 1:    '✅f(2) = 3',
124: 1:    '✅f(3) = 2',
124: 1:    '✅f(5) = 4',
124: 1:    '✅f(7) = 6',
124: 1:    '✅f(9) = 8',
124: 1:    '✅f(11) = 10',
124: 1:    '✅f(14) = 15',
124: 1:    '✅f(17) = 16',
124: 1:    '✅f(20) = 21',
124: 1:    '✅f(23) = 22',
124: 1:    '✅f(26) = 27',
124: 1:    '✅f(29) = 28',
124: 1:    '✅f(33) = 32',
124: 1:    '✅f(37) = 36',
124: 1:    '✅f(41) = 40',
124: 1:    '✅f(45) = 44',
124: 1:    '✅f(50) = 51',
124: 1:    '✅f(55) = 54',
124: 1:    '✅f(60) = 61',
124: 1:    '✅f(65) = 64',
124: 1:    '✅f(70) = 71',
124: 1:    '❌f(75) = ??? != 74'
124: 1:  ],
124: 1:  'level': 4,
124: 1:  'nextQuestion': '75',
124: 1:  'questions': [
124: 1:    '0',
124: 1:    '1',
124: 1:    '2',
124: 1:    '3',
124: 1:    '5',
124: 1:    '7',
124: 1:    '9',
124: 1:    '11',
124: 1:    '14',
124: 1:    '17',
124: 1:    '20',
124: 1:    '23',
124: 1:    '26',
124: 1:    '29',
124: 1:    '33',
124: 1:    '37',
124: 1:    '41',
124: 1:    '45',
124: 1:    '50',
124: 1:    '55',
124: 1:    '60',
124: 1:    '65',
124: 1:    '70',
124: 1:    '75'
124: 1:  ]
124: 1:}
124: 1:Scores: 3255
124: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74']')
124: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
125: 1:BoardData {
125: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
125: 1:  'expectedAnswer': '80',
125: 1:  'history': [
125: 1:    {
125: 1:      'answer': '1',
125: 1:      'question': '0',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '0',
125: 1:      'question': '1',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '3',
125: 1:      'question': '2',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '2',
125: 1:      'question': '3',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '4',
125: 1:      'question': '5',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '6',
125: 1:      'question': '7',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '8',
125: 1:      'question': '9',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '10',
125: 1:      'question': '11',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '15',
125: 1:      'question': '14',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '16',
125: 1:      'question': '17',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '21',
125: 1:      'question': '20',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '22',
125: 1:      'question': '23',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '27',
125: 1:      'question': '26',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '28',
125: 1:      'question': '29',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '32',
125: 1:      'question': '33',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '36',
125: 1:      'question': '37',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '40',
125: 1:      'question': '41',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '44',
125: 1:      'question': '45',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '51',
125: 1:      'question': '50',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '54',
125: 1:      'question': '55',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '61',
125: 1:      'question': '60',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '64',
125: 1:      'question': '65',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '71',
125: 1:      'question': '70',
125: 1:      'valid': true
125: 1:    },
125: 1:    {
125: 1:      'answer': '74',
125: 1:      'question': '75',
125: 1:      'valid': true
125: 1:    }
125: 1:  ],
125: 1:  'info': [
125: 1:    '✅f(0) = 1',
125: 1:    '✅f(1) = 0',
125: 1:    '✅f(2) = 3',
125: 1:    '✅f(3) = 2',
125: 1:    '✅f(5) = 4',
125: 1:    '✅f(7) = 6',
125: 1:    '✅f(9) = 8',
125: 1:    '✅f(11) = 10',
125: 1:    '✅f(14) = 15',
125: 1:    '✅f(17) = 16',
125: 1:    '✅f(20) = 21',
125: 1:    '✅f(23) = 22',
125: 1:    '✅f(26) = 27',
125: 1:    '✅f(29) = 28',
125: 1:    '✅f(33) = 32',
125: 1:    '✅f(37) = 36',
125: 1:    '✅f(41) = 40',
125: 1:    '✅f(45) = 44',
125: 1:    '✅f(50) = 51',
125: 1:    '✅f(55) = 54',
125: 1:    '✅f(60) = 61',
125: 1:    '✅f(65) = 64',
125: 1:    '✅f(70) = 71',
125: 1:    '✅f(75) = 74',
125: 1:    '❌f(81) = ??? != 80'
125: 1:  ],
125: 1:  'level': 4,
125: 1:  'nextQuestion': '81',
125: 1:  'questions': [
125: 1:    '0',
125: 1:    '1',
125: 1:    '2',
125: 1:    '3',
125: 1:    '5',
125: 1:    '7',
125: 1:    '9',
125: 1:    '11',
125: 1:    '14',
125: 1:    '17',
125: 1:    '20',
125: 1:    '23',
125: 1:    '26',
125: 1:    '29',
125: 1:    '33',
125: 1:    '37',
125: 1:    '41',
125: 1:    '45',
125: 1:    '50',
125: 1:    '55',
125: 1:    '60',
125: 1:    '65',
125: 1:    '70',
125: 1:    '75',
125: 1:    '81'
125: 1:  ]
125: 1:}
125: 1:Scores: 3259
125: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74', '80']')
125: 1:Fire Event: PassTest{complexity=11, testCount=26}
------------------------------------------
126: 1:BoardData {
126: 1:  'description': ['Given the sequence: 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14...\nThe sequence starts with element number 0: f(0)=1.\nYour task is to write a function that returns the element at index n: f(n)=?'],
126: 1:  'expectedAnswer': '86',
126: 1:  'history': [
126: 1:    {
126: 1:      'answer': '1',
126: 1:      'question': '0',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '0',
126: 1:      'question': '1',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '3',
126: 1:      'question': '2',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '2',
126: 1:      'question': '3',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '4',
126: 1:      'question': '5',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '6',
126: 1:      'question': '7',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '8',
126: 1:      'question': '9',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '10',
126: 1:      'question': '11',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '15',
126: 1:      'question': '14',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '16',
126: 1:      'question': '17',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '21',
126: 1:      'question': '20',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '22',
126: 1:      'question': '23',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '27',
126: 1:      'question': '26',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '28',
126: 1:      'question': '29',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '32',
126: 1:      'question': '33',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '36',
126: 1:      'question': '37',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '40',
126: 1:      'question': '41',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '44',
126: 1:      'question': '45',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '51',
126: 1:      'question': '50',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '54',
126: 1:      'question': '55',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '61',
126: 1:      'question': '60',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '64',
126: 1:      'question': '65',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '71',
126: 1:      'question': '70',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '74',
126: 1:      'question': '75',
126: 1:      'valid': true
126: 1:    },
126: 1:    {
126: 1:      'answer': '80',
126: 1:      'question': '81',
126: 1:      'valid': true
126: 1:    }
126: 1:  ],
126: 1:  'info': [
126: 1:    '✅f(0) = 1',
126: 1:    '✅f(1) = 0',
126: 1:    '✅f(2) = 3',
126: 1:    '✅f(3) = 2',
126: 1:    '✅f(5) = 4',
126: 1:    '✅f(7) = 6',
126: 1:    '✅f(9) = 8',
126: 1:    '✅f(11) = 10',
126: 1:    '✅f(14) = 15',
126: 1:    '✅f(17) = 16',
126: 1:    '✅f(20) = 21',
126: 1:    '✅f(23) = 22',
126: 1:    '✅f(26) = 27',
126: 1:    '✅f(29) = 28',
126: 1:    '✅f(33) = 32',
126: 1:    '✅f(37) = 36',
126: 1:    '✅f(41) = 40',
126: 1:    '✅f(45) = 44',
126: 1:    '✅f(50) = 51',
126: 1:    '✅f(55) = 54',
126: 1:    '✅f(60) = 61',
126: 1:    '✅f(65) = 64',
126: 1:    '✅f(70) = 71',
126: 1:    '✅f(75) = 74',
126: 1:    '✅f(81) = 80',
126: 1:    '❌f(87) = ??? != 86'
126: 1:  ],
126: 1:  'level': 4,
126: 1:  'nextQuestion': '87',
126: 1:  'questions': [
126: 1:    '0',
126: 1:    '1',
126: 1:    '2',
126: 1:    '3',
126: 1:    '5',
126: 1:    '7',
126: 1:    '9',
126: 1:    '11',
126: 1:    '14',
126: 1:    '17',
126: 1:    '20',
126: 1:    '23',
126: 1:    '26',
126: 1:    '29',
126: 1:    '33',
126: 1:    '37',
126: 1:    '41',
126: 1:    '45',
126: 1:    '50',
126: 1:    '55',
126: 1:    '60',
126: 1:    '65',
126: 1:    '70',
126: 1:    '75',
126: 1:    '81',
126: 1:    '87'
126: 1:  ]
126: 1:}
126: 1:Scores: 3263
126: 1:Answer: message('['1', '0', '3', '2', '4', '6', '8', '10', '15', '16', '21', '22', '27', '28', '32', '36', '40', '44', '51', '54', '61', '64', '71', '74', '80', '86']')
126: 1:Fire Event: PassTest{complexity=11, testCount=26}
126: 1:Fire Event: NextAlgorithm{complexity=11, time=0}
------------------------------------------
127: 1:BoardData {
127: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
127: 1:  'history': [
127: 1:    {
127: 1:      'answer': '1',
127: 1:      'question': '0',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '0',
127: 1:      'question': '1',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '3',
127: 1:      'question': '2',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '2',
127: 1:      'question': '3',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '4',
127: 1:      'question': '5',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '6',
127: 1:      'question': '7',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '8',
127: 1:      'question': '9',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '10',
127: 1:      'question': '11',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '15',
127: 1:      'question': '14',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '16',
127: 1:      'question': '17',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '21',
127: 1:      'question': '20',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '22',
127: 1:      'question': '23',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '27',
127: 1:      'question': '26',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '28',
127: 1:      'question': '29',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '32',
127: 1:      'question': '33',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '36',
127: 1:      'question': '37',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '40',
127: 1:      'question': '41',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '44',
127: 1:      'question': '45',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '51',
127: 1:      'question': '50',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '54',
127: 1:      'question': '55',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '61',
127: 1:      'question': '60',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '64',
127: 1:      'question': '65',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '71',
127: 1:      'question': '70',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '74',
127: 1:      'question': '75',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '80',
127: 1:      'question': '81',
127: 1:      'valid': true
127: 1:    },
127: 1:    {
127: 1:      'answer': '86',
127: 1:      'question': '87',
127: 1:      'valid': true
127: 1:    }
127: 1:  ],
127: 1:  'info': [
127: 1:    '✅f(0) = 1',
127: 1:    '✅f(1) = 0',
127: 1:    '✅f(2) = 3',
127: 1:    '✅f(3) = 2',
127: 1:    '✅f(5) = 4',
127: 1:    '✅f(7) = 6',
127: 1:    '✅f(9) = 8',
127: 1:    '✅f(11) = 10',
127: 1:    '✅f(14) = 15',
127: 1:    '✅f(17) = 16',
127: 1:    '✅f(20) = 21',
127: 1:    '✅f(23) = 22',
127: 1:    '✅f(26) = 27',
127: 1:    '✅f(29) = 28',
127: 1:    '✅f(33) = 32',
127: 1:    '✅f(37) = 36',
127: 1:    '✅f(41) = 40',
127: 1:    '✅f(45) = 44',
127: 1:    '✅f(50) = 51',
127: 1:    '✅f(55) = 54',
127: 1:    '✅f(60) = 61',
127: 1:    '✅f(65) = 64',
127: 1:    '✅f(70) = 71',
127: 1:    '✅f(75) = 74',
127: 1:    '✅f(81) = 80',
127: 1:    '✅f(87) = 86'
127: 1:  ],
127: 1:  'level': 4,
127: 1:  'questions': []
127: 1:}
127: 1:Scores: 4751
127: 1:Answer: message('StartNextLevel')
127: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
128: 1:BoardData {
128: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
128: 1:  'expectedAnswer': 'cab',
128: 1:  'history': [],
128: 1:  'info': ['❌f(abc) = ??? != cab'],
128: 1:  'level': 5,
128: 1:  'nextQuestion': 'abc',
128: 1:  'questions': ['abc']
128: 1:}
128: 1:Scores: 4751
128: 1:Answer: message('['cab']')
128: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
129: 1:BoardData {
129: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
129: 1:  'expectedAnswer': 'dca',
129: 1:  'history': [{
129: 1:    'answer': 'cab',
129: 1:    'question': 'abc',
129: 1:    'valid': true
129: 1:  }],
129: 1:  'info': [
129: 1:    '✅f(abc) = cab',
129: 1:    '❌f(cad) = ??? != dca'
129: 1:  ],
129: 1:  'level': 5,
129: 1:  'nextQuestion': 'cad',
129: 1:  'questions': [
129: 1:    'abc',
129: 1:    'cad'
129: 1:  ]
129: 1:}
129: 1:Scores: 4756
129: 1:Answer: message('['cab', 'dca']')
129: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
130: 1:BoardData {
130: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
130: 1:  'expectedAnswer': 'das',
130: 1:  'history': [
130: 1:    {
130: 1:      'answer': 'cab',
130: 1:      'question': 'abc',
130: 1:      'valid': true
130: 1:    },
130: 1:    {
130: 1:      'answer': 'dca',
130: 1:      'question': 'cad',
130: 1:      'valid': true
130: 1:    }
130: 1:  ],
130: 1:  'info': [
130: 1:    '✅f(abc) = cab',
130: 1:    '✅f(cad) = dca',
130: 1:    '❌f(asd) = ??? != das'
130: 1:  ],
130: 1:  'level': 5,
130: 1:  'nextQuestion': 'asd',
130: 1:  'questions': [
130: 1:    'abc',
130: 1:    'cad',
130: 1:    'asd'
130: 1:  ]
130: 1:}
130: 1:Scores: 4761
130: 1:Answer: message('['cab', 'dca', 'das']')
130: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
131: 1:BoardData {
131: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
131: 1:  'expectedAnswer': 'zxy',
131: 1:  'history': [
131: 1:    {
131: 1:      'answer': 'cab',
131: 1:      'question': 'abc',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': 'dca',
131: 1:      'question': 'cad',
131: 1:      'valid': true
131: 1:    },
131: 1:    {
131: 1:      'answer': 'das',
131: 1:      'question': 'asd',
131: 1:      'valid': true
131: 1:    }
131: 1:  ],
131: 1:  'info': [
131: 1:    '✅f(abc) = cab',
131: 1:    '✅f(cad) = dca',
131: 1:    '✅f(asd) = das',
131: 1:    '❌f(xyz) = ??? != zxy'
131: 1:  ],
131: 1:  'level': 5,
131: 1:  'nextQuestion': 'xyz',
131: 1:  'questions': [
131: 1:    'abc',
131: 1:    'cad',
131: 1:    'asd',
131: 1:    'xyz'
131: 1:  ]
131: 1:}
131: 1:Scores: 4766
131: 1:Answer: message('['cab', 'dca', 'das', 'zxy']')
131: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
132: 1:BoardData {
132: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
132: 1:  'expectedAnswer': 'aaa',
132: 1:  'history': [
132: 1:    {
132: 1:      'answer': 'cab',
132: 1:      'question': 'abc',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': 'dca',
132: 1:      'question': 'cad',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': 'das',
132: 1:      'question': 'asd',
132: 1:      'valid': true
132: 1:    },
132: 1:    {
132: 1:      'answer': 'zxy',
132: 1:      'question': 'xyz',
132: 1:      'valid': true
132: 1:    }
132: 1:  ],
132: 1:  'info': [
132: 1:    '✅f(abc) = cab',
132: 1:    '✅f(cad) = dca',
132: 1:    '✅f(asd) = das',
132: 1:    '✅f(xyz) = zxy',
132: 1:    '❌f(aaa) = ??? != aaa'
132: 1:  ],
132: 1:  'level': 5,
132: 1:  'nextQuestion': 'aaa',
132: 1:  'questions': [
132: 1:    'abc',
132: 1:    'cad',
132: 1:    'asd',
132: 1:    'xyz',
132: 1:    'aaa'
132: 1:  ]
132: 1:}
132: 1:Scores: 4771
132: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa']')
132: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
133: 1:BoardData {
133: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
133: 1:  'expectedAnswer': '312',
133: 1:  'history': [
133: 1:    {
133: 1:      'answer': 'cab',
133: 1:      'question': 'abc',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': 'dca',
133: 1:      'question': 'cad',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': 'das',
133: 1:      'question': 'asd',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': 'zxy',
133: 1:      'question': 'xyz',
133: 1:      'valid': true
133: 1:    },
133: 1:    {
133: 1:      'answer': 'aaa',
133: 1:      'question': 'aaa',
133: 1:      'valid': true
133: 1:    }
133: 1:  ],
133: 1:  'info': [
133: 1:    '✅f(abc) = cab',
133: 1:    '✅f(cad) = dca',
133: 1:    '✅f(asd) = das',
133: 1:    '✅f(xyz) = zxy',
133: 1:    '✅f(aaa) = aaa',
133: 1:    '❌f(123) = ??? != 312'
133: 1:  ],
133: 1:  'level': 5,
133: 1:  'nextQuestion': '123',
133: 1:  'questions': [
133: 1:    'abc',
133: 1:    'cad',
133: 1:    'asd',
133: 1:    'xyz',
133: 1:    'aaa',
133: 1:    '123'
133: 1:  ]
133: 1:}
133: 1:Scores: 4776
133: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312']')
133: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
134: 1:BoardData {
134: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
134: 1:  'expectedAnswer': 'fdE',
134: 1:  'history': [
134: 1:    {
134: 1:      'answer': 'cab',
134: 1:      'question': 'abc',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': 'dca',
134: 1:      'question': 'cad',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': 'das',
134: 1:      'question': 'asd',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': 'zxy',
134: 1:      'question': 'xyz',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': 'aaa',
134: 1:      'question': 'aaa',
134: 1:      'valid': true
134: 1:    },
134: 1:    {
134: 1:      'answer': '312',
134: 1:      'question': '123',
134: 1:      'valid': true
134: 1:    }
134: 1:  ],
134: 1:  'info': [
134: 1:    '✅f(abc) = cab',
134: 1:    '✅f(cad) = dca',
134: 1:    '✅f(asd) = das',
134: 1:    '✅f(xyz) = zxy',
134: 1:    '✅f(aaa) = aaa',
134: 1:    '✅f(123) = 312',
134: 1:    '❌f(dEf) = ??? != fdE'
134: 1:  ],
134: 1:  'level': 5,
134: 1:  'nextQuestion': 'dEf',
134: 1:  'questions': [
134: 1:    'abc',
134: 1:    'cad',
134: 1:    'asd',
134: 1:    'xyz',
134: 1:    'aaa',
134: 1:    '123',
134: 1:    'dEf'
134: 1:  ]
134: 1:}
134: 1:Scores: 4781
134: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE']')
134: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
135: 1:BoardData {
135: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
135: 1:  'expectedAnswer': 'czx',
135: 1:  'history': [
135: 1:    {
135: 1:      'answer': 'cab',
135: 1:      'question': 'abc',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': 'dca',
135: 1:      'question': 'cad',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': 'das',
135: 1:      'question': 'asd',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': 'zxy',
135: 1:      'question': 'xyz',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': 'aaa',
135: 1:      'question': 'aaa',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': '312',
135: 1:      'question': '123',
135: 1:      'valid': true
135: 1:    },
135: 1:    {
135: 1:      'answer': 'fdE',
135: 1:      'question': 'dEf',
135: 1:      'valid': true
135: 1:    }
135: 1:  ],
135: 1:  'info': [
135: 1:    '✅f(abc) = cab',
135: 1:    '✅f(cad) = dca',
135: 1:    '✅f(asd) = das',
135: 1:    '✅f(xyz) = zxy',
135: 1:    '✅f(aaa) = aaa',
135: 1:    '✅f(123) = 312',
135: 1:    '✅f(dEf) = fdE',
135: 1:    '❌f(zxc) = ??? != czx'
135: 1:  ],
135: 1:  'level': 5,
135: 1:  'nextQuestion': 'zxc',
135: 1:  'questions': [
135: 1:    'abc',
135: 1:    'cad',
135: 1:    'asd',
135: 1:    'xyz',
135: 1:    'aaa',
135: 1:    '123',
135: 1:    'dEf',
135: 1:    'zxc'
135: 1:  ]
135: 1:}
135: 1:Scores: 4786
135: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx']')
135: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
136: 1:BoardData {
136: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
136: 1:  'expectedAnswer': 'eqw',
136: 1:  'history': [
136: 1:    {
136: 1:      'answer': 'cab',
136: 1:      'question': 'abc',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': 'dca',
136: 1:      'question': 'cad',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': 'das',
136: 1:      'question': 'asd',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': 'zxy',
136: 1:      'question': 'xyz',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': 'aaa',
136: 1:      'question': 'aaa',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': '312',
136: 1:      'question': '123',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': 'fdE',
136: 1:      'question': 'dEf',
136: 1:      'valid': true
136: 1:    },
136: 1:    {
136: 1:      'answer': 'czx',
136: 1:      'question': 'zxc',
136: 1:      'valid': true
136: 1:    }
136: 1:  ],
136: 1:  'info': [
136: 1:    '✅f(abc) = cab',
136: 1:    '✅f(cad) = dca',
136: 1:    '✅f(asd) = das',
136: 1:    '✅f(xyz) = zxy',
136: 1:    '✅f(aaa) = aaa',
136: 1:    '✅f(123) = 312',
136: 1:    '✅f(dEf) = fdE',
136: 1:    '✅f(zxc) = czx',
136: 1:    '❌f(qwe) = ??? != eqw'
136: 1:  ],
136: 1:  'level': 5,
136: 1:  'nextQuestion': 'qwe',
136: 1:  'questions': [
136: 1:    'abc',
136: 1:    'cad',
136: 1:    'asd',
136: 1:    'xyz',
136: 1:    'aaa',
136: 1:    '123',
136: 1:    'dEf',
136: 1:    'zxc',
136: 1:    'qwe'
136: 1:  ]
136: 1:}
136: 1:Scores: 4791
136: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw']')
136: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
137: 1:BoardData {
137: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
137: 1:  'expectedAnswer': 'yrt',
137: 1:  'history': [
137: 1:    {
137: 1:      'answer': 'cab',
137: 1:      'question': 'abc',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': 'dca',
137: 1:      'question': 'cad',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': 'das',
137: 1:      'question': 'asd',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': 'zxy',
137: 1:      'question': 'xyz',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': 'aaa',
137: 1:      'question': 'aaa',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': '312',
137: 1:      'question': '123',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': 'fdE',
137: 1:      'question': 'dEf',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': 'czx',
137: 1:      'question': 'zxc',
137: 1:      'valid': true
137: 1:    },
137: 1:    {
137: 1:      'answer': 'eqw',
137: 1:      'question': 'qwe',
137: 1:      'valid': true
137: 1:    }
137: 1:  ],
137: 1:  'info': [
137: 1:    '✅f(abc) = cab',
137: 1:    '✅f(cad) = dca',
137: 1:    '✅f(asd) = das',
137: 1:    '✅f(xyz) = zxy',
137: 1:    '✅f(aaa) = aaa',
137: 1:    '✅f(123) = 312',
137: 1:    '✅f(dEf) = fdE',
137: 1:    '✅f(zxc) = czx',
137: 1:    '✅f(qwe) = eqw',
137: 1:    '❌f(rty) = ??? != yrt'
137: 1:  ],
137: 1:  'level': 5,
137: 1:  'nextQuestion': 'rty',
137: 1:  'questions': [
137: 1:    'abc',
137: 1:    'cad',
137: 1:    'asd',
137: 1:    'xyz',
137: 1:    'aaa',
137: 1:    '123',
137: 1:    'dEf',
137: 1:    'zxc',
137: 1:    'qwe',
137: 1:    'rty'
137: 1:  ]
137: 1:}
137: 1:Scores: 4796
137: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt']')
137: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
138: 1:BoardData {
138: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
138: 1:  'expectedAnswer': 'bmn',
138: 1:  'history': [
138: 1:    {
138: 1:      'answer': 'cab',
138: 1:      'question': 'abc',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': 'dca',
138: 1:      'question': 'cad',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': 'das',
138: 1:      'question': 'asd',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': 'zxy',
138: 1:      'question': 'xyz',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': 'aaa',
138: 1:      'question': 'aaa',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': '312',
138: 1:      'question': '123',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': 'fdE',
138: 1:      'question': 'dEf',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': 'czx',
138: 1:      'question': 'zxc',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': 'eqw',
138: 1:      'question': 'qwe',
138: 1:      'valid': true
138: 1:    },
138: 1:    {
138: 1:      'answer': 'yrt',
138: 1:      'question': 'rty',
138: 1:      'valid': true
138: 1:    }
138: 1:  ],
138: 1:  'info': [
138: 1:    '✅f(abc) = cab',
138: 1:    '✅f(cad) = dca',
138: 1:    '✅f(asd) = das',
138: 1:    '✅f(xyz) = zxy',
138: 1:    '✅f(aaa) = aaa',
138: 1:    '✅f(123) = 312',
138: 1:    '✅f(dEf) = fdE',
138: 1:    '✅f(zxc) = czx',
138: 1:    '✅f(qwe) = eqw',
138: 1:    '✅f(rty) = yrt',
138: 1:    '❌f(mnb) = ??? != bmn'
138: 1:  ],
138: 1:  'level': 5,
138: 1:  'nextQuestion': 'mnb',
138: 1:  'questions': [
138: 1:    'abc',
138: 1:    'cad',
138: 1:    'asd',
138: 1:    'xyz',
138: 1:    'aaa',
138: 1:    '123',
138: 1:    'dEf',
138: 1:    'zxc',
138: 1:    'qwe',
138: 1:    'rty',
138: 1:    'mnb'
138: 1:  ]
138: 1:}
138: 1:Scores: 4801
138: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn']')
138: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
139: 1:BoardData {
139: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
139: 1:  'expectedAnswer': 'nvb',
139: 1:  'history': [
139: 1:    {
139: 1:      'answer': 'cab',
139: 1:      'question': 'abc',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'dca',
139: 1:      'question': 'cad',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'das',
139: 1:      'question': 'asd',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'zxy',
139: 1:      'question': 'xyz',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'aaa',
139: 1:      'question': 'aaa',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': '312',
139: 1:      'question': '123',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'fdE',
139: 1:      'question': 'dEf',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'czx',
139: 1:      'question': 'zxc',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'eqw',
139: 1:      'question': 'qwe',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'yrt',
139: 1:      'question': 'rty',
139: 1:      'valid': true
139: 1:    },
139: 1:    {
139: 1:      'answer': 'bmn',
139: 1:      'question': 'mnb',
139: 1:      'valid': true
139: 1:    }
139: 1:  ],
139: 1:  'info': [
139: 1:    '✅f(abc) = cab',
139: 1:    '✅f(cad) = dca',
139: 1:    '✅f(asd) = das',
139: 1:    '✅f(xyz) = zxy',
139: 1:    '✅f(aaa) = aaa',
139: 1:    '✅f(123) = 312',
139: 1:    '✅f(dEf) = fdE',
139: 1:    '✅f(zxc) = czx',
139: 1:    '✅f(qwe) = eqw',
139: 1:    '✅f(rty) = yrt',
139: 1:    '✅f(mnb) = bmn',
139: 1:    '❌f(vbn) = ??? != nvb'
139: 1:  ],
139: 1:  'level': 5,
139: 1:  'nextQuestion': 'vbn',
139: 1:  'questions': [
139: 1:    'abc',
139: 1:    'cad',
139: 1:    'asd',
139: 1:    'xyz',
139: 1:    'aaa',
139: 1:    '123',
139: 1:    'dEf',
139: 1:    'zxc',
139: 1:    'qwe',
139: 1:    'rty',
139: 1:    'mnb',
139: 1:    'vbn'
139: 1:  ]
139: 1:}
139: 1:Scores: 4806
139: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb']')
139: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
140: 1:BoardData {
140: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
140: 1:  'expectedAnswer': 'hfg',
140: 1:  'history': [
140: 1:    {
140: 1:      'answer': 'cab',
140: 1:      'question': 'abc',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'dca',
140: 1:      'question': 'cad',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'das',
140: 1:      'question': 'asd',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'zxy',
140: 1:      'question': 'xyz',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'aaa',
140: 1:      'question': 'aaa',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': '312',
140: 1:      'question': '123',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'fdE',
140: 1:      'question': 'dEf',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'czx',
140: 1:      'question': 'zxc',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'eqw',
140: 1:      'question': 'qwe',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'yrt',
140: 1:      'question': 'rty',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'bmn',
140: 1:      'question': 'mnb',
140: 1:      'valid': true
140: 1:    },
140: 1:    {
140: 1:      'answer': 'nvb',
140: 1:      'question': 'vbn',
140: 1:      'valid': true
140: 1:    }
140: 1:  ],
140: 1:  'info': [
140: 1:    '✅f(abc) = cab',
140: 1:    '✅f(cad) = dca',
140: 1:    '✅f(asd) = das',
140: 1:    '✅f(xyz) = zxy',
140: 1:    '✅f(aaa) = aaa',
140: 1:    '✅f(123) = 312',
140: 1:    '✅f(dEf) = fdE',
140: 1:    '✅f(zxc) = czx',
140: 1:    '✅f(qwe) = eqw',
140: 1:    '✅f(rty) = yrt',
140: 1:    '✅f(mnb) = bmn',
140: 1:    '✅f(vbn) = nvb',
140: 1:    '❌f(fgh) = ??? != hfg'
140: 1:  ],
140: 1:  'level': 5,
140: 1:  'nextQuestion': 'fgh',
140: 1:  'questions': [
140: 1:    'abc',
140: 1:    'cad',
140: 1:    'asd',
140: 1:    'xyz',
140: 1:    'aaa',
140: 1:    '123',
140: 1:    'dEf',
140: 1:    'zxc',
140: 1:    'qwe',
140: 1:    'rty',
140: 1:    'mnb',
140: 1:    'vbn',
140: 1:    'fgh'
140: 1:  ]
140: 1:}
140: 1:Scores: 4811
140: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg']')
140: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
141: 1:BoardData {
141: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
141: 1:  'expectedAnswer': 'kij',
141: 1:  'history': [
141: 1:    {
141: 1:      'answer': 'cab',
141: 1:      'question': 'abc',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'dca',
141: 1:      'question': 'cad',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'das',
141: 1:      'question': 'asd',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'zxy',
141: 1:      'question': 'xyz',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'aaa',
141: 1:      'question': 'aaa',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': '312',
141: 1:      'question': '123',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'fdE',
141: 1:      'question': 'dEf',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'czx',
141: 1:      'question': 'zxc',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'eqw',
141: 1:      'question': 'qwe',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'yrt',
141: 1:      'question': 'rty',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'bmn',
141: 1:      'question': 'mnb',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'nvb',
141: 1:      'question': 'vbn',
141: 1:      'valid': true
141: 1:    },
141: 1:    {
141: 1:      'answer': 'hfg',
141: 1:      'question': 'fgh',
141: 1:      'valid': true
141: 1:    }
141: 1:  ],
141: 1:  'info': [
141: 1:    '✅f(abc) = cab',
141: 1:    '✅f(cad) = dca',
141: 1:    '✅f(asd) = das',
141: 1:    '✅f(xyz) = zxy',
141: 1:    '✅f(aaa) = aaa',
141: 1:    '✅f(123) = 312',
141: 1:    '✅f(dEf) = fdE',
141: 1:    '✅f(zxc) = czx',
141: 1:    '✅f(qwe) = eqw',
141: 1:    '✅f(rty) = yrt',
141: 1:    '✅f(mnb) = bmn',
141: 1:    '✅f(vbn) = nvb',
141: 1:    '✅f(fgh) = hfg',
141: 1:    '❌f(ijk) = ??? != kij'
141: 1:  ],
141: 1:  'level': 5,
141: 1:  'nextQuestion': 'ijk',
141: 1:  'questions': [
141: 1:    'abc',
141: 1:    'cad',
141: 1:    'asd',
141: 1:    'xyz',
141: 1:    'aaa',
141: 1:    '123',
141: 1:    'dEf',
141: 1:    'zxc',
141: 1:    'qwe',
141: 1:    'rty',
141: 1:    'mnb',
141: 1:    'vbn',
141: 1:    'fgh',
141: 1:    'ijk'
141: 1:  ]
141: 1:}
141: 1:Scores: 4816
141: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij']')
141: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
142: 1:BoardData {
142: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
142: 1:  'expectedAnswer': 'nlm',
142: 1:  'history': [
142: 1:    {
142: 1:      'answer': 'cab',
142: 1:      'question': 'abc',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'dca',
142: 1:      'question': 'cad',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'das',
142: 1:      'question': 'asd',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'zxy',
142: 1:      'question': 'xyz',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'aaa',
142: 1:      'question': 'aaa',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': '312',
142: 1:      'question': '123',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'fdE',
142: 1:      'question': 'dEf',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'czx',
142: 1:      'question': 'zxc',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'eqw',
142: 1:      'question': 'qwe',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'yrt',
142: 1:      'question': 'rty',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'bmn',
142: 1:      'question': 'mnb',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'nvb',
142: 1:      'question': 'vbn',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'hfg',
142: 1:      'question': 'fgh',
142: 1:      'valid': true
142: 1:    },
142: 1:    {
142: 1:      'answer': 'kij',
142: 1:      'question': 'ijk',
142: 1:      'valid': true
142: 1:    }
142: 1:  ],
142: 1:  'info': [
142: 1:    '✅f(abc) = cab',
142: 1:    '✅f(cad) = dca',
142: 1:    '✅f(asd) = das',
142: 1:    '✅f(xyz) = zxy',
142: 1:    '✅f(aaa) = aaa',
142: 1:    '✅f(123) = 312',
142: 1:    '✅f(dEf) = fdE',
142: 1:    '✅f(zxc) = czx',
142: 1:    '✅f(qwe) = eqw',
142: 1:    '✅f(rty) = yrt',
142: 1:    '✅f(mnb) = bmn',
142: 1:    '✅f(vbn) = nvb',
142: 1:    '✅f(fgh) = hfg',
142: 1:    '✅f(ijk) = kij',
142: 1:    '❌f(lmn) = ??? != nlm'
142: 1:  ],
142: 1:  'level': 5,
142: 1:  'nextQuestion': 'lmn',
142: 1:  'questions': [
142: 1:    'abc',
142: 1:    'cad',
142: 1:    'asd',
142: 1:    'xyz',
142: 1:    'aaa',
142: 1:    '123',
142: 1:    'dEf',
142: 1:    'zxc',
142: 1:    'qwe',
142: 1:    'rty',
142: 1:    'mnb',
142: 1:    'vbn',
142: 1:    'fgh',
142: 1:    'ijk',
142: 1:    'lmn'
142: 1:  ]
142: 1:}
142: 1:Scores: 4821
142: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm']')
142: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
143: 1:BoardData {
143: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
143: 1:  'expectedAnswer': 'rpq',
143: 1:  'history': [
143: 1:    {
143: 1:      'answer': 'cab',
143: 1:      'question': 'abc',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'dca',
143: 1:      'question': 'cad',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'das',
143: 1:      'question': 'asd',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'zxy',
143: 1:      'question': 'xyz',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'aaa',
143: 1:      'question': 'aaa',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': '312',
143: 1:      'question': '123',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'fdE',
143: 1:      'question': 'dEf',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'czx',
143: 1:      'question': 'zxc',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'eqw',
143: 1:      'question': 'qwe',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'yrt',
143: 1:      'question': 'rty',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'bmn',
143: 1:      'question': 'mnb',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'nvb',
143: 1:      'question': 'vbn',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'hfg',
143: 1:      'question': 'fgh',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'kij',
143: 1:      'question': 'ijk',
143: 1:      'valid': true
143: 1:    },
143: 1:    {
143: 1:      'answer': 'nlm',
143: 1:      'question': 'lmn',
143: 1:      'valid': true
143: 1:    }
143: 1:  ],
143: 1:  'info': [
143: 1:    '✅f(abc) = cab',
143: 1:    '✅f(cad) = dca',
143: 1:    '✅f(asd) = das',
143: 1:    '✅f(xyz) = zxy',
143: 1:    '✅f(aaa) = aaa',
143: 1:    '✅f(123) = 312',
143: 1:    '✅f(dEf) = fdE',
143: 1:    '✅f(zxc) = czx',
143: 1:    '✅f(qwe) = eqw',
143: 1:    '✅f(rty) = yrt',
143: 1:    '✅f(mnb) = bmn',
143: 1:    '✅f(vbn) = nvb',
143: 1:    '✅f(fgh) = hfg',
143: 1:    '✅f(ijk) = kij',
143: 1:    '✅f(lmn) = nlm',
143: 1:    '❌f(pqr) = ??? != rpq'
143: 1:  ],
143: 1:  'level': 5,
143: 1:  'nextQuestion': 'pqr',
143: 1:  'questions': [
143: 1:    'abc',
143: 1:    'cad',
143: 1:    'asd',
143: 1:    'xyz',
143: 1:    'aaa',
143: 1:    '123',
143: 1:    'dEf',
143: 1:    'zxc',
143: 1:    'qwe',
143: 1:    'rty',
143: 1:    'mnb',
143: 1:    'vbn',
143: 1:    'fgh',
143: 1:    'ijk',
143: 1:    'lmn',
143: 1:    'pqr'
143: 1:  ]
143: 1:}
143: 1:Scores: 4826
143: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq']')
143: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
144: 1:BoardData {
144: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
144: 1:  'expectedAnswer': 'ust',
144: 1:  'history': [
144: 1:    {
144: 1:      'answer': 'cab',
144: 1:      'question': 'abc',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'dca',
144: 1:      'question': 'cad',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'das',
144: 1:      'question': 'asd',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'zxy',
144: 1:      'question': 'xyz',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'aaa',
144: 1:      'question': 'aaa',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': '312',
144: 1:      'question': '123',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'fdE',
144: 1:      'question': 'dEf',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'czx',
144: 1:      'question': 'zxc',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'eqw',
144: 1:      'question': 'qwe',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'yrt',
144: 1:      'question': 'rty',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'bmn',
144: 1:      'question': 'mnb',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'nvb',
144: 1:      'question': 'vbn',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'hfg',
144: 1:      'question': 'fgh',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'kij',
144: 1:      'question': 'ijk',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'nlm',
144: 1:      'question': 'lmn',
144: 1:      'valid': true
144: 1:    },
144: 1:    {
144: 1:      'answer': 'rpq',
144: 1:      'question': 'pqr',
144: 1:      'valid': true
144: 1:    }
144: 1:  ],
144: 1:  'info': [
144: 1:    '✅f(abc) = cab',
144: 1:    '✅f(cad) = dca',
144: 1:    '✅f(asd) = das',
144: 1:    '✅f(xyz) = zxy',
144: 1:    '✅f(aaa) = aaa',
144: 1:    '✅f(123) = 312',
144: 1:    '✅f(dEf) = fdE',
144: 1:    '✅f(zxc) = czx',
144: 1:    '✅f(qwe) = eqw',
144: 1:    '✅f(rty) = yrt',
144: 1:    '✅f(mnb) = bmn',
144: 1:    '✅f(vbn) = nvb',
144: 1:    '✅f(fgh) = hfg',
144: 1:    '✅f(ijk) = kij',
144: 1:    '✅f(lmn) = nlm',
144: 1:    '✅f(pqr) = rpq',
144: 1:    '❌f(stu) = ??? != ust'
144: 1:  ],
144: 1:  'level': 5,
144: 1:  'nextQuestion': 'stu',
144: 1:  'questions': [
144: 1:    'abc',
144: 1:    'cad',
144: 1:    'asd',
144: 1:    'xyz',
144: 1:    'aaa',
144: 1:    '123',
144: 1:    'dEf',
144: 1:    'zxc',
144: 1:    'qwe',
144: 1:    'rty',
144: 1:    'mnb',
144: 1:    'vbn',
144: 1:    'fgh',
144: 1:    'ijk',
144: 1:    'lmn',
144: 1:    'pqr',
144: 1:    'stu'
144: 1:  ]
144: 1:}
144: 1:Scores: 4831
144: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust']')
144: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
145: 1:BoardData {
145: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
145: 1:  'expectedAnswer': 'ywx',
145: 1:  'history': [
145: 1:    {
145: 1:      'answer': 'cab',
145: 1:      'question': 'abc',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'dca',
145: 1:      'question': 'cad',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'das',
145: 1:      'question': 'asd',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'zxy',
145: 1:      'question': 'xyz',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'aaa',
145: 1:      'question': 'aaa',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': '312',
145: 1:      'question': '123',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'fdE',
145: 1:      'question': 'dEf',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'czx',
145: 1:      'question': 'zxc',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'eqw',
145: 1:      'question': 'qwe',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'yrt',
145: 1:      'question': 'rty',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'bmn',
145: 1:      'question': 'mnb',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'nvb',
145: 1:      'question': 'vbn',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'hfg',
145: 1:      'question': 'fgh',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'kij',
145: 1:      'question': 'ijk',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'nlm',
145: 1:      'question': 'lmn',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'rpq',
145: 1:      'question': 'pqr',
145: 1:      'valid': true
145: 1:    },
145: 1:    {
145: 1:      'answer': 'ust',
145: 1:      'question': 'stu',
145: 1:      'valid': true
145: 1:    }
145: 1:  ],
145: 1:  'info': [
145: 1:    '✅f(abc) = cab',
145: 1:    '✅f(cad) = dca',
145: 1:    '✅f(asd) = das',
145: 1:    '✅f(xyz) = zxy',
145: 1:    '✅f(aaa) = aaa',
145: 1:    '✅f(123) = 312',
145: 1:    '✅f(dEf) = fdE',
145: 1:    '✅f(zxc) = czx',
145: 1:    '✅f(qwe) = eqw',
145: 1:    '✅f(rty) = yrt',
145: 1:    '✅f(mnb) = bmn',
145: 1:    '✅f(vbn) = nvb',
145: 1:    '✅f(fgh) = hfg',
145: 1:    '✅f(ijk) = kij',
145: 1:    '✅f(lmn) = nlm',
145: 1:    '✅f(pqr) = rpq',
145: 1:    '✅f(stu) = ust',
145: 1:    '❌f(wxy) = ??? != ywx'
145: 1:  ],
145: 1:  'level': 5,
145: 1:  'nextQuestion': 'wxy',
145: 1:  'questions': [
145: 1:    'abc',
145: 1:    'cad',
145: 1:    'asd',
145: 1:    'xyz',
145: 1:    'aaa',
145: 1:    '123',
145: 1:    'dEf',
145: 1:    'zxc',
145: 1:    'qwe',
145: 1:    'rty',
145: 1:    'mnb',
145: 1:    'vbn',
145: 1:    'fgh',
145: 1:    'ijk',
145: 1:    'lmn',
145: 1:    'pqr',
145: 1:    'stu',
145: 1:    'wxy'
145: 1:  ]
145: 1:}
145: 1:Scores: 4836
145: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx']')
145: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
146: 1:BoardData {
146: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
146: 1:  'expectedAnswer': '222',
146: 1:  'history': [
146: 1:    {
146: 1:      'answer': 'cab',
146: 1:      'question': 'abc',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'dca',
146: 1:      'question': 'cad',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'das',
146: 1:      'question': 'asd',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'zxy',
146: 1:      'question': 'xyz',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'aaa',
146: 1:      'question': 'aaa',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': '312',
146: 1:      'question': '123',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'fdE',
146: 1:      'question': 'dEf',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'czx',
146: 1:      'question': 'zxc',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'eqw',
146: 1:      'question': 'qwe',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'yrt',
146: 1:      'question': 'rty',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'bmn',
146: 1:      'question': 'mnb',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'nvb',
146: 1:      'question': 'vbn',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'hfg',
146: 1:      'question': 'fgh',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'kij',
146: 1:      'question': 'ijk',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'nlm',
146: 1:      'question': 'lmn',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'rpq',
146: 1:      'question': 'pqr',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'ust',
146: 1:      'question': 'stu',
146: 1:      'valid': true
146: 1:    },
146: 1:    {
146: 1:      'answer': 'ywx',
146: 1:      'question': 'wxy',
146: 1:      'valid': true
146: 1:    }
146: 1:  ],
146: 1:  'info': [
146: 1:    '✅f(abc) = cab',
146: 1:    '✅f(cad) = dca',
146: 1:    '✅f(asd) = das',
146: 1:    '✅f(xyz) = zxy',
146: 1:    '✅f(aaa) = aaa',
146: 1:    '✅f(123) = 312',
146: 1:    '✅f(dEf) = fdE',
146: 1:    '✅f(zxc) = czx',
146: 1:    '✅f(qwe) = eqw',
146: 1:    '✅f(rty) = yrt',
146: 1:    '✅f(mnb) = bmn',
146: 1:    '✅f(vbn) = nvb',
146: 1:    '✅f(fgh) = hfg',
146: 1:    '✅f(ijk) = kij',
146: 1:    '✅f(lmn) = nlm',
146: 1:    '✅f(pqr) = rpq',
146: 1:    '✅f(stu) = ust',
146: 1:    '✅f(wxy) = ywx',
146: 1:    '❌f(222) = ??? != 222'
146: 1:  ],
146: 1:  'level': 5,
146: 1:  'nextQuestion': '222',
146: 1:  'questions': [
146: 1:    'abc',
146: 1:    'cad',
146: 1:    'asd',
146: 1:    'xyz',
146: 1:    'aaa',
146: 1:    '123',
146: 1:    'dEf',
146: 1:    'zxc',
146: 1:    'qwe',
146: 1:    'rty',
146: 1:    'mnb',
146: 1:    'vbn',
146: 1:    'fgh',
146: 1:    'ijk',
146: 1:    'lmn',
146: 1:    'pqr',
146: 1:    'stu',
146: 1:    'wxy',
146: 1:    '222'
146: 1:  ]
146: 1:}
146: 1:Scores: 4841
146: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222']')
146: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
147: 1:BoardData {
147: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
147: 1:  'expectedAnswer': '978',
147: 1:  'history': [
147: 1:    {
147: 1:      'answer': 'cab',
147: 1:      'question': 'abc',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'dca',
147: 1:      'question': 'cad',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'das',
147: 1:      'question': 'asd',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'zxy',
147: 1:      'question': 'xyz',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'aaa',
147: 1:      'question': 'aaa',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '312',
147: 1:      'question': '123',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'fdE',
147: 1:      'question': 'dEf',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'czx',
147: 1:      'question': 'zxc',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'eqw',
147: 1:      'question': 'qwe',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'yrt',
147: 1:      'question': 'rty',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'bmn',
147: 1:      'question': 'mnb',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'nvb',
147: 1:      'question': 'vbn',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'hfg',
147: 1:      'question': 'fgh',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'kij',
147: 1:      'question': 'ijk',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'nlm',
147: 1:      'question': 'lmn',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'rpq',
147: 1:      'question': 'pqr',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'ust',
147: 1:      'question': 'stu',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': 'ywx',
147: 1:      'question': 'wxy',
147: 1:      'valid': true
147: 1:    },
147: 1:    {
147: 1:      'answer': '222',
147: 1:      'question': '222',
147: 1:      'valid': true
147: 1:    }
147: 1:  ],
147: 1:  'info': [
147: 1:    '✅f(abc) = cab',
147: 1:    '✅f(cad) = dca',
147: 1:    '✅f(asd) = das',
147: 1:    '✅f(xyz) = zxy',
147: 1:    '✅f(aaa) = aaa',
147: 1:    '✅f(123) = 312',
147: 1:    '✅f(dEf) = fdE',
147: 1:    '✅f(zxc) = czx',
147: 1:    '✅f(qwe) = eqw',
147: 1:    '✅f(rty) = yrt',
147: 1:    '✅f(mnb) = bmn',
147: 1:    '✅f(vbn) = nvb',
147: 1:    '✅f(fgh) = hfg',
147: 1:    '✅f(ijk) = kij',
147: 1:    '✅f(lmn) = nlm',
147: 1:    '✅f(pqr) = rpq',
147: 1:    '✅f(stu) = ust',
147: 1:    '✅f(wxy) = ywx',
147: 1:    '✅f(222) = 222',
147: 1:    '❌f(789) = ??? != 978'
147: 1:  ],
147: 1:  'level': 5,
147: 1:  'nextQuestion': '789',
147: 1:  'questions': [
147: 1:    'abc',
147: 1:    'cad',
147: 1:    'asd',
147: 1:    'xyz',
147: 1:    'aaa',
147: 1:    '123',
147: 1:    'dEf',
147: 1:    'zxc',
147: 1:    'qwe',
147: 1:    'rty',
147: 1:    'mnb',
147: 1:    'vbn',
147: 1:    'fgh',
147: 1:    'ijk',
147: 1:    'lmn',
147: 1:    'pqr',
147: 1:    'stu',
147: 1:    'wxy',
147: 1:    '222',
147: 1:    '789'
147: 1:  ]
147: 1:}
147: 1:Scores: 4846
147: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222', '978']')
147: 1:Fire Event: PassTest{complexity=12, testCount=21}
------------------------------------------
148: 1:BoardData {
148: 1:  'description': ['The order matters...\n Everything is quite simple. \nIn a string of three characters, the last character becomes the first one,\n and the first two characters shift one position to the right. \nFor example: abc=>cab...'],
148: 1:  'expectedAnswer': '009',
148: 1:  'history': [
148: 1:    {
148: 1:      'answer': 'cab',
148: 1:      'question': 'abc',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'dca',
148: 1:      'question': 'cad',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'das',
148: 1:      'question': 'asd',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'zxy',
148: 1:      'question': 'xyz',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'aaa',
148: 1:      'question': 'aaa',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '312',
148: 1:      'question': '123',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'fdE',
148: 1:      'question': 'dEf',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'czx',
148: 1:      'question': 'zxc',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'eqw',
148: 1:      'question': 'qwe',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'yrt',
148: 1:      'question': 'rty',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'bmn',
148: 1:      'question': 'mnb',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'nvb',
148: 1:      'question': 'vbn',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'hfg',
148: 1:      'question': 'fgh',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'kij',
148: 1:      'question': 'ijk',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'nlm',
148: 1:      'question': 'lmn',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'rpq',
148: 1:      'question': 'pqr',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'ust',
148: 1:      'question': 'stu',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': 'ywx',
148: 1:      'question': 'wxy',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '222',
148: 1:      'question': '222',
148: 1:      'valid': true
148: 1:    },
148: 1:    {
148: 1:      'answer': '978',
148: 1:      'question': '789',
148: 1:      'valid': true
148: 1:    }
148: 1:  ],
148: 1:  'info': [
148: 1:    '✅f(abc) = cab',
148: 1:    '✅f(cad) = dca',
148: 1:    '✅f(asd) = das',
148: 1:    '✅f(xyz) = zxy',
148: 1:    '✅f(aaa) = aaa',
148: 1:    '✅f(123) = 312',
148: 1:    '✅f(dEf) = fdE',
148: 1:    '✅f(zxc) = czx',
148: 1:    '✅f(qwe) = eqw',
148: 1:    '✅f(rty) = yrt',
148: 1:    '✅f(mnb) = bmn',
148: 1:    '✅f(vbn) = nvb',
148: 1:    '✅f(fgh) = hfg',
148: 1:    '✅f(ijk) = kij',
148: 1:    '✅f(lmn) = nlm',
148: 1:    '✅f(pqr) = rpq',
148: 1:    '✅f(stu) = ust',
148: 1:    '✅f(wxy) = ywx',
148: 1:    '✅f(222) = 222',
148: 1:    '✅f(789) = 978',
148: 1:    '❌f(090) = ??? != 009'
148: 1:  ],
148: 1:  'level': 5,
148: 1:  'nextQuestion': '090',
148: 1:  'questions': [
148: 1:    'abc',
148: 1:    'cad',
148: 1:    'asd',
148: 1:    'xyz',
148: 1:    'aaa',
148: 1:    '123',
148: 1:    'dEf',
148: 1:    'zxc',
148: 1:    'qwe',
148: 1:    'rty',
148: 1:    'mnb',
148: 1:    'vbn',
148: 1:    'fgh',
148: 1:    'ijk',
148: 1:    'lmn',
148: 1:    'pqr',
148: 1:    'stu',
148: 1:    'wxy',
148: 1:    '222',
148: 1:    '789',
148: 1:    '090'
148: 1:  ]
148: 1:}
148: 1:Scores: 4851
148: 1:Answer: message('['cab', 'dca', 'das', 'zxy', 'aaa', '312', 'fdE', 'czx', 'eqw', 'yrt', 'bmn', 'nvb', 'hfg', 'kij', 'nlm', 'rpq', 'ust', 'ywx', '222', '978', '009']')
148: 1:Fire Event: PassTest{complexity=12, testCount=21}
148: 1:Fire Event: NextAlgorithm{complexity=12, time=0}
------------------------------------------
149: 1:BoardData {
149: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
149: 1:  'history': [
149: 1:    {
149: 1:      'answer': 'cab',
149: 1:      'question': 'abc',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'dca',
149: 1:      'question': 'cad',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'das',
149: 1:      'question': 'asd',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'zxy',
149: 1:      'question': 'xyz',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'aaa',
149: 1:      'question': 'aaa',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '312',
149: 1:      'question': '123',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'fdE',
149: 1:      'question': 'dEf',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'czx',
149: 1:      'question': 'zxc',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'eqw',
149: 1:      'question': 'qwe',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'yrt',
149: 1:      'question': 'rty',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'bmn',
149: 1:      'question': 'mnb',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'nvb',
149: 1:      'question': 'vbn',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'hfg',
149: 1:      'question': 'fgh',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'kij',
149: 1:      'question': 'ijk',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'nlm',
149: 1:      'question': 'lmn',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'rpq',
149: 1:      'question': 'pqr',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'ust',
149: 1:      'question': 'stu',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': 'ywx',
149: 1:      'question': 'wxy',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '222',
149: 1:      'question': '222',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '978',
149: 1:      'question': '789',
149: 1:      'valid': true
149: 1:    },
149: 1:    {
149: 1:      'answer': '009',
149: 1:      'question': '090',
149: 1:      'valid': true
149: 1:    }
149: 1:  ],
149: 1:  'info': [
149: 1:    '✅f(abc) = cab',
149: 1:    '✅f(cad) = dca',
149: 1:    '✅f(asd) = das',
149: 1:    '✅f(xyz) = zxy',
149: 1:    '✅f(aaa) = aaa',
149: 1:    '✅f(123) = 312',
149: 1:    '✅f(dEf) = fdE',
149: 1:    '✅f(zxc) = czx',
149: 1:    '✅f(qwe) = eqw',
149: 1:    '✅f(rty) = yrt',
149: 1:    '✅f(mnb) = bmn',
149: 1:    '✅f(vbn) = nvb',
149: 1:    '✅f(fgh) = hfg',
149: 1:    '✅f(ijk) = kij',
149: 1:    '✅f(lmn) = nlm',
149: 1:    '✅f(pqr) = rpq',
149: 1:    '✅f(stu) = ust',
149: 1:    '✅f(wxy) = ywx',
149: 1:    '✅f(222) = 222',
149: 1:    '✅f(789) = 978',
149: 1:    '✅f(090) = 009'
149: 1:  ],
149: 1:  'level': 5,
149: 1:  'questions': []
149: 1:}
149: 1:Scores: 6475
149: 1:Answer: message('StartNextLevel')
149: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
150: 1:BoardData {
150: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
150: 1:  'expectedAnswer': '222',
150: 1:  'history': [],
150: 1:  'info': ['❌f(111) = ??? != 222'],
150: 1:  'level': 6,
150: 1:  'nextQuestion': '111',
150: 1:  'questions': ['111']
150: 1:}
150: 1:Scores: 6475
150: 1:Answer: message('['222']')
150: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
151: 1:BoardData {
151: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
151: 1:  'expectedAnswer': '333',
151: 1:  'history': [{
151: 1:    'answer': '222',
151: 1:    'question': '111',
151: 1:    'valid': true
151: 1:  }],
151: 1:  'info': [
151: 1:    '✅f(111) = 222',
151: 1:    '❌f(222) = ??? != 333'
151: 1:  ],
151: 1:  'level': 6,
151: 1:  'nextQuestion': '222',
151: 1:  'questions': [
151: 1:    '111',
151: 1:    '222'
151: 1:  ]
151: 1:}
151: 1:Scores: 6485
151: 1:Answer: message('['222', '333']')
151: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
152: 1:BoardData {
152: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
152: 1:  'expectedAnswer': '444',
152: 1:  'history': [
152: 1:    {
152: 1:      'answer': '222',
152: 1:      'question': '111',
152: 1:      'valid': true
152: 1:    },
152: 1:    {
152: 1:      'answer': '333',
152: 1:      'question': '222',
152: 1:      'valid': true
152: 1:    }
152: 1:  ],
152: 1:  'info': [
152: 1:    '✅f(111) = 222',
152: 1:    '✅f(222) = 333',
152: 1:    '❌f(333) = ??? != 444'
152: 1:  ],
152: 1:  'level': 6,
152: 1:  'nextQuestion': '333',
152: 1:  'questions': [
152: 1:    '111',
152: 1:    '222',
152: 1:    '333'
152: 1:  ]
152: 1:}
152: 1:Scores: 6495
152: 1:Answer: message('['222', '333', '444']')
152: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
153: 1:BoardData {
153: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
153: 1:  'expectedAnswer': '555',
153: 1:  'history': [
153: 1:    {
153: 1:      'answer': '222',
153: 1:      'question': '111',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '333',
153: 1:      'question': '222',
153: 1:      'valid': true
153: 1:    },
153: 1:    {
153: 1:      'answer': '444',
153: 1:      'question': '333',
153: 1:      'valid': true
153: 1:    }
153: 1:  ],
153: 1:  'info': [
153: 1:    '✅f(111) = 222',
153: 1:    '✅f(222) = 333',
153: 1:    '✅f(333) = 444',
153: 1:    '❌f(444) = ??? != 555'
153: 1:  ],
153: 1:  'level': 6,
153: 1:  'nextQuestion': '444',
153: 1:  'questions': [
153: 1:    '111',
153: 1:    '222',
153: 1:    '333',
153: 1:    '444'
153: 1:  ]
153: 1:}
153: 1:Scores: 6505
153: 1:Answer: message('['222', '333', '444', '555']')
153: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
154: 1:BoardData {
154: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
154: 1:  'expectedAnswer': '666',
154: 1:  'history': [
154: 1:    {
154: 1:      'answer': '222',
154: 1:      'question': '111',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '333',
154: 1:      'question': '222',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '444',
154: 1:      'question': '333',
154: 1:      'valid': true
154: 1:    },
154: 1:    {
154: 1:      'answer': '555',
154: 1:      'question': '444',
154: 1:      'valid': true
154: 1:    }
154: 1:  ],
154: 1:  'info': [
154: 1:    '✅f(111) = 222',
154: 1:    '✅f(222) = 333',
154: 1:    '✅f(333) = 444',
154: 1:    '✅f(444) = 555',
154: 1:    '❌f(555) = ??? != 666'
154: 1:  ],
154: 1:  'level': 6,
154: 1:  'nextQuestion': '555',
154: 1:  'questions': [
154: 1:    '111',
154: 1:    '222',
154: 1:    '333',
154: 1:    '444',
154: 1:    '555'
154: 1:  ]
154: 1:}
154: 1:Scores: 6515
154: 1:Answer: message('['222', '333', '444', '555', '666']')
154: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
155: 1:BoardData {
155: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
155: 1:  'expectedAnswer': '121',
155: 1:  'history': [
155: 1:    {
155: 1:      'answer': '222',
155: 1:      'question': '111',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '333',
155: 1:      'question': '222',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '444',
155: 1:      'question': '333',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '555',
155: 1:      'question': '444',
155: 1:      'valid': true
155: 1:    },
155: 1:    {
155: 1:      'answer': '666',
155: 1:      'question': '555',
155: 1:      'valid': true
155: 1:    }
155: 1:  ],
155: 1:  'info': [
155: 1:    '✅f(111) = 222',
155: 1:    '✅f(222) = 333',
155: 1:    '✅f(333) = 444',
155: 1:    '✅f(444) = 555',
155: 1:    '✅f(555) = 666',
155: 1:    '❌f(100) = ??? != 121'
155: 1:  ],
155: 1:  'level': 6,
155: 1:  'nextQuestion': '100',
155: 1:  'questions': [
155: 1:    '111',
155: 1:    '222',
155: 1:    '333',
155: 1:    '444',
155: 1:    '555',
155: 1:    '100'
155: 1:  ]
155: 1:}
155: 1:Scores: 6525
155: 1:Answer: message('['222', '333', '444', '555', '666', '121']')
155: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
156: 1:BoardData {
156: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
156: 1:  'expectedAnswer': '423',
156: 1:  'history': [
156: 1:    {
156: 1:      'answer': '222',
156: 1:      'question': '111',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '333',
156: 1:      'question': '222',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '444',
156: 1:      'question': '333',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '555',
156: 1:      'question': '444',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '666',
156: 1:      'question': '555',
156: 1:      'valid': true
156: 1:    },
156: 1:    {
156: 1:      'answer': '121',
156: 1:      'question': '100',
156: 1:      'valid': true
156: 1:    }
156: 1:  ],
156: 1:  'info': [
156: 1:    '✅f(111) = 222',
156: 1:    '✅f(222) = 333',
156: 1:    '✅f(333) = 444',
156: 1:    '✅f(444) = 555',
156: 1:    '✅f(555) = 666',
156: 1:    '✅f(100) = 121',
156: 1:    '❌f(123) = ??? != 423'
156: 1:  ],
156: 1:  'level': 6,
156: 1:  'nextQuestion': '123',
156: 1:  'questions': [
156: 1:    '111',
156: 1:    '222',
156: 1:    '333',
156: 1:    '444',
156: 1:    '555',
156: 1:    '100',
156: 1:    '123'
156: 1:  ]
156: 1:}
156: 1:Scores: 6535
156: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423']')
156: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
157: 1:BoardData {
157: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
157: 1:  'expectedAnswer': '000',
157: 1:  'history': [
157: 1:    {
157: 1:      'answer': '222',
157: 1:      'question': '111',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '333',
157: 1:      'question': '222',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '444',
157: 1:      'question': '333',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '555',
157: 1:      'question': '444',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '666',
157: 1:      'question': '555',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '121',
157: 1:      'question': '100',
157: 1:      'valid': true
157: 1:    },
157: 1:    {
157: 1:      'answer': '423',
157: 1:      'question': '123',
157: 1:      'valid': true
157: 1:    }
157: 1:  ],
157: 1:  'info': [
157: 1:    '✅f(111) = 222',
157: 1:    '✅f(222) = 333',
157: 1:    '✅f(333) = 444',
157: 1:    '✅f(444) = 555',
157: 1:    '✅f(555) = 666',
157: 1:    '✅f(100) = 121',
157: 1:    '✅f(123) = 423',
157: 1:    '❌f(999) = ??? != 000'
157: 1:  ],
157: 1:  'level': 6,
157: 1:  'nextQuestion': '999',
157: 1:  'questions': [
157: 1:    '111',
157: 1:    '222',
157: 1:    '333',
157: 1:    '444',
157: 1:    '555',
157: 1:    '100',
157: 1:    '123',
157: 1:    '999'
157: 1:  ]
157: 1:}
157: 1:Scores: 6545
157: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000']')
157: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
158: 1:BoardData {
158: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
158: 1:  'expectedAnswer': '089',
158: 1:  'history': [
158: 1:    {
158: 1:      'answer': '222',
158: 1:      'question': '111',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '333',
158: 1:      'question': '222',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '444',
158: 1:      'question': '333',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '555',
158: 1:      'question': '444',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '666',
158: 1:      'question': '555',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '121',
158: 1:      'question': '100',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '423',
158: 1:      'question': '123',
158: 1:      'valid': true
158: 1:    },
158: 1:    {
158: 1:      'answer': '000',
158: 1:      'question': '999',
158: 1:      'valid': true
158: 1:    }
158: 1:  ],
158: 1:  'info': [
158: 1:    '✅f(111) = 222',
158: 1:    '✅f(222) = 333',
158: 1:    '✅f(333) = 444',
158: 1:    '✅f(444) = 555',
158: 1:    '✅f(555) = 666',
158: 1:    '✅f(100) = 121',
158: 1:    '✅f(123) = 423',
158: 1:    '✅f(999) = 000',
158: 1:    '❌f(789) = ??? != 089'
158: 1:  ],
158: 1:  'level': 6,
158: 1:  'nextQuestion': '789',
158: 1:  'questions': [
158: 1:    '111',
158: 1:    '222',
158: 1:    '333',
158: 1:    '444',
158: 1:    '555',
158: 1:    '100',
158: 1:    '123',
158: 1:    '999',
158: 1:    '789'
158: 1:  ]
158: 1:}
158: 1:Scores: 6555
158: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089']')
158: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
159: 1:BoardData {
159: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
159: 1:  'expectedAnswer': '111',
159: 1:  'history': [
159: 1:    {
159: 1:      'answer': '222',
159: 1:      'question': '111',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '333',
159: 1:      'question': '222',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '444',
159: 1:      'question': '333',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '555',
159: 1:      'question': '444',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '666',
159: 1:      'question': '555',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '121',
159: 1:      'question': '100',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '423',
159: 1:      'question': '123',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '000',
159: 1:      'question': '999',
159: 1:      'valid': true
159: 1:    },
159: 1:    {
159: 1:      'answer': '089',
159: 1:      'question': '789',
159: 1:      'valid': true
159: 1:    }
159: 1:  ],
159: 1:  'info': [
159: 1:    '✅f(111) = 222',
159: 1:    '✅f(222) = 333',
159: 1:    '✅f(333) = 444',
159: 1:    '✅f(444) = 555',
159: 1:    '✅f(555) = 666',
159: 1:    '✅f(100) = 121',
159: 1:    '✅f(123) = 423',
159: 1:    '✅f(999) = 000',
159: 1:    '✅f(789) = 089',
159: 1:    '❌f(000) = ??? != 111'
159: 1:  ],
159: 1:  'level': 6,
159: 1:  'nextQuestion': '000',
159: 1:  'questions': [
159: 1:    '111',
159: 1:    '222',
159: 1:    '333',
159: 1:    '444',
159: 1:    '555',
159: 1:    '100',
159: 1:    '123',
159: 1:    '999',
159: 1:    '789',
159: 1:    '000'
159: 1:  ]
159: 1:}
159: 1:Scores: 6565
159: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111']')
159: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
160: 1:BoardData {
160: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
160: 1:  'expectedAnswer': '001',
160: 1:  'history': [
160: 1:    {
160: 1:      'answer': '222',
160: 1:      'question': '111',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '333',
160: 1:      'question': '222',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '444',
160: 1:      'question': '333',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '555',
160: 1:      'question': '444',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '666',
160: 1:      'question': '555',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '121',
160: 1:      'question': '100',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '423',
160: 1:      'question': '123',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '000',
160: 1:      'question': '999',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '089',
160: 1:      'question': '789',
160: 1:      'valid': true
160: 1:    },
160: 1:    {
160: 1:      'answer': '111',
160: 1:      'question': '000',
160: 1:      'valid': true
160: 1:    }
160: 1:  ],
160: 1:  'info': [
160: 1:    '✅f(111) = 222',
160: 1:    '✅f(222) = 333',
160: 1:    '✅f(333) = 444',
160: 1:    '✅f(444) = 555',
160: 1:    '✅f(555) = 666',
160: 1:    '✅f(100) = 121',
160: 1:    '✅f(123) = 423',
160: 1:    '✅f(999) = 000',
160: 1:    '✅f(789) = 089',
160: 1:    '✅f(000) = 111',
160: 1:    '❌f(909) = ??? != 001'
160: 1:  ],
160: 1:  'level': 6,
160: 1:  'nextQuestion': '909',
160: 1:  'questions': [
160: 1:    '111',
160: 1:    '222',
160: 1:    '333',
160: 1:    '444',
160: 1:    '555',
160: 1:    '100',
160: 1:    '123',
160: 1:    '999',
160: 1:    '789',
160: 1:    '000',
160: 1:    '909'
160: 1:  ]
160: 1:}
160: 1:Scores: 6575
160: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111', '001']')
160: 1:Fire Event: PassTest{complexity=13, testCount=12}
------------------------------------------
161: 1:BoardData {
161: 1:  'description': ['Order matters...\nYou need to work with three-digit numbers. \nSolve the algorithm for changing the number according to the given examples: \nExamples: 111=>222, 123=>423, 679=>078, 999=>000, 012=>312, 090=>110, 444=>555, 090=>110, 916=>702'],
161: 1:  'expectedAnswer': '110',
161: 1:  'history': [
161: 1:    {
161: 1:      'answer': '222',
161: 1:      'question': '111',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '333',
161: 1:      'question': '222',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '444',
161: 1:      'question': '333',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '555',
161: 1:      'question': '444',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '666',
161: 1:      'question': '555',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '121',
161: 1:      'question': '100',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '423',
161: 1:      'question': '123',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '000',
161: 1:      'question': '999',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '089',
161: 1:      'question': '789',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '111',
161: 1:      'question': '000',
161: 1:      'valid': true
161: 1:    },
161: 1:    {
161: 1:      'answer': '001',
161: 1:      'question': '909',
161: 1:      'valid': true
161: 1:    }
161: 1:  ],
161: 1:  'info': [
161: 1:    '✅f(111) = 222',
161: 1:    '✅f(222) = 333',
161: 1:    '✅f(333) = 444',
161: 1:    '✅f(444) = 555',
161: 1:    '✅f(555) = 666',
161: 1:    '✅f(100) = 121',
161: 1:    '✅f(123) = 423',
161: 1:    '✅f(999) = 000',
161: 1:    '✅f(789) = 089',
161: 1:    '✅f(000) = 111',
161: 1:    '✅f(909) = 001',
161: 1:    '❌f(090) = ??? != 110'
161: 1:  ],
161: 1:  'level': 6,
161: 1:  'nextQuestion': '090',
161: 1:  'questions': [
161: 1:    '111',
161: 1:    '222',
161: 1:    '333',
161: 1:    '444',
161: 1:    '555',
161: 1:    '100',
161: 1:    '123',
161: 1:    '999',
161: 1:    '789',
161: 1:    '000',
161: 1:    '909',
161: 1:    '090'
161: 1:  ]
161: 1:}
161: 1:Scores: 6585
161: 1:Answer: message('['222', '333', '444', '555', '666', '121', '423', '000', '089', '111', '001', '110']')
161: 1:Fire Event: PassTest{complexity=13, testCount=12}
161: 1:Fire Event: NextAlgorithm{complexity=13, time=0}
------------------------------------------
162: 1:BoardData {
162: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
162: 1:  'history': [
162: 1:    {
162: 1:      'answer': '222',
162: 1:      'question': '111',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '333',
162: 1:      'question': '222',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '444',
162: 1:      'question': '333',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '555',
162: 1:      'question': '444',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '666',
162: 1:      'question': '555',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '121',
162: 1:      'question': '100',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '423',
162: 1:      'question': '123',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '000',
162: 1:      'question': '999',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '089',
162: 1:      'question': '789',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '111',
162: 1:      'question': '000',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '001',
162: 1:      'question': '909',
162: 1:      'valid': true
162: 1:    },
162: 1:    {
162: 1:      'answer': '110',
162: 1:      'question': '090',
162: 1:      'valid': true
162: 1:    }
162: 1:  ],
162: 1:  'info': [
162: 1:    '✅f(111) = 222',
162: 1:    '✅f(222) = 333',
162: 1:    '✅f(333) = 444',
162: 1:    '✅f(444) = 555',
162: 1:    '✅f(555) = 666',
162: 1:    '✅f(100) = 121',
162: 1:    '✅f(123) = 423',
162: 1:    '✅f(999) = 000',
162: 1:    '✅f(789) = 089',
162: 1:    '✅f(000) = 111',
162: 1:    '✅f(909) = 001',
162: 1:    '✅f(090) = 110'
162: 1:  ],
162: 1:  'level': 6,
162: 1:  'questions': []
162: 1:}
162: 1:Scores: 8349
162: 1:Answer: message('StartNextLevel')
162: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
163: 1:BoardData {
163: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
163: 1:  'expectedAnswer': '101',
163: 1:  'history': [],
163: 1:  'info': ['❌f(1) = ??? != 101'],
163: 1:  'level': 7,
163: 1:  'nextQuestion': '1',
163: 1:  'questions': ['1']
163: 1:}
163: 1:Scores: 8349
163: 1:Answer: message('['101']')
163: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
164: 1:BoardData {
164: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
164: 1:  'expectedAnswer': '112',
164: 1:  'history': [{
164: 1:    'answer': '101',
164: 1:    'question': '1',
164: 1:    'valid': true
164: 1:  }],
164: 1:  'info': [
164: 1:    '✅f(1) = 101',
164: 1:    '❌f(2) = ??? != 112'
164: 1:  ],
164: 1:  'level': 7,
164: 1:  'nextQuestion': '2',
164: 1:  'questions': [
164: 1:    '1',
164: 1:    '2'
164: 1:  ]
164: 1:}
164: 1:Scores: 8355
164: 1:Answer: message('['101', '112']')
164: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
165: 1:BoardData {
165: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
165: 1:  'expectedAnswer': '131',
165: 1:  'history': [
165: 1:    {
165: 1:      'answer': '101',
165: 1:      'question': '1',
165: 1:      'valid': true
165: 1:    },
165: 1:    {
165: 1:      'answer': '112',
165: 1:      'question': '2',
165: 1:      'valid': true
165: 1:    }
165: 1:  ],
165: 1:  'info': [
165: 1:    '✅f(1) = 101',
165: 1:    '✅f(2) = 112',
165: 1:    '❌f(3) = ??? != 131'
165: 1:  ],
165: 1:  'level': 7,
165: 1:  'nextQuestion': '3',
165: 1:  'questions': [
165: 1:    '1',
165: 1:    '2',
165: 1:    '3'
165: 1:  ]
165: 1:}
165: 1:Scores: 8361
165: 1:Answer: message('['101', '112', '131']')
165: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
166: 1:BoardData {
166: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
166: 1:  'expectedAnswer': '415',
166: 1:  'history': [
166: 1:    {
166: 1:      'answer': '101',
166: 1:      'question': '1',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '112',
166: 1:      'question': '2',
166: 1:      'valid': true
166: 1:    },
166: 1:    {
166: 1:      'answer': '131',
166: 1:      'question': '3',
166: 1:      'valid': true
166: 1:    }
166: 1:  ],
166: 1:  'info': [
166: 1:    '✅f(1) = 101',
166: 1:    '✅f(2) = 112',
166: 1:    '✅f(3) = 131',
166: 1:    '❌f(4) = ??? != 415'
166: 1:  ],
166: 1:  'level': 7,
166: 1:  'nextQuestion': '4',
166: 1:  'questions': [
166: 1:    '1',
166: 1:    '2',
166: 1:    '3',
166: 1:    '4'
166: 1:  ]
166: 1:}
166: 1:Scores: 8367
166: 1:Answer: message('['101', '112', '131', '415']')
166: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
167: 1:BoardData {
167: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
167: 1:  'expectedAnswer': '161',
167: 1:  'history': [
167: 1:    {
167: 1:      'answer': '101',
167: 1:      'question': '1',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '112',
167: 1:      'question': '2',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '131',
167: 1:      'question': '3',
167: 1:      'valid': true
167: 1:    },
167: 1:    {
167: 1:      'answer': '415',
167: 1:      'question': '4',
167: 1:      'valid': true
167: 1:    }
167: 1:  ],
167: 1:  'info': [
167: 1:    '✅f(1) = 101',
167: 1:    '✅f(2) = 112',
167: 1:    '✅f(3) = 131',
167: 1:    '✅f(4) = 415',
167: 1:    '❌f(5) = ??? != 161'
167: 1:  ],
167: 1:  'level': 7,
167: 1:  'nextQuestion': '5',
167: 1:  'questions': [
167: 1:    '1',
167: 1:    '2',
167: 1:    '3',
167: 1:    '4',
167: 1:    '5'
167: 1:  ]
167: 1:}
167: 1:Scores: 8373
167: 1:Answer: message('['101', '112', '131', '415', '161']')
167: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
168: 1:BoardData {
168: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
168: 1:  'expectedAnswer': '718',
168: 1:  'history': [
168: 1:    {
168: 1:      'answer': '101',
168: 1:      'question': '1',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '112',
168: 1:      'question': '2',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '131',
168: 1:      'question': '3',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '415',
168: 1:      'question': '4',
168: 1:      'valid': true
168: 1:    },
168: 1:    {
168: 1:      'answer': '161',
168: 1:      'question': '5',
168: 1:      'valid': true
168: 1:    }
168: 1:  ],
168: 1:  'info': [
168: 1:    '✅f(1) = 101',
168: 1:    '✅f(2) = 112',
168: 1:    '✅f(3) = 131',
168: 1:    '✅f(4) = 415',
168: 1:    '✅f(5) = 161',
168: 1:    '❌f(6) = ??? != 718'
168: 1:  ],
168: 1:  'level': 7,
168: 1:  'nextQuestion': '6',
168: 1:  'questions': [
168: 1:    '1',
168: 1:    '2',
168: 1:    '3',
168: 1:    '4',
168: 1:    '5',
168: 1:    '6'
168: 1:  ]
168: 1:}
168: 1:Scores: 8379
168: 1:Answer: message('['101', '112', '131', '415', '161', '718']')
168: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
169: 1:BoardData {
169: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
169: 1:  'expectedAnswer': '192',
169: 1:  'history': [
169: 1:    {
169: 1:      'answer': '101',
169: 1:      'question': '1',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '112',
169: 1:      'question': '2',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '131',
169: 1:      'question': '3',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '415',
169: 1:      'question': '4',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '161',
169: 1:      'question': '5',
169: 1:      'valid': true
169: 1:    },
169: 1:    {
169: 1:      'answer': '718',
169: 1:      'question': '6',
169: 1:      'valid': true
169: 1:    }
169: 1:  ],
169: 1:  'info': [
169: 1:    '✅f(1) = 101',
169: 1:    '✅f(2) = 112',
169: 1:    '✅f(3) = 131',
169: 1:    '✅f(4) = 415',
169: 1:    '✅f(5) = 161',
169: 1:    '✅f(6) = 718',
169: 1:    '❌f(7) = ??? != 192'
169: 1:  ],
169: 1:  'level': 7,
169: 1:  'nextQuestion': '7',
169: 1:  'questions': [
169: 1:    '1',
169: 1:    '2',
169: 1:    '3',
169: 1:    '4',
169: 1:    '5',
169: 1:    '6',
169: 1:    '7'
169: 1:  ]
169: 1:}
169: 1:Scores: 8385
169: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192']')
169: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
170: 1:BoardData {
170: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
170: 1:  'expectedAnswer': '021',
170: 1:  'history': [
170: 1:    {
170: 1:      'answer': '101',
170: 1:      'question': '1',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '112',
170: 1:      'question': '2',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '131',
170: 1:      'question': '3',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '415',
170: 1:      'question': '4',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '161',
170: 1:      'question': '5',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '718',
170: 1:      'question': '6',
170: 1:      'valid': true
170: 1:    },
170: 1:    {
170: 1:      'answer': '192',
170: 1:      'question': '7',
170: 1:      'valid': true
170: 1:    }
170: 1:  ],
170: 1:  'info': [
170: 1:    '✅f(1) = 101',
170: 1:    '✅f(2) = 112',
170: 1:    '✅f(3) = 131',
170: 1:    '✅f(4) = 415',
170: 1:    '✅f(5) = 161',
170: 1:    '✅f(6) = 718',
170: 1:    '✅f(7) = 192',
170: 1:    '❌f(8) = ??? != 021'
170: 1:  ],
170: 1:  'level': 7,
170: 1:  'nextQuestion': '8',
170: 1:  'questions': [
170: 1:    '1',
170: 1:    '2',
170: 1:    '3',
170: 1:    '4',
170: 1:    '5',
170: 1:    '6',
170: 1:    '7',
170: 1:    '8'
170: 1:  ]
170: 1:}
170: 1:Scores: 8391
170: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021']')
170: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
171: 1:BoardData {
171: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
171: 1:  'expectedAnswer': '222',
171: 1:  'history': [
171: 1:    {
171: 1:      'answer': '101',
171: 1:      'question': '1',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '112',
171: 1:      'question': '2',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '131',
171: 1:      'question': '3',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '415',
171: 1:      'question': '4',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '161',
171: 1:      'question': '5',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '718',
171: 1:      'question': '6',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '192',
171: 1:      'question': '7',
171: 1:      'valid': true
171: 1:    },
171: 1:    {
171: 1:      'answer': '021',
171: 1:      'question': '8',
171: 1:      'valid': true
171: 1:    }
171: 1:  ],
171: 1:  'info': [
171: 1:    '✅f(1) = 101',
171: 1:    '✅f(2) = 112',
171: 1:    '✅f(3) = 131',
171: 1:    '✅f(4) = 415',
171: 1:    '✅f(5) = 161',
171: 1:    '✅f(6) = 718',
171: 1:    '✅f(7) = 192',
171: 1:    '✅f(8) = 021',
171: 1:    '❌f(9) = ??? != 222'
171: 1:  ],
171: 1:  'level': 7,
171: 1:  'nextQuestion': '9',
171: 1:  'questions': [
171: 1:    '1',
171: 1:    '2',
171: 1:    '3',
171: 1:    '4',
171: 1:    '5',
171: 1:    '6',
171: 1:    '7',
171: 1:    '8',
171: 1:    '9'
171: 1:  ]
171: 1:}
171: 1:Scores: 8397
171: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222']')
171: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
172: 1:BoardData {
172: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
172: 1:  'expectedAnswer': '324',
172: 1:  'history': [
172: 1:    {
172: 1:      'answer': '101',
172: 1:      'question': '1',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '112',
172: 1:      'question': '2',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '131',
172: 1:      'question': '3',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '415',
172: 1:      'question': '4',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '161',
172: 1:      'question': '5',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '718',
172: 1:      'question': '6',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '192',
172: 1:      'question': '7',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '021',
172: 1:      'question': '8',
172: 1:      'valid': true
172: 1:    },
172: 1:    {
172: 1:      'answer': '222',
172: 1:      'question': '9',
172: 1:      'valid': true
172: 1:    }
172: 1:  ],
172: 1:  'info': [
172: 1:    '✅f(1) = 101',
172: 1:    '✅f(2) = 112',
172: 1:    '✅f(3) = 131',
172: 1:    '✅f(4) = 415',
172: 1:    '✅f(5) = 161',
172: 1:    '✅f(6) = 718',
172: 1:    '✅f(7) = 192',
172: 1:    '✅f(8) = 021',
172: 1:    '✅f(9) = 222',
172: 1:    '❌f(10) = ??? != 324'
172: 1:  ],
172: 1:  'level': 7,
172: 1:  'nextQuestion': '10',
172: 1:  'questions': [
172: 1:    '1',
172: 1:    '2',
172: 1:    '3',
172: 1:    '4',
172: 1:    '5',
172: 1:    '6',
172: 1:    '7',
172: 1:    '8',
172: 1:    '9',
172: 1:    '10'
172: 1:  ]
172: 1:}
172: 1:Scores: 8403
172: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324']')
172: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
173: 1:BoardData {
173: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
173: 1:  'expectedAnswer': '252',
173: 1:  'history': [
173: 1:    {
173: 1:      'answer': '101',
173: 1:      'question': '1',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '112',
173: 1:      'question': '2',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '131',
173: 1:      'question': '3',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '415',
173: 1:      'question': '4',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '161',
173: 1:      'question': '5',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '718',
173: 1:      'question': '6',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '192',
173: 1:      'question': '7',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '021',
173: 1:      'question': '8',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '222',
173: 1:      'question': '9',
173: 1:      'valid': true
173: 1:    },
173: 1:    {
173: 1:      'answer': '324',
173: 1:      'question': '10',
173: 1:      'valid': true
173: 1:    }
173: 1:  ],
173: 1:  'info': [
173: 1:    '✅f(1) = 101',
173: 1:    '✅f(2) = 112',
173: 1:    '✅f(3) = 131',
173: 1:    '✅f(4) = 415',
173: 1:    '✅f(5) = 161',
173: 1:    '✅f(6) = 718',
173: 1:    '✅f(7) = 192',
173: 1:    '✅f(8) = 021',
173: 1:    '✅f(9) = 222',
173: 1:    '✅f(10) = 324',
173: 1:    '❌f(11) = ??? != 252'
173: 1:  ],
173: 1:  'level': 7,
173: 1:  'nextQuestion': '11',
173: 1:  'questions': [
173: 1:    '1',
173: 1:    '2',
173: 1:    '3',
173: 1:    '4',
173: 1:    '5',
173: 1:    '6',
173: 1:    '7',
173: 1:    '8',
173: 1:    '9',
173: 1:    '10',
173: 1:    '11'
173: 1:  ]
173: 1:}
173: 1:Scores: 8409
173: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252']')
173: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
174: 1:BoardData {
174: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
174: 1:  'expectedAnswer': '627',
174: 1:  'history': [
174: 1:    {
174: 1:      'answer': '101',
174: 1:      'question': '1',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '112',
174: 1:      'question': '2',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '131',
174: 1:      'question': '3',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '415',
174: 1:      'question': '4',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '161',
174: 1:      'question': '5',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '718',
174: 1:      'question': '6',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '192',
174: 1:      'question': '7',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '021',
174: 1:      'question': '8',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '222',
174: 1:      'question': '9',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '324',
174: 1:      'question': '10',
174: 1:      'valid': true
174: 1:    },
174: 1:    {
174: 1:      'answer': '252',
174: 1:      'question': '11',
174: 1:      'valid': true
174: 1:    }
174: 1:  ],
174: 1:  'info': [
174: 1:    '✅f(1) = 101',
174: 1:    '✅f(2) = 112',
174: 1:    '✅f(3) = 131',
174: 1:    '✅f(4) = 415',
174: 1:    '✅f(5) = 161',
174: 1:    '✅f(6) = 718',
174: 1:    '✅f(7) = 192',
174: 1:    '✅f(8) = 021',
174: 1:    '✅f(9) = 222',
174: 1:    '✅f(10) = 324',
174: 1:    '✅f(11) = 252',
174: 1:    '❌f(12) = ??? != 627'
174: 1:  ],
174: 1:  'level': 7,
174: 1:  'nextQuestion': '12',
174: 1:  'questions': [
174: 1:    '1',
174: 1:    '2',
174: 1:    '3',
174: 1:    '4',
174: 1:    '5',
174: 1:    '6',
174: 1:    '7',
174: 1:    '8',
174: 1:    '9',
174: 1:    '10',
174: 1:    '11',
174: 1:    '12'
174: 1:  ]
174: 1:}
174: 1:Scores: 8415
174: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627']')
174: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
175: 1:BoardData {
175: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
175: 1:  'expectedAnswer': '282',
175: 1:  'history': [
175: 1:    {
175: 1:      'answer': '101',
175: 1:      'question': '1',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '112',
175: 1:      'question': '2',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '131',
175: 1:      'question': '3',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '415',
175: 1:      'question': '4',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '161',
175: 1:      'question': '5',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '718',
175: 1:      'question': '6',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '192',
175: 1:      'question': '7',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '021',
175: 1:      'question': '8',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '222',
175: 1:      'question': '9',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '324',
175: 1:      'question': '10',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '252',
175: 1:      'question': '11',
175: 1:      'valid': true
175: 1:    },
175: 1:    {
175: 1:      'answer': '627',
175: 1:      'question': '12',
175: 1:      'valid': true
175: 1:    }
175: 1:  ],
175: 1:  'info': [
175: 1:    '✅f(1) = 101',
175: 1:    '✅f(2) = 112',
175: 1:    '✅f(3) = 131',
175: 1:    '✅f(4) = 415',
175: 1:    '✅f(5) = 161',
175: 1:    '✅f(6) = 718',
175: 1:    '✅f(7) = 192',
175: 1:    '✅f(8) = 021',
175: 1:    '✅f(9) = 222',
175: 1:    '✅f(10) = 324',
175: 1:    '✅f(11) = 252',
175: 1:    '✅f(12) = 627',
175: 1:    '❌f(13) = ??? != 282'
175: 1:  ],
175: 1:  'level': 7,
175: 1:  'nextQuestion': '13',
175: 1:  'questions': [
175: 1:    '1',
175: 1:    '2',
175: 1:    '3',
175: 1:    '4',
175: 1:    '5',
175: 1:    '6',
175: 1:    '7',
175: 1:    '8',
175: 1:    '9',
175: 1:    '10',
175: 1:    '11',
175: 1:    '12',
175: 1:    '13'
175: 1:  ]
175: 1:}
175: 1:Scores: 8421
175: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282']')
175: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
176: 1:BoardData {
176: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
176: 1:  'expectedAnswer': '930',
176: 1:  'history': [
176: 1:    {
176: 1:      'answer': '101',
176: 1:      'question': '1',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '112',
176: 1:      'question': '2',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '131',
176: 1:      'question': '3',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '415',
176: 1:      'question': '4',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '161',
176: 1:      'question': '5',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '718',
176: 1:      'question': '6',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '192',
176: 1:      'question': '7',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '021',
176: 1:      'question': '8',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '222',
176: 1:      'question': '9',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '324',
176: 1:      'question': '10',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '252',
176: 1:      'question': '11',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '627',
176: 1:      'question': '12',
176: 1:      'valid': true
176: 1:    },
176: 1:    {
176: 1:      'answer': '282',
176: 1:      'question': '13',
176: 1:      'valid': true
176: 1:    }
176: 1:  ],
176: 1:  'info': [
176: 1:    '✅f(1) = 101',
176: 1:    '✅f(2) = 112',
176: 1:    '✅f(3) = 131',
176: 1:    '✅f(4) = 415',
176: 1:    '✅f(5) = 161',
176: 1:    '✅f(6) = 718',
176: 1:    '✅f(7) = 192',
176: 1:    '✅f(8) = 021',
176: 1:    '✅f(9) = 222',
176: 1:    '✅f(10) = 324',
176: 1:    '✅f(11) = 252',
176: 1:    '✅f(12) = 627',
176: 1:    '✅f(13) = 282',
176: 1:    '❌f(14) = ??? != 930'
176: 1:  ],
176: 1:  'level': 7,
176: 1:  'nextQuestion': '14',
176: 1:  'questions': [
176: 1:    '1',
176: 1:    '2',
176: 1:    '3',
176: 1:    '4',
176: 1:    '5',
176: 1:    '6',
176: 1:    '7',
176: 1:    '8',
176: 1:    '9',
176: 1:    '10',
176: 1:    '11',
176: 1:    '12',
176: 1:    '13',
176: 1:    '14'
176: 1:  ]
176: 1:}
176: 1:Scores: 8427
176: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930']')
176: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
177: 1:BoardData {
177: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
177: 1:  'expectedAnswer': '313',
177: 1:  'history': [
177: 1:    {
177: 1:      'answer': '101',
177: 1:      'question': '1',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '112',
177: 1:      'question': '2',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '131',
177: 1:      'question': '3',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '415',
177: 1:      'question': '4',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '161',
177: 1:      'question': '5',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '718',
177: 1:      'question': '6',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '192',
177: 1:      'question': '7',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '021',
177: 1:      'question': '8',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '222',
177: 1:      'question': '9',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '324',
177: 1:      'question': '10',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '252',
177: 1:      'question': '11',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '627',
177: 1:      'question': '12',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '282',
177: 1:      'question': '13',
177: 1:      'valid': true
177: 1:    },
177: 1:    {
177: 1:      'answer': '930',
177: 1:      'question': '14',
177: 1:      'valid': true
177: 1:    }
177: 1:  ],
177: 1:  'info': [
177: 1:    '✅f(1) = 101',
177: 1:    '✅f(2) = 112',
177: 1:    '✅f(3) = 131',
177: 1:    '✅f(4) = 415',
177: 1:    '✅f(5) = 161',
177: 1:    '✅f(6) = 718',
177: 1:    '✅f(7) = 192',
177: 1:    '✅f(8) = 021',
177: 1:    '✅f(9) = 222',
177: 1:    '✅f(10) = 324',
177: 1:    '✅f(11) = 252',
177: 1:    '✅f(12) = 627',
177: 1:    '✅f(13) = 282',
177: 1:    '✅f(14) = 930',
177: 1:    '❌f(15) = ??? != 313'
177: 1:  ],
177: 1:  'level': 7,
177: 1:  'nextQuestion': '15',
177: 1:  'questions': [
177: 1:    '1',
177: 1:    '2',
177: 1:    '3',
177: 1:    '4',
177: 1:    '5',
177: 1:    '6',
177: 1:    '7',
177: 1:    '8',
177: 1:    '9',
177: 1:    '10',
177: 1:    '11',
177: 1:    '12',
177: 1:    '13',
177: 1:    '14',
177: 1:    '15'
177: 1:  ]
177: 1:}
177: 1:Scores: 8433
177: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313']')
177: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
178: 1:BoardData {
178: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
178: 1:  'expectedAnswer': '233',
178: 1:  'history': [
178: 1:    {
178: 1:      'answer': '101',
178: 1:      'question': '1',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '112',
178: 1:      'question': '2',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '131',
178: 1:      'question': '3',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '415',
178: 1:      'question': '4',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '161',
178: 1:      'question': '5',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '718',
178: 1:      'question': '6',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '192',
178: 1:      'question': '7',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '021',
178: 1:      'question': '8',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '222',
178: 1:      'question': '9',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '324',
178: 1:      'question': '10',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '252',
178: 1:      'question': '11',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '627',
178: 1:      'question': '12',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '282',
178: 1:      'question': '13',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '930',
178: 1:      'question': '14',
178: 1:      'valid': true
178: 1:    },
178: 1:    {
178: 1:      'answer': '313',
178: 1:      'question': '15',
178: 1:      'valid': true
178: 1:    }
178: 1:  ],
178: 1:  'info': [
178: 1:    '✅f(1) = 101',
178: 1:    '✅f(2) = 112',
178: 1:    '✅f(3) = 131',
178: 1:    '✅f(4) = 415',
178: 1:    '✅f(5) = 161',
178: 1:    '✅f(6) = 718',
178: 1:    '✅f(7) = 192',
178: 1:    '✅f(8) = 021',
178: 1:    '✅f(9) = 222',
178: 1:    '✅f(10) = 324',
178: 1:    '✅f(11) = 252',
178: 1:    '✅f(12) = 627',
178: 1:    '✅f(13) = 282',
178: 1:    '✅f(14) = 930',
178: 1:    '✅f(15) = 313',
178: 1:    '❌f(16) = ??? != 233'
178: 1:  ],
178: 1:  'level': 7,
178: 1:  'nextQuestion': '16',
178: 1:  'questions': [
178: 1:    '1',
178: 1:    '2',
178: 1:    '3',
178: 1:    '4',
178: 1:    '5',
178: 1:    '6',
178: 1:    '7',
178: 1:    '8',
178: 1:    '9',
178: 1:    '10',
178: 1:    '11',
178: 1:    '12',
178: 1:    '13',
178: 1:    '14',
178: 1:    '15',
178: 1:    '16'
178: 1:  ]
178: 1:}
178: 1:Scores: 8439
178: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233']')
178: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
179: 1:BoardData {
179: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
179: 1:  'expectedAnswer': '343',
179: 1:  'history': [
179: 1:    {
179: 1:      'answer': '101',
179: 1:      'question': '1',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '112',
179: 1:      'question': '2',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '131',
179: 1:      'question': '3',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '415',
179: 1:      'question': '4',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '161',
179: 1:      'question': '5',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '718',
179: 1:      'question': '6',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '192',
179: 1:      'question': '7',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '021',
179: 1:      'question': '8',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '222',
179: 1:      'question': '9',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '324',
179: 1:      'question': '10',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '252',
179: 1:      'question': '11',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '627',
179: 1:      'question': '12',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '282',
179: 1:      'question': '13',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '930',
179: 1:      'question': '14',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '313',
179: 1:      'question': '15',
179: 1:      'valid': true
179: 1:    },
179: 1:    {
179: 1:      'answer': '233',
179: 1:      'question': '16',
179: 1:      'valid': true
179: 1:    }
179: 1:  ],
179: 1:  'info': [
179: 1:    '✅f(1) = 101',
179: 1:    '✅f(2) = 112',
179: 1:    '✅f(3) = 131',
179: 1:    '✅f(4) = 415',
179: 1:    '✅f(5) = 161',
179: 1:    '✅f(6) = 718',
179: 1:    '✅f(7) = 192',
179: 1:    '✅f(8) = 021',
179: 1:    '✅f(9) = 222',
179: 1:    '✅f(10) = 324',
179: 1:    '✅f(11) = 252',
179: 1:    '✅f(12) = 627',
179: 1:    '✅f(13) = 282',
179: 1:    '✅f(14) = 930',
179: 1:    '✅f(15) = 313',
179: 1:    '✅f(16) = 233',
179: 1:    '❌f(17) = ??? != 343'
179: 1:  ],
179: 1:  'level': 7,
179: 1:  'nextQuestion': '17',
179: 1:  'questions': [
179: 1:    '1',
179: 1:    '2',
179: 1:    '3',
179: 1:    '4',
179: 1:    '5',
179: 1:    '6',
179: 1:    '7',
179: 1:    '8',
179: 1:    '9',
179: 1:    '10',
179: 1:    '11',
179: 1:    '12',
179: 1:    '13',
179: 1:    '14',
179: 1:    '15',
179: 1:    '16',
179: 1:    '17'
179: 1:  ]
179: 1:}
179: 1:Scores: 8445
179: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343']')
179: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
180: 1:BoardData {
180: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
180: 1:  'expectedAnswer': '536',
180: 1:  'history': [
180: 1:    {
180: 1:      'answer': '101',
180: 1:      'question': '1',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '112',
180: 1:      'question': '2',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '131',
180: 1:      'question': '3',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '415',
180: 1:      'question': '4',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '161',
180: 1:      'question': '5',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '718',
180: 1:      'question': '6',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '192',
180: 1:      'question': '7',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '021',
180: 1:      'question': '8',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '222',
180: 1:      'question': '9',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '324',
180: 1:      'question': '10',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '252',
180: 1:      'question': '11',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '627',
180: 1:      'question': '12',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '282',
180: 1:      'question': '13',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '930',
180: 1:      'question': '14',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '313',
180: 1:      'question': '15',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '233',
180: 1:      'question': '16',
180: 1:      'valid': true
180: 1:    },
180: 1:    {
180: 1:      'answer': '343',
180: 1:      'question': '17',
180: 1:      'valid': true
180: 1:    }
180: 1:  ],
180: 1:  'info': [
180: 1:    '✅f(1) = 101',
180: 1:    '✅f(2) = 112',
180: 1:    '✅f(3) = 131',
180: 1:    '✅f(4) = 415',
180: 1:    '✅f(5) = 161',
180: 1:    '✅f(6) = 718',
180: 1:    '✅f(7) = 192',
180: 1:    '✅f(8) = 021',
180: 1:    '✅f(9) = 222',
180: 1:    '✅f(10) = 324',
180: 1:    '✅f(11) = 252',
180: 1:    '✅f(12) = 627',
180: 1:    '✅f(13) = 282',
180: 1:    '✅f(14) = 930',
180: 1:    '✅f(15) = 313',
180: 1:    '✅f(16) = 233',
180: 1:    '✅f(17) = 343',
180: 1:    '❌f(18) = ??? != 536'
180: 1:  ],
180: 1:  'level': 7,
180: 1:  'nextQuestion': '18',
180: 1:  'questions': [
180: 1:    '1',
180: 1:    '2',
180: 1:    '3',
180: 1:    '4',
180: 1:    '5',
180: 1:    '6',
180: 1:    '7',
180: 1:    '8',
180: 1:    '9',
180: 1:    '10',
180: 1:    '11',
180: 1:    '12',
180: 1:    '13',
180: 1:    '14',
180: 1:    '15',
180: 1:    '16',
180: 1:    '17',
180: 1:    '18'
180: 1:  ]
180: 1:}
180: 1:Scores: 8451
180: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536']')
180: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
181: 1:BoardData {
181: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
181: 1:  'expectedAnswer': '373',
181: 1:  'history': [
181: 1:    {
181: 1:      'answer': '101',
181: 1:      'question': '1',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '112',
181: 1:      'question': '2',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '131',
181: 1:      'question': '3',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '415',
181: 1:      'question': '4',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '161',
181: 1:      'question': '5',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '718',
181: 1:      'question': '6',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '192',
181: 1:      'question': '7',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '021',
181: 1:      'question': '8',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '222',
181: 1:      'question': '9',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '324',
181: 1:      'question': '10',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '252',
181: 1:      'question': '11',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '627',
181: 1:      'question': '12',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '282',
181: 1:      'question': '13',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '930',
181: 1:      'question': '14',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '313',
181: 1:      'question': '15',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '233',
181: 1:      'question': '16',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '343',
181: 1:      'question': '17',
181: 1:      'valid': true
181: 1:    },
181: 1:    {
181: 1:      'answer': '536',
181: 1:      'question': '18',
181: 1:      'valid': true
181: 1:    }
181: 1:  ],
181: 1:  'info': [
181: 1:    '✅f(1) = 101',
181: 1:    '✅f(2) = 112',
181: 1:    '✅f(3) = 131',
181: 1:    '✅f(4) = 415',
181: 1:    '✅f(5) = 161',
181: 1:    '✅f(6) = 718',
181: 1:    '✅f(7) = 192',
181: 1:    '✅f(8) = 021',
181: 1:    '✅f(9) = 222',
181: 1:    '✅f(10) = 324',
181: 1:    '✅f(11) = 252',
181: 1:    '✅f(12) = 627',
181: 1:    '✅f(13) = 282',
181: 1:    '✅f(14) = 930',
181: 1:    '✅f(15) = 313',
181: 1:    '✅f(16) = 233',
181: 1:    '✅f(17) = 343',
181: 1:    '✅f(18) = 536',
181: 1:    '❌f(19) = ??? != 373'
181: 1:  ],
181: 1:  'level': 7,
181: 1:  'nextQuestion': '19',
181: 1:  'questions': [
181: 1:    '1',
181: 1:    '2',
181: 1:    '3',
181: 1:    '4',
181: 1:    '5',
181: 1:    '6',
181: 1:    '7',
181: 1:    '8',
181: 1:    '9',
181: 1:    '10',
181: 1:    '11',
181: 1:    '12',
181: 1:    '13',
181: 1:    '14',
181: 1:    '15',
181: 1:    '16',
181: 1:    '17',
181: 1:    '18',
181: 1:    '19'
181: 1:  ]
181: 1:}
181: 1:Scores: 8457
181: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373']')
181: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
182: 1:BoardData {
182: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
182: 1:  'expectedAnswer': '839',
182: 1:  'history': [
182: 1:    {
182: 1:      'answer': '101',
182: 1:      'question': '1',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '112',
182: 1:      'question': '2',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '131',
182: 1:      'question': '3',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '415',
182: 1:      'question': '4',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '161',
182: 1:      'question': '5',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '718',
182: 1:      'question': '6',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '192',
182: 1:      'question': '7',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '021',
182: 1:      'question': '8',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '222',
182: 1:      'question': '9',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '324',
182: 1:      'question': '10',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '252',
182: 1:      'question': '11',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '627',
182: 1:      'question': '12',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '282',
182: 1:      'question': '13',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '930',
182: 1:      'question': '14',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '313',
182: 1:      'question': '15',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '233',
182: 1:      'question': '16',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '343',
182: 1:      'question': '17',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '536',
182: 1:      'question': '18',
182: 1:      'valid': true
182: 1:    },
182: 1:    {
182: 1:      'answer': '373',
182: 1:      'question': '19',
182: 1:      'valid': true
182: 1:    }
182: 1:  ],
182: 1:  'info': [
182: 1:    '✅f(1) = 101',
182: 1:    '✅f(2) = 112',
182: 1:    '✅f(3) = 131',
182: 1:    '✅f(4) = 415',
182: 1:    '✅f(5) = 161',
182: 1:    '✅f(6) = 718',
182: 1:    '✅f(7) = 192',
182: 1:    '✅f(8) = 021',
182: 1:    '✅f(9) = 222',
182: 1:    '✅f(10) = 324',
182: 1:    '✅f(11) = 252',
182: 1:    '✅f(12) = 627',
182: 1:    '✅f(13) = 282',
182: 1:    '✅f(14) = 930',
182: 1:    '✅f(15) = 313',
182: 1:    '✅f(16) = 233',
182: 1:    '✅f(17) = 343',
182: 1:    '✅f(18) = 536',
182: 1:    '✅f(19) = 373',
182: 1:    '❌f(20) = ??? != 839'
182: 1:  ],
182: 1:  'level': 7,
182: 1:  'nextQuestion': '20',
182: 1:  'questions': [
182: 1:    '1',
182: 1:    '2',
182: 1:    '3',
182: 1:    '4',
182: 1:    '5',
182: 1:    '6',
182: 1:    '7',
182: 1:    '8',
182: 1:    '9',
182: 1:    '10',
182: 1:    '11',
182: 1:    '12',
182: 1:    '13',
182: 1:    '14',
182: 1:    '15',
182: 1:    '16',
182: 1:    '17',
182: 1:    '18',
182: 1:    '19',
182: 1:    '20'
182: 1:  ]
182: 1:}
182: 1:Scores: 8463
182: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839']')
182: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
183: 1:BoardData {
183: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
183: 1:  'expectedAnswer': '404',
183: 1:  'history': [
183: 1:    {
183: 1:      'answer': '101',
183: 1:      'question': '1',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '112',
183: 1:      'question': '2',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '131',
183: 1:      'question': '3',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '415',
183: 1:      'question': '4',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '161',
183: 1:      'question': '5',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '718',
183: 1:      'question': '6',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '192',
183: 1:      'question': '7',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '021',
183: 1:      'question': '8',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '222',
183: 1:      'question': '9',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '324',
183: 1:      'question': '10',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '252',
183: 1:      'question': '11',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '627',
183: 1:      'question': '12',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '282',
183: 1:      'question': '13',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '930',
183: 1:      'question': '14',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '313',
183: 1:      'question': '15',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '233',
183: 1:      'question': '16',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '343',
183: 1:      'question': '17',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '536',
183: 1:      'question': '18',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '373',
183: 1:      'question': '19',
183: 1:      'valid': true
183: 1:    },
183: 1:    {
183: 1:      'answer': '839',
183: 1:      'question': '20',
183: 1:      'valid': true
183: 1:    }
183: 1:  ],
183: 1:  'info': [
183: 1:    '✅f(1) = 101',
183: 1:    '✅f(2) = 112',
183: 1:    '✅f(3) = 131',
183: 1:    '✅f(4) = 415',
183: 1:    '✅f(5) = 161',
183: 1:    '✅f(6) = 718',
183: 1:    '✅f(7) = 192',
183: 1:    '✅f(8) = 021',
183: 1:    '✅f(9) = 222',
183: 1:    '✅f(10) = 324',
183: 1:    '✅f(11) = 252',
183: 1:    '✅f(12) = 627',
183: 1:    '✅f(13) = 282',
183: 1:    '✅f(14) = 930',
183: 1:    '✅f(15) = 313',
183: 1:    '✅f(16) = 233',
183: 1:    '✅f(17) = 343',
183: 1:    '✅f(18) = 536',
183: 1:    '✅f(19) = 373',
183: 1:    '✅f(20) = 839',
183: 1:    '❌f(21) = ??? != 404'
183: 1:  ],
183: 1:  'level': 7,
183: 1:  'nextQuestion': '21',
183: 1:  'questions': [
183: 1:    '1',
183: 1:    '2',
183: 1:    '3',
183: 1:    '4',
183: 1:    '5',
183: 1:    '6',
183: 1:    '7',
183: 1:    '8',
183: 1:    '9',
183: 1:    '10',
183: 1:    '11',
183: 1:    '12',
183: 1:    '13',
183: 1:    '14',
183: 1:    '15',
183: 1:    '16',
183: 1:    '17',
183: 1:    '18',
183: 1:    '19',
183: 1:    '20',
183: 1:    '21'
183: 1:  ]
183: 1:}
183: 1:Scores: 8469
183: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404']')
183: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
184: 1:BoardData {
184: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
184: 1:  'expectedAnswer': '142',
184: 1:  'history': [
184: 1:    {
184: 1:      'answer': '101',
184: 1:      'question': '1',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '112',
184: 1:      'question': '2',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '131',
184: 1:      'question': '3',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '415',
184: 1:      'question': '4',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '161',
184: 1:      'question': '5',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '718',
184: 1:      'question': '6',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '192',
184: 1:      'question': '7',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '021',
184: 1:      'question': '8',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '222',
184: 1:      'question': '9',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '324',
184: 1:      'question': '10',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '252',
184: 1:      'question': '11',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '627',
184: 1:      'question': '12',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '282',
184: 1:      'question': '13',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '930',
184: 1:      'question': '14',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '313',
184: 1:      'question': '15',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '233',
184: 1:      'question': '16',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '343',
184: 1:      'question': '17',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '536',
184: 1:      'question': '18',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '373',
184: 1:      'question': '19',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '839',
184: 1:      'question': '20',
184: 1:      'valid': true
184: 1:    },
184: 1:    {
184: 1:      'answer': '404',
184: 1:      'question': '21',
184: 1:      'valid': true
184: 1:    }
184: 1:  ],
184: 1:  'info': [
184: 1:    '✅f(1) = 101',
184: 1:    '✅f(2) = 112',
184: 1:    '✅f(3) = 131',
184: 1:    '✅f(4) = 415',
184: 1:    '✅f(5) = 161',
184: 1:    '✅f(6) = 718',
184: 1:    '✅f(7) = 192',
184: 1:    '✅f(8) = 021',
184: 1:    '✅f(9) = 222',
184: 1:    '✅f(10) = 324',
184: 1:    '✅f(11) = 252',
184: 1:    '✅f(12) = 627',
184: 1:    '✅f(13) = 282',
184: 1:    '✅f(14) = 930',
184: 1:    '✅f(15) = 313',
184: 1:    '✅f(16) = 233',
184: 1:    '✅f(17) = 343',
184: 1:    '✅f(18) = 536',
184: 1:    '✅f(19) = 373',
184: 1:    '✅f(20) = 839',
184: 1:    '✅f(21) = 404',
184: 1:    '❌f(22) = ??? != 142'
184: 1:  ],
184: 1:  'level': 7,
184: 1:  'nextQuestion': '22',
184: 1:  'questions': [
184: 1:    '1',
184: 1:    '2',
184: 1:    '3',
184: 1:    '4',
184: 1:    '5',
184: 1:    '6',
184: 1:    '7',
184: 1:    '8',
184: 1:    '9',
184: 1:    '10',
184: 1:    '11',
184: 1:    '12',
184: 1:    '13',
184: 1:    '14',
184: 1:    '15',
184: 1:    '16',
184: 1:    '17',
184: 1:    '18',
184: 1:    '19',
184: 1:    '20',
184: 1:    '21',
184: 1:    '22'
184: 1:  ]
184: 1:}
184: 1:Scores: 8475
184: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142']')
184: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
185: 1:BoardData {
185: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
185: 1:  'expectedAnswer': '434',
185: 1:  'history': [
185: 1:    {
185: 1:      'answer': '101',
185: 1:      'question': '1',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '112',
185: 1:      'question': '2',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '131',
185: 1:      'question': '3',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '415',
185: 1:      'question': '4',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '161',
185: 1:      'question': '5',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '718',
185: 1:      'question': '6',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '192',
185: 1:      'question': '7',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '021',
185: 1:      'question': '8',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '222',
185: 1:      'question': '9',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '324',
185: 1:      'question': '10',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '252',
185: 1:      'question': '11',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '627',
185: 1:      'question': '12',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '282',
185: 1:      'question': '13',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '930',
185: 1:      'question': '14',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '313',
185: 1:      'question': '15',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '233',
185: 1:      'question': '16',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '343',
185: 1:      'question': '17',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '536',
185: 1:      'question': '18',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '373',
185: 1:      'question': '19',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '839',
185: 1:      'question': '20',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '404',
185: 1:      'question': '21',
185: 1:      'valid': true
185: 1:    },
185: 1:    {
185: 1:      'answer': '142',
185: 1:      'question': '22',
185: 1:      'valid': true
185: 1:    }
185: 1:  ],
185: 1:  'info': [
185: 1:    '✅f(1) = 101',
185: 1:    '✅f(2) = 112',
185: 1:    '✅f(3) = 131',
185: 1:    '✅f(4) = 415',
185: 1:    '✅f(5) = 161',
185: 1:    '✅f(6) = 718',
185: 1:    '✅f(7) = 192',
185: 1:    '✅f(8) = 021',
185: 1:    '✅f(9) = 222',
185: 1:    '✅f(10) = 324',
185: 1:    '✅f(11) = 252',
185: 1:    '✅f(12) = 627',
185: 1:    '✅f(13) = 282',
185: 1:    '✅f(14) = 930',
185: 1:    '✅f(15) = 313',
185: 1:    '✅f(16) = 233',
185: 1:    '✅f(17) = 343',
185: 1:    '✅f(18) = 536',
185: 1:    '✅f(19) = 373',
185: 1:    '✅f(20) = 839',
185: 1:    '✅f(21) = 404',
185: 1:    '✅f(22) = 142',
185: 1:    '❌f(23) = ??? != 434'
185: 1:  ],
185: 1:  'level': 7,
185: 1:  'nextQuestion': '23',
185: 1:  'questions': [
185: 1:    '1',
185: 1:    '2',
185: 1:    '3',
185: 1:    '4',
185: 1:    '5',
185: 1:    '6',
185: 1:    '7',
185: 1:    '8',
185: 1:    '9',
185: 1:    '10',
185: 1:    '11',
185: 1:    '12',
185: 1:    '13',
185: 1:    '14',
185: 1:    '15',
185: 1:    '16',
185: 1:    '17',
185: 1:    '18',
185: 1:    '19',
185: 1:    '20',
185: 1:    '21',
185: 1:    '22',
185: 1:    '23'
185: 1:  ]
185: 1:}
185: 1:Scores: 8481
185: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434']')
185: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
186: 1:BoardData {
186: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
186: 1:  'expectedAnswer': '445',
186: 1:  'history': [
186: 1:    {
186: 1:      'answer': '101',
186: 1:      'question': '1',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '112',
186: 1:      'question': '2',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '131',
186: 1:      'question': '3',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '415',
186: 1:      'question': '4',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '161',
186: 1:      'question': '5',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '718',
186: 1:      'question': '6',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '192',
186: 1:      'question': '7',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '021',
186: 1:      'question': '8',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '222',
186: 1:      'question': '9',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '324',
186: 1:      'question': '10',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '252',
186: 1:      'question': '11',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '627',
186: 1:      'question': '12',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '282',
186: 1:      'question': '13',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '930',
186: 1:      'question': '14',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '313',
186: 1:      'question': '15',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '233',
186: 1:      'question': '16',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '343',
186: 1:      'question': '17',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '536',
186: 1:      'question': '18',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '373',
186: 1:      'question': '19',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '839',
186: 1:      'question': '20',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '404',
186: 1:      'question': '21',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '142',
186: 1:      'question': '22',
186: 1:      'valid': true
186: 1:    },
186: 1:    {
186: 1:      'answer': '434',
186: 1:      'question': '23',
186: 1:      'valid': true
186: 1:    }
186: 1:  ],
186: 1:  'info': [
186: 1:    '✅f(1) = 101',
186: 1:    '✅f(2) = 112',
186: 1:    '✅f(3) = 131',
186: 1:    '✅f(4) = 415',
186: 1:    '✅f(5) = 161',
186: 1:    '✅f(6) = 718',
186: 1:    '✅f(7) = 192',
186: 1:    '✅f(8) = 021',
186: 1:    '✅f(9) = 222',
186: 1:    '✅f(10) = 324',
186: 1:    '✅f(11) = 252',
186: 1:    '✅f(12) = 627',
186: 1:    '✅f(13) = 282',
186: 1:    '✅f(14) = 930',
186: 1:    '✅f(15) = 313',
186: 1:    '✅f(16) = 233',
186: 1:    '✅f(17) = 343',
186: 1:    '✅f(18) = 536',
186: 1:    '✅f(19) = 373',
186: 1:    '✅f(20) = 839',
186: 1:    '✅f(21) = 404',
186: 1:    '✅f(22) = 142',
186: 1:    '✅f(23) = 434',
186: 1:    '❌f(24) = ??? != 445'
186: 1:  ],
186: 1:  'level': 7,
186: 1:  'nextQuestion': '24',
186: 1:  'questions': [
186: 1:    '1',
186: 1:    '2',
186: 1:    '3',
186: 1:    '4',
186: 1:    '5',
186: 1:    '6',
186: 1:    '7',
186: 1:    '8',
186: 1:    '9',
186: 1:    '10',
186: 1:    '11',
186: 1:    '12',
186: 1:    '13',
186: 1:    '14',
186: 1:    '15',
186: 1:    '16',
186: 1:    '17',
186: 1:    '18',
186: 1:    '19',
186: 1:    '20',
186: 1:    '21',
186: 1:    '22',
186: 1:    '23',
186: 1:    '24'
186: 1:  ]
186: 1:}
186: 1:Scores: 8487
186: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434', '445']')
186: 1:Fire Event: PassTest{complexity=15, testCount=25}
------------------------------------------
187: 1:BoardData {
187: 1:  'description': ['Continue the sequence 101, 112, 131, 415, 161, 718... \ni.e f(1) = 101, f(2) = 112, ...\nHint: Look at the whole picture'],
187: 1:  'expectedAnswer': '464',
187: 1:  'history': [
187: 1:    {
187: 1:      'answer': '101',
187: 1:      'question': '1',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '112',
187: 1:      'question': '2',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '131',
187: 1:      'question': '3',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '415',
187: 1:      'question': '4',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '161',
187: 1:      'question': '5',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '718',
187: 1:      'question': '6',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '192',
187: 1:      'question': '7',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '021',
187: 1:      'question': '8',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '222',
187: 1:      'question': '9',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '324',
187: 1:      'question': '10',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '252',
187: 1:      'question': '11',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '627',
187: 1:      'question': '12',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '282',
187: 1:      'question': '13',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '930',
187: 1:      'question': '14',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '313',
187: 1:      'question': '15',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '233',
187: 1:      'question': '16',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '343',
187: 1:      'question': '17',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '536',
187: 1:      'question': '18',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '373',
187: 1:      'question': '19',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '839',
187: 1:      'question': '20',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '404',
187: 1:      'question': '21',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '142',
187: 1:      'question': '22',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '434',
187: 1:      'question': '23',
187: 1:      'valid': true
187: 1:    },
187: 1:    {
187: 1:      'answer': '445',
187: 1:      'question': '24',
187: 1:      'valid': true
187: 1:    }
187: 1:  ],
187: 1:  'info': [
187: 1:    '✅f(1) = 101',
187: 1:    '✅f(2) = 112',
187: 1:    '✅f(3) = 131',
187: 1:    '✅f(4) = 415',
187: 1:    '✅f(5) = 161',
187: 1:    '✅f(6) = 718',
187: 1:    '✅f(7) = 192',
187: 1:    '✅f(8) = 021',
187: 1:    '✅f(9) = 222',
187: 1:    '✅f(10) = 324',
187: 1:    '✅f(11) = 252',
187: 1:    '✅f(12) = 627',
187: 1:    '✅f(13) = 282',
187: 1:    '✅f(14) = 930',
187: 1:    '✅f(15) = 313',
187: 1:    '✅f(16) = 233',
187: 1:    '✅f(17) = 343',
187: 1:    '✅f(18) = 536',
187: 1:    '✅f(19) = 373',
187: 1:    '✅f(20) = 839',
187: 1:    '✅f(21) = 404',
187: 1:    '✅f(22) = 142',
187: 1:    '✅f(23) = 434',
187: 1:    '✅f(24) = 445',
187: 1:    '❌f(25) = ??? != 464'
187: 1:  ],
187: 1:  'level': 7,
187: 1:  'nextQuestion': '25',
187: 1:  'questions': [
187: 1:    '1',
187: 1:    '2',
187: 1:    '3',
187: 1:    '4',
187: 1:    '5',
187: 1:    '6',
187: 1:    '7',
187: 1:    '8',
187: 1:    '9',
187: 1:    '10',
187: 1:    '11',
187: 1:    '12',
187: 1:    '13',
187: 1:    '14',
187: 1:    '15',
187: 1:    '16',
187: 1:    '17',
187: 1:    '18',
187: 1:    '19',
187: 1:    '20',
187: 1:    '21',
187: 1:    '22',
187: 1:    '23',
187: 1:    '24',
187: 1:    '25'
187: 1:  ]
187: 1:}
187: 1:Scores: 8493
187: 1:Answer: message('['101', '112', '131', '415', '161', '718', '192', '021', '222', '324', '252', '627', '282', '930', '313', '233', '343', '536', '373', '839', '404', '142', '434', '445', '464']')
187: 1:Fire Event: PassTest{complexity=15, testCount=25}
187: 1:Fire Event: NextAlgorithm{complexity=15, time=0}
------------------------------------------
188: 1:BoardData {
188: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
188: 1:  'history': [
188: 1:    {
188: 1:      'answer': '101',
188: 1:      'question': '1',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '112',
188: 1:      'question': '2',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '131',
188: 1:      'question': '3',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '415',
188: 1:      'question': '4',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '161',
188: 1:      'question': '5',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '718',
188: 1:      'question': '6',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '192',
188: 1:      'question': '7',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '021',
188: 1:      'question': '8',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '222',
188: 1:      'question': '9',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '324',
188: 1:      'question': '10',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '252',
188: 1:      'question': '11',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '627',
188: 1:      'question': '12',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '282',
188: 1:      'question': '13',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '930',
188: 1:      'question': '14',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '313',
188: 1:      'question': '15',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '233',
188: 1:      'question': '16',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '343',
188: 1:      'question': '17',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '536',
188: 1:      'question': '18',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '373',
188: 1:      'question': '19',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '839',
188: 1:      'question': '20',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '404',
188: 1:      'question': '21',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '142',
188: 1:      'question': '22',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '434',
188: 1:      'question': '23',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '445',
188: 1:      'question': '24',
188: 1:      'valid': true
188: 1:    },
188: 1:    {
188: 1:      'answer': '464',
188: 1:      'question': '25',
188: 1:      'valid': true
188: 1:    }
188: 1:  ],
188: 1:  'info': [
188: 1:    '✅f(1) = 101',
188: 1:    '✅f(2) = 112',
188: 1:    '✅f(3) = 131',
188: 1:    '✅f(4) = 415',
188: 1:    '✅f(5) = 161',
188: 1:    '✅f(6) = 718',
188: 1:    '✅f(7) = 192',
188: 1:    '✅f(8) = 021',
188: 1:    '✅f(9) = 222',
188: 1:    '✅f(10) = 324',
188: 1:    '✅f(11) = 252',
188: 1:    '✅f(12) = 627',
188: 1:    '✅f(13) = 282',
188: 1:    '✅f(14) = 930',
188: 1:    '✅f(15) = 313',
188: 1:    '✅f(16) = 233',
188: 1:    '✅f(17) = 343',
188: 1:    '✅f(18) = 536',
188: 1:    '✅f(19) = 373',
188: 1:    '✅f(20) = 839',
188: 1:    '✅f(21) = 404',
188: 1:    '✅f(22) = 142',
188: 1:    '✅f(23) = 434',
188: 1:    '✅f(24) = 445',
188: 1:    '✅f(25) = 464'
188: 1:  ],
188: 1:  'level': 7,
188: 1:  'questions': []
188: 1:}
188: 1:Scores: 10523
188: 1:Answer: message('StartNextLevel')
188: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
189: 1:BoardData {
189: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
189: 1:  'expectedAnswer': '1',
189: 1:  'history': [],
189: 1:  'info': ['❌f(1) = ??? != 1'],
189: 1:  'level': 8,
189: 1:  'nextQuestion': '1',
189: 1:  'questions': ['1']
189: 1:}
189: 1:Scores: 10523
189: 1:Answer: message('['1']')
189: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
190: 1:BoardData {
190: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
190: 1:  'expectedAnswer': '1',
190: 1:  'history': [{
190: 1:    'answer': '1',
190: 1:    'question': '1',
190: 1:    'valid': true
190: 1:  }],
190: 1:  'info': [
190: 1:    '✅f(1) = 1',
190: 1:    '❌f(2) = ??? != 1'
190: 1:  ],
190: 1:  'level': 8,
190: 1:  'nextQuestion': '2',
190: 1:  'questions': [
190: 1:    '1',
190: 1:    '2'
190: 1:  ]
190: 1:}
190: 1:Scores: 10531
190: 1:Answer: message('['1', '1']')
190: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
191: 1:BoardData {
191: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
191: 1:  'expectedAnswer': '2',
191: 1:  'history': [
191: 1:    {
191: 1:      'answer': '1',
191: 1:      'question': '1',
191: 1:      'valid': true
191: 1:    },
191: 1:    {
191: 1:      'answer': '1',
191: 1:      'question': '2',
191: 1:      'valid': true
191: 1:    }
191: 1:  ],
191: 1:  'info': [
191: 1:    '✅f(1) = 1',
191: 1:    '✅f(2) = 1',
191: 1:    '❌f(3) = ??? != 2'
191: 1:  ],
191: 1:  'level': 8,
191: 1:  'nextQuestion': '3',
191: 1:  'questions': [
191: 1:    '1',
191: 1:    '2',
191: 1:    '3'
191: 1:  ]
191: 1:}
191: 1:Scores: 10539
191: 1:Answer: message('['1', '1', '2']')
191: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
192: 1:BoardData {
192: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
192: 1:  'expectedAnswer': '3',
192: 1:  'history': [
192: 1:    {
192: 1:      'answer': '1',
192: 1:      'question': '1',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '1',
192: 1:      'question': '2',
192: 1:      'valid': true
192: 1:    },
192: 1:    {
192: 1:      'answer': '2',
192: 1:      'question': '3',
192: 1:      'valid': true
192: 1:    }
192: 1:  ],
192: 1:  'info': [
192: 1:    '✅f(1) = 1',
192: 1:    '✅f(2) = 1',
192: 1:    '✅f(3) = 2',
192: 1:    '❌f(4) = ??? != 3'
192: 1:  ],
192: 1:  'level': 8,
192: 1:  'nextQuestion': '4',
192: 1:  'questions': [
192: 1:    '1',
192: 1:    '2',
192: 1:    '3',
192: 1:    '4'
192: 1:  ]
192: 1:}
192: 1:Scores: 10547
192: 1:Answer: message('['1', '1', '2', '3']')
192: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
193: 1:BoardData {
193: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
193: 1:  'expectedAnswer': '5',
193: 1:  'history': [
193: 1:    {
193: 1:      'answer': '1',
193: 1:      'question': '1',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '1',
193: 1:      'question': '2',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '2',
193: 1:      'question': '3',
193: 1:      'valid': true
193: 1:    },
193: 1:    {
193: 1:      'answer': '3',
193: 1:      'question': '4',
193: 1:      'valid': true
193: 1:    }
193: 1:  ],
193: 1:  'info': [
193: 1:    '✅f(1) = 1',
193: 1:    '✅f(2) = 1',
193: 1:    '✅f(3) = 2',
193: 1:    '✅f(4) = 3',
193: 1:    '❌f(5) = ??? != 5'
193: 1:  ],
193: 1:  'level': 8,
193: 1:  'nextQuestion': '5',
193: 1:  'questions': [
193: 1:    '1',
193: 1:    '2',
193: 1:    '3',
193: 1:    '4',
193: 1:    '5'
193: 1:  ]
193: 1:}
193: 1:Scores: 10555
193: 1:Answer: message('['1', '1', '2', '3', '5']')
193: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
194: 1:BoardData {
194: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
194: 1:  'expectedAnswer': '8',
194: 1:  'history': [
194: 1:    {
194: 1:      'answer': '1',
194: 1:      'question': '1',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '1',
194: 1:      'question': '2',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '2',
194: 1:      'question': '3',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '3',
194: 1:      'question': '4',
194: 1:      'valid': true
194: 1:    },
194: 1:    {
194: 1:      'answer': '5',
194: 1:      'question': '5',
194: 1:      'valid': true
194: 1:    }
194: 1:  ],
194: 1:  'info': [
194: 1:    '✅f(1) = 1',
194: 1:    '✅f(2) = 1',
194: 1:    '✅f(3) = 2',
194: 1:    '✅f(4) = 3',
194: 1:    '✅f(5) = 5',
194: 1:    '❌f(6) = ??? != 8'
194: 1:  ],
194: 1:  'level': 8,
194: 1:  'nextQuestion': '6',
194: 1:  'questions': [
194: 1:    '1',
194: 1:    '2',
194: 1:    '3',
194: 1:    '4',
194: 1:    '5',
194: 1:    '6'
194: 1:  ]
194: 1:}
194: 1:Scores: 10563
194: 1:Answer: message('['1', '1', '2', '3', '5', '8']')
194: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
195: 1:BoardData {
195: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
195: 1:  'expectedAnswer': '13',
195: 1:  'history': [
195: 1:    {
195: 1:      'answer': '1',
195: 1:      'question': '1',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '1',
195: 1:      'question': '2',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '2',
195: 1:      'question': '3',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '3',
195: 1:      'question': '4',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '5',
195: 1:      'question': '5',
195: 1:      'valid': true
195: 1:    },
195: 1:    {
195: 1:      'answer': '8',
195: 1:      'question': '6',
195: 1:      'valid': true
195: 1:    }
195: 1:  ],
195: 1:  'info': [
195: 1:    '✅f(1) = 1',
195: 1:    '✅f(2) = 1',
195: 1:    '✅f(3) = 2',
195: 1:    '✅f(4) = 3',
195: 1:    '✅f(5) = 5',
195: 1:    '✅f(6) = 8',
195: 1:    '❌f(7) = ??? != 13'
195: 1:  ],
195: 1:  'level': 8,
195: 1:  'nextQuestion': '7',
195: 1:  'questions': [
195: 1:    '1',
195: 1:    '2',
195: 1:    '3',
195: 1:    '4',
195: 1:    '5',
195: 1:    '6',
195: 1:    '7'
195: 1:  ]
195: 1:}
195: 1:Scores: 10571
195: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13']')
195: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
196: 1:BoardData {
196: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
196: 1:  'expectedAnswer': '21',
196: 1:  'history': [
196: 1:    {
196: 1:      'answer': '1',
196: 1:      'question': '1',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '1',
196: 1:      'question': '2',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '2',
196: 1:      'question': '3',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '3',
196: 1:      'question': '4',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '5',
196: 1:      'question': '5',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '8',
196: 1:      'question': '6',
196: 1:      'valid': true
196: 1:    },
196: 1:    {
196: 1:      'answer': '13',
196: 1:      'question': '7',
196: 1:      'valid': true
196: 1:    }
196: 1:  ],
196: 1:  'info': [
196: 1:    '✅f(1) = 1',
196: 1:    '✅f(2) = 1',
196: 1:    '✅f(3) = 2',
196: 1:    '✅f(4) = 3',
196: 1:    '✅f(5) = 5',
196: 1:    '✅f(6) = 8',
196: 1:    '✅f(7) = 13',
196: 1:    '❌f(8) = ??? != 21'
196: 1:  ],
196: 1:  'level': 8,
196: 1:  'nextQuestion': '8',
196: 1:  'questions': [
196: 1:    '1',
196: 1:    '2',
196: 1:    '3',
196: 1:    '4',
196: 1:    '5',
196: 1:    '6',
196: 1:    '7',
196: 1:    '8'
196: 1:  ]
196: 1:}
196: 1:Scores: 10579
196: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21']')
196: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
197: 1:BoardData {
197: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
197: 1:  'expectedAnswer': '34',
197: 1:  'history': [
197: 1:    {
197: 1:      'answer': '1',
197: 1:      'question': '1',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '1',
197: 1:      'question': '2',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '2',
197: 1:      'question': '3',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '3',
197: 1:      'question': '4',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '5',
197: 1:      'question': '5',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '8',
197: 1:      'question': '6',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '13',
197: 1:      'question': '7',
197: 1:      'valid': true
197: 1:    },
197: 1:    {
197: 1:      'answer': '21',
197: 1:      'question': '8',
197: 1:      'valid': true
197: 1:    }
197: 1:  ],
197: 1:  'info': [
197: 1:    '✅f(1) = 1',
197: 1:    '✅f(2) = 1',
197: 1:    '✅f(3) = 2',
197: 1:    '✅f(4) = 3',
197: 1:    '✅f(5) = 5',
197: 1:    '✅f(6) = 8',
197: 1:    '✅f(7) = 13',
197: 1:    '✅f(8) = 21',
197: 1:    '❌f(9) = ??? != 34'
197: 1:  ],
197: 1:  'level': 8,
197: 1:  'nextQuestion': '9',
197: 1:  'questions': [
197: 1:    '1',
197: 1:    '2',
197: 1:    '3',
197: 1:    '4',
197: 1:    '5',
197: 1:    '6',
197: 1:    '7',
197: 1:    '8',
197: 1:    '9'
197: 1:  ]
197: 1:}
197: 1:Scores: 10587
197: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34']')
197: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
198: 1:BoardData {
198: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
198: 1:  'expectedAnswer': '55',
198: 1:  'history': [
198: 1:    {
198: 1:      'answer': '1',
198: 1:      'question': '1',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '1',
198: 1:      'question': '2',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '2',
198: 1:      'question': '3',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '3',
198: 1:      'question': '4',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '5',
198: 1:      'question': '5',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '8',
198: 1:      'question': '6',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '13',
198: 1:      'question': '7',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '21',
198: 1:      'question': '8',
198: 1:      'valid': true
198: 1:    },
198: 1:    {
198: 1:      'answer': '34',
198: 1:      'question': '9',
198: 1:      'valid': true
198: 1:    }
198: 1:  ],
198: 1:  'info': [
198: 1:    '✅f(1) = 1',
198: 1:    '✅f(2) = 1',
198: 1:    '✅f(3) = 2',
198: 1:    '✅f(4) = 3',
198: 1:    '✅f(5) = 5',
198: 1:    '✅f(6) = 8',
198: 1:    '✅f(7) = 13',
198: 1:    '✅f(8) = 21',
198: 1:    '✅f(9) = 34',
198: 1:    '❌f(10) = ??? != 55'
198: 1:  ],
198: 1:  'level': 8,
198: 1:  'nextQuestion': '10',
198: 1:  'questions': [
198: 1:    '1',
198: 1:    '2',
198: 1:    '3',
198: 1:    '4',
198: 1:    '5',
198: 1:    '6',
198: 1:    '7',
198: 1:    '8',
198: 1:    '9',
198: 1:    '10'
198: 1:  ]
198: 1:}
198: 1:Scores: 10595
198: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55']')
198: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
199: 1:BoardData {
199: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
199: 1:  'expectedAnswer': '89',
199: 1:  'history': [
199: 1:    {
199: 1:      'answer': '1',
199: 1:      'question': '1',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '1',
199: 1:      'question': '2',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '2',
199: 1:      'question': '3',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '3',
199: 1:      'question': '4',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '5',
199: 1:      'question': '5',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '8',
199: 1:      'question': '6',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '13',
199: 1:      'question': '7',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '21',
199: 1:      'question': '8',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '34',
199: 1:      'question': '9',
199: 1:      'valid': true
199: 1:    },
199: 1:    {
199: 1:      'answer': '55',
199: 1:      'question': '10',
199: 1:      'valid': true
199: 1:    }
199: 1:  ],
199: 1:  'info': [
199: 1:    '✅f(1) = 1',
199: 1:    '✅f(2) = 1',
199: 1:    '✅f(3) = 2',
199: 1:    '✅f(4) = 3',
199: 1:    '✅f(5) = 5',
199: 1:    '✅f(6) = 8',
199: 1:    '✅f(7) = 13',
199: 1:    '✅f(8) = 21',
199: 1:    '✅f(9) = 34',
199: 1:    '✅f(10) = 55',
199: 1:    '❌f(11) = ??? != 89'
199: 1:  ],
199: 1:  'level': 8,
199: 1:  'nextQuestion': '11',
199: 1:  'questions': [
199: 1:    '1',
199: 1:    '2',
199: 1:    '3',
199: 1:    '4',
199: 1:    '5',
199: 1:    '6',
199: 1:    '7',
199: 1:    '8',
199: 1:    '9',
199: 1:    '10',
199: 1:    '11'
199: 1:  ]
199: 1:}
199: 1:Scores: 10603
199: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89']')
199: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
200: 1:BoardData {
200: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
200: 1:  'expectedAnswer': '144',
200: 1:  'history': [
200: 1:    {
200: 1:      'answer': '1',
200: 1:      'question': '1',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '1',
200: 1:      'question': '2',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '2',
200: 1:      'question': '3',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '3',
200: 1:      'question': '4',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '5',
200: 1:      'question': '5',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '8',
200: 1:      'question': '6',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '13',
200: 1:      'question': '7',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '21',
200: 1:      'question': '8',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '34',
200: 1:      'question': '9',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '55',
200: 1:      'question': '10',
200: 1:      'valid': true
200: 1:    },
200: 1:    {
200: 1:      'answer': '89',
200: 1:      'question': '11',
200: 1:      'valid': true
200: 1:    }
200: 1:  ],
200: 1:  'info': [
200: 1:    '✅f(1) = 1',
200: 1:    '✅f(2) = 1',
200: 1:    '✅f(3) = 2',
200: 1:    '✅f(4) = 3',
200: 1:    '✅f(5) = 5',
200: 1:    '✅f(6) = 8',
200: 1:    '✅f(7) = 13',
200: 1:    '✅f(8) = 21',
200: 1:    '✅f(9) = 34',
200: 1:    '✅f(10) = 55',
200: 1:    '✅f(11) = 89',
200: 1:    '❌f(12) = ??? != 144'
200: 1:  ],
200: 1:  'level': 8,
200: 1:  'nextQuestion': '12',
200: 1:  'questions': [
200: 1:    '1',
200: 1:    '2',
200: 1:    '3',
200: 1:    '4',
200: 1:    '5',
200: 1:    '6',
200: 1:    '7',
200: 1:    '8',
200: 1:    '9',
200: 1:    '10',
200: 1:    '11',
200: 1:    '12'
200: 1:  ]
200: 1:}
200: 1:Scores: 10611
200: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144']')
200: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
201: 1:BoardData {
201: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
201: 1:  'expectedAnswer': '233',
201: 1:  'history': [
201: 1:    {
201: 1:      'answer': '1',
201: 1:      'question': '1',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '1',
201: 1:      'question': '2',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '2',
201: 1:      'question': '3',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '3',
201: 1:      'question': '4',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '5',
201: 1:      'question': '5',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '8',
201: 1:      'question': '6',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '13',
201: 1:      'question': '7',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '21',
201: 1:      'question': '8',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '34',
201: 1:      'question': '9',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '55',
201: 1:      'question': '10',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '89',
201: 1:      'question': '11',
201: 1:      'valid': true
201: 1:    },
201: 1:    {
201: 1:      'answer': '144',
201: 1:      'question': '12',
201: 1:      'valid': true
201: 1:    }
201: 1:  ],
201: 1:  'info': [
201: 1:    '✅f(1) = 1',
201: 1:    '✅f(2) = 1',
201: 1:    '✅f(3) = 2',
201: 1:    '✅f(4) = 3',
201: 1:    '✅f(5) = 5',
201: 1:    '✅f(6) = 8',
201: 1:    '✅f(7) = 13',
201: 1:    '✅f(8) = 21',
201: 1:    '✅f(9) = 34',
201: 1:    '✅f(10) = 55',
201: 1:    '✅f(11) = 89',
201: 1:    '✅f(12) = 144',
201: 1:    '❌f(13) = ??? != 233'
201: 1:  ],
201: 1:  'level': 8,
201: 1:  'nextQuestion': '13',
201: 1:  'questions': [
201: 1:    '1',
201: 1:    '2',
201: 1:    '3',
201: 1:    '4',
201: 1:    '5',
201: 1:    '6',
201: 1:    '7',
201: 1:    '8',
201: 1:    '9',
201: 1:    '10',
201: 1:    '11',
201: 1:    '12',
201: 1:    '13'
201: 1:  ]
201: 1:}
201: 1:Scores: 10619
201: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233']')
201: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
202: 1:BoardData {
202: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
202: 1:  'expectedAnswer': '377',
202: 1:  'history': [
202: 1:    {
202: 1:      'answer': '1',
202: 1:      'question': '1',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '1',
202: 1:      'question': '2',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '2',
202: 1:      'question': '3',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '3',
202: 1:      'question': '4',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '5',
202: 1:      'question': '5',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '8',
202: 1:      'question': '6',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '13',
202: 1:      'question': '7',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '21',
202: 1:      'question': '8',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '34',
202: 1:      'question': '9',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '55',
202: 1:      'question': '10',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '89',
202: 1:      'question': '11',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '144',
202: 1:      'question': '12',
202: 1:      'valid': true
202: 1:    },
202: 1:    {
202: 1:      'answer': '233',
202: 1:      'question': '13',
202: 1:      'valid': true
202: 1:    }
202: 1:  ],
202: 1:  'info': [
202: 1:    '✅f(1) = 1',
202: 1:    '✅f(2) = 1',
202: 1:    '✅f(3) = 2',
202: 1:    '✅f(4) = 3',
202: 1:    '✅f(5) = 5',
202: 1:    '✅f(6) = 8',
202: 1:    '✅f(7) = 13',
202: 1:    '✅f(8) = 21',
202: 1:    '✅f(9) = 34',
202: 1:    '✅f(10) = 55',
202: 1:    '✅f(11) = 89',
202: 1:    '✅f(12) = 144',
202: 1:    '✅f(13) = 233',
202: 1:    '❌f(14) = ??? != 377'
202: 1:  ],
202: 1:  'level': 8,
202: 1:  'nextQuestion': '14',
202: 1:  'questions': [
202: 1:    '1',
202: 1:    '2',
202: 1:    '3',
202: 1:    '4',
202: 1:    '5',
202: 1:    '6',
202: 1:    '7',
202: 1:    '8',
202: 1:    '9',
202: 1:    '10',
202: 1:    '11',
202: 1:    '12',
202: 1:    '13',
202: 1:    '14'
202: 1:  ]
202: 1:}
202: 1:Scores: 10627
202: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377']')
202: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
203: 1:BoardData {
203: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
203: 1:  'expectedAnswer': '610',
203: 1:  'history': [
203: 1:    {
203: 1:      'answer': '1',
203: 1:      'question': '1',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '1',
203: 1:      'question': '2',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '2',
203: 1:      'question': '3',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '3',
203: 1:      'question': '4',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '5',
203: 1:      'question': '5',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '8',
203: 1:      'question': '6',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '13',
203: 1:      'question': '7',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '21',
203: 1:      'question': '8',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '34',
203: 1:      'question': '9',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '55',
203: 1:      'question': '10',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '89',
203: 1:      'question': '11',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '144',
203: 1:      'question': '12',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '233',
203: 1:      'question': '13',
203: 1:      'valid': true
203: 1:    },
203: 1:    {
203: 1:      'answer': '377',
203: 1:      'question': '14',
203: 1:      'valid': true
203: 1:    }
203: 1:  ],
203: 1:  'info': [
203: 1:    '✅f(1) = 1',
203: 1:    '✅f(2) = 1',
203: 1:    '✅f(3) = 2',
203: 1:    '✅f(4) = 3',
203: 1:    '✅f(5) = 5',
203: 1:    '✅f(6) = 8',
203: 1:    '✅f(7) = 13',
203: 1:    '✅f(8) = 21',
203: 1:    '✅f(9) = 34',
203: 1:    '✅f(10) = 55',
203: 1:    '✅f(11) = 89',
203: 1:    '✅f(12) = 144',
203: 1:    '✅f(13) = 233',
203: 1:    '✅f(14) = 377',
203: 1:    '❌f(15) = ??? != 610'
203: 1:  ],
203: 1:  'level': 8,
203: 1:  'nextQuestion': '15',
203: 1:  'questions': [
203: 1:    '1',
203: 1:    '2',
203: 1:    '3',
203: 1:    '4',
203: 1:    '5',
203: 1:    '6',
203: 1:    '7',
203: 1:    '8',
203: 1:    '9',
203: 1:    '10',
203: 1:    '11',
203: 1:    '12',
203: 1:    '13',
203: 1:    '14',
203: 1:    '15'
203: 1:  ]
203: 1:}
203: 1:Scores: 10635
203: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610']')
203: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
204: 1:BoardData {
204: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
204: 1:  'expectedAnswer': '987',
204: 1:  'history': [
204: 1:    {
204: 1:      'answer': '1',
204: 1:      'question': '1',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '1',
204: 1:      'question': '2',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '2',
204: 1:      'question': '3',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '3',
204: 1:      'question': '4',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '5',
204: 1:      'question': '5',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '8',
204: 1:      'question': '6',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '13',
204: 1:      'question': '7',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '21',
204: 1:      'question': '8',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '34',
204: 1:      'question': '9',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '55',
204: 1:      'question': '10',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '89',
204: 1:      'question': '11',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '144',
204: 1:      'question': '12',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '233',
204: 1:      'question': '13',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '377',
204: 1:      'question': '14',
204: 1:      'valid': true
204: 1:    },
204: 1:    {
204: 1:      'answer': '610',
204: 1:      'question': '15',
204: 1:      'valid': true
204: 1:    }
204: 1:  ],
204: 1:  'info': [
204: 1:    '✅f(1) = 1',
204: 1:    '✅f(2) = 1',
204: 1:    '✅f(3) = 2',
204: 1:    '✅f(4) = 3',
204: 1:    '✅f(5) = 5',
204: 1:    '✅f(6) = 8',
204: 1:    '✅f(7) = 13',
204: 1:    '✅f(8) = 21',
204: 1:    '✅f(9) = 34',
204: 1:    '✅f(10) = 55',
204: 1:    '✅f(11) = 89',
204: 1:    '✅f(12) = 144',
204: 1:    '✅f(13) = 233',
204: 1:    '✅f(14) = 377',
204: 1:    '✅f(15) = 610',
204: 1:    '❌f(16) = ??? != 987'
204: 1:  ],
204: 1:  'level': 8,
204: 1:  'nextQuestion': '16',
204: 1:  'questions': [
204: 1:    '1',
204: 1:    '2',
204: 1:    '3',
204: 1:    '4',
204: 1:    '5',
204: 1:    '6',
204: 1:    '7',
204: 1:    '8',
204: 1:    '9',
204: 1:    '10',
204: 1:    '11',
204: 1:    '12',
204: 1:    '13',
204: 1:    '14',
204: 1:    '15',
204: 1:    '16'
204: 1:  ]
204: 1:}
204: 1:Scores: 10643
204: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987']')
204: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
205: 1:BoardData {
205: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
205: 1:  'expectedAnswer': '1597',
205: 1:  'history': [
205: 1:    {
205: 1:      'answer': '1',
205: 1:      'question': '1',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '1',
205: 1:      'question': '2',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '2',
205: 1:      'question': '3',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '3',
205: 1:      'question': '4',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '5',
205: 1:      'question': '5',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '8',
205: 1:      'question': '6',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '13',
205: 1:      'question': '7',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '21',
205: 1:      'question': '8',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '34',
205: 1:      'question': '9',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '55',
205: 1:      'question': '10',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '89',
205: 1:      'question': '11',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '144',
205: 1:      'question': '12',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '233',
205: 1:      'question': '13',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '377',
205: 1:      'question': '14',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '610',
205: 1:      'question': '15',
205: 1:      'valid': true
205: 1:    },
205: 1:    {
205: 1:      'answer': '987',
205: 1:      'question': '16',
205: 1:      'valid': true
205: 1:    }
205: 1:  ],
205: 1:  'info': [
205: 1:    '✅f(1) = 1',
205: 1:    '✅f(2) = 1',
205: 1:    '✅f(3) = 2',
205: 1:    '✅f(4) = 3',
205: 1:    '✅f(5) = 5',
205: 1:    '✅f(6) = 8',
205: 1:    '✅f(7) = 13',
205: 1:    '✅f(8) = 21',
205: 1:    '✅f(9) = 34',
205: 1:    '✅f(10) = 55',
205: 1:    '✅f(11) = 89',
205: 1:    '✅f(12) = 144',
205: 1:    '✅f(13) = 233',
205: 1:    '✅f(14) = 377',
205: 1:    '✅f(15) = 610',
205: 1:    '✅f(16) = 987',
205: 1:    '❌f(17) = ??? != 1597'
205: 1:  ],
205: 1:  'level': 8,
205: 1:  'nextQuestion': '17',
205: 1:  'questions': [
205: 1:    '1',
205: 1:    '2',
205: 1:    '3',
205: 1:    '4',
205: 1:    '5',
205: 1:    '6',
205: 1:    '7',
205: 1:    '8',
205: 1:    '9',
205: 1:    '10',
205: 1:    '11',
205: 1:    '12',
205: 1:    '13',
205: 1:    '14',
205: 1:    '15',
205: 1:    '16',
205: 1:    '17'
205: 1:  ]
205: 1:}
205: 1:Scores: 10651
205: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597']')
205: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
206: 1:BoardData {
206: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
206: 1:  'expectedAnswer': '2584',
206: 1:  'history': [
206: 1:    {
206: 1:      'answer': '1',
206: 1:      'question': '1',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '1',
206: 1:      'question': '2',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '2',
206: 1:      'question': '3',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '3',
206: 1:      'question': '4',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '5',
206: 1:      'question': '5',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '8',
206: 1:      'question': '6',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '13',
206: 1:      'question': '7',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '21',
206: 1:      'question': '8',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '34',
206: 1:      'question': '9',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '55',
206: 1:      'question': '10',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '89',
206: 1:      'question': '11',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '144',
206: 1:      'question': '12',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '233',
206: 1:      'question': '13',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '377',
206: 1:      'question': '14',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '610',
206: 1:      'question': '15',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '987',
206: 1:      'question': '16',
206: 1:      'valid': true
206: 1:    },
206: 1:    {
206: 1:      'answer': '1597',
206: 1:      'question': '17',
206: 1:      'valid': true
206: 1:    }
206: 1:  ],
206: 1:  'info': [
206: 1:    '✅f(1) = 1',
206: 1:    '✅f(2) = 1',
206: 1:    '✅f(3) = 2',
206: 1:    '✅f(4) = 3',
206: 1:    '✅f(5) = 5',
206: 1:    '✅f(6) = 8',
206: 1:    '✅f(7) = 13',
206: 1:    '✅f(8) = 21',
206: 1:    '✅f(9) = 34',
206: 1:    '✅f(10) = 55',
206: 1:    '✅f(11) = 89',
206: 1:    '✅f(12) = 144',
206: 1:    '✅f(13) = 233',
206: 1:    '✅f(14) = 377',
206: 1:    '✅f(15) = 610',
206: 1:    '✅f(16) = 987',
206: 1:    '✅f(17) = 1597',
206: 1:    '❌f(18) = ??? != 2584'
206: 1:  ],
206: 1:  'level': 8,
206: 1:  'nextQuestion': '18',
206: 1:  'questions': [
206: 1:    '1',
206: 1:    '2',
206: 1:    '3',
206: 1:    '4',
206: 1:    '5',
206: 1:    '6',
206: 1:    '7',
206: 1:    '8',
206: 1:    '9',
206: 1:    '10',
206: 1:    '11',
206: 1:    '12',
206: 1:    '13',
206: 1:    '14',
206: 1:    '15',
206: 1:    '16',
206: 1:    '17',
206: 1:    '18'
206: 1:  ]
206: 1:}
206: 1:Scores: 10659
206: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584']')
206: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
207: 1:BoardData {
207: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
207: 1:  'expectedAnswer': '4181',
207: 1:  'history': [
207: 1:    {
207: 1:      'answer': '1',
207: 1:      'question': '1',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '1',
207: 1:      'question': '2',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '2',
207: 1:      'question': '3',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '3',
207: 1:      'question': '4',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '5',
207: 1:      'question': '5',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '8',
207: 1:      'question': '6',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '13',
207: 1:      'question': '7',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '21',
207: 1:      'question': '8',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '34',
207: 1:      'question': '9',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '55',
207: 1:      'question': '10',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '89',
207: 1:      'question': '11',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '144',
207: 1:      'question': '12',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '233',
207: 1:      'question': '13',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '377',
207: 1:      'question': '14',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '610',
207: 1:      'question': '15',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '987',
207: 1:      'question': '16',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '1597',
207: 1:      'question': '17',
207: 1:      'valid': true
207: 1:    },
207: 1:    {
207: 1:      'answer': '2584',
207: 1:      'question': '18',
207: 1:      'valid': true
207: 1:    }
207: 1:  ],
207: 1:  'info': [
207: 1:    '✅f(1) = 1',
207: 1:    '✅f(2) = 1',
207: 1:    '✅f(3) = 2',
207: 1:    '✅f(4) = 3',
207: 1:    '✅f(5) = 5',
207: 1:    '✅f(6) = 8',
207: 1:    '✅f(7) = 13',
207: 1:    '✅f(8) = 21',
207: 1:    '✅f(9) = 34',
207: 1:    '✅f(10) = 55',
207: 1:    '✅f(11) = 89',
207: 1:    '✅f(12) = 144',
207: 1:    '✅f(13) = 233',
207: 1:    '✅f(14) = 377',
207: 1:    '✅f(15) = 610',
207: 1:    '✅f(16) = 987',
207: 1:    '✅f(17) = 1597',
207: 1:    '✅f(18) = 2584',
207: 1:    '❌f(19) = ??? != 4181'
207: 1:  ],
207: 1:  'level': 8,
207: 1:  'nextQuestion': '19',
207: 1:  'questions': [
207: 1:    '1',
207: 1:    '2',
207: 1:    '3',
207: 1:    '4',
207: 1:    '5',
207: 1:    '6',
207: 1:    '7',
207: 1:    '8',
207: 1:    '9',
207: 1:    '10',
207: 1:    '11',
207: 1:    '12',
207: 1:    '13',
207: 1:    '14',
207: 1:    '15',
207: 1:    '16',
207: 1:    '17',
207: 1:    '18',
207: 1:    '19'
207: 1:  ]
207: 1:}
207: 1:Scores: 10667
207: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181']')
207: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
208: 1:BoardData {
208: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
208: 1:  'expectedAnswer': '6765',
208: 1:  'history': [
208: 1:    {
208: 1:      'answer': '1',
208: 1:      'question': '1',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '1',
208: 1:      'question': '2',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '2',
208: 1:      'question': '3',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '3',
208: 1:      'question': '4',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '5',
208: 1:      'question': '5',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '8',
208: 1:      'question': '6',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '13',
208: 1:      'question': '7',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '21',
208: 1:      'question': '8',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '34',
208: 1:      'question': '9',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '55',
208: 1:      'question': '10',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '89',
208: 1:      'question': '11',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '144',
208: 1:      'question': '12',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '233',
208: 1:      'question': '13',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '377',
208: 1:      'question': '14',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '610',
208: 1:      'question': '15',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '987',
208: 1:      'question': '16',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '1597',
208: 1:      'question': '17',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '2584',
208: 1:      'question': '18',
208: 1:      'valid': true
208: 1:    },
208: 1:    {
208: 1:      'answer': '4181',
208: 1:      'question': '19',
208: 1:      'valid': true
208: 1:    }
208: 1:  ],
208: 1:  'info': [
208: 1:    '✅f(1) = 1',
208: 1:    '✅f(2) = 1',
208: 1:    '✅f(3) = 2',
208: 1:    '✅f(4) = 3',
208: 1:    '✅f(5) = 5',
208: 1:    '✅f(6) = 8',
208: 1:    '✅f(7) = 13',
208: 1:    '✅f(8) = 21',
208: 1:    '✅f(9) = 34',
208: 1:    '✅f(10) = 55',
208: 1:    '✅f(11) = 89',
208: 1:    '✅f(12) = 144',
208: 1:    '✅f(13) = 233',
208: 1:    '✅f(14) = 377',
208: 1:    '✅f(15) = 610',
208: 1:    '✅f(16) = 987',
208: 1:    '✅f(17) = 1597',
208: 1:    '✅f(18) = 2584',
208: 1:    '✅f(19) = 4181',
208: 1:    '❌f(20) = ??? != 6765'
208: 1:  ],
208: 1:  'level': 8,
208: 1:  'nextQuestion': '20',
208: 1:  'questions': [
208: 1:    '1',
208: 1:    '2',
208: 1:    '3',
208: 1:    '4',
208: 1:    '5',
208: 1:    '6',
208: 1:    '7',
208: 1:    '8',
208: 1:    '9',
208: 1:    '10',
208: 1:    '11',
208: 1:    '12',
208: 1:    '13',
208: 1:    '14',
208: 1:    '15',
208: 1:    '16',
208: 1:    '17',
208: 1:    '18',
208: 1:    '19',
208: 1:    '20'
208: 1:  ]
208: 1:}
208: 1:Scores: 10675
208: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765']')
208: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
209: 1:BoardData {
209: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
209: 1:  'expectedAnswer': '10946',
209: 1:  'history': [
209: 1:    {
209: 1:      'answer': '1',
209: 1:      'question': '1',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '1',
209: 1:      'question': '2',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '2',
209: 1:      'question': '3',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '3',
209: 1:      'question': '4',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '5',
209: 1:      'question': '5',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '8',
209: 1:      'question': '6',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '13',
209: 1:      'question': '7',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '21',
209: 1:      'question': '8',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '34',
209: 1:      'question': '9',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '55',
209: 1:      'question': '10',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '89',
209: 1:      'question': '11',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '144',
209: 1:      'question': '12',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '233',
209: 1:      'question': '13',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '377',
209: 1:      'question': '14',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '610',
209: 1:      'question': '15',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '987',
209: 1:      'question': '16',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '1597',
209: 1:      'question': '17',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '2584',
209: 1:      'question': '18',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '4181',
209: 1:      'question': '19',
209: 1:      'valid': true
209: 1:    },
209: 1:    {
209: 1:      'answer': '6765',
209: 1:      'question': '20',
209: 1:      'valid': true
209: 1:    }
209: 1:  ],
209: 1:  'info': [
209: 1:    '✅f(1) = 1',
209: 1:    '✅f(2) = 1',
209: 1:    '✅f(3) = 2',
209: 1:    '✅f(4) = 3',
209: 1:    '✅f(5) = 5',
209: 1:    '✅f(6) = 8',
209: 1:    '✅f(7) = 13',
209: 1:    '✅f(8) = 21',
209: 1:    '✅f(9) = 34',
209: 1:    '✅f(10) = 55',
209: 1:    '✅f(11) = 89',
209: 1:    '✅f(12) = 144',
209: 1:    '✅f(13) = 233',
209: 1:    '✅f(14) = 377',
209: 1:    '✅f(15) = 610',
209: 1:    '✅f(16) = 987',
209: 1:    '✅f(17) = 1597',
209: 1:    '✅f(18) = 2584',
209: 1:    '✅f(19) = 4181',
209: 1:    '✅f(20) = 6765',
209: 1:    '❌f(21) = ??? != 10946'
209: 1:  ],
209: 1:  'level': 8,
209: 1:  'nextQuestion': '21',
209: 1:  'questions': [
209: 1:    '1',
209: 1:    '2',
209: 1:    '3',
209: 1:    '4',
209: 1:    '5',
209: 1:    '6',
209: 1:    '7',
209: 1:    '8',
209: 1:    '9',
209: 1:    '10',
209: 1:    '11',
209: 1:    '12',
209: 1:    '13',
209: 1:    '14',
209: 1:    '15',
209: 1:    '16',
209: 1:    '17',
209: 1:    '18',
209: 1:    '19',
209: 1:    '20',
209: 1:    '21'
209: 1:  ]
209: 1:}
209: 1:Scores: 10683
209: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946']')
209: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
210: 1:BoardData {
210: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
210: 1:  'expectedAnswer': '17711',
210: 1:  'history': [
210: 1:    {
210: 1:      'answer': '1',
210: 1:      'question': '1',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '1',
210: 1:      'question': '2',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '2',
210: 1:      'question': '3',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '3',
210: 1:      'question': '4',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '5',
210: 1:      'question': '5',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '8',
210: 1:      'question': '6',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '13',
210: 1:      'question': '7',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '21',
210: 1:      'question': '8',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '34',
210: 1:      'question': '9',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '55',
210: 1:      'question': '10',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '89',
210: 1:      'question': '11',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '144',
210: 1:      'question': '12',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '233',
210: 1:      'question': '13',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '377',
210: 1:      'question': '14',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '610',
210: 1:      'question': '15',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '987',
210: 1:      'question': '16',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '1597',
210: 1:      'question': '17',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '2584',
210: 1:      'question': '18',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '4181',
210: 1:      'question': '19',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '6765',
210: 1:      'question': '20',
210: 1:      'valid': true
210: 1:    },
210: 1:    {
210: 1:      'answer': '10946',
210: 1:      'question': '21',
210: 1:      'valid': true
210: 1:    }
210: 1:  ],
210: 1:  'info': [
210: 1:    '✅f(1) = 1',
210: 1:    '✅f(2) = 1',
210: 1:    '✅f(3) = 2',
210: 1:    '✅f(4) = 3',
210: 1:    '✅f(5) = 5',
210: 1:    '✅f(6) = 8',
210: 1:    '✅f(7) = 13',
210: 1:    '✅f(8) = 21',
210: 1:    '✅f(9) = 34',
210: 1:    '✅f(10) = 55',
210: 1:    '✅f(11) = 89',
210: 1:    '✅f(12) = 144',
210: 1:    '✅f(13) = 233',
210: 1:    '✅f(14) = 377',
210: 1:    '✅f(15) = 610',
210: 1:    '✅f(16) = 987',
210: 1:    '✅f(17) = 1597',
210: 1:    '✅f(18) = 2584',
210: 1:    '✅f(19) = 4181',
210: 1:    '✅f(20) = 6765',
210: 1:    '✅f(21) = 10946',
210: 1:    '❌f(22) = ??? != 17711'
210: 1:  ],
210: 1:  'level': 8,
210: 1:  'nextQuestion': '22',
210: 1:  'questions': [
210: 1:    '1',
210: 1:    '2',
210: 1:    '3',
210: 1:    '4',
210: 1:    '5',
210: 1:    '6',
210: 1:    '7',
210: 1:    '8',
210: 1:    '9',
210: 1:    '10',
210: 1:    '11',
210: 1:    '12',
210: 1:    '13',
210: 1:    '14',
210: 1:    '15',
210: 1:    '16',
210: 1:    '17',
210: 1:    '18',
210: 1:    '19',
210: 1:    '20',
210: 1:    '21',
210: 1:    '22'
210: 1:  ]
210: 1:}
210: 1:Scores: 10691
210: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711']')
210: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
211: 1:BoardData {
211: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
211: 1:  'expectedAnswer': '28657',
211: 1:  'history': [
211: 1:    {
211: 1:      'answer': '1',
211: 1:      'question': '1',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '1',
211: 1:      'question': '2',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '2',
211: 1:      'question': '3',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '3',
211: 1:      'question': '4',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '5',
211: 1:      'question': '5',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '8',
211: 1:      'question': '6',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '13',
211: 1:      'question': '7',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '21',
211: 1:      'question': '8',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '34',
211: 1:      'question': '9',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '55',
211: 1:      'question': '10',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '89',
211: 1:      'question': '11',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '144',
211: 1:      'question': '12',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '233',
211: 1:      'question': '13',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '377',
211: 1:      'question': '14',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '610',
211: 1:      'question': '15',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '987',
211: 1:      'question': '16',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '1597',
211: 1:      'question': '17',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '2584',
211: 1:      'question': '18',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '4181',
211: 1:      'question': '19',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '6765',
211: 1:      'question': '20',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '10946',
211: 1:      'question': '21',
211: 1:      'valid': true
211: 1:    },
211: 1:    {
211: 1:      'answer': '17711',
211: 1:      'question': '22',
211: 1:      'valid': true
211: 1:    }
211: 1:  ],
211: 1:  'info': [
211: 1:    '✅f(1) = 1',
211: 1:    '✅f(2) = 1',
211: 1:    '✅f(3) = 2',
211: 1:    '✅f(4) = 3',
211: 1:    '✅f(5) = 5',
211: 1:    '✅f(6) = 8',
211: 1:    '✅f(7) = 13',
211: 1:    '✅f(8) = 21',
211: 1:    '✅f(9) = 34',
211: 1:    '✅f(10) = 55',
211: 1:    '✅f(11) = 89',
211: 1:    '✅f(12) = 144',
211: 1:    '✅f(13) = 233',
211: 1:    '✅f(14) = 377',
211: 1:    '✅f(15) = 610',
211: 1:    '✅f(16) = 987',
211: 1:    '✅f(17) = 1597',
211: 1:    '✅f(18) = 2584',
211: 1:    '✅f(19) = 4181',
211: 1:    '✅f(20) = 6765',
211: 1:    '✅f(21) = 10946',
211: 1:    '✅f(22) = 17711',
211: 1:    '❌f(23) = ??? != 28657'
211: 1:  ],
211: 1:  'level': 8,
211: 1:  'nextQuestion': '23',
211: 1:  'questions': [
211: 1:    '1',
211: 1:    '2',
211: 1:    '3',
211: 1:    '4',
211: 1:    '5',
211: 1:    '6',
211: 1:    '7',
211: 1:    '8',
211: 1:    '9',
211: 1:    '10',
211: 1:    '11',
211: 1:    '12',
211: 1:    '13',
211: 1:    '14',
211: 1:    '15',
211: 1:    '16',
211: 1:    '17',
211: 1:    '18',
211: 1:    '19',
211: 1:    '20',
211: 1:    '21',
211: 1:    '22',
211: 1:    '23'
211: 1:  ]
211: 1:}
211: 1:Scores: 10699
211: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657']')
211: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
212: 1:BoardData {
212: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
212: 1:  'expectedAnswer': '46368',
212: 1:  'history': [
212: 1:    {
212: 1:      'answer': '1',
212: 1:      'question': '1',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '1',
212: 1:      'question': '2',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '2',
212: 1:      'question': '3',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '3',
212: 1:      'question': '4',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '5',
212: 1:      'question': '5',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '8',
212: 1:      'question': '6',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '13',
212: 1:      'question': '7',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '21',
212: 1:      'question': '8',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '34',
212: 1:      'question': '9',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '55',
212: 1:      'question': '10',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '89',
212: 1:      'question': '11',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '144',
212: 1:      'question': '12',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '233',
212: 1:      'question': '13',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '377',
212: 1:      'question': '14',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '610',
212: 1:      'question': '15',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '987',
212: 1:      'question': '16',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '1597',
212: 1:      'question': '17',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '2584',
212: 1:      'question': '18',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '4181',
212: 1:      'question': '19',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '6765',
212: 1:      'question': '20',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '10946',
212: 1:      'question': '21',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '17711',
212: 1:      'question': '22',
212: 1:      'valid': true
212: 1:    },
212: 1:    {
212: 1:      'answer': '28657',
212: 1:      'question': '23',
212: 1:      'valid': true
212: 1:    }
212: 1:  ],
212: 1:  'info': [
212: 1:    '✅f(1) = 1',
212: 1:    '✅f(2) = 1',
212: 1:    '✅f(3) = 2',
212: 1:    '✅f(4) = 3',
212: 1:    '✅f(5) = 5',
212: 1:    '✅f(6) = 8',
212: 1:    '✅f(7) = 13',
212: 1:    '✅f(8) = 21',
212: 1:    '✅f(9) = 34',
212: 1:    '✅f(10) = 55',
212: 1:    '✅f(11) = 89',
212: 1:    '✅f(12) = 144',
212: 1:    '✅f(13) = 233',
212: 1:    '✅f(14) = 377',
212: 1:    '✅f(15) = 610',
212: 1:    '✅f(16) = 987',
212: 1:    '✅f(17) = 1597',
212: 1:    '✅f(18) = 2584',
212: 1:    '✅f(19) = 4181',
212: 1:    '✅f(20) = 6765',
212: 1:    '✅f(21) = 10946',
212: 1:    '✅f(22) = 17711',
212: 1:    '✅f(23) = 28657',
212: 1:    '❌f(24) = ??? != 46368'
212: 1:  ],
212: 1:  'level': 8,
212: 1:  'nextQuestion': '24',
212: 1:  'questions': [
212: 1:    '1',
212: 1:    '2',
212: 1:    '3',
212: 1:    '4',
212: 1:    '5',
212: 1:    '6',
212: 1:    '7',
212: 1:    '8',
212: 1:    '9',
212: 1:    '10',
212: 1:    '11',
212: 1:    '12',
212: 1:    '13',
212: 1:    '14',
212: 1:    '15',
212: 1:    '16',
212: 1:    '17',
212: 1:    '18',
212: 1:    '19',
212: 1:    '20',
212: 1:    '21',
212: 1:    '22',
212: 1:    '23',
212: 1:    '24'
212: 1:  ]
212: 1:}
212: 1:Scores: 10707
212: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657', '46368']')
212: 1:Fire Event: PassTest{complexity=20, testCount=25}
------------------------------------------
213: 1:BoardData {
213: 1:  'description': ['Make a method that returns a Fibonacci number from the series by its number:\nf(0) = 0\nf(1) = 1\nf(2) = 0 + 1 = 1\nf(3) = 1 + 1 = 2\nf(4) = 1 + 2 = 3\nf(5) = 2 + 3 = 5\nf(6) = 3 + 5 = 8\nf(7) = 5 + 8 = 13\nf(8) = 8 + 13 = 21\nf(9) = 13 + 21 = 34\netc...'],
213: 1:  'expectedAnswer': '75025',
213: 1:  'history': [
213: 1:    {
213: 1:      'answer': '1',
213: 1:      'question': '1',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '1',
213: 1:      'question': '2',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '2',
213: 1:      'question': '3',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '3',
213: 1:      'question': '4',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '5',
213: 1:      'question': '5',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '8',
213: 1:      'question': '6',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '13',
213: 1:      'question': '7',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '21',
213: 1:      'question': '8',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '34',
213: 1:      'question': '9',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '55',
213: 1:      'question': '10',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '89',
213: 1:      'question': '11',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '144',
213: 1:      'question': '12',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '233',
213: 1:      'question': '13',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '377',
213: 1:      'question': '14',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '610',
213: 1:      'question': '15',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '987',
213: 1:      'question': '16',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '1597',
213: 1:      'question': '17',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '2584',
213: 1:      'question': '18',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '4181',
213: 1:      'question': '19',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '6765',
213: 1:      'question': '20',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '10946',
213: 1:      'question': '21',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '17711',
213: 1:      'question': '22',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '28657',
213: 1:      'question': '23',
213: 1:      'valid': true
213: 1:    },
213: 1:    {
213: 1:      'answer': '46368',
213: 1:      'question': '24',
213: 1:      'valid': true
213: 1:    }
213: 1:  ],
213: 1:  'info': [
213: 1:    '✅f(1) = 1',
213: 1:    '✅f(2) = 1',
213: 1:    '✅f(3) = 2',
213: 1:    '✅f(4) = 3',
213: 1:    '✅f(5) = 5',
213: 1:    '✅f(6) = 8',
213: 1:    '✅f(7) = 13',
213: 1:    '✅f(8) = 21',
213: 1:    '✅f(9) = 34',
213: 1:    '✅f(10) = 55',
213: 1:    '✅f(11) = 89',
213: 1:    '✅f(12) = 144',
213: 1:    '✅f(13) = 233',
213: 1:    '✅f(14) = 377',
213: 1:    '✅f(15) = 610',
213: 1:    '✅f(16) = 987',
213: 1:    '✅f(17) = 1597',
213: 1:    '✅f(18) = 2584',
213: 1:    '✅f(19) = 4181',
213: 1:    '✅f(20) = 6765',
213: 1:    '✅f(21) = 10946',
213: 1:    '✅f(22) = 17711',
213: 1:    '✅f(23) = 28657',
213: 1:    '✅f(24) = 46368',
213: 1:    '❌f(25) = ??? != 75025'
213: 1:  ],
213: 1:  'level': 8,
213: 1:  'nextQuestion': '25',
213: 1:  'questions': [
213: 1:    '1',
213: 1:    '2',
213: 1:    '3',
213: 1:    '4',
213: 1:    '5',
213: 1:    '6',
213: 1:    '7',
213: 1:    '8',
213: 1:    '9',
213: 1:    '10',
213: 1:    '11',
213: 1:    '12',
213: 1:    '13',
213: 1:    '14',
213: 1:    '15',
213: 1:    '16',
213: 1:    '17',
213: 1:    '18',
213: 1:    '19',
213: 1:    '20',
213: 1:    '21',
213: 1:    '22',
213: 1:    '23',
213: 1:    '24',
213: 1:    '25'
213: 1:  ]
213: 1:}
213: 1:Scores: 10715
213: 1:Answer: message('['1', '1', '2', '3', '5', '8', '13', '21', '34', '55', '89', '144', '233', '377', '610', '987', '1597', '2584', '4181', '6765', '10946', '17711', '28657', '46368', '75025']')
213: 1:Fire Event: PassTest{complexity=20, testCount=25}
213: 1:Fire Event: NextAlgorithm{complexity=20, time=0}
------------------------------------------
214: 1:BoardData {
214: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
214: 1:  'history': [
214: 1:    {
214: 1:      'answer': '1',
214: 1:      'question': '1',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '1',
214: 1:      'question': '2',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '2',
214: 1:      'question': '3',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '3',
214: 1:      'question': '4',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '5',
214: 1:      'question': '5',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '8',
214: 1:      'question': '6',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '13',
214: 1:      'question': '7',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '21',
214: 1:      'question': '8',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '34',
214: 1:      'question': '9',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '55',
214: 1:      'question': '10',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '89',
214: 1:      'question': '11',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '144',
214: 1:      'question': '12',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '233',
214: 1:      'question': '13',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '377',
214: 1:      'question': '14',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '610',
214: 1:      'question': '15',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '987',
214: 1:      'question': '16',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '1597',
214: 1:      'question': '17',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '2584',
214: 1:      'question': '18',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '4181',
214: 1:      'question': '19',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '6765',
214: 1:      'question': '20',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '10946',
214: 1:      'question': '21',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '17711',
214: 1:      'question': '22',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '28657',
214: 1:      'question': '23',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '46368',
214: 1:      'question': '24',
214: 1:      'valid': true
214: 1:    },
214: 1:    {
214: 1:      'answer': '75025',
214: 1:      'question': '25',
214: 1:      'valid': true
214: 1:    }
214: 1:  ],
214: 1:  'info': [
214: 1:    '✅f(1) = 1',
214: 1:    '✅f(2) = 1',
214: 1:    '✅f(3) = 2',
214: 1:    '✅f(4) = 3',
214: 1:    '✅f(5) = 5',
214: 1:    '✅f(6) = 8',
214: 1:    '✅f(7) = 13',
214: 1:    '✅f(8) = 21',
214: 1:    '✅f(9) = 34',
214: 1:    '✅f(10) = 55',
214: 1:    '✅f(11) = 89',
214: 1:    '✅f(12) = 144',
214: 1:    '✅f(13) = 233',
214: 1:    '✅f(14) = 377',
214: 1:    '✅f(15) = 610',
214: 1:    '✅f(16) = 987',
214: 1:    '✅f(17) = 1597',
214: 1:    '✅f(18) = 2584',
214: 1:    '✅f(19) = 4181',
214: 1:    '✅f(20) = 6765',
214: 1:    '✅f(21) = 10946',
214: 1:    '✅f(22) = 17711',
214: 1:    '✅f(23) = 28657',
214: 1:    '✅f(24) = 46368',
214: 1:    '✅f(25) = 75025'
214: 1:  ],
214: 1:  'level': 8,
214: 1:  'questions': []
214: 1:}
214: 1:Scores: 13422
214: 1:Answer: message('StartNextLevel')
214: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
215: 1:BoardData {
215: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
215: 1:  'expectedAnswer': '[1]',
215: 1:  'history': [],
215: 1:  'info': ['❌f(1) = ??? != [1]'],
215: 1:  'level': 9,
215: 1:  'nextQuestion': '1',
215: 1:  'questions': ['1']
215: 1:}
215: 1:Scores: 13422
215: 1:Answer: message('['[1]']')
215: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
216: 1:BoardData {
216: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
216: 1:  'expectedAnswer': '[2]',
216: 1:  'history': [{
216: 1:    'answer': '[1]',
216: 1:    'question': '1',
216: 1:    'valid': true
216: 1:  }],
216: 1:  'info': [
216: 1:    '✅f(1) = [1]',
216: 1:    '❌f(2) = ??? != [2]'
216: 1:  ],
216: 1:  'level': 9,
216: 1:  'nextQuestion': '2',
216: 1:  'questions': [
216: 1:    '1',
216: 1:    '2'
216: 1:  ]
216: 1:}
216: 1:Scores: 13432
216: 1:Answer: message('['[1]', '[2]']')
216: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
217: 1:BoardData {
217: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
217: 1:  'expectedAnswer': '[3]',
217: 1:  'history': [
217: 1:    {
217: 1:      'answer': '[1]',
217: 1:      'question': '1',
217: 1:      'valid': true
217: 1:    },
217: 1:    {
217: 1:      'answer': '[2]',
217: 1:      'question': '2',
217: 1:      'valid': true
217: 1:    }
217: 1:  ],
217: 1:  'info': [
217: 1:    '✅f(1) = [1]',
217: 1:    '✅f(2) = [2]',
217: 1:    '❌f(3) = ??? != [3]'
217: 1:  ],
217: 1:  'level': 9,
217: 1:  'nextQuestion': '3',
217: 1:  'questions': [
217: 1:    '1',
217: 1:    '2',
217: 1:    '3'
217: 1:  ]
217: 1:}
217: 1:Scores: 13442
217: 1:Answer: message('['[1]', '[2]', '[3]']')
217: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
218: 1:BoardData {
218: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
218: 1:  'expectedAnswer': '[2,2]',
218: 1:  'history': [
218: 1:    {
218: 1:      'answer': '[1]',
218: 1:      'question': '1',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '[2]',
218: 1:      'question': '2',
218: 1:      'valid': true
218: 1:    },
218: 1:    {
218: 1:      'answer': '[3]',
218: 1:      'question': '3',
218: 1:      'valid': true
218: 1:    }
218: 1:  ],
218: 1:  'info': [
218: 1:    '✅f(1) = [1]',
218: 1:    '✅f(2) = [2]',
218: 1:    '✅f(3) = [3]',
218: 1:    '❌f(4) = ??? != [2,2]'
218: 1:  ],
218: 1:  'level': 9,
218: 1:  'nextQuestion': '4',
218: 1:  'questions': [
218: 1:    '1',
218: 1:    '2',
218: 1:    '3',
218: 1:    '4'
218: 1:  ]
218: 1:}
218: 1:Scores: 13452
218: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]']')
218: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
219: 1:BoardData {
219: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
219: 1:  'expectedAnswer': '[5]',
219: 1:  'history': [
219: 1:    {
219: 1:      'answer': '[1]',
219: 1:      'question': '1',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '[2]',
219: 1:      'question': '2',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '[3]',
219: 1:      'question': '3',
219: 1:      'valid': true
219: 1:    },
219: 1:    {
219: 1:      'answer': '[2,2]',
219: 1:      'question': '4',
219: 1:      'valid': true
219: 1:    }
219: 1:  ],
219: 1:  'info': [
219: 1:    '✅f(1) = [1]',
219: 1:    '✅f(2) = [2]',
219: 1:    '✅f(3) = [3]',
219: 1:    '✅f(4) = [2,2]',
219: 1:    '❌f(5) = ??? != [5]'
219: 1:  ],
219: 1:  'level': 9,
219: 1:  'nextQuestion': '5',
219: 1:  'questions': [
219: 1:    '1',
219: 1:    '2',
219: 1:    '3',
219: 1:    '4',
219: 1:    '5'
219: 1:  ]
219: 1:}
219: 1:Scores: 13462
219: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]']')
219: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
220: 1:BoardData {
220: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
220: 1:  'expectedAnswer': '[2,3]',
220: 1:  'history': [
220: 1:    {
220: 1:      'answer': '[1]',
220: 1:      'question': '1',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '[2]',
220: 1:      'question': '2',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '[3]',
220: 1:      'question': '3',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '[2,2]',
220: 1:      'question': '4',
220: 1:      'valid': true
220: 1:    },
220: 1:    {
220: 1:      'answer': '[5]',
220: 1:      'question': '5',
220: 1:      'valid': true
220: 1:    }
220: 1:  ],
220: 1:  'info': [
220: 1:    '✅f(1) = [1]',
220: 1:    '✅f(2) = [2]',
220: 1:    '✅f(3) = [3]',
220: 1:    '✅f(4) = [2,2]',
220: 1:    '✅f(5) = [5]',
220: 1:    '❌f(6) = ??? != [2,3]'
220: 1:  ],
220: 1:  'level': 9,
220: 1:  'nextQuestion': '6',
220: 1:  'questions': [
220: 1:    '1',
220: 1:    '2',
220: 1:    '3',
220: 1:    '4',
220: 1:    '5',
220: 1:    '6'
220: 1:  ]
220: 1:}
220: 1:Scores: 13472
220: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]']')
220: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
221: 1:BoardData {
221: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
221: 1:  'expectedAnswer': '[7]',
221: 1:  'history': [
221: 1:    {
221: 1:      'answer': '[1]',
221: 1:      'question': '1',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '[2]',
221: 1:      'question': '2',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '[3]',
221: 1:      'question': '3',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '[2,2]',
221: 1:      'question': '4',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '[5]',
221: 1:      'question': '5',
221: 1:      'valid': true
221: 1:    },
221: 1:    {
221: 1:      'answer': '[2,3]',
221: 1:      'question': '6',
221: 1:      'valid': true
221: 1:    }
221: 1:  ],
221: 1:  'info': [
221: 1:    '✅f(1) = [1]',
221: 1:    '✅f(2) = [2]',
221: 1:    '✅f(3) = [3]',
221: 1:    '✅f(4) = [2,2]',
221: 1:    '✅f(5) = [5]',
221: 1:    '✅f(6) = [2,3]',
221: 1:    '❌f(7) = ??? != [7]'
221: 1:  ],
221: 1:  'level': 9,
221: 1:  'nextQuestion': '7',
221: 1:  'questions': [
221: 1:    '1',
221: 1:    '2',
221: 1:    '3',
221: 1:    '4',
221: 1:    '5',
221: 1:    '6',
221: 1:    '7'
221: 1:  ]
221: 1:}
221: 1:Scores: 13482
221: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]']')
221: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
222: 1:BoardData {
222: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
222: 1:  'expectedAnswer': '[2,2,2]',
222: 1:  'history': [
222: 1:    {
222: 1:      'answer': '[1]',
222: 1:      'question': '1',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '[2]',
222: 1:      'question': '2',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '[3]',
222: 1:      'question': '3',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '[2,2]',
222: 1:      'question': '4',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '[5]',
222: 1:      'question': '5',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '[2,3]',
222: 1:      'question': '6',
222: 1:      'valid': true
222: 1:    },
222: 1:    {
222: 1:      'answer': '[7]',
222: 1:      'question': '7',
222: 1:      'valid': true
222: 1:    }
222: 1:  ],
222: 1:  'info': [
222: 1:    '✅f(1) = [1]',
222: 1:    '✅f(2) = [2]',
222: 1:    '✅f(3) = [3]',
222: 1:    '✅f(4) = [2,2]',
222: 1:    '✅f(5) = [5]',
222: 1:    '✅f(6) = [2,3]',
222: 1:    '✅f(7) = [7]',
222: 1:    '❌f(8) = ??? != [2,2,2]'
222: 1:  ],
222: 1:  'level': 9,
222: 1:  'nextQuestion': '8',
222: 1:  'questions': [
222: 1:    '1',
222: 1:    '2',
222: 1:    '3',
222: 1:    '4',
222: 1:    '5',
222: 1:    '6',
222: 1:    '7',
222: 1:    '8'
222: 1:  ]
222: 1:}
222: 1:Scores: 13492
222: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]']')
222: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
223: 1:BoardData {
223: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
223: 1:  'expectedAnswer': '[3,3]',
223: 1:  'history': [
223: 1:    {
223: 1:      'answer': '[1]',
223: 1:      'question': '1',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '[2]',
223: 1:      'question': '2',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '[3]',
223: 1:      'question': '3',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '[2,2]',
223: 1:      'question': '4',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '[5]',
223: 1:      'question': '5',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '[2,3]',
223: 1:      'question': '6',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '[7]',
223: 1:      'question': '7',
223: 1:      'valid': true
223: 1:    },
223: 1:    {
223: 1:      'answer': '[2,2,2]',
223: 1:      'question': '8',
223: 1:      'valid': true
223: 1:    }
223: 1:  ],
223: 1:  'info': [
223: 1:    '✅f(1) = [1]',
223: 1:    '✅f(2) = [2]',
223: 1:    '✅f(3) = [3]',
223: 1:    '✅f(4) = [2,2]',
223: 1:    '✅f(5) = [5]',
223: 1:    '✅f(6) = [2,3]',
223: 1:    '✅f(7) = [7]',
223: 1:    '✅f(8) = [2,2,2]',
223: 1:    '❌f(9) = ??? != [3,3]'
223: 1:  ],
223: 1:  'level': 9,
223: 1:  'nextQuestion': '9',
223: 1:  'questions': [
223: 1:    '1',
223: 1:    '2',
223: 1:    '3',
223: 1:    '4',
223: 1:    '5',
223: 1:    '6',
223: 1:    '7',
223: 1:    '8',
223: 1:    '9'
223: 1:  ]
223: 1:}
223: 1:Scores: 13502
223: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]']')
223: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
224: 1:BoardData {
224: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
224: 1:  'expectedAnswer': '[2,5]',
224: 1:  'history': [
224: 1:    {
224: 1:      'answer': '[1]',
224: 1:      'question': '1',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '[2]',
224: 1:      'question': '2',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '[3]',
224: 1:      'question': '3',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '[2,2]',
224: 1:      'question': '4',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '[5]',
224: 1:      'question': '5',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '[2,3]',
224: 1:      'question': '6',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '[7]',
224: 1:      'question': '7',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '[2,2,2]',
224: 1:      'question': '8',
224: 1:      'valid': true
224: 1:    },
224: 1:    {
224: 1:      'answer': '[3,3]',
224: 1:      'question': '9',
224: 1:      'valid': true
224: 1:    }
224: 1:  ],
224: 1:  'info': [
224: 1:    '✅f(1) = [1]',
224: 1:    '✅f(2) = [2]',
224: 1:    '✅f(3) = [3]',
224: 1:    '✅f(4) = [2,2]',
224: 1:    '✅f(5) = [5]',
224: 1:    '✅f(6) = [2,3]',
224: 1:    '✅f(7) = [7]',
224: 1:    '✅f(8) = [2,2,2]',
224: 1:    '✅f(9) = [3,3]',
224: 1:    '❌f(10) = ??? != [2,5]'
224: 1:  ],
224: 1:  'level': 9,
224: 1:  'nextQuestion': '10',
224: 1:  'questions': [
224: 1:    '1',
224: 1:    '2',
224: 1:    '3',
224: 1:    '4',
224: 1:    '5',
224: 1:    '6',
224: 1:    '7',
224: 1:    '8',
224: 1:    '9',
224: 1:    '10'
224: 1:  ]
224: 1:}
224: 1:Scores: 13512
224: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]']')
224: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
225: 1:BoardData {
225: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
225: 1:  'expectedAnswer': '[11]',
225: 1:  'history': [
225: 1:    {
225: 1:      'answer': '[1]',
225: 1:      'question': '1',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[2]',
225: 1:      'question': '2',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[3]',
225: 1:      'question': '3',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[2,2]',
225: 1:      'question': '4',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[5]',
225: 1:      'question': '5',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[2,3]',
225: 1:      'question': '6',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[7]',
225: 1:      'question': '7',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[2,2,2]',
225: 1:      'question': '8',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[3,3]',
225: 1:      'question': '9',
225: 1:      'valid': true
225: 1:    },
225: 1:    {
225: 1:      'answer': '[2,5]',
225: 1:      'question': '10',
225: 1:      'valid': true
225: 1:    }
225: 1:  ],
225: 1:  'info': [
225: 1:    '✅f(1) = [1]',
225: 1:    '✅f(2) = [2]',
225: 1:    '✅f(3) = [3]',
225: 1:    '✅f(4) = [2,2]',
225: 1:    '✅f(5) = [5]',
225: 1:    '✅f(6) = [2,3]',
225: 1:    '✅f(7) = [7]',
225: 1:    '✅f(8) = [2,2,2]',
225: 1:    '✅f(9) = [3,3]',
225: 1:    '✅f(10) = [2,5]',
225: 1:    '❌f(11) = ??? != [11]'
225: 1:  ],
225: 1:  'level': 9,
225: 1:  'nextQuestion': '11',
225: 1:  'questions': [
225: 1:    '1',
225: 1:    '2',
225: 1:    '3',
225: 1:    '4',
225: 1:    '5',
225: 1:    '6',
225: 1:    '7',
225: 1:    '8',
225: 1:    '9',
225: 1:    '10',
225: 1:    '11'
225: 1:  ]
225: 1:}
225: 1:Scores: 13522
225: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]']')
225: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
226: 1:BoardData {
226: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
226: 1:  'expectedAnswer': '[2,2,3]',
226: 1:  'history': [
226: 1:    {
226: 1:      'answer': '[1]',
226: 1:      'question': '1',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[2]',
226: 1:      'question': '2',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[3]',
226: 1:      'question': '3',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[2,2]',
226: 1:      'question': '4',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[5]',
226: 1:      'question': '5',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[2,3]',
226: 1:      'question': '6',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[7]',
226: 1:      'question': '7',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[2,2,2]',
226: 1:      'question': '8',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[3,3]',
226: 1:      'question': '9',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[2,5]',
226: 1:      'question': '10',
226: 1:      'valid': true
226: 1:    },
226: 1:    {
226: 1:      'answer': '[11]',
226: 1:      'question': '11',
226: 1:      'valid': true
226: 1:    }
226: 1:  ],
226: 1:  'info': [
226: 1:    '✅f(1) = [1]',
226: 1:    '✅f(2) = [2]',
226: 1:    '✅f(3) = [3]',
226: 1:    '✅f(4) = [2,2]',
226: 1:    '✅f(5) = [5]',
226: 1:    '✅f(6) = [2,3]',
226: 1:    '✅f(7) = [7]',
226: 1:    '✅f(8) = [2,2,2]',
226: 1:    '✅f(9) = [3,3]',
226: 1:    '✅f(10) = [2,5]',
226: 1:    '✅f(11) = [11]',
226: 1:    '❌f(12) = ??? != [2,2,3]'
226: 1:  ],
226: 1:  'level': 9,
226: 1:  'nextQuestion': '12',
226: 1:  'questions': [
226: 1:    '1',
226: 1:    '2',
226: 1:    '3',
226: 1:    '4',
226: 1:    '5',
226: 1:    '6',
226: 1:    '7',
226: 1:    '8',
226: 1:    '9',
226: 1:    '10',
226: 1:    '11',
226: 1:    '12'
226: 1:  ]
226: 1:}
226: 1:Scores: 13532
226: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]']')
226: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
227: 1:BoardData {
227: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
227: 1:  'expectedAnswer': '[13]',
227: 1:  'history': [
227: 1:    {
227: 1:      'answer': '[1]',
227: 1:      'question': '1',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[2]',
227: 1:      'question': '2',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[3]',
227: 1:      'question': '3',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[2,2]',
227: 1:      'question': '4',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[5]',
227: 1:      'question': '5',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[2,3]',
227: 1:      'question': '6',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[7]',
227: 1:      'question': '7',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[2,2,2]',
227: 1:      'question': '8',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[3,3]',
227: 1:      'question': '9',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[2,5]',
227: 1:      'question': '10',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[11]',
227: 1:      'question': '11',
227: 1:      'valid': true
227: 1:    },
227: 1:    {
227: 1:      'answer': '[2,2,3]',
227: 1:      'question': '12',
227: 1:      'valid': true
227: 1:    }
227: 1:  ],
227: 1:  'info': [
227: 1:    '✅f(1) = [1]',
227: 1:    '✅f(2) = [2]',
227: 1:    '✅f(3) = [3]',
227: 1:    '✅f(4) = [2,2]',
227: 1:    '✅f(5) = [5]',
227: 1:    '✅f(6) = [2,3]',
227: 1:    '✅f(7) = [7]',
227: 1:    '✅f(8) = [2,2,2]',
227: 1:    '✅f(9) = [3,3]',
227: 1:    '✅f(10) = [2,5]',
227: 1:    '✅f(11) = [11]',
227: 1:    '✅f(12) = [2,2,3]',
227: 1:    '❌f(13) = ??? != [13]'
227: 1:  ],
227: 1:  'level': 9,
227: 1:  'nextQuestion': '13',
227: 1:  'questions': [
227: 1:    '1',
227: 1:    '2',
227: 1:    '3',
227: 1:    '4',
227: 1:    '5',
227: 1:    '6',
227: 1:    '7',
227: 1:    '8',
227: 1:    '9',
227: 1:    '10',
227: 1:    '11',
227: 1:    '12',
227: 1:    '13'
227: 1:  ]
227: 1:}
227: 1:Scores: 13542
227: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]']')
227: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
228: 1:BoardData {
228: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
228: 1:  'expectedAnswer': '[2,7]',
228: 1:  'history': [
228: 1:    {
228: 1:      'answer': '[1]',
228: 1:      'question': '1',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[2]',
228: 1:      'question': '2',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[3]',
228: 1:      'question': '3',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[2,2]',
228: 1:      'question': '4',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[5]',
228: 1:      'question': '5',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[2,3]',
228: 1:      'question': '6',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[7]',
228: 1:      'question': '7',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[2,2,2]',
228: 1:      'question': '8',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[3,3]',
228: 1:      'question': '9',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[2,5]',
228: 1:      'question': '10',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[11]',
228: 1:      'question': '11',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[2,2,3]',
228: 1:      'question': '12',
228: 1:      'valid': true
228: 1:    },
228: 1:    {
228: 1:      'answer': '[13]',
228: 1:      'question': '13',
228: 1:      'valid': true
228: 1:    }
228: 1:  ],
228: 1:  'info': [
228: 1:    '✅f(1) = [1]',
228: 1:    '✅f(2) = [2]',
228: 1:    '✅f(3) = [3]',
228: 1:    '✅f(4) = [2,2]',
228: 1:    '✅f(5) = [5]',
228: 1:    '✅f(6) = [2,3]',
228: 1:    '✅f(7) = [7]',
228: 1:    '✅f(8) = [2,2,2]',
228: 1:    '✅f(9) = [3,3]',
228: 1:    '✅f(10) = [2,5]',
228: 1:    '✅f(11) = [11]',
228: 1:    '✅f(12) = [2,2,3]',
228: 1:    '✅f(13) = [13]',
228: 1:    '❌f(14) = ??? != [2,7]'
228: 1:  ],
228: 1:  'level': 9,
228: 1:  'nextQuestion': '14',
228: 1:  'questions': [
228: 1:    '1',
228: 1:    '2',
228: 1:    '3',
228: 1:    '4',
228: 1:    '5',
228: 1:    '6',
228: 1:    '7',
228: 1:    '8',
228: 1:    '9',
228: 1:    '10',
228: 1:    '11',
228: 1:    '12',
228: 1:    '13',
228: 1:    '14'
228: 1:  ]
228: 1:}
228: 1:Scores: 13552
228: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]']')
228: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
229: 1:BoardData {
229: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
229: 1:  'expectedAnswer': '[3,5]',
229: 1:  'history': [
229: 1:    {
229: 1:      'answer': '[1]',
229: 1:      'question': '1',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[2]',
229: 1:      'question': '2',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[3]',
229: 1:      'question': '3',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[2,2]',
229: 1:      'question': '4',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[5]',
229: 1:      'question': '5',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[2,3]',
229: 1:      'question': '6',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[7]',
229: 1:      'question': '7',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[2,2,2]',
229: 1:      'question': '8',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[3,3]',
229: 1:      'question': '9',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[2,5]',
229: 1:      'question': '10',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[11]',
229: 1:      'question': '11',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[2,2,3]',
229: 1:      'question': '12',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[13]',
229: 1:      'question': '13',
229: 1:      'valid': true
229: 1:    },
229: 1:    {
229: 1:      'answer': '[2,7]',
229: 1:      'question': '14',
229: 1:      'valid': true
229: 1:    }
229: 1:  ],
229: 1:  'info': [
229: 1:    '✅f(1) = [1]',
229: 1:    '✅f(2) = [2]',
229: 1:    '✅f(3) = [3]',
229: 1:    '✅f(4) = [2,2]',
229: 1:    '✅f(5) = [5]',
229: 1:    '✅f(6) = [2,3]',
229: 1:    '✅f(7) = [7]',
229: 1:    '✅f(8) = [2,2,2]',
229: 1:    '✅f(9) = [3,3]',
229: 1:    '✅f(10) = [2,5]',
229: 1:    '✅f(11) = [11]',
229: 1:    '✅f(12) = [2,2,3]',
229: 1:    '✅f(13) = [13]',
229: 1:    '✅f(14) = [2,7]',
229: 1:    '❌f(15) = ??? != [3,5]'
229: 1:  ],
229: 1:  'level': 9,
229: 1:  'nextQuestion': '15',
229: 1:  'questions': [
229: 1:    '1',
229: 1:    '2',
229: 1:    '3',
229: 1:    '4',
229: 1:    '5',
229: 1:    '6',
229: 1:    '7',
229: 1:    '8',
229: 1:    '9',
229: 1:    '10',
229: 1:    '11',
229: 1:    '12',
229: 1:    '13',
229: 1:    '14',
229: 1:    '15'
229: 1:  ]
229: 1:}
229: 1:Scores: 13562
229: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]']')
229: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
230: 1:BoardData {
230: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
230: 1:  'expectedAnswer': '[2,2,2,2]',
230: 1:  'history': [
230: 1:    {
230: 1:      'answer': '[1]',
230: 1:      'question': '1',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[2]',
230: 1:      'question': '2',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[3]',
230: 1:      'question': '3',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[2,2]',
230: 1:      'question': '4',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[5]',
230: 1:      'question': '5',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[2,3]',
230: 1:      'question': '6',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[7]',
230: 1:      'question': '7',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[2,2,2]',
230: 1:      'question': '8',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[3,3]',
230: 1:      'question': '9',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[2,5]',
230: 1:      'question': '10',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[11]',
230: 1:      'question': '11',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[2,2,3]',
230: 1:      'question': '12',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[13]',
230: 1:      'question': '13',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[2,7]',
230: 1:      'question': '14',
230: 1:      'valid': true
230: 1:    },
230: 1:    {
230: 1:      'answer': '[3,5]',
230: 1:      'question': '15',
230: 1:      'valid': true
230: 1:    }
230: 1:  ],
230: 1:  'info': [
230: 1:    '✅f(1) = [1]',
230: 1:    '✅f(2) = [2]',
230: 1:    '✅f(3) = [3]',
230: 1:    '✅f(4) = [2,2]',
230: 1:    '✅f(5) = [5]',
230: 1:    '✅f(6) = [2,3]',
230: 1:    '✅f(7) = [7]',
230: 1:    '✅f(8) = [2,2,2]',
230: 1:    '✅f(9) = [3,3]',
230: 1:    '✅f(10) = [2,5]',
230: 1:    '✅f(11) = [11]',
230: 1:    '✅f(12) = [2,2,3]',
230: 1:    '✅f(13) = [13]',
230: 1:    '✅f(14) = [2,7]',
230: 1:    '✅f(15) = [3,5]',
230: 1:    '❌f(16) = ??? != [2,2,2,2]'
230: 1:  ],
230: 1:  'level': 9,
230: 1:  'nextQuestion': '16',
230: 1:  'questions': [
230: 1:    '1',
230: 1:    '2',
230: 1:    '3',
230: 1:    '4',
230: 1:    '5',
230: 1:    '6',
230: 1:    '7',
230: 1:    '8',
230: 1:    '9',
230: 1:    '10',
230: 1:    '11',
230: 1:    '12',
230: 1:    '13',
230: 1:    '14',
230: 1:    '15',
230: 1:    '16'
230: 1:  ]
230: 1:}
230: 1:Scores: 13572
230: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]']')
230: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
231: 1:BoardData {
231: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
231: 1:  'expectedAnswer': '[17]',
231: 1:  'history': [
231: 1:    {
231: 1:      'answer': '[1]',
231: 1:      'question': '1',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[2]',
231: 1:      'question': '2',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[3]',
231: 1:      'question': '3',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[2,2]',
231: 1:      'question': '4',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[5]',
231: 1:      'question': '5',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[2,3]',
231: 1:      'question': '6',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[7]',
231: 1:      'question': '7',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[2,2,2]',
231: 1:      'question': '8',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[3,3]',
231: 1:      'question': '9',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[2,5]',
231: 1:      'question': '10',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[11]',
231: 1:      'question': '11',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[2,2,3]',
231: 1:      'question': '12',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[13]',
231: 1:      'question': '13',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[2,7]',
231: 1:      'question': '14',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[3,5]',
231: 1:      'question': '15',
231: 1:      'valid': true
231: 1:    },
231: 1:    {
231: 1:      'answer': '[2,2,2,2]',
231: 1:      'question': '16',
231: 1:      'valid': true
231: 1:    }
231: 1:  ],
231: 1:  'info': [
231: 1:    '✅f(1) = [1]',
231: 1:    '✅f(2) = [2]',
231: 1:    '✅f(3) = [3]',
231: 1:    '✅f(4) = [2,2]',
231: 1:    '✅f(5) = [5]',
231: 1:    '✅f(6) = [2,3]',
231: 1:    '✅f(7) = [7]',
231: 1:    '✅f(8) = [2,2,2]',
231: 1:    '✅f(9) = [3,3]',
231: 1:    '✅f(10) = [2,5]',
231: 1:    '✅f(11) = [11]',
231: 1:    '✅f(12) = [2,2,3]',
231: 1:    '✅f(13) = [13]',
231: 1:    '✅f(14) = [2,7]',
231: 1:    '✅f(15) = [3,5]',
231: 1:    '✅f(16) = [2,2,2,2]',
231: 1:    '❌f(17) = ??? != [17]'
231: 1:  ],
231: 1:  'level': 9,
231: 1:  'nextQuestion': '17',
231: 1:  'questions': [
231: 1:    '1',
231: 1:    '2',
231: 1:    '3',
231: 1:    '4',
231: 1:    '5',
231: 1:    '6',
231: 1:    '7',
231: 1:    '8',
231: 1:    '9',
231: 1:    '10',
231: 1:    '11',
231: 1:    '12',
231: 1:    '13',
231: 1:    '14',
231: 1:    '15',
231: 1:    '16',
231: 1:    '17'
231: 1:  ]
231: 1:}
231: 1:Scores: 13582
231: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]']')
231: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
232: 1:BoardData {
232: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
232: 1:  'expectedAnswer': '[2,3,3]',
232: 1:  'history': [
232: 1:    {
232: 1:      'answer': '[1]',
232: 1:      'question': '1',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[2]',
232: 1:      'question': '2',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[3]',
232: 1:      'question': '3',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[2,2]',
232: 1:      'question': '4',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[5]',
232: 1:      'question': '5',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[2,3]',
232: 1:      'question': '6',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[7]',
232: 1:      'question': '7',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[2,2,2]',
232: 1:      'question': '8',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[3,3]',
232: 1:      'question': '9',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[2,5]',
232: 1:      'question': '10',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[11]',
232: 1:      'question': '11',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[2,2,3]',
232: 1:      'question': '12',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[13]',
232: 1:      'question': '13',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[2,7]',
232: 1:      'question': '14',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[3,5]',
232: 1:      'question': '15',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[2,2,2,2]',
232: 1:      'question': '16',
232: 1:      'valid': true
232: 1:    },
232: 1:    {
232: 1:      'answer': '[17]',
232: 1:      'question': '17',
232: 1:      'valid': true
232: 1:    }
232: 1:  ],
232: 1:  'info': [
232: 1:    '✅f(1) = [1]',
232: 1:    '✅f(2) = [2]',
232: 1:    '✅f(3) = [3]',
232: 1:    '✅f(4) = [2,2]',
232: 1:    '✅f(5) = [5]',
232: 1:    '✅f(6) = [2,3]',
232: 1:    '✅f(7) = [7]',
232: 1:    '✅f(8) = [2,2,2]',
232: 1:    '✅f(9) = [3,3]',
232: 1:    '✅f(10) = [2,5]',
232: 1:    '✅f(11) = [11]',
232: 1:    '✅f(12) = [2,2,3]',
232: 1:    '✅f(13) = [13]',
232: 1:    '✅f(14) = [2,7]',
232: 1:    '✅f(15) = [3,5]',
232: 1:    '✅f(16) = [2,2,2,2]',
232: 1:    '✅f(17) = [17]',
232: 1:    '❌f(18) = ??? != [2,3,3]'
232: 1:  ],
232: 1:  'level': 9,
232: 1:  'nextQuestion': '18',
232: 1:  'questions': [
232: 1:    '1',
232: 1:    '2',
232: 1:    '3',
232: 1:    '4',
232: 1:    '5',
232: 1:    '6',
232: 1:    '7',
232: 1:    '8',
232: 1:    '9',
232: 1:    '10',
232: 1:    '11',
232: 1:    '12',
232: 1:    '13',
232: 1:    '14',
232: 1:    '15',
232: 1:    '16',
232: 1:    '17',
232: 1:    '18'
232: 1:  ]
232: 1:}
232: 1:Scores: 13592
232: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]']')
232: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
233: 1:BoardData {
233: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
233: 1:  'expectedAnswer': '[19]',
233: 1:  'history': [
233: 1:    {
233: 1:      'answer': '[1]',
233: 1:      'question': '1',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2]',
233: 1:      'question': '2',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[3]',
233: 1:      'question': '3',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2,2]',
233: 1:      'question': '4',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[5]',
233: 1:      'question': '5',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2,3]',
233: 1:      'question': '6',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[7]',
233: 1:      'question': '7',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2,2,2]',
233: 1:      'question': '8',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[3,3]',
233: 1:      'question': '9',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2,5]',
233: 1:      'question': '10',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[11]',
233: 1:      'question': '11',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2,2,3]',
233: 1:      'question': '12',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[13]',
233: 1:      'question': '13',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2,7]',
233: 1:      'question': '14',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[3,5]',
233: 1:      'question': '15',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2,2,2,2]',
233: 1:      'question': '16',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[17]',
233: 1:      'question': '17',
233: 1:      'valid': true
233: 1:    },
233: 1:    {
233: 1:      'answer': '[2,3,3]',
233: 1:      'question': '18',
233: 1:      'valid': true
233: 1:    }
233: 1:  ],
233: 1:  'info': [
233: 1:    '✅f(1) = [1]',
233: 1:    '✅f(2) = [2]',
233: 1:    '✅f(3) = [3]',
233: 1:    '✅f(4) = [2,2]',
233: 1:    '✅f(5) = [5]',
233: 1:    '✅f(6) = [2,3]',
233: 1:    '✅f(7) = [7]',
233: 1:    '✅f(8) = [2,2,2]',
233: 1:    '✅f(9) = [3,3]',
233: 1:    '✅f(10) = [2,5]',
233: 1:    '✅f(11) = [11]',
233: 1:    '✅f(12) = [2,2,3]',
233: 1:    '✅f(13) = [13]',
233: 1:    '✅f(14) = [2,7]',
233: 1:    '✅f(15) = [3,5]',
233: 1:    '✅f(16) = [2,2,2,2]',
233: 1:    '✅f(17) = [17]',
233: 1:    '✅f(18) = [2,3,3]',
233: 1:    '❌f(19) = ??? != [19]'
233: 1:  ],
233: 1:  'level': 9,
233: 1:  'nextQuestion': '19',
233: 1:  'questions': [
233: 1:    '1',
233: 1:    '2',
233: 1:    '3',
233: 1:    '4',
233: 1:    '5',
233: 1:    '6',
233: 1:    '7',
233: 1:    '8',
233: 1:    '9',
233: 1:    '10',
233: 1:    '11',
233: 1:    '12',
233: 1:    '13',
233: 1:    '14',
233: 1:    '15',
233: 1:    '16',
233: 1:    '17',
233: 1:    '18',
233: 1:    '19'
233: 1:  ]
233: 1:}
233: 1:Scores: 13602
233: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]']')
233: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
234: 1:BoardData {
234: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
234: 1:  'expectedAnswer': '[2,2,5]',
234: 1:  'history': [
234: 1:    {
234: 1:      'answer': '[1]',
234: 1:      'question': '1',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2]',
234: 1:      'question': '2',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[3]',
234: 1:      'question': '3',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2,2]',
234: 1:      'question': '4',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[5]',
234: 1:      'question': '5',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2,3]',
234: 1:      'question': '6',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[7]',
234: 1:      'question': '7',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2,2,2]',
234: 1:      'question': '8',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[3,3]',
234: 1:      'question': '9',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2,5]',
234: 1:      'question': '10',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[11]',
234: 1:      'question': '11',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2,2,3]',
234: 1:      'question': '12',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[13]',
234: 1:      'question': '13',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2,7]',
234: 1:      'question': '14',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[3,5]',
234: 1:      'question': '15',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2,2,2,2]',
234: 1:      'question': '16',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[17]',
234: 1:      'question': '17',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[2,3,3]',
234: 1:      'question': '18',
234: 1:      'valid': true
234: 1:    },
234: 1:    {
234: 1:      'answer': '[19]',
234: 1:      'question': '19',
234: 1:      'valid': true
234: 1:    }
234: 1:  ],
234: 1:  'info': [
234: 1:    '✅f(1) = [1]',
234: 1:    '✅f(2) = [2]',
234: 1:    '✅f(3) = [3]',
234: 1:    '✅f(4) = [2,2]',
234: 1:    '✅f(5) = [5]',
234: 1:    '✅f(6) = [2,3]',
234: 1:    '✅f(7) = [7]',
234: 1:    '✅f(8) = [2,2,2]',
234: 1:    '✅f(9) = [3,3]',
234: 1:    '✅f(10) = [2,5]',
234: 1:    '✅f(11) = [11]',
234: 1:    '✅f(12) = [2,2,3]',
234: 1:    '✅f(13) = [13]',
234: 1:    '✅f(14) = [2,7]',
234: 1:    '✅f(15) = [3,5]',
234: 1:    '✅f(16) = [2,2,2,2]',
234: 1:    '✅f(17) = [17]',
234: 1:    '✅f(18) = [2,3,3]',
234: 1:    '✅f(19) = [19]',
234: 1:    '❌f(20) = ??? != [2,2,5]'
234: 1:  ],
234: 1:  'level': 9,
234: 1:  'nextQuestion': '20',
234: 1:  'questions': [
234: 1:    '1',
234: 1:    '2',
234: 1:    '3',
234: 1:    '4',
234: 1:    '5',
234: 1:    '6',
234: 1:    '7',
234: 1:    '8',
234: 1:    '9',
234: 1:    '10',
234: 1:    '11',
234: 1:    '12',
234: 1:    '13',
234: 1:    '14',
234: 1:    '15',
234: 1:    '16',
234: 1:    '17',
234: 1:    '18',
234: 1:    '19',
234: 1:    '20'
234: 1:  ]
234: 1:}
234: 1:Scores: 13612
234: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]']')
234: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
235: 1:BoardData {
235: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
235: 1:  'expectedAnswer': '[3,7]',
235: 1:  'history': [
235: 1:    {
235: 1:      'answer': '[1]',
235: 1:      'question': '1',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2]',
235: 1:      'question': '2',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[3]',
235: 1:      'question': '3',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,2]',
235: 1:      'question': '4',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[5]',
235: 1:      'question': '5',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,3]',
235: 1:      'question': '6',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[7]',
235: 1:      'question': '7',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,2,2]',
235: 1:      'question': '8',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[3,3]',
235: 1:      'question': '9',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,5]',
235: 1:      'question': '10',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[11]',
235: 1:      'question': '11',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,2,3]',
235: 1:      'question': '12',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[13]',
235: 1:      'question': '13',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,7]',
235: 1:      'question': '14',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[3,5]',
235: 1:      'question': '15',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,2,2,2]',
235: 1:      'question': '16',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[17]',
235: 1:      'question': '17',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,3,3]',
235: 1:      'question': '18',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[19]',
235: 1:      'question': '19',
235: 1:      'valid': true
235: 1:    },
235: 1:    {
235: 1:      'answer': '[2,2,5]',
235: 1:      'question': '20',
235: 1:      'valid': true
235: 1:    }
235: 1:  ],
235: 1:  'info': [
235: 1:    '✅f(1) = [1]',
235: 1:    '✅f(2) = [2]',
235: 1:    '✅f(3) = [3]',
235: 1:    '✅f(4) = [2,2]',
235: 1:    '✅f(5) = [5]',
235: 1:    '✅f(6) = [2,3]',
235: 1:    '✅f(7) = [7]',
235: 1:    '✅f(8) = [2,2,2]',
235: 1:    '✅f(9) = [3,3]',
235: 1:    '✅f(10) = [2,5]',
235: 1:    '✅f(11) = [11]',
235: 1:    '✅f(12) = [2,2,3]',
235: 1:    '✅f(13) = [13]',
235: 1:    '✅f(14) = [2,7]',
235: 1:    '✅f(15) = [3,5]',
235: 1:    '✅f(16) = [2,2,2,2]',
235: 1:    '✅f(17) = [17]',
235: 1:    '✅f(18) = [2,3,3]',
235: 1:    '✅f(19) = [19]',
235: 1:    '✅f(20) = [2,2,5]',
235: 1:    '❌f(21) = ??? != [3,7]'
235: 1:  ],
235: 1:  'level': 9,
235: 1:  'nextQuestion': '21',
235: 1:  'questions': [
235: 1:    '1',
235: 1:    '2',
235: 1:    '3',
235: 1:    '4',
235: 1:    '5',
235: 1:    '6',
235: 1:    '7',
235: 1:    '8',
235: 1:    '9',
235: 1:    '10',
235: 1:    '11',
235: 1:    '12',
235: 1:    '13',
235: 1:    '14',
235: 1:    '15',
235: 1:    '16',
235: 1:    '17',
235: 1:    '18',
235: 1:    '19',
235: 1:    '20',
235: 1:    '21'
235: 1:  ]
235: 1:}
235: 1:Scores: 13622
235: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]']')
235: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
236: 1:BoardData {
236: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
236: 1:  'expectedAnswer': '[2,11]',
236: 1:  'history': [
236: 1:    {
236: 1:      'answer': '[1]',
236: 1:      'question': '1',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2]',
236: 1:      'question': '2',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[3]',
236: 1:      'question': '3',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,2]',
236: 1:      'question': '4',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[5]',
236: 1:      'question': '5',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,3]',
236: 1:      'question': '6',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[7]',
236: 1:      'question': '7',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,2,2]',
236: 1:      'question': '8',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[3,3]',
236: 1:      'question': '9',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,5]',
236: 1:      'question': '10',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[11]',
236: 1:      'question': '11',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,2,3]',
236: 1:      'question': '12',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[13]',
236: 1:      'question': '13',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,7]',
236: 1:      'question': '14',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[3,5]',
236: 1:      'question': '15',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,2,2,2]',
236: 1:      'question': '16',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[17]',
236: 1:      'question': '17',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,3,3]',
236: 1:      'question': '18',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[19]',
236: 1:      'question': '19',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[2,2,5]',
236: 1:      'question': '20',
236: 1:      'valid': true
236: 1:    },
236: 1:    {
236: 1:      'answer': '[3,7]',
236: 1:      'question': '21',
236: 1:      'valid': true
236: 1:    }
236: 1:  ],
236: 1:  'info': [
236: 1:    '✅f(1) = [1]',
236: 1:    '✅f(2) = [2]',
236: 1:    '✅f(3) = [3]',
236: 1:    '✅f(4) = [2,2]',
236: 1:    '✅f(5) = [5]',
236: 1:    '✅f(6) = [2,3]',
236: 1:    '✅f(7) = [7]',
236: 1:    '✅f(8) = [2,2,2]',
236: 1:    '✅f(9) = [3,3]',
236: 1:    '✅f(10) = [2,5]',
236: 1:    '✅f(11) = [11]',
236: 1:    '✅f(12) = [2,2,3]',
236: 1:    '✅f(13) = [13]',
236: 1:    '✅f(14) = [2,7]',
236: 1:    '✅f(15) = [3,5]',
236: 1:    '✅f(16) = [2,2,2,2]',
236: 1:    '✅f(17) = [17]',
236: 1:    '✅f(18) = [2,3,3]',
236: 1:    '✅f(19) = [19]',
236: 1:    '✅f(20) = [2,2,5]',
236: 1:    '✅f(21) = [3,7]',
236: 1:    '❌f(22) = ??? != [2,11]'
236: 1:  ],
236: 1:  'level': 9,
236: 1:  'nextQuestion': '22',
236: 1:  'questions': [
236: 1:    '1',
236: 1:    '2',
236: 1:    '3',
236: 1:    '4',
236: 1:    '5',
236: 1:    '6',
236: 1:    '7',
236: 1:    '8',
236: 1:    '9',
236: 1:    '10',
236: 1:    '11',
236: 1:    '12',
236: 1:    '13',
236: 1:    '14',
236: 1:    '15',
236: 1:    '16',
236: 1:    '17',
236: 1:    '18',
236: 1:    '19',
236: 1:    '20',
236: 1:    '21',
236: 1:    '22'
236: 1:  ]
236: 1:}
236: 1:Scores: 13632
236: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]']')
236: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
237: 1:BoardData {
237: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
237: 1:  'expectedAnswer': '[23]',
237: 1:  'history': [
237: 1:    {
237: 1:      'answer': '[1]',
237: 1:      'question': '1',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2]',
237: 1:      'question': '2',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[3]',
237: 1:      'question': '3',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,2]',
237: 1:      'question': '4',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[5]',
237: 1:      'question': '5',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,3]',
237: 1:      'question': '6',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[7]',
237: 1:      'question': '7',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,2,2]',
237: 1:      'question': '8',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[3,3]',
237: 1:      'question': '9',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,5]',
237: 1:      'question': '10',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[11]',
237: 1:      'question': '11',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,2,3]',
237: 1:      'question': '12',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[13]',
237: 1:      'question': '13',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,7]',
237: 1:      'question': '14',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[3,5]',
237: 1:      'question': '15',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,2,2,2]',
237: 1:      'question': '16',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[17]',
237: 1:      'question': '17',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,3,3]',
237: 1:      'question': '18',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[19]',
237: 1:      'question': '19',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,2,5]',
237: 1:      'question': '20',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[3,7]',
237: 1:      'question': '21',
237: 1:      'valid': true
237: 1:    },
237: 1:    {
237: 1:      'answer': '[2,11]',
237: 1:      'question': '22',
237: 1:      'valid': true
237: 1:    }
237: 1:  ],
237: 1:  'info': [
237: 1:    '✅f(1) = [1]',
237: 1:    '✅f(2) = [2]',
237: 1:    '✅f(3) = [3]',
237: 1:    '✅f(4) = [2,2]',
237: 1:    '✅f(5) = [5]',
237: 1:    '✅f(6) = [2,3]',
237: 1:    '✅f(7) = [7]',
237: 1:    '✅f(8) = [2,2,2]',
237: 1:    '✅f(9) = [3,3]',
237: 1:    '✅f(10) = [2,5]',
237: 1:    '✅f(11) = [11]',
237: 1:    '✅f(12) = [2,2,3]',
237: 1:    '✅f(13) = [13]',
237: 1:    '✅f(14) = [2,7]',
237: 1:    '✅f(15) = [3,5]',
237: 1:    '✅f(16) = [2,2,2,2]',
237: 1:    '✅f(17) = [17]',
237: 1:    '✅f(18) = [2,3,3]',
237: 1:    '✅f(19) = [19]',
237: 1:    '✅f(20) = [2,2,5]',
237: 1:    '✅f(21) = [3,7]',
237: 1:    '✅f(22) = [2,11]',
237: 1:    '❌f(23) = ??? != [23]'
237: 1:  ],
237: 1:  'level': 9,
237: 1:  'nextQuestion': '23',
237: 1:  'questions': [
237: 1:    '1',
237: 1:    '2',
237: 1:    '3',
237: 1:    '4',
237: 1:    '5',
237: 1:    '6',
237: 1:    '7',
237: 1:    '8',
237: 1:    '9',
237: 1:    '10',
237: 1:    '11',
237: 1:    '12',
237: 1:    '13',
237: 1:    '14',
237: 1:    '15',
237: 1:    '16',
237: 1:    '17',
237: 1:    '18',
237: 1:    '19',
237: 1:    '20',
237: 1:    '21',
237: 1:    '22',
237: 1:    '23'
237: 1:  ]
237: 1:}
237: 1:Scores: 13642
237: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]']')
237: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
238: 1:BoardData {
238: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
238: 1:  'expectedAnswer': '[2,2,2,3]',
238: 1:  'history': [
238: 1:    {
238: 1:      'answer': '[1]',
238: 1:      'question': '1',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2]',
238: 1:      'question': '2',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[3]',
238: 1:      'question': '3',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,2]',
238: 1:      'question': '4',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[5]',
238: 1:      'question': '5',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,3]',
238: 1:      'question': '6',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[7]',
238: 1:      'question': '7',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,2,2]',
238: 1:      'question': '8',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[3,3]',
238: 1:      'question': '9',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,5]',
238: 1:      'question': '10',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[11]',
238: 1:      'question': '11',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,2,3]',
238: 1:      'question': '12',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[13]',
238: 1:      'question': '13',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,7]',
238: 1:      'question': '14',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[3,5]',
238: 1:      'question': '15',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,2,2,2]',
238: 1:      'question': '16',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[17]',
238: 1:      'question': '17',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,3,3]',
238: 1:      'question': '18',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[19]',
238: 1:      'question': '19',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,2,5]',
238: 1:      'question': '20',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[3,7]',
238: 1:      'question': '21',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[2,11]',
238: 1:      'question': '22',
238: 1:      'valid': true
238: 1:    },
238: 1:    {
238: 1:      'answer': '[23]',
238: 1:      'question': '23',
238: 1:      'valid': true
238: 1:    }
238: 1:  ],
238: 1:  'info': [
238: 1:    '✅f(1) = [1]',
238: 1:    '✅f(2) = [2]',
238: 1:    '✅f(3) = [3]',
238: 1:    '✅f(4) = [2,2]',
238: 1:    '✅f(5) = [5]',
238: 1:    '✅f(6) = [2,3]',
238: 1:    '✅f(7) = [7]',
238: 1:    '✅f(8) = [2,2,2]',
238: 1:    '✅f(9) = [3,3]',
238: 1:    '✅f(10) = [2,5]',
238: 1:    '✅f(11) = [11]',
238: 1:    '✅f(12) = [2,2,3]',
238: 1:    '✅f(13) = [13]',
238: 1:    '✅f(14) = [2,7]',
238: 1:    '✅f(15) = [3,5]',
238: 1:    '✅f(16) = [2,2,2,2]',
238: 1:    '✅f(17) = [17]',
238: 1:    '✅f(18) = [2,3,3]',
238: 1:    '✅f(19) = [19]',
238: 1:    '✅f(20) = [2,2,5]',
238: 1:    '✅f(21) = [3,7]',
238: 1:    '✅f(22) = [2,11]',
238: 1:    '✅f(23) = [23]',
238: 1:    '❌f(24) = ??? != [2,2,2,3]'
238: 1:  ],
238: 1:  'level': 9,
238: 1:  'nextQuestion': '24',
238: 1:  'questions': [
238: 1:    '1',
238: 1:    '2',
238: 1:    '3',
238: 1:    '4',
238: 1:    '5',
238: 1:    '6',
238: 1:    '7',
238: 1:    '8',
238: 1:    '9',
238: 1:    '10',
238: 1:    '11',
238: 1:    '12',
238: 1:    '13',
238: 1:    '14',
238: 1:    '15',
238: 1:    '16',
238: 1:    '17',
238: 1:    '18',
238: 1:    '19',
238: 1:    '20',
238: 1:    '21',
238: 1:    '22',
238: 1:    '23',
238: 1:    '24'
238: 1:  ]
238: 1:}
238: 1:Scores: 13652
238: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]', '[2,2,2,3]']')
238: 1:Fire Event: PassTest{complexity=25, testCount=25}
------------------------------------------
239: 1:BoardData {
239: 1:  'description': ['Divide an integer into multiples of prime numbers:\n1 -> [1]\n2 -> [2]\n3 -> [3]\n4 -> [2,2]\n6 -> [2,3]\n9 -> [3,3]\n12 -> [2,2,3]\n15 -> [3,5]\netc...'],
239: 1:  'expectedAnswer': '[5,5]',
239: 1:  'history': [
239: 1:    {
239: 1:      'answer': '[1]',
239: 1:      'question': '1',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2]',
239: 1:      'question': '2',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[3]',
239: 1:      'question': '3',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,2]',
239: 1:      'question': '4',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[5]',
239: 1:      'question': '5',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,3]',
239: 1:      'question': '6',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[7]',
239: 1:      'question': '7',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,2,2]',
239: 1:      'question': '8',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[3,3]',
239: 1:      'question': '9',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,5]',
239: 1:      'question': '10',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[11]',
239: 1:      'question': '11',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,2,3]',
239: 1:      'question': '12',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[13]',
239: 1:      'question': '13',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,7]',
239: 1:      'question': '14',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[3,5]',
239: 1:      'question': '15',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,2,2,2]',
239: 1:      'question': '16',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[17]',
239: 1:      'question': '17',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,3,3]',
239: 1:      'question': '18',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[19]',
239: 1:      'question': '19',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,2,5]',
239: 1:      'question': '20',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[3,7]',
239: 1:      'question': '21',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,11]',
239: 1:      'question': '22',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[23]',
239: 1:      'question': '23',
239: 1:      'valid': true
239: 1:    },
239: 1:    {
239: 1:      'answer': '[2,2,2,3]',
239: 1:      'question': '24',
239: 1:      'valid': true
239: 1:    }
239: 1:  ],
239: 1:  'info': [
239: 1:    '✅f(1) = [1]',
239: 1:    '✅f(2) = [2]',
239: 1:    '✅f(3) = [3]',
239: 1:    '✅f(4) = [2,2]',
239: 1:    '✅f(5) = [5]',
239: 1:    '✅f(6) = [2,3]',
239: 1:    '✅f(7) = [7]',
239: 1:    '✅f(8) = [2,2,2]',
239: 1:    '✅f(9) = [3,3]',
239: 1:    '✅f(10) = [2,5]',
239: 1:    '✅f(11) = [11]',
239: 1:    '✅f(12) = [2,2,3]',
239: 1:    '✅f(13) = [13]',
239: 1:    '✅f(14) = [2,7]',
239: 1:    '✅f(15) = [3,5]',
239: 1:    '✅f(16) = [2,2,2,2]',
239: 1:    '✅f(17) = [17]',
239: 1:    '✅f(18) = [2,3,3]',
239: 1:    '✅f(19) = [19]',
239: 1:    '✅f(20) = [2,2,5]',
239: 1:    '✅f(21) = [3,7]',
239: 1:    '✅f(22) = [2,11]',
239: 1:    '✅f(23) = [23]',
239: 1:    '✅f(24) = [2,2,2,3]',
239: 1:    '❌f(25) = ??? != [5,5]'
239: 1:  ],
239: 1:  'level': 9,
239: 1:  'nextQuestion': '25',
239: 1:  'questions': [
239: 1:    '1',
239: 1:    '2',
239: 1:    '3',
239: 1:    '4',
239: 1:    '5',
239: 1:    '6',
239: 1:    '7',
239: 1:    '8',
239: 1:    '9',
239: 1:    '10',
239: 1:    '11',
239: 1:    '12',
239: 1:    '13',
239: 1:    '14',
239: 1:    '15',
239: 1:    '16',
239: 1:    '17',
239: 1:    '18',
239: 1:    '19',
239: 1:    '20',
239: 1:    '21',
239: 1:    '22',
239: 1:    '23',
239: 1:    '24',
239: 1:    '25'
239: 1:  ]
239: 1:}
239: 1:Scores: 13662
239: 1:Answer: message('['[1]', '[2]', '[3]', '[2,2]', '[5]', '[2,3]', '[7]', '[2,2,2]', '[3,3]', '[2,5]', '[11]', '[2,2,3]', '[13]', '[2,7]', '[3,5]', '[2,2,2,2]', '[17]', '[2,3,3]', '[19]', '[2,2,5]', '[3,7]', '[2,11]', '[23]', '[2,2,2,3]', '[5,5]']')
239: 1:Fire Event: PassTest{complexity=25, testCount=25}
239: 1:Fire Event: NextAlgorithm{complexity=25, time=0}
------------------------------------------
240: 1:BoardData {
240: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
240: 1:  'history': [
240: 1:    {
240: 1:      'answer': '[1]',
240: 1:      'question': '1',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2]',
240: 1:      'question': '2',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[3]',
240: 1:      'question': '3',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,2]',
240: 1:      'question': '4',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[5]',
240: 1:      'question': '5',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,3]',
240: 1:      'question': '6',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[7]',
240: 1:      'question': '7',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,2,2]',
240: 1:      'question': '8',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[3,3]',
240: 1:      'question': '9',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,5]',
240: 1:      'question': '10',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[11]',
240: 1:      'question': '11',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,2,3]',
240: 1:      'question': '12',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[13]',
240: 1:      'question': '13',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,7]',
240: 1:      'question': '14',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[3,5]',
240: 1:      'question': '15',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,2,2,2]',
240: 1:      'question': '16',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[17]',
240: 1:      'question': '17',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,3,3]',
240: 1:      'question': '18',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[19]',
240: 1:      'question': '19',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,2,5]',
240: 1:      'question': '20',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[3,7]',
240: 1:      'question': '21',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,11]',
240: 1:      'question': '22',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[23]',
240: 1:      'question': '23',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[2,2,2,3]',
240: 1:      'question': '24',
240: 1:      'valid': true
240: 1:    },
240: 1:    {
240: 1:      'answer': '[5,5]',
240: 1:      'question': '25',
240: 1:      'valid': true
240: 1:    }
240: 1:  ],
240: 1:  'info': [
240: 1:    '✅f(1) = [1]',
240: 1:    '✅f(2) = [2]',
240: 1:    '✅f(3) = [3]',
240: 1:    '✅f(4) = [2,2]',
240: 1:    '✅f(5) = [5]',
240: 1:    '✅f(6) = [2,3]',
240: 1:    '✅f(7) = [7]',
240: 1:    '✅f(8) = [2,2,2]',
240: 1:    '✅f(9) = [3,3]',
240: 1:    '✅f(10) = [2,5]',
240: 1:    '✅f(11) = [11]',
240: 1:    '✅f(12) = [2,2,3]',
240: 1:    '✅f(13) = [13]',
240: 1:    '✅f(14) = [2,7]',
240: 1:    '✅f(15) = [3,5]',
240: 1:    '✅f(16) = [2,2,2,2]',
240: 1:    '✅f(17) = [17]',
240: 1:    '✅f(18) = [2,3,3]',
240: 1:    '✅f(19) = [19]',
240: 1:    '✅f(20) = [2,2,5]',
240: 1:    '✅f(21) = [3,7]',
240: 1:    '✅f(22) = [2,11]',
240: 1:    '✅f(23) = [23]',
240: 1:    '✅f(24) = [2,2,2,3]',
240: 1:    '✅f(25) = [5,5]'
240: 1:  ],
240: 1:  'level': 9,
240: 1:  'questions': []
240: 1:}
240: 1:Scores: 17046
240: 1:Answer: message('StartNextLevel')
240: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
241: 1:BoardData {
241: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
241: 1:  'expectedAnswer': '2',
241: 1:  'history': [],
241: 1:  'info': ['❌f(1) = ??? != 2'],
241: 1:  'level': 10,
241: 1:  'nextQuestion': '1',
241: 1:  'questions': ['1']
241: 1:}
241: 1:Scores: 17046
241: 1:Answer: message('['2']')
241: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
242: 1:BoardData {
242: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
242: 1:  'expectedAnswer': '4',
242: 1:  'history': [{
242: 1:    'answer': '2',
242: 1:    'question': '1',
242: 1:    'valid': true
242: 1:  }],
242: 1:  'info': [
242: 1:    '✅f(1) = 2',
242: 1:    '❌f(2) = ??? != 4'
242: 1:  ],
242: 1:  'level': 10,
242: 1:  'nextQuestion': '2',
242: 1:  'questions': [
242: 1:    '1',
242: 1:    '2'
242: 1:  ]
242: 1:}
242: 1:Scores: 17058
242: 1:Answer: message('['2', '4']')
242: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
243: 1:BoardData {
243: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
243: 1:  'expectedAnswer': '8',
243: 1:  'history': [
243: 1:    {
243: 1:      'answer': '2',
243: 1:      'question': '1',
243: 1:      'valid': true
243: 1:    },
243: 1:    {
243: 1:      'answer': '4',
243: 1:      'question': '2',
243: 1:      'valid': true
243: 1:    }
243: 1:  ],
243: 1:  'info': [
243: 1:    '✅f(1) = 2',
243: 1:    '✅f(2) = 4',
243: 1:    '❌f(3) = ??? != 8'
243: 1:  ],
243: 1:  'level': 10,
243: 1:  'nextQuestion': '3',
243: 1:  'questions': [
243: 1:    '1',
243: 1:    '2',
243: 1:    '3'
243: 1:  ]
243: 1:}
243: 1:Scores: 17070
243: 1:Answer: message('['2', '4', '8']')
243: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
244: 1:BoardData {
244: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
244: 1:  'expectedAnswer': '7',
244: 1:  'history': [
244: 1:    {
244: 1:      'answer': '2',
244: 1:      'question': '1',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': '4',
244: 1:      'question': '2',
244: 1:      'valid': true
244: 1:    },
244: 1:    {
244: 1:      'answer': '8',
244: 1:      'question': '3',
244: 1:      'valid': true
244: 1:    }
244: 1:  ],
244: 1:  'info': [
244: 1:    '✅f(1) = 2',
244: 1:    '✅f(2) = 4',
244: 1:    '✅f(3) = 8',
244: 1:    '❌f(4) = ??? != 7'
244: 1:  ],
244: 1:  'level': 10,
244: 1:  'nextQuestion': '4',
244: 1:  'questions': [
244: 1:    '1',
244: 1:    '2',
244: 1:    '3',
244: 1:    '4'
244: 1:  ]
244: 1:}
244: 1:Scores: 17082
244: 1:Answer: message('['2', '4', '8', '7']')
244: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
245: 1:BoardData {
245: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
245: 1:  'expectedAnswer': '5',
245: 1:  'history': [
245: 1:    {
245: 1:      'answer': '2',
245: 1:      'question': '1',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': '4',
245: 1:      'question': '2',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': '8',
245: 1:      'question': '3',
245: 1:      'valid': true
245: 1:    },
245: 1:    {
245: 1:      'answer': '7',
245: 1:      'question': '4',
245: 1:      'valid': true
245: 1:    }
245: 1:  ],
245: 1:  'info': [
245: 1:    '✅f(1) = 2',
245: 1:    '✅f(2) = 4',
245: 1:    '✅f(3) = 8',
245: 1:    '✅f(4) = 7',
245: 1:    '❌f(5) = ??? != 5'
245: 1:  ],
245: 1:  'level': 10,
245: 1:  'nextQuestion': '5',
245: 1:  'questions': [
245: 1:    '1',
245: 1:    '2',
245: 1:    '3',
245: 1:    '4',
245: 1:    '5'
245: 1:  ]
245: 1:}
245: 1:Scores: 17094
245: 1:Answer: message('['2', '4', '8', '7', '5']')
245: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
246: 1:BoardData {
246: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
246: 1:  'expectedAnswer': '10',
246: 1:  'history': [
246: 1:    {
246: 1:      'answer': '2',
246: 1:      'question': '1',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': '4',
246: 1:      'question': '2',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': '8',
246: 1:      'question': '3',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': '7',
246: 1:      'question': '4',
246: 1:      'valid': true
246: 1:    },
246: 1:    {
246: 1:      'answer': '5',
246: 1:      'question': '5',
246: 1:      'valid': true
246: 1:    }
246: 1:  ],
246: 1:  'info': [
246: 1:    '✅f(1) = 2',
246: 1:    '✅f(2) = 4',
246: 1:    '✅f(3) = 8',
246: 1:    '✅f(4) = 7',
246: 1:    '✅f(5) = 5',
246: 1:    '❌f(6) = ??? != 10'
246: 1:  ],
246: 1:  'level': 10,
246: 1:  'nextQuestion': '6',
246: 1:  'questions': [
246: 1:    '1',
246: 1:    '2',
246: 1:    '3',
246: 1:    '4',
246: 1:    '5',
246: 1:    '6'
246: 1:  ]
246: 1:}
246: 1:Scores: 17106
246: 1:Answer: message('['2', '4', '8', '7', '5', '10']')
246: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
247: 1:BoardData {
247: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
247: 1:  'expectedAnswer': '11',
247: 1:  'history': [
247: 1:    {
247: 1:      'answer': '2',
247: 1:      'question': '1',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': '4',
247: 1:      'question': '2',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': '8',
247: 1:      'question': '3',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': '7',
247: 1:      'question': '4',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': '5',
247: 1:      'question': '5',
247: 1:      'valid': true
247: 1:    },
247: 1:    {
247: 1:      'answer': '10',
247: 1:      'question': '6',
247: 1:      'valid': true
247: 1:    }
247: 1:  ],
247: 1:  'info': [
247: 1:    '✅f(1) = 2',
247: 1:    '✅f(2) = 4',
247: 1:    '✅f(3) = 8',
247: 1:    '✅f(4) = 7',
247: 1:    '✅f(5) = 5',
247: 1:    '✅f(6) = 10',
247: 1:    '❌f(7) = ??? != 11'
247: 1:  ],
247: 1:  'level': 10,
247: 1:  'nextQuestion': '7',
247: 1:  'questions': [
247: 1:    '1',
247: 1:    '2',
247: 1:    '3',
247: 1:    '4',
247: 1:    '5',
247: 1:    '6',
247: 1:    '7'
247: 1:  ]
247: 1:}
247: 1:Scores: 17118
247: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11']')
247: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
248: 1:BoardData {
248: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
248: 1:  'expectedAnswer': '13',
248: 1:  'history': [
248: 1:    {
248: 1:      'answer': '2',
248: 1:      'question': '1',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': '4',
248: 1:      'question': '2',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': '8',
248: 1:      'question': '3',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': '7',
248: 1:      'question': '4',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': '5',
248: 1:      'question': '5',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': '10',
248: 1:      'question': '6',
248: 1:      'valid': true
248: 1:    },
248: 1:    {
248: 1:      'answer': '11',
248: 1:      'question': '7',
248: 1:      'valid': true
248: 1:    }
248: 1:  ],
248: 1:  'info': [
248: 1:    '✅f(1) = 2',
248: 1:    '✅f(2) = 4',
248: 1:    '✅f(3) = 8',
248: 1:    '✅f(4) = 7',
248: 1:    '✅f(5) = 5',
248: 1:    '✅f(6) = 10',
248: 1:    '✅f(7) = 11',
248: 1:    '❌f(8) = ??? != 13'
248: 1:  ],
248: 1:  'level': 10,
248: 1:  'nextQuestion': '8',
248: 1:  'questions': [
248: 1:    '1',
248: 1:    '2',
248: 1:    '3',
248: 1:    '4',
248: 1:    '5',
248: 1:    '6',
248: 1:    '7',
248: 1:    '8'
248: 1:  ]
248: 1:}
248: 1:Scores: 17130
248: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13']')
248: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
249: 1:BoardData {
249: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
249: 1:  'expectedAnswer': '8',
249: 1:  'history': [
249: 1:    {
249: 1:      'answer': '2',
249: 1:      'question': '1',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': '4',
249: 1:      'question': '2',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': '8',
249: 1:      'question': '3',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': '7',
249: 1:      'question': '4',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': '5',
249: 1:      'question': '5',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': '10',
249: 1:      'question': '6',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': '11',
249: 1:      'question': '7',
249: 1:      'valid': true
249: 1:    },
249: 1:    {
249: 1:      'answer': '13',
249: 1:      'question': '8',
249: 1:      'valid': true
249: 1:    }
249: 1:  ],
249: 1:  'info': [
249: 1:    '✅f(1) = 2',
249: 1:    '✅f(2) = 4',
249: 1:    '✅f(3) = 8',
249: 1:    '✅f(4) = 7',
249: 1:    '✅f(5) = 5',
249: 1:    '✅f(6) = 10',
249: 1:    '✅f(7) = 11',
249: 1:    '✅f(8) = 13',
249: 1:    '❌f(9) = ??? != 8'
249: 1:  ],
249: 1:  'level': 10,
249: 1:  'nextQuestion': '9',
249: 1:  'questions': [
249: 1:    '1',
249: 1:    '2',
249: 1:    '3',
249: 1:    '4',
249: 1:    '5',
249: 1:    '6',
249: 1:    '7',
249: 1:    '8',
249: 1:    '9'
249: 1:  ]
249: 1:}
249: 1:Scores: 17142
249: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8']')
249: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
250: 1:BoardData {
250: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
250: 1:  'expectedAnswer': '7',
250: 1:  'history': [
250: 1:    {
250: 1:      'answer': '2',
250: 1:      'question': '1',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': '4',
250: 1:      'question': '2',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': '8',
250: 1:      'question': '3',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': '7',
250: 1:      'question': '4',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': '5',
250: 1:      'question': '5',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': '10',
250: 1:      'question': '6',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': '11',
250: 1:      'question': '7',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': '13',
250: 1:      'question': '8',
250: 1:      'valid': true
250: 1:    },
250: 1:    {
250: 1:      'answer': '8',
250: 1:      'question': '9',
250: 1:      'valid': true
250: 1:    }
250: 1:  ],
250: 1:  'info': [
250: 1:    '✅f(1) = 2',
250: 1:    '✅f(2) = 4',
250: 1:    '✅f(3) = 8',
250: 1:    '✅f(4) = 7',
250: 1:    '✅f(5) = 5',
250: 1:    '✅f(6) = 10',
250: 1:    '✅f(7) = 11',
250: 1:    '✅f(8) = 13',
250: 1:    '✅f(9) = 8',
250: 1:    '❌f(10) = ??? != 7'
250: 1:  ],
250: 1:  'level': 10,
250: 1:  'nextQuestion': '10',
250: 1:  'questions': [
250: 1:    '1',
250: 1:    '2',
250: 1:    '3',
250: 1:    '4',
250: 1:    '5',
250: 1:    '6',
250: 1:    '7',
250: 1:    '8',
250: 1:    '9',
250: 1:    '10'
250: 1:  ]
250: 1:}
250: 1:Scores: 17154
250: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7']')
250: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
251: 1:BoardData {
251: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
251: 1:  'expectedAnswer': '14',
251: 1:  'history': [
251: 1:    {
251: 1:      'answer': '2',
251: 1:      'question': '1',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '4',
251: 1:      'question': '2',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '8',
251: 1:      'question': '3',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '7',
251: 1:      'question': '4',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '5',
251: 1:      'question': '5',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '10',
251: 1:      'question': '6',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '11',
251: 1:      'question': '7',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '13',
251: 1:      'question': '8',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '8',
251: 1:      'question': '9',
251: 1:      'valid': true
251: 1:    },
251: 1:    {
251: 1:      'answer': '7',
251: 1:      'question': '10',
251: 1:      'valid': true
251: 1:    }
251: 1:  ],
251: 1:  'info': [
251: 1:    '✅f(1) = 2',
251: 1:    '✅f(2) = 4',
251: 1:    '✅f(3) = 8',
251: 1:    '✅f(4) = 7',
251: 1:    '✅f(5) = 5',
251: 1:    '✅f(6) = 10',
251: 1:    '✅f(7) = 11',
251: 1:    '✅f(8) = 13',
251: 1:    '✅f(9) = 8',
251: 1:    '✅f(10) = 7',
251: 1:    '❌f(11) = ??? != 14'
251: 1:  ],
251: 1:  'level': 10,
251: 1:  'nextQuestion': '11',
251: 1:  'questions': [
251: 1:    '1',
251: 1:    '2',
251: 1:    '3',
251: 1:    '4',
251: 1:    '5',
251: 1:    '6',
251: 1:    '7',
251: 1:    '8',
251: 1:    '9',
251: 1:    '10',
251: 1:    '11'
251: 1:  ]
251: 1:}
251: 1:Scores: 17166
251: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14']')
251: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
252: 1:BoardData {
252: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
252: 1:  'expectedAnswer': '19',
252: 1:  'history': [
252: 1:    {
252: 1:      'answer': '2',
252: 1:      'question': '1',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '4',
252: 1:      'question': '2',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '8',
252: 1:      'question': '3',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '7',
252: 1:      'question': '4',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '5',
252: 1:      'question': '5',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '10',
252: 1:      'question': '6',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '11',
252: 1:      'question': '7',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '13',
252: 1:      'question': '8',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '8',
252: 1:      'question': '9',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '7',
252: 1:      'question': '10',
252: 1:      'valid': true
252: 1:    },
252: 1:    {
252: 1:      'answer': '14',
252: 1:      'question': '11',
252: 1:      'valid': true
252: 1:    }
252: 1:  ],
252: 1:  'info': [
252: 1:    '✅f(1) = 2',
252: 1:    '✅f(2) = 4',
252: 1:    '✅f(3) = 8',
252: 1:    '✅f(4) = 7',
252: 1:    '✅f(5) = 5',
252: 1:    '✅f(6) = 10',
252: 1:    '✅f(7) = 11',
252: 1:    '✅f(8) = 13',
252: 1:    '✅f(9) = 8',
252: 1:    '✅f(10) = 7',
252: 1:    '✅f(11) = 14',
252: 1:    '❌f(12) = ??? != 19'
252: 1:  ],
252: 1:  'level': 10,
252: 1:  'nextQuestion': '12',
252: 1:  'questions': [
252: 1:    '1',
252: 1:    '2',
252: 1:    '3',
252: 1:    '4',
252: 1:    '5',
252: 1:    '6',
252: 1:    '7',
252: 1:    '8',
252: 1:    '9',
252: 1:    '10',
252: 1:    '11',
252: 1:    '12'
252: 1:  ]
252: 1:}
252: 1:Scores: 17178
252: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19']')
252: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
253: 1:BoardData {
253: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
253: 1:  'expectedAnswer': '20',
253: 1:  'history': [
253: 1:    {
253: 1:      'answer': '2',
253: 1:      'question': '1',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '4',
253: 1:      'question': '2',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '8',
253: 1:      'question': '3',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '7',
253: 1:      'question': '4',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '5',
253: 1:      'question': '5',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '10',
253: 1:      'question': '6',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '11',
253: 1:      'question': '7',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '13',
253: 1:      'question': '8',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '8',
253: 1:      'question': '9',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '7',
253: 1:      'question': '10',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '14',
253: 1:      'question': '11',
253: 1:      'valid': true
253: 1:    },
253: 1:    {
253: 1:      'answer': '19',
253: 1:      'question': '12',
253: 1:      'valid': true
253: 1:    }
253: 1:  ],
253: 1:  'info': [
253: 1:    '✅f(1) = 2',
253: 1:    '✅f(2) = 4',
253: 1:    '✅f(3) = 8',
253: 1:    '✅f(4) = 7',
253: 1:    '✅f(5) = 5',
253: 1:    '✅f(6) = 10',
253: 1:    '✅f(7) = 11',
253: 1:    '✅f(8) = 13',
253: 1:    '✅f(9) = 8',
253: 1:    '✅f(10) = 7',
253: 1:    '✅f(11) = 14',
253: 1:    '✅f(12) = 19',
253: 1:    '❌f(13) = ??? != 20'
253: 1:  ],
253: 1:  'level': 10,
253: 1:  'nextQuestion': '13',
253: 1:  'questions': [
253: 1:    '1',
253: 1:    '2',
253: 1:    '3',
253: 1:    '4',
253: 1:    '5',
253: 1:    '6',
253: 1:    '7',
253: 1:    '8',
253: 1:    '9',
253: 1:    '10',
253: 1:    '11',
253: 1:    '12',
253: 1:    '13'
253: 1:  ]
253: 1:}
253: 1:Scores: 17190
253: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20']')
253: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
254: 1:BoardData {
254: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
254: 1:  'expectedAnswer': '22',
254: 1:  'history': [
254: 1:    {
254: 1:      'answer': '2',
254: 1:      'question': '1',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '4',
254: 1:      'question': '2',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '8',
254: 1:      'question': '3',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '7',
254: 1:      'question': '4',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '5',
254: 1:      'question': '5',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '10',
254: 1:      'question': '6',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '11',
254: 1:      'question': '7',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '13',
254: 1:      'question': '8',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '8',
254: 1:      'question': '9',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '7',
254: 1:      'question': '10',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '14',
254: 1:      'question': '11',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '19',
254: 1:      'question': '12',
254: 1:      'valid': true
254: 1:    },
254: 1:    {
254: 1:      'answer': '20',
254: 1:      'question': '13',
254: 1:      'valid': true
254: 1:    }
254: 1:  ],
254: 1:  'info': [
254: 1:    '✅f(1) = 2',
254: 1:    '✅f(2) = 4',
254: 1:    '✅f(3) = 8',
254: 1:    '✅f(4) = 7',
254: 1:    '✅f(5) = 5',
254: 1:    '✅f(6) = 10',
254: 1:    '✅f(7) = 11',
254: 1:    '✅f(8) = 13',
254: 1:    '✅f(9) = 8',
254: 1:    '✅f(10) = 7',
254: 1:    '✅f(11) = 14',
254: 1:    '✅f(12) = 19',
254: 1:    '✅f(13) = 20',
254: 1:    '❌f(14) = ??? != 22'
254: 1:  ],
254: 1:  'level': 10,
254: 1:  'nextQuestion': '14',
254: 1:  'questions': [
254: 1:    '1',
254: 1:    '2',
254: 1:    '3',
254: 1:    '4',
254: 1:    '5',
254: 1:    '6',
254: 1:    '7',
254: 1:    '8',
254: 1:    '9',
254: 1:    '10',
254: 1:    '11',
254: 1:    '12',
254: 1:    '13',
254: 1:    '14'
254: 1:  ]
254: 1:}
254: 1:Scores: 17202
254: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22']')
254: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
255: 1:BoardData {
255: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
255: 1:  'expectedAnswer': '26',
255: 1:  'history': [
255: 1:    {
255: 1:      'answer': '2',
255: 1:      'question': '1',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '4',
255: 1:      'question': '2',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '8',
255: 1:      'question': '3',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '7',
255: 1:      'question': '4',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '5',
255: 1:      'question': '5',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '10',
255: 1:      'question': '6',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '11',
255: 1:      'question': '7',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '13',
255: 1:      'question': '8',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '8',
255: 1:      'question': '9',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '7',
255: 1:      'question': '10',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '14',
255: 1:      'question': '11',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '19',
255: 1:      'question': '12',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '20',
255: 1:      'question': '13',
255: 1:      'valid': true
255: 1:    },
255: 1:    {
255: 1:      'answer': '22',
255: 1:      'question': '14',
255: 1:      'valid': true
255: 1:    }
255: 1:  ],
255: 1:  'info': [
255: 1:    '✅f(1) = 2',
255: 1:    '✅f(2) = 4',
255: 1:    '✅f(3) = 8',
255: 1:    '✅f(4) = 7',
255: 1:    '✅f(5) = 5',
255: 1:    '✅f(6) = 10',
255: 1:    '✅f(7) = 11',
255: 1:    '✅f(8) = 13',
255: 1:    '✅f(9) = 8',
255: 1:    '✅f(10) = 7',
255: 1:    '✅f(11) = 14',
255: 1:    '✅f(12) = 19',
255: 1:    '✅f(13) = 20',
255: 1:    '✅f(14) = 22',
255: 1:    '❌f(15) = ??? != 26'
255: 1:  ],
255: 1:  'level': 10,
255: 1:  'nextQuestion': '15',
255: 1:  'questions': [
255: 1:    '1',
255: 1:    '2',
255: 1:    '3',
255: 1:    '4',
255: 1:    '5',
255: 1:    '6',
255: 1:    '7',
255: 1:    '8',
255: 1:    '9',
255: 1:    '10',
255: 1:    '11',
255: 1:    '12',
255: 1:    '13',
255: 1:    '14',
255: 1:    '15'
255: 1:  ]
255: 1:}
255: 1:Scores: 17214
255: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26']')
255: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
256: 1:BoardData {
256: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
256: 1:  'expectedAnswer': '25',
256: 1:  'history': [
256: 1:    {
256: 1:      'answer': '2',
256: 1:      'question': '1',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '4',
256: 1:      'question': '2',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '8',
256: 1:      'question': '3',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '7',
256: 1:      'question': '4',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '5',
256: 1:      'question': '5',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '10',
256: 1:      'question': '6',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '11',
256: 1:      'question': '7',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '13',
256: 1:      'question': '8',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '8',
256: 1:      'question': '9',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '7',
256: 1:      'question': '10',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '14',
256: 1:      'question': '11',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '19',
256: 1:      'question': '12',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '20',
256: 1:      'question': '13',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '22',
256: 1:      'question': '14',
256: 1:      'valid': true
256: 1:    },
256: 1:    {
256: 1:      'answer': '26',
256: 1:      'question': '15',
256: 1:      'valid': true
256: 1:    }
256: 1:  ],
256: 1:  'info': [
256: 1:    '✅f(1) = 2',
256: 1:    '✅f(2) = 4',
256: 1:    '✅f(3) = 8',
256: 1:    '✅f(4) = 7',
256: 1:    '✅f(5) = 5',
256: 1:    '✅f(6) = 10',
256: 1:    '✅f(7) = 11',
256: 1:    '✅f(8) = 13',
256: 1:    '✅f(9) = 8',
256: 1:    '✅f(10) = 7',
256: 1:    '✅f(11) = 14',
256: 1:    '✅f(12) = 19',
256: 1:    '✅f(13) = 20',
256: 1:    '✅f(14) = 22',
256: 1:    '✅f(15) = 26',
256: 1:    '❌f(16) = ??? != 25'
256: 1:  ],
256: 1:  'level': 10,
256: 1:  'nextQuestion': '16',
256: 1:  'questions': [
256: 1:    '1',
256: 1:    '2',
256: 1:    '3',
256: 1:    '4',
256: 1:    '5',
256: 1:    '6',
256: 1:    '7',
256: 1:    '8',
256: 1:    '9',
256: 1:    '10',
256: 1:    '11',
256: 1:    '12',
256: 1:    '13',
256: 1:    '14',
256: 1:    '15',
256: 1:    '16'
256: 1:  ]
256: 1:}
256: 1:Scores: 17226
256: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25']')
256: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
257: 1:BoardData {
257: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
257: 1:  'expectedAnswer': '14',
257: 1:  'history': [
257: 1:    {
257: 1:      'answer': '2',
257: 1:      'question': '1',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '4',
257: 1:      'question': '2',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '8',
257: 1:      'question': '3',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '7',
257: 1:      'question': '4',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '5',
257: 1:      'question': '5',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '10',
257: 1:      'question': '6',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '11',
257: 1:      'question': '7',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '13',
257: 1:      'question': '8',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '8',
257: 1:      'question': '9',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '7',
257: 1:      'question': '10',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '14',
257: 1:      'question': '11',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '19',
257: 1:      'question': '12',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '20',
257: 1:      'question': '13',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '22',
257: 1:      'question': '14',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '26',
257: 1:      'question': '15',
257: 1:      'valid': true
257: 1:    },
257: 1:    {
257: 1:      'answer': '25',
257: 1:      'question': '16',
257: 1:      'valid': true
257: 1:    }
257: 1:  ],
257: 1:  'info': [
257: 1:    '✅f(1) = 2',
257: 1:    '✅f(2) = 4',
257: 1:    '✅f(3) = 8',
257: 1:    '✅f(4) = 7',
257: 1:    '✅f(5) = 5',
257: 1:    '✅f(6) = 10',
257: 1:    '✅f(7) = 11',
257: 1:    '✅f(8) = 13',
257: 1:    '✅f(9) = 8',
257: 1:    '✅f(10) = 7',
257: 1:    '✅f(11) = 14',
257: 1:    '✅f(12) = 19',
257: 1:    '✅f(13) = 20',
257: 1:    '✅f(14) = 22',
257: 1:    '✅f(15) = 26',
257: 1:    '✅f(16) = 25',
257: 1:    '❌f(17) = ??? != 14'
257: 1:  ],
257: 1:  'level': 10,
257: 1:  'nextQuestion': '17',
257: 1:  'questions': [
257: 1:    '1',
257: 1:    '2',
257: 1:    '3',
257: 1:    '4',
257: 1:    '5',
257: 1:    '6',
257: 1:    '7',
257: 1:    '8',
257: 1:    '9',
257: 1:    '10',
257: 1:    '11',
257: 1:    '12',
257: 1:    '13',
257: 1:    '14',
257: 1:    '15',
257: 1:    '16',
257: 1:    '17'
257: 1:  ]
257: 1:}
257: 1:Scores: 17238
257: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14']')
257: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
258: 1:BoardData {
258: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
258: 1:  'expectedAnswer': '19',
258: 1:  'history': [
258: 1:    {
258: 1:      'answer': '2',
258: 1:      'question': '1',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '4',
258: 1:      'question': '2',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '8',
258: 1:      'question': '3',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '7',
258: 1:      'question': '4',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '5',
258: 1:      'question': '5',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '10',
258: 1:      'question': '6',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '11',
258: 1:      'question': '7',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '13',
258: 1:      'question': '8',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '8',
258: 1:      'question': '9',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '7',
258: 1:      'question': '10',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '14',
258: 1:      'question': '11',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '19',
258: 1:      'question': '12',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '20',
258: 1:      'question': '13',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '22',
258: 1:      'question': '14',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '26',
258: 1:      'question': '15',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '25',
258: 1:      'question': '16',
258: 1:      'valid': true
258: 1:    },
258: 1:    {
258: 1:      'answer': '14',
258: 1:      'question': '17',
258: 1:      'valid': true
258: 1:    }
258: 1:  ],
258: 1:  'info': [
258: 1:    '✅f(1) = 2',
258: 1:    '✅f(2) = 4',
258: 1:    '✅f(3) = 8',
258: 1:    '✅f(4) = 7',
258: 1:    '✅f(5) = 5',
258: 1:    '✅f(6) = 10',
258: 1:    '✅f(7) = 11',
258: 1:    '✅f(8) = 13',
258: 1:    '✅f(9) = 8',
258: 1:    '✅f(10) = 7',
258: 1:    '✅f(11) = 14',
258: 1:    '✅f(12) = 19',
258: 1:    '✅f(13) = 20',
258: 1:    '✅f(14) = 22',
258: 1:    '✅f(15) = 26',
258: 1:    '✅f(16) = 25',
258: 1:    '✅f(17) = 14',
258: 1:    '❌f(18) = ??? != 19'
258: 1:  ],
258: 1:  'level': 10,
258: 1:  'nextQuestion': '18',
258: 1:  'questions': [
258: 1:    '1',
258: 1:    '2',
258: 1:    '3',
258: 1:    '4',
258: 1:    '5',
258: 1:    '6',
258: 1:    '7',
258: 1:    '8',
258: 1:    '9',
258: 1:    '10',
258: 1:    '11',
258: 1:    '12',
258: 1:    '13',
258: 1:    '14',
258: 1:    '15',
258: 1:    '16',
258: 1:    '17',
258: 1:    '18'
258: 1:  ]
258: 1:}
258: 1:Scores: 17250
258: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19']')
258: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
259: 1:BoardData {
259: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
259: 1:  'expectedAnswer': '29',
259: 1:  'history': [
259: 1:    {
259: 1:      'answer': '2',
259: 1:      'question': '1',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '4',
259: 1:      'question': '2',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '8',
259: 1:      'question': '3',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '7',
259: 1:      'question': '4',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '5',
259: 1:      'question': '5',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '10',
259: 1:      'question': '6',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '11',
259: 1:      'question': '7',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '13',
259: 1:      'question': '8',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '8',
259: 1:      'question': '9',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '7',
259: 1:      'question': '10',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '14',
259: 1:      'question': '11',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '19',
259: 1:      'question': '12',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '20',
259: 1:      'question': '13',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '22',
259: 1:      'question': '14',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '26',
259: 1:      'question': '15',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '25',
259: 1:      'question': '16',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '14',
259: 1:      'question': '17',
259: 1:      'valid': true
259: 1:    },
259: 1:    {
259: 1:      'answer': '19',
259: 1:      'question': '18',
259: 1:      'valid': true
259: 1:    }
259: 1:  ],
259: 1:  'info': [
259: 1:    '✅f(1) = 2',
259: 1:    '✅f(2) = 4',
259: 1:    '✅f(3) = 8',
259: 1:    '✅f(4) = 7',
259: 1:    '✅f(5) = 5',
259: 1:    '✅f(6) = 10',
259: 1:    '✅f(7) = 11',
259: 1:    '✅f(8) = 13',
259: 1:    '✅f(9) = 8',
259: 1:    '✅f(10) = 7',
259: 1:    '✅f(11) = 14',
259: 1:    '✅f(12) = 19',
259: 1:    '✅f(13) = 20',
259: 1:    '✅f(14) = 22',
259: 1:    '✅f(15) = 26',
259: 1:    '✅f(16) = 25',
259: 1:    '✅f(17) = 14',
259: 1:    '✅f(18) = 19',
259: 1:    '❌f(19) = ??? != 29'
259: 1:  ],
259: 1:  'level': 10,
259: 1:  'nextQuestion': '19',
259: 1:  'questions': [
259: 1:    '1',
259: 1:    '2',
259: 1:    '3',
259: 1:    '4',
259: 1:    '5',
259: 1:    '6',
259: 1:    '7',
259: 1:    '8',
259: 1:    '9',
259: 1:    '10',
259: 1:    '11',
259: 1:    '12',
259: 1:    '13',
259: 1:    '14',
259: 1:    '15',
259: 1:    '16',
259: 1:    '17',
259: 1:    '18',
259: 1:    '19'
259: 1:  ]
259: 1:}
259: 1:Scores: 17262
259: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29']')
259: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
260: 1:BoardData {
260: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
260: 1:  'expectedAnswer': '31',
260: 1:  'history': [
260: 1:    {
260: 1:      'answer': '2',
260: 1:      'question': '1',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '4',
260: 1:      'question': '2',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '8',
260: 1:      'question': '3',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '7',
260: 1:      'question': '4',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '5',
260: 1:      'question': '5',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '10',
260: 1:      'question': '6',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '11',
260: 1:      'question': '7',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '13',
260: 1:      'question': '8',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '8',
260: 1:      'question': '9',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '7',
260: 1:      'question': '10',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '14',
260: 1:      'question': '11',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '19',
260: 1:      'question': '12',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '20',
260: 1:      'question': '13',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '22',
260: 1:      'question': '14',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '26',
260: 1:      'question': '15',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '25',
260: 1:      'question': '16',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '14',
260: 1:      'question': '17',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '19',
260: 1:      'question': '18',
260: 1:      'valid': true
260: 1:    },
260: 1:    {
260: 1:      'answer': '29',
260: 1:      'question': '19',
260: 1:      'valid': true
260: 1:    }
260: 1:  ],
260: 1:  'info': [
260: 1:    '✅f(1) = 2',
260: 1:    '✅f(2) = 4',
260: 1:    '✅f(3) = 8',
260: 1:    '✅f(4) = 7',
260: 1:    '✅f(5) = 5',
260: 1:    '✅f(6) = 10',
260: 1:    '✅f(7) = 11',
260: 1:    '✅f(8) = 13',
260: 1:    '✅f(9) = 8',
260: 1:    '✅f(10) = 7',
260: 1:    '✅f(11) = 14',
260: 1:    '✅f(12) = 19',
260: 1:    '✅f(13) = 20',
260: 1:    '✅f(14) = 22',
260: 1:    '✅f(15) = 26',
260: 1:    '✅f(16) = 25',
260: 1:    '✅f(17) = 14',
260: 1:    '✅f(18) = 19',
260: 1:    '✅f(19) = 29',
260: 1:    '❌f(20) = ??? != 31'
260: 1:  ],
260: 1:  'level': 10,
260: 1:  'nextQuestion': '20',
260: 1:  'questions': [
260: 1:    '1',
260: 1:    '2',
260: 1:    '3',
260: 1:    '4',
260: 1:    '5',
260: 1:    '6',
260: 1:    '7',
260: 1:    '8',
260: 1:    '9',
260: 1:    '10',
260: 1:    '11',
260: 1:    '12',
260: 1:    '13',
260: 1:    '14',
260: 1:    '15',
260: 1:    '16',
260: 1:    '17',
260: 1:    '18',
260: 1:    '19',
260: 1:    '20'
260: 1:  ]
260: 1:}
260: 1:Scores: 17274
260: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31']')
260: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
261: 1:BoardData {
261: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
261: 1:  'expectedAnswer': '26',
261: 1:  'history': [
261: 1:    {
261: 1:      'answer': '2',
261: 1:      'question': '1',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '4',
261: 1:      'question': '2',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '8',
261: 1:      'question': '3',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '7',
261: 1:      'question': '4',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '5',
261: 1:      'question': '5',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '10',
261: 1:      'question': '6',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '11',
261: 1:      'question': '7',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '13',
261: 1:      'question': '8',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '8',
261: 1:      'question': '9',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '7',
261: 1:      'question': '10',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '14',
261: 1:      'question': '11',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '19',
261: 1:      'question': '12',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '20',
261: 1:      'question': '13',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '22',
261: 1:      'question': '14',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '26',
261: 1:      'question': '15',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '25',
261: 1:      'question': '16',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '14',
261: 1:      'question': '17',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '19',
261: 1:      'question': '18',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '29',
261: 1:      'question': '19',
261: 1:      'valid': true
261: 1:    },
261: 1:    {
261: 1:      'answer': '31',
261: 1:      'question': '20',
261: 1:      'valid': true
261: 1:    }
261: 1:  ],
261: 1:  'info': [
261: 1:    '✅f(1) = 2',
261: 1:    '✅f(2) = 4',
261: 1:    '✅f(3) = 8',
261: 1:    '✅f(4) = 7',
261: 1:    '✅f(5) = 5',
261: 1:    '✅f(6) = 10',
261: 1:    '✅f(7) = 11',
261: 1:    '✅f(8) = 13',
261: 1:    '✅f(9) = 8',
261: 1:    '✅f(10) = 7',
261: 1:    '✅f(11) = 14',
261: 1:    '✅f(12) = 19',
261: 1:    '✅f(13) = 20',
261: 1:    '✅f(14) = 22',
261: 1:    '✅f(15) = 26',
261: 1:    '✅f(16) = 25',
261: 1:    '✅f(17) = 14',
261: 1:    '✅f(18) = 19',
261: 1:    '✅f(19) = 29',
261: 1:    '✅f(20) = 31',
261: 1:    '❌f(21) = ??? != 26'
261: 1:  ],
261: 1:  'level': 10,
261: 1:  'nextQuestion': '21',
261: 1:  'questions': [
261: 1:    '1',
261: 1:    '2',
261: 1:    '3',
261: 1:    '4',
261: 1:    '5',
261: 1:    '6',
261: 1:    '7',
261: 1:    '8',
261: 1:    '9',
261: 1:    '10',
261: 1:    '11',
261: 1:    '12',
261: 1:    '13',
261: 1:    '14',
261: 1:    '15',
261: 1:    '16',
261: 1:    '17',
261: 1:    '18',
261: 1:    '19',
261: 1:    '20',
261: 1:    '21'
261: 1:  ]
261: 1:}
261: 1:Scores: 17286
261: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26']')
261: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
262: 1:BoardData {
262: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
262: 1:  'expectedAnswer': '25',
262: 1:  'history': [
262: 1:    {
262: 1:      'answer': '2',
262: 1:      'question': '1',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '4',
262: 1:      'question': '2',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '8',
262: 1:      'question': '3',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '7',
262: 1:      'question': '4',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '5',
262: 1:      'question': '5',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '10',
262: 1:      'question': '6',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '11',
262: 1:      'question': '7',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '13',
262: 1:      'question': '8',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '8',
262: 1:      'question': '9',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '7',
262: 1:      'question': '10',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '14',
262: 1:      'question': '11',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '19',
262: 1:      'question': '12',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '20',
262: 1:      'question': '13',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '22',
262: 1:      'question': '14',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '26',
262: 1:      'question': '15',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '25',
262: 1:      'question': '16',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '14',
262: 1:      'question': '17',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '19',
262: 1:      'question': '18',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '29',
262: 1:      'question': '19',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '31',
262: 1:      'question': '20',
262: 1:      'valid': true
262: 1:    },
262: 1:    {
262: 1:      'answer': '26',
262: 1:      'question': '21',
262: 1:      'valid': true
262: 1:    }
262: 1:  ],
262: 1:  'info': [
262: 1:    '✅f(1) = 2',
262: 1:    '✅f(2) = 4',
262: 1:    '✅f(3) = 8',
262: 1:    '✅f(4) = 7',
262: 1:    '✅f(5) = 5',
262: 1:    '✅f(6) = 10',
262: 1:    '✅f(7) = 11',
262: 1:    '✅f(8) = 13',
262: 1:    '✅f(9) = 8',
262: 1:    '✅f(10) = 7',
262: 1:    '✅f(11) = 14',
262: 1:    '✅f(12) = 19',
262: 1:    '✅f(13) = 20',
262: 1:    '✅f(14) = 22',
262: 1:    '✅f(15) = 26',
262: 1:    '✅f(16) = 25',
262: 1:    '✅f(17) = 14',
262: 1:    '✅f(18) = 19',
262: 1:    '✅f(19) = 29',
262: 1:    '✅f(20) = 31',
262: 1:    '✅f(21) = 26',
262: 1:    '❌f(22) = ??? != 25'
262: 1:  ],
262: 1:  'level': 10,
262: 1:  'nextQuestion': '22',
262: 1:  'questions': [
262: 1:    '1',
262: 1:    '2',
262: 1:    '3',
262: 1:    '4',
262: 1:    '5',
262: 1:    '6',
262: 1:    '7',
262: 1:    '8',
262: 1:    '9',
262: 1:    '10',
262: 1:    '11',
262: 1:    '12',
262: 1:    '13',
262: 1:    '14',
262: 1:    '15',
262: 1:    '16',
262: 1:    '17',
262: 1:    '18',
262: 1:    '19',
262: 1:    '20',
262: 1:    '21',
262: 1:    '22'
262: 1:  ]
262: 1:}
262: 1:Scores: 17298
262: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25']')
262: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
263: 1:BoardData {
263: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
263: 1:  'expectedAnswer': '41',
263: 1:  'history': [
263: 1:    {
263: 1:      'answer': '2',
263: 1:      'question': '1',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '4',
263: 1:      'question': '2',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '8',
263: 1:      'question': '3',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '7',
263: 1:      'question': '4',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '5',
263: 1:      'question': '5',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '10',
263: 1:      'question': '6',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '11',
263: 1:      'question': '7',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '13',
263: 1:      'question': '8',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '8',
263: 1:      'question': '9',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '7',
263: 1:      'question': '10',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '14',
263: 1:      'question': '11',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '19',
263: 1:      'question': '12',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '20',
263: 1:      'question': '13',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '22',
263: 1:      'question': '14',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '26',
263: 1:      'question': '15',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '25',
263: 1:      'question': '16',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '14',
263: 1:      'question': '17',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '19',
263: 1:      'question': '18',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '29',
263: 1:      'question': '19',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '31',
263: 1:      'question': '20',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '26',
263: 1:      'question': '21',
263: 1:      'valid': true
263: 1:    },
263: 1:    {
263: 1:      'answer': '25',
263: 1:      'question': '22',
263: 1:      'valid': true
263: 1:    }
263: 1:  ],
263: 1:  'info': [
263: 1:    '✅f(1) = 2',
263: 1:    '✅f(2) = 4',
263: 1:    '✅f(3) = 8',
263: 1:    '✅f(4) = 7',
263: 1:    '✅f(5) = 5',
263: 1:    '✅f(6) = 10',
263: 1:    '✅f(7) = 11',
263: 1:    '✅f(8) = 13',
263: 1:    '✅f(9) = 8',
263: 1:    '✅f(10) = 7',
263: 1:    '✅f(11) = 14',
263: 1:    '✅f(12) = 19',
263: 1:    '✅f(13) = 20',
263: 1:    '✅f(14) = 22',
263: 1:    '✅f(15) = 26',
263: 1:    '✅f(16) = 25',
263: 1:    '✅f(17) = 14',
263: 1:    '✅f(18) = 19',
263: 1:    '✅f(19) = 29',
263: 1:    '✅f(20) = 31',
263: 1:    '✅f(21) = 26',
263: 1:    '✅f(22) = 25',
263: 1:    '❌f(23) = ??? != 41'
263: 1:  ],
263: 1:  'level': 10,
263: 1:  'nextQuestion': '23',
263: 1:  'questions': [
263: 1:    '1',
263: 1:    '2',
263: 1:    '3',
263: 1:    '4',
263: 1:    '5',
263: 1:    '6',
263: 1:    '7',
263: 1:    '8',
263: 1:    '9',
263: 1:    '10',
263: 1:    '11',
263: 1:    '12',
263: 1:    '13',
263: 1:    '14',
263: 1:    '15',
263: 1:    '16',
263: 1:    '17',
263: 1:    '18',
263: 1:    '19',
263: 1:    '20',
263: 1:    '21',
263: 1:    '22',
263: 1:    '23'
263: 1:  ]
263: 1:}
263: 1:Scores: 17310
263: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41']')
263: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
264: 1:BoardData {
264: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
264: 1:  'expectedAnswer': '37',
264: 1:  'history': [
264: 1:    {
264: 1:      'answer': '2',
264: 1:      'question': '1',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '4',
264: 1:      'question': '2',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '8',
264: 1:      'question': '3',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '7',
264: 1:      'question': '4',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '5',
264: 1:      'question': '5',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '10',
264: 1:      'question': '6',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '11',
264: 1:      'question': '7',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '13',
264: 1:      'question': '8',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '8',
264: 1:      'question': '9',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '7',
264: 1:      'question': '10',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '14',
264: 1:      'question': '11',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '19',
264: 1:      'question': '12',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '20',
264: 1:      'question': '13',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '22',
264: 1:      'question': '14',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '26',
264: 1:      'question': '15',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '25',
264: 1:      'question': '16',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '14',
264: 1:      'question': '17',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '19',
264: 1:      'question': '18',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '29',
264: 1:      'question': '19',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '31',
264: 1:      'question': '20',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '26',
264: 1:      'question': '21',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '25',
264: 1:      'question': '22',
264: 1:      'valid': true
264: 1:    },
264: 1:    {
264: 1:      'answer': '41',
264: 1:      'question': '23',
264: 1:      'valid': true
264: 1:    }
264: 1:  ],
264: 1:  'info': [
264: 1:    '✅f(1) = 2',
264: 1:    '✅f(2) = 4',
264: 1:    '✅f(3) = 8',
264: 1:    '✅f(4) = 7',
264: 1:    '✅f(5) = 5',
264: 1:    '✅f(6) = 10',
264: 1:    '✅f(7) = 11',
264: 1:    '✅f(8) = 13',
264: 1:    '✅f(9) = 8',
264: 1:    '✅f(10) = 7',
264: 1:    '✅f(11) = 14',
264: 1:    '✅f(12) = 19',
264: 1:    '✅f(13) = 20',
264: 1:    '✅f(14) = 22',
264: 1:    '✅f(15) = 26',
264: 1:    '✅f(16) = 25',
264: 1:    '✅f(17) = 14',
264: 1:    '✅f(18) = 19',
264: 1:    '✅f(19) = 29',
264: 1:    '✅f(20) = 31',
264: 1:    '✅f(21) = 26',
264: 1:    '✅f(22) = 25',
264: 1:    '✅f(23) = 41',
264: 1:    '❌f(24) = ??? != 37'
264: 1:  ],
264: 1:  'level': 10,
264: 1:  'nextQuestion': '24',
264: 1:  'questions': [
264: 1:    '1',
264: 1:    '2',
264: 1:    '3',
264: 1:    '4',
264: 1:    '5',
264: 1:    '6',
264: 1:    '7',
264: 1:    '8',
264: 1:    '9',
264: 1:    '10',
264: 1:    '11',
264: 1:    '12',
264: 1:    '13',
264: 1:    '14',
264: 1:    '15',
264: 1:    '16',
264: 1:    '17',
264: 1:    '18',
264: 1:    '19',
264: 1:    '20',
264: 1:    '21',
264: 1:    '22',
264: 1:    '23',
264: 1:    '24'
264: 1:  ]
264: 1:}
264: 1:Scores: 17322
264: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41', '37']')
264: 1:Fire Event: PassTest{complexity=30, testCount=25}
------------------------------------------
265: 1:BoardData {
265: 1:  'description': ['2 to the power of 15 = 32768, the sum of digits of the result 3 + 2 + 7 + 6 + 8 = 26. What is the sum of the digits of 2 to the power of i?\nWrite a method for calculation that takes int and returns the result as a String'],
265: 1:  'expectedAnswer': '29',
265: 1:  'history': [
265: 1:    {
265: 1:      'answer': '2',
265: 1:      'question': '1',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '4',
265: 1:      'question': '2',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '8',
265: 1:      'question': '3',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '7',
265: 1:      'question': '4',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '5',
265: 1:      'question': '5',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '10',
265: 1:      'question': '6',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '11',
265: 1:      'question': '7',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '13',
265: 1:      'question': '8',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '8',
265: 1:      'question': '9',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '7',
265: 1:      'question': '10',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '14',
265: 1:      'question': '11',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '19',
265: 1:      'question': '12',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '20',
265: 1:      'question': '13',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '22',
265: 1:      'question': '14',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '26',
265: 1:      'question': '15',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '25',
265: 1:      'question': '16',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '14',
265: 1:      'question': '17',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '19',
265: 1:      'question': '18',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '29',
265: 1:      'question': '19',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '31',
265: 1:      'question': '20',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '26',
265: 1:      'question': '21',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '25',
265: 1:      'question': '22',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '41',
265: 1:      'question': '23',
265: 1:      'valid': true
265: 1:    },
265: 1:    {
265: 1:      'answer': '37',
265: 1:      'question': '24',
265: 1:      'valid': true
265: 1:    }
265: 1:  ],
265: 1:  'info': [
265: 1:    '✅f(1) = 2',
265: 1:    '✅f(2) = 4',
265: 1:    '✅f(3) = 8',
265: 1:    '✅f(4) = 7',
265: 1:    '✅f(5) = 5',
265: 1:    '✅f(6) = 10',
265: 1:    '✅f(7) = 11',
265: 1:    '✅f(8) = 13',
265: 1:    '✅f(9) = 8',
265: 1:    '✅f(10) = 7',
265: 1:    '✅f(11) = 14',
265: 1:    '✅f(12) = 19',
265: 1:    '✅f(13) = 20',
265: 1:    '✅f(14) = 22',
265: 1:    '✅f(15) = 26',
265: 1:    '✅f(16) = 25',
265: 1:    '✅f(17) = 14',
265: 1:    '✅f(18) = 19',
265: 1:    '✅f(19) = 29',
265: 1:    '✅f(20) = 31',
265: 1:    '✅f(21) = 26',
265: 1:    '✅f(22) = 25',
265: 1:    '✅f(23) = 41',
265: 1:    '✅f(24) = 37',
265: 1:    '❌f(25) = ??? != 29'
265: 1:  ],
265: 1:  'level': 10,
265: 1:  'nextQuestion': '25',
265: 1:  'questions': [
265: 1:    '1',
265: 1:    '2',
265: 1:    '3',
265: 1:    '4',
265: 1:    '5',
265: 1:    '6',
265: 1:    '7',
265: 1:    '8',
265: 1:    '9',
265: 1:    '10',
265: 1:    '11',
265: 1:    '12',
265: 1:    '13',
265: 1:    '14',
265: 1:    '15',
265: 1:    '16',
265: 1:    '17',
265: 1:    '18',
265: 1:    '19',
265: 1:    '20',
265: 1:    '21',
265: 1:    '22',
265: 1:    '23',
265: 1:    '24',
265: 1:    '25'
265: 1:  ]
265: 1:}
265: 1:Scores: 17334
265: 1:Answer: message('['2', '4', '8', '7', '5', '10', '11', '13', '8', '7', '14', '19', '20', '22', '26', '25', '14', '19', '29', '31', '26', '25', '41', '37', '29']')
265: 1:Fire Event: PassTest{complexity=30, testCount=25}
265: 1:Fire Event: NextAlgorithm{complexity=30, time=0}
------------------------------------------
266: 1:BoardData {
266: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
266: 1:  'history': [
266: 1:    {
266: 1:      'answer': '2',
266: 1:      'question': '1',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '4',
266: 1:      'question': '2',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '8',
266: 1:      'question': '3',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '7',
266: 1:      'question': '4',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '5',
266: 1:      'question': '5',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '10',
266: 1:      'question': '6',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '11',
266: 1:      'question': '7',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '13',
266: 1:      'question': '8',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '8',
266: 1:      'question': '9',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '7',
266: 1:      'question': '10',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '14',
266: 1:      'question': '11',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '19',
266: 1:      'question': '12',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '20',
266: 1:      'question': '13',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '22',
266: 1:      'question': '14',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '26',
266: 1:      'question': '15',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '25',
266: 1:      'question': '16',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '14',
266: 1:      'question': '17',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '19',
266: 1:      'question': '18',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '29',
266: 1:      'question': '19',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '31',
266: 1:      'question': '20',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '26',
266: 1:      'question': '21',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '25',
266: 1:      'question': '22',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '41',
266: 1:      'question': '23',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '37',
266: 1:      'question': '24',
266: 1:      'valid': true
266: 1:    },
266: 1:    {
266: 1:      'answer': '29',
266: 1:      'question': '25',
266: 1:      'valid': true
266: 1:    }
266: 1:  ],
266: 1:  'info': [
266: 1:    '✅f(1) = 2',
266: 1:    '✅f(2) = 4',
266: 1:    '✅f(3) = 8',
266: 1:    '✅f(4) = 7',
266: 1:    '✅f(5) = 5',
266: 1:    '✅f(6) = 10',
266: 1:    '✅f(7) = 11',
266: 1:    '✅f(8) = 13',
266: 1:    '✅f(9) = 8',
266: 1:    '✅f(10) = 7',
266: 1:    '✅f(11) = 14',
266: 1:    '✅f(12) = 19',
266: 1:    '✅f(13) = 20',
266: 1:    '✅f(14) = 22',
266: 1:    '✅f(15) = 26',
266: 1:    '✅f(16) = 25',
266: 1:    '✅f(17) = 14',
266: 1:    '✅f(18) = 19',
266: 1:    '✅f(19) = 29',
266: 1:    '✅f(20) = 31',
266: 1:    '✅f(21) = 26',
266: 1:    '✅f(22) = 25',
266: 1:    '✅f(23) = 41',
266: 1:    '✅f(24) = 37',
266: 1:    '✅f(25) = 29'
266: 1:  ],
266: 1:  'level': 10,
266: 1:  'questions': []
266: 1:}
266: 1:Scores: 21395
266: 1:Answer: message('StartNextLevel')
266: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
267: 1:BoardData {
267: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
267: 1:  'expectedAnswer': 'true',
267: 1:  'history': [],
267: 1:  'info': ['❌f(0, 1, 5) = ??? != true'],
267: 1:  'level': 11,
267: 1:  'nextQuestion': '0, 1, 5',
267: 1:  'questions': ['0, 1, 5']
267: 1:}
267: 1:Scores: 21395
267: 1:Answer: message('['true']')
267: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
268: 1:BoardData {
268: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
268: 1:  'expectedAnswer': 'true',
268: 1:  'history': [{
268: 1:    'answer': 'true',
268: 1:    'question': '0, 1, 5',
268: 1:    'valid': true
268: 1:  }],
268: 1:  'info': [
268: 1:    '✅f(0, 1, 5) = true',
268: 1:    '❌f(1, 0, 1) = ??? != true'
268: 1:  ],
268: 1:  'level': 11,
268: 1:  'nextQuestion': '1, 0, 1',
268: 1:  'questions': [
268: 1:    '0, 1, 5',
268: 1:    '1, 0, 1'
268: 1:  ]
268: 1:}
268: 1:Scores: 21402
268: 1:Answer: message('['true', 'true']')
268: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
269: 1:BoardData {
269: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
269: 1:  'expectedAnswer': 'false',
269: 1:  'history': [
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '0, 1, 5',
269: 1:      'valid': true
269: 1:    },
269: 1:    {
269: 1:      'answer': 'true',
269: 1:      'question': '1, 0, 1',
269: 1:      'valid': true
269: 1:    }
269: 1:  ],
269: 1:  'info': [
269: 1:    '✅f(0, 1, 5) = true',
269: 1:    '✅f(1, 0, 1) = true',
269: 1:    '❌f(1, 0, 2) = ??? != false'
269: 1:  ],
269: 1:  'level': 11,
269: 1:  'nextQuestion': '1, 0, 2',
269: 1:  'questions': [
269: 1:    '0, 1, 5',
269: 1:    '1, 0, 1',
269: 1:    '1, 0, 2'
269: 1:  ]
269: 1:}
269: 1:Scores: 21409
269: 1:Answer: message('['true', 'true', 'false']')
269: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
270: 1:BoardData {
270: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
270: 1:  'expectedAnswer': 'true',
270: 1:  'history': [
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '0, 1, 5',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'true',
270: 1:      'question': '1, 0, 1',
270: 1:      'valid': true
270: 1:    },
270: 1:    {
270: 1:      'answer': 'false',
270: 1:      'question': '1, 0, 2',
270: 1:      'valid': true
270: 1:    }
270: 1:  ],
270: 1:  'info': [
270: 1:    '✅f(0, 1, 5) = true',
270: 1:    '✅f(1, 0, 1) = true',
270: 1:    '✅f(1, 0, 2) = false',
270: 1:    '❌f(3, 1, 7) = ??? != true'
270: 1:  ],
270: 1:  'level': 11,
270: 1:  'nextQuestion': '3, 1, 7',
270: 1:  'questions': [
270: 1:    '0, 1, 5',
270: 1:    '1, 0, 1',
270: 1:    '1, 0, 2',
270: 1:    '3, 1, 7'
270: 1:  ]
270: 1:}
270: 1:Scores: 21416
270: 1:Answer: message('['true', 'true', 'false', 'true']')
270: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
271: 1:BoardData {
271: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
271: 1:  'expectedAnswer': 'true',
271: 1:  'history': [
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '0, 1, 5',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '1, 0, 1',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'false',
271: 1:      'question': '1, 0, 2',
271: 1:      'valid': true
271: 1:    },
271: 1:    {
271: 1:      'answer': 'true',
271: 1:      'question': '3, 1, 7',
271: 1:      'valid': true
271: 1:    }
271: 1:  ],
271: 1:  'info': [
271: 1:    '✅f(0, 1, 5) = true',
271: 1:    '✅f(1, 0, 1) = true',
271: 1:    '✅f(1, 0, 2) = false',
271: 1:    '✅f(3, 1, 7) = true',
271: 1:    '❌f(4, 2, 14) = ??? != true'
271: 1:  ],
271: 1:  'level': 11,
271: 1:  'nextQuestion': '4, 2, 14',
271: 1:  'questions': [
271: 1:    '0, 1, 5',
271: 1:    '1, 0, 1',
271: 1:    '1, 0, 2',
271: 1:    '3, 1, 7',
271: 1:    '4, 2, 14'
271: 1:  ]
271: 1:}
271: 1:Scores: 21423
271: 1:Answer: message('['true', 'true', 'false', 'true', 'true']')
271: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
272: 1:BoardData {
272: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
272: 1:  'expectedAnswer': 'false',
272: 1:  'history': [
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '0, 1, 5',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '1, 0, 1',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'false',
272: 1:      'question': '1, 0, 2',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '3, 1, 7',
272: 1:      'valid': true
272: 1:    },
272: 1:    {
272: 1:      'answer': 'true',
272: 1:      'question': '4, 2, 14',
272: 1:      'valid': true
272: 1:    }
272: 1:  ],
272: 1:  'info': [
272: 1:    '✅f(0, 1, 5) = true',
272: 1:    '✅f(1, 0, 1) = true',
272: 1:    '✅f(1, 0, 2) = false',
272: 1:    '✅f(3, 1, 7) = true',
272: 1:    '✅f(4, 2, 14) = true',
272: 1:    '❌f(3, 2, 14) = ??? != false'
272: 1:  ],
272: 1:  'level': 11,
272: 1:  'nextQuestion': '3, 2, 14',
272: 1:  'questions': [
272: 1:    '0, 1, 5',
272: 1:    '1, 0, 1',
272: 1:    '1, 0, 2',
272: 1:    '3, 1, 7',
272: 1:    '4, 2, 14',
272: 1:    '3, 2, 14'
272: 1:  ]
272: 1:}
272: 1:Scores: 21430
272: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false']')
272: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
273: 1:BoardData {
273: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
273: 1:  'expectedAnswer': 'true',
273: 1:  'history': [
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '0, 1, 5',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '1, 0, 1',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '1, 0, 2',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '3, 1, 7',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'true',
273: 1:      'question': '4, 2, 14',
273: 1:      'valid': true
273: 1:    },
273: 1:    {
273: 1:      'answer': 'false',
273: 1:      'question': '3, 2, 14',
273: 1:      'valid': true
273: 1:    }
273: 1:  ],
273: 1:  'info': [
273: 1:    '✅f(0, 1, 5) = true',
273: 1:    '✅f(1, 0, 1) = true',
273: 1:    '✅f(1, 0, 2) = false',
273: 1:    '✅f(3, 1, 7) = true',
273: 1:    '✅f(4, 2, 14) = true',
273: 1:    '✅f(3, 2, 14) = false',
273: 1:    '❌f(0, 2, 5) = ??? != true'
273: 1:  ],
273: 1:  'level': 11,
273: 1:  'nextQuestion': '0, 2, 5',
273: 1:  'questions': [
273: 1:    '0, 1, 5',
273: 1:    '1, 0, 1',
273: 1:    '1, 0, 2',
273: 1:    '3, 1, 7',
273: 1:    '4, 2, 14',
273: 1:    '3, 2, 14',
273: 1:    '0, 2, 5'
273: 1:  ]
273: 1:}
273: 1:Scores: 21437
273: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true']')
273: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
274: 1:BoardData {
274: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
274: 1:  'expectedAnswer': 'true',
274: 1:  'history': [
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '0, 1, 5',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '1, 0, 1',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '1, 0, 2',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '3, 1, 7',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '4, 2, 14',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'false',
274: 1:      'question': '3, 2, 14',
274: 1:      'valid': true
274: 1:    },
274: 1:    {
274: 1:      'answer': 'true',
274: 1:      'question': '0, 2, 5',
274: 1:      'valid': true
274: 1:    }
274: 1:  ],
274: 1:  'info': [
274: 1:    '✅f(0, 1, 5) = true',
274: 1:    '✅f(1, 0, 1) = true',
274: 1:    '✅f(1, 0, 2) = false',
274: 1:    '✅f(3, 1, 7) = true',
274: 1:    '✅f(4, 2, 14) = true',
274: 1:    '✅f(3, 2, 14) = false',
274: 1:    '✅f(0, 2, 5) = true',
274: 1:    '❌f(3, 1, 6) = ??? != true'
274: 1:  ],
274: 1:  'level': 11,
274: 1:  'nextQuestion': '3, 1, 6',
274: 1:  'questions': [
274: 1:    '0, 1, 5',
274: 1:    '1, 0, 1',
274: 1:    '1, 0, 2',
274: 1:    '3, 1, 7',
274: 1:    '4, 2, 14',
274: 1:    '3, 2, 14',
274: 1:    '0, 2, 5',
274: 1:    '3, 1, 6'
274: 1:  ]
274: 1:}
274: 1:Scores: 21444
274: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true']')
274: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
275: 1:BoardData {
275: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
275: 1:  'expectedAnswer': 'false',
275: 1:  'history': [
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '0, 1, 5',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '1, 0, 1',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '1, 0, 2',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '3, 1, 7',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '4, 2, 14',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'false',
275: 1:      'question': '3, 2, 14',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '0, 2, 5',
275: 1:      'valid': true
275: 1:    },
275: 1:    {
275: 1:      'answer': 'true',
275: 1:      'question': '3, 1, 6',
275: 1:      'valid': true
275: 1:    }
275: 1:  ],
275: 1:  'info': [
275: 1:    '✅f(0, 1, 5) = true',
275: 1:    '✅f(1, 0, 1) = true',
275: 1:    '✅f(1, 0, 2) = false',
275: 1:    '✅f(3, 1, 7) = true',
275: 1:    '✅f(4, 2, 14) = true',
275: 1:    '✅f(3, 2, 14) = false',
275: 1:    '✅f(0, 2, 5) = true',
275: 1:    '✅f(3, 1, 6) = true',
275: 1:    '❌f(3, 1, 9) = ??? != false'
275: 1:  ],
275: 1:  'level': 11,
275: 1:  'nextQuestion': '3, 1, 9',
275: 1:  'questions': [
275: 1:    '0, 1, 5',
275: 1:    '1, 0, 1',
275: 1:    '1, 0, 2',
275: 1:    '3, 1, 7',
275: 1:    '4, 2, 14',
275: 1:    '3, 2, 14',
275: 1:    '0, 2, 5',
275: 1:    '3, 1, 6',
275: 1:    '3, 1, 9'
275: 1:  ]
275: 1:}
275: 1:Scores: 21451
275: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false']')
275: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
276: 1:BoardData {
276: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
276: 1:  'expectedAnswer': 'false',
276: 1:  'history': [
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '0, 1, 5',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '1, 0, 1',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '1, 0, 2',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '3, 1, 7',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '4, 2, 14',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '3, 2, 14',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '0, 2, 5',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'true',
276: 1:      'question': '3, 1, 6',
276: 1:      'valid': true
276: 1:    },
276: 1:    {
276: 1:      'answer': 'false',
276: 1:      'question': '3, 1, 9',
276: 1:      'valid': true
276: 1:    }
276: 1:  ],
276: 1:  'info': [
276: 1:    '✅f(0, 1, 5) = true',
276: 1:    '✅f(1, 0, 1) = true',
276: 1:    '✅f(1, 0, 2) = false',
276: 1:    '✅f(3, 1, 7) = true',
276: 1:    '✅f(4, 2, 14) = true',
276: 1:    '✅f(3, 2, 14) = false',
276: 1:    '✅f(0, 2, 5) = true',
276: 1:    '✅f(3, 1, 6) = true',
276: 1:    '✅f(3, 1, 9) = false',
276: 1:    '❌f(3, 2, 9) = ??? != false'
276: 1:  ],
276: 1:  'level': 11,
276: 1:  'nextQuestion': '3, 2, 9',
276: 1:  'questions': [
276: 1:    '0, 1, 5',
276: 1:    '1, 0, 1',
276: 1:    '1, 0, 2',
276: 1:    '3, 1, 7',
276: 1:    '4, 2, 14',
276: 1:    '3, 2, 14',
276: 1:    '0, 2, 5',
276: 1:    '3, 1, 6',
276: 1:    '3, 1, 9',
276: 1:    '3, 2, 9'
276: 1:  ]
276: 1:}
276: 1:Scores: 21458
276: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false']')
276: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
277: 1:BoardData {
277: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
277: 1:  'expectedAnswer': 'true',
277: 1:  'history': [
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '0, 1, 5',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '1, 0, 1',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '1, 0, 2',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '3, 1, 7',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '4, 2, 14',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '3, 2, 14',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '0, 2, 5',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'true',
277: 1:      'question': '3, 1, 6',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '3, 1, 9',
277: 1:      'valid': true
277: 1:    },
277: 1:    {
277: 1:      'answer': 'false',
277: 1:      'question': '3, 2, 9',
277: 1:      'valid': true
277: 1:    }
277: 1:  ],
277: 1:  'info': [
277: 1:    '✅f(0, 1, 5) = true',
277: 1:    '✅f(1, 0, 1) = true',
277: 1:    '✅f(1, 0, 2) = false',
277: 1:    '✅f(3, 1, 7) = true',
277: 1:    '✅f(4, 2, 14) = true',
277: 1:    '✅f(3, 2, 14) = false',
277: 1:    '✅f(0, 2, 5) = true',
277: 1:    '✅f(3, 1, 6) = true',
277: 1:    '✅f(3, 1, 9) = false',
277: 1:    '✅f(3, 2, 9) = false',
277: 1:    '❌f(10, 10, 0) = ??? != true'
277: 1:  ],
277: 1:  'level': 11,
277: 1:  'nextQuestion': '10, 10, 0',
277: 1:  'questions': [
277: 1:    '0, 1, 5',
277: 1:    '1, 0, 1',
277: 1:    '1, 0, 2',
277: 1:    '3, 1, 7',
277: 1:    '4, 2, 14',
277: 1:    '3, 2, 14',
277: 1:    '0, 2, 5',
277: 1:    '3, 1, 6',
277: 1:    '3, 1, 9',
277: 1:    '3, 2, 9',
277: 1:    '10, 10, 0'
277: 1:  ]
277: 1:}
277: 1:Scores: 21465
277: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
277: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
278: 1:BoardData {
278: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
278: 1:  'expectedAnswer': 'false',
278: 1:  'history': [
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '0, 1, 5',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '1, 0, 1',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '1, 0, 2',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '3, 1, 7',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '4, 2, 14',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '3, 2, 14',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '0, 2, 5',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '3, 1, 6',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '3, 1, 9',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'false',
278: 1:      'question': '3, 2, 9',
278: 1:      'valid': true
278: 1:    },
278: 1:    {
278: 1:      'answer': 'true',
278: 1:      'question': '10, 10, 0',
278: 1:      'valid': true
278: 1:    }
278: 1:  ],
278: 1:  'info': [
278: 1:    '✅f(0, 1, 5) = true',
278: 1:    '✅f(1, 0, 1) = true',
278: 1:    '✅f(1, 0, 2) = false',
278: 1:    '✅f(3, 1, 7) = true',
278: 1:    '✅f(4, 2, 14) = true',
278: 1:    '✅f(3, 2, 14) = false',
278: 1:    '✅f(0, 2, 5) = true',
278: 1:    '✅f(3, 1, 6) = true',
278: 1:    '✅f(3, 1, 9) = false',
278: 1:    '✅f(3, 2, 9) = false',
278: 1:    '✅f(10, 10, 0) = true',
278: 1:    '❌f(0, 0, 1) = ??? != false'
278: 1:  ],
278: 1:  'level': 11,
278: 1:  'nextQuestion': '0, 0, 1',
278: 1:  'questions': [
278: 1:    '0, 1, 5',
278: 1:    '1, 0, 1',
278: 1:    '1, 0, 2',
278: 1:    '3, 1, 7',
278: 1:    '4, 2, 14',
278: 1:    '3, 2, 14',
278: 1:    '0, 2, 5',
278: 1:    '3, 1, 6',
278: 1:    '3, 1, 9',
278: 1:    '3, 2, 9',
278: 1:    '10, 10, 0',
278: 1:    '0, 0, 1'
278: 1:  ]
278: 1:}
278: 1:Scores: 21472
278: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false']')
278: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
279: 1:BoardData {
279: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
279: 1:  'expectedAnswer': 'false',
279: 1:  'history': [
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '0, 1, 5',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '1, 0, 1',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '1, 0, 2',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '3, 1, 7',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '4, 2, 14',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '3, 2, 14',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '0, 2, 5',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '3, 1, 6',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '3, 1, 9',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '3, 2, 9',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'true',
279: 1:      'question': '10, 10, 0',
279: 1:      'valid': true
279: 1:    },
279: 1:    {
279: 1:      'answer': 'false',
279: 1:      'question': '0, 0, 1',
279: 1:      'valid': true
279: 1:    }
279: 1:  ],
279: 1:  'info': [
279: 1:    '✅f(0, 1, 5) = true',
279: 1:    '✅f(1, 0, 1) = true',
279: 1:    '✅f(1, 0, 2) = false',
279: 1:    '✅f(3, 1, 7) = true',
279: 1:    '✅f(4, 2, 14) = true',
279: 1:    '✅f(3, 2, 14) = false',
279: 1:    '✅f(0, 2, 5) = true',
279: 1:    '✅f(3, 1, 6) = true',
279: 1:    '✅f(3, 1, 9) = false',
279: 1:    '✅f(3, 2, 9) = false',
279: 1:    '✅f(10, 10, 0) = true',
279: 1:    '✅f(0, 0, 1) = false',
279: 1:    '❌f(0, 1, 1) = ??? != false'
279: 1:  ],
279: 1:  'level': 11,
279: 1:  'nextQuestion': '0, 1, 1',
279: 1:  'questions': [
279: 1:    '0, 1, 5',
279: 1:    '1, 0, 1',
279: 1:    '1, 0, 2',
279: 1:    '3, 1, 7',
279: 1:    '4, 2, 14',
279: 1:    '3, 2, 14',
279: 1:    '0, 2, 5',
279: 1:    '3, 1, 6',
279: 1:    '3, 1, 9',
279: 1:    '3, 2, 9',
279: 1:    '10, 10, 0',
279: 1:    '0, 0, 1',
279: 1:    '0, 1, 1'
279: 1:  ]
279: 1:}
279: 1:Scores: 21479
279: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false']')
279: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
280: 1:BoardData {
280: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
280: 1:  'expectedAnswer': 'false',
280: 1:  'history': [
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '0, 1, 5',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '1, 0, 1',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '1, 0, 2',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '3, 1, 7',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '4, 2, 14',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '3, 2, 14',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '0, 2, 5',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '3, 1, 6',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '3, 1, 9',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '3, 2, 9',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'true',
280: 1:      'question': '10, 10, 0',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '0, 0, 1',
280: 1:      'valid': true
280: 1:    },
280: 1:    {
280: 1:      'answer': 'false',
280: 1:      'question': '0, 1, 1',
280: 1:      'valid': true
280: 1:    }
280: 1:  ],
280: 1:  'info': [
280: 1:    '✅f(0, 1, 5) = true',
280: 1:    '✅f(1, 0, 1) = true',
280: 1:    '✅f(1, 0, 2) = false',
280: 1:    '✅f(3, 1, 7) = true',
280: 1:    '✅f(4, 2, 14) = true',
280: 1:    '✅f(3, 2, 14) = false',
280: 1:    '✅f(0, 2, 5) = true',
280: 1:    '✅f(3, 1, 6) = true',
280: 1:    '✅f(3, 1, 9) = false',
280: 1:    '✅f(3, 2, 9) = false',
280: 1:    '✅f(10, 10, 0) = true',
280: 1:    '✅f(0, 0, 1) = false',
280: 1:    '✅f(0, 1, 1) = false',
280: 1:    '❌f(0, 0, 2) = ??? != false'
280: 1:  ],
280: 1:  'level': 11,
280: 1:  'nextQuestion': '0, 0, 2',
280: 1:  'questions': [
280: 1:    '0, 1, 5',
280: 1:    '1, 0, 1',
280: 1:    '1, 0, 2',
280: 1:    '3, 1, 7',
280: 1:    '4, 2, 14',
280: 1:    '3, 2, 14',
280: 1:    '0, 2, 5',
280: 1:    '3, 1, 6',
280: 1:    '3, 1, 9',
280: 1:    '3, 2, 9',
280: 1:    '10, 10, 0',
280: 1:    '0, 0, 1',
280: 1:    '0, 1, 1',
280: 1:    '0, 0, 2'
280: 1:  ]
280: 1:}
280: 1:Scores: 21486
280: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false']')
280: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
281: 1:BoardData {
281: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
281: 1:  'expectedAnswer': 'true',
281: 1:  'history': [
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '0, 1, 5',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '1, 0, 1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '1, 0, 2',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '3, 1, 7',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '4, 2, 14',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '3, 2, 14',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '0, 2, 5',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '3, 1, 6',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '3, 1, 9',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '3, 2, 9',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'true',
281: 1:      'question': '10, 10, 0',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '0, 0, 1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '0, 1, 1',
281: 1:      'valid': true
281: 1:    },
281: 1:    {
281: 1:      'answer': 'false',
281: 1:      'question': '0, 0, 2',
281: 1:      'valid': true
281: 1:    }
281: 1:  ],
281: 1:  'info': [
281: 1:    '✅f(0, 1, 5) = true',
281: 1:    '✅f(1, 0, 1) = true',
281: 1:    '✅f(1, 0, 2) = false',
281: 1:    '✅f(3, 1, 7) = true',
281: 1:    '✅f(4, 2, 14) = true',
281: 1:    '✅f(3, 2, 14) = false',
281: 1:    '✅f(0, 2, 5) = true',
281: 1:    '✅f(3, 1, 6) = true',
281: 1:    '✅f(3, 1, 9) = false',
281: 1:    '✅f(3, 2, 9) = false',
281: 1:    '✅f(10, 10, 0) = true',
281: 1:    '✅f(0, 0, 1) = false',
281: 1:    '✅f(0, 1, 1) = false',
281: 1:    '✅f(0, 0, 2) = false',
281: 1:    '❌f(2, 0, 2) = ??? != true'
281: 1:  ],
281: 1:  'level': 11,
281: 1:  'nextQuestion': '2, 0, 2',
281: 1:  'questions': [
281: 1:    '0, 1, 5',
281: 1:    '1, 0, 1',
281: 1:    '1, 0, 2',
281: 1:    '3, 1, 7',
281: 1:    '4, 2, 14',
281: 1:    '3, 2, 14',
281: 1:    '0, 2, 5',
281: 1:    '3, 1, 6',
281: 1:    '3, 1, 9',
281: 1:    '3, 2, 9',
281: 1:    '10, 10, 0',
281: 1:    '0, 0, 1',
281: 1:    '0, 1, 1',
281: 1:    '0, 0, 2',
281: 1:    '2, 0, 2'
281: 1:  ]
281: 1:}
281: 1:Scores: 21493
281: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true']')
281: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
282: 1:BoardData {
282: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
282: 1:  'expectedAnswer': 'false',
282: 1:  'history': [
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '0, 1, 5',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '1, 0, 1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '1, 0, 2',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '3, 1, 7',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '4, 2, 14',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '3, 2, 14',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '0, 2, 5',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '3, 1, 6',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '3, 1, 9',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '3, 2, 9',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '10, 10, 0',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '0, 0, 1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '0, 1, 1',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'false',
282: 1:      'question': '0, 0, 2',
282: 1:      'valid': true
282: 1:    },
282: 1:    {
282: 1:      'answer': 'true',
282: 1:      'question': '2, 0, 2',
282: 1:      'valid': true
282: 1:    }
282: 1:  ],
282: 1:  'info': [
282: 1:    '✅f(0, 1, 5) = true',
282: 1:    '✅f(1, 0, 1) = true',
282: 1:    '✅f(1, 0, 2) = false',
282: 1:    '✅f(3, 1, 7) = true',
282: 1:    '✅f(4, 2, 14) = true',
282: 1:    '✅f(3, 2, 14) = false',
282: 1:    '✅f(0, 2, 5) = true',
282: 1:    '✅f(3, 1, 6) = true',
282: 1:    '✅f(3, 1, 9) = false',
282: 1:    '✅f(3, 2, 9) = false',
282: 1:    '✅f(10, 10, 0) = true',
282: 1:    '✅f(0, 0, 1) = false',
282: 1:    '✅f(0, 1, 1) = false',
282: 1:    '✅f(0, 0, 2) = false',
282: 1:    '✅f(2, 0, 2) = true',
282: 1:    '❌f(0, 1, 2) = ??? != false'
282: 1:  ],
282: 1:  'level': 11,
282: 1:  'nextQuestion': '0, 1, 2',
282: 1:  'questions': [
282: 1:    '0, 1, 5',
282: 1:    '1, 0, 1',
282: 1:    '1, 0, 2',
282: 1:    '3, 1, 7',
282: 1:    '4, 2, 14',
282: 1:    '3, 2, 14',
282: 1:    '0, 2, 5',
282: 1:    '3, 1, 6',
282: 1:    '3, 1, 9',
282: 1:    '3, 2, 9',
282: 1:    '10, 10, 0',
282: 1:    '0, 0, 1',
282: 1:    '0, 1, 1',
282: 1:    '0, 0, 2',
282: 1:    '2, 0, 2',
282: 1:    '0, 1, 2'
282: 1:  ]
282: 1:}
282: 1:Scores: 21500
282: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false']')
282: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
283: 1:BoardData {
283: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
283: 1:  'expectedAnswer': 'false',
283: 1:  'history': [
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '0, 1, 5',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '1, 0, 1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '1, 0, 2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '3, 1, 7',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '4, 2, 14',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '3, 2, 14',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '0, 2, 5',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '3, 1, 6',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '3, 1, 9',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '3, 2, 9',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '10, 10, 0',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '0, 0, 1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '0, 1, 1',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '0, 0, 2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'true',
283: 1:      'question': '2, 0, 2',
283: 1:      'valid': true
283: 1:    },
283: 1:    {
283: 1:      'answer': 'false',
283: 1:      'question': '0, 1, 2',
283: 1:      'valid': true
283: 1:    }
283: 1:  ],
283: 1:  'info': [
283: 1:    '✅f(0, 1, 5) = true',
283: 1:    '✅f(1, 0, 1) = true',
283: 1:    '✅f(1, 0, 2) = false',
283: 1:    '✅f(3, 1, 7) = true',
283: 1:    '✅f(4, 2, 14) = true',
283: 1:    '✅f(3, 2, 14) = false',
283: 1:    '✅f(0, 2, 5) = true',
283: 1:    '✅f(3, 1, 6) = true',
283: 1:    '✅f(3, 1, 9) = false',
283: 1:    '✅f(3, 2, 9) = false',
283: 1:    '✅f(10, 10, 0) = true',
283: 1:    '✅f(0, 0, 1) = false',
283: 1:    '✅f(0, 1, 1) = false',
283: 1:    '✅f(0, 0, 2) = false',
283: 1:    '✅f(2, 0, 2) = true',
283: 1:    '✅f(0, 1, 2) = false',
283: 1:    '❌f(1, 1, 2) = ??? != false'
283: 1:  ],
283: 1:  'level': 11,
283: 1:  'nextQuestion': '1, 1, 2',
283: 1:  'questions': [
283: 1:    '0, 1, 5',
283: 1:    '1, 0, 1',
283: 1:    '1, 0, 2',
283: 1:    '3, 1, 7',
283: 1:    '4, 2, 14',
283: 1:    '3, 2, 14',
283: 1:    '0, 2, 5',
283: 1:    '3, 1, 6',
283: 1:    '3, 1, 9',
283: 1:    '3, 2, 9',
283: 1:    '10, 10, 0',
283: 1:    '0, 0, 1',
283: 1:    '0, 1, 1',
283: 1:    '0, 0, 2',
283: 1:    '2, 0, 2',
283: 1:    '0, 1, 2',
283: 1:    '1, 1, 2'
283: 1:  ]
283: 1:}
283: 1:Scores: 21507
283: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false']')
283: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
284: 1:BoardData {
284: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
284: 1:  'expectedAnswer': 'false',
284: 1:  'history': [
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '0, 1, 5',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '1, 0, 1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '1, 0, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '3, 1, 7',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '4, 2, 14',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '3, 2, 14',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '0, 2, 5',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '3, 1, 6',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '3, 1, 9',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '3, 2, 9',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '10, 10, 0',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '0, 0, 1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '0, 1, 1',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '0, 0, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'true',
284: 1:      'question': '2, 0, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '0, 1, 2',
284: 1:      'valid': true
284: 1:    },
284: 1:    {
284: 1:      'answer': 'false',
284: 1:      'question': '1, 1, 2',
284: 1:      'valid': true
284: 1:    }
284: 1:  ],
284: 1:  'info': [
284: 1:    '✅f(0, 1, 5) = true',
284: 1:    '✅f(1, 0, 1) = true',
284: 1:    '✅f(1, 0, 2) = false',
284: 1:    '✅f(3, 1, 7) = true',
284: 1:    '✅f(4, 2, 14) = true',
284: 1:    '✅f(3, 2, 14) = false',
284: 1:    '✅f(0, 2, 5) = true',
284: 1:    '✅f(3, 1, 6) = true',
284: 1:    '✅f(3, 1, 9) = false',
284: 1:    '✅f(3, 2, 9) = false',
284: 1:    '✅f(10, 10, 0) = true',
284: 1:    '✅f(0, 0, 1) = false',
284: 1:    '✅f(0, 1, 1) = false',
284: 1:    '✅f(0, 0, 2) = false',
284: 1:    '✅f(2, 0, 2) = true',
284: 1:    '✅f(0, 1, 2) = false',
284: 1:    '✅f(1, 1, 2) = false',
284: 1:    '❌f(2, 1, 3) = ??? != false'
284: 1:  ],
284: 1:  'level': 11,
284: 1:  'nextQuestion': '2, 1, 3',
284: 1:  'questions': [
284: 1:    '0, 1, 5',
284: 1:    '1, 0, 1',
284: 1:    '1, 0, 2',
284: 1:    '3, 1, 7',
284: 1:    '4, 2, 14',
284: 1:    '3, 2, 14',
284: 1:    '0, 2, 5',
284: 1:    '3, 1, 6',
284: 1:    '3, 1, 9',
284: 1:    '3, 2, 9',
284: 1:    '10, 10, 0',
284: 1:    '0, 0, 1',
284: 1:    '0, 1, 1',
284: 1:    '0, 0, 2',
284: 1:    '2, 0, 2',
284: 1:    '0, 1, 2',
284: 1:    '1, 1, 2',
284: 1:    '2, 1, 3'
284: 1:  ]
284: 1:}
284: 1:Scores: 21514
284: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false']')
284: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
285: 1:BoardData {
285: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
285: 1:  'expectedAnswer': 'false',
285: 1:  'history': [
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '0, 1, 5',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '1, 0, 1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '1, 0, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '3, 1, 7',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '4, 2, 14',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '3, 2, 14',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '0, 2, 5',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '3, 1, 6',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '3, 1, 9',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '3, 2, 9',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '10, 10, 0',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '0, 0, 1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '0, 1, 1',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '0, 0, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'true',
285: 1:      'question': '2, 0, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '0, 1, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '1, 1, 2',
285: 1:      'valid': true
285: 1:    },
285: 1:    {
285: 1:      'answer': 'false',
285: 1:      'question': '2, 1, 3',
285: 1:      'valid': true
285: 1:    }
285: 1:  ],
285: 1:  'info': [
285: 1:    '✅f(0, 1, 5) = true',
285: 1:    '✅f(1, 0, 1) = true',
285: 1:    '✅f(1, 0, 2) = false',
285: 1:    '✅f(3, 1, 7) = true',
285: 1:    '✅f(4, 2, 14) = true',
285: 1:    '✅f(3, 2, 14) = false',
285: 1:    '✅f(0, 2, 5) = true',
285: 1:    '✅f(3, 1, 6) = true',
285: 1:    '✅f(3, 1, 9) = false',
285: 1:    '✅f(3, 2, 9) = false',
285: 1:    '✅f(10, 10, 0) = true',
285: 1:    '✅f(0, 0, 1) = false',
285: 1:    '✅f(0, 1, 1) = false',
285: 1:    '✅f(0, 0, 2) = false',
285: 1:    '✅f(2, 0, 2) = true',
285: 1:    '✅f(0, 1, 2) = false',
285: 1:    '✅f(1, 1, 2) = false',
285: 1:    '✅f(2, 1, 3) = false',
285: 1:    '❌f(3, 1, 4) = ??? != false'
285: 1:  ],
285: 1:  'level': 11,
285: 1:  'nextQuestion': '3, 1, 4',
285: 1:  'questions': [
285: 1:    '0, 1, 5',
285: 1:    '1, 0, 1',
285: 1:    '1, 0, 2',
285: 1:    '3, 1, 7',
285: 1:    '4, 2, 14',
285: 1:    '3, 2, 14',
285: 1:    '0, 2, 5',
285: 1:    '3, 1, 6',
285: 1:    '3, 1, 9',
285: 1:    '3, 2, 9',
285: 1:    '10, 10, 0',
285: 1:    '0, 0, 1',
285: 1:    '0, 1, 1',
285: 1:    '0, 0, 2',
285: 1:    '2, 0, 2',
285: 1:    '0, 1, 2',
285: 1:    '1, 1, 2',
285: 1:    '2, 1, 3',
285: 1:    '3, 1, 4'
285: 1:  ]
285: 1:}
285: 1:Scores: 21521
285: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false']')
285: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
286: 1:BoardData {
286: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
286: 1:  'expectedAnswer': 'true',
286: 1:  'history': [
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '0, 1, 5',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '1, 0, 1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '1, 0, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '3, 1, 7',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '4, 2, 14',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '3, 2, 14',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '0, 2, 5',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '3, 1, 6',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '3, 1, 9',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '3, 2, 9',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '10, 10, 0',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '0, 0, 1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '0, 1, 1',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '0, 0, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'true',
286: 1:      'question': '2, 0, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '0, 1, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '1, 1, 2',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '2, 1, 3',
286: 1:      'valid': true
286: 1:    },
286: 1:    {
286: 1:      'answer': 'false',
286: 1:      'question': '3, 1, 4',
286: 1:      'valid': true
286: 1:    }
286: 1:  ],
286: 1:  'info': [
286: 1:    '✅f(0, 1, 5) = true',
286: 1:    '✅f(1, 0, 1) = true',
286: 1:    '✅f(1, 0, 2) = false',
286: 1:    '✅f(3, 1, 7) = true',
286: 1:    '✅f(4, 2, 14) = true',
286: 1:    '✅f(3, 2, 14) = false',
286: 1:    '✅f(0, 2, 5) = true',
286: 1:    '✅f(3, 1, 6) = true',
286: 1:    '✅f(3, 1, 9) = false',
286: 1:    '✅f(3, 2, 9) = false',
286: 1:    '✅f(10, 10, 0) = true',
286: 1:    '✅f(0, 0, 1) = false',
286: 1:    '✅f(0, 1, 1) = false',
286: 1:    '✅f(0, 0, 2) = false',
286: 1:    '✅f(2, 0, 2) = true',
286: 1:    '✅f(0, 1, 2) = false',
286: 1:    '✅f(1, 1, 2) = false',
286: 1:    '✅f(2, 1, 3) = false',
286: 1:    '✅f(3, 1, 4) = false',
286: 1:    '❌f(2, 1, 1) = ??? != true'
286: 1:  ],
286: 1:  'level': 11,
286: 1:  'nextQuestion': '2, 1, 1',
286: 1:  'questions': [
286: 1:    '0, 1, 5',
286: 1:    '1, 0, 1',
286: 1:    '1, 0, 2',
286: 1:    '3, 1, 7',
286: 1:    '4, 2, 14',
286: 1:    '3, 2, 14',
286: 1:    '0, 2, 5',
286: 1:    '3, 1, 6',
286: 1:    '3, 1, 9',
286: 1:    '3, 2, 9',
286: 1:    '10, 10, 0',
286: 1:    '0, 0, 1',
286: 1:    '0, 1, 1',
286: 1:    '0, 0, 2',
286: 1:    '2, 0, 2',
286: 1:    '0, 1, 2',
286: 1:    '1, 1, 2',
286: 1:    '2, 1, 3',
286: 1:    '3, 1, 4',
286: 1:    '2, 1, 1'
286: 1:  ]
286: 1:}
286: 1:Scores: 21528
286: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true']')
286: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
287: 1:BoardData {
287: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
287: 1:  'expectedAnswer': 'true',
287: 1:  'history': [
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '0, 1, 5',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '1, 0, 1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '1, 0, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '3, 1, 7',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '4, 2, 14',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '3, 2, 14',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '0, 2, 5',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '3, 1, 6',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '3, 1, 9',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '3, 2, 9',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '10, 10, 0',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '0, 0, 1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '0, 1, 1',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '0, 0, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '2, 0, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '0, 1, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '1, 1, 2',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '2, 1, 3',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'false',
287: 1:      'question': '3, 1, 4',
287: 1:      'valid': true
287: 1:    },
287: 1:    {
287: 1:      'answer': 'true',
287: 1:      'question': '2, 1, 1',
287: 1:      'valid': true
287: 1:    }
287: 1:  ],
287: 1:  'info': [
287: 1:    '✅f(0, 1, 5) = true',
287: 1:    '✅f(1, 0, 1) = true',
287: 1:    '✅f(1, 0, 2) = false',
287: 1:    '✅f(3, 1, 7) = true',
287: 1:    '✅f(4, 2, 14) = true',
287: 1:    '✅f(3, 2, 14) = false',
287: 1:    '✅f(0, 2, 5) = true',
287: 1:    '✅f(3, 1, 6) = true',
287: 1:    '✅f(3, 1, 9) = false',
287: 1:    '✅f(3, 2, 9) = false',
287: 1:    '✅f(10, 10, 0) = true',
287: 1:    '✅f(0, 0, 1) = false',
287: 1:    '✅f(0, 1, 1) = false',
287: 1:    '✅f(0, 0, 2) = false',
287: 1:    '✅f(2, 0, 2) = true',
287: 1:    '✅f(0, 1, 2) = false',
287: 1:    '✅f(1, 1, 2) = false',
287: 1:    '✅f(2, 1, 3) = false',
287: 1:    '✅f(3, 1, 4) = false',
287: 1:    '✅f(2, 1, 1) = true',
287: 1:    '❌f(2, 2, 6) = ??? != true'
287: 1:  ],
287: 1:  'level': 11,
287: 1:  'nextQuestion': '2, 2, 6',
287: 1:  'questions': [
287: 1:    '0, 1, 5',
287: 1:    '1, 0, 1',
287: 1:    '1, 0, 2',
287: 1:    '3, 1, 7',
287: 1:    '4, 2, 14',
287: 1:    '3, 2, 14',
287: 1:    '0, 2, 5',
287: 1:    '3, 1, 6',
287: 1:    '3, 1, 9',
287: 1:    '3, 2, 9',
287: 1:    '10, 10, 0',
287: 1:    '0, 0, 1',
287: 1:    '0, 1, 1',
287: 1:    '0, 0, 2',
287: 1:    '2, 0, 2',
287: 1:    '0, 1, 2',
287: 1:    '1, 1, 2',
287: 1:    '2, 1, 3',
287: 1:    '3, 1, 4',
287: 1:    '2, 1, 1',
287: 1:    '2, 2, 6'
287: 1:  ]
287: 1:}
287: 1:Scores: 21535
287: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true']')
287: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
288: 1:BoardData {
288: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
288: 1:  'expectedAnswer': 'true',
288: 1:  'history': [
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '0, 1, 5',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '1, 0, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '1, 0, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '3, 1, 7',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '4, 2, 14',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '3, 2, 14',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '0, 2, 5',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '3, 1, 6',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '3, 1, 9',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '3, 2, 9',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '10, 10, 0',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '0, 0, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '0, 1, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '0, 0, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '2, 0, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '0, 1, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '1, 1, 2',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '2, 1, 3',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'false',
288: 1:      'question': '3, 1, 4',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '2, 1, 1',
288: 1:      'valid': true
288: 1:    },
288: 1:    {
288: 1:      'answer': 'true',
288: 1:      'question': '2, 2, 6',
288: 1:      'valid': true
288: 1:    }
288: 1:  ],
288: 1:  'info': [
288: 1:    '✅f(0, 1, 5) = true',
288: 1:    '✅f(1, 0, 1) = true',
288: 1:    '✅f(1, 0, 2) = false',
288: 1:    '✅f(3, 1, 7) = true',
288: 1:    '✅f(4, 2, 14) = true',
288: 1:    '✅f(3, 2, 14) = false',
288: 1:    '✅f(0, 2, 5) = true',
288: 1:    '✅f(3, 1, 6) = true',
288: 1:    '✅f(3, 1, 9) = false',
288: 1:    '✅f(3, 2, 9) = false',
288: 1:    '✅f(10, 10, 0) = true',
288: 1:    '✅f(0, 0, 1) = false',
288: 1:    '✅f(0, 1, 1) = false',
288: 1:    '✅f(0, 0, 2) = false',
288: 1:    '✅f(2, 0, 2) = true',
288: 1:    '✅f(0, 1, 2) = false',
288: 1:    '✅f(1, 1, 2) = false',
288: 1:    '✅f(2, 1, 3) = false',
288: 1:    '✅f(3, 1, 4) = false',
288: 1:    '✅f(2, 1, 1) = true',
288: 1:    '✅f(2, 2, 6) = true',
288: 1:    '❌f(6, 1, 11) = ??? != true'
288: 1:  ],
288: 1:  'level': 11,
288: 1:  'nextQuestion': '6, 1, 11',
288: 1:  'questions': [
288: 1:    '0, 1, 5',
288: 1:    '1, 0, 1',
288: 1:    '1, 0, 2',
288: 1:    '3, 1, 7',
288: 1:    '4, 2, 14',
288: 1:    '3, 2, 14',
288: 1:    '0, 2, 5',
288: 1:    '3, 1, 6',
288: 1:    '3, 1, 9',
288: 1:    '3, 2, 9',
288: 1:    '10, 10, 0',
288: 1:    '0, 0, 1',
288: 1:    '0, 1, 1',
288: 1:    '0, 0, 2',
288: 1:    '2, 0, 2',
288: 1:    '0, 1, 2',
288: 1:    '1, 1, 2',
288: 1:    '2, 1, 3',
288: 1:    '3, 1, 4',
288: 1:    '2, 1, 1',
288: 1:    '2, 2, 6',
288: 1:    '6, 1, 11'
288: 1:  ]
288: 1:}
288: 1:Scores: 21542
288: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true']')
288: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
289: 1:BoardData {
289: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
289: 1:  'expectedAnswer': 'true',
289: 1:  'history': [
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '0, 1, 5',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '1, 0, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '1, 0, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '3, 1, 7',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '4, 2, 14',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '3, 2, 14',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '0, 2, 5',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '3, 1, 6',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '3, 1, 9',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '3, 2, 9',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '10, 10, 0',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '0, 0, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '0, 1, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '0, 0, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '2, 0, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '0, 1, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '1, 1, 2',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '2, 1, 3',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'false',
289: 1:      'question': '3, 1, 4',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '2, 1, 1',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '2, 2, 6',
289: 1:      'valid': true
289: 1:    },
289: 1:    {
289: 1:      'answer': 'true',
289: 1:      'question': '6, 1, 11',
289: 1:      'valid': true
289: 1:    }
289: 1:  ],
289: 1:  'info': [
289: 1:    '✅f(0, 1, 5) = true',
289: 1:    '✅f(1, 0, 1) = true',
289: 1:    '✅f(1, 0, 2) = false',
289: 1:    '✅f(3, 1, 7) = true',
289: 1:    '✅f(4, 2, 14) = true',
289: 1:    '✅f(3, 2, 14) = false',
289: 1:    '✅f(0, 2, 5) = true',
289: 1:    '✅f(3, 1, 6) = true',
289: 1:    '✅f(3, 1, 9) = false',
289: 1:    '✅f(3, 2, 9) = false',
289: 1:    '✅f(10, 10, 0) = true',
289: 1:    '✅f(0, 0, 1) = false',
289: 1:    '✅f(0, 1, 1) = false',
289: 1:    '✅f(0, 0, 2) = false',
289: 1:    '✅f(2, 0, 2) = true',
289: 1:    '✅f(0, 1, 2) = false',
289: 1:    '✅f(1, 1, 2) = false',
289: 1:    '✅f(2, 1, 3) = false',
289: 1:    '✅f(3, 1, 4) = false',
289: 1:    '✅f(2, 1, 1) = true',
289: 1:    '✅f(2, 2, 6) = true',
289: 1:    '✅f(6, 1, 11) = true',
289: 1:    '❌f(5, 0, 1) = ??? != true'
289: 1:  ],
289: 1:  'level': 11,
289: 1:  'nextQuestion': '5, 0, 1',
289: 1:  'questions': [
289: 1:    '0, 1, 5',
289: 1:    '1, 0, 1',
289: 1:    '1, 0, 2',
289: 1:    '3, 1, 7',
289: 1:    '4, 2, 14',
289: 1:    '3, 2, 14',
289: 1:    '0, 2, 5',
289: 1:    '3, 1, 6',
289: 1:    '3, 1, 9',
289: 1:    '3, 2, 9',
289: 1:    '10, 10, 0',
289: 1:    '0, 0, 1',
289: 1:    '0, 1, 1',
289: 1:    '0, 0, 2',
289: 1:    '2, 0, 2',
289: 1:    '0, 1, 2',
289: 1:    '1, 1, 2',
289: 1:    '2, 1, 3',
289: 1:    '3, 1, 4',
289: 1:    '2, 1, 1',
289: 1:    '2, 2, 6',
289: 1:    '6, 1, 11',
289: 1:    '5, 0, 1'
289: 1:  ]
289: 1:}
289: 1:Scores: 21549
289: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true']')
289: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
290: 1:BoardData {
290: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
290: 1:  'expectedAnswer': 'true',
290: 1:  'history': [
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '0, 1, 5',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '1, 0, 1',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '1, 0, 2',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '3, 1, 7',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '4, 2, 14',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '3, 2, 14',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '0, 2, 5',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '3, 1, 6',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '3, 1, 9',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '3, 2, 9',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '10, 10, 0',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '0, 0, 1',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '0, 1, 1',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '0, 0, 2',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '2, 0, 2',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '0, 1, 2',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '1, 1, 2',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '2, 1, 3',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'false',
290: 1:      'question': '3, 1, 4',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '2, 1, 1',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '2, 2, 6',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '6, 1, 11',
290: 1:      'valid': true
290: 1:    },
290: 1:    {
290: 1:      'answer': 'true',
290: 1:      'question': '5, 0, 1',
290: 1:      'valid': true
290: 1:    }
290: 1:  ],
290: 1:  'info': [
290: 1:    '✅f(0, 1, 5) = true',
290: 1:    '✅f(1, 0, 1) = true',
290: 1:    '✅f(1, 0, 2) = false',
290: 1:    '✅f(3, 1, 7) = true',
290: 1:    '✅f(4, 2, 14) = true',
290: 1:    '✅f(3, 2, 14) = false',
290: 1:    '✅f(0, 2, 5) = true',
290: 1:    '✅f(3, 1, 6) = true',
290: 1:    '✅f(3, 1, 9) = false',
290: 1:    '✅f(3, 2, 9) = false',
290: 1:    '✅f(10, 10, 0) = true',
290: 1:    '✅f(0, 0, 1) = false',
290: 1:    '✅f(0, 1, 1) = false',
290: 1:    '✅f(0, 0, 2) = false',
290: 1:    '✅f(2, 0, 2) = true',
290: 1:    '✅f(0, 1, 2) = false',
290: 1:    '✅f(1, 1, 2) = false',
290: 1:    '✅f(2, 1, 3) = false',
290: 1:    '✅f(3, 1, 4) = false',
290: 1:    '✅f(2, 1, 1) = true',
290: 1:    '✅f(2, 2, 6) = true',
290: 1:    '✅f(6, 1, 11) = true',
290: 1:    '✅f(5, 0, 1) = true',
290: 1:    '❌f(3, 1, 8) = ??? != true'
290: 1:  ],
290: 1:  'level': 11,
290: 1:  'nextQuestion': '3, 1, 8',
290: 1:  'questions': [
290: 1:    '0, 1, 5',
290: 1:    '1, 0, 1',
290: 1:    '1, 0, 2',
290: 1:    '3, 1, 7',
290: 1:    '4, 2, 14',
290: 1:    '3, 2, 14',
290: 1:    '0, 2, 5',
290: 1:    '3, 1, 6',
290: 1:    '3, 1, 9',
290: 1:    '3, 2, 9',
290: 1:    '10, 10, 0',
290: 1:    '0, 0, 1',
290: 1:    '0, 1, 1',
290: 1:    '0, 0, 2',
290: 1:    '2, 0, 2',
290: 1:    '0, 1, 2',
290: 1:    '1, 1, 2',
290: 1:    '2, 1, 3',
290: 1:    '3, 1, 4',
290: 1:    '2, 1, 1',
290: 1:    '2, 2, 6',
290: 1:    '6, 1, 11',
290: 1:    '5, 0, 1',
290: 1:    '3, 1, 8'
290: 1:  ]
290: 1:}
290: 1:Scores: 21556
290: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true']')
290: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
291: 1:BoardData {
291: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
291: 1:  'expectedAnswer': 'true',
291: 1:  'history': [
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '0, 1, 5',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '1, 0, 1',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '1, 0, 2',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '3, 1, 7',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '4, 2, 14',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '3, 2, 14',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '0, 2, 5',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '3, 1, 6',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '3, 1, 9',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '3, 2, 9',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '10, 10, 0',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '0, 0, 1',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '0, 1, 1',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '0, 0, 2',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '2, 0, 2',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '0, 1, 2',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '1, 1, 2',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '2, 1, 3',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'false',
291: 1:      'question': '3, 1, 4',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '2, 1, 1',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '2, 2, 6',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '6, 1, 11',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '5, 0, 1',
291: 1:      'valid': true
291: 1:    },
291: 1:    {
291: 1:      'answer': 'true',
291: 1:      'question': '3, 1, 8',
291: 1:      'valid': true
291: 1:    }
291: 1:  ],
291: 1:  'info': [
291: 1:    '✅f(0, 1, 5) = true',
291: 1:    '✅f(1, 0, 1) = true',
291: 1:    '✅f(1, 0, 2) = false',
291: 1:    '✅f(3, 1, 7) = true',
291: 1:    '✅f(4, 2, 14) = true',
291: 1:    '✅f(3, 2, 14) = false',
291: 1:    '✅f(0, 2, 5) = true',
291: 1:    '✅f(3, 1, 6) = true',
291: 1:    '✅f(3, 1, 9) = false',
291: 1:    '✅f(3, 2, 9) = false',
291: 1:    '✅f(10, 10, 0) = true',
291: 1:    '✅f(0, 0, 1) = false',
291: 1:    '✅f(0, 1, 1) = false',
291: 1:    '✅f(0, 0, 2) = false',
291: 1:    '✅f(2, 0, 2) = true',
291: 1:    '✅f(0, 1, 2) = false',
291: 1:    '✅f(1, 1, 2) = false',
291: 1:    '✅f(2, 1, 3) = false',
291: 1:    '✅f(3, 1, 4) = false',
291: 1:    '✅f(2, 1, 1) = true',
291: 1:    '✅f(2, 2, 6) = true',
291: 1:    '✅f(6, 1, 11) = true',
291: 1:    '✅f(5, 0, 1) = true',
291: 1:    '✅f(3, 1, 8) = true',
291: 1:    '❌f(3, 2, 10) = ??? != true'
291: 1:  ],
291: 1:  'level': 11,
291: 1:  'nextQuestion': '3, 2, 10',
291: 1:  'questions': [
291: 1:    '0, 1, 5',
291: 1:    '1, 0, 1',
291: 1:    '1, 0, 2',
291: 1:    '3, 1, 7',
291: 1:    '4, 2, 14',
291: 1:    '3, 2, 14',
291: 1:    '0, 2, 5',
291: 1:    '3, 1, 6',
291: 1:    '3, 1, 9',
291: 1:    '3, 2, 9',
291: 1:    '10, 10, 0',
291: 1:    '0, 0, 1',
291: 1:    '0, 1, 1',
291: 1:    '0, 0, 2',
291: 1:    '2, 0, 2',
291: 1:    '0, 1, 2',
291: 1:    '1, 1, 2',
291: 1:    '2, 1, 3',
291: 1:    '3, 1, 4',
291: 1:    '2, 1, 1',
291: 1:    '2, 2, 6',
291: 1:    '6, 1, 11',
291: 1:    '5, 0, 1',
291: 1:    '3, 1, 8',
291: 1:    '3, 2, 10'
291: 1:  ]
291: 1:}
291: 1:Scores: 21563
291: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true']')
291: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
292: 1:BoardData {
292: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
292: 1:  'expectedAnswer': 'true',
292: 1:  'history': [
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '0, 1, 5',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '1, 0, 1',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '1, 0, 2',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '3, 1, 7',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '4, 2, 14',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '3, 2, 14',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '0, 2, 5',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '3, 1, 6',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '3, 1, 9',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '3, 2, 9',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '10, 10, 0',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '0, 0, 1',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '0, 1, 1',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '0, 0, 2',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '2, 0, 2',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '0, 1, 2',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '1, 1, 2',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '2, 1, 3',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'false',
292: 1:      'question': '3, 1, 4',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '2, 1, 1',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '2, 2, 6',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '6, 1, 11',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '5, 0, 1',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '3, 1, 8',
292: 1:      'valid': true
292: 1:    },
292: 1:    {
292: 1:      'answer': 'true',
292: 1:      'question': '3, 2, 10',
292: 1:      'valid': true
292: 1:    }
292: 1:  ],
292: 1:  'info': [
292: 1:    '✅f(0, 1, 5) = true',
292: 1:    '✅f(1, 0, 1) = true',
292: 1:    '✅f(1, 0, 2) = false',
292: 1:    '✅f(3, 1, 7) = true',
292: 1:    '✅f(4, 2, 14) = true',
292: 1:    '✅f(3, 2, 14) = false',
292: 1:    '✅f(0, 2, 5) = true',
292: 1:    '✅f(3, 1, 6) = true',
292: 1:    '✅f(3, 1, 9) = false',
292: 1:    '✅f(3, 2, 9) = false',
292: 1:    '✅f(10, 10, 0) = true',
292: 1:    '✅f(0, 0, 1) = false',
292: 1:    '✅f(0, 1, 1) = false',
292: 1:    '✅f(0, 0, 2) = false',
292: 1:    '✅f(2, 0, 2) = true',
292: 1:    '✅f(0, 1, 2) = false',
292: 1:    '✅f(1, 1, 2) = false',
292: 1:    '✅f(2, 1, 3) = false',
292: 1:    '✅f(3, 1, 4) = false',
292: 1:    '✅f(2, 1, 1) = true',
292: 1:    '✅f(2, 2, 6) = true',
292: 1:    '✅f(6, 1, 11) = true',
292: 1:    '✅f(5, 0, 1) = true',
292: 1:    '✅f(3, 1, 8) = true',
292: 1:    '✅f(3, 2, 10) = true',
292: 1:    '❌f(3, 2, 8) = ??? != true'
292: 1:  ],
292: 1:  'level': 11,
292: 1:  'nextQuestion': '3, 2, 8',
292: 1:  'questions': [
292: 1:    '0, 1, 5',
292: 1:    '1, 0, 1',
292: 1:    '1, 0, 2',
292: 1:    '3, 1, 7',
292: 1:    '4, 2, 14',
292: 1:    '3, 2, 14',
292: 1:    '0, 2, 5',
292: 1:    '3, 1, 6',
292: 1:    '3, 1, 9',
292: 1:    '3, 2, 9',
292: 1:    '10, 10, 0',
292: 1:    '0, 0, 1',
292: 1:    '0, 1, 1',
292: 1:    '0, 0, 2',
292: 1:    '2, 0, 2',
292: 1:    '0, 1, 2',
292: 1:    '1, 1, 2',
292: 1:    '2, 1, 3',
292: 1:    '3, 1, 4',
292: 1:    '2, 1, 1',
292: 1:    '2, 2, 6',
292: 1:    '6, 1, 11',
292: 1:    '5, 0, 1',
292: 1:    '3, 1, 8',
292: 1:    '3, 2, 10',
292: 1:    '3, 2, 8'
292: 1:  ]
292: 1:}
292: 1:Scores: 21570
292: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true']')
292: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
293: 1:BoardData {
293: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
293: 1:  'expectedAnswer': 'false',
293: 1:  'history': [
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '0, 1, 5',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '1, 0, 1',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '1, 0, 2',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '3, 1, 7',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '4, 2, 14',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '3, 2, 14',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '0, 2, 5',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '3, 1, 6',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '3, 1, 9',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '3, 2, 9',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '10, 10, 0',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '0, 0, 1',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '0, 1, 1',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '0, 0, 2',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '2, 0, 2',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '0, 1, 2',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '1, 1, 2',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '2, 1, 3',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'false',
293: 1:      'question': '3, 1, 4',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '2, 1, 1',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '2, 2, 6',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '6, 1, 11',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '5, 0, 1',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '3, 1, 8',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '3, 2, 10',
293: 1:      'valid': true
293: 1:    },
293: 1:    {
293: 1:      'answer': 'true',
293: 1:      'question': '3, 2, 8',
293: 1:      'valid': true
293: 1:    }
293: 1:  ],
293: 1:  'info': [
293: 1:    '✅f(0, 1, 5) = true',
293: 1:    '✅f(1, 0, 1) = true',
293: 1:    '✅f(1, 0, 2) = false',
293: 1:    '✅f(3, 1, 7) = true',
293: 1:    '✅f(4, 2, 14) = true',
293: 1:    '✅f(3, 2, 14) = false',
293: 1:    '✅f(0, 2, 5) = true',
293: 1:    '✅f(3, 1, 6) = true',
293: 1:    '✅f(3, 1, 9) = false',
293: 1:    '✅f(3, 2, 9) = false',
293: 1:    '✅f(10, 10, 0) = true',
293: 1:    '✅f(0, 0, 1) = false',
293: 1:    '✅f(0, 1, 1) = false',
293: 1:    '✅f(0, 0, 2) = false',
293: 1:    '✅f(2, 0, 2) = true',
293: 1:    '✅f(0, 1, 2) = false',
293: 1:    '✅f(1, 1, 2) = false',
293: 1:    '✅f(2, 1, 3) = false',
293: 1:    '✅f(3, 1, 4) = false',
293: 1:    '✅f(2, 1, 1) = true',
293: 1:    '✅f(2, 2, 6) = true',
293: 1:    '✅f(6, 1, 11) = true',
293: 1:    '✅f(5, 0, 1) = true',
293: 1:    '✅f(3, 1, 8) = true',
293: 1:    '✅f(3, 2, 10) = true',
293: 1:    '✅f(3, 2, 8) = true',
293: 1:    '❌f(6, 0, 11) = ??? != false'
293: 1:  ],
293: 1:  'level': 11,
293: 1:  'nextQuestion': '6, 0, 11',
293: 1:  'questions': [
293: 1:    '0, 1, 5',
293: 1:    '1, 0, 1',
293: 1:    '1, 0, 2',
293: 1:    '3, 1, 7',
293: 1:    '4, 2, 14',
293: 1:    '3, 2, 14',
293: 1:    '0, 2, 5',
293: 1:    '3, 1, 6',
293: 1:    '3, 1, 9',
293: 1:    '3, 2, 9',
293: 1:    '10, 10, 0',
293: 1:    '0, 0, 1',
293: 1:    '0, 1, 1',
293: 1:    '0, 0, 2',
293: 1:    '2, 0, 2',
293: 1:    '0, 1, 2',
293: 1:    '1, 1, 2',
293: 1:    '2, 1, 3',
293: 1:    '3, 1, 4',
293: 1:    '2, 1, 1',
293: 1:    '2, 2, 6',
293: 1:    '6, 1, 11',
293: 1:    '5, 0, 1',
293: 1:    '3, 1, 8',
293: 1:    '3, 2, 10',
293: 1:    '3, 2, 8',
293: 1:    '6, 0, 11'
293: 1:  ]
293: 1:}
293: 1:Scores: 21577
293: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false']')
293: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
294: 1:BoardData {
294: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
294: 1:  'expectedAnswer': 'true',
294: 1:  'history': [
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '0, 1, 5',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '1, 0, 1',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '1, 0, 2',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '3, 1, 7',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '4, 2, 14',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '3, 2, 14',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '0, 2, 5',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '3, 1, 6',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '3, 1, 9',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '3, 2, 9',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '10, 10, 0',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '0, 0, 1',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '0, 1, 1',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '0, 0, 2',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '2, 0, 2',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '0, 1, 2',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '1, 1, 2',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '2, 1, 3',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '3, 1, 4',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '2, 1, 1',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '2, 2, 6',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '6, 1, 11',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '5, 0, 1',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '3, 1, 8',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '3, 2, 10',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'true',
294: 1:      'question': '3, 2, 8',
294: 1:      'valid': true
294: 1:    },
294: 1:    {
294: 1:      'answer': 'false',
294: 1:      'question': '6, 0, 11',
294: 1:      'valid': true
294: 1:    }
294: 1:  ],
294: 1:  'info': [
294: 1:    '✅f(0, 1, 5) = true',
294: 1:    '✅f(1, 0, 1) = true',
294: 1:    '✅f(1, 0, 2) = false',
294: 1:    '✅f(3, 1, 7) = true',
294: 1:    '✅f(4, 2, 14) = true',
294: 1:    '✅f(3, 2, 14) = false',
294: 1:    '✅f(0, 2, 5) = true',
294: 1:    '✅f(3, 1, 6) = true',
294: 1:    '✅f(3, 1, 9) = false',
294: 1:    '✅f(3, 2, 9) = false',
294: 1:    '✅f(10, 10, 0) = true',
294: 1:    '✅f(0, 0, 1) = false',
294: 1:    '✅f(0, 1, 1) = false',
294: 1:    '✅f(0, 0, 2) = false',
294: 1:    '✅f(2, 0, 2) = true',
294: 1:    '✅f(0, 1, 2) = false',
294: 1:    '✅f(1, 1, 2) = false',
294: 1:    '✅f(2, 1, 3) = false',
294: 1:    '✅f(3, 1, 4) = false',
294: 1:    '✅f(2, 1, 1) = true',
294: 1:    '✅f(2, 2, 6) = true',
294: 1:    '✅f(6, 1, 11) = true',
294: 1:    '✅f(5, 0, 1) = true',
294: 1:    '✅f(3, 1, 8) = true',
294: 1:    '✅f(3, 2, 10) = true',
294: 1:    '✅f(3, 2, 8) = true',
294: 1:    '✅f(6, 0, 11) = false',
294: 1:    '❌f(1, 4, 11) = ??? != true'
294: 1:  ],
294: 1:  'level': 11,
294: 1:  'nextQuestion': '1, 4, 11',
294: 1:  'questions': [
294: 1:    '0, 1, 5',
294: 1:    '1, 0, 1',
294: 1:    '1, 0, 2',
294: 1:    '3, 1, 7',
294: 1:    '4, 2, 14',
294: 1:    '3, 2, 14',
294: 1:    '0, 2, 5',
294: 1:    '3, 1, 6',
294: 1:    '3, 1, 9',
294: 1:    '3, 2, 9',
294: 1:    '10, 10, 0',
294: 1:    '0, 0, 1',
294: 1:    '0, 1, 1',
294: 1:    '0, 0, 2',
294: 1:    '2, 0, 2',
294: 1:    '0, 1, 2',
294: 1:    '1, 1, 2',
294: 1:    '2, 1, 3',
294: 1:    '3, 1, 4',
294: 1:    '2, 1, 1',
294: 1:    '2, 2, 6',
294: 1:    '6, 1, 11',
294: 1:    '5, 0, 1',
294: 1:    '3, 1, 8',
294: 1:    '3, 2, 10',
294: 1:    '3, 2, 8',
294: 1:    '6, 0, 11',
294: 1:    '1, 4, 11'
294: 1:  ]
294: 1:}
294: 1:Scores: 21584
294: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true']')
294: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
295: 1:BoardData {
295: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
295: 1:  'expectedAnswer': 'true',
295: 1:  'history': [
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '0, 1, 5',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '1, 0, 1',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '1, 0, 2',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '3, 1, 7',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '4, 2, 14',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '3, 2, 14',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '0, 2, 5',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '3, 1, 6',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '3, 1, 9',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '3, 2, 9',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '10, 10, 0',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '0, 0, 1',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '0, 1, 1',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '0, 0, 2',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '2, 0, 2',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '0, 1, 2',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '1, 1, 2',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '2, 1, 3',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '3, 1, 4',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '2, 1, 1',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '2, 2, 6',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '6, 1, 11',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '5, 0, 1',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '3, 1, 8',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '3, 2, 10',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '3, 2, 8',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'false',
295: 1:      'question': '6, 0, 11',
295: 1:      'valid': true
295: 1:    },
295: 1:    {
295: 1:      'answer': 'true',
295: 1:      'question': '1, 4, 11',
295: 1:      'valid': true
295: 1:    }
295: 1:  ],
295: 1:  'info': [
295: 1:    '✅f(0, 1, 5) = true',
295: 1:    '✅f(1, 0, 1) = true',
295: 1:    '✅f(1, 0, 2) = false',
295: 1:    '✅f(3, 1, 7) = true',
295: 1:    '✅f(4, 2, 14) = true',
295: 1:    '✅f(3, 2, 14) = false',
295: 1:    '✅f(0, 2, 5) = true',
295: 1:    '✅f(3, 1, 6) = true',
295: 1:    '✅f(3, 1, 9) = false',
295: 1:    '✅f(3, 2, 9) = false',
295: 1:    '✅f(10, 10, 0) = true',
295: 1:    '✅f(0, 0, 1) = false',
295: 1:    '✅f(0, 1, 1) = false',
295: 1:    '✅f(0, 0, 2) = false',
295: 1:    '✅f(2, 0, 2) = true',
295: 1:    '✅f(0, 1, 2) = false',
295: 1:    '✅f(1, 1, 2) = false',
295: 1:    '✅f(2, 1, 3) = false',
295: 1:    '✅f(3, 1, 4) = false',
295: 1:    '✅f(2, 1, 1) = true',
295: 1:    '✅f(2, 2, 6) = true',
295: 1:    '✅f(6, 1, 11) = true',
295: 1:    '✅f(5, 0, 1) = true',
295: 1:    '✅f(3, 1, 8) = true',
295: 1:    '✅f(3, 2, 10) = true',
295: 1:    '✅f(3, 2, 8) = true',
295: 1:    '✅f(6, 0, 11) = false',
295: 1:    '✅f(1, 4, 11) = true',
295: 1:    '❌f(0, 3, 10) = ??? != true'
295: 1:  ],
295: 1:  'level': 11,
295: 1:  'nextQuestion': '0, 3, 10',
295: 1:  'questions': [
295: 1:    '0, 1, 5',
295: 1:    '1, 0, 1',
295: 1:    '1, 0, 2',
295: 1:    '3, 1, 7',
295: 1:    '4, 2, 14',
295: 1:    '3, 2, 14',
295: 1:    '0, 2, 5',
295: 1:    '3, 1, 6',
295: 1:    '3, 1, 9',
295: 1:    '3, 2, 9',
295: 1:    '10, 10, 0',
295: 1:    '0, 0, 1',
295: 1:    '0, 1, 1',
295: 1:    '0, 0, 2',
295: 1:    '2, 0, 2',
295: 1:    '0, 1, 2',
295: 1:    '1, 1, 2',
295: 1:    '2, 1, 3',
295: 1:    '3, 1, 4',
295: 1:    '2, 1, 1',
295: 1:    '2, 2, 6',
295: 1:    '6, 1, 11',
295: 1:    '5, 0, 1',
295: 1:    '3, 1, 8',
295: 1:    '3, 2, 10',
295: 1:    '3, 2, 8',
295: 1:    '6, 0, 11',
295: 1:    '1, 4, 11',
295: 1:    '0, 3, 10'
295: 1:  ]
295: 1:}
295: 1:Scores: 21591
295: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true']')
295: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
296: 1:BoardData {
296: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
296: 1:  'expectedAnswer': 'false',
296: 1:  'history': [
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '0, 1, 5',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '1, 0, 1',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '1, 0, 2',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '3, 1, 7',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '4, 2, 14',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '3, 2, 14',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '0, 2, 5',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '3, 1, 6',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '3, 1, 9',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '3, 2, 9',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '10, 10, 0',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '0, 0, 1',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '0, 1, 1',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '0, 0, 2',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '2, 0, 2',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '0, 1, 2',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '1, 1, 2',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '2, 1, 3',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '3, 1, 4',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '2, 1, 1',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '2, 2, 6',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '6, 1, 11',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '5, 0, 1',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '3, 1, 8',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '3, 2, 10',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '3, 2, 8',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'false',
296: 1:      'question': '6, 0, 11',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '1, 4, 11',
296: 1:      'valid': true
296: 1:    },
296: 1:    {
296: 1:      'answer': 'true',
296: 1:      'question': '0, 3, 10',
296: 1:      'valid': true
296: 1:    }
296: 1:  ],
296: 1:  'info': [
296: 1:    '✅f(0, 1, 5) = true',
296: 1:    '✅f(1, 0, 1) = true',
296: 1:    '✅f(1, 0, 2) = false',
296: 1:    '✅f(3, 1, 7) = true',
296: 1:    '✅f(4, 2, 14) = true',
296: 1:    '✅f(3, 2, 14) = false',
296: 1:    '✅f(0, 2, 5) = true',
296: 1:    '✅f(3, 1, 6) = true',
296: 1:    '✅f(3, 1, 9) = false',
296: 1:    '✅f(3, 2, 9) = false',
296: 1:    '✅f(10, 10, 0) = true',
296: 1:    '✅f(0, 0, 1) = false',
296: 1:    '✅f(0, 1, 1) = false',
296: 1:    '✅f(0, 0, 2) = false',
296: 1:    '✅f(2, 0, 2) = true',
296: 1:    '✅f(0, 1, 2) = false',
296: 1:    '✅f(1, 1, 2) = false',
296: 1:    '✅f(2, 1, 3) = false',
296: 1:    '✅f(3, 1, 4) = false',
296: 1:    '✅f(2, 1, 1) = true',
296: 1:    '✅f(2, 2, 6) = true',
296: 1:    '✅f(6, 1, 11) = true',
296: 1:    '✅f(5, 0, 1) = true',
296: 1:    '✅f(3, 1, 8) = true',
296: 1:    '✅f(3, 2, 10) = true',
296: 1:    '✅f(3, 2, 8) = true',
296: 1:    '✅f(6, 0, 11) = false',
296: 1:    '✅f(1, 4, 11) = true',
296: 1:    '✅f(0, 3, 10) = true',
296: 1:    '❌f(1, 4, 12) = ??? != false'
296: 1:  ],
296: 1:  'level': 11,
296: 1:  'nextQuestion': '1, 4, 12',
296: 1:  'questions': [
296: 1:    '0, 1, 5',
296: 1:    '1, 0, 1',
296: 1:    '1, 0, 2',
296: 1:    '3, 1, 7',
296: 1:    '4, 2, 14',
296: 1:    '3, 2, 14',
296: 1:    '0, 2, 5',
296: 1:    '3, 1, 6',
296: 1:    '3, 1, 9',
296: 1:    '3, 2, 9',
296: 1:    '10, 10, 0',
296: 1:    '0, 0, 1',
296: 1:    '0, 1, 1',
296: 1:    '0, 0, 2',
296: 1:    '2, 0, 2',
296: 1:    '0, 1, 2',
296: 1:    '1, 1, 2',
296: 1:    '2, 1, 3',
296: 1:    '3, 1, 4',
296: 1:    '2, 1, 1',
296: 1:    '2, 2, 6',
296: 1:    '6, 1, 11',
296: 1:    '5, 0, 1',
296: 1:    '3, 1, 8',
296: 1:    '3, 2, 10',
296: 1:    '3, 2, 8',
296: 1:    '6, 0, 11',
296: 1:    '1, 4, 11',
296: 1:    '0, 3, 10',
296: 1:    '1, 4, 12'
296: 1:  ]
296: 1:}
296: 1:Scores: 21598
296: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false']')
296: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
297: 1:BoardData {
297: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
297: 1:  'expectedAnswer': 'false',
297: 1:  'history': [
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '0, 1, 5',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '1, 0, 1',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '1, 0, 2',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '3, 1, 7',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '4, 2, 14',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '3, 2, 14',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '0, 2, 5',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '3, 1, 6',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '3, 1, 9',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '3, 2, 9',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '10, 10, 0',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '0, 0, 1',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '0, 1, 1',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '0, 0, 2',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '2, 0, 2',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '0, 1, 2',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '1, 1, 2',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '2, 1, 3',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '3, 1, 4',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '2, 1, 1',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '2, 2, 6',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '6, 1, 11',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '5, 0, 1',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '3, 1, 8',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '3, 2, 10',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '3, 2, 8',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '6, 0, 11',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '1, 4, 11',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'true',
297: 1:      'question': '0, 3, 10',
297: 1:      'valid': true
297: 1:    },
297: 1:    {
297: 1:      'answer': 'false',
297: 1:      'question': '1, 4, 12',
297: 1:      'valid': true
297: 1:    }
297: 1:  ],
297: 1:  'info': [
297: 1:    '✅f(0, 1, 5) = true',
297: 1:    '✅f(1, 0, 1) = true',
297: 1:    '✅f(1, 0, 2) = false',
297: 1:    '✅f(3, 1, 7) = true',
297: 1:    '✅f(4, 2, 14) = true',
297: 1:    '✅f(3, 2, 14) = false',
297: 1:    '✅f(0, 2, 5) = true',
297: 1:    '✅f(3, 1, 6) = true',
297: 1:    '✅f(3, 1, 9) = false',
297: 1:    '✅f(3, 2, 9) = false',
297: 1:    '✅f(10, 10, 0) = true',
297: 1:    '✅f(0, 0, 1) = false',
297: 1:    '✅f(0, 1, 1) = false',
297: 1:    '✅f(0, 0, 2) = false',
297: 1:    '✅f(2, 0, 2) = true',
297: 1:    '✅f(0, 1, 2) = false',
297: 1:    '✅f(1, 1, 2) = false',
297: 1:    '✅f(2, 1, 3) = false',
297: 1:    '✅f(3, 1, 4) = false',
297: 1:    '✅f(2, 1, 1) = true',
297: 1:    '✅f(2, 2, 6) = true',
297: 1:    '✅f(6, 1, 11) = true',
297: 1:    '✅f(5, 0, 1) = true',
297: 1:    '✅f(3, 1, 8) = true',
297: 1:    '✅f(3, 2, 10) = true',
297: 1:    '✅f(3, 2, 8) = true',
297: 1:    '✅f(6, 0, 11) = false',
297: 1:    '✅f(1, 4, 11) = true',
297: 1:    '✅f(0, 3, 10) = true',
297: 1:    '✅f(1, 4, 12) = false',
297: 1:    '❌f(1, 1, 7) = ??? != false'
297: 1:  ],
297: 1:  'level': 11,
297: 1:  'nextQuestion': '1, 1, 7',
297: 1:  'questions': [
297: 1:    '0, 1, 5',
297: 1:    '1, 0, 1',
297: 1:    '1, 0, 2',
297: 1:    '3, 1, 7',
297: 1:    '4, 2, 14',
297: 1:    '3, 2, 14',
297: 1:    '0, 2, 5',
297: 1:    '3, 1, 6',
297: 1:    '3, 1, 9',
297: 1:    '3, 2, 9',
297: 1:    '10, 10, 0',
297: 1:    '0, 0, 1',
297: 1:    '0, 1, 1',
297: 1:    '0, 0, 2',
297: 1:    '2, 0, 2',
297: 1:    '0, 1, 2',
297: 1:    '1, 1, 2',
297: 1:    '2, 1, 3',
297: 1:    '3, 1, 4',
297: 1:    '2, 1, 1',
297: 1:    '2, 2, 6',
297: 1:    '6, 1, 11',
297: 1:    '5, 0, 1',
297: 1:    '3, 1, 8',
297: 1:    '3, 2, 10',
297: 1:    '3, 2, 8',
297: 1:    '6, 0, 11',
297: 1:    '1, 4, 11',
297: 1:    '0, 3, 10',
297: 1:    '1, 4, 12',
297: 1:    '1, 1, 7'
297: 1:  ]
297: 1:}
297: 1:Scores: 21605
297: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false']')
297: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
298: 1:BoardData {
298: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
298: 1:  'expectedAnswer': 'true',
298: 1:  'history': [
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '0, 1, 5',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '1, 0, 1',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '1, 0, 2',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '3, 1, 7',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '4, 2, 14',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '3, 2, 14',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '0, 2, 5',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '3, 1, 6',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '3, 1, 9',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '3, 2, 9',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '10, 10, 0',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '0, 0, 1',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '0, 1, 1',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '0, 0, 2',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '2, 0, 2',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '0, 1, 2',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '1, 1, 2',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '2, 1, 3',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '3, 1, 4',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '2, 1, 1',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '2, 2, 6',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '6, 1, 11',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '5, 0, 1',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '3, 1, 8',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '3, 2, 10',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '3, 2, 8',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '6, 0, 11',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '1, 4, 11',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'true',
298: 1:      'question': '0, 3, 10',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '1, 4, 12',
298: 1:      'valid': true
298: 1:    },
298: 1:    {
298: 1:      'answer': 'false',
298: 1:      'question': '1, 1, 7',
298: 1:      'valid': true
298: 1:    }
298: 1:  ],
298: 1:  'info': [
298: 1:    '✅f(0, 1, 5) = true',
298: 1:    '✅f(1, 0, 1) = true',
298: 1:    '✅f(1, 0, 2) = false',
298: 1:    '✅f(3, 1, 7) = true',
298: 1:    '✅f(4, 2, 14) = true',
298: 1:    '✅f(3, 2, 14) = false',
298: 1:    '✅f(0, 2, 5) = true',
298: 1:    '✅f(3, 1, 6) = true',
298: 1:    '✅f(3, 1, 9) = false',
298: 1:    '✅f(3, 2, 9) = false',
298: 1:    '✅f(10, 10, 0) = true',
298: 1:    '✅f(0, 0, 1) = false',
298: 1:    '✅f(0, 1, 1) = false',
298: 1:    '✅f(0, 0, 2) = false',
298: 1:    '✅f(2, 0, 2) = true',
298: 1:    '✅f(0, 1, 2) = false',
298: 1:    '✅f(1, 1, 2) = false',
298: 1:    '✅f(2, 1, 3) = false',
298: 1:    '✅f(3, 1, 4) = false',
298: 1:    '✅f(2, 1, 1) = true',
298: 1:    '✅f(2, 2, 6) = true',
298: 1:    '✅f(6, 1, 11) = true',
298: 1:    '✅f(5, 0, 1) = true',
298: 1:    '✅f(3, 1, 8) = true',
298: 1:    '✅f(3, 2, 10) = true',
298: 1:    '✅f(3, 2, 8) = true',
298: 1:    '✅f(6, 0, 11) = false',
298: 1:    '✅f(1, 4, 11) = true',
298: 1:    '✅f(0, 3, 10) = true',
298: 1:    '✅f(1, 4, 12) = false',
298: 1:    '✅f(1, 1, 7) = false',
298: 1:    '❌f(2, 1, 7) = ??? != true'
298: 1:  ],
298: 1:  'level': 11,
298: 1:  'nextQuestion': '2, 1, 7',
298: 1:  'questions': [
298: 1:    '0, 1, 5',
298: 1:    '1, 0, 1',
298: 1:    '1, 0, 2',
298: 1:    '3, 1, 7',
298: 1:    '4, 2, 14',
298: 1:    '3, 2, 14',
298: 1:    '0, 2, 5',
298: 1:    '3, 1, 6',
298: 1:    '3, 1, 9',
298: 1:    '3, 2, 9',
298: 1:    '10, 10, 0',
298: 1:    '0, 0, 1',
298: 1:    '0, 1, 1',
298: 1:    '0, 0, 2',
298: 1:    '2, 0, 2',
298: 1:    '0, 1, 2',
298: 1:    '1, 1, 2',
298: 1:    '2, 1, 3',
298: 1:    '3, 1, 4',
298: 1:    '2, 1, 1',
298: 1:    '2, 2, 6',
298: 1:    '6, 1, 11',
298: 1:    '5, 0, 1',
298: 1:    '3, 1, 8',
298: 1:    '3, 2, 10',
298: 1:    '3, 2, 8',
298: 1:    '6, 0, 11',
298: 1:    '1, 4, 11',
298: 1:    '0, 3, 10',
298: 1:    '1, 4, 12',
298: 1:    '1, 1, 7',
298: 1:    '2, 1, 7'
298: 1:  ]
298: 1:}
298: 1:Scores: 21612
298: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
298: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
299: 1:BoardData {
299: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
299: 1:  'expectedAnswer': 'true',
299: 1:  'history': [
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '0, 1, 5',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '1, 0, 1',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '1, 0, 2',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '3, 1, 7',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '4, 2, 14',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '3, 2, 14',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '0, 2, 5',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '3, 1, 6',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '3, 1, 9',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '3, 2, 9',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '10, 10, 0',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '0, 0, 1',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '0, 1, 1',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '0, 0, 2',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '2, 0, 2',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '0, 1, 2',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '1, 1, 2',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '2, 1, 3',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '3, 1, 4',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '2, 1, 1',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '2, 2, 6',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '6, 1, 11',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '5, 0, 1',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '3, 1, 8',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '3, 2, 10',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '3, 2, 8',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '6, 0, 11',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '1, 4, 11',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '0, 3, 10',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '1, 4, 12',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'false',
299: 1:      'question': '1, 1, 7',
299: 1:      'valid': true
299: 1:    },
299: 1:    {
299: 1:      'answer': 'true',
299: 1:      'question': '2, 1, 7',
299: 1:      'valid': true
299: 1:    }
299: 1:  ],
299: 1:  'info': [
299: 1:    '✅f(0, 1, 5) = true',
299: 1:    '✅f(1, 0, 1) = true',
299: 1:    '✅f(1, 0, 2) = false',
299: 1:    '✅f(3, 1, 7) = true',
299: 1:    '✅f(4, 2, 14) = true',
299: 1:    '✅f(3, 2, 14) = false',
299: 1:    '✅f(0, 2, 5) = true',
299: 1:    '✅f(3, 1, 6) = true',
299: 1:    '✅f(3, 1, 9) = false',
299: 1:    '✅f(3, 2, 9) = false',
299: 1:    '✅f(10, 10, 0) = true',
299: 1:    '✅f(0, 0, 1) = false',
299: 1:    '✅f(0, 1, 1) = false',
299: 1:    '✅f(0, 0, 2) = false',
299: 1:    '✅f(2, 0, 2) = true',
299: 1:    '✅f(0, 1, 2) = false',
299: 1:    '✅f(1, 1, 2) = false',
299: 1:    '✅f(2, 1, 3) = false',
299: 1:    '✅f(3, 1, 4) = false',
299: 1:    '✅f(2, 1, 1) = true',
299: 1:    '✅f(2, 2, 6) = true',
299: 1:    '✅f(6, 1, 11) = true',
299: 1:    '✅f(5, 0, 1) = true',
299: 1:    '✅f(3, 1, 8) = true',
299: 1:    '✅f(3, 2, 10) = true',
299: 1:    '✅f(3, 2, 8) = true',
299: 1:    '✅f(6, 0, 11) = false',
299: 1:    '✅f(1, 4, 11) = true',
299: 1:    '✅f(0, 3, 10) = true',
299: 1:    '✅f(1, 4, 12) = false',
299: 1:    '✅f(1, 1, 7) = false',
299: 1:    '✅f(2, 1, 7) = true',
299: 1:    '❌f(7, 1, 11) = ??? != true'
299: 1:  ],
299: 1:  'level': 11,
299: 1:  'nextQuestion': '7, 1, 11',
299: 1:  'questions': [
299: 1:    '0, 1, 5',
299: 1:    '1, 0, 1',
299: 1:    '1, 0, 2',
299: 1:    '3, 1, 7',
299: 1:    '4, 2, 14',
299: 1:    '3, 2, 14',
299: 1:    '0, 2, 5',
299: 1:    '3, 1, 6',
299: 1:    '3, 1, 9',
299: 1:    '3, 2, 9',
299: 1:    '10, 10, 0',
299: 1:    '0, 0, 1',
299: 1:    '0, 1, 1',
299: 1:    '0, 0, 2',
299: 1:    '2, 0, 2',
299: 1:    '0, 1, 2',
299: 1:    '1, 1, 2',
299: 1:    '2, 1, 3',
299: 1:    '3, 1, 4',
299: 1:    '2, 1, 1',
299: 1:    '2, 2, 6',
299: 1:    '6, 1, 11',
299: 1:    '5, 0, 1',
299: 1:    '3, 1, 8',
299: 1:    '3, 2, 10',
299: 1:    '3, 2, 8',
299: 1:    '6, 0, 11',
299: 1:    '1, 4, 11',
299: 1:    '0, 3, 10',
299: 1:    '1, 4, 12',
299: 1:    '1, 1, 7',
299: 1:    '2, 1, 7',
299: 1:    '7, 1, 11'
299: 1:  ]
299: 1:}
299: 1:Scores: 21619
299: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true']')
299: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
300: 1:BoardData {
300: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
300: 1:  'expectedAnswer': 'true',
300: 1:  'history': [
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '0, 1, 5',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '1, 0, 1',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '1, 0, 2',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '3, 1, 7',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '4, 2, 14',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '3, 2, 14',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '0, 2, 5',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '3, 1, 6',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '3, 1, 9',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '3, 2, 9',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '10, 10, 0',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '0, 0, 1',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '0, 1, 1',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '0, 0, 2',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '2, 0, 2',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '0, 1, 2',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '1, 1, 2',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '2, 1, 3',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '3, 1, 4',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '2, 1, 1',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '2, 2, 6',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '6, 1, 11',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '5, 0, 1',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '3, 1, 8',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '3, 2, 10',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '3, 2, 8',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '6, 0, 11',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '1, 4, 11',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '0, 3, 10',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '1, 4, 12',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'false',
300: 1:      'question': '1, 1, 7',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '2, 1, 7',
300: 1:      'valid': true
300: 1:    },
300: 1:    {
300: 1:      'answer': 'true',
300: 1:      'question': '7, 1, 11',
300: 1:      'valid': true
300: 1:    }
300: 1:  ],
300: 1:  'info': [
300: 1:    '✅f(0, 1, 5) = true',
300: 1:    '✅f(1, 0, 1) = true',
300: 1:    '✅f(1, 0, 2) = false',
300: 1:    '✅f(3, 1, 7) = true',
300: 1:    '✅f(4, 2, 14) = true',
300: 1:    '✅f(3, 2, 14) = false',
300: 1:    '✅f(0, 2, 5) = true',
300: 1:    '✅f(3, 1, 6) = true',
300: 1:    '✅f(3, 1, 9) = false',
300: 1:    '✅f(3, 2, 9) = false',
300: 1:    '✅f(10, 10, 0) = true',
300: 1:    '✅f(0, 0, 1) = false',
300: 1:    '✅f(0, 1, 1) = false',
300: 1:    '✅f(0, 0, 2) = false',
300: 1:    '✅f(2, 0, 2) = true',
300: 1:    '✅f(0, 1, 2) = false',
300: 1:    '✅f(1, 1, 2) = false',
300: 1:    '✅f(2, 1, 3) = false',
300: 1:    '✅f(3, 1, 4) = false',
300: 1:    '✅f(2, 1, 1) = true',
300: 1:    '✅f(2, 2, 6) = true',
300: 1:    '✅f(6, 1, 11) = true',
300: 1:    '✅f(5, 0, 1) = true',
300: 1:    '✅f(3, 1, 8) = true',
300: 1:    '✅f(3, 2, 10) = true',
300: 1:    '✅f(3, 2, 8) = true',
300: 1:    '✅f(6, 0, 11) = false',
300: 1:    '✅f(1, 4, 11) = true',
300: 1:    '✅f(0, 3, 10) = true',
300: 1:    '✅f(1, 4, 12) = false',
300: 1:    '✅f(1, 1, 7) = false',
300: 1:    '✅f(2, 1, 7) = true',
300: 1:    '✅f(7, 1, 11) = true',
300: 1:    '❌f(7, 1, 8) = ??? != true'
300: 1:  ],
300: 1:  'level': 11,
300: 1:  'nextQuestion': '7, 1, 8',
300: 1:  'questions': [
300: 1:    '0, 1, 5',
300: 1:    '1, 0, 1',
300: 1:    '1, 0, 2',
300: 1:    '3, 1, 7',
300: 1:    '4, 2, 14',
300: 1:    '3, 2, 14',
300: 1:    '0, 2, 5',
300: 1:    '3, 1, 6',
300: 1:    '3, 1, 9',
300: 1:    '3, 2, 9',
300: 1:    '10, 10, 0',
300: 1:    '0, 0, 1',
300: 1:    '0, 1, 1',
300: 1:    '0, 0, 2',
300: 1:    '2, 0, 2',
300: 1:    '0, 1, 2',
300: 1:    '1, 1, 2',
300: 1:    '2, 1, 3',
300: 1:    '3, 1, 4',
300: 1:    '2, 1, 1',
300: 1:    '2, 2, 6',
300: 1:    '6, 1, 11',
300: 1:    '5, 0, 1',
300: 1:    '3, 1, 8',
300: 1:    '3, 2, 10',
300: 1:    '3, 2, 8',
300: 1:    '6, 0, 11',
300: 1:    '1, 4, 11',
300: 1:    '0, 3, 10',
300: 1:    '1, 4, 12',
300: 1:    '1, 1, 7',
300: 1:    '2, 1, 7',
300: 1:    '7, 1, 11',
300: 1:    '7, 1, 8'
300: 1:  ]
300: 1:}
300: 1:Scores: 21626
300: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true']')
300: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
301: 1:BoardData {
301: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
301: 1:  'expectedAnswer': 'false',
301: 1:  'history': [
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '0, 1, 5',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '1, 0, 1',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '1, 0, 2',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '3, 1, 7',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '4, 2, 14',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '3, 2, 14',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '0, 2, 5',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '3, 1, 6',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '3, 1, 9',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '3, 2, 9',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '10, 10, 0',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '0, 0, 1',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '0, 1, 1',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '0, 0, 2',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '2, 0, 2',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '0, 1, 2',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '1, 1, 2',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '2, 1, 3',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '3, 1, 4',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '2, 1, 1',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '2, 2, 6',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '6, 1, 11',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '5, 0, 1',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '3, 1, 8',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '3, 2, 10',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '3, 2, 8',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '6, 0, 11',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '1, 4, 11',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '0, 3, 10',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '1, 4, 12',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'false',
301: 1:      'question': '1, 1, 7',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '2, 1, 7',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '7, 1, 11',
301: 1:      'valid': true
301: 1:    },
301: 1:    {
301: 1:      'answer': 'true',
301: 1:      'question': '7, 1, 8',
301: 1:      'valid': true
301: 1:    }
301: 1:  ],
301: 1:  'info': [
301: 1:    '✅f(0, 1, 5) = true',
301: 1:    '✅f(1, 0, 1) = true',
301: 1:    '✅f(1, 0, 2) = false',
301: 1:    '✅f(3, 1, 7) = true',
301: 1:    '✅f(4, 2, 14) = true',
301: 1:    '✅f(3, 2, 14) = false',
301: 1:    '✅f(0, 2, 5) = true',
301: 1:    '✅f(3, 1, 6) = true',
301: 1:    '✅f(3, 1, 9) = false',
301: 1:    '✅f(3, 2, 9) = false',
301: 1:    '✅f(10, 10, 0) = true',
301: 1:    '✅f(0, 0, 1) = false',
301: 1:    '✅f(0, 1, 1) = false',
301: 1:    '✅f(0, 0, 2) = false',
301: 1:    '✅f(2, 0, 2) = true',
301: 1:    '✅f(0, 1, 2) = false',
301: 1:    '✅f(1, 1, 2) = false',
301: 1:    '✅f(2, 1, 3) = false',
301: 1:    '✅f(3, 1, 4) = false',
301: 1:    '✅f(2, 1, 1) = true',
301: 1:    '✅f(2, 2, 6) = true',
301: 1:    '✅f(6, 1, 11) = true',
301: 1:    '✅f(5, 0, 1) = true',
301: 1:    '✅f(3, 1, 8) = true',
301: 1:    '✅f(3, 2, 10) = true',
301: 1:    '✅f(3, 2, 8) = true',
301: 1:    '✅f(6, 0, 11) = false',
301: 1:    '✅f(1, 4, 11) = true',
301: 1:    '✅f(0, 3, 10) = true',
301: 1:    '✅f(1, 4, 12) = false',
301: 1:    '✅f(1, 1, 7) = false',
301: 1:    '✅f(2, 1, 7) = true',
301: 1:    '✅f(7, 1, 11) = true',
301: 1:    '✅f(7, 1, 8) = true',
301: 1:    '❌f(7, 1, 13) = ??? != false'
301: 1:  ],
301: 1:  'level': 11,
301: 1:  'nextQuestion': '7, 1, 13',
301: 1:  'questions': [
301: 1:    '0, 1, 5',
301: 1:    '1, 0, 1',
301: 1:    '1, 0, 2',
301: 1:    '3, 1, 7',
301: 1:    '4, 2, 14',
301: 1:    '3, 2, 14',
301: 1:    '0, 2, 5',
301: 1:    '3, 1, 6',
301: 1:    '3, 1, 9',
301: 1:    '3, 2, 9',
301: 1:    '10, 10, 0',
301: 1:    '0, 0, 1',
301: 1:    '0, 1, 1',
301: 1:    '0, 0, 2',
301: 1:    '2, 0, 2',
301: 1:    '0, 1, 2',
301: 1:    '1, 1, 2',
301: 1:    '2, 1, 3',
301: 1:    '3, 1, 4',
301: 1:    '2, 1, 1',
301: 1:    '2, 2, 6',
301: 1:    '6, 1, 11',
301: 1:    '5, 0, 1',
301: 1:    '3, 1, 8',
301: 1:    '3, 2, 10',
301: 1:    '3, 2, 8',
301: 1:    '6, 0, 11',
301: 1:    '1, 4, 11',
301: 1:    '0, 3, 10',
301: 1:    '1, 4, 12',
301: 1:    '1, 1, 7',
301: 1:    '2, 1, 7',
301: 1:    '7, 1, 11',
301: 1:    '7, 1, 8',
301: 1:    '7, 1, 13'
301: 1:  ]
301: 1:}
301: 1:Scores: 21633
301: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false']')
301: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
302: 1:BoardData {
302: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
302: 1:  'expectedAnswer': 'true',
302: 1:  'history': [
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '0, 1, 5',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '1, 0, 1',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '1, 0, 2',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '3, 1, 7',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '4, 2, 14',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '3, 2, 14',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '0, 2, 5',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '3, 1, 6',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '3, 1, 9',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '3, 2, 9',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '10, 10, 0',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '0, 0, 1',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '0, 1, 1',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '0, 0, 2',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '2, 0, 2',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '0, 1, 2',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '1, 1, 2',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '2, 1, 3',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '3, 1, 4',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '2, 1, 1',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '2, 2, 6',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '6, 1, 11',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '5, 0, 1',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '3, 1, 8',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '3, 2, 10',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '3, 2, 8',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '6, 0, 11',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '1, 4, 11',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '0, 3, 10',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '1, 4, 12',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '1, 1, 7',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '2, 1, 7',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '7, 1, 11',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'true',
302: 1:      'question': '7, 1, 8',
302: 1:      'valid': true
302: 1:    },
302: 1:    {
302: 1:      'answer': 'false',
302: 1:      'question': '7, 1, 13',
302: 1:      'valid': true
302: 1:    }
302: 1:  ],
302: 1:  'info': [
302: 1:    '✅f(0, 1, 5) = true',
302: 1:    '✅f(1, 0, 1) = true',
302: 1:    '✅f(1, 0, 2) = false',
302: 1:    '✅f(3, 1, 7) = true',
302: 1:    '✅f(4, 2, 14) = true',
302: 1:    '✅f(3, 2, 14) = false',
302: 1:    '✅f(0, 2, 5) = true',
302: 1:    '✅f(3, 1, 6) = true',
302: 1:    '✅f(3, 1, 9) = false',
302: 1:    '✅f(3, 2, 9) = false',
302: 1:    '✅f(10, 10, 0) = true',
302: 1:    '✅f(0, 0, 1) = false',
302: 1:    '✅f(0, 1, 1) = false',
302: 1:    '✅f(0, 0, 2) = false',
302: 1:    '✅f(2, 0, 2) = true',
302: 1:    '✅f(0, 1, 2) = false',
302: 1:    '✅f(1, 1, 2) = false',
302: 1:    '✅f(2, 1, 3) = false',
302: 1:    '✅f(3, 1, 4) = false',
302: 1:    '✅f(2, 1, 1) = true',
302: 1:    '✅f(2, 2, 6) = true',
302: 1:    '✅f(6, 1, 11) = true',
302: 1:    '✅f(5, 0, 1) = true',
302: 1:    '✅f(3, 1, 8) = true',
302: 1:    '✅f(3, 2, 10) = true',
302: 1:    '✅f(3, 2, 8) = true',
302: 1:    '✅f(6, 0, 11) = false',
302: 1:    '✅f(1, 4, 11) = true',
302: 1:    '✅f(0, 3, 10) = true',
302: 1:    '✅f(1, 4, 12) = false',
302: 1:    '✅f(1, 1, 7) = false',
302: 1:    '✅f(2, 1, 7) = true',
302: 1:    '✅f(7, 1, 11) = true',
302: 1:    '✅f(7, 1, 8) = true',
302: 1:    '✅f(7, 1, 13) = false',
302: 1:    '❌f(43, 1, 46) = ??? != true'
302: 1:  ],
302: 1:  'level': 11,
302: 1:  'nextQuestion': '43, 1, 46',
302: 1:  'questions': [
302: 1:    '0, 1, 5',
302: 1:    '1, 0, 1',
302: 1:    '1, 0, 2',
302: 1:    '3, 1, 7',
302: 1:    '4, 2, 14',
302: 1:    '3, 2, 14',
302: 1:    '0, 2, 5',
302: 1:    '3, 1, 6',
302: 1:    '3, 1, 9',
302: 1:    '3, 2, 9',
302: 1:    '10, 10, 0',
302: 1:    '0, 0, 1',
302: 1:    '0, 1, 1',
302: 1:    '0, 0, 2',
302: 1:    '2, 0, 2',
302: 1:    '0, 1, 2',
302: 1:    '1, 1, 2',
302: 1:    '2, 1, 3',
302: 1:    '3, 1, 4',
302: 1:    '2, 1, 1',
302: 1:    '2, 2, 6',
302: 1:    '6, 1, 11',
302: 1:    '5, 0, 1',
302: 1:    '3, 1, 8',
302: 1:    '3, 2, 10',
302: 1:    '3, 2, 8',
302: 1:    '6, 0, 11',
302: 1:    '1, 4, 11',
302: 1:    '0, 3, 10',
302: 1:    '1, 4, 12',
302: 1:    '1, 1, 7',
302: 1:    '2, 1, 7',
302: 1:    '7, 1, 11',
302: 1:    '7, 1, 8',
302: 1:    '7, 1, 13',
302: 1:    '43, 1, 46'
302: 1:  ]
302: 1:}
302: 1:Scores: 21640
302: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true']')
302: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
303: 1:BoardData {
303: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
303: 1:  'expectedAnswer': 'false',
303: 1:  'history': [
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '0, 1, 5',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '1, 0, 1',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '1, 0, 2',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '3, 1, 7',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '4, 2, 14',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '3, 2, 14',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '0, 2, 5',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '3, 1, 6',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '3, 1, 9',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '3, 2, 9',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '10, 10, 0',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '0, 0, 1',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '0, 1, 1',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '0, 0, 2',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '2, 0, 2',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '0, 1, 2',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '1, 1, 2',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '2, 1, 3',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '3, 1, 4',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '2, 1, 1',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '2, 2, 6',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '6, 1, 11',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '5, 0, 1',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '3, 1, 8',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '3, 2, 10',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '3, 2, 8',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '6, 0, 11',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '1, 4, 11',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '0, 3, 10',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '1, 4, 12',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '1, 1, 7',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '2, 1, 7',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '7, 1, 11',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '7, 1, 8',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'false',
303: 1:      'question': '7, 1, 13',
303: 1:      'valid': true
303: 1:    },
303: 1:    {
303: 1:      'answer': 'true',
303: 1:      'question': '43, 1, 46',
303: 1:      'valid': true
303: 1:    }
303: 1:  ],
303: 1:  'info': [
303: 1:    '✅f(0, 1, 5) = true',
303: 1:    '✅f(1, 0, 1) = true',
303: 1:    '✅f(1, 0, 2) = false',
303: 1:    '✅f(3, 1, 7) = true',
303: 1:    '✅f(4, 2, 14) = true',
303: 1:    '✅f(3, 2, 14) = false',
303: 1:    '✅f(0, 2, 5) = true',
303: 1:    '✅f(3, 1, 6) = true',
303: 1:    '✅f(3, 1, 9) = false',
303: 1:    '✅f(3, 2, 9) = false',
303: 1:    '✅f(10, 10, 0) = true',
303: 1:    '✅f(0, 0, 1) = false',
303: 1:    '✅f(0, 1, 1) = false',
303: 1:    '✅f(0, 0, 2) = false',
303: 1:    '✅f(2, 0, 2) = true',
303: 1:    '✅f(0, 1, 2) = false',
303: 1:    '✅f(1, 1, 2) = false',
303: 1:    '✅f(2, 1, 3) = false',
303: 1:    '✅f(3, 1, 4) = false',
303: 1:    '✅f(2, 1, 1) = true',
303: 1:    '✅f(2, 2, 6) = true',
303: 1:    '✅f(6, 1, 11) = true',
303: 1:    '✅f(5, 0, 1) = true',
303: 1:    '✅f(3, 1, 8) = true',
303: 1:    '✅f(3, 2, 10) = true',
303: 1:    '✅f(3, 2, 8) = true',
303: 1:    '✅f(6, 0, 11) = false',
303: 1:    '✅f(1, 4, 11) = true',
303: 1:    '✅f(0, 3, 10) = true',
303: 1:    '✅f(1, 4, 12) = false',
303: 1:    '✅f(1, 1, 7) = false',
303: 1:    '✅f(2, 1, 7) = true',
303: 1:    '✅f(7, 1, 11) = true',
303: 1:    '✅f(7, 1, 8) = true',
303: 1:    '✅f(7, 1, 13) = false',
303: 1:    '✅f(43, 1, 46) = true',
303: 1:    '❌f(40, 1, 46) = ??? != false'
303: 1:  ],
303: 1:  'level': 11,
303: 1:  'nextQuestion': '40, 1, 46',
303: 1:  'questions': [
303: 1:    '0, 1, 5',
303: 1:    '1, 0, 1',
303: 1:    '1, 0, 2',
303: 1:    '3, 1, 7',
303: 1:    '4, 2, 14',
303: 1:    '3, 2, 14',
303: 1:    '0, 2, 5',
303: 1:    '3, 1, 6',
303: 1:    '3, 1, 9',
303: 1:    '3, 2, 9',
303: 1:    '10, 10, 0',
303: 1:    '0, 0, 1',
303: 1:    '0, 1, 1',
303: 1:    '0, 0, 2',
303: 1:    '2, 0, 2',
303: 1:    '0, 1, 2',
303: 1:    '1, 1, 2',
303: 1:    '2, 1, 3',
303: 1:    '3, 1, 4',
303: 1:    '2, 1, 1',
303: 1:    '2, 2, 6',
303: 1:    '6, 1, 11',
303: 1:    '5, 0, 1',
303: 1:    '3, 1, 8',
303: 1:    '3, 2, 10',
303: 1:    '3, 2, 8',
303: 1:    '6, 0, 11',
303: 1:    '1, 4, 11',
303: 1:    '0, 3, 10',
303: 1:    '1, 4, 12',
303: 1:    '1, 1, 7',
303: 1:    '2, 1, 7',
303: 1:    '7, 1, 11',
303: 1:    '7, 1, 8',
303: 1:    '7, 1, 13',
303: 1:    '43, 1, 46',
303: 1:    '40, 1, 46'
303: 1:  ]
303: 1:}
303: 1:Scores: 21647
303: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false']')
303: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
304: 1:BoardData {
304: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
304: 1:  'expectedAnswer': 'true',
304: 1:  'history': [
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '0, 1, 5',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '1, 0, 1',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '1, 0, 2',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '3, 1, 7',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '4, 2, 14',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '3, 2, 14',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '0, 2, 5',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '3, 1, 6',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '3, 1, 9',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '3, 2, 9',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '10, 10, 0',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '0, 0, 1',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '0, 1, 1',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '0, 0, 2',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '2, 0, 2',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '0, 1, 2',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '1, 1, 2',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '2, 1, 3',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '3, 1, 4',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '2, 1, 1',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '2, 2, 6',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '6, 1, 11',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '5, 0, 1',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '3, 1, 8',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '3, 2, 10',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '3, 2, 8',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '6, 0, 11',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '1, 4, 11',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '0, 3, 10',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '1, 4, 12',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '1, 1, 7',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '2, 1, 7',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '7, 1, 11',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '7, 1, 8',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '7, 1, 13',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'true',
304: 1:      'question': '43, 1, 46',
304: 1:      'valid': true
304: 1:    },
304: 1:    {
304: 1:      'answer': 'false',
304: 1:      'question': '40, 1, 46',
304: 1:      'valid': true
304: 1:    }
304: 1:  ],
304: 1:  'info': [
304: 1:    '✅f(0, 1, 5) = true',
304: 1:    '✅f(1, 0, 1) = true',
304: 1:    '✅f(1, 0, 2) = false',
304: 1:    '✅f(3, 1, 7) = true',
304: 1:    '✅f(4, 2, 14) = true',
304: 1:    '✅f(3, 2, 14) = false',
304: 1:    '✅f(0, 2, 5) = true',
304: 1:    '✅f(3, 1, 6) = true',
304: 1:    '✅f(3, 1, 9) = false',
304: 1:    '✅f(3, 2, 9) = false',
304: 1:    '✅f(10, 10, 0) = true',
304: 1:    '✅f(0, 0, 1) = false',
304: 1:    '✅f(0, 1, 1) = false',
304: 1:    '✅f(0, 0, 2) = false',
304: 1:    '✅f(2, 0, 2) = true',
304: 1:    '✅f(0, 1, 2) = false',
304: 1:    '✅f(1, 1, 2) = false',
304: 1:    '✅f(2, 1, 3) = false',
304: 1:    '✅f(3, 1, 4) = false',
304: 1:    '✅f(2, 1, 1) = true',
304: 1:    '✅f(2, 2, 6) = true',
304: 1:    '✅f(6, 1, 11) = true',
304: 1:    '✅f(5, 0, 1) = true',
304: 1:    '✅f(3, 1, 8) = true',
304: 1:    '✅f(3, 2, 10) = true',
304: 1:    '✅f(3, 2, 8) = true',
304: 1:    '✅f(6, 0, 11) = false',
304: 1:    '✅f(1, 4, 11) = true',
304: 1:    '✅f(0, 3, 10) = true',
304: 1:    '✅f(1, 4, 12) = false',
304: 1:    '✅f(1, 1, 7) = false',
304: 1:    '✅f(2, 1, 7) = true',
304: 1:    '✅f(7, 1, 11) = true',
304: 1:    '✅f(7, 1, 8) = true',
304: 1:    '✅f(7, 1, 13) = false',
304: 1:    '✅f(43, 1, 46) = true',
304: 1:    '✅f(40, 1, 46) = false',
304: 1:    '❌f(40, 2, 47) = ??? != true'
304: 1:  ],
304: 1:  'level': 11,
304: 1:  'nextQuestion': '40, 2, 47',
304: 1:  'questions': [
304: 1:    '0, 1, 5',
304: 1:    '1, 0, 1',
304: 1:    '1, 0, 2',
304: 1:    '3, 1, 7',
304: 1:    '4, 2, 14',
304: 1:    '3, 2, 14',
304: 1:    '0, 2, 5',
304: 1:    '3, 1, 6',
304: 1:    '3, 1, 9',
304: 1:    '3, 2, 9',
304: 1:    '10, 10, 0',
304: 1:    '0, 0, 1',
304: 1:    '0, 1, 1',
304: 1:    '0, 0, 2',
304: 1:    '2, 0, 2',
304: 1:    '0, 1, 2',
304: 1:    '1, 1, 2',
304: 1:    '2, 1, 3',
304: 1:    '3, 1, 4',
304: 1:    '2, 1, 1',
304: 1:    '2, 2, 6',
304: 1:    '6, 1, 11',
304: 1:    '5, 0, 1',
304: 1:    '3, 1, 8',
304: 1:    '3, 2, 10',
304: 1:    '3, 2, 8',
304: 1:    '6, 0, 11',
304: 1:    '1, 4, 11',
304: 1:    '0, 3, 10',
304: 1:    '1, 4, 12',
304: 1:    '1, 1, 7',
304: 1:    '2, 1, 7',
304: 1:    '7, 1, 11',
304: 1:    '7, 1, 8',
304: 1:    '7, 1, 13',
304: 1:    '43, 1, 46',
304: 1:    '40, 1, 46',
304: 1:    '40, 2, 47'
304: 1:  ]
304: 1:}
304: 1:Scores: 21654
304: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true']')
304: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
305: 1:BoardData {
305: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
305: 1:  'expectedAnswer': 'true',
305: 1:  'history': [
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '0, 1, 5',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '1, 0, 1',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '1, 0, 2',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '3, 1, 7',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '4, 2, 14',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '3, 2, 14',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '0, 2, 5',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '3, 1, 6',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '3, 1, 9',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '3, 2, 9',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '10, 10, 0',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '0, 0, 1',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '0, 1, 1',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '0, 0, 2',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '2, 0, 2',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '0, 1, 2',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '1, 1, 2',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '2, 1, 3',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '3, 1, 4',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '2, 1, 1',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '2, 2, 6',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '6, 1, 11',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '5, 0, 1',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '3, 1, 8',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '3, 2, 10',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '3, 2, 8',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '6, 0, 11',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '1, 4, 11',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '0, 3, 10',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '1, 4, 12',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '1, 1, 7',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '2, 1, 7',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '7, 1, 11',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '7, 1, 8',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '7, 1, 13',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '43, 1, 46',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'false',
305: 1:      'question': '40, 1, 46',
305: 1:      'valid': true
305: 1:    },
305: 1:    {
305: 1:      'answer': 'true',
305: 1:      'question': '40, 2, 47',
305: 1:      'valid': true
305: 1:    }
305: 1:  ],
305: 1:  'info': [
305: 1:    '✅f(0, 1, 5) = true',
305: 1:    '✅f(1, 0, 1) = true',
305: 1:    '✅f(1, 0, 2) = false',
305: 1:    '✅f(3, 1, 7) = true',
305: 1:    '✅f(4, 2, 14) = true',
305: 1:    '✅f(3, 2, 14) = false',
305: 1:    '✅f(0, 2, 5) = true',
305: 1:    '✅f(3, 1, 6) = true',
305: 1:    '✅f(3, 1, 9) = false',
305: 1:    '✅f(3, 2, 9) = false',
305: 1:    '✅f(10, 10, 0) = true',
305: 1:    '✅f(0, 0, 1) = false',
305: 1:    '✅f(0, 1, 1) = false',
305: 1:    '✅f(0, 0, 2) = false',
305: 1:    '✅f(2, 0, 2) = true',
305: 1:    '✅f(0, 1, 2) = false',
305: 1:    '✅f(1, 1, 2) = false',
305: 1:    '✅f(2, 1, 3) = false',
305: 1:    '✅f(3, 1, 4) = false',
305: 1:    '✅f(2, 1, 1) = true',
305: 1:    '✅f(2, 2, 6) = true',
305: 1:    '✅f(6, 1, 11) = true',
305: 1:    '✅f(5, 0, 1) = true',
305: 1:    '✅f(3, 1, 8) = true',
305: 1:    '✅f(3, 2, 10) = true',
305: 1:    '✅f(3, 2, 8) = true',
305: 1:    '✅f(6, 0, 11) = false',
305: 1:    '✅f(1, 4, 11) = true',
305: 1:    '✅f(0, 3, 10) = true',
305: 1:    '✅f(1, 4, 12) = false',
305: 1:    '✅f(1, 1, 7) = false',
305: 1:    '✅f(2, 1, 7) = true',
305: 1:    '✅f(7, 1, 11) = true',
305: 1:    '✅f(7, 1, 8) = true',
305: 1:    '✅f(7, 1, 13) = false',
305: 1:    '✅f(43, 1, 46) = true',
305: 1:    '✅f(40, 1, 46) = false',
305: 1:    '✅f(40, 2, 47) = true',
305: 1:    '❌f(40, 2, 50) = ??? != true'
305: 1:  ],
305: 1:  'level': 11,
305: 1:  'nextQuestion': '40, 2, 50',
305: 1:  'questions': [
305: 1:    '0, 1, 5',
305: 1:    '1, 0, 1',
305: 1:    '1, 0, 2',
305: 1:    '3, 1, 7',
305: 1:    '4, 2, 14',
305: 1:    '3, 2, 14',
305: 1:    '0, 2, 5',
305: 1:    '3, 1, 6',
305: 1:    '3, 1, 9',
305: 1:    '3, 2, 9',
305: 1:    '10, 10, 0',
305: 1:    '0, 0, 1',
305: 1:    '0, 1, 1',
305: 1:    '0, 0, 2',
305: 1:    '2, 0, 2',
305: 1:    '0, 1, 2',
305: 1:    '1, 1, 2',
305: 1:    '2, 1, 3',
305: 1:    '3, 1, 4',
305: 1:    '2, 1, 1',
305: 1:    '2, 2, 6',
305: 1:    '6, 1, 11',
305: 1:    '5, 0, 1',
305: 1:    '3, 1, 8',
305: 1:    '3, 2, 10',
305: 1:    '3, 2, 8',
305: 1:    '6, 0, 11',
305: 1:    '1, 4, 11',
305: 1:    '0, 3, 10',
305: 1:    '1, 4, 12',
305: 1:    '1, 1, 7',
305: 1:    '2, 1, 7',
305: 1:    '7, 1, 11',
305: 1:    '7, 1, 8',
305: 1:    '7, 1, 13',
305: 1:    '43, 1, 46',
305: 1:    '40, 1, 46',
305: 1:    '40, 2, 47',
305: 1:    '40, 2, 50'
305: 1:  ]
305: 1:}
305: 1:Scores: 21661
305: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true']')
305: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
306: 1:BoardData {
306: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
306: 1:  'expectedAnswer': 'false',
306: 1:  'history': [
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '0, 1, 5',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '1, 0, 1',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '1, 0, 2',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '3, 1, 7',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '4, 2, 14',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '3, 2, 14',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '0, 2, 5',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '3, 1, 6',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '3, 1, 9',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '3, 2, 9',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '10, 10, 0',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '0, 0, 1',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '0, 1, 1',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '0, 0, 2',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '2, 0, 2',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '0, 1, 2',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '1, 1, 2',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '2, 1, 3',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '3, 1, 4',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '2, 1, 1',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '2, 2, 6',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '6, 1, 11',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '5, 0, 1',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '3, 1, 8',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '3, 2, 10',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '3, 2, 8',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '6, 0, 11',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '1, 4, 11',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '0, 3, 10',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '1, 4, 12',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '1, 1, 7',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '2, 1, 7',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '7, 1, 11',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '7, 1, 8',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '7, 1, 13',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '43, 1, 46',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'false',
306: 1:      'question': '40, 1, 46',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '40, 2, 47',
306: 1:      'valid': true
306: 1:    },
306: 1:    {
306: 1:      'answer': 'true',
306: 1:      'question': '40, 2, 50',
306: 1:      'valid': true
306: 1:    }
306: 1:  ],
306: 1:  'info': [
306: 1:    '✅f(0, 1, 5) = true',
306: 1:    '✅f(1, 0, 1) = true',
306: 1:    '✅f(1, 0, 2) = false',
306: 1:    '✅f(3, 1, 7) = true',
306: 1:    '✅f(4, 2, 14) = true',
306: 1:    '✅f(3, 2, 14) = false',
306: 1:    '✅f(0, 2, 5) = true',
306: 1:    '✅f(3, 1, 6) = true',
306: 1:    '✅f(3, 1, 9) = false',
306: 1:    '✅f(3, 2, 9) = false',
306: 1:    '✅f(10, 10, 0) = true',
306: 1:    '✅f(0, 0, 1) = false',
306: 1:    '✅f(0, 1, 1) = false',
306: 1:    '✅f(0, 0, 2) = false',
306: 1:    '✅f(2, 0, 2) = true',
306: 1:    '✅f(0, 1, 2) = false',
306: 1:    '✅f(1, 1, 2) = false',
306: 1:    '✅f(2, 1, 3) = false',
306: 1:    '✅f(3, 1, 4) = false',
306: 1:    '✅f(2, 1, 1) = true',
306: 1:    '✅f(2, 2, 6) = true',
306: 1:    '✅f(6, 1, 11) = true',
306: 1:    '✅f(5, 0, 1) = true',
306: 1:    '✅f(3, 1, 8) = true',
306: 1:    '✅f(3, 2, 10) = true',
306: 1:    '✅f(3, 2, 8) = true',
306: 1:    '✅f(6, 0, 11) = false',
306: 1:    '✅f(1, 4, 11) = true',
306: 1:    '✅f(0, 3, 10) = true',
306: 1:    '✅f(1, 4, 12) = false',
306: 1:    '✅f(1, 1, 7) = false',
306: 1:    '✅f(2, 1, 7) = true',
306: 1:    '✅f(7, 1, 11) = true',
306: 1:    '✅f(7, 1, 8) = true',
306: 1:    '✅f(7, 1, 13) = false',
306: 1:    '✅f(43, 1, 46) = true',
306: 1:    '✅f(40, 1, 46) = false',
306: 1:    '✅f(40, 2, 47) = true',
306: 1:    '✅f(40, 2, 50) = true',
306: 1:    '❌f(40, 2, 52) = ??? != false'
306: 1:  ],
306: 1:  'level': 11,
306: 1:  'nextQuestion': '40, 2, 52',
306: 1:  'questions': [
306: 1:    '0, 1, 5',
306: 1:    '1, 0, 1',
306: 1:    '1, 0, 2',
306: 1:    '3, 1, 7',
306: 1:    '4, 2, 14',
306: 1:    '3, 2, 14',
306: 1:    '0, 2, 5',
306: 1:    '3, 1, 6',
306: 1:    '3, 1, 9',
306: 1:    '3, 2, 9',
306: 1:    '10, 10, 0',
306: 1:    '0, 0, 1',
306: 1:    '0, 1, 1',
306: 1:    '0, 0, 2',
306: 1:    '2, 0, 2',
306: 1:    '0, 1, 2',
306: 1:    '1, 1, 2',
306: 1:    '2, 1, 3',
306: 1:    '3, 1, 4',
306: 1:    '2, 1, 1',
306: 1:    '2, 2, 6',
306: 1:    '6, 1, 11',
306: 1:    '5, 0, 1',
306: 1:    '3, 1, 8',
306: 1:    '3, 2, 10',
306: 1:    '3, 2, 8',
306: 1:    '6, 0, 11',
306: 1:    '1, 4, 11',
306: 1:    '0, 3, 10',
306: 1:    '1, 4, 12',
306: 1:    '1, 1, 7',
306: 1:    '2, 1, 7',
306: 1:    '7, 1, 11',
306: 1:    '7, 1, 8',
306: 1:    '7, 1, 13',
306: 1:    '43, 1, 46',
306: 1:    '40, 1, 46',
306: 1:    '40, 2, 47',
306: 1:    '40, 2, 50',
306: 1:    '40, 2, 52'
306: 1:  ]
306: 1:}
306: 1:Scores: 21668
306: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false']')
306: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
307: 1:BoardData {
307: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
307: 1:  'expectedAnswer': 'false',
307: 1:  'history': [
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '0, 1, 5',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '1, 0, 1',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '1, 0, 2',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '3, 1, 7',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '4, 2, 14',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '3, 2, 14',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '0, 2, 5',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '3, 1, 6',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '3, 1, 9',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '3, 2, 9',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '10, 10, 0',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '0, 0, 1',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '0, 1, 1',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '0, 0, 2',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '2, 0, 2',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '0, 1, 2',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '1, 1, 2',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '2, 1, 3',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '3, 1, 4',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '2, 1, 1',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '2, 2, 6',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '6, 1, 11',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '5, 0, 1',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '3, 1, 8',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '3, 2, 10',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '3, 2, 8',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '6, 0, 11',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '1, 4, 11',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '0, 3, 10',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '1, 4, 12',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '1, 1, 7',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '2, 1, 7',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '7, 1, 11',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '7, 1, 8',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '7, 1, 13',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '43, 1, 46',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '40, 1, 46',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '40, 2, 47',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'true',
307: 1:      'question': '40, 2, 50',
307: 1:      'valid': true
307: 1:    },
307: 1:    {
307: 1:      'answer': 'false',
307: 1:      'question': '40, 2, 52',
307: 1:      'valid': true
307: 1:    }
307: 1:  ],
307: 1:  'info': [
307: 1:    '✅f(0, 1, 5) = true',
307: 1:    '✅f(1, 0, 1) = true',
307: 1:    '✅f(1, 0, 2) = false',
307: 1:    '✅f(3, 1, 7) = true',
307: 1:    '✅f(4, 2, 14) = true',
307: 1:    '✅f(3, 2, 14) = false',
307: 1:    '✅f(0, 2, 5) = true',
307: 1:    '✅f(3, 1, 6) = true',
307: 1:    '✅f(3, 1, 9) = false',
307: 1:    '✅f(3, 2, 9) = false',
307: 1:    '✅f(10, 10, 0) = true',
307: 1:    '✅f(0, 0, 1) = false',
307: 1:    '✅f(0, 1, 1) = false',
307: 1:    '✅f(0, 0, 2) = false',
307: 1:    '✅f(2, 0, 2) = true',
307: 1:    '✅f(0, 1, 2) = false',
307: 1:    '✅f(1, 1, 2) = false',
307: 1:    '✅f(2, 1, 3) = false',
307: 1:    '✅f(3, 1, 4) = false',
307: 1:    '✅f(2, 1, 1) = true',
307: 1:    '✅f(2, 2, 6) = true',
307: 1:    '✅f(6, 1, 11) = true',
307: 1:    '✅f(5, 0, 1) = true',
307: 1:    '✅f(3, 1, 8) = true',
307: 1:    '✅f(3, 2, 10) = true',
307: 1:    '✅f(3, 2, 8) = true',
307: 1:    '✅f(6, 0, 11) = false',
307: 1:    '✅f(1, 4, 11) = true',
307: 1:    '✅f(0, 3, 10) = true',
307: 1:    '✅f(1, 4, 12) = false',
307: 1:    '✅f(1, 1, 7) = false',
307: 1:    '✅f(2, 1, 7) = true',
307: 1:    '✅f(7, 1, 11) = true',
307: 1:    '✅f(7, 1, 8) = true',
307: 1:    '✅f(7, 1, 13) = false',
307: 1:    '✅f(43, 1, 46) = true',
307: 1:    '✅f(40, 1, 46) = false',
307: 1:    '✅f(40, 2, 47) = true',
307: 1:    '✅f(40, 2, 50) = true',
307: 1:    '✅f(40, 2, 52) = false',
307: 1:    '❌f(22, 2, 33) = ??? != false'
307: 1:  ],
307: 1:  'level': 11,
307: 1:  'nextQuestion': '22, 2, 33',
307: 1:  'questions': [
307: 1:    '0, 1, 5',
307: 1:    '1, 0, 1',
307: 1:    '1, 0, 2',
307: 1:    '3, 1, 7',
307: 1:    '4, 2, 14',
307: 1:    '3, 2, 14',
307: 1:    '0, 2, 5',
307: 1:    '3, 1, 6',
307: 1:    '3, 1, 9',
307: 1:    '3, 2, 9',
307: 1:    '10, 10, 0',
307: 1:    '0, 0, 1',
307: 1:    '0, 1, 1',
307: 1:    '0, 0, 2',
307: 1:    '2, 0, 2',
307: 1:    '0, 1, 2',
307: 1:    '1, 1, 2',
307: 1:    '2, 1, 3',
307: 1:    '3, 1, 4',
307: 1:    '2, 1, 1',
307: 1:    '2, 2, 6',
307: 1:    '6, 1, 11',
307: 1:    '5, 0, 1',
307: 1:    '3, 1, 8',
307: 1:    '3, 2, 10',
307: 1:    '3, 2, 8',
307: 1:    '6, 0, 11',
307: 1:    '1, 4, 11',
307: 1:    '0, 3, 10',
307: 1:    '1, 4, 12',
307: 1:    '1, 1, 7',
307: 1:    '2, 1, 7',
307: 1:    '7, 1, 11',
307: 1:    '7, 1, 8',
307: 1:    '7, 1, 13',
307: 1:    '43, 1, 46',
307: 1:    '40, 1, 46',
307: 1:    '40, 2, 47',
307: 1:    '40, 2, 50',
307: 1:    '40, 2, 52',
307: 1:    '22, 2, 33'
307: 1:  ]
307: 1:}
307: 1:Scores: 21675
307: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false']')
307: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
308: 1:BoardData {
308: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
308: 1:  'expectedAnswer': 'true',
308: 1:  'history': [
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '0, 1, 5',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '1, 0, 1',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '1, 0, 2',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '3, 1, 7',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '4, 2, 14',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '3, 2, 14',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '0, 2, 5',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '3, 1, 6',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '3, 1, 9',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '3, 2, 9',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '10, 10, 0',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '0, 0, 1',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '0, 1, 1',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '0, 0, 2',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '2, 0, 2',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '0, 1, 2',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '1, 1, 2',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '2, 1, 3',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '3, 1, 4',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '2, 1, 1',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '2, 2, 6',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '6, 1, 11',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '5, 0, 1',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '3, 1, 8',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '3, 2, 10',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '3, 2, 8',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '6, 0, 11',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '1, 4, 11',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '0, 3, 10',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '1, 4, 12',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '1, 1, 7',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '2, 1, 7',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '7, 1, 11',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '7, 1, 8',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '7, 1, 13',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '43, 1, 46',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '40, 1, 46',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '40, 2, 47',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'true',
308: 1:      'question': '40, 2, 50',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '40, 2, 52',
308: 1:      'valid': true
308: 1:    },
308: 1:    {
308: 1:      'answer': 'false',
308: 1:      'question': '22, 2, 33',
308: 1:      'valid': true
308: 1:    }
308: 1:  ],
308: 1:  'info': [
308: 1:    '✅f(0, 1, 5) = true',
308: 1:    '✅f(1, 0, 1) = true',
308: 1:    '✅f(1, 0, 2) = false',
308: 1:    '✅f(3, 1, 7) = true',
308: 1:    '✅f(4, 2, 14) = true',
308: 1:    '✅f(3, 2, 14) = false',
308: 1:    '✅f(0, 2, 5) = true',
308: 1:    '✅f(3, 1, 6) = true',
308: 1:    '✅f(3, 1, 9) = false',
308: 1:    '✅f(3, 2, 9) = false',
308: 1:    '✅f(10, 10, 0) = true',
308: 1:    '✅f(0, 0, 1) = false',
308: 1:    '✅f(0, 1, 1) = false',
308: 1:    '✅f(0, 0, 2) = false',
308: 1:    '✅f(2, 0, 2) = true',
308: 1:    '✅f(0, 1, 2) = false',
308: 1:    '✅f(1, 1, 2) = false',
308: 1:    '✅f(2, 1, 3) = false',
308: 1:    '✅f(3, 1, 4) = false',
308: 1:    '✅f(2, 1, 1) = true',
308: 1:    '✅f(2, 2, 6) = true',
308: 1:    '✅f(6, 1, 11) = true',
308: 1:    '✅f(5, 0, 1) = true',
308: 1:    '✅f(3, 1, 8) = true',
308: 1:    '✅f(3, 2, 10) = true',
308: 1:    '✅f(3, 2, 8) = true',
308: 1:    '✅f(6, 0, 11) = false',
308: 1:    '✅f(1, 4, 11) = true',
308: 1:    '✅f(0, 3, 10) = true',
308: 1:    '✅f(1, 4, 12) = false',
308: 1:    '✅f(1, 1, 7) = false',
308: 1:    '✅f(2, 1, 7) = true',
308: 1:    '✅f(7, 1, 11) = true',
308: 1:    '✅f(7, 1, 8) = true',
308: 1:    '✅f(7, 1, 13) = false',
308: 1:    '✅f(43, 1, 46) = true',
308: 1:    '✅f(40, 1, 46) = false',
308: 1:    '✅f(40, 2, 47) = true',
308: 1:    '✅f(40, 2, 50) = true',
308: 1:    '✅f(40, 2, 52) = false',
308: 1:    '✅f(22, 2, 33) = false',
308: 1:    '❌f(0, 2, 10) = ??? != true'
308: 1:  ],
308: 1:  'level': 11,
308: 1:  'nextQuestion': '0, 2, 10',
308: 1:  'questions': [
308: 1:    '0, 1, 5',
308: 1:    '1, 0, 1',
308: 1:    '1, 0, 2',
308: 1:    '3, 1, 7',
308: 1:    '4, 2, 14',
308: 1:    '3, 2, 14',
308: 1:    '0, 2, 5',
308: 1:    '3, 1, 6',
308: 1:    '3, 1, 9',
308: 1:    '3, 2, 9',
308: 1:    '10, 10, 0',
308: 1:    '0, 0, 1',
308: 1:    '0, 1, 1',
308: 1:    '0, 0, 2',
308: 1:    '2, 0, 2',
308: 1:    '0, 1, 2',
308: 1:    '1, 1, 2',
308: 1:    '2, 1, 3',
308: 1:    '3, 1, 4',
308: 1:    '2, 1, 1',
308: 1:    '2, 2, 6',
308: 1:    '6, 1, 11',
308: 1:    '5, 0, 1',
308: 1:    '3, 1, 8',
308: 1:    '3, 2, 10',
308: 1:    '3, 2, 8',
308: 1:    '6, 0, 11',
308: 1:    '1, 4, 11',
308: 1:    '0, 3, 10',
308: 1:    '1, 4, 12',
308: 1:    '1, 1, 7',
308: 1:    '2, 1, 7',
308: 1:    '7, 1, 11',
308: 1:    '7, 1, 8',
308: 1:    '7, 1, 13',
308: 1:    '43, 1, 46',
308: 1:    '40, 1, 46',
308: 1:    '40, 2, 47',
308: 1:    '40, 2, 50',
308: 1:    '40, 2, 52',
308: 1:    '22, 2, 33',
308: 1:    '0, 2, 10'
308: 1:  ]
308: 1:}
308: 1:Scores: 21682
308: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true']')
308: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
309: 1:BoardData {
309: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
309: 1:  'expectedAnswer': 'true',
309: 1:  'history': [
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '0, 1, 5',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '1, 0, 1',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '1, 0, 2',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '3, 1, 7',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '4, 2, 14',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '3, 2, 14',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '0, 2, 5',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '3, 1, 6',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '3, 1, 9',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '3, 2, 9',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '10, 10, 0',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '0, 0, 1',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '0, 1, 1',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '0, 0, 2',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '2, 0, 2',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '0, 1, 2',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '1, 1, 2',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '2, 1, 3',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '3, 1, 4',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '2, 1, 1',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '2, 2, 6',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '6, 1, 11',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '5, 0, 1',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '3, 1, 8',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '3, 2, 10',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '3, 2, 8',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '6, 0, 11',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '1, 4, 11',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '0, 3, 10',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '1, 4, 12',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '1, 1, 7',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '2, 1, 7',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '7, 1, 11',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '7, 1, 8',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '7, 1, 13',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '43, 1, 46',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '40, 1, 46',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '40, 2, 47',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '40, 2, 50',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '40, 2, 52',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'false',
309: 1:      'question': '22, 2, 33',
309: 1:      'valid': true
309: 1:    },
309: 1:    {
309: 1:      'answer': 'true',
309: 1:      'question': '0, 2, 10',
309: 1:      'valid': true
309: 1:    }
309: 1:  ],
309: 1:  'info': [
309: 1:    '✅f(0, 1, 5) = true',
309: 1:    '✅f(1, 0, 1) = true',
309: 1:    '✅f(1, 0, 2) = false',
309: 1:    '✅f(3, 1, 7) = true',
309: 1:    '✅f(4, 2, 14) = true',
309: 1:    '✅f(3, 2, 14) = false',
309: 1:    '✅f(0, 2, 5) = true',
309: 1:    '✅f(3, 1, 6) = true',
309: 1:    '✅f(3, 1, 9) = false',
309: 1:    '✅f(3, 2, 9) = false',
309: 1:    '✅f(10, 10, 0) = true',
309: 1:    '✅f(0, 0, 1) = false',
309: 1:    '✅f(0, 1, 1) = false',
309: 1:    '✅f(0, 0, 2) = false',
309: 1:    '✅f(2, 0, 2) = true',
309: 1:    '✅f(0, 1, 2) = false',
309: 1:    '✅f(1, 1, 2) = false',
309: 1:    '✅f(2, 1, 3) = false',
309: 1:    '✅f(3, 1, 4) = false',
309: 1:    '✅f(2, 1, 1) = true',
309: 1:    '✅f(2, 2, 6) = true',
309: 1:    '✅f(6, 1, 11) = true',
309: 1:    '✅f(5, 0, 1) = true',
309: 1:    '✅f(3, 1, 8) = true',
309: 1:    '✅f(3, 2, 10) = true',
309: 1:    '✅f(3, 2, 8) = true',
309: 1:    '✅f(6, 0, 11) = false',
309: 1:    '✅f(1, 4, 11) = true',
309: 1:    '✅f(0, 3, 10) = true',
309: 1:    '✅f(1, 4, 12) = false',
309: 1:    '✅f(1, 1, 7) = false',
309: 1:    '✅f(2, 1, 7) = true',
309: 1:    '✅f(7, 1, 11) = true',
309: 1:    '✅f(7, 1, 8) = true',
309: 1:    '✅f(7, 1, 13) = false',
309: 1:    '✅f(43, 1, 46) = true',
309: 1:    '✅f(40, 1, 46) = false',
309: 1:    '✅f(40, 2, 47) = true',
309: 1:    '✅f(40, 2, 50) = true',
309: 1:    '✅f(40, 2, 52) = false',
309: 1:    '✅f(22, 2, 33) = false',
309: 1:    '✅f(0, 2, 10) = true',
309: 1:    '❌f(1000000, 1000, 1000100) = ??? != true'
309: 1:  ],
309: 1:  'level': 11,
309: 1:  'nextQuestion': '1000000, 1000, 1000100',
309: 1:  'questions': [
309: 1:    '0, 1, 5',
309: 1:    '1, 0, 1',
309: 1:    '1, 0, 2',
309: 1:    '3, 1, 7',
309: 1:    '4, 2, 14',
309: 1:    '3, 2, 14',
309: 1:    '0, 2, 5',
309: 1:    '3, 1, 6',
309: 1:    '3, 1, 9',
309: 1:    '3, 2, 9',
309: 1:    '10, 10, 0',
309: 1:    '0, 0, 1',
309: 1:    '0, 1, 1',
309: 1:    '0, 0, 2',
309: 1:    '2, 0, 2',
309: 1:    '0, 1, 2',
309: 1:    '1, 1, 2',
309: 1:    '2, 1, 3',
309: 1:    '3, 1, 4',
309: 1:    '2, 1, 1',
309: 1:    '2, 2, 6',
309: 1:    '6, 1, 11',
309: 1:    '5, 0, 1',
309: 1:    '3, 1, 8',
309: 1:    '3, 2, 10',
309: 1:    '3, 2, 8',
309: 1:    '6, 0, 11',
309: 1:    '1, 4, 11',
309: 1:    '0, 3, 10',
309: 1:    '1, 4, 12',
309: 1:    '1, 1, 7',
309: 1:    '2, 1, 7',
309: 1:    '7, 1, 11',
309: 1:    '7, 1, 8',
309: 1:    '7, 1, 13',
309: 1:    '43, 1, 46',
309: 1:    '40, 1, 46',
309: 1:    '40, 2, 47',
309: 1:    '40, 2, 50',
309: 1:    '40, 2, 52',
309: 1:    '22, 2, 33',
309: 1:    '0, 2, 10',
309: 1:    '1000000, 1000, 1000100'
309: 1:  ]
309: 1:}
309: 1:Scores: 21689
309: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true']')
309: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
310: 1:BoardData {
310: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
310: 1:  'expectedAnswer': 'false',
310: 1:  'history': [
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '0, 1, 5',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '1, 0, 1',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '1, 0, 2',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '3, 1, 7',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '4, 2, 14',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '3, 2, 14',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '0, 2, 5',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '3, 1, 6',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '3, 1, 9',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '3, 2, 9',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '10, 10, 0',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '0, 0, 1',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '0, 1, 1',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '0, 0, 2',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '2, 0, 2',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '0, 1, 2',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '1, 1, 2',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '2, 1, 3',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '3, 1, 4',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '2, 1, 1',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '2, 2, 6',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '6, 1, 11',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '5, 0, 1',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '3, 1, 8',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '3, 2, 10',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '3, 2, 8',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '6, 0, 11',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '1, 4, 11',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '0, 3, 10',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '1, 4, 12',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '1, 1, 7',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '2, 1, 7',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '7, 1, 11',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '7, 1, 8',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '7, 1, 13',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '43, 1, 46',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '40, 1, 46',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '40, 2, 47',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '40, 2, 50',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '40, 2, 52',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'false',
310: 1:      'question': '22, 2, 33',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '0, 2, 10',
310: 1:      'valid': true
310: 1:    },
310: 1:    {
310: 1:      'answer': 'true',
310: 1:      'question': '1000000, 1000, 1000100',
310: 1:      'valid': true
310: 1:    }
310: 1:  ],
310: 1:  'info': [
310: 1:    '✅f(0, 1, 5) = true',
310: 1:    '✅f(1, 0, 1) = true',
310: 1:    '✅f(1, 0, 2) = false',
310: 1:    '✅f(3, 1, 7) = true',
310: 1:    '✅f(4, 2, 14) = true',
310: 1:    '✅f(3, 2, 14) = false',
310: 1:    '✅f(0, 2, 5) = true',
310: 1:    '✅f(3, 1, 6) = true',
310: 1:    '✅f(3, 1, 9) = false',
310: 1:    '✅f(3, 2, 9) = false',
310: 1:    '✅f(10, 10, 0) = true',
310: 1:    '✅f(0, 0, 1) = false',
310: 1:    '✅f(0, 1, 1) = false',
310: 1:    '✅f(0, 0, 2) = false',
310: 1:    '✅f(2, 0, 2) = true',
310: 1:    '✅f(0, 1, 2) = false',
310: 1:    '✅f(1, 1, 2) = false',
310: 1:    '✅f(2, 1, 3) = false',
310: 1:    '✅f(3, 1, 4) = false',
310: 1:    '✅f(2, 1, 1) = true',
310: 1:    '✅f(2, 2, 6) = true',
310: 1:    '✅f(6, 1, 11) = true',
310: 1:    '✅f(5, 0, 1) = true',
310: 1:    '✅f(3, 1, 8) = true',
310: 1:    '✅f(3, 2, 10) = true',
310: 1:    '✅f(3, 2, 8) = true',
310: 1:    '✅f(6, 0, 11) = false',
310: 1:    '✅f(1, 4, 11) = true',
310: 1:    '✅f(0, 3, 10) = true',
310: 1:    '✅f(1, 4, 12) = false',
310: 1:    '✅f(1, 1, 7) = false',
310: 1:    '✅f(2, 1, 7) = true',
310: 1:    '✅f(7, 1, 11) = true',
310: 1:    '✅f(7, 1, 8) = true',
310: 1:    '✅f(7, 1, 13) = false',
310: 1:    '✅f(43, 1, 46) = true',
310: 1:    '✅f(40, 1, 46) = false',
310: 1:    '✅f(40, 2, 47) = true',
310: 1:    '✅f(40, 2, 50) = true',
310: 1:    '✅f(40, 2, 52) = false',
310: 1:    '✅f(22, 2, 33) = false',
310: 1:    '✅f(0, 2, 10) = true',
310: 1:    '✅f(1000000, 1000, 1000100) = true',
310: 1:    '❌f(2, 1000000, 100003) = ??? != false'
310: 1:  ],
310: 1:  'level': 11,
310: 1:  'nextQuestion': '2, 1000000, 100003',
310: 1:  'questions': [
310: 1:    '0, 1, 5',
310: 1:    '1, 0, 1',
310: 1:    '1, 0, 2',
310: 1:    '3, 1, 7',
310: 1:    '4, 2, 14',
310: 1:    '3, 2, 14',
310: 1:    '0, 2, 5',
310: 1:    '3, 1, 6',
310: 1:    '3, 1, 9',
310: 1:    '3, 2, 9',
310: 1:    '10, 10, 0',
310: 1:    '0, 0, 1',
310: 1:    '0, 1, 1',
310: 1:    '0, 0, 2',
310: 1:    '2, 0, 2',
310: 1:    '0, 1, 2',
310: 1:    '1, 1, 2',
310: 1:    '2, 1, 3',
310: 1:    '3, 1, 4',
310: 1:    '2, 1, 1',
310: 1:    '2, 2, 6',
310: 1:    '6, 1, 11',
310: 1:    '5, 0, 1',
310: 1:    '3, 1, 8',
310: 1:    '3, 2, 10',
310: 1:    '3, 2, 8',
310: 1:    '6, 0, 11',
310: 1:    '1, 4, 11',
310: 1:    '0, 3, 10',
310: 1:    '1, 4, 12',
310: 1:    '1, 1, 7',
310: 1:    '2, 1, 7',
310: 1:    '7, 1, 11',
310: 1:    '7, 1, 8',
310: 1:    '7, 1, 13',
310: 1:    '43, 1, 46',
310: 1:    '40, 1, 46',
310: 1:    '40, 2, 47',
310: 1:    '40, 2, 50',
310: 1:    '40, 2, 52',
310: 1:    '22, 2, 33',
310: 1:    '0, 2, 10',
310: 1:    '1000000, 1000, 1000100',
310: 1:    '2, 1000000, 100003'
310: 1:  ]
310: 1:}
310: 1:Scores: 21696
310: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false']')
310: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
311: 1:BoardData {
311: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
311: 1:  'expectedAnswer': 'true',
311: 1:  'history': [
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '0, 1, 5',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '1, 0, 1',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '1, 0, 2',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '3, 1, 7',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '4, 2, 14',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '3, 2, 14',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '0, 2, 5',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '3, 1, 6',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '3, 1, 9',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '3, 2, 9',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '10, 10, 0',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '0, 0, 1',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '0, 1, 1',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '0, 0, 2',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '2, 0, 2',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '0, 1, 2',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '1, 1, 2',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '2, 1, 3',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '3, 1, 4',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '2, 1, 1',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '2, 2, 6',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '6, 1, 11',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '5, 0, 1',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '3, 1, 8',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '3, 2, 10',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '3, 2, 8',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '6, 0, 11',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '1, 4, 11',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '0, 3, 10',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '1, 4, 12',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '1, 1, 7',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '2, 1, 7',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '7, 1, 11',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '7, 1, 8',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '7, 1, 13',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '43, 1, 46',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '40, 1, 46',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '40, 2, 47',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '40, 2, 50',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '40, 2, 52',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '22, 2, 33',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '0, 2, 10',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'true',
311: 1:      'question': '1000000, 1000, 1000100',
311: 1:      'valid': true
311: 1:    },
311: 1:    {
311: 1:      'answer': 'false',
311: 1:      'question': '2, 1000000, 100003',
311: 1:      'valid': true
311: 1:    }
311: 1:  ],
311: 1:  'info': [
311: 1:    '✅f(0, 1, 5) = true',
311: 1:    '✅f(1, 0, 1) = true',
311: 1:    '✅f(1, 0, 2) = false',
311: 1:    '✅f(3, 1, 7) = true',
311: 1:    '✅f(4, 2, 14) = true',
311: 1:    '✅f(3, 2, 14) = false',
311: 1:    '✅f(0, 2, 5) = true',
311: 1:    '✅f(3, 1, 6) = true',
311: 1:    '✅f(3, 1, 9) = false',
311: 1:    '✅f(3, 2, 9) = false',
311: 1:    '✅f(10, 10, 0) = true',
311: 1:    '✅f(0, 0, 1) = false',
311: 1:    '✅f(0, 1, 1) = false',
311: 1:    '✅f(0, 0, 2) = false',
311: 1:    '✅f(2, 0, 2) = true',
311: 1:    '✅f(0, 1, 2) = false',
311: 1:    '✅f(1, 1, 2) = false',
311: 1:    '✅f(2, 1, 3) = false',
311: 1:    '✅f(3, 1, 4) = false',
311: 1:    '✅f(2, 1, 1) = true',
311: 1:    '✅f(2, 2, 6) = true',
311: 1:    '✅f(6, 1, 11) = true',
311: 1:    '✅f(5, 0, 1) = true',
311: 1:    '✅f(3, 1, 8) = true',
311: 1:    '✅f(3, 2, 10) = true',
311: 1:    '✅f(3, 2, 8) = true',
311: 1:    '✅f(6, 0, 11) = false',
311: 1:    '✅f(1, 4, 11) = true',
311: 1:    '✅f(0, 3, 10) = true',
311: 1:    '✅f(1, 4, 12) = false',
311: 1:    '✅f(1, 1, 7) = false',
311: 1:    '✅f(2, 1, 7) = true',
311: 1:    '✅f(7, 1, 11) = true',
311: 1:    '✅f(7, 1, 8) = true',
311: 1:    '✅f(7, 1, 13) = false',
311: 1:    '✅f(43, 1, 46) = true',
311: 1:    '✅f(40, 1, 46) = false',
311: 1:    '✅f(40, 2, 47) = true',
311: 1:    '✅f(40, 2, 50) = true',
311: 1:    '✅f(40, 2, 52) = false',
311: 1:    '✅f(22, 2, 33) = false',
311: 1:    '✅f(0, 2, 10) = true',
311: 1:    '✅f(1000000, 1000, 1000100) = true',
311: 1:    '✅f(2, 1000000, 100003) = false',
311: 1:    '❌f(20, 0, 19) = ??? != true'
311: 1:  ],
311: 1:  'level': 11,
311: 1:  'nextQuestion': '20, 0, 19',
311: 1:  'questions': [
311: 1:    '0, 1, 5',
311: 1:    '1, 0, 1',
311: 1:    '1, 0, 2',
311: 1:    '3, 1, 7',
311: 1:    '4, 2, 14',
311: 1:    '3, 2, 14',
311: 1:    '0, 2, 5',
311: 1:    '3, 1, 6',
311: 1:    '3, 1, 9',
311: 1:    '3, 2, 9',
311: 1:    '10, 10, 0',
311: 1:    '0, 0, 1',
311: 1:    '0, 1, 1',
311: 1:    '0, 0, 2',
311: 1:    '2, 0, 2',
311: 1:    '0, 1, 2',
311: 1:    '1, 1, 2',
311: 1:    '2, 1, 3',
311: 1:    '3, 1, 4',
311: 1:    '2, 1, 1',
311: 1:    '2, 2, 6',
311: 1:    '6, 1, 11',
311: 1:    '5, 0, 1',
311: 1:    '3, 1, 8',
311: 1:    '3, 2, 10',
311: 1:    '3, 2, 8',
311: 1:    '6, 0, 11',
311: 1:    '1, 4, 11',
311: 1:    '0, 3, 10',
311: 1:    '1, 4, 12',
311: 1:    '1, 1, 7',
311: 1:    '2, 1, 7',
311: 1:    '7, 1, 11',
311: 1:    '7, 1, 8',
311: 1:    '7, 1, 13',
311: 1:    '43, 1, 46',
311: 1:    '40, 1, 46',
311: 1:    '40, 2, 47',
311: 1:    '40, 2, 50',
311: 1:    '40, 2, 52',
311: 1:    '22, 2, 33',
311: 1:    '0, 2, 10',
311: 1:    '1000000, 1000, 1000100',
311: 1:    '2, 1000000, 100003',
311: 1:    '20, 0, 19'
311: 1:  ]
311: 1:}
311: 1:Scores: 21703
311: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true']')
311: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
312: 1:BoardData {
312: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
312: 1:  'expectedAnswer': 'false',
312: 1:  'history': [
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '0, 1, 5',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '1, 0, 1',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '1, 0, 2',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '3, 1, 7',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '4, 2, 14',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '3, 2, 14',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '0, 2, 5',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '3, 1, 6',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '3, 1, 9',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '3, 2, 9',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '10, 10, 0',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '0, 0, 1',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '0, 1, 1',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '0, 0, 2',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '2, 0, 2',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '0, 1, 2',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '1, 1, 2',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '2, 1, 3',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '3, 1, 4',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '2, 1, 1',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '2, 2, 6',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '6, 1, 11',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '5, 0, 1',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '3, 1, 8',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '3, 2, 10',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '3, 2, 8',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '6, 0, 11',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '1, 4, 11',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '0, 3, 10',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '1, 4, 12',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '1, 1, 7',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '2, 1, 7',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '7, 1, 11',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '7, 1, 8',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '7, 1, 13',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '43, 1, 46',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '40, 1, 46',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '40, 2, 47',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '40, 2, 50',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '40, 2, 52',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '22, 2, 33',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '0, 2, 10',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '1000000, 1000, 1000100',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'false',
312: 1:      'question': '2, 1000000, 100003',
312: 1:      'valid': true
312: 1:    },
312: 1:    {
312: 1:      'answer': 'true',
312: 1:      'question': '20, 0, 19',
312: 1:      'valid': true
312: 1:    }
312: 1:  ],
312: 1:  'info': [
312: 1:    '✅f(0, 1, 5) = true',
312: 1:    '✅f(1, 0, 1) = true',
312: 1:    '✅f(1, 0, 2) = false',
312: 1:    '✅f(3, 1, 7) = true',
312: 1:    '✅f(4, 2, 14) = true',
312: 1:    '✅f(3, 2, 14) = false',
312: 1:    '✅f(0, 2, 5) = true',
312: 1:    '✅f(3, 1, 6) = true',
312: 1:    '✅f(3, 1, 9) = false',
312: 1:    '✅f(3, 2, 9) = false',
312: 1:    '✅f(10, 10, 0) = true',
312: 1:    '✅f(0, 0, 1) = false',
312: 1:    '✅f(0, 1, 1) = false',
312: 1:    '✅f(0, 0, 2) = false',
312: 1:    '✅f(2, 0, 2) = true',
312: 1:    '✅f(0, 1, 2) = false',
312: 1:    '✅f(1, 1, 2) = false',
312: 1:    '✅f(2, 1, 3) = false',
312: 1:    '✅f(3, 1, 4) = false',
312: 1:    '✅f(2, 1, 1) = true',
312: 1:    '✅f(2, 2, 6) = true',
312: 1:    '✅f(6, 1, 11) = true',
312: 1:    '✅f(5, 0, 1) = true',
312: 1:    '✅f(3, 1, 8) = true',
312: 1:    '✅f(3, 2, 10) = true',
312: 1:    '✅f(3, 2, 8) = true',
312: 1:    '✅f(6, 0, 11) = false',
312: 1:    '✅f(1, 4, 11) = true',
312: 1:    '✅f(0, 3, 10) = true',
312: 1:    '✅f(1, 4, 12) = false',
312: 1:    '✅f(1, 1, 7) = false',
312: 1:    '✅f(2, 1, 7) = true',
312: 1:    '✅f(7, 1, 11) = true',
312: 1:    '✅f(7, 1, 8) = true',
312: 1:    '✅f(7, 1, 13) = false',
312: 1:    '✅f(43, 1, 46) = true',
312: 1:    '✅f(40, 1, 46) = false',
312: 1:    '✅f(40, 2, 47) = true',
312: 1:    '✅f(40, 2, 50) = true',
312: 1:    '✅f(40, 2, 52) = false',
312: 1:    '✅f(22, 2, 33) = false',
312: 1:    '✅f(0, 2, 10) = true',
312: 1:    '✅f(1000000, 1000, 1000100) = true',
312: 1:    '✅f(2, 1000000, 100003) = false',
312: 1:    '✅f(20, 0, 19) = true',
312: 1:    '❌f(20, 0, 21) = ??? != false'
312: 1:  ],
312: 1:  'level': 11,
312: 1:  'nextQuestion': '20, 0, 21',
312: 1:  'questions': [
312: 1:    '0, 1, 5',
312: 1:    '1, 0, 1',
312: 1:    '1, 0, 2',
312: 1:    '3, 1, 7',
312: 1:    '4, 2, 14',
312: 1:    '3, 2, 14',
312: 1:    '0, 2, 5',
312: 1:    '3, 1, 6',
312: 1:    '3, 1, 9',
312: 1:    '3, 2, 9',
312: 1:    '10, 10, 0',
312: 1:    '0, 0, 1',
312: 1:    '0, 1, 1',
312: 1:    '0, 0, 2',
312: 1:    '2, 0, 2',
312: 1:    '0, 1, 2',
312: 1:    '1, 1, 2',
312: 1:    '2, 1, 3',
312: 1:    '3, 1, 4',
312: 1:    '2, 1, 1',
312: 1:    '2, 2, 6',
312: 1:    '6, 1, 11',
312: 1:    '5, 0, 1',
312: 1:    '3, 1, 8',
312: 1:    '3, 2, 10',
312: 1:    '3, 2, 8',
312: 1:    '6, 0, 11',
312: 1:    '1, 4, 11',
312: 1:    '0, 3, 10',
312: 1:    '1, 4, 12',
312: 1:    '1, 1, 7',
312: 1:    '2, 1, 7',
312: 1:    '7, 1, 11',
312: 1:    '7, 1, 8',
312: 1:    '7, 1, 13',
312: 1:    '43, 1, 46',
312: 1:    '40, 1, 46',
312: 1:    '40, 2, 47',
312: 1:    '40, 2, 50',
312: 1:    '40, 2, 52',
312: 1:    '22, 2, 33',
312: 1:    '0, 2, 10',
312: 1:    '1000000, 1000, 1000100',
312: 1:    '2, 1000000, 100003',
312: 1:    '20, 0, 19',
312: 1:    '20, 0, 21'
312: 1:  ]
312: 1:}
312: 1:Scores: 21710
312: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false']')
312: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
313: 1:BoardData {
313: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
313: 1:  'expectedAnswer': 'false',
313: 1:  'history': [
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '0, 1, 5',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '1, 0, 1',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '1, 0, 2',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '3, 1, 7',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '4, 2, 14',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '3, 2, 14',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '0, 2, 5',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '3, 1, 6',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '3, 1, 9',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '3, 2, 9',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '10, 10, 0',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '0, 0, 1',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '0, 1, 1',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '0, 0, 2',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '2, 0, 2',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '0, 1, 2',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '1, 1, 2',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '2, 1, 3',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '3, 1, 4',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '2, 1, 1',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '2, 2, 6',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '6, 1, 11',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '5, 0, 1',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '3, 1, 8',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '3, 2, 10',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '3, 2, 8',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '6, 0, 11',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '1, 4, 11',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '0, 3, 10',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '1, 4, 12',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '1, 1, 7',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '2, 1, 7',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '7, 1, 11',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '7, 1, 8',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '7, 1, 13',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '43, 1, 46',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '40, 1, 46',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '40, 2, 47',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '40, 2, 50',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '40, 2, 52',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '22, 2, 33',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '0, 2, 10',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '1000000, 1000, 1000100',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '2, 1000000, 100003',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'true',
313: 1:      'question': '20, 0, 19',
313: 1:      'valid': true
313: 1:    },
313: 1:    {
313: 1:      'answer': 'false',
313: 1:      'question': '20, 0, 21',
313: 1:      'valid': true
313: 1:    }
313: 1:  ],
313: 1:  'info': [
313: 1:    '✅f(0, 1, 5) = true',
313: 1:    '✅f(1, 0, 1) = true',
313: 1:    '✅f(1, 0, 2) = false',
313: 1:    '✅f(3, 1, 7) = true',
313: 1:    '✅f(4, 2, 14) = true',
313: 1:    '✅f(3, 2, 14) = false',
313: 1:    '✅f(0, 2, 5) = true',
313: 1:    '✅f(3, 1, 6) = true',
313: 1:    '✅f(3, 1, 9) = false',
313: 1:    '✅f(3, 2, 9) = false',
313: 1:    '✅f(10, 10, 0) = true',
313: 1:    '✅f(0, 0, 1) = false',
313: 1:    '✅f(0, 1, 1) = false',
313: 1:    '✅f(0, 0, 2) = false',
313: 1:    '✅f(2, 0, 2) = true',
313: 1:    '✅f(0, 1, 2) = false',
313: 1:    '✅f(1, 1, 2) = false',
313: 1:    '✅f(2, 1, 3) = false',
313: 1:    '✅f(3, 1, 4) = false',
313: 1:    '✅f(2, 1, 1) = true',
313: 1:    '✅f(2, 2, 6) = true',
313: 1:    '✅f(6, 1, 11) = true',
313: 1:    '✅f(5, 0, 1) = true',
313: 1:    '✅f(3, 1, 8) = true',
313: 1:    '✅f(3, 2, 10) = true',
313: 1:    '✅f(3, 2, 8) = true',
313: 1:    '✅f(6, 0, 11) = false',
313: 1:    '✅f(1, 4, 11) = true',
313: 1:    '✅f(0, 3, 10) = true',
313: 1:    '✅f(1, 4, 12) = false',
313: 1:    '✅f(1, 1, 7) = false',
313: 1:    '✅f(2, 1, 7) = true',
313: 1:    '✅f(7, 1, 11) = true',
313: 1:    '✅f(7, 1, 8) = true',
313: 1:    '✅f(7, 1, 13) = false',
313: 1:    '✅f(43, 1, 46) = true',
313: 1:    '✅f(40, 1, 46) = false',
313: 1:    '✅f(40, 2, 47) = true',
313: 1:    '✅f(40, 2, 50) = true',
313: 1:    '✅f(40, 2, 52) = false',
313: 1:    '✅f(22, 2, 33) = false',
313: 1:    '✅f(0, 2, 10) = true',
313: 1:    '✅f(1000000, 1000, 1000100) = true',
313: 1:    '✅f(2, 1000000, 100003) = false',
313: 1:    '✅f(20, 0, 19) = true',
313: 1:    '✅f(20, 0, 21) = false',
313: 1:    '❌f(20, 4, 51) = ??? != false'
313: 1:  ],
313: 1:  'level': 11,
313: 1:  'nextQuestion': '20, 4, 51',
313: 1:  'questions': [
313: 1:    '0, 1, 5',
313: 1:    '1, 0, 1',
313: 1:    '1, 0, 2',
313: 1:    '3, 1, 7',
313: 1:    '4, 2, 14',
313: 1:    '3, 2, 14',
313: 1:    '0, 2, 5',
313: 1:    '3, 1, 6',
313: 1:    '3, 1, 9',
313: 1:    '3, 2, 9',
313: 1:    '10, 10, 0',
313: 1:    '0, 0, 1',
313: 1:    '0, 1, 1',
313: 1:    '0, 0, 2',
313: 1:    '2, 0, 2',
313: 1:    '0, 1, 2',
313: 1:    '1, 1, 2',
313: 1:    '2, 1, 3',
313: 1:    '3, 1, 4',
313: 1:    '2, 1, 1',
313: 1:    '2, 2, 6',
313: 1:    '6, 1, 11',
313: 1:    '5, 0, 1',
313: 1:    '3, 1, 8',
313: 1:    '3, 2, 10',
313: 1:    '3, 2, 8',
313: 1:    '6, 0, 11',
313: 1:    '1, 4, 11',
313: 1:    '0, 3, 10',
313: 1:    '1, 4, 12',
313: 1:    '1, 1, 7',
313: 1:    '2, 1, 7',
313: 1:    '7, 1, 11',
313: 1:    '7, 1, 8',
313: 1:    '7, 1, 13',
313: 1:    '43, 1, 46',
313: 1:    '40, 1, 46',
313: 1:    '40, 2, 47',
313: 1:    '40, 2, 50',
313: 1:    '40, 2, 52',
313: 1:    '22, 2, 33',
313: 1:    '0, 2, 10',
313: 1:    '1000000, 1000, 1000100',
313: 1:    '2, 1000000, 100003',
313: 1:    '20, 0, 19',
313: 1:    '20, 0, 21',
313: 1:    '20, 4, 51'
313: 1:  ]
313: 1:}
313: 1:Scores: 21717
313: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false', 'false']')
313: 1:Fire Event: PassTest{complexity=35, testCount=48}
------------------------------------------
314: 1:BoardData {
314: 1:  'description': ['You have bricks of size 5 (bigCount) and 1 (smallCount). Write a method that can determine if a given set of bricks can be used to build a wall of a given length. a given set of bricks to build a wall of a given length (length). For example: \nmethod(3, 1, 8) → true\nmethod(3, 1, 9) → false\nmethod(3, 2, 10) → true'],
314: 1:  'expectedAnswer': 'true',
314: 1:  'history': [
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '0, 1, 5',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '1, 0, 1',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '1, 0, 2',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '3, 1, 7',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '4, 2, 14',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '3, 2, 14',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '0, 2, 5',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '3, 1, 6',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '3, 1, 9',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '3, 2, 9',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '10, 10, 0',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '0, 0, 1',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '0, 1, 1',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '0, 0, 2',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '2, 0, 2',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '0, 1, 2',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '1, 1, 2',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '2, 1, 3',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '3, 1, 4',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '2, 1, 1',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '2, 2, 6',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '6, 1, 11',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '5, 0, 1',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '3, 1, 8',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '3, 2, 10',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '3, 2, 8',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '6, 0, 11',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '1, 4, 11',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '0, 3, 10',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '1, 4, 12',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '1, 1, 7',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '2, 1, 7',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '7, 1, 11',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '7, 1, 8',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '7, 1, 13',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '43, 1, 46',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '40, 1, 46',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '40, 2, 47',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '40, 2, 50',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '40, 2, 52',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '22, 2, 33',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '0, 2, 10',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '1000000, 1000, 1000100',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '2, 1000000, 100003',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'true',
314: 1:      'question': '20, 0, 19',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '20, 0, 21',
314: 1:      'valid': true
314: 1:    },
314: 1:    {
314: 1:      'answer': 'false',
314: 1:      'question': '20, 4, 51',
314: 1:      'valid': true
314: 1:    }
314: 1:  ],
314: 1:  'info': [
314: 1:    '✅f(0, 1, 5) = true',
314: 1:    '✅f(1, 0, 1) = true',
314: 1:    '✅f(1, 0, 2) = false',
314: 1:    '✅f(3, 1, 7) = true',
314: 1:    '✅f(4, 2, 14) = true',
314: 1:    '✅f(3, 2, 14) = false',
314: 1:    '✅f(0, 2, 5) = true',
314: 1:    '✅f(3, 1, 6) = true',
314: 1:    '✅f(3, 1, 9) = false',
314: 1:    '✅f(3, 2, 9) = false',
314: 1:    '✅f(10, 10, 0) = true',
314: 1:    '✅f(0, 0, 1) = false',
314: 1:    '✅f(0, 1, 1) = false',
314: 1:    '✅f(0, 0, 2) = false',
314: 1:    '✅f(2, 0, 2) = true',
314: 1:    '✅f(0, 1, 2) = false',
314: 1:    '✅f(1, 1, 2) = false',
314: 1:    '✅f(2, 1, 3) = false',
314: 1:    '✅f(3, 1, 4) = false',
314: 1:    '✅f(2, 1, 1) = true',
314: 1:    '✅f(2, 2, 6) = true',
314: 1:    '✅f(6, 1, 11) = true',
314: 1:    '✅f(5, 0, 1) = true',
314: 1:    '✅f(3, 1, 8) = true',
314: 1:    '✅f(3, 2, 10) = true',
314: 1:    '✅f(3, 2, 8) = true',
314: 1:    '✅f(6, 0, 11) = false',
314: 1:    '✅f(1, 4, 11) = true',
314: 1:    '✅f(0, 3, 10) = true',
314: 1:    '✅f(1, 4, 12) = false',
314: 1:    '✅f(1, 1, 7) = false',
314: 1:    '✅f(2, 1, 7) = true',
314: 1:    '✅f(7, 1, 11) = true',
314: 1:    '✅f(7, 1, 8) = true',
314: 1:    '✅f(7, 1, 13) = false',
314: 1:    '✅f(43, 1, 46) = true',
314: 1:    '✅f(40, 1, 46) = false',
314: 1:    '✅f(40, 2, 47) = true',
314: 1:    '✅f(40, 2, 50) = true',
314: 1:    '✅f(40, 2, 52) = false',
314: 1:    '✅f(22, 2, 33) = false',
314: 1:    '✅f(0, 2, 10) = true',
314: 1:    '✅f(1000000, 1000, 1000100) = true',
314: 1:    '✅f(2, 1000000, 100003) = false',
314: 1:    '✅f(20, 0, 19) = true',
314: 1:    '✅f(20, 0, 21) = false',
314: 1:    '✅f(20, 4, 51) = false',
314: 1:    '❌f(20, 4, 39) = ??? != true'
314: 1:  ],
314: 1:  'level': 11,
314: 1:  'nextQuestion': '20, 4, 39',
314: 1:  'questions': [
314: 1:    '0, 1, 5',
314: 1:    '1, 0, 1',
314: 1:    '1, 0, 2',
314: 1:    '3, 1, 7',
314: 1:    '4, 2, 14',
314: 1:    '3, 2, 14',
314: 1:    '0, 2, 5',
314: 1:    '3, 1, 6',
314: 1:    '3, 1, 9',
314: 1:    '3, 2, 9',
314: 1:    '10, 10, 0',
314: 1:    '0, 0, 1',
314: 1:    '0, 1, 1',
314: 1:    '0, 0, 2',
314: 1:    '2, 0, 2',
314: 1:    '0, 1, 2',
314: 1:    '1, 1, 2',
314: 1:    '2, 1, 3',
314: 1:    '3, 1, 4',
314: 1:    '2, 1, 1',
314: 1:    '2, 2, 6',
314: 1:    '6, 1, 11',
314: 1:    '5, 0, 1',
314: 1:    '3, 1, 8',
314: 1:    '3, 2, 10',
314: 1:    '3, 2, 8',
314: 1:    '6, 0, 11',
314: 1:    '1, 4, 11',
314: 1:    '0, 3, 10',
314: 1:    '1, 4, 12',
314: 1:    '1, 1, 7',
314: 1:    '2, 1, 7',
314: 1:    '7, 1, 11',
314: 1:    '7, 1, 8',
314: 1:    '7, 1, 13',
314: 1:    '43, 1, 46',
314: 1:    '40, 1, 46',
314: 1:    '40, 2, 47',
314: 1:    '40, 2, 50',
314: 1:    '40, 2, 52',
314: 1:    '22, 2, 33',
314: 1:    '0, 2, 10',
314: 1:    '1000000, 1000, 1000100',
314: 1:    '2, 1000000, 100003',
314: 1:    '20, 0, 19',
314: 1:    '20, 0, 21',
314: 1:    '20, 4, 51',
314: 1:    '20, 4, 39'
314: 1:  ]
314: 1:}
314: 1:Scores: 21724
314: 1:Answer: message('['true', 'true', 'false', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'false', 'false', 'false', 'true', 'false', 'false', 'false', 'false', 'true', 'true', 'true', 'true', 'true', 'true', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'true', 'false', 'true', 'false', 'true', 'true', 'false', 'false', 'true', 'true', 'false', 'true', 'false', 'false', 'true']')
314: 1:Fire Event: PassTest{complexity=35, testCount=48}
314: 1:Fire Event: NextAlgorithm{complexity=35, time=0}
------------------------------------------
315: 1:BoardData {
315: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
315: 1:  'history': [
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '0, 1, 5',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '1, 0, 1',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '1, 0, 2',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '3, 1, 7',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '4, 2, 14',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '3, 2, 14',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '0, 2, 5',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '3, 1, 6',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '3, 1, 9',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '3, 2, 9',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '10, 10, 0',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '0, 0, 1',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '0, 1, 1',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '0, 0, 2',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '2, 0, 2',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '0, 1, 2',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '1, 1, 2',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '2, 1, 3',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '3, 1, 4',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '2, 1, 1',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '2, 2, 6',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '6, 1, 11',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '5, 0, 1',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '3, 1, 8',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '3, 2, 10',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '3, 2, 8',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '6, 0, 11',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '1, 4, 11',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '0, 3, 10',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '1, 4, 12',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '1, 1, 7',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '2, 1, 7',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '7, 1, 11',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '7, 1, 8',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '7, 1, 13',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '43, 1, 46',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '40, 1, 46',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '40, 2, 47',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '40, 2, 50',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '40, 2, 52',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '22, 2, 33',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '0, 2, 10',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '1000000, 1000, 1000100',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '2, 1000000, 100003',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '20, 0, 19',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '20, 0, 21',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'false',
315: 1:      'question': '20, 4, 51',
315: 1:      'valid': true
315: 1:    },
315: 1:    {
315: 1:      'answer': 'true',
315: 1:      'question': '20, 4, 39',
315: 1:      'valid': true
315: 1:    }
315: 1:  ],
315: 1:  'info': [
315: 1:    '✅f(0, 1, 5) = true',
315: 1:    '✅f(1, 0, 1) = true',
315: 1:    '✅f(1, 0, 2) = false',
315: 1:    '✅f(3, 1, 7) = true',
315: 1:    '✅f(4, 2, 14) = true',
315: 1:    '✅f(3, 2, 14) = false',
315: 1:    '✅f(0, 2, 5) = true',
315: 1:    '✅f(3, 1, 6) = true',
315: 1:    '✅f(3, 1, 9) = false',
315: 1:    '✅f(3, 2, 9) = false',
315: 1:    '✅f(10, 10, 0) = true',
315: 1:    '✅f(0, 0, 1) = false',
315: 1:    '✅f(0, 1, 1) = false',
315: 1:    '✅f(0, 0, 2) = false',
315: 1:    '✅f(2, 0, 2) = true',
315: 1:    '✅f(0, 1, 2) = false',
315: 1:    '✅f(1, 1, 2) = false',
315: 1:    '✅f(2, 1, 3) = false',
315: 1:    '✅f(3, 1, 4) = false',
315: 1:    '✅f(2, 1, 1) = true',
315: 1:    '✅f(2, 2, 6) = true',
315: 1:    '✅f(6, 1, 11) = true',
315: 1:    '✅f(5, 0, 1) = true',
315: 1:    '✅f(3, 1, 8) = true',
315: 1:    '✅f(3, 2, 10) = true',
315: 1:    '✅f(3, 2, 8) = true',
315: 1:    '✅f(6, 0, 11) = false',
315: 1:    '✅f(1, 4, 11) = true',
315: 1:    '✅f(0, 3, 10) = true',
315: 1:    '✅f(1, 4, 12) = false',
315: 1:    '✅f(1, 1, 7) = false',
315: 1:    '✅f(2, 1, 7) = true',
315: 1:    '✅f(7, 1, 11) = true',
315: 1:    '✅f(7, 1, 8) = true',
315: 1:    '✅f(7, 1, 13) = false',
315: 1:    '✅f(43, 1, 46) = true',
315: 1:    '✅f(40, 1, 46) = false',
315: 1:    '✅f(40, 2, 47) = true',
315: 1:    '✅f(40, 2, 50) = true',
315: 1:    '✅f(40, 2, 52) = false',
315: 1:    '✅f(22, 2, 33) = false',
315: 1:    '✅f(0, 2, 10) = true',
315: 1:    '✅f(1000000, 1000, 1000100) = true',
315: 1:    '✅f(2, 1000000, 100003) = false',
315: 1:    '✅f(20, 0, 19) = true',
315: 1:    '✅f(20, 0, 21) = false',
315: 1:    '✅f(20, 4, 51) = false',
315: 1:    '✅f(20, 4, 39) = true'
315: 1:  ],
315: 1:  'level': 11,
315: 1:  'questions': []
315: 1:}
315: 1:Scores: 26455
315: 1:Answer: message('StartNextLevel')
315: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
316: 1:BoardData {
316: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
316: 1:  'expectedAnswer': '1',
316: 1:  'history': [],
316: 1:  'info': ['❌f(1) = ??? != 1'],
316: 1:  'level': 12,
316: 1:  'nextQuestion': '1',
316: 1:  'questions': ['1']
316: 1:}
316: 1:Scores: 26455
316: 1:Answer: message('['1']')
316: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
317: 1:BoardData {
317: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
317: 1:  'expectedAnswer': '2',
317: 1:  'history': [{
317: 1:    'answer': '1',
317: 1:    'question': '1',
317: 1:    'valid': true
317: 1:  }],
317: 1:  'info': [
317: 1:    '✅f(1) = 1',
317: 1:    '❌f(2) = ??? != 2'
317: 1:  ],
317: 1:  'level': 12,
317: 1:  'nextQuestion': '2',
317: 1:  'questions': [
317: 1:    '1',
317: 1:    '2'
317: 1:  ]
317: 1:}
317: 1:Scores: 26471
317: 1:Answer: message('['1', '2']')
317: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
318: 1:BoardData {
318: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
318: 1:  'expectedAnswer': '6',
318: 1:  'history': [
318: 1:    {
318: 1:      'answer': '1',
318: 1:      'question': '1',
318: 1:      'valid': true
318: 1:    },
318: 1:    {
318: 1:      'answer': '2',
318: 1:      'question': '2',
318: 1:      'valid': true
318: 1:    }
318: 1:  ],
318: 1:  'info': [
318: 1:    '✅f(1) = 1',
318: 1:    '✅f(2) = 2',
318: 1:    '❌f(3) = ??? != 6'
318: 1:  ],
318: 1:  'level': 12,
318: 1:  'nextQuestion': '3',
318: 1:  'questions': [
318: 1:    '1',
318: 1:    '2',
318: 1:    '3'
318: 1:  ]
318: 1:}
318: 1:Scores: 26487
318: 1:Answer: message('['1', '2', '6']')
318: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
319: 1:BoardData {
319: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
319: 1:  'expectedAnswer': '24',
319: 1:  'history': [
319: 1:    {
319: 1:      'answer': '1',
319: 1:      'question': '1',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '2',
319: 1:      'question': '2',
319: 1:      'valid': true
319: 1:    },
319: 1:    {
319: 1:      'answer': '6',
319: 1:      'question': '3',
319: 1:      'valid': true
319: 1:    }
319: 1:  ],
319: 1:  'info': [
319: 1:    '✅f(1) = 1',
319: 1:    '✅f(2) = 2',
319: 1:    '✅f(3) = 6',
319: 1:    '❌f(4) = ??? != 24'
319: 1:  ],
319: 1:  'level': 12,
319: 1:  'nextQuestion': '4',
319: 1:  'questions': [
319: 1:    '1',
319: 1:    '2',
319: 1:    '3',
319: 1:    '4'
319: 1:  ]
319: 1:}
319: 1:Scores: 26503
319: 1:Answer: message('['1', '2', '6', '24']')
319: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
320: 1:BoardData {
320: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
320: 1:  'expectedAnswer': '120',
320: 1:  'history': [
320: 1:    {
320: 1:      'answer': '1',
320: 1:      'question': '1',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '2',
320: 1:      'question': '2',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '6',
320: 1:      'question': '3',
320: 1:      'valid': true
320: 1:    },
320: 1:    {
320: 1:      'answer': '24',
320: 1:      'question': '4',
320: 1:      'valid': true
320: 1:    }
320: 1:  ],
320: 1:  'info': [
320: 1:    '✅f(1) = 1',
320: 1:    '✅f(2) = 2',
320: 1:    '✅f(3) = 6',
320: 1:    '✅f(4) = 24',
320: 1:    '❌f(5) = ??? != 120'
320: 1:  ],
320: 1:  'level': 12,
320: 1:  'nextQuestion': '5',
320: 1:  'questions': [
320: 1:    '1',
320: 1:    '2',
320: 1:    '3',
320: 1:    '4',
320: 1:    '5'
320: 1:  ]
320: 1:}
320: 1:Scores: 26519
320: 1:Answer: message('['1', '2', '6', '24', '120']')
320: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
321: 1:BoardData {
321: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
321: 1:  'expectedAnswer': '720',
321: 1:  'history': [
321: 1:    {
321: 1:      'answer': '1',
321: 1:      'question': '1',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '2',
321: 1:      'question': '2',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '6',
321: 1:      'question': '3',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '24',
321: 1:      'question': '4',
321: 1:      'valid': true
321: 1:    },
321: 1:    {
321: 1:      'answer': '120',
321: 1:      'question': '5',
321: 1:      'valid': true
321: 1:    }
321: 1:  ],
321: 1:  'info': [
321: 1:    '✅f(1) = 1',
321: 1:    '✅f(2) = 2',
321: 1:    '✅f(3) = 6',
321: 1:    '✅f(4) = 24',
321: 1:    '✅f(5) = 120',
321: 1:    '❌f(6) = ??? != 720'
321: 1:  ],
321: 1:  'level': 12,
321: 1:  'nextQuestion': '6',
321: 1:  'questions': [
321: 1:    '1',
321: 1:    '2',
321: 1:    '3',
321: 1:    '4',
321: 1:    '5',
321: 1:    '6'
321: 1:  ]
321: 1:}
321: 1:Scores: 26535
321: 1:Answer: message('['1', '2', '6', '24', '120', '720']')
321: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
322: 1:BoardData {
322: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
322: 1:  'expectedAnswer': '5040',
322: 1:  'history': [
322: 1:    {
322: 1:      'answer': '1',
322: 1:      'question': '1',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '2',
322: 1:      'question': '2',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '6',
322: 1:      'question': '3',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '24',
322: 1:      'question': '4',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '120',
322: 1:      'question': '5',
322: 1:      'valid': true
322: 1:    },
322: 1:    {
322: 1:      'answer': '720',
322: 1:      'question': '6',
322: 1:      'valid': true
322: 1:    }
322: 1:  ],
322: 1:  'info': [
322: 1:    '✅f(1) = 1',
322: 1:    '✅f(2) = 2',
322: 1:    '✅f(3) = 6',
322: 1:    '✅f(4) = 24',
322: 1:    '✅f(5) = 120',
322: 1:    '✅f(6) = 720',
322: 1:    '❌f(7) = ??? != 5040'
322: 1:  ],
322: 1:  'level': 12,
322: 1:  'nextQuestion': '7',
322: 1:  'questions': [
322: 1:    '1',
322: 1:    '2',
322: 1:    '3',
322: 1:    '4',
322: 1:    '5',
322: 1:    '6',
322: 1:    '7'
322: 1:  ]
322: 1:}
322: 1:Scores: 26551
322: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040']')
322: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
323: 1:BoardData {
323: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
323: 1:  'expectedAnswer': '40320',
323: 1:  'history': [
323: 1:    {
323: 1:      'answer': '1',
323: 1:      'question': '1',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '2',
323: 1:      'question': '2',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '6',
323: 1:      'question': '3',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '24',
323: 1:      'question': '4',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '120',
323: 1:      'question': '5',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '720',
323: 1:      'question': '6',
323: 1:      'valid': true
323: 1:    },
323: 1:    {
323: 1:      'answer': '5040',
323: 1:      'question': '7',
323: 1:      'valid': true
323: 1:    }
323: 1:  ],
323: 1:  'info': [
323: 1:    '✅f(1) = 1',
323: 1:    '✅f(2) = 2',
323: 1:    '✅f(3) = 6',
323: 1:    '✅f(4) = 24',
323: 1:    '✅f(5) = 120',
323: 1:    '✅f(6) = 720',
323: 1:    '✅f(7) = 5040',
323: 1:    '❌f(8) = ??? != 40320'
323: 1:  ],
323: 1:  'level': 12,
323: 1:  'nextQuestion': '8',
323: 1:  'questions': [
323: 1:    '1',
323: 1:    '2',
323: 1:    '3',
323: 1:    '4',
323: 1:    '5',
323: 1:    '6',
323: 1:    '7',
323: 1:    '8'
323: 1:  ]
323: 1:}
323: 1:Scores: 26567
323: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320']')
323: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
324: 1:BoardData {
324: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
324: 1:  'expectedAnswer': '362880',
324: 1:  'history': [
324: 1:    {
324: 1:      'answer': '1',
324: 1:      'question': '1',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '2',
324: 1:      'question': '2',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '6',
324: 1:      'question': '3',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '24',
324: 1:      'question': '4',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '120',
324: 1:      'question': '5',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '720',
324: 1:      'question': '6',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '5040',
324: 1:      'question': '7',
324: 1:      'valid': true
324: 1:    },
324: 1:    {
324: 1:      'answer': '40320',
324: 1:      'question': '8',
324: 1:      'valid': true
324: 1:    }
324: 1:  ],
324: 1:  'info': [
324: 1:    '✅f(1) = 1',
324: 1:    '✅f(2) = 2',
324: 1:    '✅f(3) = 6',
324: 1:    '✅f(4) = 24',
324: 1:    '✅f(5) = 120',
324: 1:    '✅f(6) = 720',
324: 1:    '✅f(7) = 5040',
324: 1:    '✅f(8) = 40320',
324: 1:    '❌f(9) = ??? != 362880'
324: 1:  ],
324: 1:  'level': 12,
324: 1:  'nextQuestion': '9',
324: 1:  'questions': [
324: 1:    '1',
324: 1:    '2',
324: 1:    '3',
324: 1:    '4',
324: 1:    '5',
324: 1:    '6',
324: 1:    '7',
324: 1:    '8',
324: 1:    '9'
324: 1:  ]
324: 1:}
324: 1:Scores: 26583
324: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880']')
324: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
325: 1:BoardData {
325: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
325: 1:  'expectedAnswer': '3628800',
325: 1:  'history': [
325: 1:    {
325: 1:      'answer': '1',
325: 1:      'question': '1',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '2',
325: 1:      'question': '2',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '6',
325: 1:      'question': '3',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '24',
325: 1:      'question': '4',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '120',
325: 1:      'question': '5',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '720',
325: 1:      'question': '6',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '5040',
325: 1:      'question': '7',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '40320',
325: 1:      'question': '8',
325: 1:      'valid': true
325: 1:    },
325: 1:    {
325: 1:      'answer': '362880',
325: 1:      'question': '9',
325: 1:      'valid': true
325: 1:    }
325: 1:  ],
325: 1:  'info': [
325: 1:    '✅f(1) = 1',
325: 1:    '✅f(2) = 2',
325: 1:    '✅f(3) = 6',
325: 1:    '✅f(4) = 24',
325: 1:    '✅f(5) = 120',
325: 1:    '✅f(6) = 720',
325: 1:    '✅f(7) = 5040',
325: 1:    '✅f(8) = 40320',
325: 1:    '✅f(9) = 362880',
325: 1:    '❌f(10) = ??? != 3628800'
325: 1:  ],
325: 1:  'level': 12,
325: 1:  'nextQuestion': '10',
325: 1:  'questions': [
325: 1:    '1',
325: 1:    '2',
325: 1:    '3',
325: 1:    '4',
325: 1:    '5',
325: 1:    '6',
325: 1:    '7',
325: 1:    '8',
325: 1:    '9',
325: 1:    '10'
325: 1:  ]
325: 1:}
325: 1:Scores: 26599
325: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800']')
325: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
326: 1:BoardData {
326: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
326: 1:  'expectedAnswer': '39916800',
326: 1:  'history': [
326: 1:    {
326: 1:      'answer': '1',
326: 1:      'question': '1',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '2',
326: 1:      'question': '2',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '6',
326: 1:      'question': '3',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '24',
326: 1:      'question': '4',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '120',
326: 1:      'question': '5',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '720',
326: 1:      'question': '6',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '5040',
326: 1:      'question': '7',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '40320',
326: 1:      'question': '8',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '362880',
326: 1:      'question': '9',
326: 1:      'valid': true
326: 1:    },
326: 1:    {
326: 1:      'answer': '3628800',
326: 1:      'question': '10',
326: 1:      'valid': true
326: 1:    }
326: 1:  ],
326: 1:  'info': [
326: 1:    '✅f(1) = 1',
326: 1:    '✅f(2) = 2',
326: 1:    '✅f(3) = 6',
326: 1:    '✅f(4) = 24',
326: 1:    '✅f(5) = 120',
326: 1:    '✅f(6) = 720',
326: 1:    '✅f(7) = 5040',
326: 1:    '✅f(8) = 40320',
326: 1:    '✅f(9) = 362880',
326: 1:    '✅f(10) = 3628800',
326: 1:    '❌f(11) = ??? != 39916800'
326: 1:  ],
326: 1:  'level': 12,
326: 1:  'nextQuestion': '11',
326: 1:  'questions': [
326: 1:    '1',
326: 1:    '2',
326: 1:    '3',
326: 1:    '4',
326: 1:    '5',
326: 1:    '6',
326: 1:    '7',
326: 1:    '8',
326: 1:    '9',
326: 1:    '10',
326: 1:    '11'
326: 1:  ]
326: 1:}
326: 1:Scores: 26615
326: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800']')
326: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
327: 1:BoardData {
327: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
327: 1:  'expectedAnswer': '479001600',
327: 1:  'history': [
327: 1:    {
327: 1:      'answer': '1',
327: 1:      'question': '1',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '2',
327: 1:      'question': '2',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '6',
327: 1:      'question': '3',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '24',
327: 1:      'question': '4',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '120',
327: 1:      'question': '5',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '720',
327: 1:      'question': '6',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '5040',
327: 1:      'question': '7',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '40320',
327: 1:      'question': '8',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '362880',
327: 1:      'question': '9',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '3628800',
327: 1:      'question': '10',
327: 1:      'valid': true
327: 1:    },
327: 1:    {
327: 1:      'answer': '39916800',
327: 1:      'question': '11',
327: 1:      'valid': true
327: 1:    }
327: 1:  ],
327: 1:  'info': [
327: 1:    '✅f(1) = 1',
327: 1:    '✅f(2) = 2',
327: 1:    '✅f(3) = 6',
327: 1:    '✅f(4) = 24',
327: 1:    '✅f(5) = 120',
327: 1:    '✅f(6) = 720',
327: 1:    '✅f(7) = 5040',
327: 1:    '✅f(8) = 40320',
327: 1:    '✅f(9) = 362880',
327: 1:    '✅f(10) = 3628800',
327: 1:    '✅f(11) = 39916800',
327: 1:    '❌f(12) = ??? != 479001600'
327: 1:  ],
327: 1:  'level': 12,
327: 1:  'nextQuestion': '12',
327: 1:  'questions': [
327: 1:    '1',
327: 1:    '2',
327: 1:    '3',
327: 1:    '4',
327: 1:    '5',
327: 1:    '6',
327: 1:    '7',
327: 1:    '8',
327: 1:    '9',
327: 1:    '10',
327: 1:    '11',
327: 1:    '12'
327: 1:  ]
327: 1:}
327: 1:Scores: 26631
327: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600']')
327: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
328: 1:BoardData {
328: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
328: 1:  'expectedAnswer': '6227020800',
328: 1:  'history': [
328: 1:    {
328: 1:      'answer': '1',
328: 1:      'question': '1',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '2',
328: 1:      'question': '2',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '6',
328: 1:      'question': '3',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '24',
328: 1:      'question': '4',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '120',
328: 1:      'question': '5',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '720',
328: 1:      'question': '6',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '5040',
328: 1:      'question': '7',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '40320',
328: 1:      'question': '8',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '362880',
328: 1:      'question': '9',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '3628800',
328: 1:      'question': '10',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '39916800',
328: 1:      'question': '11',
328: 1:      'valid': true
328: 1:    },
328: 1:    {
328: 1:      'answer': '479001600',
328: 1:      'question': '12',
328: 1:      'valid': true
328: 1:    }
328: 1:  ],
328: 1:  'info': [
328: 1:    '✅f(1) = 1',
328: 1:    '✅f(2) = 2',
328: 1:    '✅f(3) = 6',
328: 1:    '✅f(4) = 24',
328: 1:    '✅f(5) = 120',
328: 1:    '✅f(6) = 720',
328: 1:    '✅f(7) = 5040',
328: 1:    '✅f(8) = 40320',
328: 1:    '✅f(9) = 362880',
328: 1:    '✅f(10) = 3628800',
328: 1:    '✅f(11) = 39916800',
328: 1:    '✅f(12) = 479001600',
328: 1:    '❌f(13) = ??? != 6227020800'
328: 1:  ],
328: 1:  'level': 12,
328: 1:  'nextQuestion': '13',
328: 1:  'questions': [
328: 1:    '1',
328: 1:    '2',
328: 1:    '3',
328: 1:    '4',
328: 1:    '5',
328: 1:    '6',
328: 1:    '7',
328: 1:    '8',
328: 1:    '9',
328: 1:    '10',
328: 1:    '11',
328: 1:    '12',
328: 1:    '13'
328: 1:  ]
328: 1:}
328: 1:Scores: 26647
328: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800']')
328: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
329: 1:BoardData {
329: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
329: 1:  'expectedAnswer': '87178291200',
329: 1:  'history': [
329: 1:    {
329: 1:      'answer': '1',
329: 1:      'question': '1',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '2',
329: 1:      'question': '2',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '6',
329: 1:      'question': '3',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '24',
329: 1:      'question': '4',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '120',
329: 1:      'question': '5',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '720',
329: 1:      'question': '6',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '5040',
329: 1:      'question': '7',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '40320',
329: 1:      'question': '8',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '362880',
329: 1:      'question': '9',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '3628800',
329: 1:      'question': '10',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '39916800',
329: 1:      'question': '11',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '479001600',
329: 1:      'question': '12',
329: 1:      'valid': true
329: 1:    },
329: 1:    {
329: 1:      'answer': '6227020800',
329: 1:      'question': '13',
329: 1:      'valid': true
329: 1:    }
329: 1:  ],
329: 1:  'info': [
329: 1:    '✅f(1) = 1',
329: 1:    '✅f(2) = 2',
329: 1:    '✅f(3) = 6',
329: 1:    '✅f(4) = 24',
329: 1:    '✅f(5) = 120',
329: 1:    '✅f(6) = 720',
329: 1:    '✅f(7) = 5040',
329: 1:    '✅f(8) = 40320',
329: 1:    '✅f(9) = 362880',
329: 1:    '✅f(10) = 3628800',
329: 1:    '✅f(11) = 39916800',
329: 1:    '✅f(12) = 479001600',
329: 1:    '✅f(13) = 6227020800',
329: 1:    '❌f(14) = ??? != 87178291200'
329: 1:  ],
329: 1:  'level': 12,
329: 1:  'nextQuestion': '14',
329: 1:  'questions': [
329: 1:    '1',
329: 1:    '2',
329: 1:    '3',
329: 1:    '4',
329: 1:    '5',
329: 1:    '6',
329: 1:    '7',
329: 1:    '8',
329: 1:    '9',
329: 1:    '10',
329: 1:    '11',
329: 1:    '12',
329: 1:    '13',
329: 1:    '14'
329: 1:  ]
329: 1:}
329: 1:Scores: 26663
329: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200']')
329: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
330: 1:BoardData {
330: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
330: 1:  'expectedAnswer': '1307674368000',
330: 1:  'history': [
330: 1:    {
330: 1:      'answer': '1',
330: 1:      'question': '1',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '2',
330: 1:      'question': '2',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '6',
330: 1:      'question': '3',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '24',
330: 1:      'question': '4',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '120',
330: 1:      'question': '5',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '720',
330: 1:      'question': '6',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '5040',
330: 1:      'question': '7',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '40320',
330: 1:      'question': '8',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '362880',
330: 1:      'question': '9',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '3628800',
330: 1:      'question': '10',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '39916800',
330: 1:      'question': '11',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '479001600',
330: 1:      'question': '12',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '6227020800',
330: 1:      'question': '13',
330: 1:      'valid': true
330: 1:    },
330: 1:    {
330: 1:      'answer': '87178291200',
330: 1:      'question': '14',
330: 1:      'valid': true
330: 1:    }
330: 1:  ],
330: 1:  'info': [
330: 1:    '✅f(1) = 1',
330: 1:    '✅f(2) = 2',
330: 1:    '✅f(3) = 6',
330: 1:    '✅f(4) = 24',
330: 1:    '✅f(5) = 120',
330: 1:    '✅f(6) = 720',
330: 1:    '✅f(7) = 5040',
330: 1:    '✅f(8) = 40320',
330: 1:    '✅f(9) = 362880',
330: 1:    '✅f(10) = 3628800',
330: 1:    '✅f(11) = 39916800',
330: 1:    '✅f(12) = 479001600',
330: 1:    '✅f(13) = 6227020800',
330: 1:    '✅f(14) = 87178291200',
330: 1:    '❌f(15) = ??? != 1307674368000'
330: 1:  ],
330: 1:  'level': 12,
330: 1:  'nextQuestion': '15',
330: 1:  'questions': [
330: 1:    '1',
330: 1:    '2',
330: 1:    '3',
330: 1:    '4',
330: 1:    '5',
330: 1:    '6',
330: 1:    '7',
330: 1:    '8',
330: 1:    '9',
330: 1:    '10',
330: 1:    '11',
330: 1:    '12',
330: 1:    '13',
330: 1:    '14',
330: 1:    '15'
330: 1:  ]
330: 1:}
330: 1:Scores: 26679
330: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000']')
330: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
331: 1:BoardData {
331: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
331: 1:  'expectedAnswer': '20922789888000',
331: 1:  'history': [
331: 1:    {
331: 1:      'answer': '1',
331: 1:      'question': '1',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '2',
331: 1:      'question': '2',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '6',
331: 1:      'question': '3',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '24',
331: 1:      'question': '4',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '120',
331: 1:      'question': '5',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '720',
331: 1:      'question': '6',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '5040',
331: 1:      'question': '7',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '40320',
331: 1:      'question': '8',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '362880',
331: 1:      'question': '9',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '3628800',
331: 1:      'question': '10',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '39916800',
331: 1:      'question': '11',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '479001600',
331: 1:      'question': '12',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '6227020800',
331: 1:      'question': '13',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '87178291200',
331: 1:      'question': '14',
331: 1:      'valid': true
331: 1:    },
331: 1:    {
331: 1:      'answer': '1307674368000',
331: 1:      'question': '15',
331: 1:      'valid': true
331: 1:    }
331: 1:  ],
331: 1:  'info': [
331: 1:    '✅f(1) = 1',
331: 1:    '✅f(2) = 2',
331: 1:    '✅f(3) = 6',
331: 1:    '✅f(4) = 24',
331: 1:    '✅f(5) = 120',
331: 1:    '✅f(6) = 720',
331: 1:    '✅f(7) = 5040',
331: 1:    '✅f(8) = 40320',
331: 1:    '✅f(9) = 362880',
331: 1:    '✅f(10) = 3628800',
331: 1:    '✅f(11) = 39916800',
331: 1:    '✅f(12) = 479001600',
331: 1:    '✅f(13) = 6227020800',
331: 1:    '✅f(14) = 87178291200',
331: 1:    '✅f(15) = 1307674368000',
331: 1:    '❌f(16) = ??? != 20922789888000'
331: 1:  ],
331: 1:  'level': 12,
331: 1:  'nextQuestion': '16',
331: 1:  'questions': [
331: 1:    '1',
331: 1:    '2',
331: 1:    '3',
331: 1:    '4',
331: 1:    '5',
331: 1:    '6',
331: 1:    '7',
331: 1:    '8',
331: 1:    '9',
331: 1:    '10',
331: 1:    '11',
331: 1:    '12',
331: 1:    '13',
331: 1:    '14',
331: 1:    '15',
331: 1:    '16'
331: 1:  ]
331: 1:}
331: 1:Scores: 26695
331: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000']')
331: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
332: 1:BoardData {
332: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
332: 1:  'expectedAnswer': '355687428096000',
332: 1:  'history': [
332: 1:    {
332: 1:      'answer': '1',
332: 1:      'question': '1',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '2',
332: 1:      'question': '2',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '6',
332: 1:      'question': '3',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '24',
332: 1:      'question': '4',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '120',
332: 1:      'question': '5',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '720',
332: 1:      'question': '6',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '5040',
332: 1:      'question': '7',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '40320',
332: 1:      'question': '8',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '362880',
332: 1:      'question': '9',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '3628800',
332: 1:      'question': '10',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '39916800',
332: 1:      'question': '11',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '479001600',
332: 1:      'question': '12',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '6227020800',
332: 1:      'question': '13',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '87178291200',
332: 1:      'question': '14',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '1307674368000',
332: 1:      'question': '15',
332: 1:      'valid': true
332: 1:    },
332: 1:    {
332: 1:      'answer': '20922789888000',
332: 1:      'question': '16',
332: 1:      'valid': true
332: 1:    }
332: 1:  ],
332: 1:  'info': [
332: 1:    '✅f(1) = 1',
332: 1:    '✅f(2) = 2',
332: 1:    '✅f(3) = 6',
332: 1:    '✅f(4) = 24',
332: 1:    '✅f(5) = 120',
332: 1:    '✅f(6) = 720',
332: 1:    '✅f(7) = 5040',
332: 1:    '✅f(8) = 40320',
332: 1:    '✅f(9) = 362880',
332: 1:    '✅f(10) = 3628800',
332: 1:    '✅f(11) = 39916800',
332: 1:    '✅f(12) = 479001600',
332: 1:    '✅f(13) = 6227020800',
332: 1:    '✅f(14) = 87178291200',
332: 1:    '✅f(15) = 1307674368000',
332: 1:    '✅f(16) = 20922789888000',
332: 1:    '❌f(17) = ??? != 355687428096000'
332: 1:  ],
332: 1:  'level': 12,
332: 1:  'nextQuestion': '17',
332: 1:  'questions': [
332: 1:    '1',
332: 1:    '2',
332: 1:    '3',
332: 1:    '4',
332: 1:    '5',
332: 1:    '6',
332: 1:    '7',
332: 1:    '8',
332: 1:    '9',
332: 1:    '10',
332: 1:    '11',
332: 1:    '12',
332: 1:    '13',
332: 1:    '14',
332: 1:    '15',
332: 1:    '16',
332: 1:    '17'
332: 1:  ]
332: 1:}
332: 1:Scores: 26711
332: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000']')
332: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
333: 1:BoardData {
333: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
333: 1:  'expectedAnswer': '6402373705728000',
333: 1:  'history': [
333: 1:    {
333: 1:      'answer': '1',
333: 1:      'question': '1',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '2',
333: 1:      'question': '2',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '6',
333: 1:      'question': '3',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '24',
333: 1:      'question': '4',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '120',
333: 1:      'question': '5',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '720',
333: 1:      'question': '6',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '5040',
333: 1:      'question': '7',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '40320',
333: 1:      'question': '8',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '362880',
333: 1:      'question': '9',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '3628800',
333: 1:      'question': '10',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '39916800',
333: 1:      'question': '11',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '479001600',
333: 1:      'question': '12',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '6227020800',
333: 1:      'question': '13',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '87178291200',
333: 1:      'question': '14',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '1307674368000',
333: 1:      'question': '15',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '20922789888000',
333: 1:      'question': '16',
333: 1:      'valid': true
333: 1:    },
333: 1:    {
333: 1:      'answer': '355687428096000',
333: 1:      'question': '17',
333: 1:      'valid': true
333: 1:    }
333: 1:  ],
333: 1:  'info': [
333: 1:    '✅f(1) = 1',
333: 1:    '✅f(2) = 2',
333: 1:    '✅f(3) = 6',
333: 1:    '✅f(4) = 24',
333: 1:    '✅f(5) = 120',
333: 1:    '✅f(6) = 720',
333: 1:    '✅f(7) = 5040',
333: 1:    '✅f(8) = 40320',
333: 1:    '✅f(9) = 362880',
333: 1:    '✅f(10) = 3628800',
333: 1:    '✅f(11) = 39916800',
333: 1:    '✅f(12) = 479001600',
333: 1:    '✅f(13) = 6227020800',
333: 1:    '✅f(14) = 87178291200',
333: 1:    '✅f(15) = 1307674368000',
333: 1:    '✅f(16) = 20922789888000',
333: 1:    '✅f(17) = 355687428096000',
333: 1:    '❌f(18) = ??? != 6402373705728000'
333: 1:  ],
333: 1:  'level': 12,
333: 1:  'nextQuestion': '18',
333: 1:  'questions': [
333: 1:    '1',
333: 1:    '2',
333: 1:    '3',
333: 1:    '4',
333: 1:    '5',
333: 1:    '6',
333: 1:    '7',
333: 1:    '8',
333: 1:    '9',
333: 1:    '10',
333: 1:    '11',
333: 1:    '12',
333: 1:    '13',
333: 1:    '14',
333: 1:    '15',
333: 1:    '16',
333: 1:    '17',
333: 1:    '18'
333: 1:  ]
333: 1:}
333: 1:Scores: 26727
333: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000']')
333: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
334: 1:BoardData {
334: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
334: 1:  'expectedAnswer': '121645100408832000',
334: 1:  'history': [
334: 1:    {
334: 1:      'answer': '1',
334: 1:      'question': '1',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '2',
334: 1:      'question': '2',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '6',
334: 1:      'question': '3',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '24',
334: 1:      'question': '4',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '120',
334: 1:      'question': '5',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '720',
334: 1:      'question': '6',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '5040',
334: 1:      'question': '7',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '40320',
334: 1:      'question': '8',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '362880',
334: 1:      'question': '9',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '3628800',
334: 1:      'question': '10',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '39916800',
334: 1:      'question': '11',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '479001600',
334: 1:      'question': '12',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '6227020800',
334: 1:      'question': '13',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '87178291200',
334: 1:      'question': '14',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '1307674368000',
334: 1:      'question': '15',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '20922789888000',
334: 1:      'question': '16',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '355687428096000',
334: 1:      'question': '17',
334: 1:      'valid': true
334: 1:    },
334: 1:    {
334: 1:      'answer': '6402373705728000',
334: 1:      'question': '18',
334: 1:      'valid': true
334: 1:    }
334: 1:  ],
334: 1:  'info': [
334: 1:    '✅f(1) = 1',
334: 1:    '✅f(2) = 2',
334: 1:    '✅f(3) = 6',
334: 1:    '✅f(4) = 24',
334: 1:    '✅f(5) = 120',
334: 1:    '✅f(6) = 720',
334: 1:    '✅f(7) = 5040',
334: 1:    '✅f(8) = 40320',
334: 1:    '✅f(9) = 362880',
334: 1:    '✅f(10) = 3628800',
334: 1:    '✅f(11) = 39916800',
334: 1:    '✅f(12) = 479001600',
334: 1:    '✅f(13) = 6227020800',
334: 1:    '✅f(14) = 87178291200',
334: 1:    '✅f(15) = 1307674368000',
334: 1:    '✅f(16) = 20922789888000',
334: 1:    '✅f(17) = 355687428096000',
334: 1:    '✅f(18) = 6402373705728000',
334: 1:    '❌f(19) = ??? != 121645100408832000'
334: 1:  ],
334: 1:  'level': 12,
334: 1:  'nextQuestion': '19',
334: 1:  'questions': [
334: 1:    '1',
334: 1:    '2',
334: 1:    '3',
334: 1:    '4',
334: 1:    '5',
334: 1:    '6',
334: 1:    '7',
334: 1:    '8',
334: 1:    '9',
334: 1:    '10',
334: 1:    '11',
334: 1:    '12',
334: 1:    '13',
334: 1:    '14',
334: 1:    '15',
334: 1:    '16',
334: 1:    '17',
334: 1:    '18',
334: 1:    '19'
334: 1:  ]
334: 1:}
334: 1:Scores: 26743
334: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000']')
334: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
335: 1:BoardData {
335: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
335: 1:  'expectedAnswer': '2432902008176640000',
335: 1:  'history': [
335: 1:    {
335: 1:      'answer': '1',
335: 1:      'question': '1',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '2',
335: 1:      'question': '2',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '6',
335: 1:      'question': '3',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '24',
335: 1:      'question': '4',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '120',
335: 1:      'question': '5',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '720',
335: 1:      'question': '6',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '5040',
335: 1:      'question': '7',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '40320',
335: 1:      'question': '8',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '362880',
335: 1:      'question': '9',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '3628800',
335: 1:      'question': '10',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '39916800',
335: 1:      'question': '11',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '479001600',
335: 1:      'question': '12',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '6227020800',
335: 1:      'question': '13',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '87178291200',
335: 1:      'question': '14',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '1307674368000',
335: 1:      'question': '15',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '20922789888000',
335: 1:      'question': '16',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '355687428096000',
335: 1:      'question': '17',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '6402373705728000',
335: 1:      'question': '18',
335: 1:      'valid': true
335: 1:    },
335: 1:    {
335: 1:      'answer': '121645100408832000',
335: 1:      'question': '19',
335: 1:      'valid': true
335: 1:    }
335: 1:  ],
335: 1:  'info': [
335: 1:    '✅f(1) = 1',
335: 1:    '✅f(2) = 2',
335: 1:    '✅f(3) = 6',
335: 1:    '✅f(4) = 24',
335: 1:    '✅f(5) = 120',
335: 1:    '✅f(6) = 720',
335: 1:    '✅f(7) = 5040',
335: 1:    '✅f(8) = 40320',
335: 1:    '✅f(9) = 362880',
335: 1:    '✅f(10) = 3628800',
335: 1:    '✅f(11) = 39916800',
335: 1:    '✅f(12) = 479001600',
335: 1:    '✅f(13) = 6227020800',
335: 1:    '✅f(14) = 87178291200',
335: 1:    '✅f(15) = 1307674368000',
335: 1:    '✅f(16) = 20922789888000',
335: 1:    '✅f(17) = 355687428096000',
335: 1:    '✅f(18) = 6402373705728000',
335: 1:    '✅f(19) = 121645100408832000',
335: 1:    '❌f(20) = ??? != 2432902008176640000'
335: 1:  ],
335: 1:  'level': 12,
335: 1:  'nextQuestion': '20',
335: 1:  'questions': [
335: 1:    '1',
335: 1:    '2',
335: 1:    '3',
335: 1:    '4',
335: 1:    '5',
335: 1:    '6',
335: 1:    '7',
335: 1:    '8',
335: 1:    '9',
335: 1:    '10',
335: 1:    '11',
335: 1:    '12',
335: 1:    '13',
335: 1:    '14',
335: 1:    '15',
335: 1:    '16',
335: 1:    '17',
335: 1:    '18',
335: 1:    '19',
335: 1:    '20'
335: 1:  ]
335: 1:}
335: 1:Scores: 26759
335: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000']')
335: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
336: 1:BoardData {
336: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
336: 1:  'expectedAnswer': '51090942171709440000',
336: 1:  'history': [
336: 1:    {
336: 1:      'answer': '1',
336: 1:      'question': '1',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '2',
336: 1:      'question': '2',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '6',
336: 1:      'question': '3',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '24',
336: 1:      'question': '4',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '120',
336: 1:      'question': '5',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '720',
336: 1:      'question': '6',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '5040',
336: 1:      'question': '7',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '40320',
336: 1:      'question': '8',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '362880',
336: 1:      'question': '9',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '3628800',
336: 1:      'question': '10',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '39916800',
336: 1:      'question': '11',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '479001600',
336: 1:      'question': '12',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '6227020800',
336: 1:      'question': '13',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '87178291200',
336: 1:      'question': '14',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '1307674368000',
336: 1:      'question': '15',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '20922789888000',
336: 1:      'question': '16',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '355687428096000',
336: 1:      'question': '17',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '6402373705728000',
336: 1:      'question': '18',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '121645100408832000',
336: 1:      'question': '19',
336: 1:      'valid': true
336: 1:    },
336: 1:    {
336: 1:      'answer': '2432902008176640000',
336: 1:      'question': '20',
336: 1:      'valid': true
336: 1:    }
336: 1:  ],
336: 1:  'info': [
336: 1:    '✅f(1) = 1',
336: 1:    '✅f(2) = 2',
336: 1:    '✅f(3) = 6',
336: 1:    '✅f(4) = 24',
336: 1:    '✅f(5) = 120',
336: 1:    '✅f(6) = 720',
336: 1:    '✅f(7) = 5040',
336: 1:    '✅f(8) = 40320',
336: 1:    '✅f(9) = 362880',
336: 1:    '✅f(10) = 3628800',
336: 1:    '✅f(11) = 39916800',
336: 1:    '✅f(12) = 479001600',
336: 1:    '✅f(13) = 6227020800',
336: 1:    '✅f(14) = 87178291200',
336: 1:    '✅f(15) = 1307674368000',
336: 1:    '✅f(16) = 20922789888000',
336: 1:    '✅f(17) = 355687428096000',
336: 1:    '✅f(18) = 6402373705728000',
336: 1:    '✅f(19) = 121645100408832000',
336: 1:    '✅f(20) = 2432902008176640000',
336: 1:    '❌f(21) = ??? != 51090942171709440000'
336: 1:  ],
336: 1:  'level': 12,
336: 1:  'nextQuestion': '21',
336: 1:  'questions': [
336: 1:    '1',
336: 1:    '2',
336: 1:    '3',
336: 1:    '4',
336: 1:    '5',
336: 1:    '6',
336: 1:    '7',
336: 1:    '8',
336: 1:    '9',
336: 1:    '10',
336: 1:    '11',
336: 1:    '12',
336: 1:    '13',
336: 1:    '14',
336: 1:    '15',
336: 1:    '16',
336: 1:    '17',
336: 1:    '18',
336: 1:    '19',
336: 1:    '20',
336: 1:    '21'
336: 1:  ]
336: 1:}
336: 1:Scores: 26775
336: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000']')
336: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
337: 1:BoardData {
337: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
337: 1:  'expectedAnswer': '1124000727777607680000',
337: 1:  'history': [
337: 1:    {
337: 1:      'answer': '1',
337: 1:      'question': '1',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '2',
337: 1:      'question': '2',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '6',
337: 1:      'question': '3',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '24',
337: 1:      'question': '4',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '120',
337: 1:      'question': '5',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '720',
337: 1:      'question': '6',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '5040',
337: 1:      'question': '7',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '40320',
337: 1:      'question': '8',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '362880',
337: 1:      'question': '9',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '3628800',
337: 1:      'question': '10',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '39916800',
337: 1:      'question': '11',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '479001600',
337: 1:      'question': '12',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '6227020800',
337: 1:      'question': '13',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '87178291200',
337: 1:      'question': '14',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '1307674368000',
337: 1:      'question': '15',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '20922789888000',
337: 1:      'question': '16',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '355687428096000',
337: 1:      'question': '17',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '6402373705728000',
337: 1:      'question': '18',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '121645100408832000',
337: 1:      'question': '19',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '2432902008176640000',
337: 1:      'question': '20',
337: 1:      'valid': true
337: 1:    },
337: 1:    {
337: 1:      'answer': '51090942171709440000',
337: 1:      'question': '21',
337: 1:      'valid': true
337: 1:    }
337: 1:  ],
337: 1:  'info': [
337: 1:    '✅f(1) = 1',
337: 1:    '✅f(2) = 2',
337: 1:    '✅f(3) = 6',
337: 1:    '✅f(4) = 24',
337: 1:    '✅f(5) = 120',
337: 1:    '✅f(6) = 720',
337: 1:    '✅f(7) = 5040',
337: 1:    '✅f(8) = 40320',
337: 1:    '✅f(9) = 362880',
337: 1:    '✅f(10) = 3628800',
337: 1:    '✅f(11) = 39916800',
337: 1:    '✅f(12) = 479001600',
337: 1:    '✅f(13) = 6227020800',
337: 1:    '✅f(14) = 87178291200',
337: 1:    '✅f(15) = 1307674368000',
337: 1:    '✅f(16) = 20922789888000',
337: 1:    '✅f(17) = 355687428096000',
337: 1:    '✅f(18) = 6402373705728000',
337: 1:    '✅f(19) = 121645100408832000',
337: 1:    '✅f(20) = 2432902008176640000',
337: 1:    '✅f(21) = 51090942171709440000',
337: 1:    '❌f(22) = ??? != 1124000727777607680000'
337: 1:  ],
337: 1:  'level': 12,
337: 1:  'nextQuestion': '22',
337: 1:  'questions': [
337: 1:    '1',
337: 1:    '2',
337: 1:    '3',
337: 1:    '4',
337: 1:    '5',
337: 1:    '6',
337: 1:    '7',
337: 1:    '8',
337: 1:    '9',
337: 1:    '10',
337: 1:    '11',
337: 1:    '12',
337: 1:    '13',
337: 1:    '14',
337: 1:    '15',
337: 1:    '16',
337: 1:    '17',
337: 1:    '18',
337: 1:    '19',
337: 1:    '20',
337: 1:    '21',
337: 1:    '22'
337: 1:  ]
337: 1:}
337: 1:Scores: 26791
337: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000']')
337: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
338: 1:BoardData {
338: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
338: 1:  'expectedAnswer': '25852016738884976640000',
338: 1:  'history': [
338: 1:    {
338: 1:      'answer': '1',
338: 1:      'question': '1',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '2',
338: 1:      'question': '2',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '6',
338: 1:      'question': '3',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '24',
338: 1:      'question': '4',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '120',
338: 1:      'question': '5',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '720',
338: 1:      'question': '6',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '5040',
338: 1:      'question': '7',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '40320',
338: 1:      'question': '8',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '362880',
338: 1:      'question': '9',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '3628800',
338: 1:      'question': '10',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '39916800',
338: 1:      'question': '11',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '479001600',
338: 1:      'question': '12',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '6227020800',
338: 1:      'question': '13',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '87178291200',
338: 1:      'question': '14',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '1307674368000',
338: 1:      'question': '15',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '20922789888000',
338: 1:      'question': '16',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '355687428096000',
338: 1:      'question': '17',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '6402373705728000',
338: 1:      'question': '18',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '121645100408832000',
338: 1:      'question': '19',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '2432902008176640000',
338: 1:      'question': '20',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '51090942171709440000',
338: 1:      'question': '21',
338: 1:      'valid': true
338: 1:    },
338: 1:    {
338: 1:      'answer': '1124000727777607680000',
338: 1:      'question': '22',
338: 1:      'valid': true
338: 1:    }
338: 1:  ],
338: 1:  'info': [
338: 1:    '✅f(1) = 1',
338: 1:    '✅f(2) = 2',
338: 1:    '✅f(3) = 6',
338: 1:    '✅f(4) = 24',
338: 1:    '✅f(5) = 120',
338: 1:    '✅f(6) = 720',
338: 1:    '✅f(7) = 5040',
338: 1:    '✅f(8) = 40320',
338: 1:    '✅f(9) = 362880',
338: 1:    '✅f(10) = 3628800',
338: 1:    '✅f(11) = 39916800',
338: 1:    '✅f(12) = 479001600',
338: 1:    '✅f(13) = 6227020800',
338: 1:    '✅f(14) = 87178291200',
338: 1:    '✅f(15) = 1307674368000',
338: 1:    '✅f(16) = 20922789888000',
338: 1:    '✅f(17) = 355687428096000',
338: 1:    '✅f(18) = 6402373705728000',
338: 1:    '✅f(19) = 121645100408832000',
338: 1:    '✅f(20) = 2432902008176640000',
338: 1:    '✅f(21) = 51090942171709440000',
338: 1:    '✅f(22) = 1124000727777607680000',
338: 1:    '❌f(23) = ??? != 25852016738884976640000'
338: 1:  ],
338: 1:  'level': 12,
338: 1:  'nextQuestion': '23',
338: 1:  'questions': [
338: 1:    '1',
338: 1:    '2',
338: 1:    '3',
338: 1:    '4',
338: 1:    '5',
338: 1:    '6',
338: 1:    '7',
338: 1:    '8',
338: 1:    '9',
338: 1:    '10',
338: 1:    '11',
338: 1:    '12',
338: 1:    '13',
338: 1:    '14',
338: 1:    '15',
338: 1:    '16',
338: 1:    '17',
338: 1:    '18',
338: 1:    '19',
338: 1:    '20',
338: 1:    '21',
338: 1:    '22',
338: 1:    '23'
338: 1:  ]
338: 1:}
338: 1:Scores: 26807
338: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000']')
338: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
339: 1:BoardData {
339: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
339: 1:  'expectedAnswer': '620448401733239439360000',
339: 1:  'history': [
339: 1:    {
339: 1:      'answer': '1',
339: 1:      'question': '1',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '2',
339: 1:      'question': '2',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '6',
339: 1:      'question': '3',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '24',
339: 1:      'question': '4',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '120',
339: 1:      'question': '5',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '720',
339: 1:      'question': '6',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '5040',
339: 1:      'question': '7',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '40320',
339: 1:      'question': '8',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '362880',
339: 1:      'question': '9',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '3628800',
339: 1:      'question': '10',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '39916800',
339: 1:      'question': '11',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '479001600',
339: 1:      'question': '12',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '6227020800',
339: 1:      'question': '13',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '87178291200',
339: 1:      'question': '14',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '1307674368000',
339: 1:      'question': '15',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '20922789888000',
339: 1:      'question': '16',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '355687428096000',
339: 1:      'question': '17',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '6402373705728000',
339: 1:      'question': '18',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '121645100408832000',
339: 1:      'question': '19',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '2432902008176640000',
339: 1:      'question': '20',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '51090942171709440000',
339: 1:      'question': '21',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '1124000727777607680000',
339: 1:      'question': '22',
339: 1:      'valid': true
339: 1:    },
339: 1:    {
339: 1:      'answer': '25852016738884976640000',
339: 1:      'question': '23',
339: 1:      'valid': true
339: 1:    }
339: 1:  ],
339: 1:  'info': [
339: 1:    '✅f(1) = 1',
339: 1:    '✅f(2) = 2',
339: 1:    '✅f(3) = 6',
339: 1:    '✅f(4) = 24',
339: 1:    '✅f(5) = 120',
339: 1:    '✅f(6) = 720',
339: 1:    '✅f(7) = 5040',
339: 1:    '✅f(8) = 40320',
339: 1:    '✅f(9) = 362880',
339: 1:    '✅f(10) = 3628800',
339: 1:    '✅f(11) = 39916800',
339: 1:    '✅f(12) = 479001600',
339: 1:    '✅f(13) = 6227020800',
339: 1:    '✅f(14) = 87178291200',
339: 1:    '✅f(15) = 1307674368000',
339: 1:    '✅f(16) = 20922789888000',
339: 1:    '✅f(17) = 355687428096000',
339: 1:    '✅f(18) = 6402373705728000',
339: 1:    '✅f(19) = 121645100408832000',
339: 1:    '✅f(20) = 2432902008176640000',
339: 1:    '✅f(21) = 51090942171709440000',
339: 1:    '✅f(22) = 1124000727777607680000',
339: 1:    '✅f(23) = 25852016738884976640000',
339: 1:    '❌f(24) = ??? != 620448401733239439360000'
339: 1:  ],
339: 1:  'level': 12,
339: 1:  'nextQuestion': '24',
339: 1:  'questions': [
339: 1:    '1',
339: 1:    '2',
339: 1:    '3',
339: 1:    '4',
339: 1:    '5',
339: 1:    '6',
339: 1:    '7',
339: 1:    '8',
339: 1:    '9',
339: 1:    '10',
339: 1:    '11',
339: 1:    '12',
339: 1:    '13',
339: 1:    '14',
339: 1:    '15',
339: 1:    '16',
339: 1:    '17',
339: 1:    '18',
339: 1:    '19',
339: 1:    '20',
339: 1:    '21',
339: 1:    '22',
339: 1:    '23',
339: 1:    '24'
339: 1:  ]
339: 1:}
339: 1:Scores: 26823
339: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000', '620448401733239439360000']')
339: 1:Fire Event: PassTest{complexity=40, testCount=25}
------------------------------------------
340: 1:BoardData {
340: 1:  'description': ['Write a method that takes one int argument and that returns the factorial of that number as a String.\nWarning: Int/long overflow is possible.'],
340: 1:  'expectedAnswer': '15511210043330985984000000',
340: 1:  'history': [
340: 1:    {
340: 1:      'answer': '1',
340: 1:      'question': '1',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '2',
340: 1:      'question': '2',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '6',
340: 1:      'question': '3',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '24',
340: 1:      'question': '4',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '120',
340: 1:      'question': '5',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '720',
340: 1:      'question': '6',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '5040',
340: 1:      'question': '7',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '40320',
340: 1:      'question': '8',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '362880',
340: 1:      'question': '9',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '3628800',
340: 1:      'question': '10',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '39916800',
340: 1:      'question': '11',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '479001600',
340: 1:      'question': '12',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '6227020800',
340: 1:      'question': '13',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '87178291200',
340: 1:      'question': '14',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '1307674368000',
340: 1:      'question': '15',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '20922789888000',
340: 1:      'question': '16',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '355687428096000',
340: 1:      'question': '17',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '6402373705728000',
340: 1:      'question': '18',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '121645100408832000',
340: 1:      'question': '19',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '2432902008176640000',
340: 1:      'question': '20',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '51090942171709440000',
340: 1:      'question': '21',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '1124000727777607680000',
340: 1:      'question': '22',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '25852016738884976640000',
340: 1:      'question': '23',
340: 1:      'valid': true
340: 1:    },
340: 1:    {
340: 1:      'answer': '620448401733239439360000',
340: 1:      'question': '24',
340: 1:      'valid': true
340: 1:    }
340: 1:  ],
340: 1:  'info': [
340: 1:    '✅f(1) = 1',
340: 1:    '✅f(2) = 2',
340: 1:    '✅f(3) = 6',
340: 1:    '✅f(4) = 24',
340: 1:    '✅f(5) = 120',
340: 1:    '✅f(6) = 720',
340: 1:    '✅f(7) = 5040',
340: 1:    '✅f(8) = 40320',
340: 1:    '✅f(9) = 362880',
340: 1:    '✅f(10) = 3628800',
340: 1:    '✅f(11) = 39916800',
340: 1:    '✅f(12) = 479001600',
340: 1:    '✅f(13) = 6227020800',
340: 1:    '✅f(14) = 87178291200',
340: 1:    '✅f(15) = 1307674368000',
340: 1:    '✅f(16) = 20922789888000',
340: 1:    '✅f(17) = 355687428096000',
340: 1:    '✅f(18) = 6402373705728000',
340: 1:    '✅f(19) = 121645100408832000',
340: 1:    '✅f(20) = 2432902008176640000',
340: 1:    '✅f(21) = 51090942171709440000',
340: 1:    '✅f(22) = 1124000727777607680000',
340: 1:    '✅f(23) = 25852016738884976640000',
340: 1:    '✅f(24) = 620448401733239439360000',
340: 1:    '❌f(25) = ??? != 15511210043330985984000000'
340: 1:  ],
340: 1:  'level': 12,
340: 1:  'nextQuestion': '25',
340: 1:  'questions': [
340: 1:    '1',
340: 1:    '2',
340: 1:    '3',
340: 1:    '4',
340: 1:    '5',
340: 1:    '6',
340: 1:    '7',
340: 1:    '8',
340: 1:    '9',
340: 1:    '10',
340: 1:    '11',
340: 1:    '12',
340: 1:    '13',
340: 1:    '14',
340: 1:    '15',
340: 1:    '16',
340: 1:    '17',
340: 1:    '18',
340: 1:    '19',
340: 1:    '20',
340: 1:    '21',
340: 1:    '22',
340: 1:    '23',
340: 1:    '24',
340: 1:    '25'
340: 1:  ]
340: 1:}
340: 1:Scores: 26839
340: 1:Answer: message('['1', '2', '6', '24', '120', '720', '5040', '40320', '362880', '3628800', '39916800', '479001600', '6227020800', '87178291200', '1307674368000', '20922789888000', '355687428096000', '6402373705728000', '121645100408832000', '2432902008176640000', '51090942171709440000', '1124000727777607680000', '25852016738884976640000', '620448401733239439360000', '15511210043330985984000000']')
340: 1:Fire Event: PassTest{complexity=40, testCount=25}
340: 1:Fire Event: NextAlgorithm{complexity=40, time=0}
------------------------------------------
341: 1:BoardData {
341: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
341: 1:  'history': [
341: 1:    {
341: 1:      'answer': '1',
341: 1:      'question': '1',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '2',
341: 1:      'question': '2',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '6',
341: 1:      'question': '3',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '24',
341: 1:      'question': '4',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '120',
341: 1:      'question': '5',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '720',
341: 1:      'question': '6',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '5040',
341: 1:      'question': '7',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '40320',
341: 1:      'question': '8',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '362880',
341: 1:      'question': '9',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '3628800',
341: 1:      'question': '10',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '39916800',
341: 1:      'question': '11',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '479001600',
341: 1:      'question': '12',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '6227020800',
341: 1:      'question': '13',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '87178291200',
341: 1:      'question': '14',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '1307674368000',
341: 1:      'question': '15',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '20922789888000',
341: 1:      'question': '16',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '355687428096000',
341: 1:      'question': '17',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '6402373705728000',
341: 1:      'question': '18',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '121645100408832000',
341: 1:      'question': '19',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '2432902008176640000',
341: 1:      'question': '20',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '51090942171709440000',
341: 1:      'question': '21',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '1124000727777607680000',
341: 1:      'question': '22',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '25852016738884976640000',
341: 1:      'question': '23',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '620448401733239439360000',
341: 1:      'question': '24',
341: 1:      'valid': true
341: 1:    },
341: 1:    {
341: 1:      'answer': '15511210043330985984000000',
341: 1:      'question': '25',
341: 1:      'valid': true
341: 1:    }
341: 1:  ],
341: 1:  'info': [
341: 1:    '✅f(1) = 1',
341: 1:    '✅f(2) = 2',
341: 1:    '✅f(3) = 6',
341: 1:    '✅f(4) = 24',
341: 1:    '✅f(5) = 120',
341: 1:    '✅f(6) = 720',
341: 1:    '✅f(7) = 5040',
341: 1:    '✅f(8) = 40320',
341: 1:    '✅f(9) = 362880',
341: 1:    '✅f(10) = 3628800',
341: 1:    '✅f(11) = 39916800',
341: 1:    '✅f(12) = 479001600',
341: 1:    '✅f(13) = 6227020800',
341: 1:    '✅f(14) = 87178291200',
341: 1:    '✅f(15) = 1307674368000',
341: 1:    '✅f(16) = 20922789888000',
341: 1:    '✅f(17) = 355687428096000',
341: 1:    '✅f(18) = 6402373705728000',
341: 1:    '✅f(19) = 121645100408832000',
341: 1:    '✅f(20) = 2432902008176640000',
341: 1:    '✅f(21) = 51090942171709440000',
341: 1:    '✅f(22) = 1124000727777607680000',
341: 1:    '✅f(23) = 25852016738884976640000',
341: 1:    '✅f(24) = 620448401733239439360000',
341: 1:    '✅f(25) = 15511210043330985984000000'
341: 1:  ],
341: 1:  'level': 12,
341: 1:  'questions': []
341: 1:}
341: 1:Scores: 32254
341: 1:Answer: message('StartNextLevel')
341: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
342: 1:BoardData {
342: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
342: 1:  'expectedAnswer': '2',
342: 1:  'history': [],
342: 1:  'info': ['❌f(1) = ??? != 2'],
342: 1:  'level': 13,
342: 1:  'nextQuestion': '1',
342: 1:  'questions': ['1']
342: 1:}
342: 1:Scores: 32254
342: 1:Answer: message('['2']')
342: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
343: 1:BoardData {
343: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
343: 1:  'expectedAnswer': '4',
343: 1:  'history': [{
343: 1:    'answer': '2',
343: 1:    'question': '1',
343: 1:    'valid': true
343: 1:  }],
343: 1:  'info': [
343: 1:    '✅f(1) = 2',
343: 1:    '❌f(2) = ??? != 4'
343: 1:  ],
343: 1:  'level': 13,
343: 1:  'nextQuestion': '2',
343: 1:  'questions': [
343: 1:    '1',
343: 1:    '2'
343: 1:  ]
343: 1:}
343: 1:Scores: 32268
343: 1:Answer: message('['2', '4']')
343: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
344: 1:BoardData {
344: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
344: 1:  'expectedAnswer': '6',
344: 1:  'history': [
344: 1:    {
344: 1:      'answer': '2',
344: 1:      'question': '1',
344: 1:      'valid': true
344: 1:    },
344: 1:    {
344: 1:      'answer': '4',
344: 1:      'question': '2',
344: 1:      'valid': true
344: 1:    }
344: 1:  ],
344: 1:  'info': [
344: 1:    '✅f(1) = 2',
344: 1:    '✅f(2) = 4',
344: 1:    '❌f(3) = ??? != 6'
344: 1:  ],
344: 1:  'level': 13,
344: 1:  'nextQuestion': '3',
344: 1:  'questions': [
344: 1:    '1',
344: 1:    '2',
344: 1:    '3'
344: 1:  ]
344: 1:}
344: 1:Scores: 32282
344: 1:Answer: message('['2', '4', '6']')
344: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
345: 1:BoardData {
345: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
345: 1:  'expectedAnswer': '8',
345: 1:  'history': [
345: 1:    {
345: 1:      'answer': '2',
345: 1:      'question': '1',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '4',
345: 1:      'question': '2',
345: 1:      'valid': true
345: 1:    },
345: 1:    {
345: 1:      'answer': '6',
345: 1:      'question': '3',
345: 1:      'valid': true
345: 1:    }
345: 1:  ],
345: 1:  'info': [
345: 1:    '✅f(1) = 2',
345: 1:    '✅f(2) = 4',
345: 1:    '✅f(3) = 6',
345: 1:    '❌f(4) = ??? != 8'
345: 1:  ],
345: 1:  'level': 13,
345: 1:  'nextQuestion': '4',
345: 1:  'questions': [
345: 1:    '1',
345: 1:    '2',
345: 1:    '3',
345: 1:    '4'
345: 1:  ]
345: 1:}
345: 1:Scores: 32296
345: 1:Answer: message('['2', '4', '6', '8']')
345: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
346: 1:BoardData {
346: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
346: 1:  'expectedAnswer': '11',
346: 1:  'history': [
346: 1:    {
346: 1:      'answer': '2',
346: 1:      'question': '1',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '4',
346: 1:      'question': '2',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '6',
346: 1:      'question': '3',
346: 1:      'valid': true
346: 1:    },
346: 1:    {
346: 1:      'answer': '8',
346: 1:      'question': '4',
346: 1:      'valid': true
346: 1:    }
346: 1:  ],
346: 1:  'info': [
346: 1:    '✅f(1) = 2',
346: 1:    '✅f(2) = 4',
346: 1:    '✅f(3) = 6',
346: 1:    '✅f(4) = 8',
346: 1:    '❌f(5) = ??? != 11'
346: 1:  ],
346: 1:  'level': 13,
346: 1:  'nextQuestion': '5',
346: 1:  'questions': [
346: 1:    '1',
346: 1:    '2',
346: 1:    '3',
346: 1:    '4',
346: 1:    '5'
346: 1:  ]
346: 1:}
346: 1:Scores: 32310
346: 1:Answer: message('['2', '4', '6', '8', '11']')
346: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
347: 1:BoardData {
347: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
347: 1:  'expectedAnswer': '33',
347: 1:  'history': [
347: 1:    {
347: 1:      'answer': '2',
347: 1:      'question': '1',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '4',
347: 1:      'question': '2',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '6',
347: 1:      'question': '3',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '8',
347: 1:      'question': '4',
347: 1:      'valid': true
347: 1:    },
347: 1:    {
347: 1:      'answer': '11',
347: 1:      'question': '5',
347: 1:      'valid': true
347: 1:    }
347: 1:  ],
347: 1:  'info': [
347: 1:    '✅f(1) = 2',
347: 1:    '✅f(2) = 4',
347: 1:    '✅f(3) = 6',
347: 1:    '✅f(4) = 8',
347: 1:    '✅f(5) = 11',
347: 1:    '❌f(6) = ??? != 33'
347: 1:  ],
347: 1:  'level': 13,
347: 1:  'nextQuestion': '6',
347: 1:  'questions': [
347: 1:    '1',
347: 1:    '2',
347: 1:    '3',
347: 1:    '4',
347: 1:    '5',
347: 1:    '6'
347: 1:  ]
347: 1:}
347: 1:Scores: 32324
347: 1:Answer: message('['2', '4', '6', '8', '11', '33']')
347: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
348: 1:BoardData {
348: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
348: 1:  'expectedAnswer': '55',
348: 1:  'history': [
348: 1:    {
348: 1:      'answer': '2',
348: 1:      'question': '1',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '4',
348: 1:      'question': '2',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '6',
348: 1:      'question': '3',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '8',
348: 1:      'question': '4',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '11',
348: 1:      'question': '5',
348: 1:      'valid': true
348: 1:    },
348: 1:    {
348: 1:      'answer': '33',
348: 1:      'question': '6',
348: 1:      'valid': true
348: 1:    }
348: 1:  ],
348: 1:  'info': [
348: 1:    '✅f(1) = 2',
348: 1:    '✅f(2) = 4',
348: 1:    '✅f(3) = 6',
348: 1:    '✅f(4) = 8',
348: 1:    '✅f(5) = 11',
348: 1:    '✅f(6) = 33',
348: 1:    '❌f(7) = ??? != 55'
348: 1:  ],
348: 1:  'level': 13,
348: 1:  'nextQuestion': '7',
348: 1:  'questions': [
348: 1:    '1',
348: 1:    '2',
348: 1:    '3',
348: 1:    '4',
348: 1:    '5',
348: 1:    '6',
348: 1:    '7'
348: 1:  ]
348: 1:}
348: 1:Scores: 32338
348: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55']')
348: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
349: 1:BoardData {
349: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
349: 1:  'expectedAnswer': '99',
349: 1:  'history': [
349: 1:    {
349: 1:      'answer': '2',
349: 1:      'question': '1',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '4',
349: 1:      'question': '2',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '6',
349: 1:      'question': '3',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '8',
349: 1:      'question': '4',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '11',
349: 1:      'question': '5',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '33',
349: 1:      'question': '6',
349: 1:      'valid': true
349: 1:    },
349: 1:    {
349: 1:      'answer': '55',
349: 1:      'question': '7',
349: 1:      'valid': true
349: 1:    }
349: 1:  ],
349: 1:  'info': [
349: 1:    '✅f(1) = 2',
349: 1:    '✅f(2) = 4',
349: 1:    '✅f(3) = 6',
349: 1:    '✅f(4) = 8',
349: 1:    '✅f(5) = 11',
349: 1:    '✅f(6) = 33',
349: 1:    '✅f(7) = 55',
349: 1:    '❌f(9) = ??? != 99'
349: 1:  ],
349: 1:  'level': 13,
349: 1:  'nextQuestion': '9',
349: 1:  'questions': [
349: 1:    '1',
349: 1:    '2',
349: 1:    '3',
349: 1:    '4',
349: 1:    '5',
349: 1:    '6',
349: 1:    '7',
349: 1:    '9'
349: 1:  ]
349: 1:}
349: 1:Scores: 32352
349: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99']')
349: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
350: 1:BoardData {
350: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
350: 1:  'expectedAnswer': '11',
350: 1:  'history': [
350: 1:    {
350: 1:      'answer': '2',
350: 1:      'question': '1',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '4',
350: 1:      'question': '2',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '6',
350: 1:      'question': '3',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '8',
350: 1:      'question': '4',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '11',
350: 1:      'question': '5',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '33',
350: 1:      'question': '6',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '55',
350: 1:      'question': '7',
350: 1:      'valid': true
350: 1:    },
350: 1:    {
350: 1:      'answer': '99',
350: 1:      'question': '9',
350: 1:      'valid': true
350: 1:    }
350: 1:  ],
350: 1:  'info': [
350: 1:    '✅f(1) = 2',
350: 1:    '✅f(2) = 4',
350: 1:    '✅f(3) = 6',
350: 1:    '✅f(4) = 8',
350: 1:    '✅f(5) = 11',
350: 1:    '✅f(6) = 33',
350: 1:    '✅f(7) = 55',
350: 1:    '✅f(9) = 99',
350: 1:    '❌f(10) = ??? != 11'
350: 1:  ],
350: 1:  'level': 13,
350: 1:  'nextQuestion': '10',
350: 1:  'questions': [
350: 1:    '1',
350: 1:    '2',
350: 1:    '3',
350: 1:    '4',
350: 1:    '5',
350: 1:    '6',
350: 1:    '7',
350: 1:    '9',
350: 1:    '10'
350: 1:  ]
350: 1:}
350: 1:Scores: 32366
350: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11']')
350: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
351: 1:BoardData {
351: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
351: 1:  'expectedAnswer': '22',
351: 1:  'history': [
351: 1:    {
351: 1:      'answer': '2',
351: 1:      'question': '1',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '4',
351: 1:      'question': '2',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '6',
351: 1:      'question': '3',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '8',
351: 1:      'question': '4',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '11',
351: 1:      'question': '5',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '33',
351: 1:      'question': '6',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '55',
351: 1:      'question': '7',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '99',
351: 1:      'question': '9',
351: 1:      'valid': true
351: 1:    },
351: 1:    {
351: 1:      'answer': '11',
351: 1:      'question': '10',
351: 1:      'valid': true
351: 1:    }
351: 1:  ],
351: 1:  'info': [
351: 1:    '✅f(1) = 2',
351: 1:    '✅f(2) = 4',
351: 1:    '✅f(3) = 6',
351: 1:    '✅f(4) = 8',
351: 1:    '✅f(5) = 11',
351: 1:    '✅f(6) = 33',
351: 1:    '✅f(7) = 55',
351: 1:    '✅f(9) = 99',
351: 1:    '✅f(10) = 11',
351: 1:    '❌f(11) = ??? != 22'
351: 1:  ],
351: 1:  'level': 13,
351: 1:  'nextQuestion': '11',
351: 1:  'questions': [
351: 1:    '1',
351: 1:    '2',
351: 1:    '3',
351: 1:    '4',
351: 1:    '5',
351: 1:    '6',
351: 1:    '7',
351: 1:    '9',
351: 1:    '10',
351: 1:    '11'
351: 1:  ]
351: 1:}
351: 1:Scores: 32380
351: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22']')
351: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
352: 1:BoardData {
352: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
352: 1:  'expectedAnswer': '33',
352: 1:  'history': [
352: 1:    {
352: 1:      'answer': '2',
352: 1:      'question': '1',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '4',
352: 1:      'question': '2',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '6',
352: 1:      'question': '3',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '8',
352: 1:      'question': '4',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '11',
352: 1:      'question': '5',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '33',
352: 1:      'question': '6',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '55',
352: 1:      'question': '7',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '99',
352: 1:      'question': '9',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '11',
352: 1:      'question': '10',
352: 1:      'valid': true
352: 1:    },
352: 1:    {
352: 1:      'answer': '22',
352: 1:      'question': '11',
352: 1:      'valid': true
352: 1:    }
352: 1:  ],
352: 1:  'info': [
352: 1:    '✅f(1) = 2',
352: 1:    '✅f(2) = 4',
352: 1:    '✅f(3) = 6',
352: 1:    '✅f(4) = 8',
352: 1:    '✅f(5) = 11',
352: 1:    '✅f(6) = 33',
352: 1:    '✅f(7) = 55',
352: 1:    '✅f(9) = 99',
352: 1:    '✅f(10) = 11',
352: 1:    '✅f(11) = 22',
352: 1:    '❌f(12) = ??? != 33'
352: 1:  ],
352: 1:  'level': 13,
352: 1:  'nextQuestion': '12',
352: 1:  'questions': [
352: 1:    '1',
352: 1:    '2',
352: 1:    '3',
352: 1:    '4',
352: 1:    '5',
352: 1:    '6',
352: 1:    '7',
352: 1:    '9',
352: 1:    '10',
352: 1:    '11',
352: 1:    '12'
352: 1:  ]
352: 1:}
352: 1:Scores: 32394
352: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33']')
352: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
353: 1:BoardData {
353: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
353: 1:  'expectedAnswer': '444',
353: 1:  'history': [
353: 1:    {
353: 1:      'answer': '2',
353: 1:      'question': '1',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '4',
353: 1:      'question': '2',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '6',
353: 1:      'question': '3',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '8',
353: 1:      'question': '4',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '11',
353: 1:      'question': '5',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '33',
353: 1:      'question': '6',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '55',
353: 1:      'question': '7',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '99',
353: 1:      'question': '9',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '11',
353: 1:      'question': '10',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '22',
353: 1:      'question': '11',
353: 1:      'valid': true
353: 1:    },
353: 1:    {
353: 1:      'answer': '33',
353: 1:      'question': '12',
353: 1:      'valid': true
353: 1:    }
353: 1:  ],
353: 1:  'info': [
353: 1:    '✅f(1) = 2',
353: 1:    '✅f(2) = 4',
353: 1:    '✅f(3) = 6',
353: 1:    '✅f(4) = 8',
353: 1:    '✅f(5) = 11',
353: 1:    '✅f(6) = 33',
353: 1:    '✅f(7) = 55',
353: 1:    '✅f(9) = 99',
353: 1:    '✅f(10) = 11',
353: 1:    '✅f(11) = 22',
353: 1:    '✅f(12) = 33',
353: 1:    '❌f(123) = ??? != 444'
353: 1:  ],
353: 1:  'level': 13,
353: 1:  'nextQuestion': '123',
353: 1:  'questions': [
353: 1:    '1',
353: 1:    '2',
353: 1:    '3',
353: 1:    '4',
353: 1:    '5',
353: 1:    '6',
353: 1:    '7',
353: 1:    '9',
353: 1:    '10',
353: 1:    '11',
353: 1:    '12',
353: 1:    '123'
353: 1:  ]
353: 1:}
353: 1:Scores: 32408
353: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444']')
353: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
354: 1:BoardData {
354: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
354: 1:  'expectedAnswer': '666',
354: 1:  'history': [
354: 1:    {
354: 1:      'answer': '2',
354: 1:      'question': '1',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '4',
354: 1:      'question': '2',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '6',
354: 1:      'question': '3',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '8',
354: 1:      'question': '4',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '11',
354: 1:      'question': '5',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '33',
354: 1:      'question': '6',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '55',
354: 1:      'question': '7',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '99',
354: 1:      'question': '9',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '11',
354: 1:      'question': '10',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '22',
354: 1:      'question': '11',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '33',
354: 1:      'question': '12',
354: 1:      'valid': true
354: 1:    },
354: 1:    {
354: 1:      'answer': '444',
354: 1:      'question': '123',
354: 1:      'valid': true
354: 1:    }
354: 1:  ],
354: 1:  'info': [
354: 1:    '✅f(1) = 2',
354: 1:    '✅f(2) = 4',
354: 1:    '✅f(3) = 6',
354: 1:    '✅f(4) = 8',
354: 1:    '✅f(5) = 11',
354: 1:    '✅f(6) = 33',
354: 1:    '✅f(7) = 55',
354: 1:    '✅f(9) = 99',
354: 1:    '✅f(10) = 11',
354: 1:    '✅f(11) = 22',
354: 1:    '✅f(12) = 33',
354: 1:    '✅f(123) = 444',
354: 1:    '❌f(234) = ??? != 666'
354: 1:  ],
354: 1:  'level': 13,
354: 1:  'nextQuestion': '234',
354: 1:  'questions': [
354: 1:    '1',
354: 1:    '2',
354: 1:    '3',
354: 1:    '4',
354: 1:    '5',
354: 1:    '6',
354: 1:    '7',
354: 1:    '9',
354: 1:    '10',
354: 1:    '11',
354: 1:    '12',
354: 1:    '123',
354: 1:    '234'
354: 1:  ]
354: 1:}
354: 1:Scores: 32422
354: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666']')
354: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
355: 1:BoardData {
355: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
355: 1:  'expectedAnswer': '888',
355: 1:  'history': [
355: 1:    {
355: 1:      'answer': '2',
355: 1:      'question': '1',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '4',
355: 1:      'question': '2',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '6',
355: 1:      'question': '3',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '8',
355: 1:      'question': '4',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '11',
355: 1:      'question': '5',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '33',
355: 1:      'question': '6',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '55',
355: 1:      'question': '7',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '99',
355: 1:      'question': '9',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '11',
355: 1:      'question': '10',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '22',
355: 1:      'question': '11',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '33',
355: 1:      'question': '12',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '444',
355: 1:      'question': '123',
355: 1:      'valid': true
355: 1:    },
355: 1:    {
355: 1:      'answer': '666',
355: 1:      'question': '234',
355: 1:      'valid': true
355: 1:    }
355: 1:  ],
355: 1:  'info': [
355: 1:    '✅f(1) = 2',
355: 1:    '✅f(2) = 4',
355: 1:    '✅f(3) = 6',
355: 1:    '✅f(4) = 8',
355: 1:    '✅f(5) = 11',
355: 1:    '✅f(6) = 33',
355: 1:    '✅f(7) = 55',
355: 1:    '✅f(9) = 99',
355: 1:    '✅f(10) = 11',
355: 1:    '✅f(11) = 22',
355: 1:    '✅f(12) = 33',
355: 1:    '✅f(123) = 444',
355: 1:    '✅f(234) = 666',
355: 1:    '❌f(345) = ??? != 888'
355: 1:  ],
355: 1:  'level': 13,
355: 1:  'nextQuestion': '345',
355: 1:  'questions': [
355: 1:    '1',
355: 1:    '2',
355: 1:    '3',
355: 1:    '4',
355: 1:    '5',
355: 1:    '6',
355: 1:    '7',
355: 1:    '9',
355: 1:    '10',
355: 1:    '11',
355: 1:    '12',
355: 1:    '123',
355: 1:    '234',
355: 1:    '345'
355: 1:  ]
355: 1:}
355: 1:Scores: 32436
355: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888']')
355: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
356: 1:BoardData {
356: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
356: 1:  'expectedAnswer': '1221',
356: 1:  'history': [
356: 1:    {
356: 1:      'answer': '2',
356: 1:      'question': '1',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '4',
356: 1:      'question': '2',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '6',
356: 1:      'question': '3',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '8',
356: 1:      'question': '4',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '11',
356: 1:      'question': '5',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '33',
356: 1:      'question': '6',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '55',
356: 1:      'question': '7',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '99',
356: 1:      'question': '9',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '11',
356: 1:      'question': '10',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '22',
356: 1:      'question': '11',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '33',
356: 1:      'question': '12',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '444',
356: 1:      'question': '123',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '666',
356: 1:      'question': '234',
356: 1:      'valid': true
356: 1:    },
356: 1:    {
356: 1:      'answer': '888',
356: 1:      'question': '345',
356: 1:      'valid': true
356: 1:    }
356: 1:  ],
356: 1:  'info': [
356: 1:    '✅f(1) = 2',
356: 1:    '✅f(2) = 4',
356: 1:    '✅f(3) = 6',
356: 1:    '✅f(4) = 8',
356: 1:    '✅f(5) = 11',
356: 1:    '✅f(6) = 33',
356: 1:    '✅f(7) = 55',
356: 1:    '✅f(9) = 99',
356: 1:    '✅f(10) = 11',
356: 1:    '✅f(11) = 22',
356: 1:    '✅f(12) = 33',
356: 1:    '✅f(123) = 444',
356: 1:    '✅f(234) = 666',
356: 1:    '✅f(345) = 888',
356: 1:    '❌f(456) = ??? != 1221'
356: 1:  ],
356: 1:  'level': 13,
356: 1:  'nextQuestion': '456',
356: 1:  'questions': [
356: 1:    '1',
356: 1:    '2',
356: 1:    '3',
356: 1:    '4',
356: 1:    '5',
356: 1:    '6',
356: 1:    '7',
356: 1:    '9',
356: 1:    '10',
356: 1:    '11',
356: 1:    '12',
356: 1:    '123',
356: 1:    '234',
356: 1:    '345',
356: 1:    '456'
356: 1:  ]
356: 1:}
356: 1:Scores: 32450
356: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221']')
356: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
357: 1:BoardData {
357: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
357: 1:  'expectedAnswer': '3663',
357: 1:  'history': [
357: 1:    {
357: 1:      'answer': '2',
357: 1:      'question': '1',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '4',
357: 1:      'question': '2',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '6',
357: 1:      'question': '3',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '8',
357: 1:      'question': '4',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '11',
357: 1:      'question': '5',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '33',
357: 1:      'question': '6',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '55',
357: 1:      'question': '7',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '99',
357: 1:      'question': '9',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '11',
357: 1:      'question': '10',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '22',
357: 1:      'question': '11',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '33',
357: 1:      'question': '12',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '444',
357: 1:      'question': '123',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '666',
357: 1:      'question': '234',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '888',
357: 1:      'question': '345',
357: 1:      'valid': true
357: 1:    },
357: 1:    {
357: 1:      'answer': '1221',
357: 1:      'question': '456',
357: 1:      'valid': true
357: 1:    }
357: 1:  ],
357: 1:  'info': [
357: 1:    '✅f(1) = 2',
357: 1:    '✅f(2) = 4',
357: 1:    '✅f(3) = 6',
357: 1:    '✅f(4) = 8',
357: 1:    '✅f(5) = 11',
357: 1:    '✅f(6) = 33',
357: 1:    '✅f(7) = 55',
357: 1:    '✅f(9) = 99',
357: 1:    '✅f(10) = 11',
357: 1:    '✅f(11) = 22',
357: 1:    '✅f(12) = 33',
357: 1:    '✅f(123) = 444',
357: 1:    '✅f(234) = 666',
357: 1:    '✅f(345) = 888',
357: 1:    '✅f(456) = 1221',
357: 1:    '❌f(567) = ??? != 3663'
357: 1:  ],
357: 1:  'level': 13,
357: 1:  'nextQuestion': '567',
357: 1:  'questions': [
357: 1:    '1',
357: 1:    '2',
357: 1:    '3',
357: 1:    '4',
357: 1:    '5',
357: 1:    '6',
357: 1:    '7',
357: 1:    '9',
357: 1:    '10',
357: 1:    '11',
357: 1:    '12',
357: 1:    '123',
357: 1:    '234',
357: 1:    '345',
357: 1:    '456',
357: 1:    '567'
357: 1:  ]
357: 1:}
357: 1:Scores: 32464
357: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663']')
357: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
358: 1:BoardData {
358: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
358: 1:  'expectedAnswer': '23232',
358: 1:  'history': [
358: 1:    {
358: 1:      'answer': '2',
358: 1:      'question': '1',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '4',
358: 1:      'question': '2',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '6',
358: 1:      'question': '3',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '8',
358: 1:      'question': '4',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '11',
358: 1:      'question': '5',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '33',
358: 1:      'question': '6',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '55',
358: 1:      'question': '7',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '99',
358: 1:      'question': '9',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '11',
358: 1:      'question': '10',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '22',
358: 1:      'question': '11',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '33',
358: 1:      'question': '12',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '444',
358: 1:      'question': '123',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '666',
358: 1:      'question': '234',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '888',
358: 1:      'question': '345',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '1221',
358: 1:      'question': '456',
358: 1:      'valid': true
358: 1:    },
358: 1:    {
358: 1:      'answer': '3663',
358: 1:      'question': '567',
358: 1:      'valid': true
358: 1:    }
358: 1:  ],
358: 1:  'info': [
358: 1:    '✅f(1) = 2',
358: 1:    '✅f(2) = 4',
358: 1:    '✅f(3) = 6',
358: 1:    '✅f(4) = 8',
358: 1:    '✅f(5) = 11',
358: 1:    '✅f(6) = 33',
358: 1:    '✅f(7) = 55',
358: 1:    '✅f(9) = 99',
358: 1:    '✅f(10) = 11',
358: 1:    '✅f(11) = 22',
358: 1:    '✅f(12) = 33',
358: 1:    '✅f(123) = 444',
358: 1:    '✅f(234) = 666',
358: 1:    '✅f(345) = 888',
358: 1:    '✅f(456) = 1221',
358: 1:    '✅f(567) = 3663',
358: 1:    '❌f(678) = ??? != 23232'
358: 1:  ],
358: 1:  'level': 13,
358: 1:  'nextQuestion': '678',
358: 1:  'questions': [
358: 1:    '1',
358: 1:    '2',
358: 1:    '3',
358: 1:    '4',
358: 1:    '5',
358: 1:    '6',
358: 1:    '7',
358: 1:    '9',
358: 1:    '10',
358: 1:    '11',
358: 1:    '12',
358: 1:    '123',
358: 1:    '234',
358: 1:    '345',
358: 1:    '456',
358: 1:    '567',
358: 1:    '678'
358: 1:  ]
358: 1:}
358: 1:Scores: 32478
358: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232']')
358: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
359: 1:BoardData {
359: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
359: 1:  'expectedAnswer': '66066',
359: 1:  'history': [
359: 1:    {
359: 1:      'answer': '2',
359: 1:      'question': '1',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '4',
359: 1:      'question': '2',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '6',
359: 1:      'question': '3',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '8',
359: 1:      'question': '4',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '11',
359: 1:      'question': '5',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '33',
359: 1:      'question': '6',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '55',
359: 1:      'question': '7',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '99',
359: 1:      'question': '9',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '11',
359: 1:      'question': '10',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '22',
359: 1:      'question': '11',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '33',
359: 1:      'question': '12',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '444',
359: 1:      'question': '123',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '666',
359: 1:      'question': '234',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '888',
359: 1:      'question': '345',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '1221',
359: 1:      'question': '456',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '3663',
359: 1:      'question': '567',
359: 1:      'valid': true
359: 1:    },
359: 1:    {
359: 1:      'answer': '23232',
359: 1:      'question': '678',
359: 1:      'valid': true
359: 1:    }
359: 1:  ],
359: 1:  'info': [
359: 1:    '✅f(1) = 2',
359: 1:    '✅f(2) = 4',
359: 1:    '✅f(3) = 6',
359: 1:    '✅f(4) = 8',
359: 1:    '✅f(5) = 11',
359: 1:    '✅f(6) = 33',
359: 1:    '✅f(7) = 55',
359: 1:    '✅f(9) = 99',
359: 1:    '✅f(10) = 11',
359: 1:    '✅f(11) = 22',
359: 1:    '✅f(12) = 33',
359: 1:    '✅f(123) = 444',
359: 1:    '✅f(234) = 666',
359: 1:    '✅f(345) = 888',
359: 1:    '✅f(456) = 1221',
359: 1:    '✅f(567) = 3663',
359: 1:    '✅f(678) = 23232',
359: 1:    '❌f(789) = ??? != 66066'
359: 1:  ],
359: 1:  'level': 13,
359: 1:  'nextQuestion': '789',
359: 1:  'questions': [
359: 1:    '1',
359: 1:    '2',
359: 1:    '3',
359: 1:    '4',
359: 1:    '5',
359: 1:    '6',
359: 1:    '7',
359: 1:    '9',
359: 1:    '10',
359: 1:    '11',
359: 1:    '12',
359: 1:    '123',
359: 1:    '234',
359: 1:    '345',
359: 1:    '456',
359: 1:    '567',
359: 1:    '678',
359: 1:    '789'
359: 1:  ]
359: 1:}
359: 1:Scores: 32492
359: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066']')
359: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
360: 1:BoardData {
360: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
360: 1:  'expectedAnswer': '5555',
360: 1:  'history': [
360: 1:    {
360: 1:      'answer': '2',
360: 1:      'question': '1',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '4',
360: 1:      'question': '2',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '6',
360: 1:      'question': '3',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '8',
360: 1:      'question': '4',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '11',
360: 1:      'question': '5',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '33',
360: 1:      'question': '6',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '55',
360: 1:      'question': '7',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '99',
360: 1:      'question': '9',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '11',
360: 1:      'question': '10',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '22',
360: 1:      'question': '11',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '33',
360: 1:      'question': '12',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '444',
360: 1:      'question': '123',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '666',
360: 1:      'question': '234',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '888',
360: 1:      'question': '345',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '1221',
360: 1:      'question': '456',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '3663',
360: 1:      'question': '567',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '23232',
360: 1:      'question': '678',
360: 1:      'valid': true
360: 1:    },
360: 1:    {
360: 1:      'answer': '66066',
360: 1:      'question': '789',
360: 1:      'valid': true
360: 1:    }
360: 1:  ],
360: 1:  'info': [
360: 1:    '✅f(1) = 2',
360: 1:    '✅f(2) = 4',
360: 1:    '✅f(3) = 6',
360: 1:    '✅f(4) = 8',
360: 1:    '✅f(5) = 11',
360: 1:    '✅f(6) = 33',
360: 1:    '✅f(7) = 55',
360: 1:    '✅f(9) = 99',
360: 1:    '✅f(10) = 11',
360: 1:    '✅f(11) = 22',
360: 1:    '✅f(12) = 33',
360: 1:    '✅f(123) = 444',
360: 1:    '✅f(234) = 666',
360: 1:    '✅f(345) = 888',
360: 1:    '✅f(456) = 1221',
360: 1:    '✅f(567) = 3663',
360: 1:    '✅f(678) = 23232',
360: 1:    '✅f(789) = 66066',
360: 1:    '❌f(1234) = ??? != 5555'
360: 1:  ],
360: 1:  'level': 13,
360: 1:  'nextQuestion': '1234',
360: 1:  'questions': [
360: 1:    '1',
360: 1:    '2',
360: 1:    '3',
360: 1:    '4',
360: 1:    '5',
360: 1:    '6',
360: 1:    '7',
360: 1:    '9',
360: 1:    '10',
360: 1:    '11',
360: 1:    '12',
360: 1:    '123',
360: 1:    '234',
360: 1:    '345',
360: 1:    '456',
360: 1:    '567',
360: 1:    '678',
360: 1:    '789',
360: 1:    '1234'
360: 1:  ]
360: 1:}
360: 1:Scores: 32506
360: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555']')
360: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
361: 1:BoardData {
361: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
361: 1:  'expectedAnswer': '7777',
361: 1:  'history': [
361: 1:    {
361: 1:      'answer': '2',
361: 1:      'question': '1',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '4',
361: 1:      'question': '2',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '6',
361: 1:      'question': '3',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '8',
361: 1:      'question': '4',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '11',
361: 1:      'question': '5',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '33',
361: 1:      'question': '6',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '55',
361: 1:      'question': '7',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '99',
361: 1:      'question': '9',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '11',
361: 1:      'question': '10',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '22',
361: 1:      'question': '11',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '33',
361: 1:      'question': '12',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '444',
361: 1:      'question': '123',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '666',
361: 1:      'question': '234',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '888',
361: 1:      'question': '345',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '1221',
361: 1:      'question': '456',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '3663',
361: 1:      'question': '567',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '23232',
361: 1:      'question': '678',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '66066',
361: 1:      'question': '789',
361: 1:      'valid': true
361: 1:    },
361: 1:    {
361: 1:      'answer': '5555',
361: 1:      'question': '1234',
361: 1:      'valid': true
361: 1:    }
361: 1:  ],
361: 1:  'info': [
361: 1:    '✅f(1) = 2',
361: 1:    '✅f(2) = 4',
361: 1:    '✅f(3) = 6',
361: 1:    '✅f(4) = 8',
361: 1:    '✅f(5) = 11',
361: 1:    '✅f(6) = 33',
361: 1:    '✅f(7) = 55',
361: 1:    '✅f(9) = 99',
361: 1:    '✅f(10) = 11',
361: 1:    '✅f(11) = 22',
361: 1:    '✅f(12) = 33',
361: 1:    '✅f(123) = 444',
361: 1:    '✅f(234) = 666',
361: 1:    '✅f(345) = 888',
361: 1:    '✅f(456) = 1221',
361: 1:    '✅f(567) = 3663',
361: 1:    '✅f(678) = 23232',
361: 1:    '✅f(789) = 66066',
361: 1:    '✅f(1234) = 5555',
361: 1:    '❌f(2345) = ??? != 7777'
361: 1:  ],
361: 1:  'level': 13,
361: 1:  'nextQuestion': '2345',
361: 1:  'questions': [
361: 1:    '1',
361: 1:    '2',
361: 1:    '3',
361: 1:    '4',
361: 1:    '5',
361: 1:    '6',
361: 1:    '7',
361: 1:    '9',
361: 1:    '10',
361: 1:    '11',
361: 1:    '12',
361: 1:    '123',
361: 1:    '234',
361: 1:    '345',
361: 1:    '456',
361: 1:    '567',
361: 1:    '678',
361: 1:    '789',
361: 1:    '1234',
361: 1:    '2345'
361: 1:  ]
361: 1:}
361: 1:Scores: 32520
361: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777']')
361: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
362: 1:BoardData {
362: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
362: 1:  'expectedAnswer': '9999',
362: 1:  'history': [
362: 1:    {
362: 1:      'answer': '2',
362: 1:      'question': '1',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '4',
362: 1:      'question': '2',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '6',
362: 1:      'question': '3',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '8',
362: 1:      'question': '4',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '11',
362: 1:      'question': '5',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '33',
362: 1:      'question': '6',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '55',
362: 1:      'question': '7',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '99',
362: 1:      'question': '9',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '11',
362: 1:      'question': '10',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '22',
362: 1:      'question': '11',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '33',
362: 1:      'question': '12',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '444',
362: 1:      'question': '123',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '666',
362: 1:      'question': '234',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '888',
362: 1:      'question': '345',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '1221',
362: 1:      'question': '456',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '3663',
362: 1:      'question': '567',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '23232',
362: 1:      'question': '678',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '66066',
362: 1:      'question': '789',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '5555',
362: 1:      'question': '1234',
362: 1:      'valid': true
362: 1:    },
362: 1:    {
362: 1:      'answer': '7777',
362: 1:      'question': '2345',
362: 1:      'valid': true
362: 1:    }
362: 1:  ],
362: 1:  'info': [
362: 1:    '✅f(1) = 2',
362: 1:    '✅f(2) = 4',
362: 1:    '✅f(3) = 6',
362: 1:    '✅f(4) = 8',
362: 1:    '✅f(5) = 11',
362: 1:    '✅f(6) = 33',
362: 1:    '✅f(7) = 55',
362: 1:    '✅f(9) = 99',
362: 1:    '✅f(10) = 11',
362: 1:    '✅f(11) = 22',
362: 1:    '✅f(12) = 33',
362: 1:    '✅f(123) = 444',
362: 1:    '✅f(234) = 666',
362: 1:    '✅f(345) = 888',
362: 1:    '✅f(456) = 1221',
362: 1:    '✅f(567) = 3663',
362: 1:    '✅f(678) = 23232',
362: 1:    '✅f(789) = 66066',
362: 1:    '✅f(1234) = 5555',
362: 1:    '✅f(2345) = 7777',
362: 1:    '❌f(3456) = ??? != 9999'
362: 1:  ],
362: 1:  'level': 13,
362: 1:  'nextQuestion': '3456',
362: 1:  'questions': [
362: 1:    '1',
362: 1:    '2',
362: 1:    '3',
362: 1:    '4',
362: 1:    '5',
362: 1:    '6',
362: 1:    '7',
362: 1:    '9',
362: 1:    '10',
362: 1:    '11',
362: 1:    '12',
362: 1:    '123',
362: 1:    '234',
362: 1:    '345',
362: 1:    '456',
362: 1:    '567',
362: 1:    '678',
362: 1:    '789',
362: 1:    '1234',
362: 1:    '2345',
362: 1:    '3456'
362: 1:  ]
362: 1:}
362: 1:Scores: 32534
362: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999']')
362: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
363: 1:BoardData {
363: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
363: 1:  'expectedAnswer': '12221',
363: 1:  'history': [
363: 1:    {
363: 1:      'answer': '2',
363: 1:      'question': '1',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '4',
363: 1:      'question': '2',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '6',
363: 1:      'question': '3',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '8',
363: 1:      'question': '4',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '11',
363: 1:      'question': '5',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '33',
363: 1:      'question': '6',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '55',
363: 1:      'question': '7',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '99',
363: 1:      'question': '9',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '11',
363: 1:      'question': '10',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '22',
363: 1:      'question': '11',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '33',
363: 1:      'question': '12',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '444',
363: 1:      'question': '123',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '666',
363: 1:      'question': '234',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '888',
363: 1:      'question': '345',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '1221',
363: 1:      'question': '456',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '3663',
363: 1:      'question': '567',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '23232',
363: 1:      'question': '678',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '66066',
363: 1:      'question': '789',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '5555',
363: 1:      'question': '1234',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '7777',
363: 1:      'question': '2345',
363: 1:      'valid': true
363: 1:    },
363: 1:    {
363: 1:      'answer': '9999',
363: 1:      'question': '3456',
363: 1:      'valid': true
363: 1:    }
363: 1:  ],
363: 1:  'info': [
363: 1:    '✅f(1) = 2',
363: 1:    '✅f(2) = 4',
363: 1:    '✅f(3) = 6',
363: 1:    '✅f(4) = 8',
363: 1:    '✅f(5) = 11',
363: 1:    '✅f(6) = 33',
363: 1:    '✅f(7) = 55',
363: 1:    '✅f(9) = 99',
363: 1:    '✅f(10) = 11',
363: 1:    '✅f(11) = 22',
363: 1:    '✅f(12) = 33',
363: 1:    '✅f(123) = 444',
363: 1:    '✅f(234) = 666',
363: 1:    '✅f(345) = 888',
363: 1:    '✅f(456) = 1221',
363: 1:    '✅f(567) = 3663',
363: 1:    '✅f(678) = 23232',
363: 1:    '✅f(789) = 66066',
363: 1:    '✅f(1234) = 5555',
363: 1:    '✅f(2345) = 7777',
363: 1:    '✅f(3456) = 9999',
363: 1:    '❌f(4567) = ??? != 12221'
363: 1:  ],
363: 1:  'level': 13,
363: 1:  'nextQuestion': '4567',
363: 1:  'questions': [
363: 1:    '1',
363: 1:    '2',
363: 1:    '3',
363: 1:    '4',
363: 1:    '5',
363: 1:    '6',
363: 1:    '7',
363: 1:    '9',
363: 1:    '10',
363: 1:    '11',
363: 1:    '12',
363: 1:    '123',
363: 1:    '234',
363: 1:    '345',
363: 1:    '456',
363: 1:    '567',
363: 1:    '678',
363: 1:    '789',
363: 1:    '1234',
363: 1:    '2345',
363: 1:    '3456',
363: 1:    '4567'
363: 1:  ]
363: 1:}
363: 1:Scores: 32548
363: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221']')
363: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
364: 1:BoardData {
364: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
364: 1:  'expectedAnswer': '48884',
364: 1:  'history': [
364: 1:    {
364: 1:      'answer': '2',
364: 1:      'question': '1',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '4',
364: 1:      'question': '2',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '6',
364: 1:      'question': '3',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '8',
364: 1:      'question': '4',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '11',
364: 1:      'question': '5',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '33',
364: 1:      'question': '6',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '55',
364: 1:      'question': '7',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '99',
364: 1:      'question': '9',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '11',
364: 1:      'question': '10',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '22',
364: 1:      'question': '11',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '33',
364: 1:      'question': '12',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '444',
364: 1:      'question': '123',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '666',
364: 1:      'question': '234',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '888',
364: 1:      'question': '345',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '1221',
364: 1:      'question': '456',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '3663',
364: 1:      'question': '567',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '23232',
364: 1:      'question': '678',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '66066',
364: 1:      'question': '789',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '5555',
364: 1:      'question': '1234',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '7777',
364: 1:      'question': '2345',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '9999',
364: 1:      'question': '3456',
364: 1:      'valid': true
364: 1:    },
364: 1:    {
364: 1:      'answer': '12221',
364: 1:      'question': '4567',
364: 1:      'valid': true
364: 1:    }
364: 1:  ],
364: 1:  'info': [
364: 1:    '✅f(1) = 2',
364: 1:    '✅f(2) = 4',
364: 1:    '✅f(3) = 6',
364: 1:    '✅f(4) = 8',
364: 1:    '✅f(5) = 11',
364: 1:    '✅f(6) = 33',
364: 1:    '✅f(7) = 55',
364: 1:    '✅f(9) = 99',
364: 1:    '✅f(10) = 11',
364: 1:    '✅f(11) = 22',
364: 1:    '✅f(12) = 33',
364: 1:    '✅f(123) = 444',
364: 1:    '✅f(234) = 666',
364: 1:    '✅f(345) = 888',
364: 1:    '✅f(456) = 1221',
364: 1:    '✅f(567) = 3663',
364: 1:    '✅f(678) = 23232',
364: 1:    '✅f(789) = 66066',
364: 1:    '✅f(1234) = 5555',
364: 1:    '✅f(2345) = 7777',
364: 1:    '✅f(3456) = 9999',
364: 1:    '✅f(4567) = 12221',
364: 1:    '❌f(5678) = ??? != 48884'
364: 1:  ],
364: 1:  'level': 13,
364: 1:  'nextQuestion': '5678',
364: 1:  'questions': [
364: 1:    '1',
364: 1:    '2',
364: 1:    '3',
364: 1:    '4',
364: 1:    '5',
364: 1:    '6',
364: 1:    '7',
364: 1:    '9',
364: 1:    '10',
364: 1:    '11',
364: 1:    '12',
364: 1:    '123',
364: 1:    '234',
364: 1:    '345',
364: 1:    '456',
364: 1:    '567',
364: 1:    '678',
364: 1:    '789',
364: 1:    '1234',
364: 1:    '2345',
364: 1:    '3456',
364: 1:    '4567',
364: 1:    '5678'
364: 1:  ]
364: 1:}
364: 1:Scores: 32562
364: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884']')
364: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
365: 1:BoardData {
365: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
365: 1:  'expectedAnswer': '993399',
365: 1:  'history': [
365: 1:    {
365: 1:      'answer': '2',
365: 1:      'question': '1',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '4',
365: 1:      'question': '2',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '6',
365: 1:      'question': '3',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '8',
365: 1:      'question': '4',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '11',
365: 1:      'question': '5',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '33',
365: 1:      'question': '6',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '55',
365: 1:      'question': '7',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '99',
365: 1:      'question': '9',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '11',
365: 1:      'question': '10',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '22',
365: 1:      'question': '11',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '33',
365: 1:      'question': '12',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '444',
365: 1:      'question': '123',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '666',
365: 1:      'question': '234',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '888',
365: 1:      'question': '345',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '1221',
365: 1:      'question': '456',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '3663',
365: 1:      'question': '567',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '23232',
365: 1:      'question': '678',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '66066',
365: 1:      'question': '789',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '5555',
365: 1:      'question': '1234',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '7777',
365: 1:      'question': '2345',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '9999',
365: 1:      'question': '3456',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '12221',
365: 1:      'question': '4567',
365: 1:      'valid': true
365: 1:    },
365: 1:    {
365: 1:      'answer': '48884',
365: 1:      'question': '5678',
365: 1:      'valid': true
365: 1:    }
365: 1:  ],
365: 1:  'info': [
365: 1:    '✅f(1) = 2',
365: 1:    '✅f(2) = 4',
365: 1:    '✅f(3) = 6',
365: 1:    '✅f(4) = 8',
365: 1:    '✅f(5) = 11',
365: 1:    '✅f(6) = 33',
365: 1:    '✅f(7) = 55',
365: 1:    '✅f(9) = 99',
365: 1:    '✅f(10) = 11',
365: 1:    '✅f(11) = 22',
365: 1:    '✅f(12) = 33',
365: 1:    '✅f(123) = 444',
365: 1:    '✅f(234) = 666',
365: 1:    '✅f(345) = 888',
365: 1:    '✅f(456) = 1221',
365: 1:    '✅f(567) = 3663',
365: 1:    '✅f(678) = 23232',
365: 1:    '✅f(789) = 66066',
365: 1:    '✅f(1234) = 5555',
365: 1:    '✅f(2345) = 7777',
365: 1:    '✅f(3456) = 9999',
365: 1:    '✅f(4567) = 12221',
365: 1:    '✅f(5678) = 48884',
365: 1:    '❌f(6789) = ??? != 993399'
365: 1:  ],
365: 1:  'level': 13,
365: 1:  'nextQuestion': '6789',
365: 1:  'questions': [
365: 1:    '1',
365: 1:    '2',
365: 1:    '3',
365: 1:    '4',
365: 1:    '5',
365: 1:    '6',
365: 1:    '7',
365: 1:    '9',
365: 1:    '10',
365: 1:    '11',
365: 1:    '12',
365: 1:    '123',
365: 1:    '234',
365: 1:    '345',
365: 1:    '456',
365: 1:    '567',
365: 1:    '678',
365: 1:    '789',
365: 1:    '1234',
365: 1:    '2345',
365: 1:    '3456',
365: 1:    '4567',
365: 1:    '5678',
365: 1:    '6789'
365: 1:  ]
365: 1:}
365: 1:Scores: 32576
365: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399']')
365: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
366: 1:BoardData {
366: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
366: 1:  'expectedAnswer': '993399',
366: 1:  'history': [
366: 1:    {
366: 1:      'answer': '2',
366: 1:      'question': '1',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '4',
366: 1:      'question': '2',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '6',
366: 1:      'question': '3',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '8',
366: 1:      'question': '4',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '11',
366: 1:      'question': '5',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '33',
366: 1:      'question': '6',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '55',
366: 1:      'question': '7',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '99',
366: 1:      'question': '9',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '11',
366: 1:      'question': '10',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '22',
366: 1:      'question': '11',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '33',
366: 1:      'question': '12',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '444',
366: 1:      'question': '123',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '666',
366: 1:      'question': '234',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '888',
366: 1:      'question': '345',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '1221',
366: 1:      'question': '456',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '3663',
366: 1:      'question': '567',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '23232',
366: 1:      'question': '678',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '66066',
366: 1:      'question': '789',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '5555',
366: 1:      'question': '1234',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '7777',
366: 1:      'question': '2345',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '9999',
366: 1:      'question': '3456',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '12221',
366: 1:      'question': '4567',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '48884',
366: 1:      'question': '5678',
366: 1:      'valid': true
366: 1:    },
366: 1:    {
366: 1:      'answer': '993399',
366: 1:      'question': '6789',
366: 1:      'valid': true
366: 1:    }
366: 1:  ],
366: 1:  'info': [
366: 1:    '✅f(1) = 2',
366: 1:    '✅f(2) = 4',
366: 1:    '✅f(3) = 6',
366: 1:    '✅f(4) = 8',
366: 1:    '✅f(5) = 11',
366: 1:    '✅f(6) = 33',
366: 1:    '✅f(7) = 55',
366: 1:    '✅f(9) = 99',
366: 1:    '✅f(10) = 11',
366: 1:    '✅f(11) = 22',
366: 1:    '✅f(12) = 33',
366: 1:    '✅f(123) = 444',
366: 1:    '✅f(234) = 666',
366: 1:    '✅f(345) = 888',
366: 1:    '✅f(456) = 1221',
366: 1:    '✅f(567) = 3663',
366: 1:    '✅f(678) = 23232',
366: 1:    '✅f(789) = 66066',
366: 1:    '✅f(1234) = 5555',
366: 1:    '✅f(2345) = 7777',
366: 1:    '✅f(3456) = 9999',
366: 1:    '✅f(4567) = 12221',
366: 1:    '✅f(5678) = 48884',
366: 1:    '✅f(6789) = 993399',
366: 1:    '❌f(7890) = ??? != 993399'
366: 1:  ],
366: 1:  'level': 13,
366: 1:  'nextQuestion': '7890',
366: 1:  'questions': [
366: 1:    '1',
366: 1:    '2',
366: 1:    '3',
366: 1:    '4',
366: 1:    '5',
366: 1:    '6',
366: 1:    '7',
366: 1:    '9',
366: 1:    '10',
366: 1:    '11',
366: 1:    '12',
366: 1:    '123',
366: 1:    '234',
366: 1:    '345',
366: 1:    '456',
366: 1:    '567',
366: 1:    '678',
366: 1:    '789',
366: 1:    '1234',
366: 1:    '2345',
366: 1:    '3456',
366: 1:    '4567',
366: 1:    '5678',
366: 1:    '6789',
366: 1:    '7890'
366: 1:  ]
366: 1:}
366: 1:Scores: 32590
366: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399']')
366: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
367: 1:BoardData {
367: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
367: 1:  'expectedAnswer': '66666',
367: 1:  'history': [
367: 1:    {
367: 1:      'answer': '2',
367: 1:      'question': '1',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '4',
367: 1:      'question': '2',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '6',
367: 1:      'question': '3',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '8',
367: 1:      'question': '4',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '11',
367: 1:      'question': '5',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '33',
367: 1:      'question': '6',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '55',
367: 1:      'question': '7',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '99',
367: 1:      'question': '9',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '11',
367: 1:      'question': '10',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '22',
367: 1:      'question': '11',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '33',
367: 1:      'question': '12',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '444',
367: 1:      'question': '123',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '666',
367: 1:      'question': '234',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '888',
367: 1:      'question': '345',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '1221',
367: 1:      'question': '456',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '3663',
367: 1:      'question': '567',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '23232',
367: 1:      'question': '678',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '66066',
367: 1:      'question': '789',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '5555',
367: 1:      'question': '1234',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '7777',
367: 1:      'question': '2345',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '9999',
367: 1:      'question': '3456',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '12221',
367: 1:      'question': '4567',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '48884',
367: 1:      'question': '5678',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '993399',
367: 1:      'question': '6789',
367: 1:      'valid': true
367: 1:    },
367: 1:    {
367: 1:      'answer': '993399',
367: 1:      'question': '7890',
367: 1:      'valid': true
367: 1:    }
367: 1:  ],
367: 1:  'info': [
367: 1:    '✅f(1) = 2',
367: 1:    '✅f(2) = 4',
367: 1:    '✅f(3) = 6',
367: 1:    '✅f(4) = 8',
367: 1:    '✅f(5) = 11',
367: 1:    '✅f(6) = 33',
367: 1:    '✅f(7) = 55',
367: 1:    '✅f(9) = 99',
367: 1:    '✅f(10) = 11',
367: 1:    '✅f(11) = 22',
367: 1:    '✅f(12) = 33',
367: 1:    '✅f(123) = 444',
367: 1:    '✅f(234) = 666',
367: 1:    '✅f(345) = 888',
367: 1:    '✅f(456) = 1221',
367: 1:    '✅f(567) = 3663',
367: 1:    '✅f(678) = 23232',
367: 1:    '✅f(789) = 66066',
367: 1:    '✅f(1234) = 5555',
367: 1:    '✅f(2345) = 7777',
367: 1:    '✅f(3456) = 9999',
367: 1:    '✅f(4567) = 12221',
367: 1:    '✅f(5678) = 48884',
367: 1:    '✅f(6789) = 993399',
367: 1:    '✅f(7890) = 993399',
367: 1:    '❌f(12345) = ??? != 66666'
367: 1:  ],
367: 1:  'level': 13,
367: 1:  'nextQuestion': '12345',
367: 1:  'questions': [
367: 1:    '1',
367: 1:    '2',
367: 1:    '3',
367: 1:    '4',
367: 1:    '5',
367: 1:    '6',
367: 1:    '7',
367: 1:    '9',
367: 1:    '10',
367: 1:    '11',
367: 1:    '12',
367: 1:    '123',
367: 1:    '234',
367: 1:    '345',
367: 1:    '456',
367: 1:    '567',
367: 1:    '678',
367: 1:    '789',
367: 1:    '1234',
367: 1:    '2345',
367: 1:    '3456',
367: 1:    '4567',
367: 1:    '5678',
367: 1:    '6789',
367: 1:    '7890',
367: 1:    '12345'
367: 1:  ]
367: 1:}
367: 1:Scores: 32604
367: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666']')
367: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
368: 1:BoardData {
368: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
368: 1:  'expectedAnswer': '777777',
368: 1:  'history': [
368: 1:    {
368: 1:      'answer': '2',
368: 1:      'question': '1',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '4',
368: 1:      'question': '2',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '6',
368: 1:      'question': '3',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '8',
368: 1:      'question': '4',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '11',
368: 1:      'question': '5',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '33',
368: 1:      'question': '6',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '55',
368: 1:      'question': '7',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '99',
368: 1:      'question': '9',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '11',
368: 1:      'question': '10',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '22',
368: 1:      'question': '11',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '33',
368: 1:      'question': '12',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '444',
368: 1:      'question': '123',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '666',
368: 1:      'question': '234',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '888',
368: 1:      'question': '345',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '1221',
368: 1:      'question': '456',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '3663',
368: 1:      'question': '567',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '23232',
368: 1:      'question': '678',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '66066',
368: 1:      'question': '789',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '5555',
368: 1:      'question': '1234',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '7777',
368: 1:      'question': '2345',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '9999',
368: 1:      'question': '3456',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '12221',
368: 1:      'question': '4567',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '48884',
368: 1:      'question': '5678',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '993399',
368: 1:      'question': '6789',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '993399',
368: 1:      'question': '7890',
368: 1:      'valid': true
368: 1:    },
368: 1:    {
368: 1:      'answer': '66666',
368: 1:      'question': '12345',
368: 1:      'valid': true
368: 1:    }
368: 1:  ],
368: 1:  'info': [
368: 1:    '✅f(1) = 2',
368: 1:    '✅f(2) = 4',
368: 1:    '✅f(3) = 6',
368: 1:    '✅f(4) = 8',
368: 1:    '✅f(5) = 11',
368: 1:    '✅f(6) = 33',
368: 1:    '✅f(7) = 55',
368: 1:    '✅f(9) = 99',
368: 1:    '✅f(10) = 11',
368: 1:    '✅f(11) = 22',
368: 1:    '✅f(12) = 33',
368: 1:    '✅f(123) = 444',
368: 1:    '✅f(234) = 666',
368: 1:    '✅f(345) = 888',
368: 1:    '✅f(456) = 1221',
368: 1:    '✅f(567) = 3663',
368: 1:    '✅f(678) = 23232',
368: 1:    '✅f(789) = 66066',
368: 1:    '✅f(1234) = 5555',
368: 1:    '✅f(2345) = 7777',
368: 1:    '✅f(3456) = 9999',
368: 1:    '✅f(4567) = 12221',
368: 1:    '✅f(5678) = 48884',
368: 1:    '✅f(6789) = 993399',
368: 1:    '✅f(7890) = 993399',
368: 1:    '✅f(12345) = 66666',
368: 1:    '❌f(123456) = ??? != 777777'
368: 1:  ],
368: 1:  'level': 13,
368: 1:  'nextQuestion': '123456',
368: 1:  'questions': [
368: 1:    '1',
368: 1:    '2',
368: 1:    '3',
368: 1:    '4',
368: 1:    '5',
368: 1:    '6',
368: 1:    '7',
368: 1:    '9',
368: 1:    '10',
368: 1:    '11',
368: 1:    '12',
368: 1:    '123',
368: 1:    '234',
368: 1:    '345',
368: 1:    '456',
368: 1:    '567',
368: 1:    '678',
368: 1:    '789',
368: 1:    '1234',
368: 1:    '2345',
368: 1:    '3456',
368: 1:    '4567',
368: 1:    '5678',
368: 1:    '6789',
368: 1:    '7890',
368: 1:    '12345',
368: 1:    '123456'
368: 1:  ]
368: 1:}
368: 1:Scores: 32618
368: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777']')
368: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
369: 1:BoardData {
369: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
369: 1:  'expectedAnswer': '8888888',
369: 1:  'history': [
369: 1:    {
369: 1:      'answer': '2',
369: 1:      'question': '1',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '4',
369: 1:      'question': '2',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '6',
369: 1:      'question': '3',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '8',
369: 1:      'question': '4',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '11',
369: 1:      'question': '5',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '33',
369: 1:      'question': '6',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '55',
369: 1:      'question': '7',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '99',
369: 1:      'question': '9',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '11',
369: 1:      'question': '10',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '22',
369: 1:      'question': '11',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '33',
369: 1:      'question': '12',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '444',
369: 1:      'question': '123',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '666',
369: 1:      'question': '234',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '888',
369: 1:      'question': '345',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '1221',
369: 1:      'question': '456',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '3663',
369: 1:      'question': '567',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '23232',
369: 1:      'question': '678',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '66066',
369: 1:      'question': '789',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '5555',
369: 1:      'question': '1234',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '7777',
369: 1:      'question': '2345',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '9999',
369: 1:      'question': '3456',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '12221',
369: 1:      'question': '4567',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '48884',
369: 1:      'question': '5678',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '993399',
369: 1:      'question': '6789',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '993399',
369: 1:      'question': '7890',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '66666',
369: 1:      'question': '12345',
369: 1:      'valid': true
369: 1:    },
369: 1:    {
369: 1:      'answer': '777777',
369: 1:      'question': '123456',
369: 1:      'valid': true
369: 1:    }
369: 1:  ],
369: 1:  'info': [
369: 1:    '✅f(1) = 2',
369: 1:    '✅f(2) = 4',
369: 1:    '✅f(3) = 6',
369: 1:    '✅f(4) = 8',
369: 1:    '✅f(5) = 11',
369: 1:    '✅f(6) = 33',
369: 1:    '✅f(7) = 55',
369: 1:    '✅f(9) = 99',
369: 1:    '✅f(10) = 11',
369: 1:    '✅f(11) = 22',
369: 1:    '✅f(12) = 33',
369: 1:    '✅f(123) = 444',
369: 1:    '✅f(234) = 666',
369: 1:    '✅f(345) = 888',
369: 1:    '✅f(456) = 1221',
369: 1:    '✅f(567) = 3663',
369: 1:    '✅f(678) = 23232',
369: 1:    '✅f(789) = 66066',
369: 1:    '✅f(1234) = 5555',
369: 1:    '✅f(2345) = 7777',
369: 1:    '✅f(3456) = 9999',
369: 1:    '✅f(4567) = 12221',
369: 1:    '✅f(5678) = 48884',
369: 1:    '✅f(6789) = 993399',
369: 1:    '✅f(7890) = 993399',
369: 1:    '✅f(12345) = 66666',
369: 1:    '✅f(123456) = 777777',
369: 1:    '❌f(1234567) = ??? != 8888888'
369: 1:  ],
369: 1:  'level': 13,
369: 1:  'nextQuestion': '1234567',
369: 1:  'questions': [
369: 1:    '1',
369: 1:    '2',
369: 1:    '3',
369: 1:    '4',
369: 1:    '5',
369: 1:    '6',
369: 1:    '7',
369: 1:    '9',
369: 1:    '10',
369: 1:    '11',
369: 1:    '12',
369: 1:    '123',
369: 1:    '234',
369: 1:    '345',
369: 1:    '456',
369: 1:    '567',
369: 1:    '678',
369: 1:    '789',
369: 1:    '1234',
369: 1:    '2345',
369: 1:    '3456',
369: 1:    '4567',
369: 1:    '5678',
369: 1:    '6789',
369: 1:    '7890',
369: 1:    '12345',
369: 1:    '123456',
369: 1:    '1234567'
369: 1:  ]
369: 1:}
369: 1:Scores: 32632
369: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888']')
369: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
370: 1:BoardData {
370: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
370: 1:  'expectedAnswer': '99999999',
370: 1:  'history': [
370: 1:    {
370: 1:      'answer': '2',
370: 1:      'question': '1',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '4',
370: 1:      'question': '2',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '6',
370: 1:      'question': '3',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '8',
370: 1:      'question': '4',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '11',
370: 1:      'question': '5',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '33',
370: 1:      'question': '6',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '55',
370: 1:      'question': '7',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '99',
370: 1:      'question': '9',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '11',
370: 1:      'question': '10',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '22',
370: 1:      'question': '11',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '33',
370: 1:      'question': '12',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '444',
370: 1:      'question': '123',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '666',
370: 1:      'question': '234',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '888',
370: 1:      'question': '345',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '1221',
370: 1:      'question': '456',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '3663',
370: 1:      'question': '567',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '23232',
370: 1:      'question': '678',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '66066',
370: 1:      'question': '789',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '5555',
370: 1:      'question': '1234',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '7777',
370: 1:      'question': '2345',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '9999',
370: 1:      'question': '3456',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '12221',
370: 1:      'question': '4567',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '48884',
370: 1:      'question': '5678',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '993399',
370: 1:      'question': '6789',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '993399',
370: 1:      'question': '7890',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '66666',
370: 1:      'question': '12345',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '777777',
370: 1:      'question': '123456',
370: 1:      'valid': true
370: 1:    },
370: 1:    {
370: 1:      'answer': '8888888',
370: 1:      'question': '1234567',
370: 1:      'valid': true
370: 1:    }
370: 1:  ],
370: 1:  'info': [
370: 1:    '✅f(1) = 2',
370: 1:    '✅f(2) = 4',
370: 1:    '✅f(3) = 6',
370: 1:    '✅f(4) = 8',
370: 1:    '✅f(5) = 11',
370: 1:    '✅f(6) = 33',
370: 1:    '✅f(7) = 55',
370: 1:    '✅f(9) = 99',
370: 1:    '✅f(10) = 11',
370: 1:    '✅f(11) = 22',
370: 1:    '✅f(12) = 33',
370: 1:    '✅f(123) = 444',
370: 1:    '✅f(234) = 666',
370: 1:    '✅f(345) = 888',
370: 1:    '✅f(456) = 1221',
370: 1:    '✅f(567) = 3663',
370: 1:    '✅f(678) = 23232',
370: 1:    '✅f(789) = 66066',
370: 1:    '✅f(1234) = 5555',
370: 1:    '✅f(2345) = 7777',
370: 1:    '✅f(3456) = 9999',
370: 1:    '✅f(4567) = 12221',
370: 1:    '✅f(5678) = 48884',
370: 1:    '✅f(6789) = 993399',
370: 1:    '✅f(7890) = 993399',
370: 1:    '✅f(12345) = 66666',
370: 1:    '✅f(123456) = 777777',
370: 1:    '✅f(1234567) = 8888888',
370: 1:    '❌f(12345678) = ??? != 99999999'
370: 1:  ],
370: 1:  'level': 13,
370: 1:  'nextQuestion': '12345678',
370: 1:  'questions': [
370: 1:    '1',
370: 1:    '2',
370: 1:    '3',
370: 1:    '4',
370: 1:    '5',
370: 1:    '6',
370: 1:    '7',
370: 1:    '9',
370: 1:    '10',
370: 1:    '11',
370: 1:    '12',
370: 1:    '123',
370: 1:    '234',
370: 1:    '345',
370: 1:    '456',
370: 1:    '567',
370: 1:    '678',
370: 1:    '789',
370: 1:    '1234',
370: 1:    '2345',
370: 1:    '3456',
370: 1:    '4567',
370: 1:    '5678',
370: 1:    '6789',
370: 1:    '7890',
370: 1:    '12345',
370: 1:    '123456',
370: 1:    '1234567',
370: 1:    '12345678'
370: 1:  ]
370: 1:}
370: 1:Scores: 32646
370: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999']')
370: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
371: 1:BoardData {
371: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
371: 1:  'expectedAnswer': '1222222221',
371: 1:  'history': [
371: 1:    {
371: 1:      'answer': '2',
371: 1:      'question': '1',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '4',
371: 1:      'question': '2',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '6',
371: 1:      'question': '3',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '8',
371: 1:      'question': '4',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '11',
371: 1:      'question': '5',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '33',
371: 1:      'question': '6',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '55',
371: 1:      'question': '7',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '99',
371: 1:      'question': '9',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '11',
371: 1:      'question': '10',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '22',
371: 1:      'question': '11',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '33',
371: 1:      'question': '12',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '444',
371: 1:      'question': '123',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '666',
371: 1:      'question': '234',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '888',
371: 1:      'question': '345',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '1221',
371: 1:      'question': '456',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '3663',
371: 1:      'question': '567',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '23232',
371: 1:      'question': '678',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '66066',
371: 1:      'question': '789',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '5555',
371: 1:      'question': '1234',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '7777',
371: 1:      'question': '2345',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '9999',
371: 1:      'question': '3456',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '12221',
371: 1:      'question': '4567',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '48884',
371: 1:      'question': '5678',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '993399',
371: 1:      'question': '6789',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '993399',
371: 1:      'question': '7890',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '66666',
371: 1:      'question': '12345',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '777777',
371: 1:      'question': '123456',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '8888888',
371: 1:      'question': '1234567',
371: 1:      'valid': true
371: 1:    },
371: 1:    {
371: 1:      'answer': '99999999',
371: 1:      'question': '12345678',
371: 1:      'valid': true
371: 1:    }
371: 1:  ],
371: 1:  'info': [
371: 1:    '✅f(1) = 2',
371: 1:    '✅f(2) = 4',
371: 1:    '✅f(3) = 6',
371: 1:    '✅f(4) = 8',
371: 1:    '✅f(5) = 11',
371: 1:    '✅f(6) = 33',
371: 1:    '✅f(7) = 55',
371: 1:    '✅f(9) = 99',
371: 1:    '✅f(10) = 11',
371: 1:    '✅f(11) = 22',
371: 1:    '✅f(12) = 33',
371: 1:    '✅f(123) = 444',
371: 1:    '✅f(234) = 666',
371: 1:    '✅f(345) = 888',
371: 1:    '✅f(456) = 1221',
371: 1:    '✅f(567) = 3663',
371: 1:    '✅f(678) = 23232',
371: 1:    '✅f(789) = 66066',
371: 1:    '✅f(1234) = 5555',
371: 1:    '✅f(2345) = 7777',
371: 1:    '✅f(3456) = 9999',
371: 1:    '✅f(4567) = 12221',
371: 1:    '✅f(5678) = 48884',
371: 1:    '✅f(6789) = 993399',
371: 1:    '✅f(7890) = 993399',
371: 1:    '✅f(12345) = 66666',
371: 1:    '✅f(123456) = 777777',
371: 1:    '✅f(1234567) = 8888888',
371: 1:    '✅f(12345678) = 99999999',
371: 1:    '❌f(123456789) = ??? != 1222222221'
371: 1:  ],
371: 1:  'level': 13,
371: 1:  'nextQuestion': '123456789',
371: 1:  'questions': [
371: 1:    '1',
371: 1:    '2',
371: 1:    '3',
371: 1:    '4',
371: 1:    '5',
371: 1:    '6',
371: 1:    '7',
371: 1:    '9',
371: 1:    '10',
371: 1:    '11',
371: 1:    '12',
371: 1:    '123',
371: 1:    '234',
371: 1:    '345',
371: 1:    '456',
371: 1:    '567',
371: 1:    '678',
371: 1:    '789',
371: 1:    '1234',
371: 1:    '2345',
371: 1:    '3456',
371: 1:    '4567',
371: 1:    '5678',
371: 1:    '6789',
371: 1:    '7890',
371: 1:    '12345',
371: 1:    '123456',
371: 1:    '1234567',
371: 1:    '12345678',
371: 1:    '123456789'
371: 1:  ]
371: 1:}
371: 1:Scores: 32660
371: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999', '1222222221']')
371: 1:Fire Event: PassTest{complexity=45, testCount=31}
------------------------------------------
372: 1:BoardData {
372: 1:  'description': ['For the most of numbers iterative 'reverse and add' actions lead to palindrome number. For example: \nNumber 23: 23 + 32 = 55; \nNumber 254: 254 + 452 = 706; 706 + 607 = 1313; 1313 + 3131 = 4444;\nWrite a method which calculates 'ReverseAndAdd' palindrome for a number. i.e f(23) = 55; f(254) = 4444'],
372: 1:  'expectedAnswer': '3344444433',
372: 1:  'history': [
372: 1:    {
372: 1:      'answer': '2',
372: 1:      'question': '1',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '4',
372: 1:      'question': '2',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '6',
372: 1:      'question': '3',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '8',
372: 1:      'question': '4',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '11',
372: 1:      'question': '5',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '33',
372: 1:      'question': '6',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '55',
372: 1:      'question': '7',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '99',
372: 1:      'question': '9',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '11',
372: 1:      'question': '10',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '22',
372: 1:      'question': '11',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '33',
372: 1:      'question': '12',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '444',
372: 1:      'question': '123',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '666',
372: 1:      'question': '234',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '888',
372: 1:      'question': '345',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '1221',
372: 1:      'question': '456',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '3663',
372: 1:      'question': '567',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '23232',
372: 1:      'question': '678',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '66066',
372: 1:      'question': '789',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '5555',
372: 1:      'question': '1234',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '7777',
372: 1:      'question': '2345',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '9999',
372: 1:      'question': '3456',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '12221',
372: 1:      'question': '4567',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '48884',
372: 1:      'question': '5678',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '993399',
372: 1:      'question': '6789',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '993399',
372: 1:      'question': '7890',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '66666',
372: 1:      'question': '12345',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '777777',
372: 1:      'question': '123456',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '8888888',
372: 1:      'question': '1234567',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '99999999',
372: 1:      'question': '12345678',
372: 1:      'valid': true
372: 1:    },
372: 1:    {
372: 1:      'answer': '1222222221',
372: 1:      'question': '123456789',
372: 1:      'valid': true
372: 1:    }
372: 1:  ],
372: 1:  'info': [
372: 1:    '✅f(1) = 2',
372: 1:    '✅f(2) = 4',
372: 1:    '✅f(3) = 6',
372: 1:    '✅f(4) = 8',
372: 1:    '✅f(5) = 11',
372: 1:    '✅f(6) = 33',
372: 1:    '✅f(7) = 55',
372: 1:    '✅f(9) = 99',
372: 1:    '✅f(10) = 11',
372: 1:    '✅f(11) = 22',
372: 1:    '✅f(12) = 33',
372: 1:    '✅f(123) = 444',
372: 1:    '✅f(234) = 666',
372: 1:    '✅f(345) = 888',
372: 1:    '✅f(456) = 1221',
372: 1:    '✅f(567) = 3663',
372: 1:    '✅f(678) = 23232',
372: 1:    '✅f(789) = 66066',
372: 1:    '✅f(1234) = 5555',
372: 1:    '✅f(2345) = 7777',
372: 1:    '✅f(3456) = 9999',
372: 1:    '✅f(4567) = 12221',
372: 1:    '✅f(5678) = 48884',
372: 1:    '✅f(6789) = 993399',
372: 1:    '✅f(7890) = 993399',
372: 1:    '✅f(12345) = 66666',
372: 1:    '✅f(123456) = 777777',
372: 1:    '✅f(1234567) = 8888888',
372: 1:    '✅f(12345678) = 99999999',
372: 1:    '✅f(123456789) = 1222222221',
372: 1:    '❌f(1234567890) = ??? != 3344444433'
372: 1:  ],
372: 1:  'level': 13,
372: 1:  'nextQuestion': '1234567890',
372: 1:  'questions': [
372: 1:    '1',
372: 1:    '2',
372: 1:    '3',
372: 1:    '4',
372: 1:    '5',
372: 1:    '6',
372: 1:    '7',
372: 1:    '9',
372: 1:    '10',
372: 1:    '11',
372: 1:    '12',
372: 1:    '123',
372: 1:    '234',
372: 1:    '345',
372: 1:    '456',
372: 1:    '567',
372: 1:    '678',
372: 1:    '789',
372: 1:    '1234',
372: 1:    '2345',
372: 1:    '3456',
372: 1:    '4567',
372: 1:    '5678',
372: 1:    '6789',
372: 1:    '7890',
372: 1:    '12345',
372: 1:    '123456',
372: 1:    '1234567',
372: 1:    '12345678',
372: 1:    '123456789',
372: 1:    '1234567890'
372: 1:  ]
372: 1:}
372: 1:Scores: 32674
372: 1:Answer: message('['2', '4', '6', '8', '11', '33', '55', '99', '11', '22', '33', '444', '666', '888', '1221', '3663', '23232', '66066', '5555', '7777', '9999', '12221', '48884', '993399', '993399', '66666', '777777', '8888888', '99999999', '1222222221', '3344444433']')
372: 1:Fire Event: PassTest{complexity=45, testCount=31}
372: 1:Fire Event: NextAlgorithm{complexity=45, time=0}
------------------------------------------
373: 1:BoardData {
373: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
373: 1:  'history': [
373: 1:    {
373: 1:      'answer': '2',
373: 1:      'question': '1',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '4',
373: 1:      'question': '2',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '6',
373: 1:      'question': '3',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '8',
373: 1:      'question': '4',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '11',
373: 1:      'question': '5',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '33',
373: 1:      'question': '6',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '55',
373: 1:      'question': '7',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '99',
373: 1:      'question': '9',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '11',
373: 1:      'question': '10',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '22',
373: 1:      'question': '11',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '33',
373: 1:      'question': '12',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '444',
373: 1:      'question': '123',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '666',
373: 1:      'question': '234',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '888',
373: 1:      'question': '345',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '1221',
373: 1:      'question': '456',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '3663',
373: 1:      'question': '567',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '23232',
373: 1:      'question': '678',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '66066',
373: 1:      'question': '789',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '5555',
373: 1:      'question': '1234',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '7777',
373: 1:      'question': '2345',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '9999',
373: 1:      'question': '3456',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '12221',
373: 1:      'question': '4567',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '48884',
373: 1:      'question': '5678',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '993399',
373: 1:      'question': '6789',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '993399',
373: 1:      'question': '7890',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '66666',
373: 1:      'question': '12345',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '777777',
373: 1:      'question': '123456',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '8888888',
373: 1:      'question': '1234567',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '99999999',
373: 1:      'question': '12345678',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '1222222221',
373: 1:      'question': '123456789',
373: 1:      'valid': true
373: 1:    },
373: 1:    {
373: 1:      'answer': '3344444433',
373: 1:      'question': '1234567890',
373: 1:      'valid': true
373: 1:    }
373: 1:  ],
373: 1:  'info': [
373: 1:    '✅f(1) = 2',
373: 1:    '✅f(2) = 4',
373: 1:    '✅f(3) = 6',
373: 1:    '✅f(4) = 8',
373: 1:    '✅f(5) = 11',
373: 1:    '✅f(6) = 33',
373: 1:    '✅f(7) = 55',
373: 1:    '✅f(9) = 99',
373: 1:    '✅f(10) = 11',
373: 1:    '✅f(11) = 22',
373: 1:    '✅f(12) = 33',
373: 1:    '✅f(123) = 444',
373: 1:    '✅f(234) = 666',
373: 1:    '✅f(345) = 888',
373: 1:    '✅f(456) = 1221',
373: 1:    '✅f(567) = 3663',
373: 1:    '✅f(678) = 23232',
373: 1:    '✅f(789) = 66066',
373: 1:    '✅f(1234) = 5555',
373: 1:    '✅f(2345) = 7777',
373: 1:    '✅f(3456) = 9999',
373: 1:    '✅f(4567) = 12221',
373: 1:    '✅f(5678) = 48884',
373: 1:    '✅f(6789) = 993399',
373: 1:    '✅f(7890) = 993399',
373: 1:    '✅f(12345) = 66666',
373: 1:    '✅f(123456) = 777777',
373: 1:    '✅f(1234567) = 8888888',
373: 1:    '✅f(12345678) = 99999999',
373: 1:    '✅f(123456789) = 1222222221',
373: 1:    '✅f(1234567890) = 3344444433'
373: 1:  ],
373: 1:  'level': 13,
373: 1:  'questions': []
373: 1:}
373: 1:Scores: 38762
373: 1:Answer: message('StartNextLevel')
373: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
374: 1:BoardData {
374: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
374: 1:  'expectedAnswer': '971',
374: 1:  'history': [],
374: 1:  'info': ['❌f(1) = ??? != 971'],
374: 1:  'level': 14,
374: 1:  'nextQuestion': '1',
374: 1:  'questions': ['1']
374: 1:}
374: 1:Scores: 38762
374: 1:Answer: message('['971']')
374: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
375: 1:BoardData {
375: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
375: 1:  'expectedAnswer': '874',
375: 1:  'history': [{
375: 1:    'answer': '971',
375: 1:    'question': '1',
375: 1:    'valid': true
375: 1:  }],
375: 1:  'info': [
375: 1:    '✅f(1) = 971',
375: 1:    '❌f(2) = ??? != 874'
375: 1:  ],
375: 1:  'level': 14,
375: 1:  'nextQuestion': '2',
375: 1:  'questions': [
375: 1:    '1',
375: 1:    '2'
375: 1:  ]
375: 1:}
375: 1:Scores: 38782
375: 1:Answer: message('['971', '874']')
375: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
376: 1:BoardData {
376: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
376: 1:  'expectedAnswer': '787',
376: 1:  'history': [
376: 1:    {
376: 1:      'answer': '971',
376: 1:      'question': '1',
376: 1:      'valid': true
376: 1:    },
376: 1:    {
376: 1:      'answer': '874',
376: 1:      'question': '2',
376: 1:      'valid': true
376: 1:    }
376: 1:  ],
376: 1:  'info': [
376: 1:    '✅f(1) = 971',
376: 1:    '✅f(2) = 874',
376: 1:    '❌f(3) = ??? != 787'
376: 1:  ],
376: 1:  'level': 14,
376: 1:  'nextQuestion': '3',
376: 1:  'questions': [
376: 1:    '1',
376: 1:    '2',
376: 1:    '3'
376: 1:  ]
376: 1:}
376: 1:Scores: 38802
376: 1:Answer: message('['971', '874', '787']')
376: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
377: 1:BoardData {
377: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
377: 1:  'expectedAnswer': '709',
377: 1:  'history': [
377: 1:    {
377: 1:      'answer': '971',
377: 1:      'question': '1',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '874',
377: 1:      'question': '2',
377: 1:      'valid': true
377: 1:    },
377: 1:    {
377: 1:      'answer': '787',
377: 1:      'question': '3',
377: 1:      'valid': true
377: 1:    }
377: 1:  ],
377: 1:  'info': [
377: 1:    '✅f(1) = 971',
377: 1:    '✅f(2) = 874',
377: 1:    '✅f(3) = 787',
377: 1:    '❌f(4) = ??? != 709'
377: 1:  ],
377: 1:  'level': 14,
377: 1:  'nextQuestion': '4',
377: 1:  'questions': [
377: 1:    '1',
377: 1:    '2',
377: 1:    '3',
377: 1:    '4'
377: 1:  ]
377: 1:}
377: 1:Scores: 38822
377: 1:Answer: message('['971', '874', '787', '709']')
377: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
378: 1:BoardData {
378: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
378: 1:  'expectedAnswer': '639',
378: 1:  'history': [
378: 1:    {
378: 1:      'answer': '971',
378: 1:      'question': '1',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '874',
378: 1:      'question': '2',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '787',
378: 1:      'question': '3',
378: 1:      'valid': true
378: 1:    },
378: 1:    {
378: 1:      'answer': '709',
378: 1:      'question': '4',
378: 1:      'valid': true
378: 1:    }
378: 1:  ],
378: 1:  'info': [
378: 1:    '✅f(1) = 971',
378: 1:    '✅f(2) = 874',
378: 1:    '✅f(3) = 787',
378: 1:    '✅f(4) = 709',
378: 1:    '❌f(5) = ??? != 639'
378: 1:  ],
378: 1:  'level': 14,
378: 1:  'nextQuestion': '5',
378: 1:  'questions': [
378: 1:    '1',
378: 1:    '2',
378: 1:    '3',
378: 1:    '4',
378: 1:    '5'
378: 1:  ]
378: 1:}
378: 1:Scores: 38842
378: 1:Answer: message('['971', '874', '787', '709', '639']')
378: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
379: 1:BoardData {
379: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
379: 1:  'expectedAnswer': '576',
379: 1:  'history': [
379: 1:    {
379: 1:      'answer': '971',
379: 1:      'question': '1',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '874',
379: 1:      'question': '2',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '787',
379: 1:      'question': '3',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '709',
379: 1:      'question': '4',
379: 1:      'valid': true
379: 1:    },
379: 1:    {
379: 1:      'answer': '639',
379: 1:      'question': '5',
379: 1:      'valid': true
379: 1:    }
379: 1:  ],
379: 1:  'info': [
379: 1:    '✅f(1) = 971',
379: 1:    '✅f(2) = 874',
379: 1:    '✅f(3) = 787',
379: 1:    '✅f(4) = 709',
379: 1:    '✅f(5) = 639',
379: 1:    '❌f(6) = ??? != 576'
379: 1:  ],
379: 1:  'level': 14,
379: 1:  'nextQuestion': '6',
379: 1:  'questions': [
379: 1:    '1',
379: 1:    '2',
379: 1:    '3',
379: 1:    '4',
379: 1:    '5',
379: 1:    '6'
379: 1:  ]
379: 1:}
379: 1:Scores: 38862
379: 1:Answer: message('['971', '874', '787', '709', '639', '576']')
379: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
380: 1:BoardData {
380: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
380: 1:  'expectedAnswer': '519',
380: 1:  'history': [
380: 1:    {
380: 1:      'answer': '971',
380: 1:      'question': '1',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '874',
380: 1:      'question': '2',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '787',
380: 1:      'question': '3',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '709',
380: 1:      'question': '4',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '639',
380: 1:      'question': '5',
380: 1:      'valid': true
380: 1:    },
380: 1:    {
380: 1:      'answer': '576',
380: 1:      'question': '6',
380: 1:      'valid': true
380: 1:    }
380: 1:  ],
380: 1:  'info': [
380: 1:    '✅f(1) = 971',
380: 1:    '✅f(2) = 874',
380: 1:    '✅f(3) = 787',
380: 1:    '✅f(4) = 709',
380: 1:    '✅f(5) = 639',
380: 1:    '✅f(6) = 576',
380: 1:    '❌f(7) = ??? != 519'
380: 1:  ],
380: 1:  'level': 14,
380: 1:  'nextQuestion': '7',
380: 1:  'questions': [
380: 1:    '1',
380: 1:    '2',
380: 1:    '3',
380: 1:    '4',
380: 1:    '5',
380: 1:    '6',
380: 1:    '7'
380: 1:  ]
380: 1:}
380: 1:Scores: 38882
380: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519']')
380: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
381: 1:BoardData {
381: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
381: 1:  'expectedAnswer': '468',
381: 1:  'history': [
381: 1:    {
381: 1:      'answer': '971',
381: 1:      'question': '1',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '874',
381: 1:      'question': '2',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '787',
381: 1:      'question': '3',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '709',
381: 1:      'question': '4',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '639',
381: 1:      'question': '5',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '576',
381: 1:      'question': '6',
381: 1:      'valid': true
381: 1:    },
381: 1:    {
381: 1:      'answer': '519',
381: 1:      'question': '7',
381: 1:      'valid': true
381: 1:    }
381: 1:  ],
381: 1:  'info': [
381: 1:    '✅f(1) = 971',
381: 1:    '✅f(2) = 874',
381: 1:    '✅f(3) = 787',
381: 1:    '✅f(4) = 709',
381: 1:    '✅f(5) = 639',
381: 1:    '✅f(6) = 576',
381: 1:    '✅f(7) = 519',
381: 1:    '❌f(8) = ??? != 468'
381: 1:  ],
381: 1:  'level': 14,
381: 1:  'nextQuestion': '8',
381: 1:  'questions': [
381: 1:    '1',
381: 1:    '2',
381: 1:    '3',
381: 1:    '4',
381: 1:    '5',
381: 1:    '6',
381: 1:    '7',
381: 1:    '8'
381: 1:  ]
381: 1:}
381: 1:Scores: 38902
381: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468']')
381: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
382: 1:BoardData {
382: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
382: 1:  'expectedAnswer': '422',
382: 1:  'history': [
382: 1:    {
382: 1:      'answer': '971',
382: 1:      'question': '1',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '874',
382: 1:      'question': '2',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '787',
382: 1:      'question': '3',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '709',
382: 1:      'question': '4',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '639',
382: 1:      'question': '5',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '576',
382: 1:      'question': '6',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '519',
382: 1:      'question': '7',
382: 1:      'valid': true
382: 1:    },
382: 1:    {
382: 1:      'answer': '468',
382: 1:      'question': '8',
382: 1:      'valid': true
382: 1:    }
382: 1:  ],
382: 1:  'info': [
382: 1:    '✅f(1) = 971',
382: 1:    '✅f(2) = 874',
382: 1:    '✅f(3) = 787',
382: 1:    '✅f(4) = 709',
382: 1:    '✅f(5) = 639',
382: 1:    '✅f(6) = 576',
382: 1:    '✅f(7) = 519',
382: 1:    '✅f(8) = 468',
382: 1:    '❌f(9) = ??? != 422'
382: 1:  ],
382: 1:  'level': 14,
382: 1:  'nextQuestion': '9',
382: 1:  'questions': [
382: 1:    '1',
382: 1:    '2',
382: 1:    '3',
382: 1:    '4',
382: 1:    '5',
382: 1:    '6',
382: 1:    '7',
382: 1:    '8',
382: 1:    '9'
382: 1:  ]
382: 1:}
382: 1:Scores: 38922
382: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422']')
382: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
383: 1:BoardData {
383: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
383: 1:  'expectedAnswer': '380',
383: 1:  'history': [
383: 1:    {
383: 1:      'answer': '971',
383: 1:      'question': '1',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '874',
383: 1:      'question': '2',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '787',
383: 1:      'question': '3',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '709',
383: 1:      'question': '4',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '639',
383: 1:      'question': '5',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '576',
383: 1:      'question': '6',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '519',
383: 1:      'question': '7',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '468',
383: 1:      'question': '8',
383: 1:      'valid': true
383: 1:    },
383: 1:    {
383: 1:      'answer': '422',
383: 1:      'question': '9',
383: 1:      'valid': true
383: 1:    }
383: 1:  ],
383: 1:  'info': [
383: 1:    '✅f(1) = 971',
383: 1:    '✅f(2) = 874',
383: 1:    '✅f(3) = 787',
383: 1:    '✅f(4) = 709',
383: 1:    '✅f(5) = 639',
383: 1:    '✅f(6) = 576',
383: 1:    '✅f(7) = 519',
383: 1:    '✅f(8) = 468',
383: 1:    '✅f(9) = 422',
383: 1:    '❌f(10) = ??? != 380'
383: 1:  ],
383: 1:  'level': 14,
383: 1:  'nextQuestion': '10',
383: 1:  'questions': [
383: 1:    '1',
383: 1:    '2',
383: 1:    '3',
383: 1:    '4',
383: 1:    '5',
383: 1:    '6',
383: 1:    '7',
383: 1:    '8',
383: 1:    '9',
383: 1:    '10'
383: 1:  ]
383: 1:}
383: 1:Scores: 38942
383: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380']')
383: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
384: 1:BoardData {
384: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
384: 1:  'expectedAnswer': '342',
384: 1:  'history': [
384: 1:    {
384: 1:      'answer': '971',
384: 1:      'question': '1',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '874',
384: 1:      'question': '2',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '787',
384: 1:      'question': '3',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '709',
384: 1:      'question': '4',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '639',
384: 1:      'question': '5',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '576',
384: 1:      'question': '6',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '519',
384: 1:      'question': '7',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '468',
384: 1:      'question': '8',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '422',
384: 1:      'question': '9',
384: 1:      'valid': true
384: 1:    },
384: 1:    {
384: 1:      'answer': '380',
384: 1:      'question': '10',
384: 1:      'valid': true
384: 1:    }
384: 1:  ],
384: 1:  'info': [
384: 1:    '✅f(1) = 971',
384: 1:    '✅f(2) = 874',
384: 1:    '✅f(3) = 787',
384: 1:    '✅f(4) = 709',
384: 1:    '✅f(5) = 639',
384: 1:    '✅f(6) = 576',
384: 1:    '✅f(7) = 519',
384: 1:    '✅f(8) = 468',
384: 1:    '✅f(9) = 422',
384: 1:    '✅f(10) = 380',
384: 1:    '❌f(11) = ??? != 342'
384: 1:  ],
384: 1:  'level': 14,
384: 1:  'nextQuestion': '11',
384: 1:  'questions': [
384: 1:    '1',
384: 1:    '2',
384: 1:    '3',
384: 1:    '4',
384: 1:    '5',
384: 1:    '6',
384: 1:    '7',
384: 1:    '8',
384: 1:    '9',
384: 1:    '10',
384: 1:    '11'
384: 1:  ]
384: 1:}
384: 1:Scores: 38962
384: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342']')
384: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
385: 1:BoardData {
385: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
385: 1:  'expectedAnswer': '308',
385: 1:  'history': [
385: 1:    {
385: 1:      'answer': '971',
385: 1:      'question': '1',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '874',
385: 1:      'question': '2',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '787',
385: 1:      'question': '3',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '709',
385: 1:      'question': '4',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '639',
385: 1:      'question': '5',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '576',
385: 1:      'question': '6',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '519',
385: 1:      'question': '7',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '468',
385: 1:      'question': '8',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '422',
385: 1:      'question': '9',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '380',
385: 1:      'question': '10',
385: 1:      'valid': true
385: 1:    },
385: 1:    {
385: 1:      'answer': '342',
385: 1:      'question': '11',
385: 1:      'valid': true
385: 1:    }
385: 1:  ],
385: 1:  'info': [
385: 1:    '✅f(1) = 971',
385: 1:    '✅f(2) = 874',
385: 1:    '✅f(3) = 787',
385: 1:    '✅f(4) = 709',
385: 1:    '✅f(5) = 639',
385: 1:    '✅f(6) = 576',
385: 1:    '✅f(7) = 519',
385: 1:    '✅f(8) = 468',
385: 1:    '✅f(9) = 422',
385: 1:    '✅f(10) = 380',
385: 1:    '✅f(11) = 342',
385: 1:    '❌f(12) = ??? != 308'
385: 1:  ],
385: 1:  'level': 14,
385: 1:  'nextQuestion': '12',
385: 1:  'questions': [
385: 1:    '1',
385: 1:    '2',
385: 1:    '3',
385: 1:    '4',
385: 1:    '5',
385: 1:    '6',
385: 1:    '7',
385: 1:    '8',
385: 1:    '9',
385: 1:    '10',
385: 1:    '11',
385: 1:    '12'
385: 1:  ]
385: 1:}
385: 1:Scores: 38982
385: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308']')
385: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
386: 1:BoardData {
386: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
386: 1:  'expectedAnswer': '278',
386: 1:  'history': [
386: 1:    {
386: 1:      'answer': '971',
386: 1:      'question': '1',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '874',
386: 1:      'question': '2',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '787',
386: 1:      'question': '3',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '709',
386: 1:      'question': '4',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '639',
386: 1:      'question': '5',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '576',
386: 1:      'question': '6',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '519',
386: 1:      'question': '7',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '468',
386: 1:      'question': '8',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '422',
386: 1:      'question': '9',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '380',
386: 1:      'question': '10',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '342',
386: 1:      'question': '11',
386: 1:      'valid': true
386: 1:    },
386: 1:    {
386: 1:      'answer': '308',
386: 1:      'question': '12',
386: 1:      'valid': true
386: 1:    }
386: 1:  ],
386: 1:  'info': [
386: 1:    '✅f(1) = 971',
386: 1:    '✅f(2) = 874',
386: 1:    '✅f(3) = 787',
386: 1:    '✅f(4) = 709',
386: 1:    '✅f(5) = 639',
386: 1:    '✅f(6) = 576',
386: 1:    '✅f(7) = 519',
386: 1:    '✅f(8) = 468',
386: 1:    '✅f(9) = 422',
386: 1:    '✅f(10) = 380',
386: 1:    '✅f(11) = 342',
386: 1:    '✅f(12) = 308',
386: 1:    '❌f(13) = ??? != 278'
386: 1:  ],
386: 1:  'level': 14,
386: 1:  'nextQuestion': '13',
386: 1:  'questions': [
386: 1:    '1',
386: 1:    '2',
386: 1:    '3',
386: 1:    '4',
386: 1:    '5',
386: 1:    '6',
386: 1:    '7',
386: 1:    '8',
386: 1:    '9',
386: 1:    '10',
386: 1:    '11',
386: 1:    '12',
386: 1:    '13'
386: 1:  ]
386: 1:}
386: 1:Scores: 39002
386: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278']')
386: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
387: 1:BoardData {
387: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
387: 1:  'expectedAnswer': '251',
387: 1:  'history': [
387: 1:    {
387: 1:      'answer': '971',
387: 1:      'question': '1',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '874',
387: 1:      'question': '2',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '787',
387: 1:      'question': '3',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '709',
387: 1:      'question': '4',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '639',
387: 1:      'question': '5',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '576',
387: 1:      'question': '6',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '519',
387: 1:      'question': '7',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '468',
387: 1:      'question': '8',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '422',
387: 1:      'question': '9',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '380',
387: 1:      'question': '10',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '342',
387: 1:      'question': '11',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '308',
387: 1:      'question': '12',
387: 1:      'valid': true
387: 1:    },
387: 1:    {
387: 1:      'answer': '278',
387: 1:      'question': '13',
387: 1:      'valid': true
387: 1:    }
387: 1:  ],
387: 1:  'info': [
387: 1:    '✅f(1) = 971',
387: 1:    '✅f(2) = 874',
387: 1:    '✅f(3) = 787',
387: 1:    '✅f(4) = 709',
387: 1:    '✅f(5) = 639',
387: 1:    '✅f(6) = 576',
387: 1:    '✅f(7) = 519',
387: 1:    '✅f(8) = 468',
387: 1:    '✅f(9) = 422',
387: 1:    '✅f(10) = 380',
387: 1:    '✅f(11) = 342',
387: 1:    '✅f(12) = 308',
387: 1:    '✅f(13) = 278',
387: 1:    '❌f(14) = ??? != 251'
387: 1:  ],
387: 1:  'level': 14,
387: 1:  'nextQuestion': '14',
387: 1:  'questions': [
387: 1:    '1',
387: 1:    '2',
387: 1:    '3',
387: 1:    '4',
387: 1:    '5',
387: 1:    '6',
387: 1:    '7',
387: 1:    '8',
387: 1:    '9',
387: 1:    '10',
387: 1:    '11',
387: 1:    '12',
387: 1:    '13',
387: 1:    '14'
387: 1:  ]
387: 1:}
387: 1:Scores: 39022
387: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251']')
387: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
388: 1:BoardData {
388: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
388: 1:  'expectedAnswer': '226',
388: 1:  'history': [
388: 1:    {
388: 1:      'answer': '971',
388: 1:      'question': '1',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '874',
388: 1:      'question': '2',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '787',
388: 1:      'question': '3',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '709',
388: 1:      'question': '4',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '639',
388: 1:      'question': '5',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '576',
388: 1:      'question': '6',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '519',
388: 1:      'question': '7',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '468',
388: 1:      'question': '8',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '422',
388: 1:      'question': '9',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '380',
388: 1:      'question': '10',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '342',
388: 1:      'question': '11',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '308',
388: 1:      'question': '12',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '278',
388: 1:      'question': '13',
388: 1:      'valid': true
388: 1:    },
388: 1:    {
388: 1:      'answer': '251',
388: 1:      'question': '14',
388: 1:      'valid': true
388: 1:    }
388: 1:  ],
388: 1:  'info': [
388: 1:    '✅f(1) = 971',
388: 1:    '✅f(2) = 874',
388: 1:    '✅f(3) = 787',
388: 1:    '✅f(4) = 709',
388: 1:    '✅f(5) = 639',
388: 1:    '✅f(6) = 576',
388: 1:    '✅f(7) = 519',
388: 1:    '✅f(8) = 468',
388: 1:    '✅f(9) = 422',
388: 1:    '✅f(10) = 380',
388: 1:    '✅f(11) = 342',
388: 1:    '✅f(12) = 308',
388: 1:    '✅f(13) = 278',
388: 1:    '✅f(14) = 251',
388: 1:    '❌f(15) = ??? != 226'
388: 1:  ],
388: 1:  'level': 14,
388: 1:  'nextQuestion': '15',
388: 1:  'questions': [
388: 1:    '1',
388: 1:    '2',
388: 1:    '3',
388: 1:    '4',
388: 1:    '5',
388: 1:    '6',
388: 1:    '7',
388: 1:    '8',
388: 1:    '9',
388: 1:    '10',
388: 1:    '11',
388: 1:    '12',
388: 1:    '13',
388: 1:    '14',
388: 1:    '15'
388: 1:  ]
388: 1:}
388: 1:Scores: 39042
388: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226']')
388: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
389: 1:BoardData {
389: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
389: 1:  'expectedAnswer': '204',
389: 1:  'history': [
389: 1:    {
389: 1:      'answer': '971',
389: 1:      'question': '1',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '874',
389: 1:      'question': '2',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '787',
389: 1:      'question': '3',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '709',
389: 1:      'question': '4',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '639',
389: 1:      'question': '5',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '576',
389: 1:      'question': '6',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '519',
389: 1:      'question': '7',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '468',
389: 1:      'question': '8',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '422',
389: 1:      'question': '9',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '380',
389: 1:      'question': '10',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '342',
389: 1:      'question': '11',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '308',
389: 1:      'question': '12',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '278',
389: 1:      'question': '13',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '251',
389: 1:      'question': '14',
389: 1:      'valid': true
389: 1:    },
389: 1:    {
389: 1:      'answer': '226',
389: 1:      'question': '15',
389: 1:      'valid': true
389: 1:    }
389: 1:  ],
389: 1:  'info': [
389: 1:    '✅f(1) = 971',
389: 1:    '✅f(2) = 874',
389: 1:    '✅f(3) = 787',
389: 1:    '✅f(4) = 709',
389: 1:    '✅f(5) = 639',
389: 1:    '✅f(6) = 576',
389: 1:    '✅f(7) = 519',
389: 1:    '✅f(8) = 468',
389: 1:    '✅f(9) = 422',
389: 1:    '✅f(10) = 380',
389: 1:    '✅f(11) = 342',
389: 1:    '✅f(12) = 308',
389: 1:    '✅f(13) = 278',
389: 1:    '✅f(14) = 251',
389: 1:    '✅f(15) = 226',
389: 1:    '❌f(16) = ??? != 204'
389: 1:  ],
389: 1:  'level': 14,
389: 1:  'nextQuestion': '16',
389: 1:  'questions': [
389: 1:    '1',
389: 1:    '2',
389: 1:    '3',
389: 1:    '4',
389: 1:    '5',
389: 1:    '6',
389: 1:    '7',
389: 1:    '8',
389: 1:    '9',
389: 1:    '10',
389: 1:    '11',
389: 1:    '12',
389: 1:    '13',
389: 1:    '14',
389: 1:    '15',
389: 1:    '16'
389: 1:  ]
389: 1:}
389: 1:Scores: 39062
389: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204']')
389: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
390: 1:BoardData {
390: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
390: 1:  'expectedAnswer': '184',
390: 1:  'history': [
390: 1:    {
390: 1:      'answer': '971',
390: 1:      'question': '1',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '874',
390: 1:      'question': '2',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '787',
390: 1:      'question': '3',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '709',
390: 1:      'question': '4',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '639',
390: 1:      'question': '5',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '576',
390: 1:      'question': '6',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '519',
390: 1:      'question': '7',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '468',
390: 1:      'question': '8',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '422',
390: 1:      'question': '9',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '380',
390: 1:      'question': '10',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '342',
390: 1:      'question': '11',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '308',
390: 1:      'question': '12',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '278',
390: 1:      'question': '13',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '251',
390: 1:      'question': '14',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '226',
390: 1:      'question': '15',
390: 1:      'valid': true
390: 1:    },
390: 1:    {
390: 1:      'answer': '204',
390: 1:      'question': '16',
390: 1:      'valid': true
390: 1:    }
390: 1:  ],
390: 1:  'info': [
390: 1:    '✅f(1) = 971',
390: 1:    '✅f(2) = 874',
390: 1:    '✅f(3) = 787',
390: 1:    '✅f(4) = 709',
390: 1:    '✅f(5) = 639',
390: 1:    '✅f(6) = 576',
390: 1:    '✅f(7) = 519',
390: 1:    '✅f(8) = 468',
390: 1:    '✅f(9) = 422',
390: 1:    '✅f(10) = 380',
390: 1:    '✅f(11) = 342',
390: 1:    '✅f(12) = 308',
390: 1:    '✅f(13) = 278',
390: 1:    '✅f(14) = 251',
390: 1:    '✅f(15) = 226',
390: 1:    '✅f(16) = 204',
390: 1:    '❌f(17) = ??? != 184'
390: 1:  ],
390: 1:  'level': 14,
390: 1:  'nextQuestion': '17',
390: 1:  'questions': [
390: 1:    '1',
390: 1:    '2',
390: 1:    '3',
390: 1:    '4',
390: 1:    '5',
390: 1:    '6',
390: 1:    '7',
390: 1:    '8',
390: 1:    '9',
390: 1:    '10',
390: 1:    '11',
390: 1:    '12',
390: 1:    '13',
390: 1:    '14',
390: 1:    '15',
390: 1:    '16',
390: 1:    '17'
390: 1:  ]
390: 1:}
390: 1:Scores: 39082
390: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184']')
390: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
391: 1:BoardData {
391: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
391: 1:  'expectedAnswer': '166',
391: 1:  'history': [
391: 1:    {
391: 1:      'answer': '971',
391: 1:      'question': '1',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '874',
391: 1:      'question': '2',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '787',
391: 1:      'question': '3',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '709',
391: 1:      'question': '4',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '639',
391: 1:      'question': '5',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '576',
391: 1:      'question': '6',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '519',
391: 1:      'question': '7',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '468',
391: 1:      'question': '8',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '422',
391: 1:      'question': '9',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '380',
391: 1:      'question': '10',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '342',
391: 1:      'question': '11',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '308',
391: 1:      'question': '12',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '278',
391: 1:      'question': '13',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '251',
391: 1:      'question': '14',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '226',
391: 1:      'question': '15',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '204',
391: 1:      'question': '16',
391: 1:      'valid': true
391: 1:    },
391: 1:    {
391: 1:      'answer': '184',
391: 1:      'question': '17',
391: 1:      'valid': true
391: 1:    }
391: 1:  ],
391: 1:  'info': [
391: 1:    '✅f(1) = 971',
391: 1:    '✅f(2) = 874',
391: 1:    '✅f(3) = 787',
391: 1:    '✅f(4) = 709',
391: 1:    '✅f(5) = 639',
391: 1:    '✅f(6) = 576',
391: 1:    '✅f(7) = 519',
391: 1:    '✅f(8) = 468',
391: 1:    '✅f(9) = 422',
391: 1:    '✅f(10) = 380',
391: 1:    '✅f(11) = 342',
391: 1:    '✅f(12) = 308',
391: 1:    '✅f(13) = 278',
391: 1:    '✅f(14) = 251',
391: 1:    '✅f(15) = 226',
391: 1:    '✅f(16) = 204',
391: 1:    '✅f(17) = 184',
391: 1:    '❌f(18) = ??? != 166'
391: 1:  ],
391: 1:  'level': 14,
391: 1:  'nextQuestion': '18',
391: 1:  'questions': [
391: 1:    '1',
391: 1:    '2',
391: 1:    '3',
391: 1:    '4',
391: 1:    '5',
391: 1:    '6',
391: 1:    '7',
391: 1:    '8',
391: 1:    '9',
391: 1:    '10',
391: 1:    '11',
391: 1:    '12',
391: 1:    '13',
391: 1:    '14',
391: 1:    '15',
391: 1:    '16',
391: 1:    '17',
391: 1:    '18'
391: 1:  ]
391: 1:}
391: 1:Scores: 39102
391: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166']')
391: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
392: 1:BoardData {
392: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
392: 1:  'expectedAnswer': '150',
392: 1:  'history': [
392: 1:    {
392: 1:      'answer': '971',
392: 1:      'question': '1',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '874',
392: 1:      'question': '2',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '787',
392: 1:      'question': '3',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '709',
392: 1:      'question': '4',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '639',
392: 1:      'question': '5',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '576',
392: 1:      'question': '6',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '519',
392: 1:      'question': '7',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '468',
392: 1:      'question': '8',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '422',
392: 1:      'question': '9',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '380',
392: 1:      'question': '10',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '342',
392: 1:      'question': '11',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '308',
392: 1:      'question': '12',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '278',
392: 1:      'question': '13',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '251',
392: 1:      'question': '14',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '226',
392: 1:      'question': '15',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '204',
392: 1:      'question': '16',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '184',
392: 1:      'question': '17',
392: 1:      'valid': true
392: 1:    },
392: 1:    {
392: 1:      'answer': '166',
392: 1:      'question': '18',
392: 1:      'valid': true
392: 1:    }
392: 1:  ],
392: 1:  'info': [
392: 1:    '✅f(1) = 971',
392: 1:    '✅f(2) = 874',
392: 1:    '✅f(3) = 787',
392: 1:    '✅f(4) = 709',
392: 1:    '✅f(5) = 639',
392: 1:    '✅f(6) = 576',
392: 1:    '✅f(7) = 519',
392: 1:    '✅f(8) = 468',
392: 1:    '✅f(9) = 422',
392: 1:    '✅f(10) = 380',
392: 1:    '✅f(11) = 342',
392: 1:    '✅f(12) = 308',
392: 1:    '✅f(13) = 278',
392: 1:    '✅f(14) = 251',
392: 1:    '✅f(15) = 226',
392: 1:    '✅f(16) = 204',
392: 1:    '✅f(17) = 184',
392: 1:    '✅f(18) = 166',
392: 1:    '❌f(19) = ??? != 150'
392: 1:  ],
392: 1:  'level': 14,
392: 1:  'nextQuestion': '19',
392: 1:  'questions': [
392: 1:    '1',
392: 1:    '2',
392: 1:    '3',
392: 1:    '4',
392: 1:    '5',
392: 1:    '6',
392: 1:    '7',
392: 1:    '8',
392: 1:    '9',
392: 1:    '10',
392: 1:    '11',
392: 1:    '12',
392: 1:    '13',
392: 1:    '14',
392: 1:    '15',
392: 1:    '16',
392: 1:    '17',
392: 1:    '18',
392: 1:    '19'
392: 1:  ]
392: 1:}
392: 1:Scores: 39122
392: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150']')
392: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
393: 1:BoardData {
393: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
393: 1:  'expectedAnswer': '135',
393: 1:  'history': [
393: 1:    {
393: 1:      'answer': '971',
393: 1:      'question': '1',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '874',
393: 1:      'question': '2',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '787',
393: 1:      'question': '3',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '709',
393: 1:      'question': '4',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '639',
393: 1:      'question': '5',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '576',
393: 1:      'question': '6',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '519',
393: 1:      'question': '7',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '468',
393: 1:      'question': '8',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '422',
393: 1:      'question': '9',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '380',
393: 1:      'question': '10',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '342',
393: 1:      'question': '11',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '308',
393: 1:      'question': '12',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '278',
393: 1:      'question': '13',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '251',
393: 1:      'question': '14',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '226',
393: 1:      'question': '15',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '204',
393: 1:      'question': '16',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '184',
393: 1:      'question': '17',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '166',
393: 1:      'question': '18',
393: 1:      'valid': true
393: 1:    },
393: 1:    {
393: 1:      'answer': '150',
393: 1:      'question': '19',
393: 1:      'valid': true
393: 1:    }
393: 1:  ],
393: 1:  'info': [
393: 1:    '✅f(1) = 971',
393: 1:    '✅f(2) = 874',
393: 1:    '✅f(3) = 787',
393: 1:    '✅f(4) = 709',
393: 1:    '✅f(5) = 639',
393: 1:    '✅f(6) = 576',
393: 1:    '✅f(7) = 519',
393: 1:    '✅f(8) = 468',
393: 1:    '✅f(9) = 422',
393: 1:    '✅f(10) = 380',
393: 1:    '✅f(11) = 342',
393: 1:    '✅f(12) = 308',
393: 1:    '✅f(13) = 278',
393: 1:    '✅f(14) = 251',
393: 1:    '✅f(15) = 226',
393: 1:    '✅f(16) = 204',
393: 1:    '✅f(17) = 184',
393: 1:    '✅f(18) = 166',
393: 1:    '✅f(19) = 150',
393: 1:    '❌f(20) = ??? != 135'
393: 1:  ],
393: 1:  'level': 14,
393: 1:  'nextQuestion': '20',
393: 1:  'questions': [
393: 1:    '1',
393: 1:    '2',
393: 1:    '3',
393: 1:    '4',
393: 1:    '5',
393: 1:    '6',
393: 1:    '7',
393: 1:    '8',
393: 1:    '9',
393: 1:    '10',
393: 1:    '11',
393: 1:    '12',
393: 1:    '13',
393: 1:    '14',
393: 1:    '15',
393: 1:    '16',
393: 1:    '17',
393: 1:    '18',
393: 1:    '19',
393: 1:    '20'
393: 1:  ]
393: 1:}
393: 1:Scores: 39142
393: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135']')
393: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
394: 1:BoardData {
394: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
394: 1:  'expectedAnswer': '122',
394: 1:  'history': [
394: 1:    {
394: 1:      'answer': '971',
394: 1:      'question': '1',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '874',
394: 1:      'question': '2',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '787',
394: 1:      'question': '3',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '709',
394: 1:      'question': '4',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '639',
394: 1:      'question': '5',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '576',
394: 1:      'question': '6',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '519',
394: 1:      'question': '7',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '468',
394: 1:      'question': '8',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '422',
394: 1:      'question': '9',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '380',
394: 1:      'question': '10',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '342',
394: 1:      'question': '11',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '308',
394: 1:      'question': '12',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '278',
394: 1:      'question': '13',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '251',
394: 1:      'question': '14',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '226',
394: 1:      'question': '15',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '204',
394: 1:      'question': '16',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '184',
394: 1:      'question': '17',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '166',
394: 1:      'question': '18',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '150',
394: 1:      'question': '19',
394: 1:      'valid': true
394: 1:    },
394: 1:    {
394: 1:      'answer': '135',
394: 1:      'question': '20',
394: 1:      'valid': true
394: 1:    }
394: 1:  ],
394: 1:  'info': [
394: 1:    '✅f(1) = 971',
394: 1:    '✅f(2) = 874',
394: 1:    '✅f(3) = 787',
394: 1:    '✅f(4) = 709',
394: 1:    '✅f(5) = 639',
394: 1:    '✅f(6) = 576',
394: 1:    '✅f(7) = 519',
394: 1:    '✅f(8) = 468',
394: 1:    '✅f(9) = 422',
394: 1:    '✅f(10) = 380',
394: 1:    '✅f(11) = 342',
394: 1:    '✅f(12) = 308',
394: 1:    '✅f(13) = 278',
394: 1:    '✅f(14) = 251',
394: 1:    '✅f(15) = 226',
394: 1:    '✅f(16) = 204',
394: 1:    '✅f(17) = 184',
394: 1:    '✅f(18) = 166',
394: 1:    '✅f(19) = 150',
394: 1:    '✅f(20) = 135',
394: 1:    '❌f(21) = ??? != 122'
394: 1:  ],
394: 1:  'level': 14,
394: 1:  'nextQuestion': '21',
394: 1:  'questions': [
394: 1:    '1',
394: 1:    '2',
394: 1:    '3',
394: 1:    '4',
394: 1:    '5',
394: 1:    '6',
394: 1:    '7',
394: 1:    '8',
394: 1:    '9',
394: 1:    '10',
394: 1:    '11',
394: 1:    '12',
394: 1:    '13',
394: 1:    '14',
394: 1:    '15',
394: 1:    '16',
394: 1:    '17',
394: 1:    '18',
394: 1:    '19',
394: 1:    '20',
394: 1:    '21'
394: 1:  ]
394: 1:}
394: 1:Scores: 39162
394: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122']')
394: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
395: 1:BoardData {
395: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
395: 1:  'expectedAnswer': '110',
395: 1:  'history': [
395: 1:    {
395: 1:      'answer': '971',
395: 1:      'question': '1',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '874',
395: 1:      'question': '2',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '787',
395: 1:      'question': '3',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '709',
395: 1:      'question': '4',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '639',
395: 1:      'question': '5',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '576',
395: 1:      'question': '6',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '519',
395: 1:      'question': '7',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '468',
395: 1:      'question': '8',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '422',
395: 1:      'question': '9',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '380',
395: 1:      'question': '10',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '342',
395: 1:      'question': '11',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '308',
395: 1:      'question': '12',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '278',
395: 1:      'question': '13',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '251',
395: 1:      'question': '14',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '226',
395: 1:      'question': '15',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '204',
395: 1:      'question': '16',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '184',
395: 1:      'question': '17',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '166',
395: 1:      'question': '18',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '150',
395: 1:      'question': '19',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '135',
395: 1:      'question': '20',
395: 1:      'valid': true
395: 1:    },
395: 1:    {
395: 1:      'answer': '122',
395: 1:      'question': '21',
395: 1:      'valid': true
395: 1:    }
395: 1:  ],
395: 1:  'info': [
395: 1:    '✅f(1) = 971',
395: 1:    '✅f(2) = 874',
395: 1:    '✅f(3) = 787',
395: 1:    '✅f(4) = 709',
395: 1:    '✅f(5) = 639',
395: 1:    '✅f(6) = 576',
395: 1:    '✅f(7) = 519',
395: 1:    '✅f(8) = 468',
395: 1:    '✅f(9) = 422',
395: 1:    '✅f(10) = 380',
395: 1:    '✅f(11) = 342',
395: 1:    '✅f(12) = 308',
395: 1:    '✅f(13) = 278',
395: 1:    '✅f(14) = 251',
395: 1:    '✅f(15) = 226',
395: 1:    '✅f(16) = 204',
395: 1:    '✅f(17) = 184',
395: 1:    '✅f(18) = 166',
395: 1:    '✅f(19) = 150',
395: 1:    '✅f(20) = 135',
395: 1:    '✅f(21) = 122',
395: 1:    '❌f(22) = ??? != 110'
395: 1:  ],
395: 1:  'level': 14,
395: 1:  'nextQuestion': '22',
395: 1:  'questions': [
395: 1:    '1',
395: 1:    '2',
395: 1:    '3',
395: 1:    '4',
395: 1:    '5',
395: 1:    '6',
395: 1:    '7',
395: 1:    '8',
395: 1:    '9',
395: 1:    '10',
395: 1:    '11',
395: 1:    '12',
395: 1:    '13',
395: 1:    '14',
395: 1:    '15',
395: 1:    '16',
395: 1:    '17',
395: 1:    '18',
395: 1:    '19',
395: 1:    '20',
395: 1:    '21',
395: 1:    '22'
395: 1:  ]
395: 1:}
395: 1:Scores: 39182
395: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110']')
395: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
396: 1:BoardData {
396: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
396: 1:  'expectedAnswer': '99',
396: 1:  'history': [
396: 1:    {
396: 1:      'answer': '971',
396: 1:      'question': '1',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '874',
396: 1:      'question': '2',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '787',
396: 1:      'question': '3',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '709',
396: 1:      'question': '4',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '639',
396: 1:      'question': '5',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '576',
396: 1:      'question': '6',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '519',
396: 1:      'question': '7',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '468',
396: 1:      'question': '8',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '422',
396: 1:      'question': '9',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '380',
396: 1:      'question': '10',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '342',
396: 1:      'question': '11',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '308',
396: 1:      'question': '12',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '278',
396: 1:      'question': '13',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '251',
396: 1:      'question': '14',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '226',
396: 1:      'question': '15',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '204',
396: 1:      'question': '16',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '184',
396: 1:      'question': '17',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '166',
396: 1:      'question': '18',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '150',
396: 1:      'question': '19',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '135',
396: 1:      'question': '20',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '122',
396: 1:      'question': '21',
396: 1:      'valid': true
396: 1:    },
396: 1:    {
396: 1:      'answer': '110',
396: 1:      'question': '22',
396: 1:      'valid': true
396: 1:    }
396: 1:  ],
396: 1:  'info': [
396: 1:    '✅f(1) = 971',
396: 1:    '✅f(2) = 874',
396: 1:    '✅f(3) = 787',
396: 1:    '✅f(4) = 709',
396: 1:    '✅f(5) = 639',
396: 1:    '✅f(6) = 576',
396: 1:    '✅f(7) = 519',
396: 1:    '✅f(8) = 468',
396: 1:    '✅f(9) = 422',
396: 1:    '✅f(10) = 380',
396: 1:    '✅f(11) = 342',
396: 1:    '✅f(12) = 308',
396: 1:    '✅f(13) = 278',
396: 1:    '✅f(14) = 251',
396: 1:    '✅f(15) = 226',
396: 1:    '✅f(16) = 204',
396: 1:    '✅f(17) = 184',
396: 1:    '✅f(18) = 166',
396: 1:    '✅f(19) = 150',
396: 1:    '✅f(20) = 135',
396: 1:    '✅f(21) = 122',
396: 1:    '✅f(22) = 110',
396: 1:    '❌f(23) = ??? != 99'
396: 1:  ],
396: 1:  'level': 14,
396: 1:  'nextQuestion': '23',
396: 1:  'questions': [
396: 1:    '1',
396: 1:    '2',
396: 1:    '3',
396: 1:    '4',
396: 1:    '5',
396: 1:    '6',
396: 1:    '7',
396: 1:    '8',
396: 1:    '9',
396: 1:    '10',
396: 1:    '11',
396: 1:    '12',
396: 1:    '13',
396: 1:    '14',
396: 1:    '15',
396: 1:    '16',
396: 1:    '17',
396: 1:    '18',
396: 1:    '19',
396: 1:    '20',
396: 1:    '21',
396: 1:    '22',
396: 1:    '23'
396: 1:  ]
396: 1:}
396: 1:Scores: 39202
396: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99']')
396: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
397: 1:BoardData {
397: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
397: 1:  'expectedAnswer': '90',
397: 1:  'history': [
397: 1:    {
397: 1:      'answer': '971',
397: 1:      'question': '1',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '874',
397: 1:      'question': '2',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '787',
397: 1:      'question': '3',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '709',
397: 1:      'question': '4',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '639',
397: 1:      'question': '5',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '576',
397: 1:      'question': '6',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '519',
397: 1:      'question': '7',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '468',
397: 1:      'question': '8',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '422',
397: 1:      'question': '9',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '380',
397: 1:      'question': '10',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '342',
397: 1:      'question': '11',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '308',
397: 1:      'question': '12',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '278',
397: 1:      'question': '13',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '251',
397: 1:      'question': '14',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '226',
397: 1:      'question': '15',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '204',
397: 1:      'question': '16',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '184',
397: 1:      'question': '17',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '166',
397: 1:      'question': '18',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '150',
397: 1:      'question': '19',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '135',
397: 1:      'question': '20',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '122',
397: 1:      'question': '21',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '110',
397: 1:      'question': '22',
397: 1:      'valid': true
397: 1:    },
397: 1:    {
397: 1:      'answer': '99',
397: 1:      'question': '23',
397: 1:      'valid': true
397: 1:    }
397: 1:  ],
397: 1:  'info': [
397: 1:    '✅f(1) = 971',
397: 1:    '✅f(2) = 874',
397: 1:    '✅f(3) = 787',
397: 1:    '✅f(4) = 709',
397: 1:    '✅f(5) = 639',
397: 1:    '✅f(6) = 576',
397: 1:    '✅f(7) = 519',
397: 1:    '✅f(8) = 468',
397: 1:    '✅f(9) = 422',
397: 1:    '✅f(10) = 380',
397: 1:    '✅f(11) = 342',
397: 1:    '✅f(12) = 308',
397: 1:    '✅f(13) = 278',
397: 1:    '✅f(14) = 251',
397: 1:    '✅f(15) = 226',
397: 1:    '✅f(16) = 204',
397: 1:    '✅f(17) = 184',
397: 1:    '✅f(18) = 166',
397: 1:    '✅f(19) = 150',
397: 1:    '✅f(20) = 135',
397: 1:    '✅f(21) = 122',
397: 1:    '✅f(22) = 110',
397: 1:    '✅f(23) = 99',
397: 1:    '❌f(24) = ??? != 90'
397: 1:  ],
397: 1:  'level': 14,
397: 1:  'nextQuestion': '24',
397: 1:  'questions': [
397: 1:    '1',
397: 1:    '2',
397: 1:    '3',
397: 1:    '4',
397: 1:    '5',
397: 1:    '6',
397: 1:    '7',
397: 1:    '8',
397: 1:    '9',
397: 1:    '10',
397: 1:    '11',
397: 1:    '12',
397: 1:    '13',
397: 1:    '14',
397: 1:    '15',
397: 1:    '16',
397: 1:    '17',
397: 1:    '18',
397: 1:    '19',
397: 1:    '20',
397: 1:    '21',
397: 1:    '22',
397: 1:    '23',
397: 1:    '24'
397: 1:  ]
397: 1:}
397: 1:Scores: 39222
397: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99', '90']')
397: 1:Fire Event: PassTest{complexity=50, testCount=25}
------------------------------------------
398: 1:BoardData {
398: 1:  'description': ['Continue the sequence 971, 874, 787, 709, 639...\ni.e f(1) = 971, f(2) = 874, ...\nHint: Use subtraction'],
398: 1:  'expectedAnswer': '81',
398: 1:  'history': [
398: 1:    {
398: 1:      'answer': '971',
398: 1:      'question': '1',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '874',
398: 1:      'question': '2',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '787',
398: 1:      'question': '3',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '709',
398: 1:      'question': '4',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '639',
398: 1:      'question': '5',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '576',
398: 1:      'question': '6',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '519',
398: 1:      'question': '7',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '468',
398: 1:      'question': '8',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '422',
398: 1:      'question': '9',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '380',
398: 1:      'question': '10',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '342',
398: 1:      'question': '11',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '308',
398: 1:      'question': '12',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '278',
398: 1:      'question': '13',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '251',
398: 1:      'question': '14',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '226',
398: 1:      'question': '15',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '204',
398: 1:      'question': '16',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '184',
398: 1:      'question': '17',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '166',
398: 1:      'question': '18',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '150',
398: 1:      'question': '19',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '135',
398: 1:      'question': '20',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '122',
398: 1:      'question': '21',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '110',
398: 1:      'question': '22',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '99',
398: 1:      'question': '23',
398: 1:      'valid': true
398: 1:    },
398: 1:    {
398: 1:      'answer': '90',
398: 1:      'question': '24',
398: 1:      'valid': true
398: 1:    }
398: 1:  ],
398: 1:  'info': [
398: 1:    '✅f(1) = 971',
398: 1:    '✅f(2) = 874',
398: 1:    '✅f(3) = 787',
398: 1:    '✅f(4) = 709',
398: 1:    '✅f(5) = 639',
398: 1:    '✅f(6) = 576',
398: 1:    '✅f(7) = 519',
398: 1:    '✅f(8) = 468',
398: 1:    '✅f(9) = 422',
398: 1:    '✅f(10) = 380',
398: 1:    '✅f(11) = 342',
398: 1:    '✅f(12) = 308',
398: 1:    '✅f(13) = 278',
398: 1:    '✅f(14) = 251',
398: 1:    '✅f(15) = 226',
398: 1:    '✅f(16) = 204',
398: 1:    '✅f(17) = 184',
398: 1:    '✅f(18) = 166',
398: 1:    '✅f(19) = 150',
398: 1:    '✅f(20) = 135',
398: 1:    '✅f(21) = 122',
398: 1:    '✅f(22) = 110',
398: 1:    '✅f(23) = 99',
398: 1:    '✅f(24) = 90',
398: 1:    '❌f(25) = ??? != 81'
398: 1:  ],
398: 1:  'level': 14,
398: 1:  'nextQuestion': '25',
398: 1:  'questions': [
398: 1:    '1',
398: 1:    '2',
398: 1:    '3',
398: 1:    '4',
398: 1:    '5',
398: 1:    '6',
398: 1:    '7',
398: 1:    '8',
398: 1:    '9',
398: 1:    '10',
398: 1:    '11',
398: 1:    '12',
398: 1:    '13',
398: 1:    '14',
398: 1:    '15',
398: 1:    '16',
398: 1:    '17',
398: 1:    '18',
398: 1:    '19',
398: 1:    '20',
398: 1:    '21',
398: 1:    '22',
398: 1:    '23',
398: 1:    '24',
398: 1:    '25'
398: 1:  ]
398: 1:}
398: 1:Scores: 39242
398: 1:Answer: message('['971', '874', '787', '709', '639', '576', '519', '468', '422', '380', '342', '308', '278', '251', '226', '204', '184', '166', '150', '135', '122', '110', '99', '90', '81']')
398: 1:Fire Event: PassTest{complexity=50, testCount=25}
398: 1:Fire Event: NextAlgorithm{complexity=50, time=0}
------------------------------------------
399: 1:BoardData {
399: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
399: 1:  'history': [
399: 1:    {
399: 1:      'answer': '971',
399: 1:      'question': '1',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '874',
399: 1:      'question': '2',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '787',
399: 1:      'question': '3',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '709',
399: 1:      'question': '4',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '639',
399: 1:      'question': '5',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '576',
399: 1:      'question': '6',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '519',
399: 1:      'question': '7',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '468',
399: 1:      'question': '8',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '422',
399: 1:      'question': '9',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '380',
399: 1:      'question': '10',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '342',
399: 1:      'question': '11',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '308',
399: 1:      'question': '12',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '278',
399: 1:      'question': '13',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '251',
399: 1:      'question': '14',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '226',
399: 1:      'question': '15',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '204',
399: 1:      'question': '16',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '184',
399: 1:      'question': '17',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '166',
399: 1:      'question': '18',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '150',
399: 1:      'question': '19',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '135',
399: 1:      'question': '20',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '122',
399: 1:      'question': '21',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '110',
399: 1:      'question': '22',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '99',
399: 1:      'question': '23',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '90',
399: 1:      'question': '24',
399: 1:      'valid': true
399: 1:    },
399: 1:    {
399: 1:      'answer': '81',
399: 1:      'question': '25',
399: 1:      'valid': true
399: 1:    }
399: 1:  ],
399: 1:  'info': [
399: 1:    '✅f(1) = 971',
399: 1:    '✅f(2) = 874',
399: 1:    '✅f(3) = 787',
399: 1:    '✅f(4) = 709',
399: 1:    '✅f(5) = 639',
399: 1:    '✅f(6) = 576',
399: 1:    '✅f(7) = 519',
399: 1:    '✅f(8) = 468',
399: 1:    '✅f(9) = 422',
399: 1:    '✅f(10) = 380',
399: 1:    '✅f(11) = 342',
399: 1:    '✅f(12) = 308',
399: 1:    '✅f(13) = 278',
399: 1:    '✅f(14) = 251',
399: 1:    '✅f(15) = 226',
399: 1:    '✅f(16) = 204',
399: 1:    '✅f(17) = 184',
399: 1:    '✅f(18) = 166',
399: 1:    '✅f(19) = 150',
399: 1:    '✅f(20) = 135',
399: 1:    '✅f(21) = 122',
399: 1:    '✅f(22) = 110',
399: 1:    '✅f(23) = 99',
399: 1:    '✅f(24) = 90',
399: 1:    '✅f(25) = 81'
399: 1:  ],
399: 1:  'level': 14,
399: 1:  'questions': []
399: 1:}
399: 1:Scores: 46011
399: 1:Answer: message('StartNextLevel')
399: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
400: 1:BoardData {
400: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
400: 1:  'expectedAnswer': '2',
400: 1:  'history': [],
400: 1:  'info': ['❌f(1) = ??? != 2'],
400: 1:  'level': 15,
400: 1:  'nextQuestion': '1',
400: 1:  'questions': ['1']
400: 1:}
400: 1:Scores: 46011
400: 1:Answer: message('['2']')
400: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
401: 1:BoardData {
401: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
401: 1:  'expectedAnswer': '3',
401: 1:  'history': [{
401: 1:    'answer': '2',
401: 1:    'question': '1',
401: 1:    'valid': true
401: 1:  }],
401: 1:  'info': [
401: 1:    '✅f(1) = 2',
401: 1:    '❌f(2) = ??? != 3'
401: 1:  ],
401: 1:  'level': 15,
401: 1:  'nextQuestion': '2',
401: 1:  'questions': [
401: 1:    '1',
401: 1:    '2'
401: 1:  ]
401: 1:}
401: 1:Scores: 46033
401: 1:Answer: message('['2', '3']')
401: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
402: 1:BoardData {
402: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
402: 1:  'expectedAnswer': '5',
402: 1:  'history': [
402: 1:    {
402: 1:      'answer': '2',
402: 1:      'question': '1',
402: 1:      'valid': true
402: 1:    },
402: 1:    {
402: 1:      'answer': '3',
402: 1:      'question': '2',
402: 1:      'valid': true
402: 1:    }
402: 1:  ],
402: 1:  'info': [
402: 1:    '✅f(1) = 2',
402: 1:    '✅f(2) = 3',
402: 1:    '❌f(3) = ??? != 5'
402: 1:  ],
402: 1:  'level': 15,
402: 1:  'nextQuestion': '3',
402: 1:  'questions': [
402: 1:    '1',
402: 1:    '2',
402: 1:    '3'
402: 1:  ]
402: 1:}
402: 1:Scores: 46055
402: 1:Answer: message('['2', '3', '5']')
402: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
403: 1:BoardData {
403: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
403: 1:  'expectedAnswer': '7',
403: 1:  'history': [
403: 1:    {
403: 1:      'answer': '2',
403: 1:      'question': '1',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '3',
403: 1:      'question': '2',
403: 1:      'valid': true
403: 1:    },
403: 1:    {
403: 1:      'answer': '5',
403: 1:      'question': '3',
403: 1:      'valid': true
403: 1:    }
403: 1:  ],
403: 1:  'info': [
403: 1:    '✅f(1) = 2',
403: 1:    '✅f(2) = 3',
403: 1:    '✅f(3) = 5',
403: 1:    '❌f(4) = ??? != 7'
403: 1:  ],
403: 1:  'level': 15,
403: 1:  'nextQuestion': '4',
403: 1:  'questions': [
403: 1:    '1',
403: 1:    '2',
403: 1:    '3',
403: 1:    '4'
403: 1:  ]
403: 1:}
403: 1:Scores: 46077
403: 1:Answer: message('['2', '3', '5', '7']')
403: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
404: 1:BoardData {
404: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
404: 1:  'expectedAnswer': '11',
404: 1:  'history': [
404: 1:    {
404: 1:      'answer': '2',
404: 1:      'question': '1',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '3',
404: 1:      'question': '2',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '5',
404: 1:      'question': '3',
404: 1:      'valid': true
404: 1:    },
404: 1:    {
404: 1:      'answer': '7',
404: 1:      'question': '4',
404: 1:      'valid': true
404: 1:    }
404: 1:  ],
404: 1:  'info': [
404: 1:    '✅f(1) = 2',
404: 1:    '✅f(2) = 3',
404: 1:    '✅f(3) = 5',
404: 1:    '✅f(4) = 7',
404: 1:    '❌f(5) = ??? != 11'
404: 1:  ],
404: 1:  'level': 15,
404: 1:  'nextQuestion': '5',
404: 1:  'questions': [
404: 1:    '1',
404: 1:    '2',
404: 1:    '3',
404: 1:    '4',
404: 1:    '5'
404: 1:  ]
404: 1:}
404: 1:Scores: 46099
404: 1:Answer: message('['2', '3', '5', '7', '11']')
404: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
405: 1:BoardData {
405: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
405: 1:  'expectedAnswer': '13',
405: 1:  'history': [
405: 1:    {
405: 1:      'answer': '2',
405: 1:      'question': '1',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '3',
405: 1:      'question': '2',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '5',
405: 1:      'question': '3',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '7',
405: 1:      'question': '4',
405: 1:      'valid': true
405: 1:    },
405: 1:    {
405: 1:      'answer': '11',
405: 1:      'question': '5',
405: 1:      'valid': true
405: 1:    }
405: 1:  ],
405: 1:  'info': [
405: 1:    '✅f(1) = 2',
405: 1:    '✅f(2) = 3',
405: 1:    '✅f(3) = 5',
405: 1:    '✅f(4) = 7',
405: 1:    '✅f(5) = 11',
405: 1:    '❌f(6) = ??? != 13'
405: 1:  ],
405: 1:  'level': 15,
405: 1:  'nextQuestion': '6',
405: 1:  'questions': [
405: 1:    '1',
405: 1:    '2',
405: 1:    '3',
405: 1:    '4',
405: 1:    '5',
405: 1:    '6'
405: 1:  ]
405: 1:}
405: 1:Scores: 46121
405: 1:Answer: message('['2', '3', '5', '7', '11', '13']')
405: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
406: 1:BoardData {
406: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
406: 1:  'expectedAnswer': '17',
406: 1:  'history': [
406: 1:    {
406: 1:      'answer': '2',
406: 1:      'question': '1',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '3',
406: 1:      'question': '2',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '5',
406: 1:      'question': '3',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '7',
406: 1:      'question': '4',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '11',
406: 1:      'question': '5',
406: 1:      'valid': true
406: 1:    },
406: 1:    {
406: 1:      'answer': '13',
406: 1:      'question': '6',
406: 1:      'valid': true
406: 1:    }
406: 1:  ],
406: 1:  'info': [
406: 1:    '✅f(1) = 2',
406: 1:    '✅f(2) = 3',
406: 1:    '✅f(3) = 5',
406: 1:    '✅f(4) = 7',
406: 1:    '✅f(5) = 11',
406: 1:    '✅f(6) = 13',
406: 1:    '❌f(7) = ??? != 17'
406: 1:  ],
406: 1:  'level': 15,
406: 1:  'nextQuestion': '7',
406: 1:  'questions': [
406: 1:    '1',
406: 1:    '2',
406: 1:    '3',
406: 1:    '4',
406: 1:    '5',
406: 1:    '6',
406: 1:    '7'
406: 1:  ]
406: 1:}
406: 1:Scores: 46143
406: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17']')
406: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
407: 1:BoardData {
407: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
407: 1:  'expectedAnswer': '19',
407: 1:  'history': [
407: 1:    {
407: 1:      'answer': '2',
407: 1:      'question': '1',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '3',
407: 1:      'question': '2',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '5',
407: 1:      'question': '3',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '7',
407: 1:      'question': '4',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '11',
407: 1:      'question': '5',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '13',
407: 1:      'question': '6',
407: 1:      'valid': true
407: 1:    },
407: 1:    {
407: 1:      'answer': '17',
407: 1:      'question': '7',
407: 1:      'valid': true
407: 1:    }
407: 1:  ],
407: 1:  'info': [
407: 1:    '✅f(1) = 2',
407: 1:    '✅f(2) = 3',
407: 1:    '✅f(3) = 5',
407: 1:    '✅f(4) = 7',
407: 1:    '✅f(5) = 11',
407: 1:    '✅f(6) = 13',
407: 1:    '✅f(7) = 17',
407: 1:    '❌f(8) = ??? != 19'
407: 1:  ],
407: 1:  'level': 15,
407: 1:  'nextQuestion': '8',
407: 1:  'questions': [
407: 1:    '1',
407: 1:    '2',
407: 1:    '3',
407: 1:    '4',
407: 1:    '5',
407: 1:    '6',
407: 1:    '7',
407: 1:    '8'
407: 1:  ]
407: 1:}
407: 1:Scores: 46165
407: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19']')
407: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
408: 1:BoardData {
408: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
408: 1:  'expectedAnswer': '23',
408: 1:  'history': [
408: 1:    {
408: 1:      'answer': '2',
408: 1:      'question': '1',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '3',
408: 1:      'question': '2',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '5',
408: 1:      'question': '3',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '7',
408: 1:      'question': '4',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '11',
408: 1:      'question': '5',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '13',
408: 1:      'question': '6',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '17',
408: 1:      'question': '7',
408: 1:      'valid': true
408: 1:    },
408: 1:    {
408: 1:      'answer': '19',
408: 1:      'question': '8',
408: 1:      'valid': true
408: 1:    }
408: 1:  ],
408: 1:  'info': [
408: 1:    '✅f(1) = 2',
408: 1:    '✅f(2) = 3',
408: 1:    '✅f(3) = 5',
408: 1:    '✅f(4) = 7',
408: 1:    '✅f(5) = 11',
408: 1:    '✅f(6) = 13',
408: 1:    '✅f(7) = 17',
408: 1:    '✅f(8) = 19',
408: 1:    '❌f(9) = ??? != 23'
408: 1:  ],
408: 1:  'level': 15,
408: 1:  'nextQuestion': '9',
408: 1:  'questions': [
408: 1:    '1',
408: 1:    '2',
408: 1:    '3',
408: 1:    '4',
408: 1:    '5',
408: 1:    '6',
408: 1:    '7',
408: 1:    '8',
408: 1:    '9'
408: 1:  ]
408: 1:}
408: 1:Scores: 46187
408: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23']')
408: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
409: 1:BoardData {
409: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
409: 1:  'expectedAnswer': '29',
409: 1:  'history': [
409: 1:    {
409: 1:      'answer': '2',
409: 1:      'question': '1',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '3',
409: 1:      'question': '2',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '5',
409: 1:      'question': '3',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '7',
409: 1:      'question': '4',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '11',
409: 1:      'question': '5',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '13',
409: 1:      'question': '6',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '17',
409: 1:      'question': '7',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '19',
409: 1:      'question': '8',
409: 1:      'valid': true
409: 1:    },
409: 1:    {
409: 1:      'answer': '23',
409: 1:      'question': '9',
409: 1:      'valid': true
409: 1:    }
409: 1:  ],
409: 1:  'info': [
409: 1:    '✅f(1) = 2',
409: 1:    '✅f(2) = 3',
409: 1:    '✅f(3) = 5',
409: 1:    '✅f(4) = 7',
409: 1:    '✅f(5) = 11',
409: 1:    '✅f(6) = 13',
409: 1:    '✅f(7) = 17',
409: 1:    '✅f(8) = 19',
409: 1:    '✅f(9) = 23',
409: 1:    '❌f(10) = ??? != 29'
409: 1:  ],
409: 1:  'level': 15,
409: 1:  'nextQuestion': '10',
409: 1:  'questions': [
409: 1:    '1',
409: 1:    '2',
409: 1:    '3',
409: 1:    '4',
409: 1:    '5',
409: 1:    '6',
409: 1:    '7',
409: 1:    '8',
409: 1:    '9',
409: 1:    '10'
409: 1:  ]
409: 1:}
409: 1:Scores: 46209
409: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29']')
409: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
410: 1:BoardData {
410: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
410: 1:  'expectedAnswer': '31',
410: 1:  'history': [
410: 1:    {
410: 1:      'answer': '2',
410: 1:      'question': '1',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '3',
410: 1:      'question': '2',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '5',
410: 1:      'question': '3',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '7',
410: 1:      'question': '4',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '11',
410: 1:      'question': '5',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '13',
410: 1:      'question': '6',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '17',
410: 1:      'question': '7',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '19',
410: 1:      'question': '8',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '23',
410: 1:      'question': '9',
410: 1:      'valid': true
410: 1:    },
410: 1:    {
410: 1:      'answer': '29',
410: 1:      'question': '10',
410: 1:      'valid': true
410: 1:    }
410: 1:  ],
410: 1:  'info': [
410: 1:    '✅f(1) = 2',
410: 1:    '✅f(2) = 3',
410: 1:    '✅f(3) = 5',
410: 1:    '✅f(4) = 7',
410: 1:    '✅f(5) = 11',
410: 1:    '✅f(6) = 13',
410: 1:    '✅f(7) = 17',
410: 1:    '✅f(8) = 19',
410: 1:    '✅f(9) = 23',
410: 1:    '✅f(10) = 29',
410: 1:    '❌f(11) = ??? != 31'
410: 1:  ],
410: 1:  'level': 15,
410: 1:  'nextQuestion': '11',
410: 1:  'questions': [
410: 1:    '1',
410: 1:    '2',
410: 1:    '3',
410: 1:    '4',
410: 1:    '5',
410: 1:    '6',
410: 1:    '7',
410: 1:    '8',
410: 1:    '9',
410: 1:    '10',
410: 1:    '11'
410: 1:  ]
410: 1:}
410: 1:Scores: 46231
410: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31']')
410: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
411: 1:BoardData {
411: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
411: 1:  'expectedAnswer': '37',
411: 1:  'history': [
411: 1:    {
411: 1:      'answer': '2',
411: 1:      'question': '1',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '3',
411: 1:      'question': '2',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '5',
411: 1:      'question': '3',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '7',
411: 1:      'question': '4',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '11',
411: 1:      'question': '5',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '13',
411: 1:      'question': '6',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '17',
411: 1:      'question': '7',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '19',
411: 1:      'question': '8',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '23',
411: 1:      'question': '9',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '29',
411: 1:      'question': '10',
411: 1:      'valid': true
411: 1:    },
411: 1:    {
411: 1:      'answer': '31',
411: 1:      'question': '11',
411: 1:      'valid': true
411: 1:    }
411: 1:  ],
411: 1:  'info': [
411: 1:    '✅f(1) = 2',
411: 1:    '✅f(2) = 3',
411: 1:    '✅f(3) = 5',
411: 1:    '✅f(4) = 7',
411: 1:    '✅f(5) = 11',
411: 1:    '✅f(6) = 13',
411: 1:    '✅f(7) = 17',
411: 1:    '✅f(8) = 19',
411: 1:    '✅f(9) = 23',
411: 1:    '✅f(10) = 29',
411: 1:    '✅f(11) = 31',
411: 1:    '❌f(12) = ??? != 37'
411: 1:  ],
411: 1:  'level': 15,
411: 1:  'nextQuestion': '12',
411: 1:  'questions': [
411: 1:    '1',
411: 1:    '2',
411: 1:    '3',
411: 1:    '4',
411: 1:    '5',
411: 1:    '6',
411: 1:    '7',
411: 1:    '8',
411: 1:    '9',
411: 1:    '10',
411: 1:    '11',
411: 1:    '12'
411: 1:  ]
411: 1:}
411: 1:Scores: 46253
411: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37']')
411: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
412: 1:BoardData {
412: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
412: 1:  'expectedAnswer': '41',
412: 1:  'history': [
412: 1:    {
412: 1:      'answer': '2',
412: 1:      'question': '1',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '3',
412: 1:      'question': '2',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '5',
412: 1:      'question': '3',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '7',
412: 1:      'question': '4',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '11',
412: 1:      'question': '5',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '13',
412: 1:      'question': '6',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '17',
412: 1:      'question': '7',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '19',
412: 1:      'question': '8',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '23',
412: 1:      'question': '9',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '29',
412: 1:      'question': '10',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '31',
412: 1:      'question': '11',
412: 1:      'valid': true
412: 1:    },
412: 1:    {
412: 1:      'answer': '37',
412: 1:      'question': '12',
412: 1:      'valid': true
412: 1:    }
412: 1:  ],
412: 1:  'info': [
412: 1:    '✅f(1) = 2',
412: 1:    '✅f(2) = 3',
412: 1:    '✅f(3) = 5',
412: 1:    '✅f(4) = 7',
412: 1:    '✅f(5) = 11',
412: 1:    '✅f(6) = 13',
412: 1:    '✅f(7) = 17',
412: 1:    '✅f(8) = 19',
412: 1:    '✅f(9) = 23',
412: 1:    '✅f(10) = 29',
412: 1:    '✅f(11) = 31',
412: 1:    '✅f(12) = 37',
412: 1:    '❌f(13) = ??? != 41'
412: 1:  ],
412: 1:  'level': 15,
412: 1:  'nextQuestion': '13',
412: 1:  'questions': [
412: 1:    '1',
412: 1:    '2',
412: 1:    '3',
412: 1:    '4',
412: 1:    '5',
412: 1:    '6',
412: 1:    '7',
412: 1:    '8',
412: 1:    '9',
412: 1:    '10',
412: 1:    '11',
412: 1:    '12',
412: 1:    '13'
412: 1:  ]
412: 1:}
412: 1:Scores: 46275
412: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41']')
412: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
413: 1:BoardData {
413: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
413: 1:  'expectedAnswer': '43',
413: 1:  'history': [
413: 1:    {
413: 1:      'answer': '2',
413: 1:      'question': '1',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '3',
413: 1:      'question': '2',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '5',
413: 1:      'question': '3',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '7',
413: 1:      'question': '4',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '11',
413: 1:      'question': '5',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '13',
413: 1:      'question': '6',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '17',
413: 1:      'question': '7',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '19',
413: 1:      'question': '8',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '23',
413: 1:      'question': '9',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '29',
413: 1:      'question': '10',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '31',
413: 1:      'question': '11',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '37',
413: 1:      'question': '12',
413: 1:      'valid': true
413: 1:    },
413: 1:    {
413: 1:      'answer': '41',
413: 1:      'question': '13',
413: 1:      'valid': true
413: 1:    }
413: 1:  ],
413: 1:  'info': [
413: 1:    '✅f(1) = 2',
413: 1:    '✅f(2) = 3',
413: 1:    '✅f(3) = 5',
413: 1:    '✅f(4) = 7',
413: 1:    '✅f(5) = 11',
413: 1:    '✅f(6) = 13',
413: 1:    '✅f(7) = 17',
413: 1:    '✅f(8) = 19',
413: 1:    '✅f(9) = 23',
413: 1:    '✅f(10) = 29',
413: 1:    '✅f(11) = 31',
413: 1:    '✅f(12) = 37',
413: 1:    '✅f(13) = 41',
413: 1:    '❌f(14) = ??? != 43'
413: 1:  ],
413: 1:  'level': 15,
413: 1:  'nextQuestion': '14',
413: 1:  'questions': [
413: 1:    '1',
413: 1:    '2',
413: 1:    '3',
413: 1:    '4',
413: 1:    '5',
413: 1:    '6',
413: 1:    '7',
413: 1:    '8',
413: 1:    '9',
413: 1:    '10',
413: 1:    '11',
413: 1:    '12',
413: 1:    '13',
413: 1:    '14'
413: 1:  ]
413: 1:}
413: 1:Scores: 46297
413: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43']')
413: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
414: 1:BoardData {
414: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
414: 1:  'expectedAnswer': '47',
414: 1:  'history': [
414: 1:    {
414: 1:      'answer': '2',
414: 1:      'question': '1',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '3',
414: 1:      'question': '2',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '5',
414: 1:      'question': '3',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '7',
414: 1:      'question': '4',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '11',
414: 1:      'question': '5',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '13',
414: 1:      'question': '6',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '17',
414: 1:      'question': '7',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '19',
414: 1:      'question': '8',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '23',
414: 1:      'question': '9',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '29',
414: 1:      'question': '10',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '31',
414: 1:      'question': '11',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '37',
414: 1:      'question': '12',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '41',
414: 1:      'question': '13',
414: 1:      'valid': true
414: 1:    },
414: 1:    {
414: 1:      'answer': '43',
414: 1:      'question': '14',
414: 1:      'valid': true
414: 1:    }
414: 1:  ],
414: 1:  'info': [
414: 1:    '✅f(1) = 2',
414: 1:    '✅f(2) = 3',
414: 1:    '✅f(3) = 5',
414: 1:    '✅f(4) = 7',
414: 1:    '✅f(5) = 11',
414: 1:    '✅f(6) = 13',
414: 1:    '✅f(7) = 17',
414: 1:    '✅f(8) = 19',
414: 1:    '✅f(9) = 23',
414: 1:    '✅f(10) = 29',
414: 1:    '✅f(11) = 31',
414: 1:    '✅f(12) = 37',
414: 1:    '✅f(13) = 41',
414: 1:    '✅f(14) = 43',
414: 1:    '❌f(15) = ??? != 47'
414: 1:  ],
414: 1:  'level': 15,
414: 1:  'nextQuestion': '15',
414: 1:  'questions': [
414: 1:    '1',
414: 1:    '2',
414: 1:    '3',
414: 1:    '4',
414: 1:    '5',
414: 1:    '6',
414: 1:    '7',
414: 1:    '8',
414: 1:    '9',
414: 1:    '10',
414: 1:    '11',
414: 1:    '12',
414: 1:    '13',
414: 1:    '14',
414: 1:    '15'
414: 1:  ]
414: 1:}
414: 1:Scores: 46319
414: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47']')
414: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
415: 1:BoardData {
415: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
415: 1:  'expectedAnswer': '53',
415: 1:  'history': [
415: 1:    {
415: 1:      'answer': '2',
415: 1:      'question': '1',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '3',
415: 1:      'question': '2',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '5',
415: 1:      'question': '3',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '7',
415: 1:      'question': '4',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '11',
415: 1:      'question': '5',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '13',
415: 1:      'question': '6',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '17',
415: 1:      'question': '7',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '19',
415: 1:      'question': '8',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '23',
415: 1:      'question': '9',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '29',
415: 1:      'question': '10',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '31',
415: 1:      'question': '11',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '37',
415: 1:      'question': '12',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '41',
415: 1:      'question': '13',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '43',
415: 1:      'question': '14',
415: 1:      'valid': true
415: 1:    },
415: 1:    {
415: 1:      'answer': '47',
415: 1:      'question': '15',
415: 1:      'valid': true
415: 1:    }
415: 1:  ],
415: 1:  'info': [
415: 1:    '✅f(1) = 2',
415: 1:    '✅f(2) = 3',
415: 1:    '✅f(3) = 5',
415: 1:    '✅f(4) = 7',
415: 1:    '✅f(5) = 11',
415: 1:    '✅f(6) = 13',
415: 1:    '✅f(7) = 17',
415: 1:    '✅f(8) = 19',
415: 1:    '✅f(9) = 23',
415: 1:    '✅f(10) = 29',
415: 1:    '✅f(11) = 31',
415: 1:    '✅f(12) = 37',
415: 1:    '✅f(13) = 41',
415: 1:    '✅f(14) = 43',
415: 1:    '✅f(15) = 47',
415: 1:    '❌f(16) = ??? != 53'
415: 1:  ],
415: 1:  'level': 15,
415: 1:  'nextQuestion': '16',
415: 1:  'questions': [
415: 1:    '1',
415: 1:    '2',
415: 1:    '3',
415: 1:    '4',
415: 1:    '5',
415: 1:    '6',
415: 1:    '7',
415: 1:    '8',
415: 1:    '9',
415: 1:    '10',
415: 1:    '11',
415: 1:    '12',
415: 1:    '13',
415: 1:    '14',
415: 1:    '15',
415: 1:    '16'
415: 1:  ]
415: 1:}
415: 1:Scores: 46341
415: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53']')
415: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
416: 1:BoardData {
416: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
416: 1:  'expectedAnswer': '59',
416: 1:  'history': [
416: 1:    {
416: 1:      'answer': '2',
416: 1:      'question': '1',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '3',
416: 1:      'question': '2',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '5',
416: 1:      'question': '3',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '7',
416: 1:      'question': '4',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '11',
416: 1:      'question': '5',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '13',
416: 1:      'question': '6',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '17',
416: 1:      'question': '7',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '19',
416: 1:      'question': '8',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '23',
416: 1:      'question': '9',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '29',
416: 1:      'question': '10',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '31',
416: 1:      'question': '11',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '37',
416: 1:      'question': '12',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '41',
416: 1:      'question': '13',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '43',
416: 1:      'question': '14',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '47',
416: 1:      'question': '15',
416: 1:      'valid': true
416: 1:    },
416: 1:    {
416: 1:      'answer': '53',
416: 1:      'question': '16',
416: 1:      'valid': true
416: 1:    }
416: 1:  ],
416: 1:  'info': [
416: 1:    '✅f(1) = 2',
416: 1:    '✅f(2) = 3',
416: 1:    '✅f(3) = 5',
416: 1:    '✅f(4) = 7',
416: 1:    '✅f(5) = 11',
416: 1:    '✅f(6) = 13',
416: 1:    '✅f(7) = 17',
416: 1:    '✅f(8) = 19',
416: 1:    '✅f(9) = 23',
416: 1:    '✅f(10) = 29',
416: 1:    '✅f(11) = 31',
416: 1:    '✅f(12) = 37',
416: 1:    '✅f(13) = 41',
416: 1:    '✅f(14) = 43',
416: 1:    '✅f(15) = 47',
416: 1:    '✅f(16) = 53',
416: 1:    '❌f(17) = ??? != 59'
416: 1:  ],
416: 1:  'level': 15,
416: 1:  'nextQuestion': '17',
416: 1:  'questions': [
416: 1:    '1',
416: 1:    '2',
416: 1:    '3',
416: 1:    '4',
416: 1:    '5',
416: 1:    '6',
416: 1:    '7',
416: 1:    '8',
416: 1:    '9',
416: 1:    '10',
416: 1:    '11',
416: 1:    '12',
416: 1:    '13',
416: 1:    '14',
416: 1:    '15',
416: 1:    '16',
416: 1:    '17'
416: 1:  ]
416: 1:}
416: 1:Scores: 46363
416: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59']')
416: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
417: 1:BoardData {
417: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
417: 1:  'expectedAnswer': '61',
417: 1:  'history': [
417: 1:    {
417: 1:      'answer': '2',
417: 1:      'question': '1',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '3',
417: 1:      'question': '2',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '5',
417: 1:      'question': '3',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '7',
417: 1:      'question': '4',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '11',
417: 1:      'question': '5',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '13',
417: 1:      'question': '6',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '17',
417: 1:      'question': '7',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '19',
417: 1:      'question': '8',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '23',
417: 1:      'question': '9',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '29',
417: 1:      'question': '10',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '31',
417: 1:      'question': '11',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '37',
417: 1:      'question': '12',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '41',
417: 1:      'question': '13',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '43',
417: 1:      'question': '14',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '47',
417: 1:      'question': '15',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '53',
417: 1:      'question': '16',
417: 1:      'valid': true
417: 1:    },
417: 1:    {
417: 1:      'answer': '59',
417: 1:      'question': '17',
417: 1:      'valid': true
417: 1:    }
417: 1:  ],
417: 1:  'info': [
417: 1:    '✅f(1) = 2',
417: 1:    '✅f(2) = 3',
417: 1:    '✅f(3) = 5',
417: 1:    '✅f(4) = 7',
417: 1:    '✅f(5) = 11',
417: 1:    '✅f(6) = 13',
417: 1:    '✅f(7) = 17',
417: 1:    '✅f(8) = 19',
417: 1:    '✅f(9) = 23',
417: 1:    '✅f(10) = 29',
417: 1:    '✅f(11) = 31',
417: 1:    '✅f(12) = 37',
417: 1:    '✅f(13) = 41',
417: 1:    '✅f(14) = 43',
417: 1:    '✅f(15) = 47',
417: 1:    '✅f(16) = 53',
417: 1:    '✅f(17) = 59',
417: 1:    '❌f(18) = ??? != 61'
417: 1:  ],
417: 1:  'level': 15,
417: 1:  'nextQuestion': '18',
417: 1:  'questions': [
417: 1:    '1',
417: 1:    '2',
417: 1:    '3',
417: 1:    '4',
417: 1:    '5',
417: 1:    '6',
417: 1:    '7',
417: 1:    '8',
417: 1:    '9',
417: 1:    '10',
417: 1:    '11',
417: 1:    '12',
417: 1:    '13',
417: 1:    '14',
417: 1:    '15',
417: 1:    '16',
417: 1:    '17',
417: 1:    '18'
417: 1:  ]
417: 1:}
417: 1:Scores: 46385
417: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61']')
417: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
418: 1:BoardData {
418: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
418: 1:  'expectedAnswer': '67',
418: 1:  'history': [
418: 1:    {
418: 1:      'answer': '2',
418: 1:      'question': '1',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '3',
418: 1:      'question': '2',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '5',
418: 1:      'question': '3',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '7',
418: 1:      'question': '4',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '11',
418: 1:      'question': '5',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '13',
418: 1:      'question': '6',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '17',
418: 1:      'question': '7',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '19',
418: 1:      'question': '8',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '23',
418: 1:      'question': '9',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '29',
418: 1:      'question': '10',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '31',
418: 1:      'question': '11',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '37',
418: 1:      'question': '12',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '41',
418: 1:      'question': '13',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '43',
418: 1:      'question': '14',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '47',
418: 1:      'question': '15',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '53',
418: 1:      'question': '16',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '59',
418: 1:      'question': '17',
418: 1:      'valid': true
418: 1:    },
418: 1:    {
418: 1:      'answer': '61',
418: 1:      'question': '18',
418: 1:      'valid': true
418: 1:    }
418: 1:  ],
418: 1:  'info': [
418: 1:    '✅f(1) = 2',
418: 1:    '✅f(2) = 3',
418: 1:    '✅f(3) = 5',
418: 1:    '✅f(4) = 7',
418: 1:    '✅f(5) = 11',
418: 1:    '✅f(6) = 13',
418: 1:    '✅f(7) = 17',
418: 1:    '✅f(8) = 19',
418: 1:    '✅f(9) = 23',
418: 1:    '✅f(10) = 29',
418: 1:    '✅f(11) = 31',
418: 1:    '✅f(12) = 37',
418: 1:    '✅f(13) = 41',
418: 1:    '✅f(14) = 43',
418: 1:    '✅f(15) = 47',
418: 1:    '✅f(16) = 53',
418: 1:    '✅f(17) = 59',
418: 1:    '✅f(18) = 61',
418: 1:    '❌f(19) = ??? != 67'
418: 1:  ],
418: 1:  'level': 15,
418: 1:  'nextQuestion': '19',
418: 1:  'questions': [
418: 1:    '1',
418: 1:    '2',
418: 1:    '3',
418: 1:    '4',
418: 1:    '5',
418: 1:    '6',
418: 1:    '7',
418: 1:    '8',
418: 1:    '9',
418: 1:    '10',
418: 1:    '11',
418: 1:    '12',
418: 1:    '13',
418: 1:    '14',
418: 1:    '15',
418: 1:    '16',
418: 1:    '17',
418: 1:    '18',
418: 1:    '19'
418: 1:  ]
418: 1:}
418: 1:Scores: 46407
418: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67']')
418: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
419: 1:BoardData {
419: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
419: 1:  'expectedAnswer': '71',
419: 1:  'history': [
419: 1:    {
419: 1:      'answer': '2',
419: 1:      'question': '1',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '3',
419: 1:      'question': '2',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '5',
419: 1:      'question': '3',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '7',
419: 1:      'question': '4',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '11',
419: 1:      'question': '5',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '13',
419: 1:      'question': '6',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '17',
419: 1:      'question': '7',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '19',
419: 1:      'question': '8',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '23',
419: 1:      'question': '9',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '29',
419: 1:      'question': '10',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '31',
419: 1:      'question': '11',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '37',
419: 1:      'question': '12',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '41',
419: 1:      'question': '13',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '43',
419: 1:      'question': '14',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '47',
419: 1:      'question': '15',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '53',
419: 1:      'question': '16',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '59',
419: 1:      'question': '17',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '61',
419: 1:      'question': '18',
419: 1:      'valid': true
419: 1:    },
419: 1:    {
419: 1:      'answer': '67',
419: 1:      'question': '19',
419: 1:      'valid': true
419: 1:    }
419: 1:  ],
419: 1:  'info': [
419: 1:    '✅f(1) = 2',
419: 1:    '✅f(2) = 3',
419: 1:    '✅f(3) = 5',
419: 1:    '✅f(4) = 7',
419: 1:    '✅f(5) = 11',
419: 1:    '✅f(6) = 13',
419: 1:    '✅f(7) = 17',
419: 1:    '✅f(8) = 19',
419: 1:    '✅f(9) = 23',
419: 1:    '✅f(10) = 29',
419: 1:    '✅f(11) = 31',
419: 1:    '✅f(12) = 37',
419: 1:    '✅f(13) = 41',
419: 1:    '✅f(14) = 43',
419: 1:    '✅f(15) = 47',
419: 1:    '✅f(16) = 53',
419: 1:    '✅f(17) = 59',
419: 1:    '✅f(18) = 61',
419: 1:    '✅f(19) = 67',
419: 1:    '❌f(20) = ??? != 71'
419: 1:  ],
419: 1:  'level': 15,
419: 1:  'nextQuestion': '20',
419: 1:  'questions': [
419: 1:    '1',
419: 1:    '2',
419: 1:    '3',
419: 1:    '4',
419: 1:    '5',
419: 1:    '6',
419: 1:    '7',
419: 1:    '8',
419: 1:    '9',
419: 1:    '10',
419: 1:    '11',
419: 1:    '12',
419: 1:    '13',
419: 1:    '14',
419: 1:    '15',
419: 1:    '16',
419: 1:    '17',
419: 1:    '18',
419: 1:    '19',
419: 1:    '20'
419: 1:  ]
419: 1:}
419: 1:Scores: 46429
419: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71']')
419: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
420: 1:BoardData {
420: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
420: 1:  'expectedAnswer': '73',
420: 1:  'history': [
420: 1:    {
420: 1:      'answer': '2',
420: 1:      'question': '1',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '3',
420: 1:      'question': '2',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '5',
420: 1:      'question': '3',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '7',
420: 1:      'question': '4',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '11',
420: 1:      'question': '5',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '13',
420: 1:      'question': '6',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '17',
420: 1:      'question': '7',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '19',
420: 1:      'question': '8',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '23',
420: 1:      'question': '9',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '29',
420: 1:      'question': '10',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '31',
420: 1:      'question': '11',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '37',
420: 1:      'question': '12',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '41',
420: 1:      'question': '13',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '43',
420: 1:      'question': '14',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '47',
420: 1:      'question': '15',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '53',
420: 1:      'question': '16',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '59',
420: 1:      'question': '17',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '61',
420: 1:      'question': '18',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '67',
420: 1:      'question': '19',
420: 1:      'valid': true
420: 1:    },
420: 1:    {
420: 1:      'answer': '71',
420: 1:      'question': '20',
420: 1:      'valid': true
420: 1:    }
420: 1:  ],
420: 1:  'info': [
420: 1:    '✅f(1) = 2',
420: 1:    '✅f(2) = 3',
420: 1:    '✅f(3) = 5',
420: 1:    '✅f(4) = 7',
420: 1:    '✅f(5) = 11',
420: 1:    '✅f(6) = 13',
420: 1:    '✅f(7) = 17',
420: 1:    '✅f(8) = 19',
420: 1:    '✅f(9) = 23',
420: 1:    '✅f(10) = 29',
420: 1:    '✅f(11) = 31',
420: 1:    '✅f(12) = 37',
420: 1:    '✅f(13) = 41',
420: 1:    '✅f(14) = 43',
420: 1:    '✅f(15) = 47',
420: 1:    '✅f(16) = 53',
420: 1:    '✅f(17) = 59',
420: 1:    '✅f(18) = 61',
420: 1:    '✅f(19) = 67',
420: 1:    '✅f(20) = 71',
420: 1:    '❌f(21) = ??? != 73'
420: 1:  ],
420: 1:  'level': 15,
420: 1:  'nextQuestion': '21',
420: 1:  'questions': [
420: 1:    '1',
420: 1:    '2',
420: 1:    '3',
420: 1:    '4',
420: 1:    '5',
420: 1:    '6',
420: 1:    '7',
420: 1:    '8',
420: 1:    '9',
420: 1:    '10',
420: 1:    '11',
420: 1:    '12',
420: 1:    '13',
420: 1:    '14',
420: 1:    '15',
420: 1:    '16',
420: 1:    '17',
420: 1:    '18',
420: 1:    '19',
420: 1:    '20',
420: 1:    '21'
420: 1:  ]
420: 1:}
420: 1:Scores: 46451
420: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73']')
420: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
421: 1:BoardData {
421: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
421: 1:  'expectedAnswer': '79',
421: 1:  'history': [
421: 1:    {
421: 1:      'answer': '2',
421: 1:      'question': '1',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '3',
421: 1:      'question': '2',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '5',
421: 1:      'question': '3',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '7',
421: 1:      'question': '4',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '11',
421: 1:      'question': '5',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '13',
421: 1:      'question': '6',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '17',
421: 1:      'question': '7',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '19',
421: 1:      'question': '8',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '23',
421: 1:      'question': '9',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '29',
421: 1:      'question': '10',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '31',
421: 1:      'question': '11',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '37',
421: 1:      'question': '12',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '41',
421: 1:      'question': '13',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '43',
421: 1:      'question': '14',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '47',
421: 1:      'question': '15',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '53',
421: 1:      'question': '16',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '59',
421: 1:      'question': '17',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '61',
421: 1:      'question': '18',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '67',
421: 1:      'question': '19',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '71',
421: 1:      'question': '20',
421: 1:      'valid': true
421: 1:    },
421: 1:    {
421: 1:      'answer': '73',
421: 1:      'question': '21',
421: 1:      'valid': true
421: 1:    }
421: 1:  ],
421: 1:  'info': [
421: 1:    '✅f(1) = 2',
421: 1:    '✅f(2) = 3',
421: 1:    '✅f(3) = 5',
421: 1:    '✅f(4) = 7',
421: 1:    '✅f(5) = 11',
421: 1:    '✅f(6) = 13',
421: 1:    '✅f(7) = 17',
421: 1:    '✅f(8) = 19',
421: 1:    '✅f(9) = 23',
421: 1:    '✅f(10) = 29',
421: 1:    '✅f(11) = 31',
421: 1:    '✅f(12) = 37',
421: 1:    '✅f(13) = 41',
421: 1:    '✅f(14) = 43',
421: 1:    '✅f(15) = 47',
421: 1:    '✅f(16) = 53',
421: 1:    '✅f(17) = 59',
421: 1:    '✅f(18) = 61',
421: 1:    '✅f(19) = 67',
421: 1:    '✅f(20) = 71',
421: 1:    '✅f(21) = 73',
421: 1:    '❌f(22) = ??? != 79'
421: 1:  ],
421: 1:  'level': 15,
421: 1:  'nextQuestion': '22',
421: 1:  'questions': [
421: 1:    '1',
421: 1:    '2',
421: 1:    '3',
421: 1:    '4',
421: 1:    '5',
421: 1:    '6',
421: 1:    '7',
421: 1:    '8',
421: 1:    '9',
421: 1:    '10',
421: 1:    '11',
421: 1:    '12',
421: 1:    '13',
421: 1:    '14',
421: 1:    '15',
421: 1:    '16',
421: 1:    '17',
421: 1:    '18',
421: 1:    '19',
421: 1:    '20',
421: 1:    '21',
421: 1:    '22'
421: 1:  ]
421: 1:}
421: 1:Scores: 46473
421: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79']')
421: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
422: 1:BoardData {
422: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
422: 1:  'expectedAnswer': '83',
422: 1:  'history': [
422: 1:    {
422: 1:      'answer': '2',
422: 1:      'question': '1',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '3',
422: 1:      'question': '2',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '5',
422: 1:      'question': '3',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '7',
422: 1:      'question': '4',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '11',
422: 1:      'question': '5',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '13',
422: 1:      'question': '6',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '17',
422: 1:      'question': '7',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '19',
422: 1:      'question': '8',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '23',
422: 1:      'question': '9',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '29',
422: 1:      'question': '10',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '31',
422: 1:      'question': '11',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '37',
422: 1:      'question': '12',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '41',
422: 1:      'question': '13',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '43',
422: 1:      'question': '14',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '47',
422: 1:      'question': '15',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '53',
422: 1:      'question': '16',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '59',
422: 1:      'question': '17',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '61',
422: 1:      'question': '18',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '67',
422: 1:      'question': '19',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '71',
422: 1:      'question': '20',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '73',
422: 1:      'question': '21',
422: 1:      'valid': true
422: 1:    },
422: 1:    {
422: 1:      'answer': '79',
422: 1:      'question': '22',
422: 1:      'valid': true
422: 1:    }
422: 1:  ],
422: 1:  'info': [
422: 1:    '✅f(1) = 2',
422: 1:    '✅f(2) = 3',
422: 1:    '✅f(3) = 5',
422: 1:    '✅f(4) = 7',
422: 1:    '✅f(5) = 11',
422: 1:    '✅f(6) = 13',
422: 1:    '✅f(7) = 17',
422: 1:    '✅f(8) = 19',
422: 1:    '✅f(9) = 23',
422: 1:    '✅f(10) = 29',
422: 1:    '✅f(11) = 31',
422: 1:    '✅f(12) = 37',
422: 1:    '✅f(13) = 41',
422: 1:    '✅f(14) = 43',
422: 1:    '✅f(15) = 47',
422: 1:    '✅f(16) = 53',
422: 1:    '✅f(17) = 59',
422: 1:    '✅f(18) = 61',
422: 1:    '✅f(19) = 67',
422: 1:    '✅f(20) = 71',
422: 1:    '✅f(21) = 73',
422: 1:    '✅f(22) = 79',
422: 1:    '❌f(23) = ??? != 83'
422: 1:  ],
422: 1:  'level': 15,
422: 1:  'nextQuestion': '23',
422: 1:  'questions': [
422: 1:    '1',
422: 1:    '2',
422: 1:    '3',
422: 1:    '4',
422: 1:    '5',
422: 1:    '6',
422: 1:    '7',
422: 1:    '8',
422: 1:    '9',
422: 1:    '10',
422: 1:    '11',
422: 1:    '12',
422: 1:    '13',
422: 1:    '14',
422: 1:    '15',
422: 1:    '16',
422: 1:    '17',
422: 1:    '18',
422: 1:    '19',
422: 1:    '20',
422: 1:    '21',
422: 1:    '22',
422: 1:    '23'
422: 1:  ]
422: 1:}
422: 1:Scores: 46495
422: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83']')
422: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
423: 1:BoardData {
423: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
423: 1:  'expectedAnswer': '89',
423: 1:  'history': [
423: 1:    {
423: 1:      'answer': '2',
423: 1:      'question': '1',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '3',
423: 1:      'question': '2',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '5',
423: 1:      'question': '3',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '7',
423: 1:      'question': '4',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '11',
423: 1:      'question': '5',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '13',
423: 1:      'question': '6',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '17',
423: 1:      'question': '7',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '19',
423: 1:      'question': '8',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '23',
423: 1:      'question': '9',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '29',
423: 1:      'question': '10',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '31',
423: 1:      'question': '11',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '37',
423: 1:      'question': '12',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '41',
423: 1:      'question': '13',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '43',
423: 1:      'question': '14',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '47',
423: 1:      'question': '15',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '53',
423: 1:      'question': '16',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '59',
423: 1:      'question': '17',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '61',
423: 1:      'question': '18',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '67',
423: 1:      'question': '19',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '71',
423: 1:      'question': '20',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '73',
423: 1:      'question': '21',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '79',
423: 1:      'question': '22',
423: 1:      'valid': true
423: 1:    },
423: 1:    {
423: 1:      'answer': '83',
423: 1:      'question': '23',
423: 1:      'valid': true
423: 1:    }
423: 1:  ],
423: 1:  'info': [
423: 1:    '✅f(1) = 2',
423: 1:    '✅f(2) = 3',
423: 1:    '✅f(3) = 5',
423: 1:    '✅f(4) = 7',
423: 1:    '✅f(5) = 11',
423: 1:    '✅f(6) = 13',
423: 1:    '✅f(7) = 17',
423: 1:    '✅f(8) = 19',
423: 1:    '✅f(9) = 23',
423: 1:    '✅f(10) = 29',
423: 1:    '✅f(11) = 31',
423: 1:    '✅f(12) = 37',
423: 1:    '✅f(13) = 41',
423: 1:    '✅f(14) = 43',
423: 1:    '✅f(15) = 47',
423: 1:    '✅f(16) = 53',
423: 1:    '✅f(17) = 59',
423: 1:    '✅f(18) = 61',
423: 1:    '✅f(19) = 67',
423: 1:    '✅f(20) = 71',
423: 1:    '✅f(21) = 73',
423: 1:    '✅f(22) = 79',
423: 1:    '✅f(23) = 83',
423: 1:    '❌f(24) = ??? != 89'
423: 1:  ],
423: 1:  'level': 15,
423: 1:  'nextQuestion': '24',
423: 1:  'questions': [
423: 1:    '1',
423: 1:    '2',
423: 1:    '3',
423: 1:    '4',
423: 1:    '5',
423: 1:    '6',
423: 1:    '7',
423: 1:    '8',
423: 1:    '9',
423: 1:    '10',
423: 1:    '11',
423: 1:    '12',
423: 1:    '13',
423: 1:    '14',
423: 1:    '15',
423: 1:    '16',
423: 1:    '17',
423: 1:    '18',
423: 1:    '19',
423: 1:    '20',
423: 1:    '21',
423: 1:    '22',
423: 1:    '23',
423: 1:    '24'
423: 1:  ]
423: 1:}
423: 1:Scores: 46517
423: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83', '89']')
423: 1:Fire Event: PassTest{complexity=55, testCount=25}
------------------------------------------
424: 1:BoardData {
424: 1:  'description': ['The first 10 prime numbers are 2, 3, 5, 7, 11, 13, 17, 19, 23, 29. Write a method that returns the i-th prime number.'],
424: 1:  'expectedAnswer': '97',
424: 1:  'history': [
424: 1:    {
424: 1:      'answer': '2',
424: 1:      'question': '1',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '3',
424: 1:      'question': '2',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '5',
424: 1:      'question': '3',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '7',
424: 1:      'question': '4',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '11',
424: 1:      'question': '5',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '13',
424: 1:      'question': '6',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '17',
424: 1:      'question': '7',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '19',
424: 1:      'question': '8',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '23',
424: 1:      'question': '9',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '29',
424: 1:      'question': '10',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '31',
424: 1:      'question': '11',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '37',
424: 1:      'question': '12',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '41',
424: 1:      'question': '13',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '43',
424: 1:      'question': '14',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '47',
424: 1:      'question': '15',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '53',
424: 1:      'question': '16',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '59',
424: 1:      'question': '17',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '61',
424: 1:      'question': '18',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '67',
424: 1:      'question': '19',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '71',
424: 1:      'question': '20',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '73',
424: 1:      'question': '21',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '79',
424: 1:      'question': '22',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '83',
424: 1:      'question': '23',
424: 1:      'valid': true
424: 1:    },
424: 1:    {
424: 1:      'answer': '89',
424: 1:      'question': '24',
424: 1:      'valid': true
424: 1:    }
424: 1:  ],
424: 1:  'info': [
424: 1:    '✅f(1) = 2',
424: 1:    '✅f(2) = 3',
424: 1:    '✅f(3) = 5',
424: 1:    '✅f(4) = 7',
424: 1:    '✅f(5) = 11',
424: 1:    '✅f(6) = 13',
424: 1:    '✅f(7) = 17',
424: 1:    '✅f(8) = 19',
424: 1:    '✅f(9) = 23',
424: 1:    '✅f(10) = 29',
424: 1:    '✅f(11) = 31',
424: 1:    '✅f(12) = 37',
424: 1:    '✅f(13) = 41',
424: 1:    '✅f(14) = 43',
424: 1:    '✅f(15) = 47',
424: 1:    '✅f(16) = 53',
424: 1:    '✅f(17) = 59',
424: 1:    '✅f(18) = 61',
424: 1:    '✅f(19) = 67',
424: 1:    '✅f(20) = 71',
424: 1:    '✅f(21) = 73',
424: 1:    '✅f(22) = 79',
424: 1:    '✅f(23) = 83',
424: 1:    '✅f(24) = 89',
424: 1:    '❌f(25) = ??? != 97'
424: 1:  ],
424: 1:  'level': 15,
424: 1:  'nextQuestion': '25',
424: 1:  'questions': [
424: 1:    '1',
424: 1:    '2',
424: 1:    '3',
424: 1:    '4',
424: 1:    '5',
424: 1:    '6',
424: 1:    '7',
424: 1:    '8',
424: 1:    '9',
424: 1:    '10',
424: 1:    '11',
424: 1:    '12',
424: 1:    '13',
424: 1:    '14',
424: 1:    '15',
424: 1:    '16',
424: 1:    '17',
424: 1:    '18',
424: 1:    '19',
424: 1:    '20',
424: 1:    '21',
424: 1:    '22',
424: 1:    '23',
424: 1:    '24',
424: 1:    '25'
424: 1:  ]
424: 1:}
424: 1:Scores: 46539
424: 1:Answer: message('['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83', '89', '97']')
424: 1:Fire Event: PassTest{complexity=55, testCount=25}
424: 1:Fire Event: NextAlgorithm{complexity=55, time=0}
------------------------------------------
425: 1:BoardData {
425: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
425: 1:  'history': [
425: 1:    {
425: 1:      'answer': '2',
425: 1:      'question': '1',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '3',
425: 1:      'question': '2',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '5',
425: 1:      'question': '3',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '7',
425: 1:      'question': '4',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '11',
425: 1:      'question': '5',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '13',
425: 1:      'question': '6',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '17',
425: 1:      'question': '7',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '19',
425: 1:      'question': '8',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '23',
425: 1:      'question': '9',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '29',
425: 1:      'question': '10',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '31',
425: 1:      'question': '11',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '37',
425: 1:      'question': '12',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '41',
425: 1:      'question': '13',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '43',
425: 1:      'question': '14',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '47',
425: 1:      'question': '15',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '53',
425: 1:      'question': '16',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '59',
425: 1:      'question': '17',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '61',
425: 1:      'question': '18',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '67',
425: 1:      'question': '19',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '71',
425: 1:      'question': '20',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '73',
425: 1:      'question': '21',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '79',
425: 1:      'question': '22',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '83',
425: 1:      'question': '23',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '89',
425: 1:      'question': '24',
425: 1:      'valid': true
425: 1:    },
425: 1:    {
425: 1:      'answer': '97',
425: 1:      'question': '25',
425: 1:      'valid': true
425: 1:    }
425: 1:  ],
425: 1:  'info': [
425: 1:    '✅f(1) = 2',
425: 1:    '✅f(2) = 3',
425: 1:    '✅f(3) = 5',
425: 1:    '✅f(4) = 7',
425: 1:    '✅f(5) = 11',
425: 1:    '✅f(6) = 13',
425: 1:    '✅f(7) = 17',
425: 1:    '✅f(8) = 19',
425: 1:    '✅f(9) = 23',
425: 1:    '✅f(10) = 29',
425: 1:    '✅f(11) = 31',
425: 1:    '✅f(12) = 37',
425: 1:    '✅f(13) = 41',
425: 1:    '✅f(14) = 43',
425: 1:    '✅f(15) = 47',
425: 1:    '✅f(16) = 53',
425: 1:    '✅f(17) = 59',
425: 1:    '✅f(18) = 61',
425: 1:    '✅f(19) = 67',
425: 1:    '✅f(20) = 71',
425: 1:    '✅f(21) = 73',
425: 1:    '✅f(22) = 79',
425: 1:    '✅f(23) = 83',
425: 1:    '✅f(24) = 89',
425: 1:    '✅f(25) = 97'
425: 1:  ],
425: 1:  'level': 15,
425: 1:  'questions': []
425: 1:}
425: 1:Scores: 53985
425: 1:Answer: message('StartNextLevel')
425: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
426: 1:BoardData {
426: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
426: 1:  'expectedAnswer': '0.5',
426: 1:  'history': [],
426: 1:  'info': ['❌f(1, 2) = ??? != 0.5'],
426: 1:  'level': 16,
426: 1:  'nextQuestion': '1, 2',
426: 1:  'questions': ['1, 2']
426: 1:}
426: 1:Scores: 53985
426: 1:Answer: message('['0.5']')
426: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
427: 1:BoardData {
427: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
427: 1:  'expectedAnswer': '1',
427: 1:  'history': [{
427: 1:    'answer': '0.5',
427: 1:    'question': '1, 2',
427: 1:    'valid': true
427: 1:  }],
427: 1:  'info': [
427: 1:    '✅f(1, 2) = 0.5',
427: 1:    '❌f(1, 1) = ??? != 1'
427: 1:  ],
427: 1:  'level': 16,
427: 1:  'nextQuestion': '1, 1',
427: 1:  'questions': [
427: 1:    '1, 2',
427: 1:    '1, 1'
427: 1:  ]
427: 1:}
427: 1:Scores: 54006
427: 1:Answer: message('['0.5', '1']')
427: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
428: 1:BoardData {
428: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
428: 1:  'expectedAnswer': '1',
428: 1:  'history': [
428: 1:    {
428: 1:      'answer': '0.5',
428: 1:      'question': '1, 2',
428: 1:      'valid': true
428: 1:    },
428: 1:    {
428: 1:      'answer': '1',
428: 1:      'question': '1, 1',
428: 1:      'valid': true
428: 1:    }
428: 1:  ],
428: 1:  'info': [
428: 1:    '✅f(1, 2) = 0.5',
428: 1:    '✅f(1, 1) = 1',
428: 1:    '❌f(5, 5) = ??? != 1'
428: 1:  ],
428: 1:  'level': 16,
428: 1:  'nextQuestion': '5, 5',
428: 1:  'questions': [
428: 1:    '1, 2',
428: 1:    '1, 1',
428: 1:    '5, 5'
428: 1:  ]
428: 1:}
428: 1:Scores: 54027
428: 1:Answer: message('['0.5', '1', '1']')
428: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
429: 1:BoardData {
429: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
429: 1:  'expectedAnswer': '11',
429: 1:  'history': [
429: 1:    {
429: 1:      'answer': '0.5',
429: 1:      'question': '1, 2',
429: 1:      'valid': true
429: 1:    },
429: 1:    {
429: 1:      'answer': '1',
429: 1:      'question': '1, 1',
429: 1:      'valid': true
429: 1:    },
429: 1:    {
429: 1:      'answer': '1',
429: 1:      'question': '5, 5',
429: 1:      'valid': true
429: 1:    }
429: 1:  ],
429: 1:  'info': [
429: 1:    '✅f(1, 2) = 0.5',
429: 1:    '✅f(1, 1) = 1',
429: 1:    '✅f(5, 5) = 1',
429: 1:    '❌f(55, 5) = ??? != 11'
429: 1:  ],
429: 1:  'level': 16,
429: 1:  'nextQuestion': '55, 5',
429: 1:  'questions': [
429: 1:    '1, 2',
429: 1:    '1, 1',
429: 1:    '5, 5',
429: 1:    '55, 5'
429: 1:  ]
429: 1:}
429: 1:Scores: 54048
429: 1:Answer: message('['0.5', '1', '1', '11']')
429: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
430: 1:BoardData {
430: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
430: 1:  'expectedAnswer': '1.25',
430: 1:  'history': [
430: 1:    {
430: 1:      'answer': '0.5',
430: 1:      'question': '1, 2',
430: 1:      'valid': true
430: 1:    },
430: 1:    {
430: 1:      'answer': '1',
430: 1:      'question': '1, 1',
430: 1:      'valid': true
430: 1:    },
430: 1:    {
430: 1:      'answer': '1',
430: 1:      'question': '5, 5',
430: 1:      'valid': true
430: 1:    },
430: 1:    {
430: 1:      'answer': '11',
430: 1:      'question': '55, 5',
430: 1:      'valid': true
430: 1:    }
430: 1:  ],
430: 1:  'info': [
430: 1:    '✅f(1, 2) = 0.5',
430: 1:    '✅f(1, 1) = 1',
430: 1:    '✅f(5, 5) = 1',
430: 1:    '✅f(55, 5) = 11',
430: 1:    '❌f(55, 44) = ??? != 1.25'
430: 1:  ],
430: 1:  'level': 16,
430: 1:  'nextQuestion': '55, 44',
430: 1:  'questions': [
430: 1:    '1, 2',
430: 1:    '1, 1',
430: 1:    '5, 5',
430: 1:    '55, 5',
430: 1:    '55, 44'
430: 1:  ]
430: 1:}
430: 1:Scores: 54069
430: 1:Answer: message('['0.5', '1', '1', '11', '1.25']')
430: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
431: 1:BoardData {
431: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
431: 1:  'expectedAnswer': '0',
431: 1:  'history': [
431: 1:    {
431: 1:      'answer': '0.5',
431: 1:      'question': '1, 2',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '1',
431: 1:      'question': '1, 1',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '1',
431: 1:      'question': '5, 5',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '11',
431: 1:      'question': '55, 5',
431: 1:      'valid': true
431: 1:    },
431: 1:    {
431: 1:      'answer': '1.25',
431: 1:      'question': '55, 44',
431: 1:      'valid': true
431: 1:    }
431: 1:  ],
431: 1:  'info': [
431: 1:    '✅f(1, 2) = 0.5',
431: 1:    '✅f(1, 1) = 1',
431: 1:    '✅f(5, 5) = 1',
431: 1:    '✅f(55, 5) = 11',
431: 1:    '✅f(55, 44) = 1.25',
431: 1:    '❌f(0, 56) = ??? != 0'
431: 1:  ],
431: 1:  'level': 16,
431: 1:  'nextQuestion': '0, 56',
431: 1:  'questions': [
431: 1:    '1, 2',
431: 1:    '1, 1',
431: 1:    '5, 5',
431: 1:    '55, 5',
431: 1:    '55, 44',
431: 1:    '0, 56'
431: 1:  ]
431: 1:}
431: 1:Scores: 54090
431: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0']')
431: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
432: 1:BoardData {
432: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
432: 1:  'expectedAnswer': '56',
432: 1:  'history': [
432: 1:    {
432: 1:      'answer': '0.5',
432: 1:      'question': '1, 2',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '1',
432: 1:      'question': '1, 1',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '1',
432: 1:      'question': '5, 5',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '11',
432: 1:      'question': '55, 5',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '1.25',
432: 1:      'question': '55, 44',
432: 1:      'valid': true
432: 1:    },
432: 1:    {
432: 1:      'answer': '0',
432: 1:      'question': '0, 56',
432: 1:      'valid': true
432: 1:    }
432: 1:  ],
432: 1:  'info': [
432: 1:    '✅f(1, 2) = 0.5',
432: 1:    '✅f(1, 1) = 1',
432: 1:    '✅f(5, 5) = 1',
432: 1:    '✅f(55, 5) = 11',
432: 1:    '✅f(55, 44) = 1.25',
432: 1:    '✅f(0, 56) = 0',
432: 1:    '❌f(56, 1) = ??? != 56'
432: 1:  ],
432: 1:  'level': 16,
432: 1:  'nextQuestion': '56, 1',
432: 1:  'questions': [
432: 1:    '1, 2',
432: 1:    '1, 1',
432: 1:    '5, 5',
432: 1:    '55, 5',
432: 1:    '55, 44',
432: 1:    '0, 56',
432: 1:    '56, 1'
432: 1:  ]
432: 1:}
432: 1:Scores: 54111
432: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56']')
432: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
433: 1:BoardData {
433: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
433: 1:  'expectedAnswer': '-0.5',
433: 1:  'history': [
433: 1:    {
433: 1:      'answer': '0.5',
433: 1:      'question': '1, 2',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '1',
433: 1:      'question': '1, 1',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '1',
433: 1:      'question': '5, 5',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '11',
433: 1:      'question': '55, 5',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '1.25',
433: 1:      'question': '55, 44',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '0',
433: 1:      'question': '0, 56',
433: 1:      'valid': true
433: 1:    },
433: 1:    {
433: 1:      'answer': '56',
433: 1:      'question': '56, 1',
433: 1:      'valid': true
433: 1:    }
433: 1:  ],
433: 1:  'info': [
433: 1:    '✅f(1, 2) = 0.5',
433: 1:    '✅f(1, 1) = 1',
433: 1:    '✅f(5, 5) = 1',
433: 1:    '✅f(55, 5) = 11',
433: 1:    '✅f(55, 44) = 1.25',
433: 1:    '✅f(0, 56) = 0',
433: 1:    '✅f(56, 1) = 56',
433: 1:    '❌f(1, -2) = ??? != -0.5'
433: 1:  ],
433: 1:  'level': 16,
433: 1:  'nextQuestion': '1, -2',
433: 1:  'questions': [
433: 1:    '1, 2',
433: 1:    '1, 1',
433: 1:    '5, 5',
433: 1:    '55, 5',
433: 1:    '55, 44',
433: 1:    '0, 56',
433: 1:    '56, 1',
433: 1:    '1, -2'
433: 1:  ]
433: 1:}
433: 1:Scores: 54132
433: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5']')
433: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
434: 1:BoardData {
434: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
434: 1:  'expectedAnswer': '-0.5',
434: 1:  'history': [
434: 1:    {
434: 1:      'answer': '0.5',
434: 1:      'question': '1, 2',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '1',
434: 1:      'question': '1, 1',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '1',
434: 1:      'question': '5, 5',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '11',
434: 1:      'question': '55, 5',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '1.25',
434: 1:      'question': '55, 44',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '0',
434: 1:      'question': '0, 56',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '56',
434: 1:      'question': '56, 1',
434: 1:      'valid': true
434: 1:    },
434: 1:    {
434: 1:      'answer': '-0.5',
434: 1:      'question': '1, -2',
434: 1:      'valid': true
434: 1:    }
434: 1:  ],
434: 1:  'info': [
434: 1:    '✅f(1, 2) = 0.5',
434: 1:    '✅f(1, 1) = 1',
434: 1:    '✅f(5, 5) = 1',
434: 1:    '✅f(55, 5) = 11',
434: 1:    '✅f(55, 44) = 1.25',
434: 1:    '✅f(0, 56) = 0',
434: 1:    '✅f(56, 1) = 56',
434: 1:    '✅f(1, -2) = -0.5',
434: 1:    '❌f(-1, 2) = ??? != -0.5'
434: 1:  ],
434: 1:  'level': 16,
434: 1:  'nextQuestion': '-1, 2',
434: 1:  'questions': [
434: 1:    '1, 2',
434: 1:    '1, 1',
434: 1:    '5, 5',
434: 1:    '55, 5',
434: 1:    '55, 44',
434: 1:    '0, 56',
434: 1:    '56, 1',
434: 1:    '1, -2',
434: 1:    '-1, 2'
434: 1:  ]
434: 1:}
434: 1:Scores: 54153
434: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5']')
434: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
435: 1:BoardData {
435: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
435: 1:  'expectedAnswer': '0.5',
435: 1:  'history': [
435: 1:    {
435: 1:      'answer': '0.5',
435: 1:      'question': '1, 2',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '1',
435: 1:      'question': '1, 1',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '1',
435: 1:      'question': '5, 5',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '11',
435: 1:      'question': '55, 5',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '1.25',
435: 1:      'question': '55, 44',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '0',
435: 1:      'question': '0, 56',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '56',
435: 1:      'question': '56, 1',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '-0.5',
435: 1:      'question': '1, -2',
435: 1:      'valid': true
435: 1:    },
435: 1:    {
435: 1:      'answer': '-0.5',
435: 1:      'question': '-1, 2',
435: 1:      'valid': true
435: 1:    }
435: 1:  ],
435: 1:  'info': [
435: 1:    '✅f(1, 2) = 0.5',
435: 1:    '✅f(1, 1) = 1',
435: 1:    '✅f(5, 5) = 1',
435: 1:    '✅f(55, 5) = 11',
435: 1:    '✅f(55, 44) = 1.25',
435: 1:    '✅f(0, 56) = 0',
435: 1:    '✅f(56, 1) = 56',
435: 1:    '✅f(1, -2) = -0.5',
435: 1:    '✅f(-1, 2) = -0.5',
435: 1:    '❌f(-1, -2) = ??? != 0.5'
435: 1:  ],
435: 1:  'level': 16,
435: 1:  'nextQuestion': '-1, -2',
435: 1:  'questions': [
435: 1:    '1, 2',
435: 1:    '1, 1',
435: 1:    '5, 5',
435: 1:    '55, 5',
435: 1:    '55, 44',
435: 1:    '0, 56',
435: 1:    '56, 1',
435: 1:    '1, -2',
435: 1:    '-1, 2',
435: 1:    '-1, -2'
435: 1:  ]
435: 1:}
435: 1:Scores: 54174
435: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5']')
435: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
436: 1:BoardData {
436: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
436: 1:  'expectedAnswer': '0.001',
436: 1:  'history': [
436: 1:    {
436: 1:      'answer': '0.5',
436: 1:      'question': '1, 2',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '1',
436: 1:      'question': '1, 1',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '1',
436: 1:      'question': '5, 5',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '11',
436: 1:      'question': '55, 5',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '1.25',
436: 1:      'question': '55, 44',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '0',
436: 1:      'question': '0, 56',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '56',
436: 1:      'question': '56, 1',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '-0.5',
436: 1:      'question': '1, -2',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '-0.5',
436: 1:      'question': '-1, 2',
436: 1:      'valid': true
436: 1:    },
436: 1:    {
436: 1:      'answer': '0.5',
436: 1:      'question': '-1, -2',
436: 1:      'valid': true
436: 1:    }
436: 1:  ],
436: 1:  'info': [
436: 1:    '✅f(1, 2) = 0.5',
436: 1:    '✅f(1, 1) = 1',
436: 1:    '✅f(5, 5) = 1',
436: 1:    '✅f(55, 5) = 11',
436: 1:    '✅f(55, 44) = 1.25',
436: 1:    '✅f(0, 56) = 0',
436: 1:    '✅f(56, 1) = 56',
436: 1:    '✅f(1, -2) = -0.5',
436: 1:    '✅f(-1, 2) = -0.5',
436: 1:    '✅f(-1, -2) = 0.5',
436: 1:    '❌f(1, 1000) = ??? != 0.001'
436: 1:  ],
436: 1:  'level': 16,
436: 1:  'nextQuestion': '1, 1000',
436: 1:  'questions': [
436: 1:    '1, 2',
436: 1:    '1, 1',
436: 1:    '5, 5',
436: 1:    '55, 5',
436: 1:    '55, 44',
436: 1:    '0, 56',
436: 1:    '56, 1',
436: 1:    '1, -2',
436: 1:    '-1, 2',
436: 1:    '-1, -2',
436: 1:    '1, 1000'
436: 1:  ]
436: 1:}
436: 1:Scores: 54195
436: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001']')
436: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
437: 1:BoardData {
437: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
437: 1:  'expectedAnswer': '1.2(4)',
437: 1:  'history': [
437: 1:    {
437: 1:      'answer': '0.5',
437: 1:      'question': '1, 2',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '1',
437: 1:      'question': '1, 1',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '1',
437: 1:      'question': '5, 5',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '11',
437: 1:      'question': '55, 5',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '1.25',
437: 1:      'question': '55, 44',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '0',
437: 1:      'question': '0, 56',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '56',
437: 1:      'question': '56, 1',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '-0.5',
437: 1:      'question': '1, -2',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '-0.5',
437: 1:      'question': '-1, 2',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '0.5',
437: 1:      'question': '-1, -2',
437: 1:      'valid': true
437: 1:    },
437: 1:    {
437: 1:      'answer': '0.001',
437: 1:      'question': '1, 1000',
437: 1:      'valid': true
437: 1:    }
437: 1:  ],
437: 1:  'info': [
437: 1:    '✅f(1, 2) = 0.5',
437: 1:    '✅f(1, 1) = 1',
437: 1:    '✅f(5, 5) = 1',
437: 1:    '✅f(55, 5) = 11',
437: 1:    '✅f(55, 44) = 1.25',
437: 1:    '✅f(0, 56) = 0',
437: 1:    '✅f(56, 1) = 56',
437: 1:    '✅f(1, -2) = -0.5',
437: 1:    '✅f(-1, 2) = -0.5',
437: 1:    '✅f(-1, -2) = 0.5',
437: 1:    '✅f(1, 1000) = 0.001',
437: 1:    '❌f(56, 45) = ??? != 1.2(4)'
437: 1:  ],
437: 1:  'level': 16,
437: 1:  'nextQuestion': '56, 45',
437: 1:  'questions': [
437: 1:    '1, 2',
437: 1:    '1, 1',
437: 1:    '5, 5',
437: 1:    '55, 5',
437: 1:    '55, 44',
437: 1:    '0, 56',
437: 1:    '56, 1',
437: 1:    '1, -2',
437: 1:    '-1, 2',
437: 1:    '-1, -2',
437: 1:    '1, 1000',
437: 1:    '56, 45'
437: 1:  ]
437: 1:}
437: 1:Scores: 54216
437: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)']')
437: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
438: 1:BoardData {
438: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
438: 1:  'expectedAnswer': '1.00(90)',
438: 1:  'history': [
438: 1:    {
438: 1:      'answer': '0.5',
438: 1:      'question': '1, 2',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '1',
438: 1:      'question': '1, 1',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '1',
438: 1:      'question': '5, 5',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '11',
438: 1:      'question': '55, 5',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '1.25',
438: 1:      'question': '55, 44',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '0',
438: 1:      'question': '0, 56',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '56',
438: 1:      'question': '56, 1',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '-0.5',
438: 1:      'question': '1, -2',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '-0.5',
438: 1:      'question': '-1, 2',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '0.5',
438: 1:      'question': '-1, -2',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '0.001',
438: 1:      'question': '1, 1000',
438: 1:      'valid': true
438: 1:    },
438: 1:    {
438: 1:      'answer': '1.2(4)',
438: 1:      'question': '56, 45',
438: 1:      'valid': true
438: 1:    }
438: 1:  ],
438: 1:  'info': [
438: 1:    '✅f(1, 2) = 0.5',
438: 1:    '✅f(1, 1) = 1',
438: 1:    '✅f(5, 5) = 1',
438: 1:    '✅f(55, 5) = 11',
438: 1:    '✅f(55, 44) = 1.25',
438: 1:    '✅f(0, 56) = 0',
438: 1:    '✅f(56, 1) = 56',
438: 1:    '✅f(1, -2) = -0.5',
438: 1:    '✅f(-1, 2) = -0.5',
438: 1:    '✅f(-1, -2) = 0.5',
438: 1:    '✅f(1, 1000) = 0.001',
438: 1:    '✅f(56, 45) = 1.2(4)',
438: 1:    '❌f(111, 110) = ??? != 1.00(90)'
438: 1:  ],
438: 1:  'level': 16,
438: 1:  'nextQuestion': '111, 110',
438: 1:  'questions': [
438: 1:    '1, 2',
438: 1:    '1, 1',
438: 1:    '5, 5',
438: 1:    '55, 5',
438: 1:    '55, 44',
438: 1:    '0, 56',
438: 1:    '56, 1',
438: 1:    '1, -2',
438: 1:    '-1, 2',
438: 1:    '-1, -2',
438: 1:    '1, 1000',
438: 1:    '56, 45',
438: 1:    '111, 110'
438: 1:  ]
438: 1:}
438: 1:Scores: 54237
438: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)']')
438: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
439: 1:BoardData {
439: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
439: 1:  'expectedAnswer': '10.0(90)',
439: 1:  'history': [
439: 1:    {
439: 1:      'answer': '0.5',
439: 1:      'question': '1, 2',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '1',
439: 1:      'question': '1, 1',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '1',
439: 1:      'question': '5, 5',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '11',
439: 1:      'question': '55, 5',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '1.25',
439: 1:      'question': '55, 44',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '0',
439: 1:      'question': '0, 56',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '56',
439: 1:      'question': '56, 1',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '-0.5',
439: 1:      'question': '1, -2',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '-0.5',
439: 1:      'question': '-1, 2',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '0.5',
439: 1:      'question': '-1, -2',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '0.001',
439: 1:      'question': '1, 1000',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '1.2(4)',
439: 1:      'question': '56, 45',
439: 1:      'valid': true
439: 1:    },
439: 1:    {
439: 1:      'answer': '1.00(90)',
439: 1:      'question': '111, 110',
439: 1:      'valid': true
439: 1:    }
439: 1:  ],
439: 1:  'info': [
439: 1:    '✅f(1, 2) = 0.5',
439: 1:    '✅f(1, 1) = 1',
439: 1:    '✅f(5, 5) = 1',
439: 1:    '✅f(55, 5) = 11',
439: 1:    '✅f(55, 44) = 1.25',
439: 1:    '✅f(0, 56) = 0',
439: 1:    '✅f(56, 1) = 56',
439: 1:    '✅f(1, -2) = -0.5',
439: 1:    '✅f(-1, 2) = -0.5',
439: 1:    '✅f(-1, -2) = 0.5',
439: 1:    '✅f(1, 1000) = 0.001',
439: 1:    '✅f(56, 45) = 1.2(4)',
439: 1:    '✅f(111, 110) = 1.00(90)',
439: 1:    '❌f(111, 11) = ??? != 10.0(90)'
439: 1:  ],
439: 1:  'level': 16,
439: 1:  'nextQuestion': '111, 11',
439: 1:  'questions': [
439: 1:    '1, 2',
439: 1:    '1, 1',
439: 1:    '5, 5',
439: 1:    '55, 5',
439: 1:    '55, 44',
439: 1:    '0, 56',
439: 1:    '56, 1',
439: 1:    '1, -2',
439: 1:    '-1, 2',
439: 1:    '-1, -2',
439: 1:    '1, 1000',
439: 1:    '56, 45',
439: 1:    '111, 110',
439: 1:    '111, 11'
439: 1:  ]
439: 1:}
439: 1:Scores: 54258
439: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)']')
439: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
440: 1:BoardData {
440: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
440: 1:  'expectedAnswer': '1010.0(90)',
440: 1:  'history': [
440: 1:    {
440: 1:      'answer': '0.5',
440: 1:      'question': '1, 2',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '1',
440: 1:      'question': '1, 1',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '1',
440: 1:      'question': '5, 5',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '11',
440: 1:      'question': '55, 5',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '1.25',
440: 1:      'question': '55, 44',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '0',
440: 1:      'question': '0, 56',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '56',
440: 1:      'question': '56, 1',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '-0.5',
440: 1:      'question': '1, -2',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '-0.5',
440: 1:      'question': '-1, 2',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '0.5',
440: 1:      'question': '-1, -2',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '0.001',
440: 1:      'question': '1, 1000',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '1.2(4)',
440: 1:      'question': '56, 45',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '1.00(90)',
440: 1:      'question': '111, 110',
440: 1:      'valid': true
440: 1:    },
440: 1:    {
440: 1:      'answer': '10.0(90)',
440: 1:      'question': '111, 11',
440: 1:      'valid': true
440: 1:    }
440: 1:  ],
440: 1:  'info': [
440: 1:    '✅f(1, 2) = 0.5',
440: 1:    '✅f(1, 1) = 1',
440: 1:    '✅f(5, 5) = 1',
440: 1:    '✅f(55, 5) = 11',
440: 1:    '✅f(55, 44) = 1.25',
440: 1:    '✅f(0, 56) = 0',
440: 1:    '✅f(56, 1) = 56',
440: 1:    '✅f(1, -2) = -0.5',
440: 1:    '✅f(-1, 2) = -0.5',
440: 1:    '✅f(-1, -2) = 0.5',
440: 1:    '✅f(1, 1000) = 0.001',
440: 1:    '✅f(56, 45) = 1.2(4)',
440: 1:    '✅f(111, 110) = 1.00(90)',
440: 1:    '✅f(111, 11) = 10.0(90)',
440: 1:    '❌f(11111, 11) = ??? != 1010.0(90)'
440: 1:  ],
440: 1:  'level': 16,
440: 1:  'nextQuestion': '11111, 11',
440: 1:  'questions': [
440: 1:    '1, 2',
440: 1:    '1, 1',
440: 1:    '5, 5',
440: 1:    '55, 5',
440: 1:    '55, 44',
440: 1:    '0, 56',
440: 1:    '56, 1',
440: 1:    '1, -2',
440: 1:    '-1, 2',
440: 1:    '-1, -2',
440: 1:    '1, 1000',
440: 1:    '56, 45',
440: 1:    '111, 110',
440: 1:    '111, 11',
440: 1:    '11111, 11'
440: 1:  ]
440: 1:}
440: 1:Scores: 54279
440: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)']')
440: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
441: 1:BoardData {
441: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
441: 1:  'expectedAnswer': '0.0(495)',
441: 1:  'history': [
441: 1:    {
441: 1:      'answer': '0.5',
441: 1:      'question': '1, 2',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '1',
441: 1:      'question': '1, 1',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '1',
441: 1:      'question': '5, 5',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '11',
441: 1:      'question': '55, 5',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '1.25',
441: 1:      'question': '55, 44',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '0',
441: 1:      'question': '0, 56',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '56',
441: 1:      'question': '56, 1',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '-0.5',
441: 1:      'question': '1, -2',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '-0.5',
441: 1:      'question': '-1, 2',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '0.5',
441: 1:      'question': '-1, -2',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '0.001',
441: 1:      'question': '1, 1000',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '1.2(4)',
441: 1:      'question': '56, 45',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '1.00(90)',
441: 1:      'question': '111, 110',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '10.0(90)',
441: 1:      'question': '111, 11',
441: 1:      'valid': true
441: 1:    },
441: 1:    {
441: 1:      'answer': '1010.0(90)',
441: 1:      'question': '11111, 11',
441: 1:      'valid': true
441: 1:    }
441: 1:  ],
441: 1:  'info': [
441: 1:    '✅f(1, 2) = 0.5',
441: 1:    '✅f(1, 1) = 1',
441: 1:    '✅f(5, 5) = 1',
441: 1:    '✅f(55, 5) = 11',
441: 1:    '✅f(55, 44) = 1.25',
441: 1:    '✅f(0, 56) = 0',
441: 1:    '✅f(56, 1) = 56',
441: 1:    '✅f(1, -2) = -0.5',
441: 1:    '✅f(-1, 2) = -0.5',
441: 1:    '✅f(-1, -2) = 0.5',
441: 1:    '✅f(1, 1000) = 0.001',
441: 1:    '✅f(56, 45) = 1.2(4)',
441: 1:    '✅f(111, 110) = 1.00(90)',
441: 1:    '✅f(111, 11) = 10.0(90)',
441: 1:    '✅f(11111, 11) = 1010.0(90)',
441: 1:    '❌f(-11, -222) = ??? != 0.0(495)'
441: 1:  ],
441: 1:  'level': 16,
441: 1:  'nextQuestion': '-11, -222',
441: 1:  'questions': [
441: 1:    '1, 2',
441: 1:    '1, 1',
441: 1:    '5, 5',
441: 1:    '55, 5',
441: 1:    '55, 44',
441: 1:    '0, 56',
441: 1:    '56, 1',
441: 1:    '1, -2',
441: 1:    '-1, 2',
441: 1:    '-1, -2',
441: 1:    '1, 1000',
441: 1:    '56, 45',
441: 1:    '111, 110',
441: 1:    '111, 11',
441: 1:    '11111, 11',
441: 1:    '-11, -222'
441: 1:  ]
441: 1:}
441: 1:Scores: 54300
441: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)']')
441: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
442: 1:BoardData {
442: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
442: 1:  'expectedAnswer': '-5.0(45)',
442: 1:  'history': [
442: 1:    {
442: 1:      'answer': '0.5',
442: 1:      'question': '1, 2',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '1',
442: 1:      'question': '1, 1',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '1',
442: 1:      'question': '5, 5',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '11',
442: 1:      'question': '55, 5',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '1.25',
442: 1:      'question': '55, 44',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '0',
442: 1:      'question': '0, 56',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '56',
442: 1:      'question': '56, 1',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '-0.5',
442: 1:      'question': '1, -2',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '-0.5',
442: 1:      'question': '-1, 2',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '0.5',
442: 1:      'question': '-1, -2',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '0.001',
442: 1:      'question': '1, 1000',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '1.2(4)',
442: 1:      'question': '56, 45',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '1.00(90)',
442: 1:      'question': '111, 110',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '10.0(90)',
442: 1:      'question': '111, 11',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '1010.0(90)',
442: 1:      'question': '11111, 11',
442: 1:      'valid': true
442: 1:    },
442: 1:    {
442: 1:      'answer': '0.0(495)',
442: 1:      'question': '-11, -222',
442: 1:      'valid': true
442: 1:    }
442: 1:  ],
442: 1:  'info': [
442: 1:    '✅f(1, 2) = 0.5',
442: 1:    '✅f(1, 1) = 1',
442: 1:    '✅f(5, 5) = 1',
442: 1:    '✅f(55, 5) = 11',
442: 1:    '✅f(55, 44) = 1.25',
442: 1:    '✅f(0, 56) = 0',
442: 1:    '✅f(56, 1) = 56',
442: 1:    '✅f(1, -2) = -0.5',
442: 1:    '✅f(-1, 2) = -0.5',
442: 1:    '✅f(-1, -2) = 0.5',
442: 1:    '✅f(1, 1000) = 0.001',
442: 1:    '✅f(56, 45) = 1.2(4)',
442: 1:    '✅f(111, 110) = 1.00(90)',
442: 1:    '✅f(111, 11) = 10.0(90)',
442: 1:    '✅f(11111, 11) = 1010.0(90)',
442: 1:    '✅f(-11, -222) = 0.0(495)',
442: 1:    '❌f(111, -22) = ??? != -5.0(45)'
442: 1:  ],
442: 1:  'level': 16,
442: 1:  'nextQuestion': '111, -22',
442: 1:  'questions': [
442: 1:    '1, 2',
442: 1:    '1, 1',
442: 1:    '5, 5',
442: 1:    '55, 5',
442: 1:    '55, 44',
442: 1:    '0, 56',
442: 1:    '56, 1',
442: 1:    '1, -2',
442: 1:    '-1, 2',
442: 1:    '-1, -2',
442: 1:    '1, 1000',
442: 1:    '56, 45',
442: 1:    '111, 110',
442: 1:    '111, 11',
442: 1:    '11111, 11',
442: 1:    '-11, -222',
442: 1:    '111, -22'
442: 1:  ]
442: 1:}
442: 1:Scores: 54321
442: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)']')
442: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
443: 1:BoardData {
443: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
443: 1:  'expectedAnswer': '0.000(3)',
443: 1:  'history': [
443: 1:    {
443: 1:      'answer': '0.5',
443: 1:      'question': '1, 2',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '1',
443: 1:      'question': '1, 1',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '1',
443: 1:      'question': '5, 5',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '11',
443: 1:      'question': '55, 5',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '1.25',
443: 1:      'question': '55, 44',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '0',
443: 1:      'question': '0, 56',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '56',
443: 1:      'question': '56, 1',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '-0.5',
443: 1:      'question': '1, -2',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '-0.5',
443: 1:      'question': '-1, 2',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '0.5',
443: 1:      'question': '-1, -2',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '0.001',
443: 1:      'question': '1, 1000',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '1.2(4)',
443: 1:      'question': '56, 45',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '1.00(90)',
443: 1:      'question': '111, 110',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '10.0(90)',
443: 1:      'question': '111, 11',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '1010.0(90)',
443: 1:      'question': '11111, 11',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '0.0(495)',
443: 1:      'question': '-11, -222',
443: 1:      'valid': true
443: 1:    },
443: 1:    {
443: 1:      'answer': '-5.0(45)',
443: 1:      'question': '111, -22',
443: 1:      'valid': true
443: 1:    }
443: 1:  ],
443: 1:  'info': [
443: 1:    '✅f(1, 2) = 0.5',
443: 1:    '✅f(1, 1) = 1',
443: 1:    '✅f(5, 5) = 1',
443: 1:    '✅f(55, 5) = 11',
443: 1:    '✅f(55, 44) = 1.25',
443: 1:    '✅f(0, 56) = 0',
443: 1:    '✅f(56, 1) = 56',
443: 1:    '✅f(1, -2) = -0.5',
443: 1:    '✅f(-1, 2) = -0.5',
443: 1:    '✅f(-1, -2) = 0.5',
443: 1:    '✅f(1, 1000) = 0.001',
443: 1:    '✅f(56, 45) = 1.2(4)',
443: 1:    '✅f(111, 110) = 1.00(90)',
443: 1:    '✅f(111, 11) = 10.0(90)',
443: 1:    '✅f(11111, 11) = 1010.0(90)',
443: 1:    '✅f(-11, -222) = 0.0(495)',
443: 1:    '✅f(111, -22) = -5.0(45)',
443: 1:    '❌f(1, 3000) = ??? != 0.000(3)'
443: 1:  ],
443: 1:  'level': 16,
443: 1:  'nextQuestion': '1, 3000',
443: 1:  'questions': [
443: 1:    '1, 2',
443: 1:    '1, 1',
443: 1:    '5, 5',
443: 1:    '55, 5',
443: 1:    '55, 44',
443: 1:    '0, 56',
443: 1:    '56, 1',
443: 1:    '1, -2',
443: 1:    '-1, 2',
443: 1:    '-1, -2',
443: 1:    '1, 1000',
443: 1:    '56, 45',
443: 1:    '111, 110',
443: 1:    '111, 11',
443: 1:    '11111, 11',
443: 1:    '-11, -222',
443: 1:    '111, -22',
443: 1:    '1, 3000'
443: 1:  ]
443: 1:}
443: 1:Scores: 54342
443: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)']')
443: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
444: 1:BoardData {
444: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
444: 1:  'expectedAnswer': '1.1(153846)',
444: 1:  'history': [
444: 1:    {
444: 1:      'answer': '0.5',
444: 1:      'question': '1, 2',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '1',
444: 1:      'question': '1, 1',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '1',
444: 1:      'question': '5, 5',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '11',
444: 1:      'question': '55, 5',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '1.25',
444: 1:      'question': '55, 44',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '0',
444: 1:      'question': '0, 56',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '56',
444: 1:      'question': '56, 1',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '-0.5',
444: 1:      'question': '1, -2',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '-0.5',
444: 1:      'question': '-1, 2',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '0.5',
444: 1:      'question': '-1, -2',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '0.001',
444: 1:      'question': '1, 1000',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '1.2(4)',
444: 1:      'question': '56, 45',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '1.00(90)',
444: 1:      'question': '111, 110',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '10.0(90)',
444: 1:      'question': '111, 11',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '1010.0(90)',
444: 1:      'question': '11111, 11',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '0.0(495)',
444: 1:      'question': '-11, -222',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '-5.0(45)',
444: 1:      'question': '111, -22',
444: 1:      'valid': true
444: 1:    },
444: 1:    {
444: 1:      'answer': '0.000(3)',
444: 1:      'question': '1, 3000',
444: 1:      'valid': true
444: 1:    }
444: 1:  ],
444: 1:  'info': [
444: 1:    '✅f(1, 2) = 0.5',
444: 1:    '✅f(1, 1) = 1',
444: 1:    '✅f(5, 5) = 1',
444: 1:    '✅f(55, 5) = 11',
444: 1:    '✅f(55, 44) = 1.25',
444: 1:    '✅f(0, 56) = 0',
444: 1:    '✅f(56, 1) = 56',
444: 1:    '✅f(1, -2) = -0.5',
444: 1:    '✅f(-1, 2) = -0.5',
444: 1:    '✅f(-1, -2) = 0.5',
444: 1:    '✅f(1, 1000) = 0.001',
444: 1:    '✅f(56, 45) = 1.2(4)',
444: 1:    '✅f(111, 110) = 1.00(90)',
444: 1:    '✅f(111, 11) = 10.0(90)',
444: 1:    '✅f(11111, 11) = 1010.0(90)',
444: 1:    '✅f(-11, -222) = 0.0(495)',
444: 1:    '✅f(111, -22) = -5.0(45)',
444: 1:    '✅f(1, 3000) = 0.000(3)',
444: 1:    '❌f(87, 78) = ??? != 1.1(153846)'
444: 1:  ],
444: 1:  'level': 16,
444: 1:  'nextQuestion': '87, 78',
444: 1:  'questions': [
444: 1:    '1, 2',
444: 1:    '1, 1',
444: 1:    '5, 5',
444: 1:    '55, 5',
444: 1:    '55, 44',
444: 1:    '0, 56',
444: 1:    '56, 1',
444: 1:    '1, -2',
444: 1:    '-1, 2',
444: 1:    '-1, -2',
444: 1:    '1, 1000',
444: 1:    '56, 45',
444: 1:    '111, 110',
444: 1:    '111, 11',
444: 1:    '11111, 11',
444: 1:    '-11, -222',
444: 1:    '111, -22',
444: 1:    '1, 3000',
444: 1:    '87, 78'
444: 1:  ]
444: 1:}
444: 1:Scores: 54363
444: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)']')
444: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
445: 1:BoardData {
445: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
445: 1:  'expectedAnswer': '0.803(571428)',
445: 1:  'history': [
445: 1:    {
445: 1:      'answer': '0.5',
445: 1:      'question': '1, 2',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '1',
445: 1:      'question': '1, 1',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '1',
445: 1:      'question': '5, 5',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '11',
445: 1:      'question': '55, 5',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '1.25',
445: 1:      'question': '55, 44',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '0',
445: 1:      'question': '0, 56',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '56',
445: 1:      'question': '56, 1',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '-0.5',
445: 1:      'question': '1, -2',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '-0.5',
445: 1:      'question': '-1, 2',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '0.5',
445: 1:      'question': '-1, -2',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '0.001',
445: 1:      'question': '1, 1000',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '1.2(4)',
445: 1:      'question': '56, 45',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '1.00(90)',
445: 1:      'question': '111, 110',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '10.0(90)',
445: 1:      'question': '111, 11',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '1010.0(90)',
445: 1:      'question': '11111, 11',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '0.0(495)',
445: 1:      'question': '-11, -222',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '-5.0(45)',
445: 1:      'question': '111, -22',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '0.000(3)',
445: 1:      'question': '1, 3000',
445: 1:      'valid': true
445: 1:    },
445: 1:    {
445: 1:      'answer': '1.1(153846)',
445: 1:      'question': '87, 78',
445: 1:      'valid': true
445: 1:    }
445: 1:  ],
445: 1:  'info': [
445: 1:    '✅f(1, 2) = 0.5',
445: 1:    '✅f(1, 1) = 1',
445: 1:    '✅f(5, 5) = 1',
445: 1:    '✅f(55, 5) = 11',
445: 1:    '✅f(55, 44) = 1.25',
445: 1:    '✅f(0, 56) = 0',
445: 1:    '✅f(56, 1) = 56',
445: 1:    '✅f(1, -2) = -0.5',
445: 1:    '✅f(-1, 2) = -0.5',
445: 1:    '✅f(-1, -2) = 0.5',
445: 1:    '✅f(1, 1000) = 0.001',
445: 1:    '✅f(56, 45) = 1.2(4)',
445: 1:    '✅f(111, 110) = 1.00(90)',
445: 1:    '✅f(111, 11) = 10.0(90)',
445: 1:    '✅f(11111, 11) = 1010.0(90)',
445: 1:    '✅f(-11, -222) = 0.0(495)',
445: 1:    '✅f(111, -22) = -5.0(45)',
445: 1:    '✅f(1, 3000) = 0.000(3)',
445: 1:    '✅f(87, 78) = 1.1(153846)',
445: 1:    '❌f(45, 56) = ??? != 0.803(571428)'
445: 1:  ],
445: 1:  'level': 16,
445: 1:  'nextQuestion': '45, 56',
445: 1:  'questions': [
445: 1:    '1, 2',
445: 1:    '1, 1',
445: 1:    '5, 5',
445: 1:    '55, 5',
445: 1:    '55, 44',
445: 1:    '0, 56',
445: 1:    '56, 1',
445: 1:    '1, -2',
445: 1:    '-1, 2',
445: 1:    '-1, -2',
445: 1:    '1, 1000',
445: 1:    '56, 45',
445: 1:    '111, 110',
445: 1:    '111, 11',
445: 1:    '11111, 11',
445: 1:    '-11, -222',
445: 1:    '111, -22',
445: 1:    '1, 3000',
445: 1:    '87, 78',
445: 1:    '45, 56'
445: 1:  ]
445: 1:}
445: 1:Scores: 54384
445: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)']')
445: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
446: 1:BoardData {
446: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
446: 1:  'expectedAnswer': '1.(593984962406015037)',
446: 1:  'history': [
446: 1:    {
446: 1:      'answer': '0.5',
446: 1:      'question': '1, 2',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '1',
446: 1:      'question': '1, 1',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '1',
446: 1:      'question': '5, 5',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '11',
446: 1:      'question': '55, 5',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '1.25',
446: 1:      'question': '55, 44',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '0',
446: 1:      'question': '0, 56',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '56',
446: 1:      'question': '56, 1',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '-0.5',
446: 1:      'question': '1, -2',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '-0.5',
446: 1:      'question': '-1, 2',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '0.5',
446: 1:      'question': '-1, -2',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '0.001',
446: 1:      'question': '1, 1000',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '1.2(4)',
446: 1:      'question': '56, 45',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '1.00(90)',
446: 1:      'question': '111, 110',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '10.0(90)',
446: 1:      'question': '111, 11',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '1010.0(90)',
446: 1:      'question': '11111, 11',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '0.0(495)',
446: 1:      'question': '-11, -222',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '-5.0(45)',
446: 1:      'question': '111, -22',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '0.000(3)',
446: 1:      'question': '1, 3000',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '1.1(153846)',
446: 1:      'question': '87, 78',
446: 1:      'valid': true
446: 1:    },
446: 1:    {
446: 1:      'answer': '0.803(571428)',
446: 1:      'question': '45, 56',
446: 1:      'valid': true
446: 1:    }
446: 1:  ],
446: 1:  'info': [
446: 1:    '✅f(1, 2) = 0.5',
446: 1:    '✅f(1, 1) = 1',
446: 1:    '✅f(5, 5) = 1',
446: 1:    '✅f(55, 5) = 11',
446: 1:    '✅f(55, 44) = 1.25',
446: 1:    '✅f(0, 56) = 0',
446: 1:    '✅f(56, 1) = 56',
446: 1:    '✅f(1, -2) = -0.5',
446: 1:    '✅f(-1, 2) = -0.5',
446: 1:    '✅f(-1, -2) = 0.5',
446: 1:    '✅f(1, 1000) = 0.001',
446: 1:    '✅f(56, 45) = 1.2(4)',
446: 1:    '✅f(111, 110) = 1.00(90)',
446: 1:    '✅f(111, 11) = 10.0(90)',
446: 1:    '✅f(11111, 11) = 1010.0(90)',
446: 1:    '✅f(-11, -222) = 0.0(495)',
446: 1:    '✅f(111, -22) = -5.0(45)',
446: 1:    '✅f(1, 3000) = 0.000(3)',
446: 1:    '✅f(87, 78) = 1.1(153846)',
446: 1:    '✅f(45, 56) = 0.803(571428)',
446: 1:    '❌f(212, 133) = ??? != 1.(593984962406015037)'
446: 1:  ],
446: 1:  'level': 16,
446: 1:  'nextQuestion': '212, 133',
446: 1:  'questions': [
446: 1:    '1, 2',
446: 1:    '1, 1',
446: 1:    '5, 5',
446: 1:    '55, 5',
446: 1:    '55, 44',
446: 1:    '0, 56',
446: 1:    '56, 1',
446: 1:    '1, -2',
446: 1:    '-1, 2',
446: 1:    '-1, -2',
446: 1:    '1, 1000',
446: 1:    '56, 45',
446: 1:    '111, 110',
446: 1:    '111, 11',
446: 1:    '11111, 11',
446: 1:    '-11, -222',
446: 1:    '111, -22',
446: 1:    '1, 3000',
446: 1:    '87, 78',
446: 1:    '45, 56',
446: 1:    '212, 133'
446: 1:  ]
446: 1:}
446: 1:Scores: 54405
446: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)']')
446: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
447: 1:BoardData {
447: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
447: 1:  'expectedAnswer': '96.6(1739130434782608695652)',
447: 1:  'history': [
447: 1:    {
447: 1:      'answer': '0.5',
447: 1:      'question': '1, 2',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '1',
447: 1:      'question': '1, 1',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '1',
447: 1:      'question': '5, 5',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '11',
447: 1:      'question': '55, 5',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '1.25',
447: 1:      'question': '55, 44',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '0',
447: 1:      'question': '0, 56',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '56',
447: 1:      'question': '56, 1',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '-0.5',
447: 1:      'question': '1, -2',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '-0.5',
447: 1:      'question': '-1, 2',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '0.5',
447: 1:      'question': '-1, -2',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '0.001',
447: 1:      'question': '1, 1000',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '1.2(4)',
447: 1:      'question': '56, 45',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '1.00(90)',
447: 1:      'question': '111, 110',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '10.0(90)',
447: 1:      'question': '111, 11',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '1010.0(90)',
447: 1:      'question': '11111, 11',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '0.0(495)',
447: 1:      'question': '-11, -222',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '-5.0(45)',
447: 1:      'question': '111, -22',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '0.000(3)',
447: 1:      'question': '1, 3000',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '1.1(153846)',
447: 1:      'question': '87, 78',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '0.803(571428)',
447: 1:      'question': '45, 56',
447: 1:      'valid': true
447: 1:    },
447: 1:    {
447: 1:      'answer': '1.(593984962406015037)',
447: 1:      'question': '212, 133',
447: 1:      'valid': true
447: 1:    }
447: 1:  ],
447: 1:  'info': [
447: 1:    '✅f(1, 2) = 0.5',
447: 1:    '✅f(1, 1) = 1',
447: 1:    '✅f(5, 5) = 1',
447: 1:    '✅f(55, 5) = 11',
447: 1:    '✅f(55, 44) = 1.25',
447: 1:    '✅f(0, 56) = 0',
447: 1:    '✅f(56, 1) = 56',
447: 1:    '✅f(1, -2) = -0.5',
447: 1:    '✅f(-1, 2) = -0.5',
447: 1:    '✅f(-1, -2) = 0.5',
447: 1:    '✅f(1, 1000) = 0.001',
447: 1:    '✅f(56, 45) = 1.2(4)',
447: 1:    '✅f(111, 110) = 1.00(90)',
447: 1:    '✅f(111, 11) = 10.0(90)',
447: 1:    '✅f(11111, 11) = 1010.0(90)',
447: 1:    '✅f(-11, -222) = 0.0(495)',
447: 1:    '✅f(111, -22) = -5.0(45)',
447: 1:    '✅f(1, 3000) = 0.000(3)',
447: 1:    '✅f(87, 78) = 1.1(153846)',
447: 1:    '✅f(45, 56) = 0.803(571428)',
447: 1:    '✅f(212, 133) = 1.(593984962406015037)',
447: 1:    '❌f(11111, 115) = ??? != 96.6(1739130434782608695652)'
447: 1:  ],
447: 1:  'level': 16,
447: 1:  'nextQuestion': '11111, 115',
447: 1:  'questions': [
447: 1:    '1, 2',
447: 1:    '1, 1',
447: 1:    '5, 5',
447: 1:    '55, 5',
447: 1:    '55, 44',
447: 1:    '0, 56',
447: 1:    '56, 1',
447: 1:    '1, -2',
447: 1:    '-1, 2',
447: 1:    '-1, -2',
447: 1:    '1, 1000',
447: 1:    '56, 45',
447: 1:    '111, 110',
447: 1:    '111, 11',
447: 1:    '11111, 11',
447: 1:    '-11, -222',
447: 1:    '111, -22',
447: 1:    '1, 3000',
447: 1:    '87, 78',
447: 1:    '45, 56',
447: 1:    '212, 133',
447: 1:    '11111, 115'
447: 1:  ]
447: 1:}
447: 1:Scores: 54426
447: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)']')
447: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
448: 1:BoardData {
448: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
448: 1:  'expectedAnswer': '0.3(5652173913043478260869)',
448: 1:  'history': [
448: 1:    {
448: 1:      'answer': '0.5',
448: 1:      'question': '1, 2',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '1',
448: 1:      'question': '1, 1',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '1',
448: 1:      'question': '5, 5',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '11',
448: 1:      'question': '55, 5',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '1.25',
448: 1:      'question': '55, 44',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '0',
448: 1:      'question': '0, 56',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '56',
448: 1:      'question': '56, 1',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '-0.5',
448: 1:      'question': '1, -2',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '-0.5',
448: 1:      'question': '-1, 2',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '0.5',
448: 1:      'question': '-1, -2',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '0.001',
448: 1:      'question': '1, 1000',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '1.2(4)',
448: 1:      'question': '56, 45',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '1.00(90)',
448: 1:      'question': '111, 110',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '10.0(90)',
448: 1:      'question': '111, 11',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '1010.0(90)',
448: 1:      'question': '11111, 11',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '0.0(495)',
448: 1:      'question': '-11, -222',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '-5.0(45)',
448: 1:      'question': '111, -22',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '0.000(3)',
448: 1:      'question': '1, 3000',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '1.1(153846)',
448: 1:      'question': '87, 78',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '0.803(571428)',
448: 1:      'question': '45, 56',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '1.(593984962406015037)',
448: 1:      'question': '212, 133',
448: 1:      'valid': true
448: 1:    },
448: 1:    {
448: 1:      'answer': '96.6(1739130434782608695652)',
448: 1:      'question': '11111, 115',
448: 1:      'valid': true
448: 1:    }
448: 1:  ],
448: 1:  'info': [
448: 1:    '✅f(1, 2) = 0.5',
448: 1:    '✅f(1, 1) = 1',
448: 1:    '✅f(5, 5) = 1',
448: 1:    '✅f(55, 5) = 11',
448: 1:    '✅f(55, 44) = 1.25',
448: 1:    '✅f(0, 56) = 0',
448: 1:    '✅f(56, 1) = 56',
448: 1:    '✅f(1, -2) = -0.5',
448: 1:    '✅f(-1, 2) = -0.5',
448: 1:    '✅f(-1, -2) = 0.5',
448: 1:    '✅f(1, 1000) = 0.001',
448: 1:    '✅f(56, 45) = 1.2(4)',
448: 1:    '✅f(111, 110) = 1.00(90)',
448: 1:    '✅f(111, 11) = 10.0(90)',
448: 1:    '✅f(11111, 11) = 1010.0(90)',
448: 1:    '✅f(-11, -222) = 0.0(495)',
448: 1:    '✅f(111, -22) = -5.0(45)',
448: 1:    '✅f(1, 3000) = 0.000(3)',
448: 1:    '✅f(87, 78) = 1.1(153846)',
448: 1:    '✅f(45, 56) = 0.803(571428)',
448: 1:    '✅f(212, 133) = 1.(593984962406015037)',
448: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
448: 1:    '❌f(123, 345) = ??? != 0.3(5652173913043478260869)'
448: 1:  ],
448: 1:  'level': 16,
448: 1:  'nextQuestion': '123, 345',
448: 1:  'questions': [
448: 1:    '1, 2',
448: 1:    '1, 1',
448: 1:    '5, 5',
448: 1:    '55, 5',
448: 1:    '55, 44',
448: 1:    '0, 56',
448: 1:    '56, 1',
448: 1:    '1, -2',
448: 1:    '-1, 2',
448: 1:    '-1, -2',
448: 1:    '1, 1000',
448: 1:    '56, 45',
448: 1:    '111, 110',
448: 1:    '111, 11',
448: 1:    '11111, 11',
448: 1:    '-11, -222',
448: 1:    '111, -22',
448: 1:    '1, 3000',
448: 1:    '87, 78',
448: 1:    '45, 56',
448: 1:    '212, 133',
448: 1:    '11111, 115',
448: 1:    '123, 345'
448: 1:  ]
448: 1:}
448: 1:Scores: 54447
448: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)']')
448: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
449: 1:BoardData {
449: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
449: 1:  'expectedAnswer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
449: 1:  'history': [
449: 1:    {
449: 1:      'answer': '0.5',
449: 1:      'question': '1, 2',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '1',
449: 1:      'question': '1, 1',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '1',
449: 1:      'question': '5, 5',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '11',
449: 1:      'question': '55, 5',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '1.25',
449: 1:      'question': '55, 44',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '0',
449: 1:      'question': '0, 56',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '56',
449: 1:      'question': '56, 1',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '-0.5',
449: 1:      'question': '1, -2',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '-0.5',
449: 1:      'question': '-1, 2',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '0.5',
449: 1:      'question': '-1, -2',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '0.001',
449: 1:      'question': '1, 1000',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '1.2(4)',
449: 1:      'question': '56, 45',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '1.00(90)',
449: 1:      'question': '111, 110',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '10.0(90)',
449: 1:      'question': '111, 11',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '1010.0(90)',
449: 1:      'question': '11111, 11',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '0.0(495)',
449: 1:      'question': '-11, -222',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '-5.0(45)',
449: 1:      'question': '111, -22',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '0.000(3)',
449: 1:      'question': '1, 3000',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '1.1(153846)',
449: 1:      'question': '87, 78',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '0.803(571428)',
449: 1:      'question': '45, 56',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '1.(593984962406015037)',
449: 1:      'question': '212, 133',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '96.6(1739130434782608695652)',
449: 1:      'question': '11111, 115',
449: 1:      'valid': true
449: 1:    },
449: 1:    {
449: 1:      'answer': '0.3(5652173913043478260869)',
449: 1:      'question': '123, 345',
449: 1:      'valid': true
449: 1:    }
449: 1:  ],
449: 1:  'info': [
449: 1:    '✅f(1, 2) = 0.5',
449: 1:    '✅f(1, 1) = 1',
449: 1:    '✅f(5, 5) = 1',
449: 1:    '✅f(55, 5) = 11',
449: 1:    '✅f(55, 44) = 1.25',
449: 1:    '✅f(0, 56) = 0',
449: 1:    '✅f(56, 1) = 56',
449: 1:    '✅f(1, -2) = -0.5',
449: 1:    '✅f(-1, 2) = -0.5',
449: 1:    '✅f(-1, -2) = 0.5',
449: 1:    '✅f(1, 1000) = 0.001',
449: 1:    '✅f(56, 45) = 1.2(4)',
449: 1:    '✅f(111, 110) = 1.00(90)',
449: 1:    '✅f(111, 11) = 10.0(90)',
449: 1:    '✅f(11111, 11) = 1010.0(90)',
449: 1:    '✅f(-11, -222) = 0.0(495)',
449: 1:    '✅f(111, -22) = -5.0(45)',
449: 1:    '✅f(1, 3000) = 0.000(3)',
449: 1:    '✅f(87, 78) = 1.1(153846)',
449: 1:    '✅f(45, 56) = 0.803(571428)',
449: 1:    '✅f(212, 133) = 1.(593984962406015037)',
449: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
449: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
449: 1:    '❌f(66666666, 77727777) = ??? != 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484'
449: 1:  ],
449: 1:  'level': 16,
449: 1:  'nextQuestion': '66666666, 77727777',
449: 1:  'questions': [
449: 1:    '1, 2',
449: 1:    '1, 1',
449: 1:    '5, 5',
449: 1:    '55, 5',
449: 1:    '55, 44',
449: 1:    '0, 56',
449: 1:    '56, 1',
449: 1:    '1, -2',
449: 1:    '-1, 2',
449: 1:    '-1, -2',
449: 1:    '1, 1000',
449: 1:    '56, 45',
449: 1:    '111, 110',
449: 1:    '111, 11',
449: 1:    '11111, 11',
449: 1:    '-11, -222',
449: 1:    '111, -22',
449: 1:    '1, 3000',
449: 1:    '87, 78',
449: 1:    '45, 56',
449: 1:    '212, 133',
449: 1:    '11111, 115',
449: 1:    '123, 345',
449: 1:    '66666666, 77727777'
449: 1:  ]
449: 1:}
449: 1:Scores: 54468
449: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484']')
449: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
450: 1:BoardData {
450: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
450: 1:  'expectedAnswer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
450: 1:  'history': [
450: 1:    {
450: 1:      'answer': '0.5',
450: 1:      'question': '1, 2',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '1',
450: 1:      'question': '1, 1',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '1',
450: 1:      'question': '5, 5',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '11',
450: 1:      'question': '55, 5',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '1.25',
450: 1:      'question': '55, 44',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '0',
450: 1:      'question': '0, 56',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '56',
450: 1:      'question': '56, 1',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '-0.5',
450: 1:      'question': '1, -2',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '-0.5',
450: 1:      'question': '-1, 2',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '0.5',
450: 1:      'question': '-1, -2',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '0.001',
450: 1:      'question': '1, 1000',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '1.2(4)',
450: 1:      'question': '56, 45',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '1.00(90)',
450: 1:      'question': '111, 110',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '10.0(90)',
450: 1:      'question': '111, 11',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '1010.0(90)',
450: 1:      'question': '11111, 11',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '0.0(495)',
450: 1:      'question': '-11, -222',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '-5.0(45)',
450: 1:      'question': '111, -22',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '0.000(3)',
450: 1:      'question': '1, 3000',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '1.1(153846)',
450: 1:      'question': '87, 78',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '0.803(571428)',
450: 1:      'question': '45, 56',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '1.(593984962406015037)',
450: 1:      'question': '212, 133',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '96.6(1739130434782608695652)',
450: 1:      'question': '11111, 115',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '0.3(5652173913043478260869)',
450: 1:      'question': '123, 345',
450: 1:      'valid': true
450: 1:    },
450: 1:    {
450: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
450: 1:      'question': '66666666, 77727777',
450: 1:      'valid': true
450: 1:    }
450: 1:  ],
450: 1:  'info': [
450: 1:    '✅f(1, 2) = 0.5',
450: 1:    '✅f(1, 1) = 1',
450: 1:    '✅f(5, 5) = 1',
450: 1:    '✅f(55, 5) = 11',
450: 1:    '✅f(55, 44) = 1.25',
450: 1:    '✅f(0, 56) = 0',
450: 1:    '✅f(56, 1) = 56',
450: 1:    '✅f(1, -2) = -0.5',
450: 1:    '✅f(-1, 2) = -0.5',
450: 1:    '✅f(-1, -2) = 0.5',
450: 1:    '✅f(1, 1000) = 0.001',
450: 1:    '✅f(56, 45) = 1.2(4)',
450: 1:    '✅f(111, 110) = 1.00(90)',
450: 1:    '✅f(111, 11) = 10.0(90)',
450: 1:    '✅f(11111, 11) = 1010.0(90)',
450: 1:    '✅f(-11, -222) = 0.0(495)',
450: 1:    '✅f(111, -22) = -5.0(45)',
450: 1:    '✅f(1, 3000) = 0.000(3)',
450: 1:    '✅f(87, 78) = 1.1(153846)',
450: 1:    '✅f(45, 56) = 0.803(571428)',
450: 1:    '✅f(212, 133) = 1.(593984962406015037)',
450: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
450: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
450: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
450: 1:    '❌f(666666660, 77727777) = ??? != 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847'
450: 1:  ],
450: 1:  'level': 16,
450: 1:  'nextQuestion': '666666660, 77727777',
450: 1:  'questions': [
450: 1:    '1, 2',
450: 1:    '1, 1',
450: 1:    '5, 5',
450: 1:    '55, 5',
450: 1:    '55, 44',
450: 1:    '0, 56',
450: 1:    '56, 1',
450: 1:    '1, -2',
450: 1:    '-1, 2',
450: 1:    '-1, -2',
450: 1:    '1, 1000',
450: 1:    '56, 45',
450: 1:    '111, 110',
450: 1:    '111, 11',
450: 1:    '11111, 11',
450: 1:    '-11, -222',
450: 1:    '111, -22',
450: 1:    '1, 3000',
450: 1:    '87, 78',
450: 1:    '45, 56',
450: 1:    '212, 133',
450: 1:    '11111, 115',
450: 1:    '123, 345',
450: 1:    '66666666, 77727777',
450: 1:    '666666660, 77727777'
450: 1:  ]
450: 1:}
450: 1:Scores: 54489
450: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847']')
450: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
451: 1:BoardData {
451: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
451: 1:  'expectedAnswer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
451: 1:  'history': [
451: 1:    {
451: 1:      'answer': '0.5',
451: 1:      'question': '1, 2',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '1',
451: 1:      'question': '1, 1',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '1',
451: 1:      'question': '5, 5',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '11',
451: 1:      'question': '55, 5',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '1.25',
451: 1:      'question': '55, 44',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '0',
451: 1:      'question': '0, 56',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '56',
451: 1:      'question': '56, 1',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '-0.5',
451: 1:      'question': '1, -2',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '-0.5',
451: 1:      'question': '-1, 2',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '0.5',
451: 1:      'question': '-1, -2',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '0.001',
451: 1:      'question': '1, 1000',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '1.2(4)',
451: 1:      'question': '56, 45',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '1.00(90)',
451: 1:      'question': '111, 110',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '10.0(90)',
451: 1:      'question': '111, 11',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '1010.0(90)',
451: 1:      'question': '11111, 11',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '0.0(495)',
451: 1:      'question': '-11, -222',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '-5.0(45)',
451: 1:      'question': '111, -22',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '0.000(3)',
451: 1:      'question': '1, 3000',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '1.1(153846)',
451: 1:      'question': '87, 78',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '0.803(571428)',
451: 1:      'question': '45, 56',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '1.(593984962406015037)',
451: 1:      'question': '212, 133',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '96.6(1739130434782608695652)',
451: 1:      'question': '11111, 115',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '0.3(5652173913043478260869)',
451: 1:      'question': '123, 345',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
451: 1:      'question': '66666666, 77727777',
451: 1:      'valid': true
451: 1:    },
451: 1:    {
451: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
451: 1:      'question': '666666660, 77727777',
451: 1:      'valid': true
451: 1:    }
451: 1:  ],
451: 1:  'info': [
451: 1:    '✅f(1, 2) = 0.5',
451: 1:    '✅f(1, 1) = 1',
451: 1:    '✅f(5, 5) = 1',
451: 1:    '✅f(55, 5) = 11',
451: 1:    '✅f(55, 44) = 1.25',
451: 1:    '✅f(0, 56) = 0',
451: 1:    '✅f(56, 1) = 56',
451: 1:    '✅f(1, -2) = -0.5',
451: 1:    '✅f(-1, 2) = -0.5',
451: 1:    '✅f(-1, -2) = 0.5',
451: 1:    '✅f(1, 1000) = 0.001',
451: 1:    '✅f(56, 45) = 1.2(4)',
451: 1:    '✅f(111, 110) = 1.00(90)',
451: 1:    '✅f(111, 11) = 10.0(90)',
451: 1:    '✅f(11111, 11) = 1010.0(90)',
451: 1:    '✅f(-11, -222) = 0.0(495)',
451: 1:    '✅f(111, -22) = -5.0(45)',
451: 1:    '✅f(1, 3000) = 0.000(3)',
451: 1:    '✅f(87, 78) = 1.1(153846)',
451: 1:    '✅f(45, 56) = 0.803(571428)',
451: 1:    '✅f(212, 133) = 1.(593984962406015037)',
451: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
451: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
451: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
451: 1:    '✅f(666666660, 77727777) = 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
451: 1:    '❌f(666666660, 7772777) = ??? != 85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713'
451: 1:  ],
451: 1:  'level': 16,
451: 1:  'nextQuestion': '666666660, 7772777',
451: 1:  'questions': [
451: 1:    '1, 2',
451: 1:    '1, 1',
451: 1:    '5, 5',
451: 1:    '55, 5',
451: 1:    '55, 44',
451: 1:    '0, 56',
451: 1:    '56, 1',
451: 1:    '1, -2',
451: 1:    '-1, 2',
451: 1:    '-1, -2',
451: 1:    '1, 1000',
451: 1:    '56, 45',
451: 1:    '111, 110',
451: 1:    '111, 11',
451: 1:    '11111, 11',
451: 1:    '-11, -222',
451: 1:    '111, -22',
451: 1:    '1, 3000',
451: 1:    '87, 78',
451: 1:    '45, 56',
451: 1:    '212, 133',
451: 1:    '11111, 115',
451: 1:    '123, 345',
451: 1:    '66666666, 77727777',
451: 1:    '666666660, 77727777',
451: 1:    '666666660, 7772777'
451: 1:  ]
451: 1:}
451: 1:Scores: 54510
451: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713']')
451: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
452: 1:BoardData {
452: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
452: 1:  'expectedAnswer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
452: 1:  'history': [
452: 1:    {
452: 1:      'answer': '0.5',
452: 1:      'question': '1, 2',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '1',
452: 1:      'question': '1, 1',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '1',
452: 1:      'question': '5, 5',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '11',
452: 1:      'question': '55, 5',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '1.25',
452: 1:      'question': '55, 44',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '0',
452: 1:      'question': '0, 56',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '56',
452: 1:      'question': '56, 1',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '-0.5',
452: 1:      'question': '1, -2',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '-0.5',
452: 1:      'question': '-1, 2',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '0.5',
452: 1:      'question': '-1, -2',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '0.001',
452: 1:      'question': '1, 1000',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '1.2(4)',
452: 1:      'question': '56, 45',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '1.00(90)',
452: 1:      'question': '111, 110',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '10.0(90)',
452: 1:      'question': '111, 11',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '1010.0(90)',
452: 1:      'question': '11111, 11',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '0.0(495)',
452: 1:      'question': '-11, -222',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '-5.0(45)',
452: 1:      'question': '111, -22',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '0.000(3)',
452: 1:      'question': '1, 3000',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '1.1(153846)',
452: 1:      'question': '87, 78',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '0.803(571428)',
452: 1:      'question': '45, 56',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '1.(593984962406015037)',
452: 1:      'question': '212, 133',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '96.6(1739130434782608695652)',
452: 1:      'question': '11111, 115',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '0.3(5652173913043478260869)',
452: 1:      'question': '123, 345',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
452: 1:      'question': '66666666, 77727777',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
452: 1:      'question': '666666660, 77727777',
452: 1:      'valid': true
452: 1:    },
452: 1:    {
452: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
452: 1:      'question': '666666660, 7772777',
452: 1:      'valid': true
452: 1:    }
452: 1:  ],
452: 1:  'info': [
452: 1:    '✅f(1, 2) = 0.5',
452: 1:    '✅f(1, 1) = 1',
452: 1:    '✅f(5, 5) = 1',
452: 1:    '✅f(55, 5) = 11',
452: 1:    '✅f(55, 44) = 1.25',
452: 1:    '✅f(0, 56) = 0',
452: 1:    '✅f(56, 1) = 56',
452: 1:    '✅f(1, -2) = -0.5',
452: 1:    '✅f(-1, 2) = -0.5',
452: 1:    '✅f(-1, -2) = 0.5',
452: 1:    '✅f(1, 1000) = 0.001',
452: 1:    '✅f(56, 45) = 1.2(4)',
452: 1:    '✅f(111, 110) = 1.00(90)',
452: 1:    '✅f(111, 11) = 10.0(90)',
452: 1:    '✅f(11111, 11) = 1010.0(90)',
452: 1:    '✅f(-11, -222) = 0.0(495)',
452: 1:    '✅f(111, -22) = -5.0(45)',
452: 1:    '✅f(1, 3000) = 0.000(3)',
452: 1:    '✅f(87, 78) = 1.1(153846)',
452: 1:    '✅f(45, 56) = 0.803(571428)',
452: 1:    '✅f(212, 133) = 1.(593984962406015037)',
452: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
452: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
452: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
452: 1:    '✅f(666666660, 77727777) = 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
452: 1:    '✅f(666666660, 7772777) = 85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
452: 1:    '❌f(100, 97) = ??? != 1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)'
452: 1:  ],
452: 1:  'level': 16,
452: 1:  'nextQuestion': '100, 97',
452: 1:  'questions': [
452: 1:    '1, 2',
452: 1:    '1, 1',
452: 1:    '5, 5',
452: 1:    '55, 5',
452: 1:    '55, 44',
452: 1:    '0, 56',
452: 1:    '56, 1',
452: 1:    '1, -2',
452: 1:    '-1, 2',
452: 1:    '-1, -2',
452: 1:    '1, 1000',
452: 1:    '56, 45',
452: 1:    '111, 110',
452: 1:    '111, 11',
452: 1:    '11111, 11',
452: 1:    '-11, -222',
452: 1:    '111, -22',
452: 1:    '1, 3000',
452: 1:    '87, 78',
452: 1:    '45, 56',
452: 1:    '212, 133',
452: 1:    '11111, 115',
452: 1:    '123, 345',
452: 1:    '66666666, 77727777',
452: 1:    '666666660, 77727777',
452: 1:    '666666660, 7772777',
452: 1:    '100, 97'
452: 1:  ]
452: 1:}
452: 1:Scores: 54531
452: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713', '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)']')
452: 1:Fire Event: PassTest{complexity=60, testCount=28}
------------------------------------------
453: 1:BoardData {
453: 1:  'description': ['Write a method that divides two numbers in a column to within 100 digits. If there is a period in the result, it should be written as follows:\n212/133 = 1.(593984962406015037)\n87/78 = 1.1(153846)'],
453: 1:  'expectedAnswer': 'Div by zero error!',
453: 1:  'history': [
453: 1:    {
453: 1:      'answer': '0.5',
453: 1:      'question': '1, 2',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1',
453: 1:      'question': '1, 1',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1',
453: 1:      'question': '5, 5',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '11',
453: 1:      'question': '55, 5',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1.25',
453: 1:      'question': '55, 44',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '0',
453: 1:      'question': '0, 56',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '56',
453: 1:      'question': '56, 1',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '-0.5',
453: 1:      'question': '1, -2',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '-0.5',
453: 1:      'question': '-1, 2',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '0.5',
453: 1:      'question': '-1, -2',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '0.001',
453: 1:      'question': '1, 1000',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1.2(4)',
453: 1:      'question': '56, 45',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1.00(90)',
453: 1:      'question': '111, 110',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '10.0(90)',
453: 1:      'question': '111, 11',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1010.0(90)',
453: 1:      'question': '11111, 11',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '0.0(495)',
453: 1:      'question': '-11, -222',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '-5.0(45)',
453: 1:      'question': '111, -22',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '0.000(3)',
453: 1:      'question': '1, 3000',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1.1(153846)',
453: 1:      'question': '87, 78',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '0.803(571428)',
453: 1:      'question': '45, 56',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1.(593984962406015037)',
453: 1:      'question': '212, 133',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '96.6(1739130434782608695652)',
453: 1:      'question': '11111, 115',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '0.3(5652173913043478260869)',
453: 1:      'question': '123, 345',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
453: 1:      'question': '66666666, 77727777',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
453: 1:      'question': '666666660, 77727777',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
453: 1:      'question': '666666660, 7772777',
453: 1:      'valid': true
453: 1:    },
453: 1:    {
453: 1:      'answer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
453: 1:      'question': '100, 97',
453: 1:      'valid': true
453: 1:    }
453: 1:  ],
453: 1:  'info': [
453: 1:    '✅f(1, 2) = 0.5',
453: 1:    '✅f(1, 1) = 1',
453: 1:    '✅f(5, 5) = 1',
453: 1:    '✅f(55, 5) = 11',
453: 1:    '✅f(55, 44) = 1.25',
453: 1:    '✅f(0, 56) = 0',
453: 1:    '✅f(56, 1) = 56',
453: 1:    '✅f(1, -2) = -0.5',
453: 1:    '✅f(-1, 2) = -0.5',
453: 1:    '✅f(-1, -2) = 0.5',
453: 1:    '✅f(1, 1000) = 0.001',
453: 1:    '✅f(56, 45) = 1.2(4)',
453: 1:    '✅f(111, 110) = 1.00(90)',
453: 1:    '✅f(111, 11) = 10.0(90)',
453: 1:    '✅f(11111, 11) = 1010.0(90)',
453: 1:    '✅f(-11, -222) = 0.0(495)',
453: 1:    '✅f(111, -22) = -5.0(45)',
453: 1:    '✅f(1, 3000) = 0.000(3)',
453: 1:    '✅f(87, 78) = 1.1(153846)',
453: 1:    '✅f(45, 56) = 0.803(571428)',
453: 1:    '✅f(212, 133) = 1.(593984962406015037)',
453: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
453: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
453: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
453: 1:    '✅f(666666660, 77727777) = 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
453: 1:    '✅f(666666660, 7772777) = 85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
453: 1:    '✅f(100, 97) = 1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
453: 1:    '❌f(999, 0) = ??? != Div by zero error!'
453: 1:  ],
453: 1:  'level': 16,
453: 1:  'nextQuestion': '999, 0',
453: 1:  'questions': [
453: 1:    '1, 2',
453: 1:    '1, 1',
453: 1:    '5, 5',
453: 1:    '55, 5',
453: 1:    '55, 44',
453: 1:    '0, 56',
453: 1:    '56, 1',
453: 1:    '1, -2',
453: 1:    '-1, 2',
453: 1:    '-1, -2',
453: 1:    '1, 1000',
453: 1:    '56, 45',
453: 1:    '111, 110',
453: 1:    '111, 11',
453: 1:    '11111, 11',
453: 1:    '-11, -222',
453: 1:    '111, -22',
453: 1:    '1, 3000',
453: 1:    '87, 78',
453: 1:    '45, 56',
453: 1:    '212, 133',
453: 1:    '11111, 115',
453: 1:    '123, 345',
453: 1:    '66666666, 77727777',
453: 1:    '666666660, 77727777',
453: 1:    '666666660, 7772777',
453: 1:    '100, 97',
453: 1:    '999, 0'
453: 1:  ]
453: 1:}
453: 1:Scores: 54552
453: 1:Answer: message('['0.5', '1', '1', '11', '1.25', '0', '56', '-0.5', '-0.5', '0.5', '0.001', '1.2(4)', '1.00(90)', '10.0(90)', '1010.0(90)', '0.0(495)', '-5.0(45)', '0.000(3)', '1.1(153846)', '0.803(571428)', '1.(593984962406015037)', '96.6(1739130434782608695652)', '0.3(5652173913043478260869)', '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484', '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847', '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713', '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)', 'Div by zero error!']')
453: 1:Fire Event: PassTest{complexity=60, testCount=28}
453: 1:Fire Event: NextAlgorithm{complexity=60, time=0}
------------------------------------------
454: 1:BoardData {
454: 1:  'description': ['Wait for next level. Please send 'message('StartNextLevel')' command.'],
454: 1:  'history': [
454: 1:    {
454: 1:      'answer': '0.5',
454: 1:      'question': '1, 2',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1',
454: 1:      'question': '1, 1',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1',
454: 1:      'question': '5, 5',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '11',
454: 1:      'question': '55, 5',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1.25',
454: 1:      'question': '55, 44',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '0',
454: 1:      'question': '0, 56',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '56',
454: 1:      'question': '56, 1',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '-0.5',
454: 1:      'question': '1, -2',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '-0.5',
454: 1:      'question': '-1, 2',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '0.5',
454: 1:      'question': '-1, -2',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '0.001',
454: 1:      'question': '1, 1000',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1.2(4)',
454: 1:      'question': '56, 45',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1.00(90)',
454: 1:      'question': '111, 110',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '10.0(90)',
454: 1:      'question': '111, 11',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1010.0(90)',
454: 1:      'question': '11111, 11',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '0.0(495)',
454: 1:      'question': '-11, -222',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '-5.0(45)',
454: 1:      'question': '111, -22',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '0.000(3)',
454: 1:      'question': '1, 3000',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1.1(153846)',
454: 1:      'question': '87, 78',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '0.803(571428)',
454: 1:      'question': '45, 56',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1.(593984962406015037)',
454: 1:      'question': '212, 133',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '96.6(1739130434782608695652)',
454: 1:      'question': '11111, 115',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '0.3(5652173913043478260869)',
454: 1:      'question': '123, 345',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
454: 1:      'question': '66666666, 77727777',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
454: 1:      'question': '666666660, 77727777',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
454: 1:      'question': '666666660, 7772777',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': '1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
454: 1:      'question': '100, 97',
454: 1:      'valid': true
454: 1:    },
454: 1:    {
454: 1:      'answer': 'Div by zero error!',
454: 1:      'question': '999, 0',
454: 1:      'valid': true
454: 1:    }
454: 1:  ],
454: 1:  'info': [
454: 1:    '✅f(1, 2) = 0.5',
454: 1:    '✅f(1, 1) = 1',
454: 1:    '✅f(5, 5) = 1',
454: 1:    '✅f(55, 5) = 11',
454: 1:    '✅f(55, 44) = 1.25',
454: 1:    '✅f(0, 56) = 0',
454: 1:    '✅f(56, 1) = 56',
454: 1:    '✅f(1, -2) = -0.5',
454: 1:    '✅f(-1, 2) = -0.5',
454: 1:    '✅f(-1, -2) = 0.5',
454: 1:    '✅f(1, 1000) = 0.001',
454: 1:    '✅f(56, 45) = 1.2(4)',
454: 1:    '✅f(111, 110) = 1.00(90)',
454: 1:    '✅f(111, 11) = 10.0(90)',
454: 1:    '✅f(11111, 11) = 1010.0(90)',
454: 1:    '✅f(-11, -222) = 0.0(495)',
454: 1:    '✅f(111, -22) = -5.0(45)',
454: 1:    '✅f(1, 3000) = 0.000(3)',
454: 1:    '✅f(87, 78) = 1.1(153846)',
454: 1:    '✅f(45, 56) = 0.803(571428)',
454: 1:    '✅f(212, 133) = 1.(593984962406015037)',
454: 1:    '✅f(11111, 115) = 96.6(1739130434782608695652)',
454: 1:    '✅f(123, 345) = 0.3(5652173913043478260869)',
454: 1:    '✅f(66666666, 77727777) = 0.8576942320118070532237143486041032667124906968586017840186012266888836921194851616559161340739231484',
454: 1:    '✅f(666666660, 77727777) = 8.5769423201180705322371434860410326671249069685860178401860122668888369211948516165591613407392314847',
454: 1:    '✅f(666666660, 7772777) = 85.7694309253951322673994120762759564567464112247141529983428059238030371899258141588263756955847311713',
454: 1:    '✅f(100, 97) = 1.0(309278350515463917525773195876288659793814432989690721649484536082474226804123711340206185567010)',
454: 1:    '✅f(999, 0) = Div by zero error!'
454: 1:  ],
454: 1:  'level': 16,
454: 1:  'questions': []
454: 1:}
454: 1:Scores: 62672
454: 1:Answer: message('StartNextLevel')
454: 1:PLAYER_WIN -> REMOVE_FROM_GAME
------------------------------------------
455: 1:BoardData {
455: 1:  'description': ['No more Levels. You win!'],
455: 1:  'history': [],
455: 1:  'info': [],
455: 1:  'level': 17,
455: 1:  'questions': []
455: 1:}
455: 1:Scores: 62672
455: 1:Answer: message('StartNextLevel')
------------------------------------------
456: 1:BoardData {
456: 1:  'description': ['No more Levels. You win!'],
456: 1:  'history': [],
456: 1:  'info': [],
456: 1:  'level': 17,
456: 1:  'questions': []
456: 1:}
456: 1:Scores: 62672
456: 1:Answer: message('StartNextLevel')
------------------------------------------
457: 1:BoardData {
457: 1:  'description': ['No more Levels. You win!'],
457: 1:  'history': [],
457: 1:  'info': [],
457: 1:  'level': 17,
457: 1:  'questions': []
457: 1:}
457: 1:Scores: 62672
457: 1:Answer: message('StartNextLevel')
------------------------------------------
458: 1:BoardData {
458: 1:  'description': ['No more Levels. You win!'],
458: 1:  'history': [],
458: 1:  'info': [],
458: 1:  'level': 17,
458: 1:  'questions': []
458: 1:}
458: 1:Scores: 62672
458: 1:Answer: message('StartNextLevel')
------------------------------------------
459: 1:BoardData {
459: 1:  'description': ['No more Levels. You win!'],
459: 1:  'history': [],
459: 1:  'info': [],
459: 1:  'level': 17,
459: 1:  'questions': []
459: 1:}
459: 1:Scores: 62672
459: 1:Answer: message('StartNextLevel')
------------------------------------------
460: 1:BoardData {
460: 1:  'description': ['No more Levels. You win!'],
460: 1:  'history': [],
460: 1:  'info': [],
460: 1:  'level': 17,
460: 1:  'questions': []
460: 1:}
460: 1:Scores: 62672
460: 1:Answer: message('StartNextLevel')
------------------------------------------
461: 1:BoardData {
461: 1:  'description': ['No more Levels. You win!'],
461: 1:  'history': [],
461: 1:  'info': [],
461: 1:  'level': 17,
461: 1:  'questions': []
461: 1:}
461: 1:Scores: 62672
461: 1:Answer: message('StartNextLevel')
------------------------------------------
462: 1:BoardData {
462: 1:  'description': ['No more Levels. You win!'],
462: 1:  'history': [],
462: 1:  'info': [],
462: 1:  'level': 17,
462: 1:  'questions': []
462: 1:}
462: 1:Scores: 62672
462: 1:Answer: message('StartNextLevel')
------------------------------------------
463: 1:BoardData {
463: 1:  'description': ['No more Levels. You win!'],
463: 1:  'history': [],
463: 1:  'info': [],
463: 1:  'level': 17,
463: 1:  'questions': []
463: 1:}
463: 1:Scores: 62672
463: 1:Answer: message('StartNextLevel')
------------------------------------------
464: 1:BoardData {
464: 1:  'description': ['No more Levels. You win!'],
464: 1:  'history': [],
464: 1:  'info': [],
464: 1:  'level': 17,
464: 1:  'questions': []
464: 1:}
464: 1:Scores: 62672
464: 1:Answer: message('StartNextLevel')
------------------------------------------
465: 1:BoardData {
465: 1:  'description': ['No more Levels. You win!'],
465: 1:  'history': [],
465: 1:  'info': [],
465: 1:  'level': 17,
465: 1:  'questions': []
465: 1:}
465: 1:Scores: 62672
465: 1:Answer: message('StartNextLevel')
------------------------------------------
466: 1:BoardData {
466: 1:  'description': ['No more Levels. You win!'],
466: 1:  'history': [],
466: 1:  'info': [],
466: 1:  'level': 17,
466: 1:  'questions': []
466: 1:}
466: 1:Scores: 62672
466: 1:Answer: message('StartNextLevel')
------------------------------------------
467: 1:BoardData {
467: 1:  'description': ['No more Levels. You win!'],
467: 1:  'history': [],
467: 1:  'info': [],
467: 1:  'level': 17,
467: 1:  'questions': []
467: 1:}
467: 1:Scores: 62672
467: 1:Answer: message('StartNextLevel')
------------------------------------------
468: 1:BoardData {
468: 1:  'description': ['No more Levels. You win!'],
468: 1:  'history': [],
468: 1:  'info': [],
468: 1:  'level': 17,
468: 1:  'questions': []
468: 1:}
468: 1:Scores: 62672
468: 1:Answer: message('StartNextLevel')
------------------------------------------
469: 1:BoardData {
469: 1:  'description': ['No more Levels. You win!'],
469: 1:  'history': [],
469: 1:  'info': [],
469: 1:  'level': 17,
469: 1:  'questions': []
469: 1:}
469: 1:Scores: 62672
469: 1:Answer: message('StartNextLevel')
------------------------------------------
470: 1:BoardData {
470: 1:  'description': ['No more Levels. You win!'],
470: 1:  'history': [],
470: 1:  'info': [],
470: 1:  'level': 17,
470: 1:  'questions': []
470: 1:}
470: 1:Scores: 62672
470: 1:Answer: message('StartNextLevel')
------------------------------------------
471: 1:BoardData {
471: 1:  'description': ['No more Levels. You win!'],
471: 1:  'history': [],
471: 1:  'info': [],
471: 1:  'level': 17,
471: 1:  'questions': []
471: 1:}
471: 1:Scores: 62672
471: 1:Answer: message('StartNextLevel')
------------------------------------------
472: 1:BoardData {
472: 1:  'description': ['No more Levels. You win!'],
472: 1:  'history': [],
472: 1:  'info': [],
472: 1:  'level': 17,
472: 1:  'questions': []
472: 1:}
472: 1:Scores: 62672
472: 1:Answer: message('StartNextLevel')
------------------------------------------
473: 1:BoardData {
473: 1:  'description': ['No more Levels. You win!'],
473: 1:  'history': [],
473: 1:  'info': [],
473: 1:  'level': 17,
473: 1:  'questions': []
473: 1:}
473: 1:Scores: 62672
473: 1:Answer: message('StartNextLevel')
------------------------------------------
474: 1:BoardData {
474: 1:  'description': ['No more Levels. You win!'],
474: 1:  'history': [],
474: 1:  'info': [],
474: 1:  'level': 17,
474: 1:  'questions': []
474: 1:}
474: 1:Scores: 62672
474: 1:Answer: message('StartNextLevel')
------------------------------------------
475: 1:BoardData {
475: 1:  'description': ['No more Levels. You win!'],
475: 1:  'history': [],
475: 1:  'info': [],
475: 1:  'level': 17,
475: 1:  'questions': []
475: 1:}
475: 1:Scores: 62672
475: 1:Answer: message('StartNextLevel')
------------------------------------------
476: 1:BoardData {
476: 1:  'description': ['No more Levels. You win!'],
476: 1:  'history': [],
476: 1:  'info': [],
476: 1:  'level': 17,
476: 1:  'questions': []
476: 1:}
476: 1:Scores: 62672
476: 1:Answer: message('StartNextLevel')
------------------------------------------
477: 1:BoardData {
477: 1:  'description': ['No more Levels. You win!'],
477: 1:  'history': [],
477: 1:  'info': [],
477: 1:  'level': 17,
477: 1:  'questions': []
477: 1:}
477: 1:Scores: 62672
477: 1:Answer: message('StartNextLevel')
------------------------------------------
478: 1:BoardData {
478: 1:  'description': ['No more Levels. You win!'],
478: 1:  'history': [],
478: 1:  'info': [],
478: 1:  'level': 17,
478: 1:  'questions': []
478: 1:}
478: 1:Scores: 62672
478: 1:Answer: message('StartNextLevel')
------------------------------------------
479: 1:BoardData {
479: 1:  'description': ['No more Levels. You win!'],
479: 1:  'history': [],
479: 1:  'info': [],
479: 1:  'level': 17,
479: 1:  'questions': []
479: 1:}
479: 1:Scores: 62672
479: 1:Answer: message('StartNextLevel')
------------------------------------------
480: 1:BoardData {
480: 1:  'description': ['No more Levels. You win!'],
480: 1:  'history': [],
480: 1:  'info': [],
480: 1:  'level': 17,
480: 1:  'questions': []
480: 1:}
480: 1:Scores: 62672
480: 1:Answer: message('StartNextLevel')
------------------------------------------
481: 1:BoardData {
481: 1:  'description': ['No more Levels. You win!'],
481: 1:  'history': [],
481: 1:  'info': [],
481: 1:  'level': 17,
481: 1:  'questions': []
481: 1:}
481: 1:Scores: 62672
481: 1:Answer: message('StartNextLevel')
------------------------------------------
482: 1:BoardData {
482: 1:  'description': ['No more Levels. You win!'],
482: 1:  'history': [],
482: 1:  'info': [],
482: 1:  'level': 17,
482: 1:  'questions': []
482: 1:}
482: 1:Scores: 62672
482: 1:Answer: message('StartNextLevel')
------------------------------------------
483: 1:BoardData {
483: 1:  'description': ['No more Levels. You win!'],
483: 1:  'history': [],
483: 1:  'info': [],
483: 1:  'level': 17,
483: 1:  'questions': []
483: 1:}
483: 1:Scores: 62672
483: 1:Answer: message('StartNextLevel')
------------------------------------------
484: 1:BoardData {
484: 1:  'description': ['No more Levels. You win!'],
484: 1:  'history': [],
484: 1:  'info': [],
484: 1:  'level': 17,
484: 1:  'questions': []
484: 1:}
484: 1:Scores: 62672
484: 1:Answer: message('StartNextLevel')
------------------------------------------
485: 1:BoardData {
485: 1:  'description': ['No more Levels. You win!'],
485: 1:  'history': [],
485: 1:  'info': [],
485: 1:  'level': 17,
485: 1:  'questions': []
485: 1:}
485: 1:Scores: 62672
485: 1:Answer: message('StartNextLevel')
------------------------------------------
486: 1:BoardData {
486: 1:  'description': ['No more Levels. You win!'],
486: 1:  'history': [],
486: 1:  'info': [],
486: 1:  'level': 17,
486: 1:  'questions': []
486: 1:}
486: 1:Scores: 62672
486: 1:Answer: message('StartNextLevel')
------------------------------------------
487: 1:BoardData {
487: 1:  'description': ['No more Levels. You win!'],
487: 1:  'history': [],
487: 1:  'info': [],
487: 1:  'level': 17,
487: 1:  'questions': []
487: 1:}
487: 1:Scores: 62672
487: 1:Answer: message('StartNextLevel')
------------------------------------------
488: 1:BoardData {
488: 1:  'description': ['No more Levels. You win!'],
488: 1:  'history': [],
488: 1:  'info': [],
488: 1:  'level': 17,
488: 1:  'questions': []
488: 1:}
488: 1:Scores: 62672
488: 1:Answer: message('StartNextLevel')
------------------------------------------
489: 1:BoardData {
489: 1:  'description': ['No more Levels. You win!'],
489: 1:  'history': [],
489: 1:  'info': [],
489: 1:  'level': 17,
489: 1:  'questions': []
489: 1:}
489: 1:Scores: 62672
489: 1:Answer: message('StartNextLevel')
------------------------------------------
490: 1:BoardData {
490: 1:  'description': ['No more Levels. You win!'],
490: 1:  'history': [],
490: 1:  'info': [],
490: 1:  'level': 17,
490: 1:  'questions': []
490: 1:}
490: 1:Scores: 62672
490: 1:Answer: message('StartNextLevel')
------------------------------------------
491: 1:BoardData {
491: 1:  'description': ['No more Levels. You win!'],
491: 1:  'history': [],
491: 1:  'info': [],
491: 1:  'level': 17,
491: 1:  'questions': []
491: 1:}
491: 1:Scores: 62672
491: 1:Answer: message('StartNextLevel')
------------------------------------------
492: 1:BoardData {
492: 1:  'description': ['No more Levels. You win!'],
492: 1:  'history': [],
492: 1:  'info': [],
492: 1:  'level': 17,
492: 1:  'questions': []
492: 1:}
492: 1:Scores: 62672
492: 1:Answer: message('StartNextLevel')
------------------------------------------
493: 1:BoardData {
493: 1:  'description': ['No more Levels. You win!'],
493: 1:  'history': [],
493: 1:  'info': [],
493: 1:  'level': 17,
493: 1:  'questions': []
493: 1:}
493: 1:Scores: 62672
493: 1:Answer: message('StartNextLevel')
------------------------------------------
494: 1:BoardData {
494: 1:  'description': ['No more Levels. You win!'],
494: 1:  'history': [],
494: 1:  'info': [],
494: 1:  'level': 17,
494: 1:  'questions': []
494: 1:}
494: 1:Scores: 62672
494: 1:Answer: message('StartNextLevel')
------------------------------------------
495: 1:BoardData {
495: 1:  'description': ['No more Levels. You win!'],
495: 1:  'history': [],
495: 1:  'info': [],
495: 1:  'level': 17,
495: 1:  'questions': []
495: 1:}
495: 1:Scores: 62672
495: 1:Answer: message('StartNextLevel')
------------------------------------------
496: 1:BoardData {
496: 1:  'description': ['No more Levels. You win!'],
496: 1:  'history': [],
496: 1:  'info': [],
496: 1:  'level': 17,
496: 1:  'questions': []
496: 1:}
496: 1:Scores: 62672
496: 1:Answer: message('StartNextLevel')
------------------------------------------
497: 1:BoardData {
497: 1:  'description': ['No more Levels. You win!'],
497: 1:  'history': [],
497: 1:  'info': [],
497: 1:  'level': 17,
497: 1:  'questions': []
497: 1:}
497: 1:Scores: 62672
497: 1:Answer: message('StartNextLevel')
------------------------------------------
498: 1:BoardData {
498: 1:  'description': ['No more Levels. You win!'],
498: 1:  'history': [],
498: 1:  'info': [],
498: 1:  'level': 17,
498: 1:  'questions': []
498: 1:}
498: 1:Scores: 62672
498: 1:Answer: message('StartNextLevel')
------------------------------------------
499: 1:BoardData {
499: 1:  'description': ['No more Levels. You win!'],
499: 1:  'history': [],
499: 1:  'info': [],
499: 1:  'level': 17,
499: 1:  'questions': []
499: 1:}
499: 1:Scores: 62672
499: 1:Answer: message('StartNextLevel')
------------------------------------------
500: 1:BoardData {
500: 1:  'description': ['No more Levels. You win!'],
500: 1:  'history': [],
500: 1:  'info': [],
500: 1:  'level': 17,
500: 1:  'questions': []
500: 1:}
500: 1:Scores: 62672
500: 1:Answer: message('StartNextLevel')
------------------------------------------
501: 1:BoardData {
501: 1:  'description': ['No more Levels. You win!'],
501: 1:  'history': [],
501: 1:  'info': [],
501: 1:  'level': 17,
501: 1:  'questions': []
501: 1:}
501: 1:Scores: 62672
501: 1:Answer: message('StartNextLevel')
------------------------------------------
502: 1:BoardData {
502: 1:  'description': ['No more Levels. You win!'],
502: 1:  'history': [],
502: 1:  'info': [],
502: 1:  'level': 17,
502: 1:  'questions': []
502: 1:}
502: 1:Scores: 62672
502: 1:Answer: message('StartNextLevel')
------------------------------------------
503: 1:BoardData {
503: 1:  'description': ['No more Levels. You win!'],
503: 1:  'history': [],
503: 1:  'info': [],
503: 1:  'level': 17,
503: 1:  'questions': []
503: 1:}
503: 1:Scores: 62672
503: 1:Answer: message('StartNextLevel')
------------------------------------------
504: 1:BoardData {
504: 1:  'description': ['No more Levels. You win!'],
504: 1:  'history': [],
504: 1:  'info': [],
504: 1:  'level': 17,
504: 1:  'questions': []
504: 1:}
504: 1:Scores: 62672
504: 1:Answer: message('StartNextLevel')
------------------------------------------
505: 1:BoardData {
505: 1:  'description': ['No more Levels. You win!'],
505: 1:  'history': [],
505: 1:  'info': [],
505: 1:  'level': 17,
505: 1:  'questions': []
505: 1:}
505: 1:Scores: 62672
505: 1:Answer: message('StartNextLevel')
------------------------------------------
506: 1:BoardData {
506: 1:  'description': ['No more Levels. You win!'],
506: 1:  'history': [],
506: 1:  'info': [],
506: 1:  'level': 17,
506: 1:  'questions': []
506: 1:}
506: 1:Scores: 62672
506: 1:Answer: message('StartNextLevel')
------------------------------------------
507: 1:BoardData {
507: 1:  'description': ['No more Levels. You win!'],
507: 1:  'history': [],
507: 1:  'info': [],
507: 1:  'level': 17,
507: 1:  'questions': []
507: 1:}
507: 1:Scores: 62672
507: 1:Answer: message('StartNextLevel')
------------------------------------------
508: 1:BoardData {
508: 1:  'description': ['No more Levels. You win!'],
508: 1:  'history': [],
508: 1:  'info': [],
508: 1:  'level': 17,
508: 1:  'questions': []
508: 1:}
508: 1:Scores: 62672
508: 1:Answer: message('StartNextLevel')
------------------------------------------
509: 1:BoardData {
509: 1:  'description': ['No more Levels. You win!'],
509: 1:  'history': [],
509: 1:  'info': [],
509: 1:  'level': 17,
509: 1:  'questions': []
509: 1:}
509: 1:Scores: 62672
509: 1:Answer: message('StartNextLevel')
------------------------------------------
510: 1:BoardData {
510: 1:  'description': ['No more Levels. You win!'],
510: 1:  'history': [],
510: 1:  'info': [],
510: 1:  'level': 17,
510: 1:  'questions': []
510: 1:}
510: 1:Scores: 62672
510: 1:Answer: message('StartNextLevel')
------------------------------------------
511: 1:BoardData {
511: 1:  'description': ['No more Levels. You win!'],
511: 1:  'history': [],
511: 1:  'info': [],
511: 1:  'level': 17,
511: 1:  'questions': []
511: 1:}
511: 1:Scores: 62672
511: 1:Answer: message('StartNextLevel')
------------------------------------------
512: 1:BoardData {
512: 1:  'description': ['No more Levels. You win!'],
512: 1:  'history': [],
512: 1:  'info': [],
512: 1:  'level': 17,
512: 1:  'questions': []
512: 1:}
512: 1:Scores: 62672
512: 1:Answer: message('StartNextLevel')
------------------------------------------
513: 1:BoardData {
513: 1:  'description': ['No more Levels. You win!'],
513: 1:  'history': [],
513: 1:  'info': [],
513: 1:  'level': 17,
513: 1:  'questions': []
513: 1:}
513: 1:Scores: 62672
513: 1:Answer: message('StartNextLevel')
------------------------------------------
514: 1:BoardData {
514: 1:  'description': ['No more Levels. You win!'],
514: 1:  'history': [],
514: 1:  'info': [],
514: 1:  'level': 17,
514: 1:  'questions': []
514: 1:}
514: 1:Scores: 62672
514: 1:Answer: message('StartNextLevel')
------------------------------------------
515: 1:BoardData {
515: 1:  'description': ['No more Levels. You win!'],
515: 1:  'history': [],
515: 1:  'info': [],
515: 1:  'level': 17,
515: 1:  'questions': []
515: 1:}
515: 1:Scores: 62672
515: 1:Answer: message('StartNextLevel')
------------------------------------------
516: 1:BoardData {
516: 1:  'description': ['No more Levels. You win!'],
516: 1:  'history': [],
516: 1:  'info': [],
516: 1:  'level': 17,
516: 1:  'questions': []
516: 1:}
516: 1:Scores: 62672
516: 1:Answer: message('StartNextLevel')
------------------------------------------
517: 1:BoardData {
517: 1:  'description': ['No more Levels. You win!'],
517: 1:  'history': [],
517: 1:  'info': [],
517: 1:  'level': 17,
517: 1:  'questions': []
517: 1:}
517: 1:Scores: 62672
517: 1:Answer: message('StartNextLevel')
------------------------------------------
518: 1:BoardData {
518: 1:  'description': ['No more Levels. You win!'],
518: 1:  'history': [],
518: 1:  'info': [],
518: 1:  'level': 17,
518: 1:  'questions': []
518: 1:}
518: 1:Scores: 62672
518: 1:Answer: message('StartNextLevel')
------------------------------------------
519: 1:BoardData {
519: 1:  'description': ['No more Levels. You win!'],
519: 1:  'history': [],
519: 1:  'info': [],
519: 1:  'level': 17,
519: 1:  'questions': []
519: 1:}
519: 1:Scores: 62672
519: 1:Answer: message('StartNextLevel')
------------------------------------------
520: 1:BoardData {
520: 1:  'description': ['No more Levels. You win!'],
520: 1:  'history': [],
520: 1:  'info': [],
520: 1:  'level': 17,
520: 1:  'questions': []
520: 1:}
520: 1:Scores: 62672
520: 1:Answer: message('StartNextLevel')
------------------------------------------
521: 1:BoardData {
521: 1:  'description': ['No more Levels. You win!'],
521: 1:  'history': [],
521: 1:  'info': [],
521: 1:  'level': 17,
521: 1:  'questions': []
521: 1:}
521: 1:Scores: 62672
521: 1:Answer: message('StartNextLevel')
------------------------------------------
522: 1:BoardData {
522: 1:  'description': ['No more Levels. You win!'],
522: 1:  'history': [],
522: 1:  'info': [],
522: 1:  'level': 17,
522: 1:  'questions': []
522: 1:}
522: 1:Scores: 62672
522: 1:Answer: message('StartNextLevel')
------------------------------------------
523: 1:BoardData {
523: 1:  'description': ['No more Levels. You win!'],
523: 1:  'history': [],
523: 1:  'info': [],
523: 1:  'level': 17,
523: 1:  'questions': []
523: 1:}
523: 1:Scores: 62672
523: 1:Answer: message('StartNextLevel')
------------------------------------------
524: 1:BoardData {
524: 1:  'description': ['No more Levels. You win!'],
524: 1:  'history': [],
524: 1:  'info': [],
524: 1:  'level': 17,
524: 1:  'questions': []
524: 1:}
524: 1:Scores: 62672
524: 1:Answer: message('StartNextLevel')
------------------------------------------
525: 1:BoardData {
525: 1:  'description': ['No more Levels. You win!'],
525: 1:  'history': [],
525: 1:  'info': [],
525: 1:  'level': 17,
525: 1:  'questions': []
525: 1:}
525: 1:Scores: 62672
525: 1:Answer: message('StartNextLevel')
------------------------------------------
526: 1:BoardData {
526: 1:  'description': ['No more Levels. You win!'],
526: 1:  'history': [],
526: 1:  'info': [],
526: 1:  'level': 17,
526: 1:  'questions': []
526: 1:}
526: 1:Scores: 62672
526: 1:Answer: message('StartNextLevel')
------------------------------------------
527: 1:BoardData {
527: 1:  'description': ['No more Levels. You win!'],
527: 1:  'history': [],
527: 1:  'info': [],
527: 1:  'level': 17,
527: 1:  'questions': []
527: 1:}
527: 1:Scores: 62672
527: 1:Answer: message('StartNextLevel')
------------------------------------------
528: 1:BoardData {
528: 1:  'description': ['No more Levels. You win!'],
528: 1:  'history': [],
528: 1:  'info': [],
528: 1:  'level': 17,
528: 1:  'questions': []
528: 1:}
528: 1:Scores: 62672
528: 1:Answer: message('StartNextLevel')
------------------------------------------
529: 1:BoardData {
529: 1:  'description': ['No more Levels. You win!'],
529: 1:  'history': [],
529: 1:  'info': [],
529: 1:  'level': 17,
529: 1:  'questions': []
529: 1:}
529: 1:Scores: 62672
529: 1:Answer: message('StartNextLevel')
------------------------------------------
530: 1:BoardData {
530: 1:  'description': ['No more Levels. You win!'],
530: 1:  'history': [],
530: 1:  'info': [],
530: 1:  'level': 17,
530: 1:  'questions': []
530: 1:}
530: 1:Scores: 62672
530: 1:Answer: message('StartNextLevel')
------------------------------------------
531: 1:BoardData {
531: 1:  'description': ['No more Levels. You win!'],
531: 1:  'history': [],
531: 1:  'info': [],
531: 1:  'level': 17,
531: 1:  'questions': []
531: 1:}
531: 1:Scores: 62672
531: 1:Answer: message('StartNextLevel')
------------------------------------------
532: 1:BoardData {
532: 1:  'description': ['No more Levels. You win!'],
532: 1:  'history': [],
532: 1:  'info': [],
532: 1:  'level': 17,
532: 1:  'questions': []
532: 1:}
532: 1:Scores: 62672
532: 1:Answer: message('StartNextLevel')
------------------------------------------
533: 1:BoardData {
533: 1:  'description': ['No more Levels. You win!'],
533: 1:  'history': [],
533: 1:  'info': [],
533: 1:  'level': 17,
533: 1:  'questions': []
533: 1:}
533: 1:Scores: 62672
533: 1:Answer: message('StartNextLevel')
------------------------------------------
534: 1:BoardData {
534: 1:  'description': ['No more Levels. You win!'],
534: 1:  'history': [],
534: 1:  'info': [],
534: 1:  'level': 17,
534: 1:  'questions': []
534: 1:}
534: 1:Scores: 62672
534: 1:Answer: message('StartNextLevel')
------------------------------------------
535: 1:BoardData {
535: 1:  'description': ['No more Levels. You win!'],
535: 1:  'history': [],
535: 1:  'info': [],
535: 1:  'level': 17,
535: 1:  'questions': []
535: 1:}
535: 1:Scores: 62672
535: 1:Answer: message('StartNextLevel')
------------------------------------------
536: 1:BoardData {
536: 1:  'description': ['No more Levels. You win!'],
536: 1:  'history': [],
536: 1:  'info': [],
536: 1:  'level': 17,
536: 1:  'questions': []
536: 1:}
536: 1:Scores: 62672
536: 1:Answer: message('StartNextLevel')
------------------------------------------
537: 1:BoardData {
537: 1:  'description': ['No more Levels. You win!'],
537: 1:  'history': [],
537: 1:  'info': [],
537: 1:  'level': 17,
537: 1:  'questions': []
537: 1:}
537: 1:Scores: 62672
537: 1:Answer: message('StartNextLevel')
------------------------------------------
538: 1:BoardData {
538: 1:  'description': ['No more Levels. You win!'],
538: 1:  'history': [],
538: 1:  'info': [],
538: 1:  'level': 17,
538: 1:  'questions': []
538: 1:}
538: 1:Scores: 62672
538: 1:Answer: message('StartNextLevel')
------------------------------------------
539: 1:BoardData {
539: 1:  'description': ['No more Levels. You win!'],
539: 1:  'history': [],
539: 1:  'info': [],
539: 1:  'level': 17,
539: 1:  'questions': []
539: 1:}
539: 1:Scores: 62672
539: 1:Answer: message('StartNextLevel')
------------------------------------------
540: 1:BoardData {
540: 1:  'description': ['No more Levels. You win!'],
540: 1:  'history': [],
540: 1:  'info': [],
540: 1:  'level': 17,
540: 1:  'questions': []
540: 1:}
540: 1:Scores: 62672
540: 1:Answer: message('StartNextLevel')
------------------------------------------
541: 1:BoardData {
541: 1:  'description': ['No more Levels. You win!'],
541: 1:  'history': [],
541: 1:  'info': [],
541: 1:  'level': 17,
541: 1:  'questions': []
541: 1:}
541: 1:Scores: 62672
541: 1:Answer: message('StartNextLevel')
------------------------------------------
542: 1:BoardData {
542: 1:  'description': ['No more Levels. You win!'],
542: 1:  'history': [],
542: 1:  'info': [],
542: 1:  'level': 17,
542: 1:  'questions': []
542: 1:}
542: 1:Scores: 62672
542: 1:Answer: message('StartNextLevel')
------------------------------------------
543: 1:BoardData {
543: 1:  'description': ['No more Levels. You win!'],
543: 1:  'history': [],
543: 1:  'info': [],
543: 1:  'level': 17,
543: 1:  'questions': []
543: 1:}
543: 1:Scores: 62672
543: 1:Answer: message('StartNextLevel')
------------------------------------------
544: 1:BoardData {
544: 1:  'description': ['No more Levels. You win!'],
544: 1:  'history': [],
544: 1:  'info': [],
544: 1:  'level': 17,
544: 1:  'questions': []
544: 1:}
544: 1:Scores: 62672
544: 1:Answer: message('StartNextLevel')
------------------------------------------
545: 1:BoardData {
545: 1:  'description': ['No more Levels. You win!'],
545: 1:  'history': [],
545: 1:  'info': [],
545: 1:  'level': 17,
545: 1:  'questions': []
545: 1:}
545: 1:Scores: 62672
545: 1:Answer: message('StartNextLevel')
------------------------------------------
546: 1:BoardData {
546: 1:  'description': ['No more Levels. You win!'],
546: 1:  'history': [],
546: 1:  'info': [],
546: 1:  'level': 17,
546: 1:  'questions': []
546: 1:}
546: 1:Scores: 62672
546: 1:Answer: message('StartNextLevel')
------------------------------------------
547: 1:BoardData {
547: 1:  'description': ['No more Levels. You win!'],
547: 1:  'history': [],
547: 1:  'info': [],
547: 1:  'level': 17,
547: 1:  'questions': []
547: 1:}
547: 1:Scores: 62672
547: 1:Answer: message('StartNextLevel')
------------------------------------------
548: 1:BoardData {
548: 1:  'description': ['No more Levels. You win!'],
548: 1:  'history': [],
548: 1:  'info': [],
548: 1:  'level': 17,
548: 1:  'questions': []
548: 1:}
548: 1:Scores: 62672
548: 1:Answer: message('StartNextLevel')
------------------------------------------
549: 1:BoardData {
549: 1:  'description': ['No more Levels. You win!'],
549: 1:  'history': [],
549: 1:  'info': [],
549: 1:  'level': 17,
549: 1:  'questions': []
549: 1:}
549: 1:Scores: 62672
549: 1:Answer: message('StartNextLevel')
------------------------------------------
550: 1:BoardData {
550: 1:  'description': ['No more Levels. You win!'],
550: 1:  'history': [],
550: 1:  'info': [],
550: 1:  'level': 17,
550: 1:  'questions': []
550: 1:}
550: 1:Scores: 62672
550: 1:Answer: message('StartNextLevel')
------------------------------------------
551: 1:BoardData {
551: 1:  'description': ['No more Levels. You win!'],
551: 1:  'history': [],
551: 1:  'info': [],
551: 1:  'level': 17,
551: 1:  'questions': []
551: 1:}
551: 1:Scores: 62672
551: 1:Answer: message('StartNextLevel')
------------------------------------------
552: 1:BoardData {
552: 1:  'description': ['No more Levels. You win!'],
552: 1:  'history': [],
552: 1:  'info': [],
552: 1:  'level': 17,
552: 1:  'questions': []
552: 1:}
552: 1:Scores: 62672
552: 1:Answer: message('StartNextLevel')
------------------------------------------
553: 1:BoardData {
553: 1:  'description': ['No more Levels. You win!'],
553: 1:  'history': [],
553: 1:  'info': [],
553: 1:  'level': 17,
553: 1:  'questions': []
553: 1:}
553: 1:Scores: 62672
553: 1:Answer: message('StartNextLevel')
------------------------------------------
554: 1:BoardData {
554: 1:  'description': ['No more Levels. You win!'],
554: 1:  'history': [],
554: 1:  'info': [],
554: 1:  'level': 17,
554: 1:  'questions': []
554: 1:}
554: 1:Scores: 62672
554: 1:Answer: message('StartNextLevel')
------------------------------------------
555: 1:BoardData {
555: 1:  'description': ['No more Levels. You win!'],
555: 1:  'history': [],
555: 1:  'info': [],
555: 1:  'level': 17,
555: 1:  'questions': []
555: 1:}
555: 1:Scores: 62672
555: 1:Answer: message('StartNextLevel')
------------------------------------------
556: 1:BoardData {
556: 1:  'description': ['No more Levels. You win!'],
556: 1:  'history': [],
556: 1:  'info': [],
556: 1:  'level': 17,
556: 1:  'questions': []
556: 1:}
556: 1:Scores: 62672
556: 1:Answer: message('StartNextLevel')
------------------------------------------
557: 1:BoardData {
557: 1:  'description': ['No more Levels. You win!'],
557: 1:  'history': [],
557: 1:  'info': [],
557: 1:  'level': 17,
557: 1:  'questions': []
557: 1:}
557: 1:Scores: 62672
557: 1:Answer: message('StartNextLevel')
------------------------------------------
558: 1:BoardData {
558: 1:  'description': ['No more Levels. You win!'],
558: 1:  'history': [],
558: 1:  'info': [],
558: 1:  'level': 17,
558: 1:  'questions': []
558: 1:}
558: 1:Scores: 62672
558: 1:Answer: message('StartNextLevel')
------------------------------------------
559: 1:BoardData {
559: 1:  'description': ['No more Levels. You win!'],
559: 1:  'history': [],
559: 1:  'info': [],
559: 1:  'level': 17,
559: 1:  'questions': []
559: 1:}
559: 1:Scores: 62672
559: 1:Answer: message('StartNextLevel')
------------------------------------------
560: 1:BoardData {
560: 1:  'description': ['No more Levels. You win!'],
560: 1:  'history': [],
560: 1:  'info': [],
560: 1:  'level': 17,
560: 1:  'questions': []
560: 1:}
560: 1:Scores: 62672
560: 1:Answer: message('StartNextLevel')
------------------------------------------
561: 1:BoardData {
561: 1:  'description': ['No more Levels. You win!'],
561: 1:  'history': [],
561: 1:  'info': [],
561: 1:  'level': 17,
561: 1:  'questions': []
561: 1:}
561: 1:Scores: 62672
561: 1:Answer: message('StartNextLevel')
------------------------------------------
562: 1:BoardData {
562: 1:  'description': ['No more Levels. You win!'],
562: 1:  'history': [],
562: 1:  'info': [],
562: 1:  'level': 17,
562: 1:  'questions': []
562: 1:}
562: 1:Scores: 62672
562: 1:Answer: message('StartNextLevel')
------------------------------------------
563: 1:BoardData {
563: 1:  'description': ['No more Levels. You win!'],
563: 1:  'history': [],
563: 1:  'info': [],
563: 1:  'level': 17,
563: 1:  'questions': []
563: 1:}
563: 1:Scores: 62672
563: 1:Answer: message('StartNextLevel')
------------------------------------------
564: 1:BoardData {
564: 1:  'description': ['No more Levels. You win!'],
564: 1:  'history': [],
564: 1:  'info': [],
564: 1:  'level': 17,
564: 1:  'questions': []
564: 1:}
564: 1:Scores: 62672
564: 1:Answer: message('StartNextLevel')
------------------------------------------
565: 1:BoardData {
565: 1:  'description': ['No more Levels. You win!'],
565: 1:  'history': [],
565: 1:  'info': [],
565: 1:  'level': 17,
565: 1:  'questions': []
565: 1:}
565: 1:Scores: 62672
565: 1:Answer: message('StartNextLevel')
------------------------------------------
566: 1:BoardData {
566: 1:  'description': ['No more Levels. You win!'],
566: 1:  'history': [],
566: 1:  'info': [],
566: 1:  'level': 17,
566: 1:  'questions': []
566: 1:}
566: 1:Scores: 62672
566: 1:Answer: message('StartNextLevel')
------------------------------------------
567: 1:BoardData {
567: 1:  'description': ['No more Levels. You win!'],
567: 1:  'history': [],
567: 1:  'info': [],
567: 1:  'level': 17,
567: 1:  'questions': []
567: 1:}
567: 1:Scores: 62672
567: 1:Answer: message('StartNextLevel')
------------------------------------------
568: 1:BoardData {
568: 1:  'description': ['No more Levels. You win!'],
568: 1:  'history': [],
568: 1:  'info': [],
568: 1:  'level': 17,
568: 1:  'questions': []
568: 1:}
568: 1:Scores: 62672
568: 1:Answer: message('StartNextLevel')
------------------------------------------
569: 1:BoardData {
569: 1:  'description': ['No more Levels. You win!'],
569: 1:  'history': [],
569: 1:  'info': [],
569: 1:  'level': 17,
569: 1:  'questions': []
569: 1:}
569: 1:Scores: 62672
569: 1:Answer: message('StartNextLevel')
------------------------------------------
570: 1:BoardData {
570: 1:  'description': ['No more Levels. You win!'],
570: 1:  'history': [],
570: 1:  'info': [],
570: 1:  'level': 17,
570: 1:  'questions': []
570: 1:}
570: 1:Scores: 62672
570: 1:Answer: message('StartNextLevel')
------------------------------------------
571: 1:BoardData {
571: 1:  'description': ['No more Levels. You win!'],
571: 1:  'history': [],
571: 1:  'info': [],
571: 1:  'level': 17,
571: 1:  'questions': []
571: 1:}
571: 1:Scores: 62672
571: 1:Answer: message('StartNextLevel')
------------------------------------------
572: 1:BoardData {
572: 1:  'description': ['No more Levels. You win!'],
572: 1:  'history': [],
572: 1:  'info': [],
572: 1:  'level': 17,
572: 1:  'questions': []
572: 1:}
572: 1:Scores: 62672
572: 1:Answer: message('StartNextLevel')
------------------------------------------
573: 1:BoardData {
573: 1:  'description': ['No more Levels. You win!'],
573: 1:  'history': [],
573: 1:  'info': [],
573: 1:  'level': 17,
573: 1:  'questions': []
573: 1:}
573: 1:Scores: 62672
573: 1:Answer: message('StartNextLevel')
------------------------------------------
574: 1:BoardData {
574: 1:  'description': ['No more Levels. You win!'],
574: 1:  'history': [],
574: 1:  'info': [],
574: 1:  'level': 17,
574: 1:  'questions': []
574: 1:}
574: 1:Scores: 62672
574: 1:Answer: message('StartNextLevel')
------------------------------------------
575: 1:BoardData {
575: 1:  'description': ['No more Levels. You win!'],
575: 1:  'history': [],
575: 1:  'info': [],
575: 1:  'level': 17,
575: 1:  'questions': []
575: 1:}
575: 1:Scores: 62672
575: 1:Answer: message('StartNextLevel')
------------------------------------------
576: 1:BoardData {
576: 1:  'description': ['No more Levels. You win!'],
576: 1:  'history': [],
576: 1:  'info': [],
576: 1:  'level': 17,
576: 1:  'questions': []
576: 1:}
576: 1:Scores: 62672
576: 1:Answer: message('StartNextLevel')
------------------------------------------
577: 1:BoardData {
577: 1:  'description': ['No more Levels. You win!'],
577: 1:  'history': [],
577: 1:  'info': [],
577: 1:  'level': 17,
577: 1:  'questions': []
577: 1:}
577: 1:Scores: 62672
577: 1:Answer: message('StartNextLevel')
------------------------------------------
578: 1:BoardData {
578: 1:  'description': ['No more Levels. You win!'],
578: 1:  'history': [],
578: 1:  'info': [],
578: 1:  'level': 17,
578: 1:  'questions': []
578: 1:}
578: 1:Scores: 62672
578: 1:Answer: message('StartNextLevel')
------------------------------------------
579: 1:BoardData {
579: 1:  'description': ['No more Levels. You win!'],
579: 1:  'history': [],
579: 1:  'info': [],
579: 1:  'level': 17,
579: 1:  'questions': []
579: 1:}
579: 1:Scores: 62672
579: 1:Answer: message('StartNextLevel')
------------------------------------------
580: 1:BoardData {
580: 1:  'description': ['No more Levels. You win!'],
580: 1:  'history': [],
580: 1:  'info': [],
580: 1:  'level': 17,
580: 1:  'questions': []
580: 1:}
580: 1:Scores: 62672
580: 1:Answer: message('StartNextLevel')
------------------------------------------
581: 1:BoardData {
581: 1:  'description': ['No more Levels. You win!'],
581: 1:  'history': [],
581: 1:  'info': [],
581: 1:  'level': 17,
581: 1:  'questions': []
581: 1:}
581: 1:Scores: 62672
581: 1:Answer: message('StartNextLevel')
------------------------------------------
582: 1:BoardData {
582: 1:  'description': ['No more Levels. You win!'],
582: 1:  'history': [],
582: 1:  'info': [],
582: 1:  'level': 17,
582: 1:  'questions': []
582: 1:}
582: 1:Scores: 62672
582: 1:Answer: message('StartNextLevel')
------------------------------------------
583: 1:BoardData {
583: 1:  'description': ['No more Levels. You win!'],
583: 1:  'history': [],
583: 1:  'info': [],
583: 1:  'level': 17,
583: 1:  'questions': []
583: 1:}
583: 1:Scores: 62672
583: 1:Answer: message('StartNextLevel')
------------------------------------------
584: 1:BoardData {
584: 1:  'description': ['No more Levels. You win!'],
584: 1:  'history': [],
584: 1:  'info': [],
584: 1:  'level': 17,
584: 1:  'questions': []
584: 1:}
584: 1:Scores: 62672
584: 1:Answer: message('StartNextLevel')
------------------------------------------
585: 1:BoardData {
585: 1:  'description': ['No more Levels. You win!'],
585: 1:  'history': [],
585: 1:  'info': [],
585: 1:  'level': 17,
585: 1:  'questions': []
585: 1:}
585: 1:Scores: 62672
585: 1:Answer: message('StartNextLevel')
------------------------------------------
586: 1:BoardData {
586: 1:  'description': ['No more Levels. You win!'],
586: 1:  'history': [],
586: 1:  'info': [],
586: 1:  'level': 17,
586: 1:  'questions': []
586: 1:}
586: 1:Scores: 62672
586: 1:Answer: message('StartNextLevel')
------------------------------------------
587: 1:BoardData {
587: 1:  'description': ['No more Levels. You win!'],
587: 1:  'history': [],
587: 1:  'info': [],
587: 1:  'level': 17,
587: 1:  'questions': []
587: 1:}
587: 1:Scores: 62672
587: 1:Answer: message('StartNextLevel')
------------------------------------------
588: 1:BoardData {
588: 1:  'description': ['No more Levels. You win!'],
588: 1:  'history': [],
588: 1:  'info': [],
588: 1:  'level': 17,
588: 1:  'questions': []
588: 1:}
588: 1:Scores: 62672
588: 1:Answer: message('StartNextLevel')
------------------------------------------
589: 1:BoardData {
589: 1:  'description': ['No more Levels. You win!'],
589: 1:  'history': [],
589: 1:  'info': [],
589: 1:  'level': 17,
589: 1:  'questions': []
589: 1:}
589: 1:Scores: 62672
589: 1:Answer: message('StartNextLevel')
------------------------------------------
590: 1:BoardData {
590: 1:  'description': ['No more Levels. You win!'],
590: 1:  'history': [],
590: 1:  'info': [],
590: 1:  'level': 17,
590: 1:  'questions': []
590: 1:}
590: 1:Scores: 62672
590: 1:Answer: message('StartNextLevel')
------------------------------------------
591: 1:BoardData {
591: 1:  'description': ['No more Levels. You win!'],
591: 1:  'history': [],
591: 1:  'info': [],
591: 1:  'level': 17,
591: 1:  'questions': []
591: 1:}
591: 1:Scores: 62672
591: 1:Answer: message('StartNextLevel')
------------------------------------------
592: 1:BoardData {
592: 1:  'description': ['No more Levels. You win!'],
592: 1:  'history': [],
592: 1:  'info': [],
592: 1:  'level': 17,
592: 1:  'questions': []
592: 1:}
592: 1:Scores: 62672
592: 1:Answer: message('StartNextLevel')
------------------------------------------
593: 1:BoardData {
593: 1:  'description': ['No more Levels. You win!'],
593: 1:  'history': [],
593: 1:  'info': [],
593: 1:  'level': 17,
593: 1:  'questions': []
593: 1:}
593: 1:Scores: 62672
593: 1:Answer: message('StartNextLevel')
------------------------------------------
594: 1:BoardData {
594: 1:  'description': ['No more Levels. You win!'],
594: 1:  'history': [],
594: 1:  'info': [],
594: 1:  'level': 17,
594: 1:  'questions': []
594: 1:}
594: 1:Scores: 62672
594: 1:Answer: message('StartNextLevel')
------------------------------------------
595: 1:BoardData {
595: 1:  'description': ['No more Levels. You win!'],
595: 1:  'history': [],
595: 1:  'info': [],
595: 1:  'level': 17,
595: 1:  'questions': []
595: 1:}
595: 1:Scores: 62672
595: 1:Answer: message('StartNextLevel')
------------------------------------------
596: 1:BoardData {
596: 1:  'description': ['No more Levels. You win!'],
596: 1:  'history': [],
596: 1:  'info': [],
596: 1:  'level': 17,
596: 1:  'questions': []
596: 1:}
596: 1:Scores: 62672
596: 1:Answer: message('StartNextLevel')
------------------------------------------
597: 1:BoardData {
597: 1:  'description': ['No more Levels. You win!'],
597: 1:  'history': [],
597: 1:  'info': [],
597: 1:  'level': 17,
597: 1:  'questions': []
597: 1:}
597: 1:Scores: 62672
597: 1:Answer: message('StartNextLevel')
------------------------------------------
598: 1:BoardData {
598: 1:  'description': ['No more Levels. You win!'],
598: 1:  'history': [],
598: 1:  'info': [],
598: 1:  'level': 17,
598: 1:  'questions': []
598: 1:}
598: 1:Scores: 62672
598: 1:Answer: message('StartNextLevel')
------------------------------------------
599: 1:BoardData {
599: 1:  'description': ['No more Levels. You win!'],
599: 1:  'history': [],
599: 1:  'info': [],
599: 1:  'level': 17,
599: 1:  'questions': []
599: 1:}
599: 1:Scores: 62672
599: 1:Answer: message('StartNextLevel')
------------------------------------------
600: 1:BoardData {
600: 1:  'description': ['No more Levels. You win!'],
600: 1:  'history': [],
600: 1:  'info': [],
600: 1:  'level': 17,
600: 1:  'questions': []
600: 1:}
600: 1:Scores: 62672
600: 1:Answer: message('StartNextLevel')
------------------------------------------
601: 1:BoardData {
601: 1:  'description': ['No more Levels. You win!'],
601: 1:  'history': [],
601: 1:  'info': [],
601: 1:  'level': 17,
601: 1:  'questions': []
601: 1:}
601: 1:Scores: 62672
601: 1:Answer: message('StartNextLevel')
------------------------------------------
602: 1:BoardData {
602: 1:  'description': ['No more Levels. You win!'],
602: 1:  'history': [],
602: 1:  'info': [],
602: 1:  'level': 17,
602: 1:  'questions': []
602: 1:}
602: 1:Scores: 62672
602: 1:Answer: message('StartNextLevel')
------------------------------------------
603: 1:BoardData {
603: 1:  'description': ['No more Levels. You win!'],
603: 1:  'history': [],
603: 1:  'info': [],
603: 1:  'level': 17,
603: 1:  'questions': []
603: 1:}
603: 1:Scores: 62672
603: 1:Answer: message('StartNextLevel')
------------------------------------------
604: 1:BoardData {
604: 1:  'description': ['No more Levels. You win!'],
604: 1:  'history': [],
604: 1:  'info': [],
604: 1:  'level': 17,
604: 1:  'questions': []
604: 1:}
604: 1:Scores: 62672
604: 1:Answer: message('StartNextLevel')
------------------------------------------
605: 1:BoardData {
605: 1:  'description': ['No more Levels. You win!'],
605: 1:  'history': [],
605: 1:  'info': [],
605: 1:  'level': 17,
605: 1:  'questions': []
605: 1:}
605: 1:Scores: 62672
605: 1:Answer: message('StartNextLevel')
------------------------------------------
606: 1:BoardData {
606: 1:  'description': ['No more Levels. You win!'],
606: 1:  'history': [],
606: 1:  'info': [],
606: 1:  'level': 17,
606: 1:  'questions': []
606: 1:}
606: 1:Scores: 62672
606: 1:Answer: message('StartNextLevel')
------------------------------------------
607: 1:BoardData {
607: 1:  'description': ['No more Levels. You win!'],
607: 1:  'history': [],
607: 1:  'info': [],
607: 1:  'level': 17,
607: 1:  'questions': []
607: 1:}
607: 1:Scores: 62672
607: 1:Answer: message('StartNextLevel')
------------------------------------------
608: 1:BoardData {
608: 1:  'description': ['No more Levels. You win!'],
608: 1:  'history': [],
608: 1:  'info': [],
608: 1:  'level': 17,
608: 1:  'questions': []
608: 1:}
608: 1:Scores: 62672
608: 1:Answer: message('StartNextLevel')
------------------------------------------
609: 1:BoardData {
609: 1:  'description': ['No more Levels. You win!'],
609: 1:  'history': [],
609: 1:  'info': [],
609: 1:  'level': 17,
609: 1:  'questions': []
609: 1:}
609: 1:Scores: 62672
609: 1:Answer: message('StartNextLevel')
------------------------------------------
610: 1:BoardData {
610: 1:  'description': ['No more Levels. You win!'],
610: 1:  'history': [],
610: 1:  'info': [],
610: 1:  'level': 17,
610: 1:  'questions': []
610: 1:}
610: 1:Scores: 62672
610: 1:Answer: message('StartNextLevel')
------------------------------------------
611: 1:BoardData {
611: 1:  'description': ['No more Levels. You win!'],
611: 1:  'history': [],
611: 1:  'info': [],
611: 1:  'level': 17,
611: 1:  'questions': []
611: 1:}
611: 1:Scores: 62672
611: 1:Answer: message('StartNextLevel')
------------------------------------------
612: 1:BoardData {
612: 1:  'description': ['No more Levels. You win!'],
612: 1:  'history': [],
612: 1:  'info': [],
612: 1:  'level': 17,
612: 1:  'questions': []
612: 1:}
612: 1:Scores: 62672
612: 1:Answer: message('StartNextLevel')
------------------------------------------
613: 1:BoardData {
613: 1:  'description': ['No more Levels. You win!'],
613: 1:  'history': [],
613: 1:  'info': [],
613: 1:  'level': 17,
613: 1:  'questions': []
613: 1:}
613: 1:Scores: 62672
613: 1:Answer: message('StartNextLevel')
------------------------------------------
614: 1:BoardData {
614: 1:  'description': ['No more Levels. You win!'],
614: 1:  'history': [],
614: 1:  'info': [],
614: 1:  'level': 17,
614: 1:  'questions': []
614: 1:}
614: 1:Scores: 62672
614: 1:Answer: message('StartNextLevel')
------------------------------------------
615: 1:BoardData {
615: 1:  'description': ['No more Levels. You win!'],
615: 1:  'history': [],
615: 1:  'info': [],
615: 1:  'level': 17,
615: 1:  'questions': []
615: 1:}
615: 1:Scores: 62672
615: 1:Answer: message('StartNextLevel')
------------------------------------------
616: 1:BoardData {
616: 1:  'description': ['No more Levels. You win!'],
616: 1:  'history': [],
616: 1:  'info': [],
616: 1:  'level': 17,
616: 1:  'questions': []
616: 1:}
616: 1:Scores: 62672
616: 1:Answer: message('StartNextLevel')
------------------------------------------
617: 1:BoardData {
617: 1:  'description': ['No more Levels. You win!'],
617: 1:  'history': [],
617: 1:  'info': [],
617: 1:  'level': 17,
617: 1:  'questions': []
617: 1:}
617: 1:Scores: 62672
617: 1:Answer: message('StartNextLevel')
------------------------------------------
618: 1:BoardData {
618: 1:  'description': ['No more Levels. You win!'],
618: 1:  'history': [],
618: 1:  'info': [],
618: 1:  'level': 17,
618: 1:  'questions': []
618: 1:}
618: 1:Scores: 62672
618: 1:Answer: message('StartNextLevel')
------------------------------------------
619: 1:BoardData {
619: 1:  'description': ['No more Levels. You win!'],
619: 1:  'history': [],
619: 1:  'info': [],
619: 1:  'level': 17,
619: 1:  'questions': []
619: 1:}
619: 1:Scores: 62672
619: 1:Answer: message('StartNextLevel')
------------------------------------------
620: 1:BoardData {
620: 1:  'description': ['No more Levels. You win!'],
620: 1:  'history': [],
620: 1:  'info': [],
620: 1:  'level': 17,
620: 1:  'questions': []
620: 1:}
620: 1:Scores: 62672
620: 1:Answer: message('StartNextLevel')
------------------------------------------
621: 1:BoardData {
621: 1:  'description': ['No more Levels. You win!'],
621: 1:  'history': [],
621: 1:  'info': [],
621: 1:  'level': 17,
621: 1:  'questions': []
621: 1:}
621: 1:Scores: 62672
621: 1:Answer: message('StartNextLevel')
------------------------------------------
622: 1:BoardData {
622: 1:  'description': ['No more Levels. You win!'],
622: 1:  'history': [],
622: 1:  'info': [],
622: 1:  'level': 17,
622: 1:  'questions': []
622: 1:}
622: 1:Scores: 62672
622: 1:Answer: message('StartNextLevel')
------------------------------------------
623: 1:BoardData {
623: 1:  'description': ['No more Levels. You win!'],
623: 1:  'history': [],
623: 1:  'info': [],
623: 1:  'level': 17,
623: 1:  'questions': []
623: 1:}
623: 1:Scores: 62672
623: 1:Answer: message('StartNextLevel')
------------------------------------------
624: 1:BoardData {
624: 1:  'description': ['No more Levels. You win!'],
624: 1:  'history': [],
624: 1:  'info': [],
624: 1:  'level': 17,
624: 1:  'questions': []
624: 1:}
624: 1:Scores: 62672
624: 1:Answer: message('StartNextLevel')
------------------------------------------
625: 1:BoardData {
625: 1:  'description': ['No more Levels. You win!'],
625: 1:  'history': [],
625: 1:  'info': [],
625: 1:  'level': 17,
625: 1:  'questions': []
625: 1:}
625: 1:Scores: 62672
625: 1:Answer: message('StartNextLevel')
------------------------------------------
626: 1:BoardData {
626: 1:  'description': ['No more Levels. You win!'],
626: 1:  'history': [],
626: 1:  'info': [],
626: 1:  'level': 17,
626: 1:  'questions': []
626: 1:}
626: 1:Scores: 62672
626: 1:Answer: message('StartNextLevel')
------------------------------------------
627: 1:BoardData {
627: 1:  'description': ['No more Levels. You win!'],
627: 1:  'history': [],
627: 1:  'info': [],
627: 1:  'level': 17,
627: 1:  'questions': []
627: 1:}
627: 1:Scores: 62672
627: 1:Answer: message('StartNextLevel')
------------------------------------------
628: 1:BoardData {
628: 1:  'description': ['No more Levels. You win!'],
628: 1:  'history': [],
628: 1:  'info': [],
628: 1:  'level': 17,
628: 1:  'questions': []
628: 1:}
628: 1:Scores: 62672
628: 1:Answer: message('StartNextLevel')
------------------------------------------
629: 1:BoardData {
629: 1:  'description': ['No more Levels. You win!'],
629: 1:  'history': [],
629: 1:  'info': [],
629: 1:  'level': 17,
629: 1:  'questions': []
629: 1:}
629: 1:Scores: 62672
629: 1:Answer: message('StartNextLevel')
------------------------------------------
630: 1:BoardData {
630: 1:  'description': ['No more Levels. You win!'],
630: 1:  'history': [],
630: 1:  'info': [],
630: 1:  'level': 17,
630: 1:  'questions': []
630: 1:}
630: 1:Scores: 62672
630: 1:Answer: message('StartNextLevel')
------------------------------------------
631: 1:BoardData {
631: 1:  'description': ['No more Levels. You win!'],
631: 1:  'history': [],
631: 1:  'info': [],
631: 1:  'level': 17,
631: 1:  'questions': []
631: 1:}
631: 1:Scores: 62672
631: 1:Answer: message('StartNextLevel')
------------------------------------------
632: 1:BoardData {
632: 1:  'description': ['No more Levels. You win!'],
632: 1:  'history': [],
632: 1:  'info': [],
632: 1:  'level': 17,
632: 1:  'questions': []
632: 1:}
632: 1:Scores: 62672
632: 1:Answer: message('StartNextLevel')
------------------------------------------
633: 1:BoardData {
633: 1:  'description': ['No more Levels. You win!'],
633: 1:  'history': [],
633: 1:  'info': [],
633: 1:  'level': 17,
633: 1:  'questions': []
633: 1:}
633: 1:Scores: 62672
633: 1:Answer: message('StartNextLevel')
------------------------------------------
634: 1:BoardData {
634: 1:  'description': ['No more Levels. You win!'],
634: 1:  'history': [],
634: 1:  'info': [],
634: 1:  'level': 17,
634: 1:  'questions': []
634: 1:}
634: 1:Scores: 62672
634: 1:Answer: message('StartNextLevel')
------------------------------------------
635: 1:BoardData {
635: 1:  'description': ['No more Levels. You win!'],
635: 1:  'history': [],
635: 1:  'info': [],
635: 1:  'level': 17,
635: 1:  'questions': []
635: 1:}
635: 1:Scores: 62672
635: 1:Answer: message('StartNextLevel')
------------------------------------------
636: 1:BoardData {
636: 1:  'description': ['No more Levels. You win!'],
636: 1:  'history': [],
636: 1:  'info': [],
636: 1:  'level': 17,
636: 1:  'questions': []
636: 1:}
636: 1:Scores: 62672
636: 1:Answer: message('StartNextLevel')
------------------------------------------
637: 1:BoardData {
637: 1:  'description': ['No more Levels. You win!'],
637: 1:  'history': [],
637: 1:  'info': [],
637: 1:  'level': 17,
637: 1:  'questions': []
637: 1:}
637: 1:Scores: 62672
637: 1:Answer: message('StartNextLevel')
------------------------------------------
638: 1:BoardData {
638: 1:  'description': ['No more Levels. You win!'],
638: 1:  'history': [],
638: 1:  'info': [],
638: 1:  'level': 17,
638: 1:  'questions': []
638: 1:}
638: 1:Scores: 62672
638: 1:Answer: message('StartNextLevel')
------------------------------------------
639: 1:BoardData {
639: 1:  'description': ['No more Levels. You win!'],
639: 1:  'history': [],
639: 1:  'info': [],
639: 1:  'level': 17,
639: 1:  'questions': []
639: 1:}
639: 1:Scores: 62672
639: 1:Answer: message('StartNextLevel')
------------------------------------------
640: 1:BoardData {
640: 1:  'description': ['No more Levels. You win!'],
640: 1:  'history': [],
640: 1:  'info': [],
640: 1:  'level': 17,
640: 1:  'questions': []
640: 1:}
640: 1:Scores: 62672
640: 1:Answer: message('StartNextLevel')
------------------------------------------
641: 1:BoardData {
641: 1:  'description': ['No more Levels. You win!'],
641: 1:  'history': [],
641: 1:  'info': [],
641: 1:  'level': 17,
641: 1:  'questions': []
641: 1:}
641: 1:Scores: 62672
641: 1:Answer: message('StartNextLevel')
------------------------------------------
642: 1:BoardData {
642: 1:  'description': ['No more Levels. You win!'],
642: 1:  'history': [],
642: 1:  'info': [],
642: 1:  'level': 17,
642: 1:  'questions': []
642: 1:}
642: 1:Scores: 62672
642: 1:Answer: message('StartNextLevel')
------------------------------------------
643: 1:BoardData {
643: 1:  'description': ['No more Levels. You win!'],
643: 1:  'history': [],
643: 1:  'info': [],
643: 1:  'level': 17,
643: 1:  'questions': []
643: 1:}
643: 1:Scores: 62672
643: 1:Answer: message('StartNextLevel')
------------------------------------------
644: 1:BoardData {
644: 1:  'description': ['No more Levels. You win!'],
644: 1:  'history': [],
644: 1:  'info': [],
644: 1:  'level': 17,
644: 1:  'questions': []
644: 1:}
644: 1:Scores: 62672
644: 1:Answer: message('StartNextLevel')
------------------------------------------
645: 1:BoardData {
645: 1:  'description': ['No more Levels. You win!'],
645: 1:  'history': [],
645: 1:  'info': [],
645: 1:  'level': 17,
645: 1:  'questions': []
645: 1:}
645: 1:Scores: 62672
645: 1:Answer: message('StartNextLevel')
------------------------------------------
646: 1:BoardData {
646: 1:  'description': ['No more Levels. You win!'],
646: 1:  'history': [],
646: 1:  'info': [],
646: 1:  'level': 17,
646: 1:  'questions': []
646: 1:}
646: 1:Scores: 62672
646: 1:Answer: message('StartNextLevel')
------------------------------------------
647: 1:BoardData {
647: 1:  'description': ['No more Levels. You win!'],
647: 1:  'history': [],
647: 1:  'info': [],
647: 1:  'level': 17,
647: 1:  'questions': []
647: 1:}
647: 1:Scores: 62672
647: 1:Answer: message('StartNextLevel')
------------------------------------------
648: 1:BoardData {
648: 1:  'description': ['No more Levels. You win!'],
648: 1:  'history': [],
648: 1:  'info': [],
648: 1:  'level': 17,
648: 1:  'questions': []
648: 1:}
648: 1:Scores: 62672
648: 1:Answer: message('StartNextLevel')
------------------------------------------
649: 1:BoardData {
649: 1:  'description': ['No more Levels. You win!'],
649: 1:  'history': [],
649: 1:  'info': [],
649: 1:  'level': 17,
649: 1:  'questions': []
649: 1:}
649: 1:Scores: 62672
649: 1:Answer: message('StartNextLevel')
------------------------------------------
650: 1:BoardData {
650: 1:  'description': ['No more Levels. You win!'],
650: 1:  'history': [],
650: 1:  'info': [],
650: 1:  'level': 17,
650: 1:  'questions': []
650: 1:}
650: 1:Scores: 62672
650: 1:Answer: message('StartNextLevel')
------------------------------------------
651: 1:BoardData {
651: 1:  'description': ['No more Levels. You win!'],
651: 1:  'history': [],
651: 1:  'info': [],
651: 1:  'level': 17,
651: 1:  'questions': []
651: 1:}
651: 1:Scores: 62672
651: 1:Answer: message('StartNextLevel')
------------------------------------------
652: 1:BoardData {
652: 1:  'description': ['No more Levels. You win!'],
652: 1:  'history': [],
652: 1:  'info': [],
652: 1:  'level': 17,
652: 1:  'questions': []
652: 1:}
652: 1:Scores: 62672
652: 1:Answer: message('StartNextLevel')
------------------------------------------
653: 1:BoardData {
653: 1:  'description': ['No more Levels. You win!'],
653: 1:  'history': [],
653: 1:  'info': [],
653: 1:  'level': 17,
653: 1:  'questions': []
653: 1:}
653: 1:Scores: 62672
653: 1:Answer: message('StartNextLevel')
------------------------------------------
654: 1:BoardData {
654: 1:  'description': ['No more Levels. You win!'],
654: 1:  'history': [],
654: 1:  'info': [],
654: 1:  'level': 17,
654: 1:  'questions': []
654: 1:}
654: 1:Scores: 62672
654: 1:Answer: message('StartNextLevel')
------------------------------------------
655: 1:BoardData {
655: 1:  'description': ['No more Levels. You win!'],
655: 1:  'history': [],
655: 1:  'info': [],
655: 1:  'level': 17,
655: 1:  'questions': []
655: 1:}
655: 1:Scores: 62672
655: 1:Answer: message('StartNextLevel')
------------------------------------------
656: 1:BoardData {
656: 1:  'description': ['No more Levels. You win!'],
656: 1:  'history': [],
656: 1:  'info': [],
656: 1:  'level': 17,
656: 1:  'questions': []
656: 1:}
656: 1:Scores: 62672
656: 1:Answer: message('StartNextLevel')
------------------------------------------
657: 1:BoardData {
657: 1:  'description': ['No more Levels. You win!'],
657: 1:  'history': [],
657: 1:  'info': [],
657: 1:  'level': 17,
657: 1:  'questions': []
657: 1:}
657: 1:Scores: 62672
657: 1:Answer: message('StartNextLevel')
------------------------------------------
658: 1:BoardData {
658: 1:  'description': ['No more Levels. You win!'],
658: 1:  'history': [],
658: 1:  'info': [],
658: 1:  'level': 17,
658: 1:  'questions': []
658: 1:}
658: 1:Scores: 62672
658: 1:Answer: message('StartNextLevel')
------------------------------------------
659: 1:BoardData {
659: 1:  'description': ['No more Levels. You win!'],
659: 1:  'history': [],
659: 1:  'info': [],
659: 1:  'level': 17,
659: 1:  'questions': []
659: 1:}
659: 1:Scores: 62672
659: 1:Answer: message('StartNextLevel')
------------------------------------------
660: 1:BoardData {
660: 1:  'description': ['No more Levels. You win!'],
660: 1:  'history': [],
660: 1:  'info': [],
660: 1:  'level': 17,
660: 1:  'questions': []
660: 1:}
660: 1:Scores: 62672
660: 1:Answer: message('StartNextLevel')
------------------------------------------
661: 1:BoardData {
661: 1:  'description': ['No more Levels. You win!'],
661: 1:  'history': [],
661: 1:  'info': [],
661: 1:  'level': 17,
661: 1:  'questions': []
661: 1:}
661: 1:Scores: 62672
661: 1:Answer: message('StartNextLevel')
------------------------------------------
662: 1:BoardData {
662: 1:  'description': ['No more Levels. You win!'],
662: 1:  'history': [],
662: 1:  'info': [],
662: 1:  'level': 17,
662: 1:  'questions': []
662: 1:}
662: 1:Scores: 62672
662: 1:Answer: message('StartNextLevel')
------------------------------------------
663: 1:BoardData {
663: 1:  'description': ['No more Levels. You win!'],
663: 1:  'history': [],
663: 1:  'info': [],
663: 1:  'level': 17,
663: 1:  'questions': []
663: 1:}
663: 1:Scores: 62672
663: 1:Answer: message('StartNextLevel')
------------------------------------------
664: 1:BoardData {
664: 1:  'description': ['No more Levels. You win!'],
664: 1:  'history': [],
664: 1:  'info': [],
664: 1:  'level': 17,
664: 1:  'questions': []
664: 1:}
664: 1:Scores: 62672
664: 1:Answer: message('StartNextLevel')
------------------------------------------
665: 1:BoardData {
665: 1:  'description': ['No more Levels. You win!'],
665: 1:  'history': [],
665: 1:  'info': [],
665: 1:  'level': 17,
665: 1:  'questions': []
665: 1:}
665: 1:Scores: 62672
665: 1:Answer: message('StartNextLevel')
------------------------------------------
666: 1:BoardData {
666: 1:  'description': ['No more Levels. You win!'],
666: 1:  'history': [],
666: 1:  'info': [],
666: 1:  'level': 17,
666: 1:  'questions': []
666: 1:}
666: 1:Scores: 62672
666: 1:Answer: message('StartNextLevel')
------------------------------------------
667: 1:BoardData {
667: 1:  'description': ['No more Levels. You win!'],
667: 1:  'history': [],
667: 1:  'info': [],
667: 1:  'level': 17,
667: 1:  'questions': []
667: 1:}
667: 1:Scores: 62672
667: 1:Answer: message('StartNextLevel')
------------------------------------------
668: 1:BoardData {
668: 1:  'description': ['No more Levels. You win!'],
668: 1:  'history': [],
668: 1:  'info': [],
668: 1:  'level': 17,
668: 1:  'questions': []
668: 1:}
668: 1:Scores: 62672
668: 1:Answer: message('StartNextLevel')
------------------------------------------
669: 1:BoardData {
669: 1:  'description': ['No more Levels. You win!'],
669: 1:  'history': [],
669: 1:  'info': [],
669: 1:  'level': 17,
669: 1:  'questions': []
669: 1:}
669: 1:Scores: 62672
669: 1:Answer: message('StartNextLevel')
------------------------------------------
670: 1:BoardData {
670: 1:  'description': ['No more Levels. You win!'],
670: 1:  'history': [],
670: 1:  'info': [],
670: 1:  'level': 17,
670: 1:  'questions': []
670: 1:}
670: 1:Scores: 62672
670: 1:Answer: message('StartNextLevel')
------------------------------------------
671: 1:BoardData {
671: 1:  'description': ['No more Levels. You win!'],
671: 1:  'history': [],
671: 1:  'info': [],
671: 1:  'level': 17,
671: 1:  'questions': []
671: 1:}
671: 1:Scores: 62672
671: 1:Answer: message('StartNextLevel')
------------------------------------------
672: 1:BoardData {
672: 1:  'description': ['No more Levels. You win!'],
672: 1:  'history': [],
672: 1:  'info': [],
672: 1:  'level': 17,
672: 1:  'questions': []
672: 1:}
672: 1:Scores: 62672
672: 1:Answer: message('StartNextLevel')
------------------------------------------
673: 1:BoardData {
673: 1:  'description': ['No more Levels. You win!'],
673: 1:  'history': [],
673: 1:  'info': [],
673: 1:  'level': 17,
673: 1:  'questions': []
673: 1:}
673: 1:Scores: 62672
673: 1:Answer: message('StartNextLevel')
------------------------------------------
674: 1:BoardData {
674: 1:  'description': ['No more Levels. You win!'],
674: 1:  'history': [],
674: 1:  'info': [],
674: 1:  'level': 17,
674: 1:  'questions': []
674: 1:}
674: 1:Scores: 62672
674: 1:Answer: message('StartNextLevel')
------------------------------------------
675: 1:BoardData {
675: 1:  'description': ['No more Levels. You win!'],
675: 1:  'history': [],
675: 1:  'info': [],
675: 1:  'level': 17,
675: 1:  'questions': []
675: 1:}
675: 1:Scores: 62672
675: 1:Answer: message('StartNextLevel')
------------------------------------------
676: 1:BoardData {
676: 1:  'description': ['No more Levels. You win!'],
676: 1:  'history': [],
676: 1:  'info': [],
676: 1:  'level': 17,
676: 1:  'questions': []
676: 1:}
676: 1:Scores: 62672
676: 1:Answer: message('StartNextLevel')
------------------------------------------
677: 1:BoardData {
677: 1:  'description': ['No more Levels. You win!'],
677: 1:  'history': [],
677: 1:  'info': [],
677: 1:  'level': 17,
677: 1:  'questions': []
677: 1:}
677: 1:Scores: 62672
677: 1:Answer: message('StartNextLevel')
------------------------------------------
678: 1:BoardData {
678: 1:  'description': ['No more Levels. You win!'],
678: 1:  'history': [],
678: 1:  'info': [],
678: 1:  'level': 17,
678: 1:  'questions': []
678: 1:}
678: 1:Scores: 62672
678: 1:Answer: message('StartNextLevel')
------------------------------------------
679: 1:BoardData {
679: 1:  'description': ['No more Levels. You win!'],
679: 1:  'history': [],
679: 1:  'info': [],
679: 1:  'level': 17,
679: 1:  'questions': []
679: 1:}
679: 1:Scores: 62672
679: 1:Answer: message('StartNextLevel')
------------------------------------------
680: 1:BoardData {
680: 1:  'description': ['No more Levels. You win!'],
680: 1:  'history': [],
680: 1:  'info': [],
680: 1:  'level': 17,
680: 1:  'questions': []
680: 1:}
680: 1:Scores: 62672
680: 1:Answer: message('StartNextLevel')
------------------------------------------
681: 1:BoardData {
681: 1:  'description': ['No more Levels. You win!'],
681: 1:  'history': [],
681: 1:  'info': [],
681: 1:  'level': 17,
681: 1:  'questions': []
681: 1:}
681: 1:Scores: 62672
681: 1:Answer: message('StartNextLevel')
------------------------------------------
682: 1:BoardData {
682: 1:  'description': ['No more Levels. You win!'],
682: 1:  'history': [],
682: 1:  'info': [],
682: 1:  'level': 17,
682: 1:  'questions': []
682: 1:}
682: 1:Scores: 62672
682: 1:Answer: message('StartNextLevel')
------------------------------------------
683: 1:BoardData {
683: 1:  'description': ['No more Levels. You win!'],
683: 1:  'history': [],
683: 1:  'info': [],
683: 1:  'level': 17,
683: 1:  'questions': []
683: 1:}
683: 1:Scores: 62672
683: 1:Answer: message('StartNextLevel')
------------------------------------------
684: 1:BoardData {
684: 1:  'description': ['No more Levels. You win!'],
684: 1:  'history': [],
684: 1:  'info': [],
684: 1:  'level': 17,
684: 1:  'questions': []
684: 1:}
684: 1:Scores: 62672
684: 1:Answer: message('StartNextLevel')
------------------------------------------
685: 1:BoardData {
685: 1:  'description': ['No more Levels. You win!'],
685: 1:  'history': [],
685: 1:  'info': [],
685: 1:  'level': 17,
685: 1:  'questions': []
685: 1:}
685: 1:Scores: 62672
685: 1:Answer: message('StartNextLevel')
------------------------------------------
686: 1:BoardData {
686: 1:  'description': ['No more Levels. You win!'],
686: 1:  'history': [],
686: 1:  'info': [],
686: 1:  'level': 17,
686: 1:  'questions': []
686: 1:}
686: 1:Scores: 62672
686: 1:Answer: message('StartNextLevel')
------------------------------------------
687: 1:BoardData {
687: 1:  'description': ['No more Levels. You win!'],
687: 1:  'history': [],
687: 1:  'info': [],
687: 1:  'level': 17,
687: 1:  'questions': []
687: 1:}
687: 1:Scores: 62672
687: 1:Answer: message('StartNextLevel')
------------------------------------------
688: 1:BoardData {
688: 1:  'description': ['No more Levels. You win!'],
688: 1:  'history': [],
688: 1:  'info': [],
688: 1:  'level': 17,
688: 1:  'questions': []
688: 1:}
688: 1:Scores: 62672
688: 1:Answer: message('StartNextLevel')
------------------------------------------
689: 1:BoardData {
689: 1:  'description': ['No more Levels. You win!'],
689: 1:  'history': [],
689: 1:  'info': [],
689: 1:  'level': 17,
689: 1:  'questions': []
689: 1:}
689: 1:Scores: 62672
689: 1:Answer: message('StartNextLevel')
------------------------------------------
690: 1:BoardData {
690: 1:  'description': ['No more Levels. You win!'],
690: 1:  'history': [],
690: 1:  'info': [],
690: 1:  'level': 17,
690: 1:  'questions': []
690: 1:}
690: 1:Scores: 62672
690: 1:Answer: message('StartNextLevel')
------------------------------------------
691: 1:BoardData {
691: 1:  'description': ['No more Levels. You win!'],
691: 1:  'history': [],
691: 1:  'info': [],
691: 1:  'level': 17,
691: 1:  'questions': []
691: 1:}
691: 1:Scores: 62672
691: 1:Answer: message('StartNextLevel')
------------------------------------------
692: 1:BoardData {
692: 1:  'description': ['No more Levels. You win!'],
692: 1:  'history': [],
692: 1:  'info': [],
692: 1:  'level': 17,
692: 1:  'questions': []
692: 1:}
692: 1:Scores: 62672
692: 1:Answer: message('StartNextLevel')
------------------------------------------
693: 1:BoardData {
693: 1:  'description': ['No more Levels. You win!'],
693: 1:  'history': [],
693: 1:  'info': [],
693: 1:  'level': 17,
693: 1:  'questions': []
693: 1:}
693: 1:Scores: 62672
693: 1:Answer: message('StartNextLevel')
------------------------------------------
694: 1:BoardData {
694: 1:  'description': ['No more Levels. You win!'],
694: 1:  'history': [],
694: 1:  'info': [],
694: 1:  'level': 17,
694: 1:  'questions': []
694: 1:}
694: 1:Scores: 62672
694: 1:Answer: message('StartNextLevel')
------------------------------------------
695: 1:BoardData {
695: 1:  'description': ['No more Levels. You win!'],
695: 1:  'history': [],
695: 1:  'info': [],
695: 1:  'level': 17,
695: 1:  'questions': []
695: 1:}
695: 1:Scores: 62672
695: 1:Answer: message('StartNextLevel')
------------------------------------------
696: 1:BoardData {
696: 1:  'description': ['No more Levels. You win!'],
696: 1:  'history': [],
696: 1:  'info': [],
696: 1:  'level': 17,
696: 1:  'questions': []
696: 1:}
696: 1:Scores: 62672
696: 1:Answer: message('StartNextLevel')
------------------------------------------
697: 1:BoardData {
697: 1:  'description': ['No more Levels. You win!'],
697: 1:  'history': [],
697: 1:  'info': [],
697: 1:  'level': 17,
697: 1:  'questions': []
697: 1:}
697: 1:Scores: 62672
697: 1:Answer: message('StartNextLevel')
------------------------------------------
698: 1:BoardData {
698: 1:  'description': ['No more Levels. You win!'],
698: 1:  'history': [],
698: 1:  'info': [],
698: 1:  'level': 17,
698: 1:  'questions': []
698: 1:}
698: 1:Scores: 62672
698: 1:Answer: message('StartNextLevel')
------------------------------------------
699: 1:BoardData {
699: 1:  'description': ['No more Levels. You win!'],
699: 1:  'history': [],
699: 1:  'info': [],
699: 1:  'level': 17,
699: 1:  'questions': []
699: 1:}
699: 1:Scores: 62672
699: 1:Answer: message('StartNextLevel')
------------------------------------------
700: 1:BoardData {
700: 1:  'description': ['No more Levels. You win!'],
700: 1:  'history': [],
700: 1:  'info': [],
700: 1:  'level': 17,
700: 1:  'questions': []
700: 1:}
700: 1:Scores: 62672
700: 1:Answer: message('StartNextLevel')
------------------------------------------
701: 1:BoardData {
701: 1:  'description': ['No more Levels. You win!'],
701: 1:  'history': [],
701: 1:  'info': [],
701: 1:  'level': 17,
701: 1:  'questions': []
701: 1:}
701: 1:Scores: 62672
701: 1:Answer: message('StartNextLevel')
------------------------------------------
702: 1:BoardData {
702: 1:  'description': ['No more Levels. You win!'],
702: 1:  'history': [],
702: 1:  'info': [],
702: 1:  'level': 17,
702: 1:  'questions': []
702: 1:}
702: 1:Scores: 62672
702: 1:Answer: message('StartNextLevel')
------------------------------------------
703: 1:BoardData {
703: 1:  'description': ['No more Levels. You win!'],
703: 1:  'history': [],
703: 1:  'info': [],
703: 1:  'level': 17,
703: 1:  'questions': []
703: 1:}
703: 1:Scores: 62672
703: 1:Answer: message('StartNextLevel')
------------------------------------------
704: 1:BoardData {
704: 1:  'description': ['No more Levels. You win!'],
704: 1:  'history': [],
704: 1:  'info': [],
704: 1:  'level': 17,
704: 1:  'questions': []
704: 1:}
704: 1:Scores: 62672
704: 1:Answer: message('StartNextLevel')
------------------------------------------
705: 1:BoardData {
705: 1:  'description': ['No more Levels. You win!'],
705: 1:  'history': [],
705: 1:  'info': [],
705: 1:  'level': 17,
705: 1:  'questions': []
705: 1:}
705: 1:Scores: 62672
705: 1:Answer: message('StartNextLevel')
------------------------------------------
706: 1:BoardData {
706: 1:  'description': ['No more Levels. You win!'],
706: 1:  'history': [],
706: 1:  'info': [],
706: 1:  'level': 17,
706: 1:  'questions': []
706: 1:}
706: 1:Scores: 62672
706: 1:Answer: message('StartNextLevel')
------------------------------------------
707: 1:BoardData {
707: 1:  'description': ['No more Levels. You win!'],
707: 1:  'history': [],
707: 1:  'info': [],
707: 1:  'level': 17,
707: 1:  'questions': []
707: 1:}
707: 1:Scores: 62672
707: 1:Answer: message('StartNextLevel')
------------------------------------------
708: 1:BoardData {
708: 1:  'description': ['No more Levels. You win!'],
708: 1:  'history': [],
708: 1:  'info': [],
708: 1:  'level': 17,
708: 1:  'questions': []
708: 1:}
708: 1:Scores: 62672
708: 1:Answer: message('StartNextLevel')
------------------------------------------
709: 1:BoardData {
709: 1:  'description': ['No more Levels. You win!'],
709: 1:  'history': [],
709: 1:  'info': [],
709: 1:  'level': 17,
709: 1:  'questions': []
709: 1:}
709: 1:Scores: 62672
709: 1:Answer: message('StartNextLevel')
------------------------------------------
710: 1:BoardData {
710: 1:  'description': ['No more Levels. You win!'],
710: 1:  'history': [],
710: 1:  'info': [],
710: 1:  'level': 17,
710: 1:  'questions': []
710: 1:}
710: 1:Scores: 62672
710: 1:Answer: message('StartNextLevel')
------------------------------------------
711: 1:BoardData {
711: 1:  'description': ['No more Levels. You win!'],
711: 1:  'history': [],
711: 1:  'info': [],
711: 1:  'level': 17,
711: 1:  'questions': []
711: 1:}
711: 1:Scores: 62672
711: 1:Answer: message('StartNextLevel')
------------------------------------------
712: 1:BoardData {
712: 1:  'description': ['No more Levels. You win!'],
712: 1:  'history': [],
712: 1:  'info': [],
712: 1:  'level': 17,
712: 1:  'questions': []
712: 1:}
712: 1:Scores: 62672
712: 1:Answer: message('StartNextLevel')
------------------------------------------
713: 1:BoardData {
713: 1:  'description': ['No more Levels. You win!'],
713: 1:  'history': [],
713: 1:  'info': [],
713: 1:  'level': 17,
713: 1:  'questions': []
713: 1:}
713: 1:Scores: 62672
713: 1:Answer: message('StartNextLevel')
------------------------------------------
714: 1:BoardData {
714: 1:  'description': ['No more Levels. You win!'],
714: 1:  'history': [],
714: 1:  'info': [],
714: 1:  'level': 17,
714: 1:  'questions': []
714: 1:}
714: 1:Scores: 62672
714: 1:Answer: message('StartNextLevel')
------------------------------------------
715: 1:BoardData {
715: 1:  'description': ['No more Levels. You win!'],
715: 1:  'history': [],
715: 1:  'info': [],
715: 1:  'level': 17,
715: 1:  'questions': []
715: 1:}
715: 1:Scores: 62672
715: 1:Answer: message('StartNextLevel')
------------------------------------------
716: 1:BoardData {
716: 1:  'description': ['No more Levels. You win!'],
716: 1:  'history': [],
716: 1:  'info': [],
716: 1:  'level': 17,
716: 1:  'questions': []
716: 1:}
716: 1:Scores: 62672
716: 1:Answer: message('StartNextLevel')
------------------------------------------
717: 1:BoardData {
717: 1:  'description': ['No more Levels. You win!'],
717: 1:  'history': [],
717: 1:  'info': [],
717: 1:  'level': 17,
717: 1:  'questions': []
717: 1:}
717: 1:Scores: 62672
717: 1:Answer: message('StartNextLevel')
------------------------------------------
718: 1:BoardData {
718: 1:  'description': ['No more Levels. You win!'],
718: 1:  'history': [],
718: 1:  'info': [],
718: 1:  'level': 17,
718: 1:  'questions': []
718: 1:}
718: 1:Scores: 62672
718: 1:Answer: message('StartNextLevel')
------------------------------------------
719: 1:BoardData {
719: 1:  'description': ['No more Levels. You win!'],
719: 1:  'history': [],
719: 1:  'info': [],
719: 1:  'level': 17,
719: 1:  'questions': []
719: 1:}
719: 1:Scores: 62672
719: 1:Answer: message('StartNextLevel')
------------------------------------------
720: 1:BoardData {
720: 1:  'description': ['No more Levels. You win!'],
720: 1:  'history': [],
720: 1:  'info': [],
720: 1:  'level': 17,
720: 1:  'questions': []
720: 1:}
720: 1:Scores: 62672
720: 1:Answer: message('StartNextLevel')
------------------------------------------
721: 1:BoardData {
721: 1:  'description': ['No more Levels. You win!'],
721: 1:  'history': [],
721: 1:  'info': [],
721: 1:  'level': 17,
721: 1:  'questions': []
721: 1:}
721: 1:Scores: 62672
721: 1:Answer: message('StartNextLevel')
------------------------------------------
722: 1:BoardData {
722: 1:  'description': ['No more Levels. You win!'],
722: 1:  'history': [],
722: 1:  'info': [],
722: 1:  'level': 17,
722: 1:  'questions': []
722: 1:}
722: 1:Scores: 62672
722: 1:Answer: message('StartNextLevel')
------------------------------------------
723: 1:BoardData {
723: 1:  'description': ['No more Levels. You win!'],
723: 1:  'history': [],
723: 1:  'info': [],
723: 1:  'level': 17,
723: 1:  'questions': []
723: 1:}
723: 1:Scores: 62672
723: 1:Answer: message('StartNextLevel')
------------------------------------------
724: 1:BoardData {
724: 1:  'description': ['No more Levels. You win!'],
724: 1:  'history': [],
724: 1:  'info': [],
724: 1:  'level': 17,
724: 1:  'questions': []
724: 1:}
724: 1:Scores: 62672
724: 1:Answer: message('StartNextLevel')
------------------------------------------
725: 1:BoardData {
725: 1:  'description': ['No more Levels. You win!'],
725: 1:  'history': [],
725: 1:  'info': [],
725: 1:  'level': 17,
725: 1:  'questions': []
725: 1:}
725: 1:Scores: 62672
725: 1:Answer: message('StartNextLevel')
------------------------------------------
726: 1:BoardData {
726: 1:  'description': ['No more Levels. You win!'],
726: 1:  'history': [],
726: 1:  'info': [],
726: 1:  'level': 17,
726: 1:  'questions': []
726: 1:}
726: 1:Scores: 62672
726: 1:Answer: message('StartNextLevel')
------------------------------------------
727: 1:BoardData {
727: 1:  'description': ['No more Levels. You win!'],
727: 1:  'history': [],
727: 1:  'info': [],
727: 1:  'level': 17,
727: 1:  'questions': []
727: 1:}
727: 1:Scores: 62672
727: 1:Answer: message('StartNextLevel')
------------------------------------------
728: 1:BoardData {
728: 1:  'description': ['No more Levels. You win!'],
728: 1:  'history': [],
728: 1:  'info': [],
728: 1:  'level': 17,
728: 1:  'questions': []
728: 1:}
728: 1:Scores: 62672
728: 1:Answer: message('StartNextLevel')
------------------------------------------
729: 1:BoardData {
729: 1:  'description': ['No more Levels. You win!'],
729: 1:  'history': [],
729: 1:  'info': [],
729: 1:  'level': 17,
729: 1:  'questions': []
729: 1:}
729: 1:Scores: 62672
729: 1:Answer: message('StartNextLevel')
------------------------------------------
730: 1:BoardData {
730: 1:  'description': ['No more Levels. You win!'],
730: 1:  'history': [],
730: 1:  'info': [],
730: 1:  'level': 17,
730: 1:  'questions': []
730: 1:}
730: 1:Scores: 62672
730: 1:Answer: message('StartNextLevel')
------------------------------------------
731: 1:BoardData {
731: 1:  'description': ['No more Levels. You win!'],
731: 1:  'history': [],
731: 1:  'info': [],
731: 1:  'level': 17,
731: 1:  'questions': []
731: 1:}
731: 1:Scores: 62672
731: 1:Answer: message('StartNextLevel')
------------------------------------------
732: 1:BoardData {
732: 1:  'description': ['No more Levels. You win!'],
732: 1:  'history': [],
732: 1:  'info': [],
732: 1:  'level': 17,
732: 1:  'questions': []
732: 1:}
732: 1:Scores: 62672
732: 1:Answer: message('StartNextLevel')
------------------------------------------
733: 1:BoardData {
733: 1:  'description': ['No more Levels. You win!'],
733: 1:  'history': [],
733: 1:  'info': [],
733: 1:  'level': 17,
733: 1:  'questions': []
733: 1:}
733: 1:Scores: 62672
733: 1:Answer: message('StartNextLevel')
------------------------------------------
734: 1:BoardData {
734: 1:  'description': ['No more Levels. You win!'],
734: 1:  'history': [],
734: 1:  'info': [],
734: 1:  'level': 17,
734: 1:  'questions': []
734: 1:}
734: 1:Scores: 62672
734: 1:Answer: message('StartNextLevel')
------------------------------------------
735: 1:BoardData {
735: 1:  'description': ['No more Levels. You win!'],
735: 1:  'history': [],
735: 1:  'info': [],
735: 1:  'level': 17,
735: 1:  'questions': []
735: 1:}
735: 1:Scores: 62672
735: 1:Answer: message('StartNextLevel')
------------------------------------------
736: 1:BoardData {
736: 1:  'description': ['No more Levels. You win!'],
736: 1:  'history': [],
736: 1:  'info': [],
736: 1:  'level': 17,
736: 1:  'questions': []
736: 1:}
736: 1:Scores: 62672
736: 1:Answer: message('StartNextLevel')
------------------------------------------
737: 1:BoardData {
737: 1:  'description': ['No more Levels. You win!'],
737: 1:  'history': [],
737: 1:  'info': [],
737: 1:  'level': 17,
737: 1:  'questions': []
737: 1:}
737: 1:Scores: 62672
737: 1:Answer: message('StartNextLevel')
------------------------------------------
738: 1:BoardData {
738: 1:  'description': ['No more Levels. You win!'],
738: 1:  'history': [],
738: 1:  'info': [],
738: 1:  'level': 17,
738: 1:  'questions': []
738: 1:}
738: 1:Scores: 62672
738: 1:Answer: message('StartNextLevel')
------------------------------------------
739: 1:BoardData {
739: 1:  'description': ['No more Levels. You win!'],
739: 1:  'history': [],
739: 1:  'info': [],
739: 1:  'level': 17,
739: 1:  'questions': []
739: 1:}
739: 1:Scores: 62672
739: 1:Answer: message('StartNextLevel')
------------------------------------------
740: 1:BoardData {
740: 1:  'description': ['No more Levels. You win!'],
740: 1:  'history': [],
740: 1:  'info': [],
740: 1:  'level': 17,
740: 1:  'questions': []
740: 1:}
740: 1:Scores: 62672
740: 1:Answer: message('StartNextLevel')
------------------------------------------
741: 1:BoardData {
741: 1:  'description': ['No more Levels. You win!'],
741: 1:  'history': [],
741: 1:  'info': [],
741: 1:  'level': 17,
741: 1:  'questions': []
741: 1:}
741: 1:Scores: 62672
741: 1:Answer: message('StartNextLevel')
------------------------------------------
742: 1:BoardData {
742: 1:  'description': ['No more Levels. You win!'],
742: 1:  'history': [],
742: 1:  'info': [],
742: 1:  'level': 17,
742: 1:  'questions': []
742: 1:}
742: 1:Scores: 62672
742: 1:Answer: message('StartNextLevel')
------------------------------------------
743: 1:BoardData {
743: 1:  'description': ['No more Levels. You win!'],
743: 1:  'history': [],
743: 1:  'info': [],
743: 1:  'level': 17,
743: 1:  'questions': []
743: 1:}
743: 1:Scores: 62672
743: 1:Answer: message('StartNextLevel')
------------------------------------------
744: 1:BoardData {
744: 1:  'description': ['No more Levels. You win!'],
744: 1:  'history': [],
744: 1:  'info': [],
744: 1:  'level': 17,
744: 1:  'questions': []
744: 1:}
744: 1:Scores: 62672
744: 1:Answer: message('StartNextLevel')
------------------------------------------
745: 1:BoardData {
745: 1:  'description': ['No more Levels. You win!'],
745: 1:  'history': [],
745: 1:  'info': [],
745: 1:  'level': 17,
745: 1:  'questions': []
745: 1:}
745: 1:Scores: 62672
745: 1:Answer: message('StartNextLevel')
------------------------------------------
746: 1:BoardData {
746: 1:  'description': ['No more Levels. You win!'],
746: 1:  'history': [],
746: 1:  'info': [],
746: 1:  'level': 17,
746: 1:  'questions': []
746: 1:}
746: 1:Scores: 62672
746: 1:Answer: message('StartNextLevel')
------------------------------------------
747: 1:BoardData {
747: 1:  'description': ['No more Levels. You win!'],
747: 1:  'history': [],
747: 1:  'info': [],
747: 1:  'level': 17,
747: 1:  'questions': []
747: 1:}
747: 1:Scores: 62672
747: 1:Answer: message('StartNextLevel')
------------------------------------------
748: 1:BoardData {
748: 1:  'description': ['No more Levels. You win!'],
748: 1:  'history': [],
748: 1:  'info': [],
748: 1:  'level': 17,
748: 1:  'questions': []
748: 1:}
748: 1:Scores: 62672
748: 1:Answer: message('StartNextLevel')
------------------------------------------
749: 1:BoardData {
749: 1:  'description': ['No more Levels. You win!'],
749: 1:  'history': [],
749: 1:  'info': [],
749: 1:  'level': 17,
749: 1:  'questions': []
749: 1:}
749: 1:Scores: 62672
749: 1:Answer: message('StartNextLevel')
------------------------------------------
750: 1:BoardData {
750: 1:  'description': ['No more Levels. You win!'],
750: 1:  'history': [],
750: 1:  'info': [],
750: 1:  'level': 17,
750: 1:  'questions': []
750: 1:}
750: 1:Scores: 62672
750: 1:Answer: message('StartNextLevel')
------------------------------------------
751: 1:BoardData {
751: 1:  'description': ['No more Levels. You win!'],
751: 1:  'history': [],
751: 1:  'info': [],
751: 1:  'level': 17,
751: 1:  'questions': []
751: 1:}
751: 1:Scores: 62672
751: 1:Answer: message('StartNextLevel')
------------------------------------------
752: 1:BoardData {
752: 1:  'description': ['No more Levels. You win!'],
752: 1:  'history': [],
752: 1:  'info': [],
752: 1:  'level': 17,
752: 1:  'questions': []
752: 1:}
752: 1:Scores: 62672
752: 1:Answer: message('StartNextLevel')
------------------------------------------
753: 1:BoardData {
753: 1:  'description': ['No more Levels. You win!'],
753: 1:  'history': [],
753: 1:  'info': [],
753: 1:  'level': 17,
753: 1:  'questions': []
753: 1:}
753: 1:Scores: 62672
753: 1:Answer: message('StartNextLevel')
------------------------------------------
754: 1:BoardData {
754: 1:  'description': ['No more Levels. You win!'],
754: 1:  'history': [],
754: 1:  'info': [],
754: 1:  'level': 17,
754: 1:  'questions': []
754: 1:}
754: 1:Scores: 62672
754: 1:Answer: message('StartNextLevel')
------------------------------------------
755: 1:BoardData {
755: 1:  'description': ['No more Levels. You win!'],
755: 1:  'history': [],
755: 1:  'info': [],
755: 1:  'level': 17,
755: 1:  'questions': []
755: 1:}
755: 1:Scores: 62672
755: 1:Answer: message('StartNextLevel')
------------------------------------------
756: 1:BoardData {
756: 1:  'description': ['No more Levels. You win!'],
756: 1:  'history': [],
756: 1:  'info': [],
756: 1:  'level': 17,
756: 1:  'questions': []
756: 1:}
756: 1:Scores: 62672
756: 1:Answer: message('StartNextLevel')
------------------------------------------
757: 1:BoardData {
757: 1:  'description': ['No more Levels. You win!'],
757: 1:  'history': [],
757: 1:  'info': [],
757: 1:  'level': 17,
757: 1:  'questions': []
757: 1:}
757: 1:Scores: 62672
757: 1:Answer: message('StartNextLevel')
------------------------------------------
758: 1:BoardData {
758: 1:  'description': ['No more Levels. You win!'],
758: 1:  'history': [],
758: 1:  'info': [],
758: 1:  'level': 17,
758: 1:  'questions': []
758: 1:}
758: 1:Scores: 62672
758: 1:Answer: message('StartNextLevel')
------------------------------------------
759: 1:BoardData {
759: 1:  'description': ['No more Levels. You win!'],
759: 1:  'history': [],
759: 1:  'info': [],
759: 1:  'level': 17,
759: 1:  'questions': []
759: 1:}
759: 1:Scores: 62672
759: 1:Answer: message('StartNextLevel')
------------------------------------------
760: 1:BoardData {
760: 1:  'description': ['No more Levels. You win!'],
760: 1:  'history': [],
760: 1:  'info': [],
760: 1:  'level': 17,
760: 1:  'questions': []
760: 1:}
760: 1:Scores: 62672
760: 1:Answer: message('StartNextLevel')
------------------------------------------
761: 1:BoardData {
761: 1:  'description': ['No more Levels. You win!'],
761: 1:  'history': [],
761: 1:  'info': [],
761: 1:  'level': 17,
761: 1:  'questions': []
761: 1:}
761: 1:Scores: 62672
761: 1:Answer: message('StartNextLevel')
------------------------------------------
762: 1:BoardData {
762: 1:  'description': ['No more Levels. You win!'],
762: 1:  'history': [],
762: 1:  'info': [],
762: 1:  'level': 17,
762: 1:  'questions': []
762: 1:}
762: 1:Scores: 62672
762: 1:Answer: message('StartNextLevel')
------------------------------------------
763: 1:BoardData {
763: 1:  'description': ['No more Levels. You win!'],
763: 1:  'history': [],
763: 1:  'info': [],
763: 1:  'level': 17,
763: 1:  'questions': []
763: 1:}
763: 1:Scores: 62672
763: 1:Answer: message('StartNextLevel')
------------------------------------------
764: 1:BoardData {
764: 1:  'description': ['No more Levels. You win!'],
764: 1:  'history': [],
764: 1:  'info': [],
764: 1:  'level': 17,
764: 1:  'questions': []
764: 1:}
764: 1:Scores: 62672
764: 1:Answer: message('StartNextLevel')
------------------------------------------
765: 1:BoardData {
765: 1:  'description': ['No more Levels. You win!'],
765: 1:  'history': [],
765: 1:  'info': [],
765: 1:  'level': 17,
765: 1:  'questions': []
765: 1:}
765: 1:Scores: 62672
765: 1:Answer: message('StartNextLevel')
------------------------------------------
766: 1:BoardData {
766: 1:  'description': ['No more Levels. You win!'],
766: 1:  'history': [],
766: 1:  'info': [],
766: 1:  'level': 17,
766: 1:  'questions': []
766: 1:}
766: 1:Scores: 62672
766: 1:Answer: message('StartNextLevel')
------------------------------------------
767: 1:BoardData {
767: 1:  'description': ['No more Levels. You win!'],
767: 1:  'history': [],
767: 1:  'info': [],
767: 1:  'level': 17,
767: 1:  'questions': []
767: 1:}
767: 1:Scores: 62672
767: 1:Answer: message('StartNextLevel')
------------------------------------------
768: 1:BoardData {
768: 1:  'description': ['No more Levels. You win!'],
768: 1:  'history': [],
768: 1:  'info': [],
768: 1:  'level': 17,
768: 1:  'questions': []
768: 1:}
768: 1:Scores: 62672
768: 1:Answer: message('StartNextLevel')
------------------------------------------
769: 1:BoardData {
769: 1:  'description': ['No more Levels. You win!'],
769: 1:  'history': [],
769: 1:  'info': [],
769: 1:  'level': 17,
769: 1:  'questions': []
769: 1:}
769: 1:Scores: 62672
769: 1:Answer: message('StartNextLevel')
------------------------------------------
770: 1:BoardData {
770: 1:  'description': ['No more Levels. You win!'],
770: 1:  'history': [],
770: 1:  'info': [],
770: 1:  'level': 17,
770: 1:  'questions': []
770: 1:}
770: 1:Scores: 62672
770: 1:Answer: message('StartNextLevel')
------------------------------------------
771: 1:BoardData {
771: 1:  'description': ['No more Levels. You win!'],
771: 1:  'history': [],
771: 1:  'info': [],
771: 1:  'level': 17,
771: 1:  'questions': []
771: 1:}
771: 1:Scores: 62672
771: 1:Answer: message('StartNextLevel')
------------------------------------------
772: 1:BoardData {
772: 1:  'description': ['No more Levels. You win!'],
772: 1:  'history': [],
772: 1:  'info': [],
772: 1:  'level': 17,
772: 1:  'questions': []
772: 1:}
772: 1:Scores: 62672
772: 1:Answer: message('StartNextLevel')
------------------------------------------
773: 1:BoardData {
773: 1:  'description': ['No more Levels. You win!'],
773: 1:  'history': [],
773: 1:  'info': [],
773: 1:  'level': 17,
773: 1:  'questions': []
773: 1:}
773: 1:Scores: 62672
773: 1:Answer: message('StartNextLevel')
------------------------------------------
774: 1:BoardData {
774: 1:  'description': ['No more Levels. You win!'],
774: 1:  'history': [],
774: 1:  'info': [],
774: 1:  'level': 17,
774: 1:  'questions': []
774: 1:}
774: 1:Scores: 62672
774: 1:Answer: message('StartNextLevel')
------------------------------------------
775: 1:BoardData {
775: 1:  'description': ['No more Levels. You win!'],
775: 1:  'history': [],
775: 1:  'info': [],
775: 1:  'level': 17,
775: 1:  'questions': []
775: 1:}
775: 1:Scores: 62672
775: 1:Answer: message('StartNextLevel')
------------------------------------------
776: 1:BoardData {
776: 1:  'description': ['No more Levels. You win!'],
776: 1:  'history': [],
776: 1:  'info': [],
776: 1:  'level': 17,
776: 1:  'questions': []
776: 1:}
776: 1:Scores: 62672
776: 1:Answer: message('StartNextLevel')
------------------------------------------
777: 1:BoardData {
777: 1:  'description': ['No more Levels. You win!'],
777: 1:  'history': [],
777: 1:  'info': [],
777: 1:  'level': 17,
777: 1:  'questions': []
777: 1:}
777: 1:Scores: 62672
777: 1:Answer: message('StartNextLevel')
------------------------------------------
778: 1:BoardData {
778: 1:  'description': ['No more Levels. You win!'],
778: 1:  'history': [],
778: 1:  'info': [],
778: 1:  'level': 17,
778: 1:  'questions': []
778: 1:}
778: 1:Scores: 62672
778: 1:Answer: message('StartNextLevel')
------------------------------------------
779: 1:BoardData {
779: 1:  'description': ['No more Levels. You win!'],
779: 1:  'history': [],
779: 1:  'info': [],
779: 1:  'level': 17,
779: 1:  'questions': []
779: 1:}
779: 1:Scores: 62672
779: 1:Answer: message('StartNextLevel')
------------------------------------------
780: 1:BoardData {
780: 1:  'description': ['No more Levels. You win!'],
780: 1:  'history': [],
780: 1:  'info': [],
780: 1:  'level': 17,
780: 1:  'questions': []
780: 1:}
780: 1:Scores: 62672
780: 1:Answer: message('StartNextLevel')
------------------------------------------
781: 1:BoardData {
781: 1:  'description': ['No more Levels. You win!'],
781: 1:  'history': [],
781: 1:  'info': [],
781: 1:  'level': 17,
781: 1:  'questions': []
781: 1:}
781: 1:Scores: 62672
781: 1:Answer: message('StartNextLevel')
------------------------------------------
782: 1:BoardData {
782: 1:  'description': ['No more Levels. You win!'],
782: 1:  'history': [],
782: 1:  'info': [],
782: 1:  'level': 17,
782: 1:  'questions': []
782: 1:}
782: 1:Scores: 62672
782: 1:Answer: message('StartNextLevel')
------------------------------------------
783: 1:BoardData {
783: 1:  'description': ['No more Levels. You win!'],
783: 1:  'history': [],
783: 1:  'info': [],
783: 1:  'level': 17,
783: 1:  'questions': []
783: 1:}
783: 1:Scores: 62672
783: 1:Answer: message('StartNextLevel')
------------------------------------------
784: 1:BoardData {
784: 1:  'description': ['No more Levels. You win!'],
784: 1:  'history': [],
784: 1:  'info': [],
784: 1:  'level': 17,
784: 1:  'questions': []
784: 1:}
784: 1:Scores: 62672
784: 1:Answer: message('StartNextLevel')
------------------------------------------
785: 1:BoardData {
785: 1:  'description': ['No more Levels. You win!'],
785: 1:  'history': [],
785: 1:  'info': [],
785: 1:  'level': 17,
785: 1:  'questions': []
785: 1:}
785: 1:Scores: 62672
785: 1:Answer: message('StartNextLevel')
------------------------------------------
786: 1:BoardData {
786: 1:  'description': ['No more Levels. You win!'],
786: 1:  'history': [],
786: 1:  'info': [],
786: 1:  'level': 17,
786: 1:  'questions': []
786: 1:}
786: 1:Scores: 62672
786: 1:Answer: message('StartNextLevel')
------------------------------------------
787: 1:BoardData {
787: 1:  'description': ['No more Levels. You win!'],
787: 1:  'history': [],
787: 1:  'info': [],
787: 1:  'level': 17,
787: 1:  'questions': []
787: 1:}
787: 1:Scores: 62672
787: 1:Answer: message('StartNextLevel')
------------------------------------------
788: 1:BoardData {
788: 1:  'description': ['No more Levels. You win!'],
788: 1:  'history': [],
788: 1:  'info': [],
788: 1:  'level': 17,
788: 1:  'questions': []
788: 1:}
788: 1:Scores: 62672
788: 1:Answer: message('StartNextLevel')
------------------------------------------
789: 1:BoardData {
789: 1:  'description': ['No more Levels. You win!'],
789: 1:  'history': [],
789: 1:  'info': [],
789: 1:  'level': 17,
789: 1:  'questions': []
789: 1:}
789: 1:Scores: 62672
789: 1:Answer: message('StartNextLevel')
------------------------------------------
790: 1:BoardData {
790: 1:  'description': ['No more Levels. You win!'],
790: 1:  'history': [],
790: 1:  'info': [],
790: 1:  'level': 17,
790: 1:  'questions': []
790: 1:}
790: 1:Scores: 62672
790: 1:Answer: message('StartNextLevel')
------------------------------------------
791: 1:BoardData {
791: 1:  'description': ['No more Levels. You win!'],
791: 1:  'history': [],
791: 1:  'info': [],
791: 1:  'level': 17,
791: 1:  'questions': []
791: 1:}
791: 1:Scores: 62672
791: 1:Answer: message('StartNextLevel')
------------------------------------------
792: 1:BoardData {
792: 1:  'description': ['No more Levels. You win!'],
792: 1:  'history': [],
792: 1:  'info': [],
792: 1:  'level': 17,
792: 1:  'questions': []
792: 1:}
792: 1:Scores: 62672
792: 1:Answer: message('StartNextLevel')
------------------------------------------
793: 1:BoardData {
793: 1:  'description': ['No more Levels. You win!'],
793: 1:  'history': [],
793: 1:  'info': [],
793: 1:  'level': 17,
793: 1:  'questions': []
793: 1:}
793: 1:Scores: 62672
793: 1:Answer: message('StartNextLevel')
------------------------------------------
794: 1:BoardData {
794: 1:  'description': ['No more Levels. You win!'],
794: 1:  'history': [],
794: 1:  'info': [],
794: 1:  'level': 17,
794: 1:  'questions': []
794: 1:}
794: 1:Scores: 62672
794: 1:Answer: message('StartNextLevel')
------------------------------------------
795: 1:BoardData {
795: 1:  'description': ['No more Levels. You win!'],
795: 1:  'history': [],
795: 1:  'info': [],
795: 1:  'level': 17,
795: 1:  'questions': []
795: 1:}
795: 1:Scores: 62672
795: 1:Answer: message('StartNextLevel')
------------------------------------------
796: 1:BoardData {
796: 1:  'description': ['No more Levels. You win!'],
796: 1:  'history': [],
796: 1:  'info': [],
796: 1:  'level': 17,
796: 1:  'questions': []
796: 1:}
796: 1:Scores: 62672
796: 1:Answer: message('StartNextLevel')
------------------------------------------
797: 1:BoardData {
797: 1:  'description': ['No more Levels. You win!'],
797: 1:  'history': [],
797: 1:  'info': [],
797: 1:  'level': 17,
797: 1:  'questions': []
797: 1:}
797: 1:Scores: 62672
797: 1:Answer: message('StartNextLevel')
------------------------------------------
798: 1:BoardData {
798: 1:  'description': ['No more Levels. You win!'],
798: 1:  'history': [],
798: 1:  'info': [],
798: 1:  'level': 17,
798: 1:  'questions': []
798: 1:}
798: 1:Scores: 62672
798: 1:Answer: message('StartNextLevel')
------------------------------------------
799: 1:BoardData {
799: 1:  'description': ['No more Levels. You win!'],
799: 1:  'history': [],
799: 1:  'info': [],
799: 1:  'level': 17,
799: 1:  'questions': []
799: 1:}
799: 1:Scores: 62672
799: 1:Answer: message('StartNextLevel')
------------------------------------------
800: 1:BoardData {
800: 1:  'description': ['No more Levels. You win!'],
800: 1:  'history': [],
800: 1:  'info': [],
800: 1:  'level': 17,
800: 1:  'questions': []
800: 1:}
800: 1:Scores: 62672
800: 1:Answer: message('StartNextLevel')
------------------------------------------
801: 1:BoardData {
801: 1:  'description': ['No more Levels. You win!'],
801: 1:  'history': [],
801: 1:  'info': [],
801: 1:  'level': 17,
801: 1:  'questions': []
801: 1:}
801: 1:Scores: 62672
801: 1:Answer: message('StartNextLevel')
------------------------------------------
802: 1:BoardData {
802: 1:  'description': ['No more Levels. You win!'],
802: 1:  'history': [],
802: 1:  'info': [],
802: 1:  'level': 17,
802: 1:  'questions': []
802: 1:}
802: 1:Scores: 62672
802: 1:Answer: message('StartNextLevel')
------------------------------------------
803: 1:BoardData {
803: 1:  'description': ['No more Levels. You win!'],
803: 1:  'history': [],
803: 1:  'info': [],
803: 1:  'level': 17,
803: 1:  'questions': []
803: 1:}
803: 1:Scores: 62672
803: 1:Answer: message('StartNextLevel')
------------------------------------------
804: 1:BoardData {
804: 1:  'description': ['No more Levels. You win!'],
804: 1:  'history': [],
804: 1:  'info': [],
804: 1:  'level': 17,
804: 1:  'questions': []
804: 1:}
804: 1:Scores: 62672
804: 1:Answer: message('StartNextLevel')
------------------------------------------
805: 1:BoardData {
805: 1:  'description': ['No more Levels. You win!'],
805: 1:  'history': [],
805: 1:  'info': [],
805: 1:  'level': 17,
805: 1:  'questions': []
805: 1:}
805: 1:Scores: 62672
805: 1:Answer: message('StartNextLevel')
------------------------------------------
806: 1:BoardData {
806: 1:  'description': ['No more Levels. You win!'],
806: 1:  'history': [],
806: 1:  'info': [],
806: 1:  'level': 17,
806: 1:  'questions': []
806: 1:}
806: 1:Scores: 62672
806: 1:Answer: message('StartNextLevel')
------------------------------------------
807: 1:BoardData {
807: 1:  'description': ['No more Levels. You win!'],
807: 1:  'history': [],
807: 1:  'info': [],
807: 1:  'level': 17,
807: 1:  'questions': []
807: 1:}
807: 1:Scores: 62672
807: 1:Answer: message('StartNextLevel')
------------------------------------------
808: 1:BoardData {
808: 1:  'description': ['No more Levels. You win!'],
808: 1:  'history': [],
808: 1:  'info': [],
808: 1:  'level': 17,
808: 1:  'questions': []
808: 1:}
808: 1:Scores: 62672
808: 1:Answer: message('StartNextLevel')
------------------------------------------
809: 1:BoardData {
809: 1:  'description': ['No more Levels. You win!'],
809: 1:  'history': [],
809: 1:  'info': [],
809: 1:  'level': 17,
809: 1:  'questions': []
809: 1:}
809: 1:Scores: 62672
809: 1:Answer: message('StartNextLevel')
------------------------------------------
810: 1:BoardData {
810: 1:  'description': ['No more Levels. You win!'],
810: 1:  'history': [],
810: 1:  'info': [],
810: 1:  'level': 17,
810: 1:  'questions': []
810: 1:}
810: 1:Scores: 62672
810: 1:Answer: message('StartNextLevel')
------------------------------------------
811: 1:BoardData {
811: 1:  'description': ['No more Levels. You win!'],
811: 1:  'history': [],
811: 1:  'info': [],
811: 1:  'level': 17,
811: 1:  'questions': []
811: 1:}
811: 1:Scores: 62672
811: 1:Answer: message('StartNextLevel')
------------------------------------------
812: 1:BoardData {
812: 1:  'description': ['No more Levels. You win!'],
812: 1:  'history': [],
812: 1:  'info': [],
812: 1:  'level': 17,
812: 1:  'questions': []
812: 1:}
812: 1:Scores: 62672
812: 1:Answer: message('StartNextLevel')
------------------------------------------
813: 1:BoardData {
813: 1:  'description': ['No more Levels. You win!'],
813: 1:  'history': [],
813: 1:  'info': [],
813: 1:  'level': 17,
813: 1:  'questions': []
813: 1:}
813: 1:Scores: 62672
813: 1:Answer: message('StartNextLevel')
------------------------------------------
814: 1:BoardData {
814: 1:  'description': ['No more Levels. You win!'],
814: 1:  'history': [],
814: 1:  'info': [],
814: 1:  'level': 17,
814: 1:  'questions': []
814: 1:}
814: 1:Scores: 62672
814: 1:Answer: message('StartNextLevel')
------------------------------------------
815: 1:BoardData {
815: 1:  'description': ['No more Levels. You win!'],
815: 1:  'history': [],
815: 1:  'info': [],
815: 1:  'level': 17,
815: 1:  'questions': []
815: 1:}
815: 1:Scores: 62672
815: 1:Answer: message('StartNextLevel')
------------------------------------------
816: 1:BoardData {
816: 1:  'description': ['No more Levels. You win!'],
816: 1:  'history': [],
816: 1:  'info': [],
816: 1:  'level': 17,
816: 1:  'questions': []
816: 1:}
816: 1:Scores: 62672
816: 1:Answer: message('StartNextLevel')
------------------------------------------
817: 1:BoardData {
817: 1:  'description': ['No more Levels. You win!'],
817: 1:  'history': [],
817: 1:  'info': [],
817: 1:  'level': 17,
817: 1:  'questions': []
817: 1:}
817: 1:Scores: 62672
817: 1:Answer: message('StartNextLevel')
------------------------------------------
818: 1:BoardData {
818: 1:  'description': ['No more Levels. You win!'],
818: 1:  'history': [],
818: 1:  'info': [],
818: 1:  'level': 17,
818: 1:  'questions': []
818: 1:}
818: 1:Scores: 62672
818: 1:Answer: message('StartNextLevel')
------------------------------------------
819: 1:BoardData {
819: 1:  'description': ['No more Levels. You win!'],
819: 1:  'history': [],
819: 1:  'info': [],
819: 1:  'level': 17,
819: 1:  'questions': []
819: 1:}
819: 1:Scores: 62672
819: 1:Answer: message('StartNextLevel')
------------------------------------------
820: 1:BoardData {
820: 1:  'description': ['No more Levels. You win!'],
820: 1:  'history': [],
820: 1:  'info': [],
820: 1:  'level': 17,
820: 1:  'questions': []
820: 1:}
820: 1:Scores: 62672
820: 1:Answer: message('StartNextLevel')
------------------------------------------
821: 1:BoardData {
821: 1:  'description': ['No more Levels. You win!'],
821: 1:  'history': [],
821: 1:  'info': [],
821: 1:  'level': 17,
821: 1:  'questions': []
821: 1:}
821: 1:Scores: 62672
821: 1:Answer: message('StartNextLevel')
------------------------------------------
822: 1:BoardData {
822: 1:  'description': ['No more Levels. You win!'],
822: 1:  'history': [],
822: 1:  'info': [],
822: 1:  'level': 17,
822: 1:  'questions': []
822: 1:}
822: 1:Scores: 62672
822: 1:Answer: message('StartNextLevel')
------------------------------------------
823: 1:BoardData {
823: 1:  'description': ['No more Levels. You win!'],
823: 1:  'history': [],
823: 1:  'info': [],
823: 1:  'level': 17,
823: 1:  'questions': []
823: 1:}
823: 1:Scores: 62672
823: 1:Answer: message('StartNextLevel')
------------------------------------------
824: 1:BoardData {
824: 1:  'description': ['No more Levels. You win!'],
824: 1:  'history': [],
824: 1:  'info': [],
824: 1:  'level': 17,
824: 1:  'questions': []
824: 1:}
824: 1:Scores: 62672
824: 1:Answer: message('StartNextLevel')
------------------------------------------
825: 1:BoardData {
825: 1:  'description': ['No more Levels. You win!'],
825: 1:  'history': [],
825: 1:  'info': [],
825: 1:  'level': 17,
825: 1:  'questions': []
825: 1:}
825: 1:Scores: 62672
825: 1:Answer: message('StartNextLevel')
------------------------------------------
826: 1:BoardData {
826: 1:  'description': ['No more Levels. You win!'],
826: 1:  'history': [],
826: 1:  'info': [],
826: 1:  'level': 17,
826: 1:  'questions': []
826: 1:}
826: 1:Scores: 62672
826: 1:Answer: message('StartNextLevel')
------------------------------------------
827: 1:BoardData {
827: 1:  'description': ['No more Levels. You win!'],
827: 1:  'history': [],
827: 1:  'info': [],
827: 1:  'level': 17,
827: 1:  'questions': []
827: 1:}
827: 1:Scores: 62672
827: 1:Answer: message('StartNextLevel')
------------------------------------------
828: 1:BoardData {
828: 1:  'description': ['No more Levels. You win!'],
828: 1:  'history': [],
828: 1:  'info': [],
828: 1:  'level': 17,
828: 1:  'questions': []
828: 1:}
828: 1:Scores: 62672
828: 1:Answer: message('StartNextLevel')
------------------------------------------
829: 1:BoardData {
829: 1:  'description': ['No more Levels. You win!'],
829: 1:  'history': [],
829: 1:  'info': [],
829: 1:  'level': 17,
829: 1:  'questions': []
829: 1:}
829: 1:Scores: 62672
829: 1:Answer: message('StartNextLevel')
------------------------------------------
830: 1:BoardData {
830: 1:  'description': ['No more Levels. You win!'],
830: 1:  'history': [],
830: 1:  'info': [],
830: 1:  'level': 17,
830: 1:  'questions': []
830: 1:}
830: 1:Scores: 62672
830: 1:Answer: message('StartNextLevel')
------------------------------------------
831: 1:BoardData {
831: 1:  'description': ['No more Levels. You win!'],
831: 1:  'history': [],
831: 1:  'info': [],
831: 1:  'level': 17,
831: 1:  'questions': []
831: 1:}
831: 1:Scores: 62672
831: 1:Answer: message('StartNextLevel')
------------------------------------------
832: 1:BoardData {
832: 1:  'description': ['No more Levels. You win!'],
832: 1:  'history': [],
832: 1:  'info': [],
832: 1:  'level': 17,
832: 1:  'questions': []
832: 1:}
832: 1:Scores: 62672
832: 1:Answer: message('StartNextLevel')
------------------------------------------
833: 1:BoardData {
833: 1:  'description': ['No more Levels. You win!'],
833: 1:  'history': [],
833: 1:  'info': [],
833: 1:  'level': 17,
833: 1:  'questions': []
833: 1:}
833: 1:Scores: 62672
833: 1:Answer: message('StartNextLevel')
------------------------------------------
834: 1:BoardData {
834: 1:  'description': ['No more Levels. You win!'],
834: 1:  'history': [],
834: 1:  'info': [],
834: 1:  'level': 17,
834: 1:  'questions': []
834: 1:}
834: 1:Scores: 62672
834: 1:Answer: message('StartNextLevel')
------------------------------------------
835: 1:BoardData {
835: 1:  'description': ['No more Levels. You win!'],
835: 1:  'history': [],
835: 1:  'info': [],
835: 1:  'level': 17,
835: 1:  'questions': []
835: 1:}
835: 1:Scores: 62672
835: 1:Answer: message('StartNextLevel')
------------------------------------------
836: 1:BoardData {
836: 1:  'description': ['No more Levels. You win!'],
836: 1:  'history': [],
836: 1:  'info': [],
836: 1:  'level': 17,
836: 1:  'questions': []
836: 1:}
836: 1:Scores: 62672
836: 1:Answer: message('StartNextLevel')
------------------------------------------
837: 1:BoardData {
837: 1:  'description': ['No more Levels. You win!'],
837: 1:  'history': [],
837: 1:  'info': [],
837: 1:  'level': 17,
837: 1:  'questions': []
837: 1:}
837: 1:Scores: 62672
837: 1:Answer: message('StartNextLevel')
------------------------------------------
838: 1:BoardData {
838: 1:  'description': ['No more Levels. You win!'],
838: 1:  'history': [],
838: 1:  'info': [],
838: 1:  'level': 17,
838: 1:  'questions': []
838: 1:}
838: 1:Scores: 62672
838: 1:Answer: message('StartNextLevel')
------------------------------------------
839: 1:BoardData {
839: 1:  'description': ['No more Levels. You win!'],
839: 1:  'history': [],
839: 1:  'info': [],
839: 1:  'level': 17,
839: 1:  'questions': []
839: 1:}
839: 1:Scores: 62672
839: 1:Answer: message('StartNextLevel')
------------------------------------------
840: 1:BoardData {
840: 1:  'description': ['No more Levels. You win!'],
840: 1:  'history': [],
840: 1:  'info': [],
840: 1:  'level': 17,
840: 1:  'questions': []
840: 1:}
840: 1:Scores: 62672
840: 1:Answer: message('StartNextLevel')
------------------------------------------
841: 1:BoardData {
841: 1:  'description': ['No more Levels. You win!'],
841: 1:  'history': [],
841: 1:  'info': [],
841: 1:  'level': 17,
841: 1:  'questions': []
841: 1:}
841: 1:Scores: 62672
841: 1:Answer: message('StartNextLevel')
------------------------------------------
842: 1:BoardData {
842: 1:  'description': ['No more Levels. You win!'],
842: 1:  'history': [],
842: 1:  'info': [],
842: 1:  'level': 17,
842: 1:  'questions': []
842: 1:}
842: 1:Scores: 62672
842: 1:Answer: message('StartNextLevel')
------------------------------------------
843: 1:BoardData {
843: 1:  'description': ['No more Levels. You win!'],
843: 1:  'history': [],
843: 1:  'info': [],
843: 1:  'level': 17,
843: 1:  'questions': []
843: 1:}
843: 1:Scores: 62672
843: 1:Answer: message('StartNextLevel')
------------------------------------------
844: 1:BoardData {
844: 1:  'description': ['No more Levels. You win!'],
844: 1:  'history': [],
844: 1:  'info': [],
844: 1:  'level': 17,
844: 1:  'questions': []
844: 1:}
844: 1:Scores: 62672
844: 1:Answer: message('StartNextLevel')
------------------------------------------
845: 1:BoardData {
845: 1:  'description': ['No more Levels. You win!'],
845: 1:  'history': [],
845: 1:  'info': [],
845: 1:  'level': 17,
845: 1:  'questions': []
845: 1:}
845: 1:Scores: 62672
845: 1:Answer: message('StartNextLevel')
------------------------------------------
846: 1:BoardData {
846: 1:  'description': ['No more Levels. You win!'],
846: 1:  'history': [],
846: 1:  'info': [],
846: 1:  'level': 17,
846: 1:  'questions': []
846: 1:}
846: 1:Scores: 62672
846: 1:Answer: message('StartNextLevel')
------------------------------------------
847: 1:BoardData {
847: 1:  'description': ['No more Levels. You win!'],
847: 1:  'history': [],
847: 1:  'info': [],
847: 1:  'level': 17,
847: 1:  'questions': []
847: 1:}
847: 1:Scores: 62672
847: 1:Answer: message('StartNextLevel')
------------------------------------------
848: 1:BoardData {
848: 1:  'description': ['No more Levels. You win!'],
848: 1:  'history': [],
848: 1:  'info': [],
848: 1:  'level': 17,
848: 1:  'questions': []
848: 1:}
848: 1:Scores: 62672
848: 1:Answer: message('StartNextLevel')
------------------------------------------
849: 1:BoardData {
849: 1:  'description': ['No more Levels. You win!'],
849: 1:  'history': [],
849: 1:  'info': [],
849: 1:  'level': 17,
849: 1:  'questions': []
849: 1:}
849: 1:Scores: 62672
849: 1:Answer: message('StartNextLevel')
------------------------------------------
850: 1:BoardData {
850: 1:  'description': ['No more Levels. You win!'],
850: 1:  'history': [],
850: 1:  'info': [],
850: 1:  'level': 17,
850: 1:  'questions': []
850: 1:}
850: 1:Scores: 62672
850: 1:Answer: message('StartNextLevel')
------------------------------------------
851: 1:BoardData {
851: 1:  'description': ['No more Levels. You win!'],
851: 1:  'history': [],
851: 1:  'info': [],
851: 1:  'level': 17,
851: 1:  'questions': []
851: 1:}
851: 1:Scores: 62672
851: 1:Answer: message('StartNextLevel')
------------------------------------------
852: 1:BoardData {
852: 1:  'description': ['No more Levels. You win!'],
852: 1:  'history': [],
852: 1:  'info': [],
852: 1:  'level': 17,
852: 1:  'questions': []
852: 1:}
852: 1:Scores: 62672
852: 1:Answer: message('StartNextLevel')
------------------------------------------
853: 1:BoardData {
853: 1:  'description': ['No more Levels. You win!'],
853: 1:  'history': [],
853: 1:  'info': [],
853: 1:  'level': 17,
853: 1:  'questions': []
853: 1:}
853: 1:Scores: 62672
853: 1:Answer: message('StartNextLevel')
------------------------------------------
854: 1:BoardData {
854: 1:  'description': ['No more Levels. You win!'],
854: 1:  'history': [],
854: 1:  'info': [],
854: 1:  'level': 17,
854: 1:  'questions': []
854: 1:}
854: 1:Scores: 62672
854: 1:Answer: message('StartNextLevel')
------------------------------------------
855: 1:BoardData {
855: 1:  'description': ['No more Levels. You win!'],
855: 1:  'history': [],
855: 1:  'info': [],
855: 1:  'level': 17,
855: 1:  'questions': []
855: 1:}
855: 1:Scores: 62672
855: 1:Answer: message('StartNextLevel')
------------------------------------------
856: 1:BoardData {
856: 1:  'description': ['No more Levels. You win!'],
856: 1:  'history': [],
856: 1:  'info': [],
856: 1:  'level': 17,
856: 1:  'questions': []
856: 1:}
856: 1:Scores: 62672
856: 1:Answer: message('StartNextLevel')
------------------------------------------
857: 1:BoardData {
857: 1:  'description': ['No more Levels. You win!'],
857: 1:  'history': [],
857: 1:  'info': [],
857: 1:  'level': 17,
857: 1:  'questions': []
857: 1:}
857: 1:Scores: 62672
857: 1:Answer: message('StartNextLevel')
------------------------------------------
858: 1:BoardData {
858: 1:  'description': ['No more Levels. You win!'],
858: 1:  'history': [],
858: 1:  'info': [],
858: 1:  'level': 17,
858: 1:  'questions': []
858: 1:}
858: 1:Scores: 62672
858: 1:Answer: message('StartNextLevel')
------------------------------------------
859: 1:BoardData {
859: 1:  'description': ['No more Levels. You win!'],
859: 1:  'history': [],
859: 1:  'info': [],
859: 1:  'level': 17,
859: 1:  'questions': []
859: 1:}
859: 1:Scores: 62672
859: 1:Answer: message('StartNextLevel')
------------------------------------------
860: 1:BoardData {
860: 1:  'description': ['No more Levels. You win!'],
860: 1:  'history': [],
860: 1:  'info': [],
860: 1:  'level': 17,
860: 1:  'questions': []
860: 1:}
860: 1:Scores: 62672
860: 1:Answer: message('StartNextLevel')
------------------------------------------
861: 1:BoardData {
861: 1:  'description': ['No more Levels. You win!'],
861: 1:  'history': [],
861: 1:  'info': [],
861: 1:  'level': 17,
861: 1:  'questions': []
861: 1:}
861: 1:Scores: 62672
861: 1:Answer: message('StartNextLevel')
------------------------------------------
862: 1:BoardData {
862: 1:  'description': ['No more Levels. You win!'],
862: 1:  'history': [],
862: 1:  'info': [],
862: 1:  'level': 17,
862: 1:  'questions': []
862: 1:}
862: 1:Scores: 62672
862: 1:Answer: message('StartNextLevel')
------------------------------------------
863: 1:BoardData {
863: 1:  'description': ['No more Levels. You win!'],
863: 1:  'history': [],
863: 1:  'info': [],
863: 1:  'level': 17,
863: 1:  'questions': []
863: 1:}
863: 1:Scores: 62672
863: 1:Answer: message('StartNextLevel')
------------------------------------------
864: 1:BoardData {
864: 1:  'description': ['No more Levels. You win!'],
864: 1:  'history': [],
864: 1:  'info': [],
864: 1:  'level': 17,
864: 1:  'questions': []
864: 1:}
864: 1:Scores: 62672
864: 1:Answer: message('StartNextLevel')
------------------------------------------
865: 1:BoardData {
865: 1:  'description': ['No more Levels. You win!'],
865: 1:  'history': [],
865: 1:  'info': [],
865: 1:  'level': 17,
865: 1:  'questions': []
865: 1:}
865: 1:Scores: 62672
865: 1:Answer: message('StartNextLevel')
------------------------------------------
866: 1:BoardData {
866: 1:  'description': ['No more Levels. You win!'],
866: 1:  'history': [],
866: 1:  'info': [],
866: 1:  'level': 17,
866: 1:  'questions': []
866: 1:}
866: 1:Scores: 62672
866: 1:Answer: message('StartNextLevel')
------------------------------------------
867: 1:BoardData {
867: 1:  'description': ['No more Levels. You win!'],
867: 1:  'history': [],
867: 1:  'info': [],
867: 1:  'level': 17,
867: 1:  'questions': []
867: 1:}
867: 1:Scores: 62672
867: 1:Answer: message('StartNextLevel')
------------------------------------------
868: 1:BoardData {
868: 1:  'description': ['No more Levels. You win!'],
868: 1:  'history': [],
868: 1:  'info': [],
868: 1:  'level': 17,
868: 1:  'questions': []
868: 1:}
868: 1:Scores: 62672
868: 1:Answer: message('StartNextLevel')
------------------------------------------
869: 1:BoardData {
869: 1:  'description': ['No more Levels. You win!'],
869: 1:  'history': [],
869: 1:  'info': [],
869: 1:  'level': 17,
869: 1:  'questions': []
869: 1:}
869: 1:Scores: 62672
869: 1:Answer: message('StartNextLevel')
------------------------------------------
870: 1:BoardData {
870: 1:  'description': ['No more Levels. You win!'],
870: 1:  'history': [],
870: 1:  'info': [],
870: 1:  'level': 17,
870: 1:  'questions': []
870: 1:}
870: 1:Scores: 62672
870: 1:Answer: message('StartNextLevel')
------------------------------------------
871: 1:BoardData {
871: 1:  'description': ['No more Levels. You win!'],
871: 1:  'history': [],
871: 1:  'info': [],
871: 1:  'level': 17,
871: 1:  'questions': []
871: 1:}
871: 1:Scores: 62672
871: 1:Answer: message('StartNextLevel')
------------------------------------------
872: 1:BoardData {
872: 1:  'description': ['No more Levels. You win!'],
872: 1:  'history': [],
872: 1:  'info': [],
872: 1:  'level': 17,
872: 1:  'questions': []
872: 1:}
872: 1:Scores: 62672
872: 1:Answer: message('StartNextLevel')
------------------------------------------
873: 1:BoardData {
873: 1:  'description': ['No more Levels. You win!'],
873: 1:  'history': [],
873: 1:  'info': [],
873: 1:  'level': 17,
873: 1:  'questions': []
873: 1:}
873: 1:Scores: 62672
873: 1:Answer: message('StartNextLevel')
------------------------------------------
874: 1:BoardData {
874: 1:  'description': ['No more Levels. You win!'],
874: 1:  'history': [],
874: 1:  'info': [],
874: 1:  'level': 17,
874: 1:  'questions': []
874: 1:}
874: 1:Scores: 62672
874: 1:Answer: message('StartNextLevel')
------------------------------------------
875: 1:BoardData {
875: 1:  'description': ['No more Levels. You win!'],
875: 1:  'history': [],
875: 1:  'info': [],
875: 1:  'level': 17,
875: 1:  'questions': []
875: 1:}
875: 1:Scores: 62672
875: 1:Answer: message('StartNextLevel')
------------------------------------------
876: 1:BoardData {
876: 1:  'description': ['No more Levels. You win!'],
876: 1:  'history': [],
876: 1:  'info': [],
876: 1:  'level': 17,
876: 1:  'questions': []
876: 1:}
876: 1:Scores: 62672
876: 1:Answer: message('StartNextLevel')
------------------------------------------
877: 1:BoardData {
877: 1:  'description': ['No more Levels. You win!'],
877: 1:  'history': [],
877: 1:  'info': [],
877: 1:  'level': 17,
877: 1:  'questions': []
877: 1:}
877: 1:Scores: 62672
877: 1:Answer: message('StartNextLevel')
------------------------------------------
878: 1:BoardData {
878: 1:  'description': ['No more Levels. You win!'],
878: 1:  'history': [],
878: 1:  'info': [],
878: 1:  'level': 17,
878: 1:  'questions': []
878: 1:}
878: 1:Scores: 62672
878: 1:Answer: message('StartNextLevel')
------------------------------------------
879: 1:BoardData {
879: 1:  'description': ['No more Levels. You win!'],
879: 1:  'history': [],
879: 1:  'info': [],
879: 1:  'level': 17,
879: 1:  'questions': []
879: 1:}
879: 1:Scores: 62672
879: 1:Answer: message('StartNextLevel')
------------------------------------------
880: 1:BoardData {
880: 1:  'description': ['No more Levels. You win!'],
880: 1:  'history': [],
880: 1:  'info': [],
880: 1:  'level': 17,
880: 1:  'questions': []
880: 1:}
880: 1:Scores: 62672
880: 1:Answer: message('StartNextLevel')
------------------------------------------
881: 1:BoardData {
881: 1:  'description': ['No more Levels. You win!'],
881: 1:  'history': [],
881: 1:  'info': [],
881: 1:  'level': 17,
881: 1:  'questions': []
881: 1:}
881: 1:Scores: 62672
881: 1:Answer: message('StartNextLevel')
------------------------------------------
882: 1:BoardData {
882: 1:  'description': ['No more Levels. You win!'],
882: 1:  'history': [],
882: 1:  'info': [],
882: 1:  'level': 17,
882: 1:  'questions': []
882: 1:}
882: 1:Scores: 62672
882: 1:Answer: message('StartNextLevel')
------------------------------------------
883: 1:BoardData {
883: 1:  'description': ['No more Levels. You win!'],
883: 1:  'history': [],
883: 1:  'info': [],
883: 1:  'level': 17,
883: 1:  'questions': []
883: 1:}
883: 1:Scores: 62672
883: 1:Answer: message('StartNextLevel')
------------------------------------------
884: 1:BoardData {
884: 1:  'description': ['No more Levels. You win!'],
884: 1:  'history': [],
884: 1:  'info': [],
884: 1:  'level': 17,
884: 1:  'questions': []
884: 1:}
884: 1:Scores: 62672
884: 1:Answer: message('StartNextLevel')
------------------------------------------
885: 1:BoardData {
885: 1:  'description': ['No more Levels. You win!'],
885: 1:  'history': [],
885: 1:  'info': [],
885: 1:  'level': 17,
885: 1:  'questions': []
885: 1:}
885: 1:Scores: 62672
885: 1:Answer: message('StartNextLevel')
------------------------------------------
886: 1:BoardData {
886: 1:  'description': ['No more Levels. You win!'],
886: 1:  'history': [],
886: 1:  'info': [],
886: 1:  'level': 17,
886: 1:  'questions': []
886: 1:}
886: 1:Scores: 62672
886: 1:Answer: message('StartNextLevel')
------------------------------------------
887: 1:BoardData {
887: 1:  'description': ['No more Levels. You win!'],
887: 1:  'history': [],
887: 1:  'info': [],
887: 1:  'level': 17,
887: 1:  'questions': []
887: 1:}
887: 1:Scores: 62672
887: 1:Answer: message('StartNextLevel')
------------------------------------------
888: 1:BoardData {
888: 1:  'description': ['No more Levels. You win!'],
888: 1:  'history': [],
888: 1:  'info': [],
888: 1:  'level': 17,
888: 1:  'questions': []
888: 1:}
888: 1:Scores: 62672
888: 1:Answer: message('StartNextLevel')
------------------------------------------
889: 1:BoardData {
889: 1:  'description': ['No more Levels. You win!'],
889: 1:  'history': [],
889: 1:  'info': [],
889: 1:  'level': 17,
889: 1:  'questions': []
889: 1:}
889: 1:Scores: 62672
889: 1:Answer: message('StartNextLevel')
------------------------------------------
890: 1:BoardData {
890: 1:  'description': ['No more Levels. You win!'],
890: 1:  'history': [],
890: 1:  'info': [],
890: 1:  'level': 17,
890: 1:  'questions': []
890: 1:}
890: 1:Scores: 62672
890: 1:Answer: message('StartNextLevel')
------------------------------------------
891: 1:BoardData {
891: 1:  'description': ['No more Levels. You win!'],
891: 1:  'history': [],
891: 1:  'info': [],
891: 1:  'level': 17,
891: 1:  'questions': []
891: 1:}
891: 1:Scores: 62672
891: 1:Answer: message('StartNextLevel')
------------------------------------------
892: 1:BoardData {
892: 1:  'description': ['No more Levels. You win!'],
892: 1:  'history': [],
892: 1:  'info': [],
892: 1:  'level': 17,
892: 1:  'questions': []
892: 1:}
892: 1:Scores: 62672
892: 1:Answer: message('StartNextLevel')
------------------------------------------
893: 1:BoardData {
893: 1:  'description': ['No more Levels. You win!'],
893: 1:  'history': [],
893: 1:  'info': [],
893: 1:  'level': 17,
893: 1:  'questions': []
893: 1:}
893: 1:Scores: 62672
893: 1:Answer: message('StartNextLevel')
------------------------------------------
894: 1:BoardData {
894: 1:  'description': ['No more Levels. You win!'],
894: 1:  'history': [],
894: 1:  'info': [],
894: 1:  'level': 17,
894: 1:  'questions': []
894: 1:}
894: 1:Scores: 62672
894: 1:Answer: message('StartNextLevel')
------------------------------------------
895: 1:BoardData {
895: 1:  'description': ['No more Levels. You win!'],
895: 1:  'history': [],
895: 1:  'info': [],
895: 1:  'level': 17,
895: 1:  'questions': []
895: 1:}
895: 1:Scores: 62672
895: 1:Answer: message('StartNextLevel')
------------------------------------------
896: 1:BoardData {
896: 1:  'description': ['No more Levels. You win!'],
896: 1:  'history': [],
896: 1:  'info': [],
896: 1:  'level': 17,
896: 1:  'questions': []
896: 1:}
896: 1:Scores: 62672
896: 1:Answer: message('StartNextLevel')
------------------------------------------
897: 1:BoardData {
897: 1:  'description': ['No more Levels. You win!'],
897: 1:  'history': [],
897: 1:  'info': [],
897: 1:  'level': 17,
897: 1:  'questions': []
897: 1:}
897: 1:Scores: 62672
897: 1:Answer: message('StartNextLevel')
------------------------------------------
898: 1:BoardData {
898: 1:  'description': ['No more Levels. You win!'],
898: 1:  'history': [],
898: 1:  'info': [],
898: 1:  'level': 17,
898: 1:  'questions': []
898: 1:}
898: 1:Scores: 62672
898: 1:Answer: message('StartNextLevel')
------------------------------------------
899: 1:BoardData {
899: 1:  'description': ['No more Levels. You win!'],
899: 1:  'history': [],
899: 1:  'info': [],
899: 1:  'level': 17,
899: 1:  'questions': []
899: 1:}
899: 1:Scores: 62672
899: 1:Answer: message('StartNextLevel')
------------------------------------------
900: 1:BoardData {
900: 1:  'description': ['No more Levels. You win!'],
900: 1:  'history': [],
900: 1:  'info': [],
900: 1:  'level': 17,
900: 1:  'questions': []
900: 1:}
900: 1:Scores: 62672
900: 1:Answer: message('StartNextLevel')
------------------------------------------
901: 1:BoardData {
901: 1:  'description': ['No more Levels. You win!'],
901: 1:  'history': [],
901: 1:  'info': [],
901: 1:  'level': 17,
901: 1:  'questions': []
901: 1:}
901: 1:Scores: 62672
901: 1:Answer: message('StartNextLevel')
------------------------------------------
902: 1:BoardData {
902: 1:  'description': ['No more Levels. You win!'],
902: 1:  'history': [],
902: 1:  'info': [],
902: 1:  'level': 17,
902: 1:  'questions': []
902: 1:}
902: 1:Scores: 62672
902: 1:Answer: message('StartNextLevel')
------------------------------------------
903: 1:BoardData {
903: 1:  'description': ['No more Levels. You win!'],
903: 1:  'history': [],
903: 1:  'info': [],
903: 1:  'level': 17,
903: 1:  'questions': []
903: 1:}
903: 1:Scores: 62672
903: 1:Answer: message('StartNextLevel')
------------------------------------------
904: 1:BoardData {
904: 1:  'description': ['No more Levels. You win!'],
904: 1:  'history': [],
904: 1:  'info': [],
904: 1:  'level': 17,
904: 1:  'questions': []
904: 1:}
904: 1:Scores: 62672
904: 1:Answer: message('StartNextLevel')
------------------------------------------
905: 1:BoardData {
905: 1:  'description': ['No more Levels. You win!'],
905: 1:  'history': [],
905: 1:  'info': [],
905: 1:  'level': 17,
905: 1:  'questions': []
905: 1:}
905: 1:Scores: 62672
905: 1:Answer: message('StartNextLevel')
------------------------------------------
906: 1:BoardData {
906: 1:  'description': ['No more Levels. You win!'],
906: 1:  'history': [],
906: 1:  'info': [],
906: 1:  'level': 17,
906: 1:  'questions': []
906: 1:}
906: 1:Scores: 62672
906: 1:Answer: message('StartNextLevel')
------------------------------------------
907: 1:BoardData {
907: 1:  'description': ['No more Levels. You win!'],
907: 1:  'history': [],
907: 1:  'info': [],
907: 1:  'level': 17,
907: 1:  'questions': []
907: 1:}
907: 1:Scores: 62672
907: 1:Answer: message('StartNextLevel')
------------------------------------------
908: 1:BoardData {
908: 1:  'description': ['No more Levels. You win!'],
908: 1:  'history': [],
908: 1:  'info': [],
908: 1:  'level': 17,
908: 1:  'questions': []
908: 1:}
908: 1:Scores: 62672
908: 1:Answer: message('StartNextLevel')
------------------------------------------
909: 1:BoardData {
909: 1:  'description': ['No more Levels. You win!'],
909: 1:  'history': [],
909: 1:  'info': [],
909: 1:  'level': 17,
909: 1:  'questions': []
909: 1:}
909: 1:Scores: 62672
909: 1:Answer: message('StartNextLevel')
------------------------------------------
910: 1:BoardData {
910: 1:  'description': ['No more Levels. You win!'],
910: 1:  'history': [],
910: 1:  'info': [],
910: 1:  'level': 17,
910: 1:  'questions': []
910: 1:}
910: 1:Scores: 62672
910: 1:Answer: message('StartNextLevel')
------------------------------------------
911: 1:BoardData {
911: 1:  'description': ['No more Levels. You win!'],
911: 1:  'history': [],
911: 1:  'info': [],
911: 1:  'level': 17,
911: 1:  'questions': []
911: 1:}
911: 1:Scores: 62672
911: 1:Answer: message('StartNextLevel')
------------------------------------------
912: 1:BoardData {
912: 1:  'description': ['No more Levels. You win!'],
912: 1:  'history': [],
912: 1:  'info': [],
912: 1:  'level': 17,
912: 1:  'questions': []
912: 1:}
912: 1:Scores: 62672
912: 1:Answer: message('StartNextLevel')
------------------------------------------
913: 1:BoardData {
913: 1:  'description': ['No more Levels. You win!'],
913: 1:  'history': [],
913: 1:  'info': [],
913: 1:  'level': 17,
913: 1:  'questions': []
913: 1:}
913: 1:Scores: 62672
913: 1:Answer: message('StartNextLevel')
------------------------------------------
914: 1:BoardData {
914: 1:  'description': ['No more Levels. You win!'],
914: 1:  'history': [],
914: 1:  'info': [],
914: 1:  'level': 17,
914: 1:  'questions': []
914: 1:}
914: 1:Scores: 62672
914: 1:Answer: message('StartNextLevel')
------------------------------------------
915: 1:BoardData {
915: 1:  'description': ['No more Levels. You win!'],
915: 1:  'history': [],
915: 1:  'info': [],
915: 1:  'level': 17,
915: 1:  'questions': []
915: 1:}
915: 1:Scores: 62672
915: 1:Answer: message('StartNextLevel')
------------------------------------------
916: 1:BoardData {
916: 1:  'description': ['No more Levels. You win!'],
916: 1:  'history': [],
916: 1:  'info': [],
916: 1:  'level': 17,
916: 1:  'questions': []
916: 1:}
916: 1:Scores: 62672
916: 1:Answer: message('StartNextLevel')
------------------------------------------
917: 1:BoardData {
917: 1:  'description': ['No more Levels. You win!'],
917: 1:  'history': [],
917: 1:  'info': [],
917: 1:  'level': 17,
917: 1:  'questions': []
917: 1:}
917: 1:Scores: 62672
917: 1:Answer: message('StartNextLevel')
------------------------------------------
918: 1:BoardData {
918: 1:  'description': ['No more Levels. You win!'],
918: 1:  'history': [],
918: 1:  'info': [],
918: 1:  'level': 17,
918: 1:  'questions': []
918: 1:}
918: 1:Scores: 62672
918: 1:Answer: message('StartNextLevel')
------------------------------------------
919: 1:BoardData {
919: 1:  'description': ['No more Levels. You win!'],
919: 1:  'history': [],
919: 1:  'info': [],
919: 1:  'level': 17,
919: 1:  'questions': []
919: 1:}
919: 1:Scores: 62672
919: 1:Answer: message('StartNextLevel')
------------------------------------------
920: 1:BoardData {
920: 1:  'description': ['No more Levels. You win!'],
920: 1:  'history': [],
920: 1:  'info': [],
920: 1:  'level': 17,
920: 1:  'questions': []
920: 1:}
920: 1:Scores: 62672
920: 1:Answer: message('StartNextLevel')
------------------------------------------
921: 1:BoardData {
921: 1:  'description': ['No more Levels. You win!'],
921: 1:  'history': [],
921: 1:  'info': [],
921: 1:  'level': 17,
921: 1:  'questions': []
921: 1:}
921: 1:Scores: 62672
921: 1:Answer: message('StartNextLevel')
------------------------------------------
922: 1:BoardData {
922: 1:  'description': ['No more Levels. You win!'],
922: 1:  'history': [],
922: 1:  'info': [],
922: 1:  'level': 17,
922: 1:  'questions': []
922: 1:}
922: 1:Scores: 62672
922: 1:Answer: message('StartNextLevel')
------------------------------------------
923: 1:BoardData {
923: 1:  'description': ['No more Levels. You win!'],
923: 1:  'history': [],
923: 1:  'info': [],
923: 1:  'level': 17,
923: 1:  'questions': []
923: 1:}
923: 1:Scores: 62672
923: 1:Answer: message('StartNextLevel')
------------------------------------------
924: 1:BoardData {
924: 1:  'description': ['No more Levels. You win!'],
924: 1:  'history': [],
924: 1:  'info': [],
924: 1:  'level': 17,
924: 1:  'questions': []
924: 1:}
924: 1:Scores: 62672
924: 1:Answer: message('StartNextLevel')
------------------------------------------
925: 1:BoardData {
925: 1:  'description': ['No more Levels. You win!'],
925: 1:  'history': [],
925: 1:  'info': [],
925: 1:  'level': 17,
925: 1:  'questions': []
925: 1:}
925: 1:Scores: 62672
925: 1:Answer: message('StartNextLevel')
------------------------------------------
926: 1:BoardData {
926: 1:  'description': ['No more Levels. You win!'],
926: 1:  'history': [],
926: 1:  'info': [],
926: 1:  'level': 17,
926: 1:  'questions': []
926: 1:}
926: 1:Scores: 62672
926: 1:Answer: message('StartNextLevel')
------------------------------------------
927: 1:BoardData {
927: 1:  'description': ['No more Levels. You win!'],
927: 1:  'history': [],
927: 1:  'info': [],
927: 1:  'level': 17,
927: 1:  'questions': []
927: 1:}
927: 1:Scores: 62672
927: 1:Answer: message('StartNextLevel')
------------------------------------------
928: 1:BoardData {
928: 1:  'description': ['No more Levels. You win!'],
928: 1:  'history': [],
928: 1:  'info': [],
928: 1:  'level': 17,
928: 1:  'questions': []
928: 1:}
928: 1:Scores: 62672
928: 1:Answer: message('StartNextLevel')
------------------------------------------
929: 1:BoardData {
929: 1:  'description': ['No more Levels. You win!'],
929: 1:  'history': [],
929: 1:  'info': [],
929: 1:  'level': 17,
929: 1:  'questions': []
929: 1:}
929: 1:Scores: 62672
929: 1:Answer: message('StartNextLevel')
------------------------------------------
930: 1:BoardData {
930: 1:  'description': ['No more Levels. You win!'],
930: 1:  'history': [],
930: 1:  'info': [],
930: 1:  'level': 17,
930: 1:  'questions': []
930: 1:}
930: 1:Scores: 62672
930: 1:Answer: message('StartNextLevel')
------------------------------------------
931: 1:BoardData {
931: 1:  'description': ['No more Levels. You win!'],
931: 1:  'history': [],
931: 1:  'info': [],
931: 1:  'level': 17,
931: 1:  'questions': []
931: 1:}
931: 1:Scores: 62672
931: 1:Answer: message('StartNextLevel')
------------------------------------------
932: 1:BoardData {
932: 1:  'description': ['No more Levels. You win!'],
932: 1:  'history': [],
932: 1:  'info': [],
932: 1:  'level': 17,
932: 1:  'questions': []
932: 1:}
932: 1:Scores: 62672
932: 1:Answer: message('StartNextLevel')
------------------------------------------
933: 1:BoardData {
933: 1:  'description': ['No more Levels. You win!'],
933: 1:  'history': [],
933: 1:  'info': [],
933: 1:  'level': 17,
933: 1:  'questions': []
933: 1:}
933: 1:Scores: 62672
933: 1:Answer: message('StartNextLevel')
------------------------------------------
934: 1:BoardData {
934: 1:  'description': ['No more Levels. You win!'],
934: 1:  'history': [],
934: 1:  'info': [],
934: 1:  'level': 17,
934: 1:  'questions': []
934: 1:}
934: 1:Scores: 62672
934: 1:Answer: message('StartNextLevel')
------------------------------------------
935: 1:BoardData {
935: 1:  'description': ['No more Levels. You win!'],
935: 1:  'history': [],
935: 1:  'info': [],
935: 1:  'level': 17,
935: 1:  'questions': []
935: 1:}
935: 1:Scores: 62672
935: 1:Answer: message('StartNextLevel')
------------------------------------------
936: 1:BoardData {
936: 1:  'description': ['No more Levels. You win!'],
936: 1:  'history': [],
936: 1:  'info': [],
936: 1:  'level': 17,
936: 1:  'questions': []
936: 1:}
936: 1:Scores: 62672
936: 1:Answer: message('StartNextLevel')
------------------------------------------
937: 1:BoardData {
937: 1:  'description': ['No more Levels. You win!'],
937: 1:  'history': [],
937: 1:  'info': [],
937: 1:  'level': 17,
937: 1:  'questions': []
937: 1:}
937: 1:Scores: 62672
937: 1:Answer: message('StartNextLevel')
------------------------------------------
938: 1:BoardData {
938: 1:  'description': ['No more Levels. You win!'],
938: 1:  'history': [],
938: 1:  'info': [],
938: 1:  'level': 17,
938: 1:  'questions': []
938: 1:}
938: 1:Scores: 62672
938: 1:Answer: message('StartNextLevel')
------------------------------------------
939: 1:BoardData {
939: 1:  'description': ['No more Levels. You win!'],
939: 1:  'history': [],
939: 1:  'info': [],
939: 1:  'level': 17,
939: 1:  'questions': []
939: 1:}
939: 1:Scores: 62672
939: 1:Answer: message('StartNextLevel')
------------------------------------------
940: 1:BoardData {
940: 1:  'description': ['No more Levels. You win!'],
940: 1:  'history': [],
940: 1:  'info': [],
940: 1:  'level': 17,
940: 1:  'questions': []
940: 1:}
940: 1:Scores: 62672
940: 1:Answer: message('StartNextLevel')
------------------------------------------
941: 1:BoardData {
941: 1:  'description': ['No more Levels. You win!'],
941: 1:  'history': [],
941: 1:  'info': [],
941: 1:  'level': 17,
941: 1:  'questions': []
941: 1:}
941: 1:Scores: 62672
941: 1:Answer: message('StartNextLevel')
------------------------------------------
942: 1:BoardData {
942: 1:  'description': ['No more Levels. You win!'],
942: 1:  'history': [],
942: 1:  'info': [],
942: 1:  'level': 17,
942: 1:  'questions': []
942: 1:}
942: 1:Scores: 62672
942: 1:Answer: message('StartNextLevel')
------------------------------------------
943: 1:BoardData {
943: 1:  'description': ['No more Levels. You win!'],
943: 1:  'history': [],
943: 1:  'info': [],
943: 1:  'level': 17,
943: 1:  'questions': []
943: 1:}
943: 1:Scores: 62672
943: 1:Answer: message('StartNextLevel')
------------------------------------------
944: 1:BoardData {
944: 1:  'description': ['No more Levels. You win!'],
944: 1:  'history': [],
944: 1:  'info': [],
944: 1:  'level': 17,
944: 1:  'questions': []
944: 1:}
944: 1:Scores: 62672
944: 1:Answer: message('StartNextLevel')
------------------------------------------
945: 1:BoardData {
945: 1:  'description': ['No more Levels. You win!'],
945: 1:  'history': [],
945: 1:  'info': [],
945: 1:  'level': 17,
945: 1:  'questions': []
945: 1:}
945: 1:Scores: 62672
945: 1:Answer: message('StartNextLevel')
------------------------------------------
946: 1:BoardData {
946: 1:  'description': ['No more Levels. You win!'],
946: 1:  'history': [],
946: 1:  'info': [],
946: 1:  'level': 17,
946: 1:  'questions': []
946: 1:}
946: 1:Scores: 62672
946: 1:Answer: message('StartNextLevel')
------------------------------------------
947: 1:BoardData {
947: 1:  'description': ['No more Levels. You win!'],
947: 1:  'history': [],
947: 1:  'info': [],
947: 1:  'level': 17,
947: 1:  'questions': []
947: 1:}
947: 1:Scores: 62672
947: 1:Answer: message('StartNextLevel')
------------------------------------------
948: 1:BoardData {
948: 1:  'description': ['No more Levels. You win!'],
948: 1:  'history': [],
948: 1:  'info': [],
948: 1:  'level': 17,
948: 1:  'questions': []
948: 1:}
948: 1:Scores: 62672
948: 1:Answer: message('StartNextLevel')
------------------------------------------
949: 1:BoardData {
949: 1:  'description': ['No more Levels. You win!'],
949: 1:  'history': [],
949: 1:  'info': [],
949: 1:  'level': 17,
949: 1:  'questions': []
949: 1:}
949: 1:Scores: 62672
949: 1:Answer: message('StartNextLevel')
------------------------------------------
950: 1:BoardData {
950: 1:  'description': ['No more Levels. You win!'],
950: 1:  'history': [],
950: 1:  'info': [],
950: 1:  'level': 17,
950: 1:  'questions': []
950: 1:}
950: 1:Scores: 62672
950: 1:Answer: message('StartNextLevel')
------------------------------------------
951: 1:BoardData {
951: 1:  'description': ['No more Levels. You win!'],
951: 1:  'history': [],
951: 1:  'info': [],
951: 1:  'level': 17,
951: 1:  'questions': []
951: 1:}
951: 1:Scores: 62672
951: 1:Answer: message('StartNextLevel')
------------------------------------------
952: 1:BoardData {
952: 1:  'description': ['No more Levels. You win!'],
952: 1:  'history': [],
952: 1:  'info': [],
952: 1:  'level': 17,
952: 1:  'questions': []
952: 1:}
952: 1:Scores: 62672
952: 1:Answer: message('StartNextLevel')
------------------------------------------
953: 1:BoardData {
953: 1:  'description': ['No more Levels. You win!'],
953: 1:  'history': [],
953: 1:  'info': [],
953: 1:  'level': 17,
953: 1:  'questions': []
953: 1:}
953: 1:Scores: 62672
953: 1:Answer: message('StartNextLevel')
------------------------------------------
954: 1:BoardData {
954: 1:  'description': ['No more Levels. You win!'],
954: 1:  'history': [],
954: 1:  'info': [],
954: 1:  'level': 17,
954: 1:  'questions': []
954: 1:}
954: 1:Scores: 62672
954: 1:Answer: message('StartNextLevel')
------------------------------------------
955: 1:BoardData {
955: 1:  'description': ['No more Levels. You win!'],
955: 1:  'history': [],
955: 1:  'info': [],
955: 1:  'level': 17,
955: 1:  'questions': []
955: 1:}
955: 1:Scores: 62672
955: 1:Answer: message('StartNextLevel')
------------------------------------------
956: 1:BoardData {
956: 1:  'description': ['No more Levels. You win!'],
956: 1:  'history': [],
956: 1:  'info': [],
956: 1:  'level': 17,
956: 1:  'questions': []
956: 1:}
956: 1:Scores: 62672
956: 1:Answer: message('StartNextLevel')
------------------------------------------
957: 1:BoardData {
957: 1:  'description': ['No more Levels. You win!'],
957: 1:  'history': [],
957: 1:  'info': [],
957: 1:  'level': 17,
957: 1:  'questions': []
957: 1:}
957: 1:Scores: 62672
957: 1:Answer: message('StartNextLevel')
------------------------------------------
958: 1:BoardData {
958: 1:  'description': ['No more Levels. You win!'],
958: 1:  'history': [],
958: 1:  'info': [],
958: 1:  'level': 17,
958: 1:  'questions': []
958: 1:}
958: 1:Scores: 62672
958: 1:Answer: message('StartNextLevel')
------------------------------------------
959: 1:BoardData {
959: 1:  'description': ['No more Levels. You win!'],
959: 1:  'history': [],
959: 1:  'info': [],
959: 1:  'level': 17,
959: 1:  'questions': []
959: 1:}
959: 1:Scores: 62672
959: 1:Answer: message('StartNextLevel')
------------------------------------------
960: 1:BoardData {
960: 1:  'description': ['No more Levels. You win!'],
960: 1:  'history': [],
960: 1:  'info': [],
960: 1:  'level': 17,
960: 1:  'questions': []
960: 1:}
960: 1:Scores: 62672
960: 1:Answer: message('StartNextLevel')
------------------------------------------
961: 1:BoardData {
961: 1:  'description': ['No more Levels. You win!'],
961: 1:  'history': [],
961: 1:  'info': [],
961: 1:  'level': 17,
961: 1:  'questions': []
961: 1:}
961: 1:Scores: 62672
961: 1:Answer: message('StartNextLevel')
------------------------------------------
962: 1:BoardData {
962: 1:  'description': ['No more Levels. You win!'],
962: 1:  'history': [],
962: 1:  'info': [],
962: 1:  'level': 17,
962: 1:  'questions': []
962: 1:}
962: 1:Scores: 62672
962: 1:Answer: message('StartNextLevel')
------------------------------------------
963: 1:BoardData {
963: 1:  'description': ['No more Levels. You win!'],
963: 1:  'history': [],
963: 1:  'info': [],
963: 1:  'level': 17,
963: 1:  'questions': []
963: 1:}
963: 1:Scores: 62672
963: 1:Answer: message('StartNextLevel')
------------------------------------------
964: 1:BoardData {
964: 1:  'description': ['No more Levels. You win!'],
964: 1:  'history': [],
964: 1:  'info': [],
964: 1:  'level': 17,
964: 1:  'questions': []
964: 1:}
964: 1:Scores: 62672
964: 1:Answer: message('StartNextLevel')
------------------------------------------
965: 1:BoardData {
965: 1:  'description': ['No more Levels. You win!'],
965: 1:  'history': [],
965: 1:  'info': [],
965: 1:  'level': 17,
965: 1:  'questions': []
965: 1:}
965: 1:Scores: 62672
965: 1:Answer: message('StartNextLevel')
------------------------------------------
966: 1:BoardData {
966: 1:  'description': ['No more Levels. You win!'],
966: 1:  'history': [],
966: 1:  'info': [],
966: 1:  'level': 17,
966: 1:  'questions': []
966: 1:}
966: 1:Scores: 62672
966: 1:Answer: message('StartNextLevel')
------------------------------------------
967: 1:BoardData {
967: 1:  'description': ['No more Levels. You win!'],
967: 1:  'history': [],
967: 1:  'info': [],
967: 1:  'level': 17,
967: 1:  'questions': []
967: 1:}
967: 1:Scores: 62672
967: 1:Answer: message('StartNextLevel')
------------------------------------------
968: 1:BoardData {
968: 1:  'description': ['No more Levels. You win!'],
968: 1:  'history': [],
968: 1:  'info': [],
968: 1:  'level': 17,
968: 1:  'questions': []
968: 1:}
968: 1:Scores: 62672
968: 1:Answer: message('StartNextLevel')
------------------------------------------
969: 1:BoardData {
969: 1:  'description': ['No more Levels. You win!'],
969: 1:  'history': [],
969: 1:  'info': [],
969: 1:  'level': 17,
969: 1:  'questions': []
969: 1:}
969: 1:Scores: 62672
969: 1:Answer: message('StartNextLevel')
------------------------------------------
970: 1:BoardData {
970: 1:  'description': ['No more Levels. You win!'],
970: 1:  'history': [],
970: 1:  'info': [],
970: 1:  'level': 17,
970: 1:  'questions': []
970: 1:}
970: 1:Scores: 62672
970: 1:Answer: message('StartNextLevel')
------------------------------------------
971: 1:BoardData {
971: 1:  'description': ['No more Levels. You win!'],
971: 1:  'history': [],
971: 1:  'info': [],
971: 1:  'level': 17,
971: 1:  'questions': []
971: 1:}
971: 1:Scores: 62672
971: 1:Answer: message('StartNextLevel')
------------------------------------------
972: 1:BoardData {
972: 1:  'description': ['No more Levels. You win!'],
972: 1:  'history': [],
972: 1:  'info': [],
972: 1:  'level': 17,
972: 1:  'questions': []
972: 1:}
972: 1:Scores: 62672
972: 1:Answer: message('StartNextLevel')
------------------------------------------
973: 1:BoardData {
973: 1:  'description': ['No more Levels. You win!'],
973: 1:  'history': [],
973: 1:  'info': [],
973: 1:  'level': 17,
973: 1:  'questions': []
973: 1:}
973: 1:Scores: 62672
973: 1:Answer: message('StartNextLevel')
------------------------------------------
974: 1:BoardData {
974: 1:  'description': ['No more Levels. You win!'],
974: 1:  'history': [],
974: 1:  'info': [],
974: 1:  'level': 17,
974: 1:  'questions': []
974: 1:}
974: 1:Scores: 62672
974: 1:Answer: message('StartNextLevel')
------------------------------------------
975: 1:BoardData {
975: 1:  'description': ['No more Levels. You win!'],
975: 1:  'history': [],
975: 1:  'info': [],
975: 1:  'level': 17,
975: 1:  'questions': []
975: 1:}
975: 1:Scores: 62672
975: 1:Answer: message('StartNextLevel')
------------------------------------------
976: 1:BoardData {
976: 1:  'description': ['No more Levels. You win!'],
976: 1:  'history': [],
976: 1:  'info': [],
976: 1:  'level': 17,
976: 1:  'questions': []
976: 1:}
976: 1:Scores: 62672
976: 1:Answer: message('StartNextLevel')
------------------------------------------
977: 1:BoardData {
977: 1:  'description': ['No more Levels. You win!'],
977: 1:  'history': [],
977: 1:  'info': [],
977: 1:  'level': 17,
977: 1:  'questions': []
977: 1:}
977: 1:Scores: 62672
977: 1:Answer: message('StartNextLevel')
------------------------------------------
978: 1:BoardData {
978: 1:  'description': ['No more Levels. You win!'],
978: 1:  'history': [],
978: 1:  'info': [],
978: 1:  'level': 17,
978: 1:  'questions': []
978: 1:}
978: 1:Scores: 62672
978: 1:Answer: message('StartNextLevel')
------------------------------------------
979: 1:BoardData {
979: 1:  'description': ['No more Levels. You win!'],
979: 1:  'history': [],
979: 1:  'info': [],
979: 1:  'level': 17,
979: 1:  'questions': []
979: 1:}
979: 1:Scores: 62672
979: 1:Answer: message('StartNextLevel')
------------------------------------------
980: 1:BoardData {
980: 1:  'description': ['No more Levels. You win!'],
980: 1:  'history': [],
980: 1:  'info': [],
980: 1:  'level': 17,
980: 1:  'questions': []
980: 1:}
980: 1:Scores: 62672
980: 1:Answer: message('StartNextLevel')
------------------------------------------
981: 1:BoardData {
981: 1:  'description': ['No more Levels. You win!'],
981: 1:  'history': [],
981: 1:  'info': [],
981: 1:  'level': 17,
981: 1:  'questions': []
981: 1:}
981: 1:Scores: 62672
981: 1:Answer: message('StartNextLevel')
------------------------------------------
982: 1:BoardData {
982: 1:  'description': ['No more Levels. You win!'],
982: 1:  'history': [],
982: 1:  'info': [],
982: 1:  'level': 17,
982: 1:  'questions': []
982: 1:}
982: 1:Scores: 62672
982: 1:Answer: message('StartNextLevel')
------------------------------------------
983: 1:BoardData {
983: 1:  'description': ['No more Levels. You win!'],
983: 1:  'history': [],
983: 1:  'info': [],
983: 1:  'level': 17,
983: 1:  'questions': []
983: 1:}
983: 1:Scores: 62672
983: 1:Answer: message('StartNextLevel')
------------------------------------------
984: 1:BoardData {
984: 1:  'description': ['No more Levels. You win!'],
984: 1:  'history': [],
984: 1:  'info': [],
984: 1:  'level': 17,
984: 1:  'questions': []
984: 1:}
984: 1:Scores: 62672
984: 1:Answer: message('StartNextLevel')
------------------------------------------
985: 1:BoardData {
985: 1:  'description': ['No more Levels. You win!'],
985: 1:  'history': [],
985: 1:  'info': [],
985: 1:  'level': 17,
985: 1:  'questions': []
985: 1:}
985: 1:Scores: 62672
985: 1:Answer: message('StartNextLevel')
------------------------------------------
986: 1:BoardData {
986: 1:  'description': ['No more Levels. You win!'],
986: 1:  'history': [],
986: 1:  'info': [],
986: 1:  'level': 17,
986: 1:  'questions': []
986: 1:}
986: 1:Scores: 62672
986: 1:Answer: message('StartNextLevel')
------------------------------------------
987: 1:BoardData {
987: 1:  'description': ['No more Levels. You win!'],
987: 1:  'history': [],
987: 1:  'info': [],
987: 1:  'level': 17,
987: 1:  'questions': []
987: 1:}
987: 1:Scores: 62672
987: 1:Answer: message('StartNextLevel')
------------------------------------------
988: 1:BoardData {
988: 1:  'description': ['No more Levels. You win!'],
988: 1:  'history': [],
988: 1:  'info': [],
988: 1:  'level': 17,
988: 1:  'questions': []
988: 1:}
988: 1:Scores: 62672
988: 1:Answer: message('StartNextLevel')
------------------------------------------
989: 1:BoardData {
989: 1:  'description': ['No more Levels. You win!'],
989: 1:  'history': [],
989: 1:  'info': [],
989: 1:  'level': 17,
989: 1:  'questions': []
989: 1:}
989: 1:Scores: 62672
989: 1:Answer: message('StartNextLevel')
------------------------------------------
990: 1:BoardData {
990: 1:  'description': ['No more Levels. You win!'],
990: 1:  'history': [],
990: 1:  'info': [],
990: 1:  'level': 17,
990: 1:  'questions': []
990: 1:}
990: 1:Scores: 62672
990: 1:Answer: message('StartNextLevel')
------------------------------------------
991: 1:BoardData {
991: 1:  'description': ['No more Levels. You win!'],
991: 1:  'history': [],
991: 1:  'info': [],
991: 1:  'level': 17,
991: 1:  'questions': []
991: 1:}
991: 1:Scores: 62672
991: 1:Answer: message('StartNextLevel')
------------------------------------------
992: 1:BoardData {
992: 1:  'description': ['No more Levels. You win!'],
992: 1:  'history': [],
992: 1:  'info': [],
992: 1:  'level': 17,
992: 1:  'questions': []
992: 1:}
992: 1:Scores: 62672
992: 1:Answer: message('StartNextLevel')
------------------------------------------
993: 1:BoardData {
993: 1:  'description': ['No more Levels. You win!'],
993: 1:  'history': [],
993: 1:  'info': [],
993: 1:  'level': 17,
993: 1:  'questions': []
993: 1:}
993: 1:Scores: 62672
993: 1:Answer: message('StartNextLevel')
------------------------------------------
994: 1:BoardData {
994: 1:  'description': ['No more Levels. You win!'],
994: 1:  'history': [],
994: 1:  'info': [],
994: 1:  'level': 17,
994: 1:  'questions': []
994: 1:}
994: 1:Scores: 62672
994: 1:Answer: message('StartNextLevel')
------------------------------------------
995: 1:BoardData {
995: 1:  'description': ['No more Levels. You win!'],
995: 1:  'history': [],
995: 1:  'info': [],
995: 1:  'level': 17,
995: 1:  'questions': []
995: 1:}
995: 1:Scores: 62672
995: 1:Answer: message('StartNextLevel')
------------------------------------------
996: 1:BoardData {
996: 1:  'description': ['No more Levels. You win!'],
996: 1:  'history': [],
996: 1:  'info': [],
996: 1:  'level': 17,
996: 1:  'questions': []
996: 1:}
996: 1:Scores: 62672
996: 1:Answer: message('StartNextLevel')
------------------------------------------
997: 1:BoardData {
997: 1:  'description': ['No more Levels. You win!'],
997: 1:  'history': [],
997: 1:  'info': [],
997: 1:  'level': 17,
997: 1:  'questions': []
997: 1:}
997: 1:Scores: 62672
997: 1:Answer: message('StartNextLevel')
------------------------------------------
998: 1:BoardData {
998: 1:  'description': ['No more Levels. You win!'],
998: 1:  'history': [],
998: 1:  'info': [],
998: 1:  'level': 17,
998: 1:  'questions': []
998: 1:}
998: 1:Scores: 62672
998: 1:Answer: message('StartNextLevel')
------------------------------------------
999: 1:BoardData {
999: 1:  'description': ['No more Levels. You win!'],
999: 1:  'history': [],
999: 1:  'info': [],
999: 1:  'level': 17,
999: 1:  'questions': []
999: 1:}
999: 1:Scores: 62672
999: 1:Answer: message('StartNextLevel')
------------------------------------------
1000: 1:BoardData {
1000: 1:  'description': ['No more Levels. You win!'],
1000: 1:  'history': [],
1000: 1:  'info': [],
1000: 1:  'level': 17,
1000: 1:  'questions': []
1000: 1:}
1000: 1:Scores: 62672
1000: 1:Answer: message('StartNextLevel')
------------------------------------------